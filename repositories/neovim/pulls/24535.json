{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24535/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24535/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/24535"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24535"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24535/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/70a7995aa676f760262bdde5448e915223bacb55"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4813,
            "forks_count": 4813,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1656,
            "open_issues_count": 1656,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-08-13T22:55:10Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248136,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 68455,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-08-14T01:46:07Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 68455,
            "watchers_count": 68455,
            "web_commit_signoff_required": false
        },
        "sha": "5a25dcc5a4c73f50902432e32335ab073950cceb",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "In https://github.com/neovim/neovim/pull/24469#issuecomment-1651992691, @stasjok observed that in the current implementation, if one LSP client disconnects from a buffer, then inlay_hints and diagnostics will be disabled.\r\n\r\nIn this PR I've tried to fix that by examining the other LSP clients attached to the current buffer in the `LspDetach` handler. NB the handler is called *before* the client detaches, so we expect the number of attached clients to be 1 if this is the last client in the process of disconnecting.\r\n\r\nI also used a similar method in each feature's refresh logic to prevent making calls if no attached clients support the method. This can happen if e.g. you enable inlay hints on a buffer that doesn't have any clients connected that support it.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1282194292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1282194292"
                }
            },
            "author_association": "MEMBER",
            "body": "There was just another PR merged that adds constants in lsp.protocol.Methods",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-02T17:03:14Z",
            "diff_hunk": "@@ -11,6 +11,8 @@ local augroup = api.nvim_create_augroup('vim_lsp_diagnostic', {})\n \n local DEFAULT_CLIENT_ID = -1\n \n+local PULL_DIAGNOSTIC_METHOD = 'textDocument/diagnostic'",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1282194292",
            "id": 1282194292,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5MbLt0",
            "original_commit_id": "6a9520a0c8c8e0bae4ae7f43bfd4e1df4a1c0deb",
            "original_line": 14,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1559478831,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1282194292/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-02T17:05:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1282194292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1282195203"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1282195203"
                }
            },
            "author_association": "MEMBER",
            "body": "get_clients supports a `method` filter that can be used instead of this new method",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-02T17:04:14Z",
            "diff_hunk": "@@ -2229,6 +2230,22 @@ function M._refresh(method, opts)\n   end\n end\n \n+---@private\n+--- Get clients attached to a buffer that support a given method.\n+---\n+---@param bufnr integer buffer number\n+---@param method string LSP method\n+function M._get_clients_with_method(bufnr, method)",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1282195203",
            "id": 1282195203,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5MbL8D",
            "original_commit_id": "6a9520a0c8c8e0bae4ae7f43bfd4e1df4a1c0deb",
            "original_line": 2238,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 1559478831,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1282195203/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-02T17:05:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1282195203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1283482966"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1283482966"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yay for using the new string constants :D",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-03T17:00:51Z",
            "diff_hunk": "@@ -11,6 +11,8 @@ local augroup = api.nvim_create_augroup('vim_lsp_diagnostic', {})\n \n local DEFAULT_CLIENT_ID = -1\n \n+local PULL_DIAGNOSTIC_METHOD = protocol.Methods.textDocument_diagnostic",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1283482966",
            "id": 1283482966,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5MgGVW",
            "original_commit_id": "7d9310a9d2fb4faebcd32bedc9fb99fde11a5dc1",
            "original_line": 14,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1561519185,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1283482966/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-03T17:00:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1283482966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1284406873"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284406873"
                }
            },
            "author_association": "MEMBER",
            "body": "Can this check be added to `util._refresh` instead? Could be an option on `opts` if there is a case(?) where it makes sense to request things not supported by clients...",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-04T13:11:47Z",
            "diff_hunk": "@@ -408,6 +408,17 @@ local function disable(bufnr)\n   clear(bufnr)\n end\n \n+--- Refresh diagnostics, only if we have attached clients that support it\n+---@param bufnr (integer) buffer number\n+---@param opts table | nil Additional options to pass to util_refresh\n+---@private\n+local function _refresh(bufnr, opts)\n+  if #vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_diagnostic }) > 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1284406873",
            "id": 1284406873,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Mjn5Z",
            "original_commit_id": "554361ad0a9ea3ec9cd642fec49690934ad82023",
            "original_line": 416,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1562845633,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284406873/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-04T13:11:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284406873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1284408233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284408233"
                }
            },
            "author_association": "MEMBER",
            "body": "same quesiton here",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-04T13:13:09Z",
            "diff_hunk": "@@ -131,6 +131,15 @@ local function disable(bufnr)\n   end\n end\n \n+--- Refresh inlay hints, only if we have attached clients that support it\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@private\n+local function _refresh(bufnr)\n+  if #vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_inlayHint }) > 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1284408233",
            "id": 1284408233,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5MjoOp",
            "original_commit_id": "554361ad0a9ea3ec9cd642fec49690934ad82023",
            "original_line": 138,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1562847856,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284408233/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-04T13:13:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284408233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1284443287"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284443287"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "yeah, good point. I'll move this check into `util._refresh`",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-04T13:43:15Z",
            "diff_hunk": "@@ -408,6 +408,17 @@ local function disable(bufnr)\n   clear(bufnr)\n end\n \n+--- Refresh diagnostics, only if we have attached clients that support it\n+---@param bufnr (integer) buffer number\n+---@param opts table | nil Additional options to pass to util_refresh\n+---@private\n+local function _refresh(bufnr, opts)\n+  if #vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_diagnostic }) > 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1284443287",
            "id": 1284443287,
            "in_reply_to_id": 1284406873,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5MjwyX",
            "original_commit_id": "554361ad0a9ea3ec9cd642fec49690934ad82023",
            "original_line": 416,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1562902833,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284443287/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-04T13:43:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284443287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1284569561"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284569561"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, this doesn't always seem to happen.\r\n\r\nI think I need to check `vim.lsp.get_clients` and filter out the client that is detaching, and then see if any remain.",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-04T15:32:08Z",
            "diff_hunk": "@@ -449,7 +460,12 @@ function M._enable(bufnr)\n     api.nvim_create_autocmd('LspDetach', {\n       buffer = bufnr,\n       callback = function()\n-        disable(bufnr)\n+        -- Only disable if there are no more clients with diagnostics attached\n+        -- LspDetach is called *before* the client disconnects, so the number of clients connected\n+        -- to this buffer that support diagnostics will be 1 if we're the last client\n+        if #vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_diagnostic }) == 1 then",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1284569561",
            "id": 1284569561,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5MkPnZ",
            "original_commit_id": "554361ad0a9ea3ec9cd642fec49690934ad82023",
            "original_line": 466,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1563113282,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284569561/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-04T15:32:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284569561",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1287386465"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287386465"
                }
            },
            "author_association": "MEMBER",
            "body": "vim.iter may be worth using here (and in inlay_hint.lua).\r\n\r\n```lua\r\nlocal clients = vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_diagnostic })\r\nlocal remaining = vim.iter(clients):fold(0, function(acc, c)\r\n  return (c.id == args.data.client_id) and i or i + 1\r\nend)\r\n\r\nif remaining == 0 then\r\n  disable(bufnr)\r\nend\r\n```",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-08T16:33:14Z",
            "diff_hunk": "@@ -448,8 +457,18 @@ function M._enable(bufnr)\n \n     api.nvim_create_autocmd('LspDetach', {\n       buffer = bufnr,\n-      callback = function()\n-        disable(bufnr)\n+      callback = function(args)\n+        local remaining_client_count = 0\n+        for _, client in\n+          pairs(vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_diagnostic }))\n+        do\n+          if client.id ~= args.data.client_id then\n+            remaining_client_count = remaining_client_count + 1\n+          end\n+        end\n+        if remaining_client_count == 0 then\n+          disable(bufnr)\n+        end",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1287386465",
            "id": 1287386465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Mu_Vh",
            "original_commit_id": "bf91331d35267951e9a883803a0fc663019c45c0",
            "original_line": 470,
            "original_position": 51,
            "original_start_line": 461,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1567717671,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287386465/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-08-08T16:33:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287386465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1287401590"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287401590"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "\r\n> vim.iter may be worth using here (and in inlay_hint.lua).\r\n\r\nMaybe like this?\r\n\r\n```lua\r\nlocal clients = vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_diagnostic })\r\nif vim.iter(clients):any(function(client) return client.id ~= args.data.client_id end) then\r\n  disable(bufnr)\r\nend\r\n```",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-08T16:47:20Z",
            "diff_hunk": "@@ -448,8 +457,18 @@ function M._enable(bufnr)\n \n     api.nvim_create_autocmd('LspDetach', {\n       buffer = bufnr,\n-      callback = function()\n-        disable(bufnr)\n+      callback = function(args)\n+        local remaining_client_count = 0\n+        for _, client in\n+          pairs(vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_diagnostic }))\n+        do\n+          if client.id ~= args.data.client_id then\n+            remaining_client_count = remaining_client_count + 1\n+          end\n+        end\n+        if remaining_client_count == 0 then\n+          disable(bufnr)\n+        end",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1287401590",
            "id": 1287401590,
            "in_reply_to_id": 1287386465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5MvDB2",
            "original_commit_id": "bf91331d35267951e9a883803a0fc663019c45c0",
            "original_line": 470,
            "original_position": 51,
            "original_start_line": 461,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1567740180,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287401590/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-08-08T16:47:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287401590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1353637?v=4",
                "events_url": "https://api.github.com/users/stasjok/events{/privacy}",
                "followers_url": "https://api.github.com/users/stasjok/followers",
                "following_url": "https://api.github.com/users/stasjok/following{/other_user}",
                "gists_url": "https://api.github.com/users/stasjok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stasjok",
                "id": 1353637,
                "login": "stasjok",
                "node_id": "MDQ6VXNlcjEzNTM2Mzc=",
                "organizations_url": "https://api.github.com/users/stasjok/orgs",
                "received_events_url": "https://api.github.com/users/stasjok/received_events",
                "repos_url": "https://api.github.com/users/stasjok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stasjok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stasjok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stasjok"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1287508453"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287508453"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That's much nicer, thank you!",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-08T18:33:07Z",
            "diff_hunk": "@@ -448,8 +457,18 @@ function M._enable(bufnr)\n \n     api.nvim_create_autocmd('LspDetach', {\n       buffer = bufnr,\n-      callback = function()\n-        disable(bufnr)\n+      callback = function(args)\n+        local remaining_client_count = 0\n+        for _, client in\n+          pairs(vim.lsp.get_clients({ bufnr = bufnr, method = ms.textDocument_diagnostic }))\n+        do\n+          if client.id ~= args.data.client_id then\n+            remaining_client_count = remaining_client_count + 1\n+          end\n+        end\n+        if remaining_client_count == 0 then\n+          disable(bufnr)\n+        end",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1287508453",
            "id": 1287508453,
            "in_reply_to_id": 1287386465,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5MvdHl",
            "original_commit_id": "bf91331d35267951e9a883803a0fc663019c45c0",
            "original_line": 470,
            "original_position": 51,
            "original_start_line": 461,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1567910360,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287508453/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-08-08T18:33:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1287508453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1288423847"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1288423847"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  if not (opts.force or false) and #vim.lsp.get_clients({ bufnr = bufnr, method = method }) == 0 then\r\n```",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-09T12:43:07Z",
            "diff_hunk": "@@ -2196,12 +2197,19 @@ end\n ---@param opts (nil|table) Optional arguments\n ---  - bufnr (integer, default: 0): Buffer to refresh\n ---  - only_visible (boolean, default: false): Whether to only refresh for the visible regions of the buffer\n+---  - force (boolean, default: false): Whether to force a refresh even if no clients support the method\n function M._refresh(method, opts)\n   opts = opts or {}\n   local bufnr = opts.bufnr\n   if bufnr == nil or bufnr == 0 then\n     bufnr = api.nvim_get_current_buf()\n   end\n+\n+  local force = opts.force or false\n+  if (not force) and #vim.lsp.get_clients({ bufnr = bufnr, method = method }) == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1288423847",
            "id": 1288423847,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5My8mn",
            "original_commit_id": "a843cc29445babd1261d6db62f7d70d8ccbcae69",
            "original_line": 2209,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 1569465692,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1288423847/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-09T12:43:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1288423847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24535#discussion_r1292743380"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24535"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292743380"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n  local clients = vim.lsp.get_clients({ bufnr = bufnr, method = method, id = opts.client_id })\r\n```",
            "commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "created_at": "2023-08-13T10:06:14Z",
            "diff_hunk": "@@ -2192,40 +2193,66 @@ end\n ---@private\n --- Request updated LSP information for a buffer.\n ---\n+---@class RefreshOptions\n+---@field bufnr integer? Buffer to refresh (default: 0)\n+---@field only_visible? boolean Whether to only refresh for the visible regions of the buffer (default: false)\n+---@field force? boolean Whether to force a refresh even if no clients support the method (default: false)\n+---@field client_id? integer Client ID to refresh (default: all clients)\n+--\n ---@param method string LSP method to call\n----@param opts (nil|table) Optional arguments\n----  - bufnr (integer, default: 0): Buffer to refresh\n----  - only_visible (boolean, default: false): Whether to only refresh for the visible regions of the buffer\n+---@param opts? RefreshOptions Options table\n function M._refresh(method, opts)\n   opts = opts or {}\n   local bufnr = opts.bufnr\n   if bufnr == nil or bufnr == 0 then\n     bufnr = api.nvim_get_current_buf()\n   end\n-  local only_visible = opts.only_visible or false\n-  for _, window in ipairs(api.nvim_list_wins()) do\n-    if api.nvim_win_get_buf(window) == bufnr then\n-      local first = vim.fn.line('w0', window)\n-      local last = vim.fn.line('w$', window)\n-      local params = {\n-        textDocument = M.make_text_document_params(bufnr),\n-        range = {\n-          start = { line = first - 1, character = 0 },\n-          ['end'] = { line = last, character = 0 },\n-        },\n-      }\n-      vim.lsp.buf_request(bufnr, method, params)\n+\n+  local clients = {}\n+  if opts.client_id then\n+    local client = vim.lsp.get_client_by_id(opts.client_id)\n+    if not (client and client.supports_method(method)) then\n+      return\n     end\n+    vim.list_extend(clients, { client })\n+  else\n+    vim.list_extend(clients, vim.lsp.get_clients({ bufnr = bufnr, method = method }))\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/24535#discussion_r1292743380",
            "id": 1292743380,
            "line": 2220,
            "node_id": "PRRC_kwDOAPphoM5NDbLU",
            "original_commit_id": "70a7995aa676f760262bdde5448e915223bacb55",
            "original_line": 2220,
            "original_position": 52,
            "original_start_line": 2211,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 52,
            "pull_request_review_id": 1575765673,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292743380/reactions"
            },
            "side": "RIGHT",
            "start_line": 2211,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-08-13T10:06:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292743380",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1353637?v=4",
                "events_url": "https://api.github.com/users/stasjok/events{/privacy}",
                "followers_url": "https://api.github.com/users/stasjok/followers",
                "following_url": "https://api.github.com/users/stasjok/following{/other_user}",
                "gists_url": "https://api.github.com/users/stasjok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stasjok",
                "id": 1353637,
                "login": "stasjok",
                "node_id": "MDQ6VXNlcjEzNTM2Mzc=",
                "organizations_url": "https://api.github.com/users/stasjok/orgs",
                "received_events_url": "https://api.github.com/users/stasjok/received_events",
                "repos_url": "https://api.github.com/users/stasjok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stasjok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stasjok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stasjok"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "For my own learning: Does this take into account dynamic registration as well?",
            "created_at": "2023-08-03T17:01:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1664330652",
            "id": 1664330652,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5jM6uc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1664330652/reactions"
            },
            "updated_at": "2023-08-03T17:01:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1664330652",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> For my own learning: Does this take into account dynamic registration as well?\r\n\r\nI'm not sure yet. Do you know of a good way to test dynamic registration? What servers currently support it?",
            "created_at": "2023-08-03T17:33:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1664370215",
            "id": 1664370215,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5jNEYn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1664370215/reactions"
            },
            "updated_at": "2023-08-03T17:33:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1664370215",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I'm not sure yet. Do you know of a good way to test dynamic registration? What servers currently support it?\r\n\r\nI'm honestly not sure either of how to test it either lol. It seems like Solargraph supports dynamic capabilities based on [this discussion in Lazy](https://github.com/LazyVim/LazyVim/discussions/990).",
            "created_at": "2023-08-03T17:43:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1664383392",
            "id": 1664383392,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5jNHmg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1664383392/reactions"
            },
            "updated_at": "2023-08-03T17:43:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1664383392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "When testing this out with some extra logging, I noticed that we're sending multiple requests for inlay_hints / diagnostics each time the document changes.\r\n\r\nThis happens because the `LspNotify` autocmd gets executed once per client notification. In the inlay_hints / diagnostics handlers, we end up calling `util._refresh`, which calls `vim.lsp.buf_request`, which sends a request to all connected clients that support the given method.\r\n\r\nThe result is that each client gets notified N times, where N is the number of clients connected that support the given method.\r\n",
            "created_at": "2023-08-10T01:31:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1672405251",
            "id": 1672405251,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5jruED",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 2,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672405251/reactions"
            },
            "updated_at": "2023-08-10T01:31:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1672405251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I can think of a few solutions here:\r\n\r\n1. Change when `LspNotify` is triggered. Instead of triggering it per client [here](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp.lua#L1584), trigger it after all clients have been notified. In the payload, `data.client_id` could be changed to `data.client_ids`.\r\n2. Modify `vim.lsp.buf_request` to specify which client to send the request to\r\n3. Introduce something like `vim.lsp.buf_request_single` to send a request to a single client\r\n4. Implement debouncing logic inside `LspNofify` handlers. Ensure that we only call `vim.lsp.buf_request` once per X milliseconds. I'm not really a fan of this one.\r\n\r\nAny other ideas, or thoughts on the above?",
            "created_at": "2023-08-10T13:20:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1673214232",
            "id": 1673214232,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5juzkY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1673214232/reactions"
            },
            "updated_at": "2023-08-10T13:20:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1673214232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> * Modify `vim.lsp.buf_request` to specify which client to send the request to\r\n> * Introduce something like `vim.lsp.buf_request_single` to send a request to a single client\r\n\r\nThere is a `request()` method on a client object for that. For example, I think you can do something like\r\n```lua\r\nlocal client = vim.lsp.get_client_by_id(data.client_id)\r\nif client.supports_method(_method_) then\r\n  client.request(_method_, params, _, bufnr)\r\nend\r\n```",
            "created_at": "2023-08-10T14:13:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1673303832",
            "id": 1673303832,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5jvJcY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1673303832/reactions"
            },
            "updated_at": "2023-08-10T14:14:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1673303832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1353637?v=4",
                "events_url": "https://api.github.com/users/stasjok/events{/privacy}",
                "followers_url": "https://api.github.com/users/stasjok/followers",
                "following_url": "https://api.github.com/users/stasjok/following{/other_user}",
                "gists_url": "https://api.github.com/users/stasjok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stasjok",
                "id": 1353637,
                "login": "stasjok",
                "node_id": "MDQ6VXNlcjEzNTM2Mzc=",
                "organizations_url": "https://api.github.com/users/stasjok/orgs",
                "received_events_url": "https://api.github.com/users/stasjok/received_events",
                "repos_url": "https://api.github.com/users/stasjok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stasjok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stasjok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stasjok"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > * Modify `vim.lsp.buf_request` to specify which client to send the request to\r\n> > * Introduce something like `vim.lsp.buf_request_single` to send a request to a single client\r\n> \r\n> There is a `request()` method on a client object for that. For example, I think you can do something like\r\n> \r\n> ```lua\r\n> local client = vim.lsp.get_client_by_id(data.client_id)\r\n> if client.supports_method(_method_) then\r\n>   client.request(_method_, params, _, bufnr)\r\n> end\r\n> ```\r\n\r\nYes, that may be the best solution. I was worried about needing to re-implement some of the request tracking / cancellation logic from `vim.lsp.buf_request`, but I don't think that's needed here.",
            "created_at": "2023-08-10T14:33:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1673339776",
            "id": 1673339776,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5jvSOA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1673339776/reactions"
            },
            "updated_at": "2023-08-10T14:33:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1673339776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I believe I've fixed the issue with the LSP clients being triggered multiple times per change. I adopted @stasjok's suggestion and call `client.request` directly.\r\n\r\nI will be unable to address any questions or feedback for the next week or so.",
            "created_at": "2023-08-12T16:02:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1675978673",
            "id": 1675978673,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5j5Wex",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675978673/reactions"
            },
            "updated_at": "2023-08-12T16:02:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675978673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hey, I'm not a maintainer here, so you can ignore my comments, but here is my input:\r\n\r\n1) Is `_refresh()` helper functions are adding much value instead of just `utils._refresh(ms.textDocument_inlayHint, { bufnr=bufnr })`?\r\n2) In `utils._refresh()` you should be able to just:\r\n```lua\r\nlocal clients = vim.lsp.get_clients({ id = opts.client_id, bufnr = bufnr, method = method })\r\n```",
            "created_at": "2023-08-13T09:57:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/24535#issuecomment-1676303851",
            "id": 1676303851,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
            "node_id": "IC_kwDOAPphoM5j6l3r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1676303851/reactions"
            },
            "updated_at": "2023-08-13T09:57:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1676303851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1353637?v=4",
                "events_url": "https://api.github.com/users/stasjok/events{/privacy}",
                "followers_url": "https://api.github.com/users/stasjok/followers",
                "following_url": "https://api.github.com/users/stasjok/following{/other_user}",
                "gists_url": "https://api.github.com/users/stasjok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stasjok",
                "id": 1353637,
                "login": "stasjok",
                "node_id": "MDQ6VXNlcjEzNTM2Mzc=",
                "organizations_url": "https://api.github.com/users/stasjok/orgs",
                "received_events_url": "https://api.github.com/users/stasjok/received_events",
                "repos_url": "https://api.github.com/users/stasjok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stasjok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stasjok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stasjok"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24535/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/24535/commits",
    "created_at": "2023-08-02T16:51:55Z",
    "diff_url": "https://github.com/neovim/neovim/pull/24535.diff",
    "draft": false,
    "head": {
        "label": "catlee:catlee/client_detach_count",
        "ref": "catlee/client_detach_count",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/catlee/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/catlee/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/catlee/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/catlee/neovim/branches{/branch}",
            "clone_url": "https://github.com/catlee/neovim.git",
            "collaborators_url": "https://api.github.com/repos/catlee/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/catlee/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/catlee/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/catlee/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/catlee/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/catlee/neovim/contributors",
            "created_at": "2018-04-24T00:20:13Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/catlee/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/catlee/neovim/downloads",
            "events_url": "https://api.github.com/repos/catlee/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/catlee/neovim/forks",
            "full_name": "catlee/neovim",
            "git_commits_url": "https://api.github.com/repos/catlee/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/catlee/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/catlee/neovim/git/tags{/sha}",
            "git_url": "git://github.com/catlee/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://salt.bountysource.com/teams/neovim",
            "hooks_url": "https://api.github.com/repos/catlee/neovim/hooks",
            "html_url": "https://github.com/catlee/neovim",
            "id": 130772562,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/catlee/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/catlee/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/catlee/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/catlee/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/catlee/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/catlee/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/catlee/neovim/merges",
            "milestones_url": "https://api.github.com/repos/catlee/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMzA3NzI1NjI=",
            "notifications_url": "https://api.github.com/repos/catlee/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/catlee/neovim/pulls{/number}",
            "pushed_at": "2023-08-12T14:55:59Z",
            "releases_url": "https://api.github.com/repos/catlee/neovim/releases{/id}",
            "size": 245208,
            "ssh_url": "git@github.com:catlee/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/catlee/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/catlee/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/catlee/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/catlee/neovim/subscription",
            "svn_url": "https://github.com/catlee/neovim",
            "tags_url": "https://api.github.com/repos/catlee/neovim/tags",
            "teams_url": "https://api.github.com/repos/catlee/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/catlee/neovim/git/trees{/sha}",
            "updated_at": "2023-06-23T02:21:01Z",
            "url": "https://api.github.com/repos/catlee/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "70a7995aa676f760262bdde5448e915223bacb55",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
            "events_url": "https://api.github.com/users/catlee/events{/privacy}",
            "followers_url": "https://api.github.com/users/catlee/followers",
            "following_url": "https://api.github.com/users/catlee/following{/other_user}",
            "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/catlee",
            "id": 54458,
            "login": "catlee",
            "node_id": "MDQ6VXNlcjU0NDU4",
            "organizations_url": "https://api.github.com/users/catlee/orgs",
            "received_events_url": "https://api.github.com/users/catlee/received_events",
            "repos_url": "https://api.github.com/users/catlee/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/catlee"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/24535",
    "id": 1460135670,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24535",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "ca585d0e860fe42e5a277e28d5c56a9b12f53089",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5XB-b2",
    "number": 24535,
    "patch_url": "https://github.com/neovim/neovim/pull/24535.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
            "events_url": "https://api.github.com/users/folke/events{/privacy}",
            "followers_url": "https://api.github.com/users/folke/followers",
            "following_url": "https://api.github.com/users/folke/following{/other_user}",
            "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/folke",
            "id": 292349,
            "login": "folke",
            "node_id": "MDQ6VXNlcjI5MjM0OQ==",
            "organizations_url": "https://api.github.com/users/folke/orgs",
            "received_events_url": "https://api.github.com/users/folke/received_events",
            "repos_url": "https://api.github.com/users/folke/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/folke"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/24535/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/70a7995aa676f760262bdde5448e915223bacb55",
    "title": "fix(lsp): only disable inlay hints / diagnostics if no other clients are connected",
    "updated_at": "2023-08-13T10:06:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/24535",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
        "events_url": "https://api.github.com/users/catlee/events{/privacy}",
        "followers_url": "https://api.github.com/users/catlee/followers",
        "following_url": "https://api.github.com/users/catlee/following{/other_user}",
        "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/catlee",
        "id": 54458,
        "login": "catlee",
        "node_id": "MDQ6VXNlcjU0NDU4",
        "organizations_url": "https://api.github.com/users/catlee/orgs",
        "received_events_url": "https://api.github.com/users/catlee/received_events",
        "repos_url": "https://api.github.com/users/catlee/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/catlee"
    }
}