{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/21586/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21586/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/21586"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/21586"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21586/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5033,
            "forks_count": 5033,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1706,
            "open_issues_count": 1706,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-05T00:40:48Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 243231,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71479,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-05T01:33:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71479,
            "watchers_count": 71479,
            "web_commit_signoff_required": false
        },
        "sha": "2aabe9b85870912b9eb8fe2ced0c21544de66f58",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This updates the code generation scripts to be deterministic, which in turn leads to reproducible binaries.\r\n\r\nUnfortunately this is incomplete: the exported function (funcs_metadata.generated.h) and ui event (ui_events_metadata.generated.h) metadata have some mpack'ed tables, which looks more tricky.\r\n\r\nAs a temporary workaround, this PR introduces a PRG_GEN_LUA cmake setting to specify a different lua for those parts of code generation, so you could plug in a modified build of luajit that preserves table order. This would be something to fix later.\r\n\r\nThis is a continuation of #20355\r\n\r\nCo-Authored-By: dundargoc <gocdundar@gmail.com>\r\nCo-Authored-By: Arnout Engelen <arnout@bzzt.net>",
    "closed_at": "2023-01-23T09:26:47Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059490527"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059490527"
                }
            },
            "author_association": "MEMBER",
            "body": "similar to what's discussed in https://github.com/neovim/neovim/pull/20355#discussion_r980511837 , can the root cause be fixed instead of sorting at the \"leaf logic\" here?\r\n\r\nSimilar question for LUA_GEN_PRG",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2022-12-30T18:43:30Z",
            "diff_hunk": "@@ -112,10 +112,19 @@ for au, _ in pairs(auevents.aliases) do\n   end\n end\n \n+local function sorted_keys(tab)\n+    local result = {}\n+    for key, _ in pairs(tab) do\n+        table.insert(result, key)\n+    end\n+    table.sort(result)\n+    return result\n+end\n+\n local nvimau_start = 'syn keyword nvimAutoEvent contained '\n w('\\n\\n' .. nvimau_start)\n \n-for au, _ in pairs(auevents.nvim_specific) do\n+for _, au in ipairs(sorted_keys(auevents.nvim_specific)) do",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059490527",
            "id": 1059490527,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4_Jorf",
            "original_commit_id": "74bd537a6494a292edc3a05c2e62215fc06d1f98",
            "original_line": 127,
            "original_position": 17,
            "original_start_line": null,
            "path": "scripts/genvimvim.lua",
            "position": null,
            "pull_request_review_id": 1233216641,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059490527/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-30T18:43:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059490527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059491126"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059491126"
                }
            },
            "author_association": "MEMBER",
            "body": "If this unblocks you then perhaps it's ok as a temporary workaround, but please leave a note at https://github.com/neovim/neovim/issues/20124 and the commit message, explaining the steps needed to unwind this temporary workaround. It looks like the steps are : \r\n\r\n1. fix the ordering of msgpack'd data in `funcs_metadata.generated.h` and `ui_events_metadata.generated.h`\r\n2. ?",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2022-12-30T18:46:29Z",
            "diff_hunk": "@@ -598,6 +598,17 @@ endif()\n \n message(STATUS \"Using Lua interpreter: ${LUA_PRG}\")\n \n+# Some of the code generation still relies on stable table ordering in order to\n+# produce reproducible output - specifically the msgpack'ed data in\n+# funcs_metadata.generated.h and ui_events_metadata.generated.h. This should\n+# ideally be fixed in the generators, but until then as a workaround you may provide",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059491126",
            "id": 1059491126,
            "line": 263,
            "node_id": "PRRC_kwDOAPphoM4_Jo02",
            "original_commit_id": "74bd537a6494a292edc3a05c2e62215fc06d1f98",
            "original_line": 263,
            "original_position": 7,
            "original_start_line": null,
            "path": "CMakeLists.txt",
            "position": 7,
            "pull_request_review_id": 1233217423,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059491126/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-30T18:46:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059491126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059491445"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059491445"
                }
            },
            "author_association": "MEMBER",
            "body": "btw, does this _actually_ unblock you (e.g. are you packaging for a distro?), or is this only theoretical currently?",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2022-12-30T18:47:52Z",
            "diff_hunk": "@@ -598,6 +598,17 @@ endif()\n \n message(STATUS \"Using Lua interpreter: ${LUA_PRG}\")\n \n+# Some of the code generation still relies on stable table ordering in order to\n+# produce reproducible output - specifically the msgpack'ed data in\n+# funcs_metadata.generated.h and ui_events_metadata.generated.h. This should\n+# ideally be fixed in the generators, but until then as a workaround you may provide",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059491445",
            "id": 1059491445,
            "in_reply_to_id": 1059491126,
            "line": 263,
            "node_id": "PRRC_kwDOAPphoM4_Jo51",
            "original_commit_id": "74bd537a6494a292edc3a05c2e62215fc06d1f98",
            "original_line": 263,
            "original_position": 7,
            "original_start_line": null,
            "path": "CMakeLists.txt",
            "position": 7,
            "pull_request_review_id": 1233217849,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059491445/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-30T18:47:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059491445",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059630127"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059630127"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> similar to what's discussed in [#20355 (comment)](https://github.com/neovim/neovim/pull/20355#discussion_r980511837) , can the root cause be fixed instead of sorting at the \"leaf logic\" here?\r\n\r\nTBH I find it hard to say whether changing the structure of `auevents.nvim_specific` to make sure the output is deterministic is \"fixing the root cause\" or \"leaking a presentation concern into the data layer\" - but happy to adapt :)\r\n\r\n> Similar question for LUA_GEN_PRG\r\n\r\nHere I completely agree we should fix the 'root cause', which is the fact that the mpack'ed data contains string-keyed tables which are not serialized deterministically.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2022-12-31T11:24:50Z",
            "diff_hunk": "@@ -112,10 +112,19 @@ for au, _ in pairs(auevents.aliases) do\n   end\n end\n \n+local function sorted_keys(tab)\n+    local result = {}\n+    for key, _ in pairs(tab) do\n+        table.insert(result, key)\n+    end\n+    table.sort(result)\n+    return result\n+end\n+\n local nvimau_start = 'syn keyword nvimAutoEvent contained '\n w('\\n\\n' .. nvimau_start)\n \n-for au, _ in pairs(auevents.nvim_specific) do\n+for _, au in ipairs(sorted_keys(auevents.nvim_specific)) do",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059630127",
            "id": 1059630127,
            "in_reply_to_id": 1059490527,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4_KKwv",
            "original_commit_id": "74bd537a6494a292edc3a05c2e62215fc06d1f98",
            "original_line": 127,
            "original_position": 17,
            "original_start_line": null,
            "path": "scripts/genvimvim.lua",
            "position": null,
            "pull_request_review_id": 1233350308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059630127/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-31T11:24:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059630127",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059630180"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059630180"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "AFAICS the ordering of msgpack'd data is the only remaining work that requires this workaround. Improved the commit message, happy to also add it to #20124 when this part is merged.\r\n\r\n> btw, does this _actually_ unblock you (e.g. are you packaging for a distro?), or is this only theoretical currently?\r\n\r\nYes, this helps neovim be reproducible for nixos (https://github.com/NixOS/nixpkgs/pull/208103). Of course we could also keep the patch locally in nixpkgs, but I prefer upstreaming as much as possible - so perhaps other distro's can also leverage it.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2022-12-31T11:25:17Z",
            "diff_hunk": "@@ -598,6 +598,17 @@ endif()\n \n message(STATUS \"Using Lua interpreter: ${LUA_PRG}\")\n \n+# Some of the code generation still relies on stable table ordering in order to\n+# produce reproducible output - specifically the msgpack'ed data in\n+# funcs_metadata.generated.h and ui_events_metadata.generated.h. This should\n+# ideally be fixed in the generators, but until then as a workaround you may provide",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059630180",
            "id": 1059630180,
            "in_reply_to_id": 1059491126,
            "line": 263,
            "node_id": "PRRC_kwDOAPphoM4_KKxk",
            "original_commit_id": "74bd537a6494a292edc3a05c2e62215fc06d1f98",
            "original_line": 263,
            "original_position": 7,
            "original_start_line": null,
            "path": "CMakeLists.txt",
            "position": 7,
            "pull_request_review_id": 1233350337,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059630180/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-31T11:25:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059630180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059657816"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059657816"
                }
            },
            "author_association": "MEMBER",
            "body": "> hard to say whether changing the structure of auevents.nvim_specific to make sure the output is deterministic is \"fixing the root cause\" or \"leaking a presentation concern into the data layer\" \r\n\r\nfair point, but if making the source structure deterministic has no downsides, better to do it there. Reduces entropy in general :)",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2022-12-31T15:41:35Z",
            "diff_hunk": "@@ -112,10 +112,19 @@ for au, _ in pairs(auevents.aliases) do\n   end\n end\n \n+local function sorted_keys(tab)\n+    local result = {}\n+    for key, _ in pairs(tab) do\n+        table.insert(result, key)\n+    end\n+    table.sort(result)\n+    return result\n+end\n+\n local nvimau_start = 'syn keyword nvimAutoEvent contained '\n w('\\n\\n' .. nvimau_start)\n \n-for au, _ in pairs(auevents.nvim_specific) do\n+for _, au in ipairs(sorted_keys(auevents.nvim_specific)) do",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059657816",
            "id": 1059657816,
            "in_reply_to_id": 1059490527,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4_KRhY",
            "original_commit_id": "74bd537a6494a292edc3a05c2e62215fc06d1f98",
            "original_line": 127,
            "original_position": 17,
            "original_start_line": null,
            "path": "scripts/genvimvim.lua",
            "position": null,
            "pull_request_review_id": 1233362160,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059657816/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-31T15:41:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059657816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059657936"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059657936"
                }
            },
            "author_association": "MEMBER",
            "body": "> Of course we could also keep the patch locally in nixpkgs, but I prefer upstreaming as much as possible\r\n\r\nabsolutely, we are always interested in avoiding redundant work for package maintainers.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2022-12-31T15:42:57Z",
            "diff_hunk": "@@ -598,6 +598,17 @@ endif()\n \n message(STATUS \"Using Lua interpreter: ${LUA_PRG}\")\n \n+# Some of the code generation still relies on stable table ordering in order to\n+# produce reproducible output - specifically the msgpack'ed data in\n+# funcs_metadata.generated.h and ui_events_metadata.generated.h. This should\n+# ideally be fixed in the generators, but until then as a workaround you may provide",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059657936",
            "id": 1059657936,
            "in_reply_to_id": 1059491126,
            "line": 263,
            "node_id": "PRRC_kwDOAPphoM4_KRjQ",
            "original_commit_id": "74bd537a6494a292edc3a05c2e62215fc06d1f98",
            "original_line": 263,
            "original_position": 7,
            "original_start_line": null,
            "path": "CMakeLists.txt",
            "position": 7,
            "pull_request_review_id": 1233362210,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059657936/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-31T15:43:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059657936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059660721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059660721"
                }
            },
            "author_association": "MEMBER",
            "body": "> but if making the source structure deterministic has no downsides\r\n\r\nLooking at the latest of this PR, I see a downside: having to structure e.g. `keysets.lua` as a list instead of a dict is awkward. So I agree we need something like a `sorted()` function that iterates dicts in order.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2022-12-31T16:21:57Z",
            "diff_hunk": "@@ -112,10 +112,19 @@ for au, _ in pairs(auevents.aliases) do\n   end\n end\n \n+local function sorted_keys(tab)\n+    local result = {}\n+    for key, _ in pairs(tab) do\n+        table.insert(result, key)\n+    end\n+    table.sort(result)\n+    return result\n+end\n+\n local nvimau_start = 'syn keyword nvimAutoEvent contained '\n w('\\n\\n' .. nvimau_start)\n \n-for au, _ in pairs(auevents.nvim_specific) do\n+for _, au in ipairs(sorted_keys(auevents.nvim_specific)) do",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059660721",
            "id": 1059660721,
            "in_reply_to_id": 1059490527,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4_KSOx",
            "original_commit_id": "74bd537a6494a292edc3a05c2e62215fc06d1f98",
            "original_line": 127,
            "original_position": 17,
            "original_start_line": null,
            "path": "scripts/genvimvim.lua",
            "position": null,
            "pull_request_review_id": 1233363973,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059660721/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-12-31T16:21:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059660721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1059766020"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059766020"
                }
            },
            "author_association": "MEMBER",
            "body": "While the change is the right one perhaps we can get rid of the artificial second layer of nesting:\r\n```\r\n{ 'name', {\r\n  \"somekey\";\r\n  \"key\";\r\n}};\r\n```",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-01T15:28:07Z",
            "diff_hunk": "@@ -1,228 +1,296 @@\n return {\n-  context = {\n-    \"types\";\n-  };\n-  set_decoration_provider = {\n-    \"on_start\";\n-    \"on_buf\";\n-    \"on_win\";\n-    \"on_line\";\n-    \"on_end\";\n-    \"_on_hl_def\";\n-    \"_on_spell_nav\";\n-  };\n-  set_extmark = {\n-    \"id\";\n-    \"end_line\";\n-    \"end_row\";\n-    \"end_col\";\n-    \"hl_group\";\n-    \"virt_text\";\n-    \"virt_text_pos\";\n-    \"virt_text_win_col\";\n-    \"virt_text_hide\";\n-    \"hl_eol\";\n-    \"hl_mode\";\n-    \"ephemeral\";\n-    \"priority\";\n-    \"right_gravity\";\n-    \"end_right_gravity\";\n-    \"virt_lines\";\n-    \"virt_lines_above\";\n-    \"virt_lines_leftcol\";\n-    \"strict\";\n-    \"sign_text\";\n-    \"sign_hl_group\";\n-    \"number_hl_group\";\n-    \"line_hl_group\";\n-    \"cursorline_hl_group\";\n-    \"conceal\";\n-    \"spell\";\n-    \"ui_watched\";\n-  };\n-  keymap = {\n-    \"noremap\";\n-    \"nowait\";\n-    \"silent\";\n-    \"script\";\n-    \"expr\";\n-    \"unique\";\n-    \"callback\";\n-    \"desc\";\n-    \"replace_keycodes\";\n-  };\n-  get_commands = {\n-    \"builtin\";\n-  };\n-  user_command = {\n-    \"addr\";\n-    \"bang\";\n-    \"bar\";\n-    \"complete\";\n-    \"count\";\n-    \"desc\";\n-    \"force\";\n-    \"keepscript\";\n-    \"nargs\";\n-    \"preview\";\n-    \"range\";\n-    \"register\";\n-  };\n-  float_config = {\n-    \"row\";\n-    \"col\";\n-    \"width\";\n-    \"height\";\n-    \"anchor\";\n-    \"relative\";\n-    \"win\";\n-    \"bufpos\";\n-    \"external\";\n-    \"focusable\";\n-    \"zindex\";\n-    \"border\";\n-    \"title\";\n-    \"title_pos\";\n-    \"style\";\n-    \"noautocmd\";\n-  };\n-  runtime = {\n-    \"is_lua\";\n-    \"do_source\";\n-  };\n-  eval_statusline = {\n-    \"winid\";\n-    \"maxwidth\";\n-    \"fillchar\";\n-    \"highlights\";\n-    \"use_winbar\";\n-    \"use_tabline\";\n-  };\n-  option = {\n-    \"scope\";\n-    \"win\";\n-    \"buf\";\n-  };\n-  highlight = {\n-    \"bold\";\n-    \"standout\";\n-    \"strikethrough\";\n-    \"underline\";\n-    \"undercurl\";\n-    \"underdouble\";\n-    \"underdotted\";\n-    \"underdashed\";\n-    \"italic\";\n-    \"reverse\";\n-    \"nocombine\";\n-    \"default\";\n-    \"cterm\";\n-    \"foreground\"; \"fg\";\n-    \"background\"; \"bg\";\n-    \"ctermfg\";\n-    \"ctermbg\";\n-    \"special\"; \"sp\";\n-    \"link\";\n-    \"global_link\";\n-    \"fallback\";\n-    \"blend\";\n-    \"fg_indexed\";\n-    \"bg_indexed\";\n-  };\n-  highlight_cterm = {\n-    \"bold\";\n-    \"standout\";\n-    \"strikethrough\";\n-    \"underline\";\n-    \"undercurl\";\n-    \"underdouble\";\n-    \"underdotted\";\n-    \"underdashed\";\n-    \"italic\";\n-    \"reverse\";\n-    \"nocombine\";\n+  {",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1059766020",
            "id": 1059766020,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4_Kr8E",
            "original_commit_id": "71a5f3b0507de2e404616ff01d87780e1eae1eb2",
            "original_line": 2,
            "original_position": 144,
            "original_start_line": null,
            "path": "src/nvim/api/keysets.lua",
            "position": null,
            "pull_request_review_id": 1233436781,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059766020/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-01T15:28:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1059766020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060093224"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060093224"
                }
            },
            "author_association": "MEMBER",
            "body": "(just thinking out loud) \r\n\r\nre https://github.com/neovim/neovim/issues/19918 , `auevents.lua` may be a file that we want to ship in the runtime, so that plugins can discover Nvim event definitions. However these `aliases` and `nvim_specific` lists aren't too important for plugins, so they don't need to have a \"map\" structure. They could be considered \"internal details\" similar to  `keysets.lua`.\r\n\r\niow: LGTM",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T15:26:00Z",
            "diff_hunk": "@@ -127,25 +127,37 @@ return {\n     'WinScrolled',            -- after a window was scrolled or resized\n   },\n   aliases = {\n-    BufCreate = 'BufAdd',\n-    BufRead = 'BufReadPost',\n-    BufWrite = 'BufWritePre',\n-    FileEncoding = 'EncodingChanged',\n+    {",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060093224",
            "id": 1060093224,
            "line": 130,
            "node_id": "PRRC_kwDOAPphoM4_L70o",
            "original_commit_id": "b8ef4f2f187b370c0f300972229e624bd60e9dfe",
            "original_line": 130,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/auevents.lua",
            "position": 8,
            "pull_request_review_id": 1233859082,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060093224/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T15:28:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060093224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060174714"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060174714"
                }
            },
            "author_association": "MEMBER",
            "body": "technically this could use `ipairs` now, right? (or we could revert the changes to auevents.lua)?\r\n\r\nThough `vim.spairs()` still seems like something we generally want.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T19:52:04Z",
            "diff_hunk": "@@ -115,7 +117,7 @@ end\n local nvimau_start = 'syn keyword nvimAutoEvent contained '\n w('\\n\\n' .. nvimau_start)\n \n-for au, _ in pairs(auevents.nvim_specific) do\n+for au, _ in vim.spairs(auevents.nvim_specific) do",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060174714",
            "id": 1060174714,
            "line": 120,
            "node_id": "PRRC_kwDOAPphoM4_MPt6",
            "original_commit_id": "5ed4ce04076508aea0e1bd8dbc579acfb7ddf93c",
            "original_line": 120,
            "original_position": 14,
            "original_start_line": null,
            "path": "scripts/genvimvim.lua",
            "position": 14,
            "pull_request_review_id": 1233963575,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060174714/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T20:01:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060174714",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060175724"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060175724"
                }
            },
            "author_association": "MEMBER",
            "body": "should we try to be more like ipairs/pairs here? From `:help luaref-pairs()` : \r\n\r\n```\r\npairs({t})                                                      *luaref-pairs()*\r\n        Returns three values: the `next` |luaref-next()| function, the table\r\n        {t}, and `nil`, so that the construction\r\n\r\n               for k,v in pairs(t) do  body  end\r\n\r\n        will iterate over all key-value pairs of table {t}.\r\n```\r\n\r\ni.e. should we return \"iterator function, table {t}, and `nil`\"? Then need some\r\ntest coverage for `for k,v in pairs(t) do  body  end`.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T19:57:10Z",
            "diff_hunk": "@@ -457,6 +457,32 @@ function vim.tbl_flatten(t)\n   return result\n end\n \n+--- Enumerate a table sorted by its keys.\n+---\n+---@see Based on https://github.com/premake/premake-core/blob/master/src/base/table.lua\n+---\n+---@param t table List-like table\n+---@return table key-sorted copy of the given table\n+function vim.spairs(t)\n+  assert(type(t) == 'table', string.format('Expected table, got %s', type(t)))\n+\n+  -- collect the keys\n+  local keys = {}\n+  for k in pairs(t) do\n+    table.insert(keys, k)\n+  end\n+  table.sort(keys)\n+\n+  -- return the iterator function\n+  local i = 0\n+  return function()\n+    i = i + 1\n+    if keys[i] then\n+      return keys[i], t[keys[i]]",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060175724",
            "id": 1060175724,
            "line": 482,
            "node_id": "PRRC_kwDOAPphoM4_MP9s",
            "original_commit_id": "5ed4ce04076508aea0e1bd8dbc579acfb7ddf93c",
            "original_line": 481,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 26,
            "pull_request_review_id": 1233964857,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060175724/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T19:57:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060175724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060175901"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060175901"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "couldn't you use `vim.tbl_keys` here?",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T19:57:45Z",
            "diff_hunk": "@@ -457,6 +457,32 @@ function vim.tbl_flatten(t)\n   return result\n end\n \n+--- Enumerate a table sorted by its keys.\n+---\n+---@see Based on https://github.com/premake/premake-core/blob/master/src/base/table.lua\n+---\n+---@param t table List-like table\n+---@return table key-sorted copy of the given table\n+function vim.spairs(t)\n+  assert(type(t) == 'table', string.format('Expected table, got %s', type(t)))\n+\n+  -- collect the keys\n+  local keys = {}",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060175901",
            "id": 1060175901,
            "line": 470,
            "node_id": "PRRC_kwDOAPphoM4_MQAd",
            "original_commit_id": "5ed4ce04076508aea0e1bd8dbc579acfb7ddf93c",
            "original_line": 470,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 14,
            "pull_request_review_id": 1233964995,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060175901/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T19:57:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060175901",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060176101"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060176101"
                }
            },
            "author_association": "MEMBER",
            "body": "In the future we could add a `sort` parameter to allow custom sorting.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T19:58:37Z",
            "diff_hunk": "@@ -457,6 +457,32 @@ function vim.tbl_flatten(t)\n   return result\n end\n \n+--- Enumerate a table sorted by its keys.\n+---\n+---@see Based on https://github.com/premake/premake-core/blob/master/src/base/table.lua\n+---\n+---@param t table List-like table\n+---@return table key-sorted copy of the given table\n+function vim.spairs(t)",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060176101",
            "id": 1060176101,
            "line": 466,
            "node_id": "PRRC_kwDOAPphoM4_MQDl",
            "original_commit_id": "5ed4ce04076508aea0e1bd8dbc579acfb7ddf93c",
            "original_line": 466,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 10,
            "pull_request_review_id": 1233965218,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060176101/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T19:58:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060176101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060176343"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060176343"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@return iterator over sorted keys and their values\r\n```",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T19:59:48Z",
            "diff_hunk": "@@ -457,6 +457,32 @@ function vim.tbl_flatten(t)\n   return result\n end\n \n+--- Enumerate a table sorted by its keys.\n+---\n+---@see Based on https://github.com/premake/premake-core/blob/master/src/base/table.lua\n+---\n+---@param t table List-like table\n+---@return table key-sorted copy of the given table",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060176343",
            "id": 1060176343,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4_MQHX",
            "original_commit_id": "5ed4ce04076508aea0e1bd8dbc579acfb7ddf93c",
            "original_line": 465,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1233965534,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060176343/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T20:00:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060176343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060194354"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060194354"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I guess so - for now I just kept it consistent with the implementation from premake. Maybe something to improve later?",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T21:37:47Z",
            "diff_hunk": "@@ -457,6 +457,32 @@ function vim.tbl_flatten(t)\n   return result\n end\n \n+--- Enumerate a table sorted by its keys.\n+---\n+---@see Based on https://github.com/premake/premake-core/blob/master/src/base/table.lua\n+---\n+---@param t table List-like table\n+---@return table key-sorted copy of the given table\n+function vim.spairs(t)\n+  assert(type(t) == 'table', string.format('Expected table, got %s', type(t)))\n+\n+  -- collect the keys\n+  local keys = {}\n+  for k in pairs(t) do\n+    table.insert(keys, k)\n+  end\n+  table.sort(keys)\n+\n+  -- return the iterator function\n+  local i = 0\n+  return function()\n+    i = i + 1\n+    if keys[i] then\n+      return keys[i], t[keys[i]]",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060194354",
            "id": 1060194354,
            "in_reply_to_id": 1060175724,
            "line": 482,
            "node_id": "PRRC_kwDOAPphoM4_MUgy",
            "original_commit_id": "5ed4ce04076508aea0e1bd8dbc579acfb7ddf93c",
            "original_line": 481,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 26,
            "pull_request_review_id": 1233989092,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060194354/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T21:37:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060194354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060194519"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060194519"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ah, yes, I meant to revert these changes in auevents.lua, good one. Thanks, updated.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T21:38:41Z",
            "diff_hunk": "@@ -115,7 +117,7 @@ end\n local nvimau_start = 'syn keyword nvimAutoEvent contained '\n w('\\n\\n' .. nvimau_start)\n \n-for au, _ in pairs(auevents.nvim_specific) do\n+for au, _ in vim.spairs(auevents.nvim_specific) do",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060194519",
            "id": 1060194519,
            "in_reply_to_id": 1060174714,
            "line": 120,
            "node_id": "PRRC_kwDOAPphoM4_MUjX",
            "original_commit_id": "5ed4ce04076508aea0e1bd8dbc579acfb7ddf93c",
            "original_line": 120,
            "original_position": 14,
            "original_start_line": null,
            "path": "scripts/genvimvim.lua",
            "position": 14,
            "pull_request_review_id": 1233989310,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060194519/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T21:38:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060194519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1060197735"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060197735"
                }
            },
            "author_association": "MEMBER",
            "body": "i suppose the door is open for changing this in the future, let's at least leave a TODO comment in the source",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-02T21:58:15Z",
            "diff_hunk": "@@ -457,6 +457,32 @@ function vim.tbl_flatten(t)\n   return result\n end\n \n+--- Enumerate a table sorted by its keys.\n+---\n+---@see Based on https://github.com/premake/premake-core/blob/master/src/base/table.lua\n+---\n+---@param t table List-like table\n+---@return table key-sorted copy of the given table\n+function vim.spairs(t)\n+  assert(type(t) == 'table', string.format('Expected table, got %s', type(t)))\n+\n+  -- collect the keys\n+  local keys = {}\n+  for k in pairs(t) do\n+    table.insert(keys, k)\n+  end\n+  table.sort(keys)\n+\n+  -- return the iterator function\n+  local i = 0\n+  return function()\n+    i = i + 1\n+    if keys[i] then\n+      return keys[i], t[keys[i]]",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1060197735",
            "id": 1060197735,
            "in_reply_to_id": 1060175724,
            "line": 482,
            "node_id": "PRRC_kwDOAPphoM4_MVVn",
            "original_commit_id": "5ed4ce04076508aea0e1bd8dbc579acfb7ddf93c",
            "original_line": 481,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 26,
            "pull_request_review_id": 1233992864,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060197735/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-02T21:58:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1060197735",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1068288424"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068288424"
                }
            },
            "author_association": "MEMBER",
            "body": "Is it infeasible/incorrect to use the modified lua program throughout instead only for the code generation? Mostly curious, not against this solution.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-12T15:45:15Z",
            "diff_hunk": "@@ -257,6 +257,17 @@ endif()\n \n message(STATUS \"Using Lua interpreter: ${LUA_PRG}\")\n \n+# Some of the code generation still relies on stable table ordering in order to\n+# produce reproducible output - specifically the msgpack'ed data in\n+# funcs_metadata.generated.h and ui_events_metadata.generated.h. This should\n+# ideally be fixed in the generators, but until then as a workaround you may provide\n+# a specific lua implementation that provides the needed stability by setting LUA_GEN_PRG:\n+if(NOT LUA_GEN_PRG)\n+  set(LUA_GEN_PRG \"${LUA_PRG}\" CACHE FILEPATH \"Path to the lua used for code generation.\")",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1068288424",
            "id": 1068288424,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM4_rMmo",
            "original_commit_id": "e4d74df8ae61e15d29543a3e127822fcba9c694d",
            "original_line": 266,
            "original_position": 10,
            "original_start_line": null,
            "path": "CMakeLists.txt",
            "position": 10,
            "pull_request_review_id": 1245867776,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068288424/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-12T15:45:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068288424",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1068303688"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068303688"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That's of course possible, but upstream deliberatly introduced the non-determinism for security reasons (https://github.com/LuaJIT/LuaJIT/issues/626#issuecomment-707005671). While I think it's acceptable as a temporary workaround to use an 'arguably-insecure' lua for the code generation (we trust the input for the code generator, after all), but we probably shouldn't encourage users to use such lua versions with 'more untrusted' data at runtime.",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-12T15:58:19Z",
            "diff_hunk": "@@ -257,6 +257,17 @@ endif()\n \n message(STATUS \"Using Lua interpreter: ${LUA_PRG}\")\n \n+# Some of the code generation still relies on stable table ordering in order to\n+# produce reproducible output - specifically the msgpack'ed data in\n+# funcs_metadata.generated.h and ui_events_metadata.generated.h. This should\n+# ideally be fixed in the generators, but until then as a workaround you may provide\n+# a specific lua implementation that provides the needed stability by setting LUA_GEN_PRG:\n+if(NOT LUA_GEN_PRG)\n+  set(LUA_GEN_PRG \"${LUA_PRG}\" CACHE FILEPATH \"Path to the lua used for code generation.\")",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1068303688",
            "id": 1068303688,
            "in_reply_to_id": 1068288424,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM4_rQVI",
            "original_commit_id": "e4d74df8ae61e15d29543a3e127822fcba9c694d",
            "original_line": 266,
            "original_position": 10,
            "original_start_line": null,
            "path": "CMakeLists.txt",
            "position": 10,
            "pull_request_review_id": 1245890779,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068303688/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-12T16:29:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068303688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1068317611"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068317611"
                }
            },
            "author_association": "MEMBER",
            "body": "OK, that makes perfect sense. Thank you :)",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-12T16:09:54Z",
            "diff_hunk": "@@ -257,6 +257,17 @@ endif()\n \n message(STATUS \"Using Lua interpreter: ${LUA_PRG}\")\n \n+# Some of the code generation still relies on stable table ordering in order to\n+# produce reproducible output - specifically the msgpack'ed data in\n+# funcs_metadata.generated.h and ui_events_metadata.generated.h. This should\n+# ideally be fixed in the generators, but until then as a workaround you may provide\n+# a specific lua implementation that provides the needed stability by setting LUA_GEN_PRG:\n+if(NOT LUA_GEN_PRG)\n+  set(LUA_GEN_PRG \"${LUA_PRG}\" CACHE FILEPATH \"Path to the lua used for code generation.\")",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1068317611",
            "id": 1068317611,
            "in_reply_to_id": 1068288424,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM4_rTur",
            "original_commit_id": "e4d74df8ae61e15d29543a3e127822fcba9c694d",
            "original_line": 266,
            "original_position": 10,
            "original_start_line": null,
            "path": "CMakeLists.txt",
            "position": 10,
            "pull_request_review_id": 1245912422,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068317611/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-12T16:09:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1068317611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/21586#discussion_r1083798806"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/21586"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1083798806"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  -- Return the iterator function.\r\n  -- TODO(justinmk): Return \"iterator function, table {t}, and nil\", like pairs()?\r\n```",
            "commit_id": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
            "created_at": "2023-01-23T09:15:21Z",
            "diff_hunk": "@@ -457,6 +457,32 @@ function vim.tbl_flatten(t)\n   return result\n end\n \n+--- Enumerate a table sorted by its keys.\n+---\n+---@see Based on https://github.com/premake/premake-core/blob/master/src/base/table.lua\n+---\n+---@param t table List-like table\n+---@return iterator over sorted keys and their values\n+function vim.spairs(t)\n+  assert(type(t) == 'table', string.format('Expected table, got %s', type(t)))\n+\n+  -- collect the keys\n+  local keys = {}\n+  for k in pairs(t) do\n+    table.insert(keys, k)\n+  end\n+  table.sort(keys)\n+\n+  -- return the iterator function",
            "html_url": "https://github.com/neovim/neovim/pull/21586#discussion_r1083798806",
            "id": 1083798806,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5AmXUW",
            "original_commit_id": "e4d74df8ae61e15d29543a3e127822fcba9c694d",
            "original_line": 476,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1265224308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1083798806/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-23T09:15:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1083798806",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "(huh, sorry about the review request noise, GitHub UI being weird. ready for another round AFAICS :) )",
            "created_at": "2023-01-01T15:41:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/21586#issuecomment-1368471213",
            "id": 1368471213,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21586",
            "node_id": "IC_kwDOAPphoM5RkTat",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1368471213/reactions"
            },
            "updated_at": "2023-01-01T15:41:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1368471213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> test coverage for `spairs()`\r\n\r\nAdded a basic test\r\n\r\n> do we need some sort of (small) test that verifies the reproducibility?\r\n\r\nI agree that would be nice, but I'm not sure it's worth the additional infrastructure it'd introduce",
            "created_at": "2023-01-04T21:37:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/21586#issuecomment-1371456256",
            "id": 1371456256,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21586",
            "node_id": "IC_kwDOAPphoM5RvsMA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1371456256/reactions"
            },
            "updated_at": "2023-01-04T21:37:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1371456256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I agree that would be nice, but I'm not sure it's worth the additional infrastructure it'd introduce\r\n\r\nWhy is using `find` with computation of sha256sums + storing into a temporary file, then cleaning the generated source, recreate them and compare their sha256sums match not an option?\r\n\r\nNo infrastructure needed besides find, sha256sum and shell on the host.",
            "created_at": "2023-01-07T15:21:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/21586#issuecomment-1374514048",
            "id": 1374514048,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21586",
            "node_id": "IC_kwDOAPphoM5R7WuA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1374514048/reactions"
            },
            "updated_at": "2023-01-07T15:23:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1374514048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13089667?v=4",
                "events_url": "https://api.github.com/users/matu3ba/events{/privacy}",
                "followers_url": "https://api.github.com/users/matu3ba/followers",
                "following_url": "https://api.github.com/users/matu3ba/following{/other_user}",
                "gists_url": "https://api.github.com/users/matu3ba/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/matu3ba",
                "id": 13089667,
                "login": "matu3ba",
                "node_id": "MDQ6VXNlcjEzMDg5NjY3",
                "organizations_url": "https://api.github.com/users/matu3ba/orgs",
                "received_events_url": "https://api.github.com/users/matu3ba/received_events",
                "repos_url": "https://api.github.com/users/matu3ba/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/matu3ba/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/matu3ba/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/matu3ba"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > I agree that would be nice, but I'm not sure it's worth the additional infrastructure it'd introduce\r\n> \r\n> Why is using `find` with computation of sha256sums + storing into a temporary file, then cleaning the generated source, recreate them and compare their sha256sums match not an option?\r\n> \r\n> No infrastructure needed besides find, sha256sum and shell on the host.\r\n\r\nIt'd also need to either use lua5.2 instead of luajit, or use a luajit patched to have stable table order for codegen.",
            "created_at": "2023-01-09T18:16:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/21586#issuecomment-1376052013",
            "id": 1376052013,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21586",
            "node_id": "IC_kwDOAPphoM5SBOMt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1376052013/reactions"
            },
            "updated_at": "2023-01-09T18:16:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1376052013",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@raboof could you sum up what is needed before merging + possible follow up (sry I didn't foillow at all the development and the numerous comments make it hard to catch up) ? I would like to understand the situation with the nixpkgs patch (can we get rid of it after merging this ?)",
            "created_at": "2023-01-22T23:17:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/21586#issuecomment-1399637627",
            "id": 1399637627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21586",
            "node_id": "IC_kwDOAPphoM5TbMZ7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1399637627/reactions"
            },
            "updated_at": "2023-01-22T23:17:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1399637627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> could you sum up what is needed before merging\r\n\r\nIt's ready to be merged (thanks @justinmk!)\r\n\r\n> possible follow up\r\n\r\nThe possible follow-up is described in the comment at https://github.com/neovim/neovim/blob/b36b58d0d4869b573ca6657db0d43eed2cbdd72f/CMakeLists.txt#L245-L252\r\n\r\n> I would like to understand the situation with the nixpkgs patch (can we get rid of it after merging this?)\r\n\r\nYes, we can drop the patch when neovim is released. Prepared and tested with https://github.com/NixOS/nixpkgs/pull/212235\r\n\r\n",
            "created_at": "2023-01-23T09:50:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/21586#issuecomment-1400069512",
            "id": 1400069512,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21586",
            "node_id": "IC_kwDOAPphoM5Tc12I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1400069512/reactions"
            },
            "updated_at": "2023-12-04T13:02:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1400069512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21586/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/21586/commits",
    "created_at": "2022-12-29T10:46:15Z",
    "diff_url": "https://github.com/neovim/neovim/pull/21586.diff",
    "draft": false,
    "head": {
        "label": "raboof:build-reproducible",
        "ref": "build-reproducible",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/raboof/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/raboof/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/raboof/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/raboof/neovim/branches{/branch}",
            "clone_url": "https://github.com/raboof/neovim.git",
            "collaborators_url": "https://api.github.com/repos/raboof/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/raboof/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/raboof/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/raboof/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/raboof/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/raboof/neovim/contributors",
            "created_at": "2022-12-27T09:55:51Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/raboof/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/raboof/neovim/downloads",
            "events_url": "https://api.github.com/repos/raboof/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/raboof/neovim/forks",
            "full_name": "raboof/neovim",
            "git_commits_url": "https://api.github.com/repos/raboof/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/raboof/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/raboof/neovim/git/tags{/sha}",
            "git_url": "git://github.com/raboof/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/raboof/neovim/hooks",
            "html_url": "https://github.com/raboof/neovim",
            "id": 582591980,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/raboof/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/raboof/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/raboof/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/raboof/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/raboof/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/raboof/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/raboof/neovim/merges",
            "milestones_url": "https://api.github.com/repos/raboof/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIrml7A",
            "notifications_url": "https://api.github.com/repos/raboof/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
                "events_url": "https://api.github.com/users/raboof/events{/privacy}",
                "followers_url": "https://api.github.com/users/raboof/followers",
                "following_url": "https://api.github.com/users/raboof/following{/other_user}",
                "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/raboof",
                "id": 131856,
                "login": "raboof",
                "node_id": "MDQ6VXNlcjEzMTg1Ng==",
                "organizations_url": "https://api.github.com/users/raboof/orgs",
                "received_events_url": "https://api.github.com/users/raboof/received_events",
                "repos_url": "https://api.github.com/users/raboof/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/raboof"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/raboof/neovim/pulls{/number}",
            "pushed_at": "2023-01-23T09:16:32Z",
            "releases_url": "https://api.github.com/repos/raboof/neovim/releases{/id}",
            "size": 225298,
            "ssh_url": "git@github.com:raboof/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/raboof/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/raboof/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/raboof/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/raboof/neovim/subscription",
            "svn_url": "https://github.com/raboof/neovim",
            "tags_url": "https://api.github.com/repos/raboof/neovim/tags",
            "teams_url": "https://api.github.com/repos/raboof/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/raboof/neovim/git/trees{/sha}",
            "updated_at": "2022-12-27T09:27:48Z",
            "url": "https://api.github.com/repos/raboof/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
            "events_url": "https://api.github.com/users/raboof/events{/privacy}",
            "followers_url": "https://api.github.com/users/raboof/followers",
            "following_url": "https://api.github.com/users/raboof/following{/other_user}",
            "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/raboof",
            "id": 131856,
            "login": "raboof",
            "node_id": "MDQ6VXNlcjEzMTg1Ng==",
            "organizations_url": "https://api.github.com/users/raboof/orgs",
            "received_events_url": "https://api.github.com/users/raboof/received_events",
            "repos_url": "https://api.github.com/users/raboof/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/raboof"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/21586",
    "id": 1180143878,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21586",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        }
    ],
    "locked": false,
    "merge_commit_sha": "cb757f2663e6950e655c6306d713338dfa66b18d",
    "merged_at": "2023-01-23T09:26:47Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5GV5EG",
    "number": 21586,
    "patch_url": "https://github.com/neovim/neovim/pull/21586.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/21586/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a492edbb0677afed6bd9a8b1c7fc4a9e7553ad40",
    "title": "build: make generated source files reproducible",
    "updated_at": "2023-12-04T13:02:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/21586",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/131856?v=4",
        "events_url": "https://api.github.com/users/raboof/events{/privacy}",
        "followers_url": "https://api.github.com/users/raboof/followers",
        "following_url": "https://api.github.com/users/raboof/following{/other_user}",
        "gists_url": "https://api.github.com/users/raboof/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/raboof",
        "id": 131856,
        "login": "raboof",
        "node_id": "MDQ6VXNlcjEzMTg1Ng==",
        "organizations_url": "https://api.github.com/users/raboof/orgs",
        "received_events_url": "https://api.github.com/users/raboof/received_events",
        "repos_url": "https://api.github.com/users/raboof/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/raboof/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/raboof/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/raboof"
    }
}