{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27202/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27202/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27202"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27202"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27202/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/1c7a03f7a878d2723420a1832128478660f06051"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5201,
            "forks_count": 5201,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1728,
            "open_issues_count": 1728,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-02-12T23:38:13Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 252813,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 73720,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-02-13T01:34:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 73720,
            "watchers_count": 73720,
            "web_commit_signoff_required": false
        },
        "sha": "6116495e6e6d3508eb99720faad7e55ba7cbe978",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "As stated here https://github.com/neovim/neovim/issues/27068, Windows network storage paths breaks with `fs.normalize`.\r\n\r\n- `\\\\wsl$\\Ubuntu\\home\\user`\r\n- `\\\\127.0.0.1\\path`\r\n\r\n> I do need the information that the path starts with a double slash, but I want to evaluate that after `expand_env`, so I can't just check it against the path before running this function as well.\r\n> \r\n> Could you add an option something like `opts.keep_dup_slashes (default: false)` that does not delete the duplicated slashes, and return the slashes as-is? (don't `:gsub('/+', '/')`).\r\n> \r\n> I'd love to hear your opinions @lewis6991 @gpanders .\r\n> \r\n> BTW, I don't have problem with `gsub('/+$', '')` (I hope this regex is correct) to delete the trailing slash.\r\n\r\ncc @lewis6991 @gpanders \r\n\r\n### Tests\r\n\r\n```lua\r\n    it('works with / (opts.unique_slash = false)', function()\r\n      eq('///', vim.fs.normalize('///', { unique_slash = false }))\r\n    end)\r\n    it('removes duplicated slashes (opts.unique_slash = true)', function()\r\n      eq('/home/user', vim.fs.normalize('//home//user//'))\r\n    end)\r\n    it('do not remove duplicated slashes (opts.unique_slash = false)', function()\r\n      eq('//home//user', vim.fs.normalize('//home//user//', { unique_slash = false })) -- does remove trailing slashes\r\n    end)\r\n```\r\n\r\nCloses #27068\r\n\r\n### PS\r\n\r\nThis is my first PR to neovim repo. Please kindly give me instructions if I have something missing.",
    "closed_at": "2024-02-12T15:47:50Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1467136389"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467136389"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---             - expand_env: (boolean) Expand environment variables (default: true)\r\n---             - unique_slash: (boolean) Remove duplicated slashes (default: true)\r\n```",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-26T01:19:20Z",
            "diff_hunk": "@@ -339,13 +339,15 @@ end\n ---@param path (string) Path to normalize\n ---@param opts table|nil Options:\n ---             - expand_env: boolean Expand environment variables (default: true)\n+---             - unique_slash: boolean Remove duplicated slashes (default: true)",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1467136389",
            "id": 1467136389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XcrmF",
            "original_commit_id": "e9c364399ee3159a835a40204c7cb56a2d0c9334",
            "original_line": 342,
            "original_position": 4,
            "original_start_line": 341,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1844954721,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467136389/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-26T01:24:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467136389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1467138517"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467138517"
                }
            },
            "author_association": "MEMBER",
            "body": "The parameter name `unique_slash` sounds a bit awkward. I can suggest:\r\n- `normalize_slash` (or `normalize_slashes`)\r\n- `collapse_slash` (or `collapse_slashes`)\r\n\r\nNormalize slash would be a more common term used in other programming languages' stdlib. But feels a bit redundant verb because the method name itself is `vim.fs.normalize`. I don't yet have a strong opinion here, haven't thought about it enough.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-26T01:24:15Z",
            "diff_hunk": "@@ -2926,6 +2926,8 @@ vim.fs.normalize({path}, {opts})                          *vim.fs.normalize()*\n       • {opts}  (`table?`) Options:\n                 • expand_env: boolean Expand environment variables (default:\n                   true)\n+                • unique_slash: boolean Remove duplicated slashes (default:",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1467138517",
            "id": 1467138517,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XcsHV",
            "original_commit_id": "e9c364399ee3159a835a40204c7cb56a2d0c9334",
            "original_line": 2929,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1844954721,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467138517/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-26T01:25:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467138517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1467163767"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467163767"
                }
            },
            "author_association": "NONE",
            "body": "Thanks. The `expand_env` line is not a line I added but can I edit this line in my PR (or is it not a big deal)?",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-26T02:21:18Z",
            "diff_hunk": "@@ -339,13 +339,15 @@ end\n ---@param path (string) Path to normalize\n ---@param opts table|nil Options:\n ---             - expand_env: boolean Expand environment variables (default: true)\n+---             - unique_slash: boolean Remove duplicated slashes (default: true)",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1467163767",
            "id": 1467163767,
            "in_reply_to_id": 1467136389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XcyR3",
            "original_commit_id": "e9c364399ee3159a835a40204c7cb56a2d0c9334",
            "original_line": 342,
            "original_position": 4,
            "original_start_line": 341,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1844991734,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467163767/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-26T02:21:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467163767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1467164503"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467164503"
                }
            },
            "author_association": "NONE",
            "body": "Nice one. I like `collapse_slash`.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-26T02:23:06Z",
            "diff_hunk": "@@ -2926,6 +2926,8 @@ vim.fs.normalize({path}, {opts})                          *vim.fs.normalize()*\n       • {opts}  (`table?`) Options:\n                 • expand_env: boolean Expand environment variables (default:\n                   true)\n+                • unique_slash: boolean Remove duplicated slashes (default:",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1467164503",
            "id": 1467164503,
            "in_reply_to_id": 1467138517,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XcydX",
            "original_commit_id": "e9c364399ee3159a835a40204c7cb56a2d0c9334",
            "original_line": 2929,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1844992781,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467164503/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-26T02:23:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467164503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1467167089"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467167089"
                }
            },
            "author_association": "NONE",
            "body": "Fixed in [`0a3876a` (#27202)](https://github.com/neovim/neovim/pull/27202/commits/0a3876aa9852671900bff35f0a35dcbc5db43a38)",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-26T02:28:42Z",
            "diff_hunk": "@@ -339,13 +339,15 @@ end\n ---@param path (string) Path to normalize\n ---@param opts table|nil Options:\n ---             - expand_env: boolean Expand environment variables (default: true)\n+---             - unique_slash: boolean Remove duplicated slashes (default: true)",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1467167089",
            "id": 1467167089,
            "in_reply_to_id": 1467136389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XczFx",
            "original_commit_id": "e9c364399ee3159a835a40204c7cb56a2d0c9334",
            "original_line": 342,
            "original_position": 4,
            "original_start_line": 341,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1844996612,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467167089/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-26T02:28:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1467167089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1472166672"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472166672"
                }
            },
            "author_association": "MEMBER",
            "body": "This makes no sense. If `normalize()` doesn't trim the last slashes, like this:\r\n\r\n    //home/user/\r\n\r\nthen its result won't be the same for these inputs:\r\n\r\n    //home//user//\r\n    //home/user/\r\n\r\nwhich defeats the purpose of normalizing. The normalized result should always be the same.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-31T00:40:43Z",
            "diff_hunk": "@@ -291,9 +291,18 @@ describe('vim.fs', function()\n     it('works with /', function()\n       eq('/', vim.fs.normalize('/'))\n     end)\n+    it('works with / (opts.collapse_slash = false)', function()\n+      eq('///', vim.fs.normalize('///', { collapse_slash = false }))\n+    end)\n     it('works with ~', function()\n       eq(vim.fs.normalize(vim.uv.os_homedir()) .. '/src/foo', vim.fs.normalize('~/src/foo'))\n     end)\n+    it('removes duplicated slashes (opts.collapse_slash = true)', function()\n+      eq('/home/user', vim.fs.normalize('//home//user//'))\n+    end)\n+    it('do not remove duplicated slashes (opts.collapse_slash = false)', function()\n+      eq('//home//user', vim.fs.normalize('//home//user//', { collapse_slash = false })) -- does remove trailing slashes",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1472166672",
            "id": 1472166672,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Xv3sQ",
            "original_commit_id": "0a3876aa9852671900bff35f0a35dcbc5db43a38",
            "original_line": 304,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1852686541,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472166672/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-31T00:40:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472166672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1472168786"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472168786"
                }
            },
            "author_association": "NONE",
            "body": "It **does** remove any amount of trailing slashes, and keeps any duplicated slashes before the end of the path. Does that make sense?",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-31T00:44:32Z",
            "diff_hunk": "@@ -291,9 +291,18 @@ describe('vim.fs', function()\n     it('works with /', function()\n       eq('/', vim.fs.normalize('/'))\n     end)\n+    it('works with / (opts.collapse_slash = false)', function()\n+      eq('///', vim.fs.normalize('///', { collapse_slash = false }))\n+    end)\n     it('works with ~', function()\n       eq(vim.fs.normalize(vim.uv.os_homedir()) .. '/src/foo', vim.fs.normalize('~/src/foo'))\n     end)\n+    it('removes duplicated slashes (opts.collapse_slash = true)', function()\n+      eq('/home/user', vim.fs.normalize('//home//user//'))\n+    end)\n+    it('do not remove duplicated slashes (opts.collapse_slash = false)', function()\n+      eq('//home//user', vim.fs.normalize('//home//user//', { collapse_slash = false })) -- does remove trailing slashes",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1472168786",
            "id": 1472168786,
            "in_reply_to_id": 1472166672,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Xv4NS",
            "original_commit_id": "0a3876aa9852671900bff35f0a35dcbc5db43a38",
            "original_line": 304,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1852689952,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472168786/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-31T00:44:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472168786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1472172628"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472172628"
                }
            },
            "author_association": "MEMBER",
            "body": "No. `//home//user//` and `//home/user/` are equivalent paths, yet `normalize({collapse_slash=false})` would return different results. Why can't it return `//home/user` if the input is `//home//user//`?",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-31T00:50:22Z",
            "diff_hunk": "@@ -291,9 +291,18 @@ describe('vim.fs', function()\n     it('works with /', function()\n       eq('/', vim.fs.normalize('/'))\n     end)\n+    it('works with / (opts.collapse_slash = false)', function()\n+      eq('///', vim.fs.normalize('///', { collapse_slash = false }))\n+    end)\n     it('works with ~', function()\n       eq(vim.fs.normalize(vim.uv.os_homedir()) .. '/src/foo', vim.fs.normalize('~/src/foo'))\n     end)\n+    it('removes duplicated slashes (opts.collapse_slash = true)', function()\n+      eq('/home/user', vim.fs.normalize('//home//user//'))\n+    end)\n+    it('do not remove duplicated slashes (opts.collapse_slash = false)', function()\n+      eq('//home//user', vim.fs.normalize('//home//user//', { collapse_slash = false })) -- does remove trailing slashes",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1472172628",
            "id": 1472172628,
            "in_reply_to_id": 1472166672,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Xv5JU",
            "original_commit_id": "0a3876aa9852671900bff35f0a35dcbc5db43a38",
            "original_line": 304,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1852696351,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472172628/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-31T00:50:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472172628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1472261122"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472261122"
                }
            },
            "author_association": "NONE",
            "body": "As the literal option name suggests, this PR was intended to toggle whether to collapse multiple slashes into one. \n\nI didn't want to talk about any particular file system but more from a programming perspective and stop `gsub(\"/+\", ...)` since it is an irreversible operation. \n\nI think fs.normalize has three missions. \n\n1. Change all `\\` to `/`\n2. Expand envvars (eg $HOME)\n3. Shrink duplicated slashes. \n\nAs we do have an option to toggle `2.`, I thought why couldn't there be an option to toggle `3.`?\n\nEDIT:\nAdd\n4. Remove trailing slashes",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-31T03:24:19Z",
            "diff_hunk": "@@ -291,9 +291,18 @@ describe('vim.fs', function()\n     it('works with /', function()\n       eq('/', vim.fs.normalize('/'))\n     end)\n+    it('works with / (opts.collapse_slash = false)', function()\n+      eq('///', vim.fs.normalize('///', { collapse_slash = false }))\n+    end)\n     it('works with ~', function()\n       eq(vim.fs.normalize(vim.uv.os_homedir()) .. '/src/foo', vim.fs.normalize('~/src/foo'))\n     end)\n+    it('removes duplicated slashes (opts.collapse_slash = true)', function()\n+      eq('/home/user', vim.fs.normalize('//home//user//'))\n+    end)\n+    it('do not remove duplicated slashes (opts.collapse_slash = false)', function()\n+      eq('//home//user', vim.fs.normalize('//home//user//', { collapse_slash = false })) -- does remove trailing slashes",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1472261122",
            "id": 1472261122,
            "in_reply_to_id": 1472166672,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XwOwC",
            "original_commit_id": "0a3876aa9852671900bff35f0a35dcbc5db43a38",
            "original_line": 304,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1852828315,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472261122/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-31T03:26:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472261122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1472897840"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472897840"
                }
            },
            "author_association": "MEMBER",
            "body": "> I think fs.normalize has three missions.\r\n\r\nNo, its mission is to produce a canonical result for all equivalent forms of any kind of path. That means it should also consistently set drive-letter to uppercase or lowercase (doesn't matter which I guess, but it should choose one).",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-31T14:22:28Z",
            "diff_hunk": "@@ -291,9 +291,18 @@ describe('vim.fs', function()\n     it('works with /', function()\n       eq('/', vim.fs.normalize('/'))\n     end)\n+    it('works with / (opts.collapse_slash = false)', function()\n+      eq('///', vim.fs.normalize('///', { collapse_slash = false }))\n+    end)\n     it('works with ~', function()\n       eq(vim.fs.normalize(vim.uv.os_homedir()) .. '/src/foo', vim.fs.normalize('~/src/foo'))\n     end)\n+    it('removes duplicated slashes (opts.collapse_slash = true)', function()\n+      eq('/home/user', vim.fs.normalize('//home//user//'))\n+    end)\n+    it('do not remove duplicated slashes (opts.collapse_slash = false)', function()\n+      eq('//home//user', vim.fs.normalize('//home//user//', { collapse_slash = false })) -- does remove trailing slashes",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1472897840",
            "id": 1472897840,
            "in_reply_to_id": 1472166672,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XyqMw",
            "original_commit_id": "0a3876aa9852671900bff35f0a35dcbc5db43a38",
            "original_line": 304,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1853863259,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472897840/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-31T14:23:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472897840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1473154372"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473154372"
                }
            },
            "author_association": "NONE",
            "body": "This is a nice idea. Added!",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-01-31T16:54:26Z",
            "diff_hunk": "@@ -291,9 +291,18 @@ describe('vim.fs', function()\n     it('works with /', function()\n       eq('/', vim.fs.normalize('/'))\n     end)\n+    it('works with / (opts.collapse_slash = false)', function()\n+      eq('///', vim.fs.normalize('///', { collapse_slash = false }))\n+    end)\n     it('works with ~', function()\n       eq(vim.fs.normalize(vim.uv.os_homedir()) .. '/src/foo', vim.fs.normalize('~/src/foo'))\n     end)\n+    it('removes duplicated slashes (opts.collapse_slash = true)', function()\n+      eq('/home/user', vim.fs.normalize('//home//user//'))\n+    end)\n+    it('do not remove duplicated slashes (opts.collapse_slash = false)', function()\n+      eq('//home//user', vim.fs.normalize('//home//user//', { collapse_slash = false })) -- does remove trailing slashes",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1473154372",
            "id": 1473154372,
            "in_reply_to_id": 1472166672,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Xzo1E",
            "original_commit_id": "0a3876aa9852671900bff35f0a35dcbc5db43a38",
            "original_line": 304,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1854318398,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473154372/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-31T16:54:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473154372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1473738728"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473738728"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---             - expand_env: (boolean) Expand environment variables. Defaults to true.\r\n```",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T02:59:51Z",
            "diff_hunk": "@@ -338,7 +338,7 @@ end\n ---\n ---@param path (string) Path to normalize\n ---@param opts table|nil Options:\n----             - expand_env: boolean Expand environment variables (default: true)\n+---             - expand_env: (boolean, default true) Expand environment variables",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1473738728",
            "id": 1473738728,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X13fo",
            "original_commit_id": "21db99402001147d59cfb10814617862cf8c1b54",
            "original_line": 341,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1855287753,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473738728/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T03:03:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473738728",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1473739163"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473739163"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    it('works with UNC paths #27068 #27202', function()\r\n```",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T03:00:34Z",
            "diff_hunk": "@@ -307,10 +313,26 @@ describe('vim.fs', function()\n         )\n       )\n     end)\n+    it('works with UNC paths', function()\n+      -- See https://github.com/neovim/neovim/issues/27068 for more detail",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1473739163",
            "id": 1473739163,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X13mb",
            "original_commit_id": "21db99402001147d59cfb10814617862cf8c1b54",
            "original_line": 317,
            "original_position": 24,
            "original_start_line": 316,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1855287753,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473739163/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-01T03:03:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473739163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1473740389"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473740389"
                }
            },
            "author_association": "MEMBER",
            "body": "The single-letter string represented as `\\\\` instead of `\\` due to escaping is quite confusing given that we now want to deal with double slashes. Can you change `'...\\\\...'` with `[[...\\...]]` (including existing test cases)? This will make tests more readable.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T03:02:59Z",
            "diff_hunk": "@@ -285,12 +285,18 @@ describe('vim.fs', function()\n     it('works with backward slashes', function()\n       eq('C:/Users/jdoe', vim.fs.normalize('C:\\\\Users\\\\jdoe'))\n     end)\n+    it('works with mixed forward and backward slashes', function()\n+      eq('C:/Users/jdoe', vim.fs.normalize('C:\\\\//Users//\\\\jdoe//\\\\'))",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1473740389",
            "id": 1473740389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X135l",
            "original_commit_id": "21db99402001147d59cfb10814617862cf8c1b54",
            "original_line": 289,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1855287753,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473740389/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T03:03:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473740389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1473768495"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473768495"
                }
            },
            "author_association": "NONE",
            "body": "Fair enough. I'll change all of them into raw string notation.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T04:03:49Z",
            "diff_hunk": "@@ -285,12 +285,18 @@ describe('vim.fs', function()\n     it('works with backward slashes', function()\n       eq('C:/Users/jdoe', vim.fs.normalize('C:\\\\Users\\\\jdoe'))\n     end)\n+    it('works with mixed forward and backward slashes', function()\n+      eq('C:/Users/jdoe', vim.fs.normalize('C:\\\\//Users//\\\\jdoe//\\\\'))",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1473768495",
            "id": 1473768495,
            "in_reply_to_id": 1473740389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X1-wv",
            "original_commit_id": "21db99402001147d59cfb10814617862cf8c1b54",
            "original_line": 289,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/lua/fs_spec.lua",
            "position": null,
            "pull_request_review_id": 1855337788,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473768495/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T04:03:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1473768495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474141088"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474141088"
                }
            },
            "author_association": "MEMBER",
            "body": "Should probably check the first char is `[a-zA-Z]`\n\nDoesn't this also assume that `path[3]` is `/` which it might not be?",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T09:49:56Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474141088",
            "id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X3Zug",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856041780,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474141088/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T09:59:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474141088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474149537"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474149537"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems a bit cleaner\r\n\r\n```suggestion\r\n  path = path:gsub('\\\\', '/')\r\n  path = path:sub(1, 1) .. path:sub(2):gsub('/+', '/')\r\n```",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T09:55:07Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474149537",
            "id": 1474149537,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X3byh",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 360,
            "original_position": 29,
            "original_start_line": 359,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856054087,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474149537/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-01T09:55:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474149537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474158890"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474158890"
                }
            },
            "author_association": "NONE",
            "body": "I don't think so. Colon is not a valid character for a path string except right after the device name.\n\nAnd even if it is true, I'm just doing `string.upper(first)` which does nothing when `first` is not an alphabet in the first place. ",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T10:00:38Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474158890",
            "id": 1474158890,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X3eEq",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856066564,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474158890/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T10:01:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474158890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474163700"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474163700"
                }
            },
            "author_association": "MEMBER",
            "body": "This function needs to gracefully handle any old junk that's passed to it, so it needs to be sensible with invalid paths. So we should only mangle if the path matches `^[a-zA-Z]:/`, otherwise we just leave it alone.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T10:03:38Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474163700",
            "id": 1474163700,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X3fP0",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856072860,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474163700/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T10:03:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474163700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474168112"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474168112"
                }
            },
            "author_association": "NONE",
            "body": "This is wrong. We must have `:gsub('/$', '')` to strip the trailing slash (eg `foo/bar/`)\r\n\r\nYour solution will then require to call `gsub` 3 times, which is not efficient.\r\n\r\nIiuc, we should assume this function will be called _a lot_ of times, so we should take performance over code readability, and tbh, I think my solution is quite clean ngl.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T10:06:34Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474168112",
            "id": 1474168112,
            "in_reply_to_id": 1474149537,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X3gUw",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 360,
            "original_position": 29,
            "original_start_line": 359,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856078800,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474168112/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-01T10:06:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474168112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474170436"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474170436"
                }
            },
            "author_association": "NONE",
            "body": "I mean that `string.upper` will do nothing if the first letter is not an alphabet. Am I right?",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T10:08:06Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474170436",
            "id": 1474170436,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X3g5E",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856081901,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474170436/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T10:08:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474170436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474203045"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474203045"
                }
            },
            "author_association": "MEMBER",
            "body": "If you want to avoid another gsub then I suggest not doing `:gsub('/$', '')` and instead do \r\n\r\n```lua\r\nif path:sub(-1) == '/' then\r\n  path = path:sub(1, -2)\r\nend\r\n```\r\n\r\n> so we should take performance over code readability, and tbh, I think my solution is quite clean ngl.\r\n\r\nNothing indicates this function is a bottleneck in any code path. And if you're dealing with the file system any `gsub`'s are going to be completely dwarfed by calls out to the system.\r\n\r\n",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T10:29:12Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474203045",
            "id": 1474203045,
            "in_reply_to_id": 1474149537,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X3o2l",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 360,
            "original_position": 29,
            "original_start_line": 359,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856124124,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474203045/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-01T10:29:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474203045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474239541"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474239541"
                }
            },
            "author_association": "NONE",
            "body": "I don't think this is clean and I think it makes the code less readable. So I see no reason to change my code.\r\n\r\n> Nothing indicates this function is a bottleneck in any code path. And if you're dealing with the file system any `gsub`'s are going to be completely dwarfed by calls out to the system.\r\n\r\nI see.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T10:52:15Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474239541",
            "id": 1474239541,
            "in_reply_to_id": 1474149537,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X3xw1",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 360,
            "original_position": 29,
            "original_start_line": 359,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856172827,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474239541/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-01T10:52:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474239541",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474262585"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474262585"
                }
            },
            "author_association": "MEMBER",
            "body": "That's unfortunate. Personally, I don't think squashing many terms into a single line that do multiple things is clean at all. It's short, but it isn't clean or easy to understand. By breaking it down into multiple independent operations, the reader can comprehend each distinct step separately.\r\n\r\nAnd if we keep the additional `gsub`, because realistically this isn't going meaningfully affect performance, then I fail to see how:\r\n\r\n```lua\r\nlocal first = path:sub(1, 1)\r\npath = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\r\n```\r\n\r\nIs cleaner than:\r\n```lua\r\npath = path:gsub('\\\\', '/')  -- Normalize slashes\r\npath = path:sub(1, 1) .. path:sub(2):gsub('/+', '/'):gsub('/$', '')  -- Remove redundant slashes\r\n```",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T11:08:29Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474262585",
            "id": 1474262585,
            "in_reply_to_id": 1474149537,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X33Y5",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 360,
            "original_position": 29,
            "original_start_line": 359,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856203492,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474262585/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-01T11:08:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474262585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474286115"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474286115"
                }
            },
            "author_association": "NONE",
            "body": "I don't think your code explains it well enough because _Remove redundant slashes_ does not explain `sub(1, 1)` and its quite unclear anyways.\r\n\r\nIt doesn't document that `//` will result in `/` but `//foo` will be `//foo`, and `///foo` will be `//foo`.\r\n\r\nI didn't want to say that my code is cleaner, but I meant any code will not be clear anyways, and didn't find a reason to introduce another gsub for little benifit.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T11:25:13Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474286115",
            "id": 1474286115,
            "in_reply_to_id": 1474149537,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X39Ij",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 360,
            "original_position": 29,
            "original_start_line": 359,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856236262,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474286115/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-01T11:25:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474286115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474302248"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474302248"
                }
            },
            "author_association": "NONE",
            "body": "@lewis6991 Do I need to change anything here?",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T11:33:46Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474302248",
            "id": 1474302248,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X4BEo",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856257263,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474302248/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T11:33:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474302248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474323526"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474323526"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, this code assumes `path[3] == '/'` which it might not be. I think we need to match `^[a-zA-Z]:/` exactly here so we only mangle if we absolutely need to.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T11:46:46Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474323526",
            "id": 1474323526,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X4GRG",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856288564,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474323526/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T11:46:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474323526",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474325097"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474325097"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  if iswin and path:match('^[a-zA-Z]:/') then -- Capitalize Windows drive name\r\n```",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T11:47:53Z",
            "diff_hunk": "@@ -349,22 +349,26 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  path = path:gsub([[\\]], '/') -- Normalize slashes\n+\n+  local first = path:sub(1, 1)\n+  path = first .. path:sub(2):gsub('/+', '/'):gsub('/$', '') -- Remove redundant slashes\n+  -- UNC path starts with double (or more) slashes, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('/+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- Capitalize Windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474325097",
            "id": 1474325097,
            "line": 368,
            "node_id": "PRRC_kwDOAPphoM5X4Gpp",
            "original_commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "original_line": 368,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 37,
            "pull_request_review_id": 1856290521,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474325097/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T11:47:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474325097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474327434"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474327434"
                }
            },
            "author_association": "NONE",
            "body": "No. Due to `path:sub(2):...:gsub('/$', '')`, `C:/` will be converted to `C:` temporary and a slash must be added afterwards to negate this behavior.\r\n\r\nPlease read the code.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T11:49:34Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474327434",
            "id": 1474327434,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X4HOK",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856293440,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474327434/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T11:49:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474327434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474333106"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474333106"
                }
            },
            "author_association": "MEMBER",
            "body": "> Please read the code.\r\n\r\nPlease be polite. I don't have to review this.\r\n\r\n> Due to path:sub(2):...:gsub('/$', ''), C:/ will be converted to C: temporary and a slash must be added afterwards to negate this behavior.\r\n\r\nThis is not obvious at all. And despite this, it still assumes `path[3] == '/'` for cases other than `C:/`",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T11:53:39Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474333106",
            "id": 1474333106,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X4Imy",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856301818,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474333106/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T11:53:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474333106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474356661"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474356661"
                }
            },
            "author_association": "NONE",
            "body": "I thought you understood this while writing https://github.com/neovim/neovim/pull/27202#discussion_r1474262585? \r\nIt is the exact behavior you wrote in the comments.\r\n\r\n> And despite this, it still assumes `path[3] == '/'` for cases other than `C:/`\r\n\r\nIn [this issue](https://github.com/neovim/neovim/issues/27068) you refused to bring UNC paths because it is not supported by the Unix path standard. And now I feel like you are trying to support all edge cases for every file system. May I ask what direction you are towards right now?\r\n\r\nBesides that, is there an edge case where `iswin and path:sub(2, 2) == ':'` but `path[3] ~= '/'`?",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T12:10:05Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474356661",
            "id": 1474356661,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X4OW1",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856333251,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474356661/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T12:10:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474356661",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1474403639"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474403639"
                }
            },
            "author_association": "MEMBER",
            "body": "> I thought you understood this while writing https://github.com/neovim/neovin/pull/27202#discussion_r1474262585?\r\nIt is the exact behavior you wrote in the comments.\r\n\r\nNo, not at all. That specific code is all about normalizing slashes AND preserving leading `//`. It has nothing to do with the single `C:/` edge case.\r\n\r\n> In https://github.com/neovim/neovim/issues/27068 you refused to bring UNC paths because it is not supported by the Unix path standard. And now I feel like you are trying to support all edge cases for every file system. May I ask what direction you are towards right now?\r\n\r\nWe support it or we don't support it. We've decided to support it and there is a glaring bug in this code.\r\n\r\nTo put it simply.\r\n\r\n```\r\nc:some_invalid_path\r\n```\r\nshould NOT normalize to:\r\n```\r\nC:/ome_invalid_path\r\n```",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-01T12:43:06Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1474403639",
            "id": 1474403639,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5X4Z03",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1856400463,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474403639/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-01T12:43:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1474403639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27202#discussion_r1486374011"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27202"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486374011"
                }
            },
            "author_association": "NONE",
            "body": "Thank you for your input. I find your words quite hurtful, so I would prefer not to contribute anymore.\r\n\r\nI wish the best of luck for this project.",
            "commit_id": "1c7a03f7a878d2723420a1832128478660f06051",
            "created_at": "2024-02-12T15:47:41Z",
            "diff_hunk": "@@ -349,22 +349,24 @@ function M.normalize(path, opts)\n   })\n \n   if path:sub(1, 1) == '~' then\n-    local home = vim.uv.os_homedir() or '~'\n-    if home:sub(-1) == '\\\\' or home:sub(-1) == '/' then\n-      home = home:sub(1, -2)\n-    end\n-    path = home .. path:sub(2)\n+    path = (vim.uv.os_homedir() or '~') .. '/' .. path:sub(2)\n   end\n \n   if opts.expand_env == nil or opts.expand_env then\n     path = path:gsub('%$([%w_]+)', vim.uv.os_getenv)\n   end\n \n-  path = path:gsub('\\\\', '/'):gsub('/+', '/')\n-  if iswin and path:match('^%w:/$') then\n-    return path\n+  local first = path:sub(1, 1)\n+  path = (first == '\\\\' and '/' or first) .. path:sub(2):gsub('[\\\\/]+', '/'):gsub('/$', '')\n+  -- UNC path starts with double (or more) slash, followed by more than one character.\n+  -- Therefore ignore first letter from `:gsub('[\\\\/]+', '/')`.\n+  -- `//` is not a valid UNC path, hence converted to `/` with `:gsub('/$', '')`.\n+  -- This also keeps traling slash in the case of root `/`, but removes it otherwise.\n+\n+  if iswin and path:sub(2, 2) == ':' then -- capitalize windows drive name",
            "html_url": "https://github.com/neovim/neovim/pull/27202#discussion_r1486374011",
            "id": 1486374011,
            "in_reply_to_id": 1474141088,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YmER7",
            "original_commit_id": "ad69d6597c87d69261971bd6909fa95739e0bcf4",
            "original_line": 366,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1875548727,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486374011/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-12T15:47:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486374011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "Do you think unc = true should be the default?",
            "created_at": "2024-01-31T04:11:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/27202#issuecomment-1918347208",
            "id": 1918347208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27202",
            "node_id": "IC_kwDOAPphoM5yV6fI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1918347208/reactions"
            },
            "updated_at": "2024-01-31T04:11:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1918347208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Proposal\r\n\r\n- Let's start by special-casing `//foo`. Although that violates the \"determinism\" of `normalize()`, in practice it's unlikely to matter. \r\n    - That's also what python does: https://github.com/neovim/neovim/issues/27068#issuecomment-1919219691\r\n    - And .NET `Uri`: https://learn.microsoft.com/en-us/dotnet/core/compatibility/core-libraries/5.0/unc-path-recognition-unix\r\n- `//` must be followed by something to be considered UNC. `//foo` is UNC, `//` is not.\r\n- `normalize()` never _adds_ a double-slash, but it should be able to _accept_ UNC (double-slash) paths without mangling them. Same for drive-letter paths.\r\n- The goal of `normalize()` is to produce a canonical result for all equivalent forms of any kind of path. That means it should also consistently set drive-letter to uppercase or lowercase (doesn't matter which I guess, but it should choose one).\r\n\r\n\r\n\r\nSo the following test cases represent what I propose:\r\n\r\n```\r\n//foo          => //foo      # UNC path.\r\n///foo         => //foo      # UNC path. Alternatively we could treat as invalid UNC, then => /foo\r\n/foo           => /foo       # Not a UNC path.\r\n/              => /          # Not a UNC path.\r\n//             => /          # Not a UNC path.\r\n///            => /          # Not a UNC path.\r\n//foo//bar//// => //foo/bar  # UNC path.\r\n/foo//bar////  => /foo/bar   # Not a UNC path.\r\n/foo//         => /foo       # Not a UNC path.\r\n```",
            "created_at": "2024-01-31T14:12:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/27202#issuecomment-1919183890",
            "id": 1919183890,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27202",
            "node_id": "IC_kwDOAPphoM5yZGwS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919183890/reactions"
            },
            "updated_at": "2024-01-31T15:15:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919183890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you very much for your feedbacks.\r\n\r\nI totally agree with @justinmk 's proposal, and fixed the code to support UNC paths.\r\n\r\nI've removed `collapse_slashes` option and changed the code to support UNC paths out of the box.\r\nI've also added test cases listed in https://github.com/neovim/neovim/pull/27202#issuecomment-1919183890 in `fs_spec.lua`. Thanks @justinmk !\r\n\r\nAs suggested [here](https://github.com/neovim/neovim/pull/27202#discussion_r1472897840), I also made it so drive name in Windows paths (`C:/`) will always be capitalized (and added tests as well).\r\n\r\nI'd be more than happy to hear your opinions! @justinmk @wookayin @lewis6991 @gpanders @dundargoc \r\n\r\nP.S Are the comments useful? I'm not a native English speaker so the explanation might not be clear.",
            "created_at": "2024-01-31T16:33:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/27202#issuecomment-1919471413",
            "id": 1919471413,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27202",
            "node_id": "IC_kwDOAPphoM5yaM81",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919471413/reactions"
            },
            "updated_at": "2024-01-31T16:33:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919471413",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27202/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27202/commits",
    "created_at": "2024-01-26T01:14:32Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27202.diff",
    "draft": false,
    "head": {
        "label": "pysan3:fs.normalize-keep-dups",
        "ref": "fs.normalize-keep-dups",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/pysan3/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/pysan3/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/pysan3/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/pysan3/neovim/branches{/branch}",
            "clone_url": "https://github.com/pysan3/neovim.git",
            "collaborators_url": "https://api.github.com/repos/pysan3/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/pysan3/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/pysan3/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/pysan3/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/pysan3/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/pysan3/neovim/contributors",
            "created_at": "2024-01-25T23:11:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/pysan3/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/pysan3/neovim/downloads",
            "events_url": "https://api.github.com/repos/pysan3/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/pysan3/neovim/forks",
            "full_name": "pysan3/neovim",
            "git_commits_url": "https://api.github.com/repos/pysan3/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/pysan3/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/pysan3/neovim/git/tags{/sha}",
            "git_url": "git://github.com/pysan3/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/pysan3/neovim/hooks",
            "html_url": "https://github.com/pysan3/neovim",
            "id": 748415485,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/pysan3/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/pysan3/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/pysan3/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/pysan3/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/pysan3/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/pysan3/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/pysan3/neovim/merges",
            "milestones_url": "https://api.github.com/repos/pysan3/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOLJvp_Q",
            "notifications_url": "https://api.github.com/repos/pysan3/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/pysan3/neovim/pulls{/number}",
            "pushed_at": "2024-02-01T11:33:17Z",
            "releases_url": "https://api.github.com/repos/pysan3/neovim/releases{/id}",
            "size": 254258,
            "ssh_url": "git@github.com:pysan3/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/pysan3/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/pysan3/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/pysan3/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/pysan3/neovim/subscription",
            "svn_url": "https://github.com/pysan3/neovim",
            "tags_url": "https://api.github.com/repos/pysan3/neovim/tags",
            "teams_url": "https://api.github.com/repos/pysan3/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/pysan3/neovim/git/trees{/sha}",
            "updated_at": "2024-01-26T00:57:09Z",
            "url": "https://api.github.com/repos/pysan3/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "1c7a03f7a878d2723420a1832128478660f06051",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
            "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
            "followers_url": "https://api.github.com/users/pysan3/followers",
            "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
            "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/pysan3",
            "id": 41065736,
            "login": "pysan3",
            "node_id": "MDQ6VXNlcjQxMDY1NzM2",
            "organizations_url": "https://api.github.com/users/pysan3/orgs",
            "received_events_url": "https://api.github.com/users/pysan3/received_events",
            "repos_url": "https://api.github.com/users/pysan3/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/pysan3"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27202",
    "id": 1696502619,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27202",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "dc21704fe29f77fef4d1c6a88b6817604930d188",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5lHpNb",
    "number": 27202,
    "patch_url": "https://github.com/neovim/neovim/pull/27202.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27202/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/1c7a03f7a878d2723420a1832128478660f06051",
    "title": "feat(fs): add UNC paths support in fs.normalize",
    "updated_at": "2024-02-12T15:47:50Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27202",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
        "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
        "followers_url": "https://api.github.com/users/pysan3/followers",
        "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
        "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pysan3",
        "id": 41065736,
        "login": "pysan3",
        "node_id": "MDQ6VXNlcjQxMDY1NzM2",
        "organizations_url": "https://api.github.com/users/pysan3/orgs",
        "received_events_url": "https://api.github.com/users/pysan3/received_events",
        "repos_url": "https://api.github.com/users/pysan3/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pysan3"
    }
}