{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27844/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27844/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27844"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27844"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27844/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27844"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/5c5fae8f32ea393df7bef32dd5e2a3091d6c9980"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5522,
            "forks_count": 5522,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1780,
            "open_issues_count": 1780,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-08-06T02:02:19Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 281986,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 80581,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-08-06T00:47:31Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 80581,
            "watchers_count": 80581,
            "web_commit_signoff_required": false
        },
        "sha": "2a8cef6bd450febd88d754e0c1909137b7451757",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "`on_line_impl` doesn't highlight single lines, so using pattern indexes to offset priority doesn't work on its own. Need to also use the injection level.",
    "closed_at": "2024-03-14T06:55:19Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27844#discussion_r1523577550"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27844"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523577550"
                }
            },
            "author_association": "MEMBER",
            "body": "`url` _could_ be a string, though it's likely not a common use case. Example:\r\n\r\n```query\r\n(#set! @foo \"url\" \"https://example.com\")\r\n```",
            "commit_id": "5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
            "created_at": "2024-03-13T16:27:53Z",
            "diff_hunk": "@@ -243,19 +252,53 @@ function TSHighlighter:get_query(lang)\n   return self._queries[lang]\n end\n \n+--- @param match table<integer,TSNode[]>\n+--- @param bufnr integer\n+--- @param capture integer\n+--- @param metadata vim.treesitter.query.TSMetadata\n+--- @return string?\n+local function get_url(match, bufnr, capture, metadata)\n+  ---@type string|number|nil\n+  local url = metadata[capture] and metadata[capture].url\n+\n+  if type(url) ~= 'number' then\n+    return",
            "html_url": "https://github.com/neovim/neovim/pull/27844#discussion_r1523577550",
            "id": 1523577550,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5az_LO",
            "original_commit_id": "f21f25875135baafa1d0d622462f5e8bea490903",
            "original_line": 265,
            "original_position": 43,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 1934664966,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27844",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523577550/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-03-13T16:27:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523577550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27844#discussion_r1523580695"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27844"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523580695"
                }
            },
            "author_association": "MEMBER",
            "body": "I haven't meaningfully changed the code here. I've just adapted it to the return-early pattern. Do you want me to remove this term?",
            "commit_id": "5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
            "created_at": "2024-03-13T16:29:55Z",
            "diff_hunk": "@@ -243,19 +252,53 @@ function TSHighlighter:get_query(lang)\n   return self._queries[lang]\n end\n \n+--- @param match table<integer,TSNode[]>\n+--- @param bufnr integer\n+--- @param capture integer\n+--- @param metadata vim.treesitter.query.TSMetadata\n+--- @return string?\n+local function get_url(match, bufnr, capture, metadata)\n+  ---@type string|number|nil\n+  local url = metadata[capture] and metadata[capture].url\n+\n+  if type(url) ~= 'number' then\n+    return",
            "html_url": "https://github.com/neovim/neovim/pull/27844#discussion_r1523580695",
            "id": 1523580695,
            "in_reply_to_id": 1523577550,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5az_8X",
            "original_commit_id": "f21f25875135baafa1d0d622462f5e8bea490903",
            "original_line": 265,
            "original_position": 43,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 1934669647,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27844",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523580695/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-03-13T16:29:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523580695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27844#discussion_r1523581475"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27844"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523581475"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh wait, yes I have good catch, I'll fix.",
            "commit_id": "5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
            "created_at": "2024-03-13T16:30:26Z",
            "diff_hunk": "@@ -243,19 +252,53 @@ function TSHighlighter:get_query(lang)\n   return self._queries[lang]\n end\n \n+--- @param match table<integer,TSNode[]>\n+--- @param bufnr integer\n+--- @param capture integer\n+--- @param metadata vim.treesitter.query.TSMetadata\n+--- @return string?\n+local function get_url(match, bufnr, capture, metadata)\n+  ---@type string|number|nil\n+  local url = metadata[capture] and metadata[capture].url\n+\n+  if type(url) ~= 'number' then\n+    return",
            "html_url": "https://github.com/neovim/neovim/pull/27844#discussion_r1523581475",
            "id": 1523581475,
            "in_reply_to_id": 1523577550,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5a0AIj",
            "original_commit_id": "f21f25875135baafa1d0d622462f5e8bea490903",
            "original_line": 265,
            "original_position": 43,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": null,
            "pull_request_review_id": 1934670794,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27844",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523581475/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-03-13T16:30:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523581475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27844#discussion_r1523581994"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27844"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523581994"
                }
            },
            "author_association": "MEMBER",
            "body": "I avoided using some constant scaling factor intentionally because you run the risk of the offset exceeding this factor. It's true that it's _unlikely_ that there will ever be more than 1000 patterns in a query, but I still think fixed scale factors like this are not robust (it's the \"640K RAM should be enough for anyone\" mistake all over again). That is the reason I used the maximum index from the previous tree.",
            "commit_id": "5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
            "created_at": "2024-03-13T16:30:45Z",
            "diff_hunk": "@@ -243,19 +252,53 @@ function TSHighlighter:get_query(lang)\n   return self._queries[lang]\n end\n \n+--- @param match table<integer,TSNode[]>\n+--- @param bufnr integer\n+--- @param capture integer\n+--- @param metadata vim.treesitter.query.TSMetadata\n+--- @return string?\n+local function get_url(match, bufnr, capture, metadata)\n+  ---@type string|number|nil\n+  local url = metadata[capture] and metadata[capture].url\n+\n+  if type(url) ~= 'number' then\n+    return\n+  end\n+\n+  if not match or not match[url] then\n+    return\n+  end\n+\n+  -- Assume there is only one matching node. If there is more than one, take the URL\n+  -- from the first.\n+  local other_node = match[url][1]\n+\n+  return vim.treesitter.get_node_text(other_node, bufnr, {\n+    metadata = metadata[url],\n+  })\n+end\n+\n+--- @param capture_name string\n+--- @return boolean?, integer\n+local function get_spell(capture_name)\n+  if capture_name == 'spell' then\n+    return true, 0\n+  elseif capture_name == 'nospell' then\n+    -- Give nospell a higher priority so it always overrides spell captures.\n+    return false, 1\n+  end\n+  return nil, 0\n+end\n+\n ---@param self vim.treesitter.highlighter\n ---@param buf integer\n ---@param line integer\n ---@param is_spell_nav boolean\n local function on_line_impl(self, buf, line, is_spell_nav)\n-  -- Track the maximum pattern index encountered in each tree. For subsequent\n-  -- trees, the subpriority passed to nvim_buf_set_extmark is offset by the\n-  -- largest pattern index from the prior tree. This ensures that extmarks\n-  -- from subsequent trees always appear \"on top of\" extmarks from previous\n-  -- trees (e.g. injections should always appear over base highlights).\n-  local pattern_offset = 0\n-\n   self:for_each_highlight_state(function(state)\n+    -- Use the injection level to offset the subpriority passed to nvim_buf_set_extmark\n+    -- so injections always appear over base highlights.\n+    local pattern_offset = state.level * 1000",
            "html_url": "https://github.com/neovim/neovim/pull/27844#discussion_r1523581994",
            "id": 1523581994,
            "line": 301,
            "node_id": "PRRC_kwDOAPphoM5a0AQq",
            "original_commit_id": "f21f25875135baafa1d0d622462f5e8bea490903",
            "original_line": 301,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": 86,
            "pull_request_review_id": 1934671551,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27844",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523581994/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-03-13T16:31:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523581994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27844#discussion_r1523586995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27844"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523586995"
                }
            },
            "author_association": "MEMBER",
            "body": "It's not ideal, but I don't know what else we can do. The issue is extmarks from different `on_line_impl` calls are competing.\r\n\r\n... unless ... sub-sub-priority? /s",
            "commit_id": "5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
            "created_at": "2024-03-13T16:34:16Z",
            "diff_hunk": "@@ -243,19 +252,53 @@ function TSHighlighter:get_query(lang)\n   return self._queries[lang]\n end\n \n+--- @param match table<integer,TSNode[]>\n+--- @param bufnr integer\n+--- @param capture integer\n+--- @param metadata vim.treesitter.query.TSMetadata\n+--- @return string?\n+local function get_url(match, bufnr, capture, metadata)\n+  ---@type string|number|nil\n+  local url = metadata[capture] and metadata[capture].url\n+\n+  if type(url) ~= 'number' then\n+    return\n+  end\n+\n+  if not match or not match[url] then\n+    return\n+  end\n+\n+  -- Assume there is only one matching node. If there is more than one, take the URL\n+  -- from the first.\n+  local other_node = match[url][1]\n+\n+  return vim.treesitter.get_node_text(other_node, bufnr, {\n+    metadata = metadata[url],\n+  })\n+end\n+\n+--- @param capture_name string\n+--- @return boolean?, integer\n+local function get_spell(capture_name)\n+  if capture_name == 'spell' then\n+    return true, 0\n+  elseif capture_name == 'nospell' then\n+    -- Give nospell a higher priority so it always overrides spell captures.\n+    return false, 1\n+  end\n+  return nil, 0\n+end\n+\n ---@param self vim.treesitter.highlighter\n ---@param buf integer\n ---@param line integer\n ---@param is_spell_nav boolean\n local function on_line_impl(self, buf, line, is_spell_nav)\n-  -- Track the maximum pattern index encountered in each tree. For subsequent\n-  -- trees, the subpriority passed to nvim_buf_set_extmark is offset by the\n-  -- largest pattern index from the prior tree. This ensures that extmarks\n-  -- from subsequent trees always appear \"on top of\" extmarks from previous\n-  -- trees (e.g. injections should always appear over base highlights).\n-  local pattern_offset = 0\n-\n   self:for_each_highlight_state(function(state)\n+    -- Use the injection level to offset the subpriority passed to nvim_buf_set_extmark\n+    -- so injections always appear over base highlights.\n+    local pattern_offset = state.level * 1000",
            "html_url": "https://github.com/neovim/neovim/pull/27844#discussion_r1523586995",
            "id": 1523586995,
            "in_reply_to_id": 1523581994,
            "line": 301,
            "node_id": "PRRC_kwDOAPphoM5a0Bez",
            "original_commit_id": "f21f25875135baafa1d0d622462f5e8bea490903",
            "original_line": 301,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": 86,
            "pull_request_review_id": 1934679349,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27844",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523586995/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-03-13T16:38:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523586995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27844#discussion_r1523596047"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27844"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523596047"
                }
            },
            "author_association": "MEMBER",
            "body": "Tbh this really isn't the same as \"640K RAM should be enough for anyone\" . We can increase this number without consequence as we see fit. If we run out of room, we can arbitrarily make more room.\r\n\r\nAnd there is an upper limit on the amount of highlights _a human_ would require to be displayed on a screen.",
            "commit_id": "5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
            "created_at": "2024-03-13T16:40:41Z",
            "diff_hunk": "@@ -243,19 +252,53 @@ function TSHighlighter:get_query(lang)\n   return self._queries[lang]\n end\n \n+--- @param match table<integer,TSNode[]>\n+--- @param bufnr integer\n+--- @param capture integer\n+--- @param metadata vim.treesitter.query.TSMetadata\n+--- @return string?\n+local function get_url(match, bufnr, capture, metadata)\n+  ---@type string|number|nil\n+  local url = metadata[capture] and metadata[capture].url\n+\n+  if type(url) ~= 'number' then\n+    return\n+  end\n+\n+  if not match or not match[url] then\n+    return\n+  end\n+\n+  -- Assume there is only one matching node. If there is more than one, take the URL\n+  -- from the first.\n+  local other_node = match[url][1]\n+\n+  return vim.treesitter.get_node_text(other_node, bufnr, {\n+    metadata = metadata[url],\n+  })\n+end\n+\n+--- @param capture_name string\n+--- @return boolean?, integer\n+local function get_spell(capture_name)\n+  if capture_name == 'spell' then\n+    return true, 0\n+  elseif capture_name == 'nospell' then\n+    -- Give nospell a higher priority so it always overrides spell captures.\n+    return false, 1\n+  end\n+  return nil, 0\n+end\n+\n ---@param self vim.treesitter.highlighter\n ---@param buf integer\n ---@param line integer\n ---@param is_spell_nav boolean\n local function on_line_impl(self, buf, line, is_spell_nav)\n-  -- Track the maximum pattern index encountered in each tree. For subsequent\n-  -- trees, the subpriority passed to nvim_buf_set_extmark is offset by the\n-  -- largest pattern index from the prior tree. This ensures that extmarks\n-  -- from subsequent trees always appear \"on top of\" extmarks from previous\n-  -- trees (e.g. injections should always appear over base highlights).\n-  local pattern_offset = 0\n-\n   self:for_each_highlight_state(function(state)\n+    -- Use the injection level to offset the subpriority passed to nvim_buf_set_extmark\n+    -- so injections always appear over base highlights.\n+    local pattern_offset = state.level * 1000",
            "html_url": "https://github.com/neovim/neovim/pull/27844#discussion_r1523596047",
            "id": 1523596047,
            "in_reply_to_id": 1523581994,
            "line": 301,
            "node_id": "PRRC_kwDOAPphoM5a0DsP",
            "original_commit_id": "f21f25875135baafa1d0d622462f5e8bea490903",
            "original_line": 301,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": 86,
            "pull_request_review_id": 1934693686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27844",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523596047/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-03-13T16:42:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1523596047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27844#discussion_r1527116228"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27844"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1527116228"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Possible alternative: Make `TSQuery:inspect` return the number of patterns in the query and pre-compute the offset in `on_win`.",
            "commit_id": "5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
            "created_at": "2024-03-16T06:37:11Z",
            "diff_hunk": "@@ -243,19 +252,53 @@ function TSHighlighter:get_query(lang)\n   return self._queries[lang]\n end\n \n+--- @param match table<integer,TSNode[]>\n+--- @param bufnr integer\n+--- @param capture integer\n+--- @param metadata vim.treesitter.query.TSMetadata\n+--- @return string?\n+local function get_url(match, bufnr, capture, metadata)\n+  ---@type string|number|nil\n+  local url = metadata[capture] and metadata[capture].url\n+\n+  if type(url) ~= 'number' then\n+    return\n+  end\n+\n+  if not match or not match[url] then\n+    return\n+  end\n+\n+  -- Assume there is only one matching node. If there is more than one, take the URL\n+  -- from the first.\n+  local other_node = match[url][1]\n+\n+  return vim.treesitter.get_node_text(other_node, bufnr, {\n+    metadata = metadata[url],\n+  })\n+end\n+\n+--- @param capture_name string\n+--- @return boolean?, integer\n+local function get_spell(capture_name)\n+  if capture_name == 'spell' then\n+    return true, 0\n+  elseif capture_name == 'nospell' then\n+    -- Give nospell a higher priority so it always overrides spell captures.\n+    return false, 1\n+  end\n+  return nil, 0\n+end\n+\n ---@param self vim.treesitter.highlighter\n ---@param buf integer\n ---@param line integer\n ---@param is_spell_nav boolean\n local function on_line_impl(self, buf, line, is_spell_nav)\n-  -- Track the maximum pattern index encountered in each tree. For subsequent\n-  -- trees, the subpriority passed to nvim_buf_set_extmark is offset by the\n-  -- largest pattern index from the prior tree. This ensures that extmarks\n-  -- from subsequent trees always appear \"on top of\" extmarks from previous\n-  -- trees (e.g. injections should always appear over base highlights).\n-  local pattern_offset = 0\n-\n   self:for_each_highlight_state(function(state)\n+    -- Use the injection level to offset the subpriority passed to nvim_buf_set_extmark\n+    -- so injections always appear over base highlights.\n+    local pattern_offset = state.level * 1000",
            "html_url": "https://github.com/neovim/neovim/pull/27844#discussion_r1527116228",
            "id": 1527116228,
            "in_reply_to_id": 1523581994,
            "line": 301,
            "node_id": "PRRC_kwDOAPphoM5bBfHE",
            "original_commit_id": "f21f25875135baafa1d0d622462f5e8bea490903",
            "original_line": 301,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/highlighter.lua",
            "position": 86,
            "pull_request_review_id": 1940980388,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27844",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1527116228/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-03-16T06:37:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1527116228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "One question: For injection trees that overlap the original and makes it worse (PHP and HTML, where PHP inside HTML strings loses its highlighting), can the PR also do something about clipping ranges? Or is it entirely just not doable ",
            "created_at": "2024-03-14T06:37:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/27844#issuecomment-1996622390",
            "id": 1996622390,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27844",
            "node_id": "IC_kwDOAPphoM53Ago2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1996622390/reactions"
            },
            "updated_at": "2024-03-14T06:54:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1996622390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> One question: For injection trees that overlap the original and makes it worse (PHP and HTML, where PHP inside HTML strings loses its highlighting), can the PR also do something about clipping ranges? Or is it entirely just not doable \n\nThat is absolutely out of scope for this PR.",
            "created_at": "2024-03-14T06:54:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/27844#issuecomment-1996663873",
            "id": 1996663873,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27844",
            "node_id": "IC_kwDOAPphoM53AqxB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1996663873/reactions"
            },
            "updated_at": "2024-03-14T06:54:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1996663873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27844/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27844/commits",
    "created_at": "2024-03-13T14:40:56Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27844.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:tsinj",
        "ref": "tsinj",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-08-02T18:04:58Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 275253,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27844",
    "id": 1770259458,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27844",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "00c4962cd241044c9f02de39b34ca24b2711de43",
    "merged_at": "2024-03-14T06:55:19Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5phAQC",
    "number": 27844,
    "patch_url": "https://github.com/neovim/neovim/pull/27844.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27844/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/5c5fae8f32ea393df7bef32dd5e2a3091d6c9980",
    "title": "fix(treesitter): highlight injections properly",
    "updated_at": "2024-07-30T08:44:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27844",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}