{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/22159/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/22159/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/22159"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/22159"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/22159/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/22159"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/947a130569da5093da33ef4d3c4df003bab03546"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5024,
            "forks_count": 5024,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1702,
            "open_issues_count": 1702,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-29T01:47:25Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 241485,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71307,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-29T00:42:27Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71307,
            "watchers_count": 71307,
            "web_commit_signoff_required": false
        },
        "sha": "d1e0f7454b5fc61d26db5af5ce00c1894e7c49fc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This commit implements a new TermOSC autocommand event and has Neovim\r\nemit this event when children of terminal buffers emit an OSC sequence\r\nlibvterm does not handle.\r\n\r\nThe TermOSC autocommand event has additional data in its v:event :\r\n`command`, which corresponds to the OSC number (e.g. `7` in `OSC7`) and\r\n`payload`, which is the actual content of the command.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/22159#discussion_r1392765089"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/22159"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1392765089"
                }
            },
            "author_association": "MEMBER",
            "body": "If the event is named ~~`TermCode`~~ `TermRequest` we could \"osc\", \"dcs\", etc in the event \"pattern\".",
            "commit_id": "947a130569da5093da33ef4d3c4df003bab03546",
            "created_at": "2023-11-14T15:17:05Z",
            "diff_hunk": "@@ -169,6 +170,50 @@ static VTermScreenCallbacks vterm_screen_callbacks = {\n   .sb_popline  = term_sb_pop,\n };\n \n+static void emit_osc_event(void **argv)\n+{\n+  int command = (int)(ptrdiff_t)argv[0];\n+  char *payload = argv[1];\n+  int payload_length = (int)(ptrdiff_t)argv[2];\n+\n+  save_v_event_T save_v_event;\n+  dict_T *dict = get_v_event(&save_v_event);\n+\n+  typval_T cmd;\n+  cmd.v_type = VAR_NUMBER;\n+  cmd.vval.v_number = command;\n+  tv_dict_add_nr(dict, S_LEN(\"command\"), cmd.vval.v_number);\n+\n+  typval_T str;\n+  str.v_type = VAR_STRING;\n+  str.vval.v_string = payload;\n+  tv_dict_add_str_len(dict, S_LEN(\"payload\"), str.vval.v_string, payload_length);\n+\n+  tv_dict_set_keys_readonly(dict);\n+\n+  apply_autocmds(EVENT_TERMOSC, NULL, NULL, false, curbuf);\n+\n+  restore_v_event(dict, &save_v_event);\n+  xfree(payload);\n+}\n+\n+static int on_osc(int command, VTermStringFragment frag, void *user)\n+{\n+  char *str = xmemdupz(frag.str, frag.len);\n+  multiqueue_put(main_loop.events, emit_osc_event, 3, command, str, frag.len);\n+  return 1;\n+}\n+\n+static VTermStateFallbacks vterm_fallbacks = {\n+  .control = NULL,\n+  .csi = NULL,\n+  .osc = on_osc,\n+  .dcs = NULL,\n+  .apc = NULL,\n+  .pm = NULL,\n+  .sos = NULL,",
            "html_url": "https://github.com/neovim/neovim/pull/22159#discussion_r1392765089",
            "id": 1392765089,
            "line": 214,
            "node_id": "PRRC_kwDOAPphoM5TA-ih",
            "original_commit_id": "947a130569da5093da33ef4d3c4df003bab03546",
            "original_line": 214,
            "original_position": 53,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": 53,
            "pull_request_review_id": 1729996643,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/22159",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1392765089/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T17:30:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1392765089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/22159#discussion_r1395916202"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/22159"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395916202"
                }
            },
            "author_association": "MEMBER",
            "body": "Instead of passing the command as a separate field from the payload, I suggest putting the command back into the sequence so that TermRequest handlers can parse the OSC sequence directly (this is how TermResponse works).\r\n\r\nSo e.g. instead of checking `v:event.command` and `v:event.payload`, have only `v:event.termrequest` (or make a `v:termrequest` analogous to `v:termresponse`? Or maybe `v:termresponse` should be moved into `v:event`?) which contains the `\\x1b]{command}` prefix.\r\n\r\n```suggestion\r\n  StringBuilder request = KV_INITIAL_VALUE;\r\n  kv_printf(request, \"\\x1b]%d%s\", command, frag.str);\r\n  multiqueue_put(main_loop.events, emit_osc_event, 1, request.items, request.size);\r\n```",
            "commit_id": "947a130569da5093da33ef4d3c4df003bab03546",
            "created_at": "2023-11-16T15:34:09Z",
            "diff_hunk": "@@ -169,6 +170,50 @@ static VTermScreenCallbacks vterm_screen_callbacks = {\n   .sb_popline  = term_sb_pop,\n };\n \n+static void emit_osc_event(void **argv)\n+{\n+  int command = (int)(ptrdiff_t)argv[0];\n+  char *payload = argv[1];\n+  int payload_length = (int)(ptrdiff_t)argv[2];\n+\n+  save_v_event_T save_v_event;\n+  dict_T *dict = get_v_event(&save_v_event);\n+\n+  typval_T cmd;\n+  cmd.v_type = VAR_NUMBER;\n+  cmd.vval.v_number = command;\n+  tv_dict_add_nr(dict, S_LEN(\"command\"), cmd.vval.v_number);\n+\n+  typval_T str;\n+  str.v_type = VAR_STRING;\n+  str.vval.v_string = payload;\n+  tv_dict_add_str_len(dict, S_LEN(\"payload\"), str.vval.v_string, payload_length);\n+\n+  tv_dict_set_keys_readonly(dict);\n+\n+  apply_autocmds(EVENT_TERMOSC, NULL, NULL, false, curbuf);\n+\n+  restore_v_event(dict, &save_v_event);\n+  xfree(payload);\n+}\n+\n+static int on_osc(int command, VTermStringFragment frag, void *user)\n+{\n+  char *str = xmemdupz(frag.str, frag.len);\n+  multiqueue_put(main_loop.events, emit_osc_event, 3, command, str, frag.len);",
            "html_url": "https://github.com/neovim/neovim/pull/22159#discussion_r1395916202",
            "id": 1395916202,
            "line": 203,
            "node_id": "PRRC_kwDOAPphoM5TM_2q",
            "original_commit_id": "947a130569da5093da33ef4d3c4df003bab03546",
            "original_line": 203,
            "original_position": 42,
            "original_start_line": 202,
            "path": "src/nvim/terminal.c",
            "position": 42,
            "pull_request_review_id": 1734748768,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/22159",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395916202/reactions"
            },
            "side": "RIGHT",
            "start_line": 202,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-16T15:34:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395916202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "This is good enough to implement Vim's `autoshelldir` feature (I did that here: https://github.com/neovim/neovim/commit/146023f79d3ea39b466d69603a819193e71e824f ), however, as I'm unhappy with the way Vim's `autoshelldir` works (it changes the window's current working directory rather than the buffer's, which yields a ton of undesirable behaviors), I decided not to implement `autoshelldir` in this pull request.\r\n\r\nI need to spend more time thinking about how to implement `autoshelldir` (I want something that behaves the same way as https://github.com/neovim/neovim/pull/16740 / https://github.com/glacambre/syncwd ) but there's no reason to hold this PR hostage until then - it's already quite useful on its own.\r\n\r\nEdit: Here's a copy of the questions I asked on matrix:\r\n>I'm having a hard time choosing the right approach for #22159 (OSC7 handling in terminal - i.e. you run cd in shells running in terminal buffers and it updates the terminal buffer's current working directory). I've got a \"placeholder\" commit that uses :lcd, but this is not the right approach (:lcd changes the working directory of the window, not of the buffer). My previous PR for this feature modified the buffer's b_ffname and preserved the other ff_names, so that the working directory would effectively be changed as far as autochdir was concerned, but the \"display name\" of the buffer would stay intact (in case the user set it with e.g. :file). I can't find a way to do this from a lua autocommand: nvim_buf_set_name will modify all ff_names, which means potentially overwriting the user's preferred buffer name. I guess I could add a lua api call to only set the buffer's b_ffname, but that feels overly specific/tied to neovim internals, and so something that shouldn't be exposed to users. Does anyone have suggestions/guidance?\r\n>Mh, perhaps an api function to only set b_ffname would be okay if it was named something like nvim_buf_set_path? 🤔\r\n>But then, its interactions with nvim_buf_set_name would be weird from a user point of view...\r\n>Mh, or perhaps I should just emulate autochdir in a lua autocommand? e.g. store OSC7 directories in a buffer-local variable if autoshelldir is set, and then if autochdir is set in BufEnter events for a terminal buffer, :cd to the buffer-local variable?",
            "created_at": "2023-02-19T16:36:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1436033679",
            "id": 1436033679,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5VmCKP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1436033679/reactions"
            },
            "updated_at": "2023-02-19T16:40:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1436033679",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Merge conflict",
            "created_at": "2023-03-15T05:24:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1469357876",
            "id": 1469357876,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5XlJ80",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1469357876/reactions"
            },
            "updated_at": "2023-03-15T05:24:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1469357876",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thank you for letting me know, Zeertzjq :). This should be fixed now.",
            "created_at": "2023-03-15T06:30:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1469422946",
            "id": 1469422946,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5XlZ1i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1469422946/reactions"
            },
            "updated_at": "2023-03-15T06:31:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1469422946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Conflicting PR: #20176",
            "created_at": "2023-03-16T06:26:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1471391032",
            "id": 1471391032,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5Xs6U4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1471391032/reactions"
            },
            "updated_at": "2023-03-16T06:26:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1471391032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think this PR is better approaching the issue. Triggering autocommands instead of blindly passing everything to the underlying terminal emulator gives the end user more control.\r\n\r\nThere may be synchronization concerns, I think autocommands do not run immediately and there should probably be an autocommand queue which runs them **eventually** in event loop cycle. So guaranteeing the OSC output of an application reaches the underlying terminal in the right time may be hard.\r\n\r\nFor example as I discussed [here](https://github.com/neovim/neovim/pull/20176#issuecomment-1245658103), printing a hyperlink is done by sending an OSC command, printing the title of link, and then sending another OSC command to inform the terminal emulator that the hyperlink is finished. Now if these 2 OSC commands are queued and sent together after the text is already printed, it won't work as expected.\r\n\r\nSo I think to achieve good support for OSC commands we need to make sure:\r\n1. This autocmd runs **immediately**.\r\n2. There is a reliable way to directly and **immediately** write to terminal.\r\n\r\nI don't know if these are already achievable or not.\r\n\r\nP.S. Crazy idea just came to my mind and I want to know what @zeertzjq thinks about it: Maybe we can add an option to autocommands to hint Neovim whether they should run immediately or it's ok to queue them and run them **eventually**, similar concept exists in singal/slot construct of Qt: https://doc.qt.io/qt-6/qt.html#ConnectionType-enum",
            "created_at": "2023-03-16T07:25:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1471441687",
            "id": 1471441687,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5XtGsX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1471441687/reactions"
            },
            "updated_at": "2023-03-16T07:25:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1471441687",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1270688?v=4",
                "events_url": "https://api.github.com/users/sassanh/events{/privacy}",
                "followers_url": "https://api.github.com/users/sassanh/followers",
                "following_url": "https://api.github.com/users/sassanh/following{/other_user}",
                "gists_url": "https://api.github.com/users/sassanh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sassanh",
                "id": 1270688,
                "login": "sassanh",
                "node_id": "MDQ6VXNlcjEyNzA2ODg=",
                "organizations_url": "https://api.github.com/users/sassanh/orgs",
                "received_events_url": "https://api.github.com/users/sassanh/received_events",
                "repos_url": "https://api.github.com/users/sassanh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sassanh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sassanh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sassanh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">There may be synchronization concerns\r\n\r\nIndeed, this isn't something I cared about at all (my goal was to implement something good enough to support OSC7, I did not think about other OSC sequences). I agree that it should be taken into account before anything gets merged though.\r\n\r\nThe problem can be demonstrated with the two following pieces of code:\r\n```lua\r\nthe_lines = {'\\n','\\n'}\r\nvim.api.nvim_create_autocmd({ 'TermOSC' }, {\r\n  callback = function(e)\r\n    table.insert(the_lines,\"\\npayload:\" .. vim.v.event.payload .. \"\\nbuffer:\" .. table.concat(vim.api.nvim_buf_get_lines(0, 0, -1, false), \",\"))\r\n    vim.g.the_lines = the_lines\r\n  end\r\n})\r\n```\r\n```sh\r\nfor i in $(seq 1 1000) ; do\r\n    echo \"$i\"\r\n    printf \"\\033]7;$i\\033\\\\\"\r\ndone\r\n```\r\nPrinting `the_lines` shows that the first 500 autocommands see an empty buffer and the remaining 500 autocommands see a buffer containing the entire output of the script. This is wrong, we want each autocommand event to see an additional line.\r\n\r\nI could be wrong, but fixing this sounds like a lot of very hard work, so I won't do it myself (for now). Thus, anyone who wants to work on this should feel free to do so.\r\n\r\nThe current state of my TermOSC autocommand is good enough for my needs though, so the branch will get periodically rebased when I want something from master. But don't take this as a sign of activity :).",
            "created_at": "2023-03-17T06:36:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1473243298",
            "id": 1473243298,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5Xz-ii",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1473243298/reactions"
            },
            "updated_at": "2023-03-17T06:36:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1473243298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is there a more \"semantic\" / less obscure name we can use, maybe `TermCmd` or `TermRequest` ?\r\n\r\n> There may be synchronization concerns, I think autocommands do not run immediately\r\n\r\nIf the event handler is a Lua function, we could treat it as `:help vim.in_fast_event()` ?",
            "created_at": "2023-03-17T11:23:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1473688053",
            "id": 1473688053,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5X1rH1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1473688053/reactions"
            },
            "updated_at": "2023-11-16T15:49:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1473688053",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">Is there a more \"semantic\" / less obscure name we can use, maybe TermCmd or TermRequest ?\r\n\r\nOSC stands for Operating System Command, so TermCmd would be quite fitting I think. `TermSequence` or `TermUnhandled` could fit too probably.\r\n\r\n>If the event handler is a Lua function, we could treat it as :help vim.in_fast_event() ?\r\n\r\nIs it just a matter of calling `nlua_pcall` with `in_fast_callback` > 0? If yes it sounds like it might be within my reach, I could try that :)",
            "created_at": "2023-03-17T12:14:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1473742718",
            "id": 1473742718,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5X14d-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1473742718/reactions"
            },
            "updated_at": "2023-03-17T12:14:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1473742718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is it just a matter of calling `nlua_pcall` with `in_fast_callback` > 0? If yes it sounds like it might be within my reach, I could try that :)\r\n\r\nSomething like that. Fashioning a test will give the true answer ... if that is even possible.",
            "created_at": "2023-03-17T12:31:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1473761017",
            "id": 1473761017,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5X1875",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1473761017/reactions"
            },
            "updated_at": "2023-03-17T12:31:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1473761017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a more \"semantic\" / less obscure name we can use, maybe `TermCmd` or `TermRequest` \r\n\r\n`TermRequest` is nicely symmetric to `TermResponse` :)\r\n\r\nIn any case I agree this shouldn't be limited to just OSCs, we will likely also want to handle DCS and perhaps even some CSI sequences (e.g. kitty keyboard queries).",
            "created_at": "2023-11-14T15:18:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1810435947",
            "id": 1810435947,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5r6Q9r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1810435947/reactions"
            },
            "updated_at": "2023-11-14T15:19:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1810435947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is `on_stdout` option of `termopen` not enough? This seems synchronous.\r\n\r\n![image](https://github.com/neovim/neovim/assets/1362750/57db86dd-537d-4731-b26e-45945727d335)\r\n\r\n```vim\r\nfunc GotOutput(job_id, msg, event)\r\n  echo a:msg\r\n  if match(a:msg, \"\\<Esc>]133;\") != -1\r\n    cal chansend(a:job_id, 'abc')\r\n  endif\r\nendfunc\r\nnew\r\nlet shell_job = termopen([\"/bin/bash\"], #{\r\n        \\   on_stdout: function('GotOutput'),\r\n        \\   on_stderr: function('GotOutput'),\r\n        \\ })\r\n```",
            "created_at": "2023-11-28T04:23:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1829049251",
            "id": 1829049251,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5tBROj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829049251/reactions"
            },
            "updated_at": "2023-11-28T04:23:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829049251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1362750?v=4",
                "events_url": "https://api.github.com/users/acomagu/events{/privacy}",
                "followers_url": "https://api.github.com/users/acomagu/followers",
                "following_url": "https://api.github.com/users/acomagu/following{/other_user}",
                "gists_url": "https://api.github.com/users/acomagu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/acomagu",
                "id": 1362750,
                "login": "acomagu",
                "node_id": "MDQ6VXNlcjEzNjI3NTA=",
                "organizations_url": "https://api.github.com/users/acomagu/orgs",
                "received_events_url": "https://api.github.com/users/acomagu/received_events",
                "repos_url": "https://api.github.com/users/acomagu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/acomagu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/acomagu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/acomagu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "OSC7 Version\r\n\r\n![image](https://github.com/neovim/neovim/assets/1362750/91806b58-42d3-4982-a0e8-793a665f0868)\r\n\r\n```vim\r\nfunc GotOutput(job_id, msg, event)\r\n  let matches = matchlist(a:msg, \"\\<Esc>]7;file://\\\\(.*\\\\)\\<Esc>\\\\\\\\\")\r\n  if len(matches) > 1\r\n    echo matches[1]\r\n  endif\r\nendfunc\r\nnew\r\nlet shell_job = termopen([\"/bin/bash\"], #{\r\n        \\   on_stdout: function('GotOutput'),\r\n        \\   on_stderr: function('GotOutput'),\r\n        \\ })\r\n```",
            "created_at": "2023-11-28T04:48:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/22159#issuecomment-1829072193",
            "id": 1829072193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
            "node_id": "IC_kwDOAPphoM5tBW1B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829072193/reactions"
            },
            "updated_at": "2023-11-28T04:48:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829072193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1362750?v=4",
                "events_url": "https://api.github.com/users/acomagu/events{/privacy}",
                "followers_url": "https://api.github.com/users/acomagu/followers",
                "following_url": "https://api.github.com/users/acomagu/following{/other_user}",
                "gists_url": "https://api.github.com/users/acomagu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/acomagu",
                "id": 1362750,
                "login": "acomagu",
                "node_id": "MDQ6VXNlcjEzNjI3NTA=",
                "organizations_url": "https://api.github.com/users/acomagu/orgs",
                "received_events_url": "https://api.github.com/users/acomagu/received_events",
                "repos_url": "https://api.github.com/users/acomagu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/acomagu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/acomagu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/acomagu"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/22159/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/22159/commits",
    "created_at": "2023-02-07T19:57:54Z",
    "diff_url": "https://github.com/neovim/neovim/pull/22159.diff",
    "draft": false,
    "head": {
        "label": "glacambre:osc_autocmds",
        "ref": "osc_autocmds",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/glacambre/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/glacambre/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/glacambre/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/glacambre/neovim/branches{/branch}",
            "clone_url": "https://github.com/glacambre/neovim.git",
            "collaborators_url": "https://api.github.com/repos/glacambre/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/glacambre/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/glacambre/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/glacambre/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/glacambre/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/glacambre/neovim/contributors",
            "created_at": "2021-02-08T19:20:35Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/glacambre/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/glacambre/neovim/downloads",
            "events_url": "https://api.github.com/repos/glacambre/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/glacambre/neovim/forks",
            "full_name": "glacambre/neovim",
            "git_commits_url": "https://api.github.com/repos/glacambre/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/glacambre/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/glacambre/neovim/git/tags{/sha}",
            "git_url": "git://github.com/glacambre/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/glacambre/neovim/hooks",
            "html_url": "https://github.com/glacambre/neovim",
            "id": 337184321,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/glacambre/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/glacambre/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/glacambre/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/glacambre/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/glacambre/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/glacambre/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/glacambre/neovim/merges",
            "milestones_url": "https://api.github.com/repos/glacambre/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMzcxODQzMjE=",
            "notifications_url": "https://api.github.com/repos/glacambre/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/glacambre/neovim/pulls{/number}",
            "pushed_at": "2023-05-07T15:16:11Z",
            "releases_url": "https://api.github.com/repos/glacambre/neovim/releases{/id}",
            "size": 241908,
            "ssh_url": "git@github.com:glacambre/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/glacambre/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/glacambre/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/glacambre/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/glacambre/neovim/subscription",
            "svn_url": "https://github.com/glacambre/neovim",
            "tags_url": "https://api.github.com/repos/glacambre/neovim/tags",
            "teams_url": "https://api.github.com/repos/glacambre/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/glacambre/neovim/git/trees{/sha}",
            "updated_at": "2023-02-23T07:32:59Z",
            "url": "https://api.github.com/repos/glacambre/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "947a130569da5093da33ef4d3c4df003bab03546",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
            "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
            "followers_url": "https://api.github.com/users/glacambre/followers",
            "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
            "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/glacambre",
            "id": 11534587,
            "login": "glacambre",
            "node_id": "MDQ6VXNlcjExNTM0NTg3",
            "organizations_url": "https://api.github.com/users/glacambre/orgs",
            "received_events_url": "https://api.github.com/users/glacambre/received_events",
            "repos_url": "https://api.github.com/users/glacambre/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/glacambre"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/22159",
    "id": 1232519531,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22159",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b135b0c040318ceb0cfd117f594eb4f976902209",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 193,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 128,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-11-28T00:25:28Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5JdsFr",
    "number": 22159,
    "patch_url": "https://github.com/neovim/neovim/pull/22159.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/22159/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/947a130569da5093da33ef4d3c4df003bab03546",
    "title": "feat(terminal): trigger TermOSC autocommand events",
    "updated_at": "2023-11-28T04:48:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/22159",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
        "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
        "followers_url": "https://api.github.com/users/glacambre/followers",
        "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
        "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/glacambre",
        "id": 11534587,
        "login": "glacambre",
        "node_id": "MDQ6VXNlcjExNTM0NTg3",
        "organizations_url": "https://api.github.com/users/glacambre/orgs",
        "received_events_url": "https://api.github.com/users/glacambre/received_events",
        "repos_url": "https://api.github.com/users/glacambre/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/glacambre"
    }
}