{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28500/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28500/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28500"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28500"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28500/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/44571d46d48736035beb62b7b42c8a4f87290662"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5302,
            "forks_count": 5302,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1707,
            "open_issues_count": 1707,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-06T22:57:03Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 269189,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 76833,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-07T01:04:30Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 76833,
            "watchers_count": 76833,
            "web_commit_signoff_required": false
        },
        "sha": "b8273c9a339626078d49e706d882878090b07d42",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Ref: https://github.com/neovim/neovim/issues/24252\r\n\r\n- `crn` for rename\r\n- `crr` for code actions\r\n- `gr` for references\r\n- `<C-S>` (in Insert mode) for signature help\r\n\r\n`cr` is a generic \"refactor\" prefix (fits nicely with the mappings from [vim-abolish](https://github.com/tpope/vim-abolish/blob/master/doc/abolish.txt#L146)) too.\r\n\r\n`crn` mnemonic: reName\r\n`crr` is code actions for now, but can eventually be extended to provide a generic \"menu\" of refactor options\r\n\r\n`gr` overrides a builtin mapping, but this is deemed acceptable since the default behavior is rarely useful. Users can delete the new default `gr` mapping if they don't want it.",
    "closed_at": "2024-04-26T16:12:49Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1578785877"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578785877"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should also document on how to modify/remove these if desired.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-25T02:50:12Z",
            "diff_hunk": "@@ -60,6 +60,14 @@ options are not restored when the LSP client is stopped or detached.\n   - To opt out of this use |gw| instead of gq, or set 'formatexpr' on LspAttach.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n+- *crr* is mapped in Normal mode to |vim.lsp.buf.rename()| if no existing",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1578785877",
            "id": 1578785877,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eGlxV",
            "original_commit_id": "8409d8b7b35bb98f2a18f7988a103a1411236d62",
            "original_line": 63,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2021390885,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578785877/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T02:50:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578785877",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1578790094"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578790094"
                }
            },
            "author_association": "MEMBER",
            "body": "Already mentioned just below this, but I updated the example to include the new default mappings too.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-25T03:00:00Z",
            "diff_hunk": "@@ -60,6 +60,14 @@ options are not restored when the LSP client is stopped or detached.\n   - To opt out of this use |gw| instead of gq, or set 'formatexpr' on LspAttach.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n+- *crr* is mapped in Normal mode to |vim.lsp.buf.rename()| if no existing",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1578790094",
            "id": 1578790094,
            "in_reply_to_id": 1578785877,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eGmzO",
            "original_commit_id": "8409d8b7b35bb98f2a18f7988a103a1411236d62",
            "original_line": 63,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2021399723,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578790094/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T03:00:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578790094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1578795380"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578795380"
                }
            },
            "author_association": "MEMBER",
            "body": "I love the use of the `Methods` module here; however I think there's still some discussion going on (see https://github.com/neovim/neovim/pull/24977) about its usage in examples.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-25T03:10:55Z",
            "diff_hunk": "@@ -60,48 +60,43 @@ options are not restored when the LSP client is stopped or detached.\n   - To opt out of this use |gw| instead of gq, or set 'formatexpr' on LspAttach.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n+- *crr* is mapped in Normal mode to |vim.lsp.buf.rename()| if no existing\n+  keymap exists\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()| if no existing\n+  keymap exists\n+- |gr| is mapped in Normal mode to |vim.lsp.buf.references()| if no existing\n+  keymap exists\n+- CTRL-S is mapped in Insert mode to |vim.lsp.buf.signature_help()| if no\n+  existing keymap exists *i_CTRL-S*\n \n                                                         *lsp-defaults-disable*\n To override the above defaults, set or unset the options on |LspAttach|: >lua\n+\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(ev)\n         vim.bo[ev.buf].formatexpr = nil\n         vim.bo[ev.buf].omnifunc = nil\n-        vim.keymap.del(\"n\", \"K\", { buffer = ev.buf })\n-      end,\n-    })\n-\n-To use other LSP features like hover, rename, etc. you can set other keymaps\n-on |LspAttach|. Example: >lua\n-    vim.api.nvim_create_autocmd('LspAttach', {\n-      callback = function(args)\n-        vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        vim.keymap.del('n', 'K', { buffer = ev.buf })\n+        vim.keymap.del('n', 'crr', { buffer = ev.buf })\n+        vim.keymap.del('n', 'cra', { buffer = ev.buf })\n+        vim.keymap.del('n', 'gr', { buffer = ev.buf })\n+        vim.keymap.del('i', '<C-S>', { buffer = ev.buf })\n       end,\n     })\n \n-The most common functions are:\n-\n-- |vim.lsp.buf.hover()|\n-- |vim.lsp.buf.format()|\n-- |vim.lsp.buf.references()|\n-- |vim.lsp.buf.implementation()|\n-- |vim.lsp.buf.code_action()|\n-\n+To use other LSP features, set keymaps on |LspAttach|. Not all language\n+servers provide the same capabilities. To ensure you only set keymaps if the\n+language server supports a feature, guard keymaps behind capability checks.\n+Example: >lua\n \n-Not all language servers provide the same capabilities. To ensure you only set\n-keymaps if the language server supports a feature, you can guard the keymap\n-calls behind capability checks:\n->lua\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(args)\n-        local client = vim.lsp.get_client_by_id(args.data.client_id)\n-        if client.server_capabilities.hoverProvider then\n-          vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        if client.supports_method(ms.textDocument_implementation) then",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1578795380",
            "id": 1578795380,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eGoF0",
            "original_commit_id": "35b4a4db11ca92cefa8902e0ac7ab8d103696eb2",
            "original_line": 94,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2021407213,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578795380/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T03:10:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578795380",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1578945574"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578945574"
                }
            },
            "author_association": "MEMBER",
            "body": "I think some of the arguments made in that PR don't apply to the example here, but it looks like the `ms` definition is missing and that would definitely trip up people.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-25T06:38:08Z",
            "diff_hunk": "@@ -60,48 +60,43 @@ options are not restored when the LSP client is stopped or detached.\n   - To opt out of this use |gw| instead of gq, or set 'formatexpr' on LspAttach.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n+- *crr* is mapped in Normal mode to |vim.lsp.buf.rename()| if no existing\n+  keymap exists\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()| if no existing\n+  keymap exists\n+- |gr| is mapped in Normal mode to |vim.lsp.buf.references()| if no existing\n+  keymap exists\n+- CTRL-S is mapped in Insert mode to |vim.lsp.buf.signature_help()| if no\n+  existing keymap exists *i_CTRL-S*\n \n                                                         *lsp-defaults-disable*\n To override the above defaults, set or unset the options on |LspAttach|: >lua\n+\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(ev)\n         vim.bo[ev.buf].formatexpr = nil\n         vim.bo[ev.buf].omnifunc = nil\n-        vim.keymap.del(\"n\", \"K\", { buffer = ev.buf })\n-      end,\n-    })\n-\n-To use other LSP features like hover, rename, etc. you can set other keymaps\n-on |LspAttach|. Example: >lua\n-    vim.api.nvim_create_autocmd('LspAttach', {\n-      callback = function(args)\n-        vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        vim.keymap.del('n', 'K', { buffer = ev.buf })\n+        vim.keymap.del('n', 'crr', { buffer = ev.buf })\n+        vim.keymap.del('n', 'cra', { buffer = ev.buf })\n+        vim.keymap.del('n', 'gr', { buffer = ev.buf })\n+        vim.keymap.del('i', '<C-S>', { buffer = ev.buf })\n       end,\n     })\n \n-The most common functions are:\n-\n-- |vim.lsp.buf.hover()|\n-- |vim.lsp.buf.format()|\n-- |vim.lsp.buf.references()|\n-- |vim.lsp.buf.implementation()|\n-- |vim.lsp.buf.code_action()|\n-\n+To use other LSP features, set keymaps on |LspAttach|. Not all language\n+servers provide the same capabilities. To ensure you only set keymaps if the\n+language server supports a feature, guard keymaps behind capability checks.\n+Example: >lua\n \n-Not all language servers provide the same capabilities. To ensure you only set\n-keymaps if the language server supports a feature, you can guard the keymap\n-calls behind capability checks:\n->lua\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(args)\n-        local client = vim.lsp.get_client_by_id(args.data.client_id)\n-        if client.server_capabilities.hoverProvider then\n-          vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        if client.supports_method(ms.textDocument_implementation) then",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1578945574",
            "id": 1578945574,
            "in_reply_to_id": 1578795380,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eHMwm",
            "original_commit_id": "35b4a4db11ca92cefa8902e0ac7ab8d103696eb2",
            "original_line": 94,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2021643173,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578945574/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T06:42:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578945574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1579376735"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579376735"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe creating a helper function here will make things tidier?\r\n\r\n```suggestion\r\nlocal map = function(mode, lhs, rhs, opts)\r\n  if vim.fn.maparg(lhs, mode, false, false) == '' then return end\r\n  opts.buffer = bufnr\r\n  vim.keymap.set(mode, lhs, rhs, opts)\r\nend\r\n```",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-25T12:22:36Z",
            "diff_hunk": "@@ -339,7 +339,55 @@ function lsp._set_defaults(client, bufnr)\n       and is_empty_or_default(bufnr, 'keywordprg')\n       and vim.fn.maparg('K', 'n', false, false) == ''\n     then\n-      vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = bufnr })\n+      vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = bufnr, desc = 'vim.lsp.buf.hover()' })\n+    end\n+\n+    if\n+      client.supports_method(ms.textDocument_rename)\n+      and vim.fn.maparg('crr', 'n', false, false) == ''\n+    then\n+      vim.keymap.set(\n+        'n',\n+        'crr',\n+        vim.lsp.buf.rename,\n+        { buffer = bufnr, desc = 'vim.lsp.buf.rename()' }\n+      )\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1579376735",
            "id": 1579376735,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eI2Bf",
            "original_commit_id": "35b4a4db11ca92cefa8902e0ac7ab8d103696eb2",
            "original_line": 355,
            "original_position": 18,
            "original_start_line": 347,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2022343627,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579376735/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-26T19:07:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579376735",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1579785648"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579785648"
                }
            },
            "author_association": "MEMBER",
            "body": "Updated in ac59371ef9aa2c979043bee574e576bdf62fb664",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-25T16:22:51Z",
            "diff_hunk": "@@ -60,48 +60,43 @@ options are not restored when the LSP client is stopped or detached.\n   - To opt out of this use |gw| instead of gq, or set 'formatexpr' on LspAttach.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n+- *crr* is mapped in Normal mode to |vim.lsp.buf.rename()| if no existing\n+  keymap exists\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()| if no existing\n+  keymap exists\n+- |gr| is mapped in Normal mode to |vim.lsp.buf.references()| if no existing\n+  keymap exists\n+- CTRL-S is mapped in Insert mode to |vim.lsp.buf.signature_help()| if no\n+  existing keymap exists *i_CTRL-S*\n \n                                                         *lsp-defaults-disable*\n To override the above defaults, set or unset the options on |LspAttach|: >lua\n+\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(ev)\n         vim.bo[ev.buf].formatexpr = nil\n         vim.bo[ev.buf].omnifunc = nil\n-        vim.keymap.del(\"n\", \"K\", { buffer = ev.buf })\n-      end,\n-    })\n-\n-To use other LSP features like hover, rename, etc. you can set other keymaps\n-on |LspAttach|. Example: >lua\n-    vim.api.nvim_create_autocmd('LspAttach', {\n-      callback = function(args)\n-        vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        vim.keymap.del('n', 'K', { buffer = ev.buf })\n+        vim.keymap.del('n', 'crr', { buffer = ev.buf })\n+        vim.keymap.del('n', 'cra', { buffer = ev.buf })\n+        vim.keymap.del('n', 'gr', { buffer = ev.buf })\n+        vim.keymap.del('i', '<C-S>', { buffer = ev.buf })\n       end,\n     })\n \n-The most common functions are:\n-\n-- |vim.lsp.buf.hover()|\n-- |vim.lsp.buf.format()|\n-- |vim.lsp.buf.references()|\n-- |vim.lsp.buf.implementation()|\n-- |vim.lsp.buf.code_action()|\n-\n+To use other LSP features, set keymaps on |LspAttach|. Not all language\n+servers provide the same capabilities. To ensure you only set keymaps if the\n+language server supports a feature, guard keymaps behind capability checks.\n+Example: >lua\n \n-Not all language servers provide the same capabilities. To ensure you only set\n-keymaps if the language server supports a feature, you can guard the keymap\n-calls behind capability checks:\n->lua\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(args)\n-        local client = vim.lsp.get_client_by_id(args.data.client_id)\n-        if client.server_capabilities.hoverProvider then\n-          vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        if client.supports_method(ms.textDocument_implementation) then",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1579785648",
            "id": 1579785648,
            "in_reply_to_id": 1578795380,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eKZ2w",
            "original_commit_id": "35b4a4db11ca92cefa8902e0ac7ab8d103696eb2",
            "original_line": 94,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2023020528,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579785648/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T16:22:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579785648",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581042463"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581042463"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n|vim.keymap.del()| or |:unmap|.\r\n```",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:30:44Z",
            "diff_hunk": "@@ -61,47 +61,41 @@ options are not restored when the LSP client is stopped or detached.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n \n+                                                *gr-default*\n+                                                *i_CTRL-S*\n+Some keymaps are created unconditionally when Nvim starts:\n+- *crn* is mapped in Normal mode to |vim.lsp.buf.rename()|\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()|\n+- |gr| is mapped in Normal mode to |vim.lsp.buf.references()|\n+- CTRL-S is mapped in Insert mode to |vim.lsp.buf.signature_help()|\n+\n+If not wanted, these keymaps can be removed at any time using\n+|vim.keymap.del()|.",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581042463",
            "id": 1581042463,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePMsf",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 73,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2025062139,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581042463/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T13:30:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581042463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581044842"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581044842"
                }
            },
            "author_association": "MEMBER",
            "body": "Nice cleanup! I think `local client = vim.lsp.get_client_by_id(args.data.client_id)` is still needed though?",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:32:34Z",
            "diff_hunk": "@@ -61,47 +61,41 @@ options are not restored when the LSP client is stopped or detached.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n \n+                                                *gr-default*\n+                                                *i_CTRL-S*\n+Some keymaps are created unconditionally when Nvim starts:\n+- *crn* is mapped in Normal mode to |vim.lsp.buf.rename()|\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()|\n+- |gr| is mapped in Normal mode to |vim.lsp.buf.references()|\n+- CTRL-S is mapped in Insert mode to |vim.lsp.buf.signature_help()|\n+\n+If not wanted, these keymaps can be removed at any time using\n+|vim.keymap.del()|.\n+\n                                                         *lsp-defaults-disable*\n To override the above defaults, set or unset the options on |LspAttach|: >lua\n+\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(ev)\n         vim.bo[ev.buf].formatexpr = nil\n         vim.bo[ev.buf].omnifunc = nil\n-        vim.keymap.del(\"n\", \"K\", { buffer = ev.buf })\n-      end,\n-    })\n-\n-To use other LSP features like hover, rename, etc. you can set other keymaps\n-on |LspAttach|. Example: >lua\n-    vim.api.nvim_create_autocmd('LspAttach', {\n-      callback = function(args)\n-        vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        vim.keymap.del('n', 'K', { buffer = ev.buf })\n       end,\n     })\n \n-The most common functions are:\n-\n-- |vim.lsp.buf.hover()|\n-- |vim.lsp.buf.format()|\n-- |vim.lsp.buf.references()|\n-- |vim.lsp.buf.implementation()|\n-- |vim.lsp.buf.code_action()|\n+To use other LSP features, set keymaps on |LspAttach|. Not all language\n+servers provide the same capabilities. To ensure you only set keymaps if the\n+language server supports a feature, guard keymaps behind capability checks.\n+Example: >lua\n \n-\n-Not all language servers provide the same capabilities. To ensure you only set\n-keymaps if the language server supports a feature, you can guard the keymap\n-calls behind capability checks:\n->lua\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(args)\n-        local client = vim.lsp.get_client_by_id(args.data.client_id)\n-        if client.server_capabilities.hoverProvider then\n-          vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        if client.supports_method('textDocument/implementation') then\n+          vim.keymap.set('n', 'g<C-I>', vim.lsp.buf.implementation, { buffer = args.buf })\n         end\n       end,",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581044842",
            "id": 1581044842,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePNRq",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 96,
            "original_position": 60,
            "original_start_line": 91,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2025065857,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581044842/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-26T13:32:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581044842",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581048349"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581048349"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n- *crr* is mapped in Normal and Visual mode to |vim.lsp.buf.code_action()|\r\n```\r\n\r\n(ignore the `crr` parts if the conclusion was to stick with `cra` - I don't mind which)",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:35:25Z",
            "diff_hunk": "@@ -61,47 +61,41 @@ options are not restored when the LSP client is stopped or detached.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n \n+                                                *gr-default*\n+                                                *i_CTRL-S*\n+Some keymaps are created unconditionally when Nvim starts:\n+- *crn* is mapped in Normal mode to |vim.lsp.buf.rename()|\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()|",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581048349",
            "id": 1581048349,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePOId",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 68,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2025071630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581048349/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T13:38:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581048349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581048782"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581048782"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  • |crr| in Normal and Visual mode maps to |vim.lsp.buf.code_action()|.\r\n```",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:35:46Z",
            "diff_hunk": "@@ -388,6 +388,10 @@ The following changes to existing APIs or features add new behavior.\n   • 'comments' includes \"fb:•\".\n   • 'shortmess' includes the \"C\" flag.\n   • 'grepprg' defaults to using ripgrep if available.\n+  • |crn| in Normal mode maps to |vim.lsp.buf.rename()|.\n+  • |cra| in Normal mode maps to |vim.lsp.buf.code_action()|.",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581048782",
            "id": 1581048782,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePOPO",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 392,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2025071630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581048782/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T13:38:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581048782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581049020"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581049020"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n- |crr|\r\n```",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:35:58Z",
            "diff_hunk": "@@ -137,6 +137,10 @@ of these in your config by simply removing the mapping, e.g. \":unmap Y\".\n - * |v_star-default|\n - gc |gc-default| |v_gc-default| |o_gc-default|\n - gcc |gcc-default|\n+- |crn|\n+- |cra|",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581049020",
            "id": 1581049020,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePOS8",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 141,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/vim_diff.txt",
            "position": null,
            "pull_request_review_id": 2025071630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581049020/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T13:38:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581049020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581049939"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581049939"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    vim.keymap.set({'n', 'v'}, 'crr', vim.lsp.buf.code_action, { desc = 'vim.lsp.buf.code_action()' })\r\n```\r\n",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:36:45Z",
            "diff_hunk": "@@ -143,6 +143,29 @@ do\n     end\n     vim.keymap.set({ 'o' }, 'gc', textobject_rhs, { desc = 'Comment textobject' })\n   end\n+\n+  --- Defaults maps for LSP functions.\n+  ---\n+  --- These are mapped unconditionally to avoid confusion. If no server is attached, or if a server\n+  --- does not support a capability, an error message is displayed rather than exhibiting different\n+  --- behavior.\n+  do\n+    vim.keymap.set('n', 'crn', function()\n+      vim.lsp.buf.rename()\n+    end, { desc = 'vim.lsp.buf.rename()' })\n+\n+    vim.keymap.set('n', 'cra', function()\n+      vim.lsp.buf.code_action()\n+    end, { desc = 'vim.lsp.buf.code_action()' })",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581049939",
            "id": 1581049939,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePOhT",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 162,
            "original_position": 17,
            "original_start_line": 157,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2025071630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581049939/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-26T13:38:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581049939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581056693"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581056693"
                }
            },
            "author_association": "MEMBER",
            "body": "`i_CTRL-G_CTRL-P` (mnemonic: \"parameters\") is available, opens the door for future `i_CTRL-G` mappings.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:41:45Z",
            "diff_hunk": "@@ -143,6 +143,29 @@ do\n     end\n     vim.keymap.set({ 'o' }, 'gc', textobject_rhs, { desc = 'Comment textobject' })\n   end\n+\n+  --- Defaults maps for LSP functions.\n+  ---\n+  --- These are mapped unconditionally to avoid confusion. If no server is attached, or if a server\n+  --- does not support a capability, an error message is displayed rather than exhibiting different\n+  --- behavior.\n+  do\n+    vim.keymap.set('n', 'crn', function()\n+      vim.lsp.buf.rename()\n+    end, { desc = 'vim.lsp.buf.rename()' })\n+\n+    vim.keymap.set('n', 'cra', function()\n+      vim.lsp.buf.code_action()\n+    end, { desc = 'vim.lsp.buf.code_action()' })\n+\n+    vim.keymap.set('n', 'gr', function()\n+      vim.lsp.buf.references()\n+    end, { desc = 'vim.lsp.buf.references()' })\n+\n+    vim.keymap.set('i', '<C-S>', function()",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581056693",
            "id": 1581056693,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5ePQK1",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 168,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 25,
            "pull_request_review_id": 2025085895,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581056693/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T13:41:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581056693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581059539"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581059539"
                }
            },
            "author_association": "MEMBER",
            "body": "Thanks, removed that by accident.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:44:00Z",
            "diff_hunk": "@@ -61,47 +61,41 @@ options are not restored when the LSP client is stopped or detached.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n \n+                                                *gr-default*\n+                                                *i_CTRL-S*\n+Some keymaps are created unconditionally when Nvim starts:\n+- *crn* is mapped in Normal mode to |vim.lsp.buf.rename()|\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()|\n+- |gr| is mapped in Normal mode to |vim.lsp.buf.references()|\n+- CTRL-S is mapped in Insert mode to |vim.lsp.buf.signature_help()|\n+\n+If not wanted, these keymaps can be removed at any time using\n+|vim.keymap.del()|.\n+\n                                                         *lsp-defaults-disable*\n To override the above defaults, set or unset the options on |LspAttach|: >lua\n+\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(ev)\n         vim.bo[ev.buf].formatexpr = nil\n         vim.bo[ev.buf].omnifunc = nil\n-        vim.keymap.del(\"n\", \"K\", { buffer = ev.buf })\n-      end,\n-    })\n-\n-To use other LSP features like hover, rename, etc. you can set other keymaps\n-on |LspAttach|. Example: >lua\n-    vim.api.nvim_create_autocmd('LspAttach', {\n-      callback = function(args)\n-        vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        vim.keymap.del('n', 'K', { buffer = ev.buf })\n       end,\n     })\n \n-The most common functions are:\n-\n-- |vim.lsp.buf.hover()|\n-- |vim.lsp.buf.format()|\n-- |vim.lsp.buf.references()|\n-- |vim.lsp.buf.implementation()|\n-- |vim.lsp.buf.code_action()|\n+To use other LSP features, set keymaps on |LspAttach|. Not all language\n+servers provide the same capabilities. To ensure you only set keymaps if the\n+language server supports a feature, guard keymaps behind capability checks.\n+Example: >lua\n \n-\n-Not all language servers provide the same capabilities. To ensure you only set\n-keymaps if the language server supports a feature, you can guard the keymap\n-calls behind capability checks:\n->lua\n     vim.api.nvim_create_autocmd('LspAttach', {\n       callback = function(args)\n-        local client = vim.lsp.get_client_by_id(args.data.client_id)\n-        if client.server_capabilities.hoverProvider then\n-          vim.keymap.set('n', 'K', vim.lsp.buf.hover, { buffer = args.buf })\n+        if client.supports_method('textDocument/implementation') then\n+          vim.keymap.set('n', 'g<C-I>', vim.lsp.buf.implementation, { buffer = args.buf })\n         end\n       end,",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581059539",
            "id": 1581059539,
            "in_reply_to_id": 1581044842,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePQ3T",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 96,
            "original_position": 60,
            "original_start_line": 91,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2025090626,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581059539/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-26T13:44:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581059539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581062388"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581062388"
                }
            },
            "author_association": "MEMBER",
            "body": "I think the conclusion is to leave `crr` open for now, and use `crn` for rename and `cra` for code actions. @justinmk?",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:45:39Z",
            "diff_hunk": "@@ -61,47 +61,41 @@ options are not restored when the LSP client is stopped or detached.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n \n+                                                *gr-default*\n+                                                *i_CTRL-S*\n+Some keymaps are created unconditionally when Nvim starts:\n+- *crn* is mapped in Normal mode to |vim.lsp.buf.rename()|\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()|",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581062388",
            "id": 1581062388,
            "in_reply_to_id": 1581048349,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePRj0",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 68,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2025095778,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581062388/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T13:45:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581062388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581063937"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581063937"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm in favor of `crr` for this PR. But I'm not going to block on that.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T13:46:49Z",
            "diff_hunk": "@@ -61,47 +61,41 @@ options are not restored when the LSP client is stopped or detached.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n \n+                                                *gr-default*\n+                                                *i_CTRL-S*\n+Some keymaps are created unconditionally when Nvim starts:\n+- *crn* is mapped in Normal mode to |vim.lsp.buf.rename()|\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()|",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581063937",
            "id": 1581063937,
            "in_reply_to_id": 1581048349,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePR8B",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 68,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2025098488,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581063937/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T13:46:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581063937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581148295"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581148295"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok misunderstanding on my part, updated.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T14:51:22Z",
            "diff_hunk": "@@ -61,47 +61,41 @@ options are not restored when the LSP client is stopped or detached.\n - |K| is mapped to |vim.lsp.buf.hover()| unless |'keywordprg'| is customized or\n   a custom keymap for `K` exists.\n \n+                                                *gr-default*\n+                                                *i_CTRL-S*\n+Some keymaps are created unconditionally when Nvim starts:\n+- *crn* is mapped in Normal mode to |vim.lsp.buf.rename()|\n+- *cra* is mapped in Normal mode to |vim.lsp.buf.code_action()|",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581148295",
            "id": 1581148295,
            "in_reply_to_id": 1581048349,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ePmiH",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 68,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2025242060,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581148295/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T14:51:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581148295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28500#discussion_r1581250521"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581250521"
                }
            },
            "author_association": "MEMBER",
            "body": "Not crazy about the double mapping, but we can revisit. We have a little time before this makes it to a release. If we did do the `<C-G>` prefix, I have a preference for `<C-G><C-S>` (mnemonic: \"signature\") since that can be typed with one hand (at least on QWERTY).\r\n\r\n`<C-H>` might also be worth considering, though some people might use the default \"backspace\" behavior.",
            "commit_id": "44571d46d48736035beb62b7b42c8a4f87290662",
            "created_at": "2024-04-26T16:12:29Z",
            "diff_hunk": "@@ -143,6 +143,29 @@ do\n     end\n     vim.keymap.set({ 'o' }, 'gc', textobject_rhs, { desc = 'Comment textobject' })\n   end\n+\n+  --- Defaults maps for LSP functions.\n+  ---\n+  --- These are mapped unconditionally to avoid confusion. If no server is attached, or if a server\n+  --- does not support a capability, an error message is displayed rather than exhibiting different\n+  --- behavior.\n+  do\n+    vim.keymap.set('n', 'crn', function()\n+      vim.lsp.buf.rename()\n+    end, { desc = 'vim.lsp.buf.rename()' })\n+\n+    vim.keymap.set('n', 'cra', function()\n+      vim.lsp.buf.code_action()\n+    end, { desc = 'vim.lsp.buf.code_action()' })\n+\n+    vim.keymap.set('n', 'gr', function()\n+      vim.lsp.buf.references()\n+    end, { desc = 'vim.lsp.buf.references()' })\n+\n+    vim.keymap.set('i', '<C-S>', function()",
            "html_url": "https://github.com/neovim/neovim/pull/28500#discussion_r1581250521",
            "id": 1581250521,
            "in_reply_to_id": 1581056693,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5eP_fZ",
            "original_commit_id": "3c0a837cb8829c95c5bc3e1d70c42ac526b04e90",
            "original_line": 168,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 25,
            "pull_request_review_id": 2025408924,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581250521/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-26T16:12:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1581250521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@folke @siduck @tjdevries (and everyone else that has an initial nvim configuration/distro, sorry you're a lot so I'm tagging the 1st that come to mind): You might want to reconsider your default keybinds to match these newly added ones.",
            "created_at": "2024-04-25T02:49:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2076257075",
            "id": 2076257075,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM57wSsz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076257075/reactions"
            },
            "updated_at": "2024-04-25T02:49:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076257075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "After thinking about these some more I wonder if we should actually map commands like `gr` unconditionally, independent of a language server running and supporting the actions. \r\n\r\nWith K, gq, and tagfunc mappings there are reasonable fallbacks sharing the semantics of the LSP versions, so a conditional mapping to enhance them makes sense. \r\n\r\nWith `gr` you get entirely different behaviour if no server is running, which might be more confusing than getting an error stating that no language server is running or supports getting references.\r\n\r\nNo strong opinion on it, just wanted to bring it up",
            "created_at": "2024-04-25T10:30:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2076867584",
            "id": 2076867584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM57ynwA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076867584/reactions"
            },
            "updated_at": "2024-04-25T10:30:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076867584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  `crr` for rename. `cra` for code actions\r\n\r\n`crn` is a nice mnemonic for \"ReName\". And that allows us to use `crr` for the general \"code actions\" entrypoint, which is analogous to the way that `dd`, `yy`, etc have traditionally been used as \"convenience aliases\".\r\n\r\n>  `<C-S>` (in Insert mode) for signature help\r\n\r\nwould `ctrl-]` be worth claiming instead? somewhat analogous to normal-mode `ctrl-]`.\r\n\r\nI have plans for `ctrl-s` in normal mode, to go to the \"default [S]hell\". But that doesn't necessarily conflict with this insert-mode purpose.",
            "created_at": "2024-04-25T11:04:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2076924761",
            "id": 2076924761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM57y1tZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076924761/reactions"
            },
            "updated_at": "2024-04-25T11:04:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076924761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\r\n> would `ctrl-]` be worth claiming instead? somewhat analogous to normal-mode `ctrl-]`.\r\n\r\n`C-]` already exists in insert mode to expand an abbreviation. I also use that as my “expand snippet” trigger (expanding a snippet is similar in spirit to expanding an abbreviation).\r\n",
            "created_at": "2024-04-25T11:58:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2077012134",
            "id": 2077012134,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM57zLCm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077012134/reactions"
            },
            "updated_at": "2024-04-25T11:58:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077012134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > `crr` for rename. `cra` for code actions\r\n> \r\n> `crn` is a nice mnemonic for \"ReName\". And that allows us to use `crr` for the general \"code actions\" entrypoint, which is analogous to the way that `dd`, `yy`, etc have traditionally been used as \"convenience aliases\".\r\n\r\n\r\nSo you’re suggesting `crn` for rename and `crr` for code actions? That seems a lot more confusing than `r` for Rename and `a` for Action, but if it gets this out the door then sure. ",
            "created_at": "2024-04-25T12:02:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2077019125",
            "id": 2077019125,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM57zMv1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077019125/reactions"
            },
            "updated_at": "2024-04-25T12:02:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077019125",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So you’re suggesting `crn` for rename and `crr` for code actions? That seems a lot more confusing than `r` for Rename and `a` for Action,\r\n\r\nMy thinking is the \"cr\" prefix is for Refactoring-related things. `crr` can show a \"code changes\" menu even for non-LSP contexts (similar to `gO` which has different \"backends\"). So the LSP \"actions\" jargon shouldn't necessary drive this.\r\n\r\n`crr` is also easier to type for this somewhat common use-case.",
            "created_at": "2024-04-25T12:17:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2077045770",
            "id": 2077045770,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM57zTQK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077045770/reactions"
            },
            "updated_at": "2024-04-25T12:17:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077045770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One more point comes to mind: The code action mappings should probably exist for both normal and visual mode.\r\nE.g. in eclipse.jdt.ls there's support to select a range, and then use a \"extract method\" code action.\r\n\r\nNo strong opinion on the `crn`/`crr` discussion, but I'd prefer `crr` for rename and `cra` for code action.\r\n(But I also use `<a-CR>` for code actions due to intellij habits, and have an additional `<leader>r` mapping for `vim.lsp.buf.code_action { context = { only = {'refactor'}}}`) \r\n",
            "created_at": "2024-04-25T12:31:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2077071409",
            "id": 2077071409,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM57zZgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077071409/reactions"
            },
            "updated_at": "2024-04-25T12:31:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077071409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> After thinking about these some more I wonder if we should actually map commands like `gr` unconditionally, independent of a language server running and supporting the actions.\r\n> \r\n> With K, gq, and tagfunc mappings there are reasonable fallbacks sharing the semantics of the LSP versions, so a conditional mapping to enhance them makes sense.\r\n> \r\n> With `gr` you get entirely different behaviour if no server is running, which might be more confusing than getting an error stating that no language server is running or supports getting references.\r\n> \r\n> No strong opinion on it, just wanted to bring it up\r\n\r\nI think this makes sense and I did so in 25b7b1b06f69e3c42f05ac43f9f26c19bbf33786. Note that some of these mappings like `vim.lsp.buf.references()` and `vim.lsp.buf.code_action()` don't show any error or message of any kind if no LSP client is attached, but we can fix that later.\r\n\r\n>My thinking is the \"cr\" prefix is for Refactoring-related things. crr can show a \"code changes\" menu even for non-LSP contexts (similar to gO which has different \"backends\"). So the LSP \"actions\" jargon shouldn't necessary drive this.\r\n\r\nAgree on the `cr` prefix. For the \"menu\" concept tho, why not use `crO` and continue the `O` = \"table of contents\" paradigm?\r\n\r\n>And that allows us to use crr for the general \"code actions\" entrypoint, which is analogous to the way that dd, yy, etc have traditionally been used as \"convenience aliases\".\r\n\r\n`dd` and `yy` and `gcc` and `g??` etc. have the semantics of \"operate on the current line\". `crr` for rename doesn't follow this, but neither does `crr` for a menu. So I don't think `dd` and friends provide this precedent.\r\n\r\nAlthough, looking at what [actual people use today](https://sourcegraph.com/search?q=context:global+lang:Lua+vim.lsp.buf.rename&patternType=keyword&sm=0), the `rn` mnemonic for \"rename\" is more common than I would have expected. So that's a point in `crn`'s favor.",
            "created_at": "2024-04-25T15:15:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2077541334",
            "id": 2077541334,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM571MPW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077541334/reactions"
            },
            "updated_at": "2024-04-25T15:15:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077541334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Changed rename to `crn`.",
            "created_at": "2024-04-25T15:48:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2077616634",
            "id": 2077616634,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM571en6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077616634/reactions"
            },
            "updated_at": "2024-04-25T15:48:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077616634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Agree on the `cr` prefix. For the \"menu\" concept tho, why not use `crO` and continue the `O` = \"table of contents\" paradigm?\r\n\r\n\"O\" in `gO` means \"outline\", not \"menu\". And uppercase mappings are both hard to type and remember, so should be avoided, especially when we have a \"family\" that is prefixed with something like `cr`.\r\n\r\nIs there any disagreement that `crr` is much easier to type? That is perhaps the strongest argument in favor of it. This mapping will be very commonly used, because it's the entrypoint for refactoring options.",
            "created_at": "2024-04-25T18:45:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2077946609",
            "id": 2077946609,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM572vLx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077946609/reactions"
            },
            "updated_at": "2024-04-25T19:10:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077946609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "`_defaults` has become a hodgepodge of mappinngs (vastly differing contexts) such as lsp, treesitter (gcc), quite a few autocmds, then we have others which enhance the defaults (gx). I think it is time to think about splitting this. And allowing an opt out of certain ones. The original content of this file, with things like `*` and `#` in visual mode, `gx`, and the terminal and other `autocmds` which generally added nice value, but this is getting a bit too opinionated. Not to mention the current mappings for lsp are set regardless of lsp client being attached.",
            "created_at": "2024-04-26T08:02:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2078845718",
            "id": 2078845718,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM576KsW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2078845718/reactions"
            },
            "updated_at": "2024-04-26T08:04:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2078845718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `_defaults` has become a hodgepodge of mappinngs (vastly differing contexts) such as lsp, treesitter (gcc), quite a few autocmds, then we have others which enhance the defaults (gx). I think it is time to think about splitting this.\r\n\r\nThat's an implementation detail , and solving it can happen after some thought. Doesn't need to be rushed.\r\n\r\n> And allowing an opt out of certain ones.\r\n\r\nOpting out of LSP mappings is described at `:h lsp-defaults-disable`.\r\n\r\n @gpanders should we define these mappings in the same place where we define 'K':\r\nhttps://github.com/neovim/neovim/blob/47dbda97d2f40729733b1c0d1d13d914065af23c/runtime/lua/vim/lsp.lua#L318\r\n\r\noh, I see : \r\n\r\n> These are mapped unconditionally to avoid confusion\r\n\r\nOk. Do we need to update `:h lsp-defaults-disable` ?",
            "created_at": "2024-04-26T11:36:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2079215417",
            "id": 2079215417,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM577k85",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079215417/reactions"
            },
            "updated_at": "2024-04-26T11:41:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079215417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Ok. Do we need to update `:h lsp-defaults-disable` ?\r\n\r\nDone so",
            "created_at": "2024-04-26T13:12:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2079371826",
            "id": 2079371826,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM578LIy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079371826/reactions"
            },
            "updated_at": "2024-04-26T13:12:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079371826",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Reverted in #28649 to postpone until the 0.11 release cycle (since the 0.10 release is so close). See discussion in that PR and in #28634 for rationale. #28650 will re-introduce defaults in 0.11 so follow that PR for discussion. cc @siduck @folke @tjdevries.",
            "created_at": "2024-05-06T13:25:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/28500#issuecomment-2096016189",
            "id": 2096016189,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
            "node_id": "IC_kwDOAPphoM587qs9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2096016189/reactions"
            },
            "updated_at": "2024-05-06T13:25:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2096016189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28500/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28500/commits",
    "created_at": "2024-04-25T02:26:54Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28500.diff",
    "draft": false,
    "head": {
        "label": "gpanders:lsp-defaults",
        "ref": "lsp-defaults",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-05-06T18:53:06Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 263401,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "44571d46d48736035beb62b7b42c8a4f87290662",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28500",
    "id": 1839922864,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28500",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "688860741589b4583129e426f4df0523f9213275",
    "merged_at": "2024-04-26T16:12:49Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5tqv6w",
    "number": 28500,
    "patch_url": "https://github.com/neovim/neovim/pull/28500.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28500/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/44571d46d48736035beb62b7b42c8a4f87290662",
    "title": "feat(lsp): add more LSP defaults",
    "updated_at": "2024-05-06T13:25:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28500",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}