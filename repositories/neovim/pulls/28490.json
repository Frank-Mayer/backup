{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28490/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28490/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28490"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28490"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28490/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8090e300be0f44c40e76dbfb230636f611216246"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5302,
            "forks_count": 5302,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1707,
            "open_issues_count": 1707,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-06T22:57:03Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 269189,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 76833,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-07T01:04:30Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 76833,
            "watchers_count": 76833,
            "web_commit_signoff_required": false
        },
        "sha": "a1550dbf0ac252052a7a71780708d3ec05aa3686",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Specifying severity=nil will jump to the next diagnostic with the highest severity.\r\n",
    "closed_at": "2024-04-25T13:07:44Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578006140"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578006140"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- See |diagnostic-severity|. Additionally, the value \"auto\" is supported which jumps to the next\r\n```",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T14:36:52Z",
            "diff_hunk": "@@ -1158,8 +1186,9 @@ end\n --- (default: `true`)\n --- @field wrap? boolean\n ---\n---- See |diagnostic-severity|.\n---- @field severity vim.diagnostic.Severity\n+--- See |diagnostic-severity|. Additionaly, the value \"auto\" is supported which jumps to the next",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578006140",
            "id": 1578006140,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDnZ8",
            "original_commit_id": "ef964fceae082f8c286a5cf43cfbcc9193d0c09e",
            "original_line": 1189,
            "original_position": 47,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020069658,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578006140/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T14:36:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578006140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578020791"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578020791"
                }
            },
            "author_association": "MEMBER",
            "body": "Could `diagnostics[i - 1].severity` be lifted out of the loop as `local worst = diagnostics[1].severity`, to avoid the lookup on each item?",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T14:46:10Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil\n+  end\n+\n   local diagnostics =\n     get_diagnostics(bufnr, vim.tbl_extend('keep', opts, { namespace = namespace }), true)\n+\n+  -- When 'auto' severity is set, sort the diagnostics by severity. The first diagnostic then\n+  -- contains the highest severity, and we can discard all diagnostics with a lower severity.\n+  if auto_severity then\n+    table.sort(diagnostics, function(a, b)\n+      return a.severity < b.severity\n+    end)\n+\n+    -- Find the first diagnostic where the severity does not match the highest severity, and remove\n+    -- that element and all subsequent elements from the array\n+    local len = #diagnostics\n+    for i = 2, len do\n+      if diagnostics[i].severity ~= diagnostics[i - 1].severity then",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578020791",
            "id": 1578020791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDq-3",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 837,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020093345,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578020791/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T14:46:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578020791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578025132"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578025132"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we just document that severity=nil works like this, instead of introducing \"auto\" ?",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T14:48:53Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578025132",
            "id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDsCs",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020100337,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578025132/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T14:48:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578025132",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578030746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578030746"
                }
            },
            "author_association": "MEMBER",
            "body": "It doesn't though, `severity=nil` means \"get all diagnostics, regardless of severity\". The `\"auto\"` value is only meaningful in the `goto` style functions, it has no meaning for the lower-level `get()` API.\r\n\r\n`severity=nil` for the `goto` functions means \"go to the next diagnostic, whatever it is\".",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T14:52:14Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578030746",
            "id": 1578030746,
            "in_reply_to_id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDtaa",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020109291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578030746/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T14:52:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578030746",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578042706"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578042706"
                }
            },
            "author_association": "MEMBER",
            "body": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T14:59:26Z",
            "diff_hunk": "@@ -1158,8 +1186,9 @@ end\n --- (default: `true`)\n --- @field wrap? boolean\n ---\n---- See |diagnostic-severity|.\n---- @field severity vim.diagnostic.Severity\n+--- See |diagnostic-severity|. Additionaly, the value \"auto\" is supported which jumps to the next",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578042706",
            "id": 1578042706,
            "in_reply_to_id": 1578006140,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDwVS",
            "original_commit_id": "ef964fceae082f8c286a5cf43cfbcc9193d0c09e",
            "original_line": 1189,
            "original_position": 47,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020129487,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578042706/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T14:59:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578042706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578042792"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578042792"
                }
            },
            "author_association": "MEMBER",
            "body": "db177dc69170a346a177b522c857e242085dc8b7",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T14:59:30Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil\n+  end\n+\n   local diagnostics =\n     get_diagnostics(bufnr, vim.tbl_extend('keep', opts, { namespace = namespace }), true)\n+\n+  -- When 'auto' severity is set, sort the diagnostics by severity. The first diagnostic then\n+  -- contains the highest severity, and we can discard all diagnostics with a lower severity.\n+  if auto_severity then\n+    table.sort(diagnostics, function(a, b)\n+      return a.severity < b.severity\n+    end)\n+\n+    -- Find the first diagnostic where the severity does not match the highest severity, and remove\n+    -- that element and all subsequent elements from the array\n+    local len = #diagnostics\n+    for i = 2, len do\n+      if diagnostics[i].severity ~= diagnostics[i - 1].severity then",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578042792",
            "id": 1578042792,
            "in_reply_to_id": 1578020791,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDwWo",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 837,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020129616,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578042792/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T14:59:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578042792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578044281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578044281"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    local worst = (diagnostics[1] or {}).severity\r\n```\r\n\r\nI think otherwise this fails with no diagnostics",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T15:00:25Z",
            "diff_hunk": "@@ -813,11 +813,40 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil\n+  end\n+\n   local diagnostics =\n     get_diagnostics(bufnr, vim.tbl_extend('keep', opts, { namespace = namespace }), true)\n+\n+  -- When 'auto' severity is set, sort the diagnostics by severity. The first diagnostic then\n+  -- contains the highest severity, and we can discard all diagnostics with a lower severity.\n+  if auto_severity then\n+    table.sort(diagnostics, function(a, b)\n+      return a.severity < b.severity\n+    end)\n+\n+    -- Find the first diagnostic where the severity does not match the highest severity, and remove\n+    -- that element and all subsequent elements from the array\n+    local worst = diagnostics[1].severity",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578044281",
            "id": 1578044281,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDwt5",
            "original_commit_id": "db177dc69170a346a177b522c857e242085dc8b7",
            "original_line": 835,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020132157,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578044281/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T15:00:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578044281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578067106"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578067106"
                }
            },
            "author_association": "MEMBER",
            "body": "81fa7f649d80c3bb8e601176cb1dbf3e2771fa85",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T15:13:52Z",
            "diff_hunk": "@@ -813,11 +813,40 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil\n+  end\n+\n   local diagnostics =\n     get_diagnostics(bufnr, vim.tbl_extend('keep', opts, { namespace = namespace }), true)\n+\n+  -- When 'auto' severity is set, sort the diagnostics by severity. The first diagnostic then\n+  -- contains the highest severity, and we can discard all diagnostics with a lower severity.\n+  if auto_severity then\n+    table.sort(diagnostics, function(a, b)\n+      return a.severity < b.severity\n+    end)\n+\n+    -- Find the first diagnostic where the severity does not match the highest severity, and remove\n+    -- that element and all subsequent elements from the array\n+    local worst = diagnostics[1].severity",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578067106",
            "id": 1578067106,
            "in_reply_to_id": 1578044281,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eD2Si",
            "original_commit_id": "db177dc69170a346a177b522c857e242085dc8b7",
            "original_line": 835,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020171027,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578067106/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T15:13:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578067106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578089042"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578089042"
                }
            },
            "author_association": "MEMBER",
            "body": "> `severity=nil` means \"get all diagnostics, regardless of severity\"\r\n\r\nFor goto_next/goto_prev specifically, that intuitively means what this PR is aiming for, right?\r\n\r\nSo it seems like a \"plumbing\" detail is being lifted into the public interface here. Internally, we might need to disambiguate something, but externally, goto_next(severity=nil) only means one reasonable thing...",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T15:28:29Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578089042",
            "id": 1578089042,
            "in_reply_to_id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eD7pS",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020206699,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578089042/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T15:30:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578089042",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578091976"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578091976"
                }
            },
            "author_association": "MEMBER",
            "body": ">why can't it mean \"go to any next\" for goto_next/goto_prev specifically?\r\n\r\nThat is what it means, I specified as such in my first comment.\r\n\r\n>It seems like a \"plumbing\" detail is being lifted into the public interface here.\r\n\r\nI disagree, this is an explicit change in behavior so belongs in the public interface. It only has semantic meaning when the ordering of diagnostics matters (as it does with the goto functions), which is why it doesn't make sense for e.g. `vim.diagnostic.get()`.",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T15:30:30Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578091976",
            "id": 1578091976,
            "in_reply_to_id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eD8XI",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020211566,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578091976/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T15:30:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578091976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578098719"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578098719"
                }
            },
            "author_association": "MEMBER",
            "body": "> which is why it doesn't make sense for e.g. `vim.diagnostic.get()`.\r\n\r\nI am not suggesting that get() learns \"auto\". I'm suggesting that goto_next changes its treatment of severity=nil. That \"change in behavior\" is not going to break anyone.",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T15:34:49Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578098719",
            "id": 1578098719,
            "in_reply_to_id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eD-Af",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020223252,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578098719/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T15:34:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578098719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578112256"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578112256"
                }
            },
            "author_association": "MEMBER",
            "body": ">I'm suggesting that goto_next changes its treatment of severity=nil\r\n\r\nBut then how would someone use the current behavior (move to the next diagnostic in the buffer, regardless of severity)?",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T15:40:46Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578112256",
            "id": 1578112256,
            "in_reply_to_id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eEBUA",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020245682,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578112256/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T15:40:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578112256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578112431"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578112431"
                }
            },
            "author_association": "MEMBER",
            "body": "Do I understand this right, you're suggesting: \r\n\r\n- goto_next/prev default to worst severity (`severity = nil`, no new `auto`, to go to any next you'd have to set severity min/max)\r\n- get/count remain unchanged. `severity = nil` implies all diagnostics\r\n\r\nSounds good to me, although the asymmetry between the methods bothers me a tiny bit I think it makes sense to have these default behaviours and I'd actually prefer that",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T15:40:48Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578112431",
            "id": 1578112431,
            "in_reply_to_id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eEBWv",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020245933,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578112431/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T15:41:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578112431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578341667"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578341667"
                }
            },
            "author_association": "MEMBER",
            "body": "> the asymmetry between the methods bothers me a tiny bit\r\n\r\nyes, but maybe preferable to a special 'auto' string that isn't used anywhere else.\r\n\r\n> how would someone use the current behavior (move to the next diagnostic in the buffer, regardless of severity)?\r\n\r\n`:help diagnostic-severity` mentions a min/max or severity \"range\", but not sure if goto_xx() supports that yet?",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T18:29:45Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578341667",
            "id": 1578341667,
            "in_reply_to_id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eE5Uj",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020636617,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578341667/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T18:29:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578341667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28490#discussion_r1578474103"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28490"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578474103"
                }
            },
            "author_association": "MEMBER",
            "body": "3b1210a7094fae6e2f7cbae791e833cc0eec48c2\r\n\r\nWill squash and update commit message after approval.",
            "commit_id": "8090e300be0f44c40e76dbfb230636f611216246",
            "created_at": "2024-04-24T20:16:50Z",
            "diff_hunk": "@@ -813,11 +813,39 @@ local function next_diagnostic(position, search_forward, bufnr, opts, namespace)\n   position[1] = position[1] - 1\n   bufnr = get_bufnr(bufnr)\n   local wrap = if_nil(opts.wrap, true)\n-  local line_count = api.nvim_buf_line_count(bufnr)\n+\n+  local auto_severity = opts.severity == 'auto'\n+  if auto_severity then\n+    -- Clear the severity filter so that we get all diagnostics\n+    opts.severity = nil",
            "html_url": "https://github.com/neovim/neovim/pull/28490#discussion_r1578474103",
            "id": 1578474103,
            "in_reply_to_id": 1578025132,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eFZp3",
            "original_commit_id": "f55594f7511290c42b1c14c75436f0bcb549a59b",
            "original_line": 820,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 2020864721,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578474103/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-24T20:16:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578474103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I believe this should have been marked as breaking change, because behavior of `vim.diagnostic.goto_next()` and `vim.diagnostic.goto_prev()` (both without optional `vim.diagnostic.GotoOpts` argument) *did* change.",
            "created_at": "2024-04-27T17:46:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2081112378",
            "id": 2081112378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58C0E6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081112378/reactions"
            },
            "updated_at": "2024-04-27T17:46:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081112378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> have been marked as breaking change, because behavior of `vim.diagnostic.goto_next()` and `vim.diagnostic.goto_prev()` (both without optional `vim.diagnostic.GotoOpts` argument) _did_ change\r\n\r\nNot all changes are breaking. what did this \"break\"? Going to some extra diagnostics doesn't \"break\" any scripts.",
            "created_at": "2024-04-27T22:14:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2081214959",
            "id": 2081214959,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58DNHv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081214959/reactions"
            },
            "updated_at": "2024-04-27T22:14:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081214959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Not all changes are breaking. what did this \"break\"? Going to some extra diagnostics doesn't \"break\" any scripts.\r\n\r\nThe opposite: now both of `goto_***()` functions may not go to *some* diagnostic entries (when used with allowed no arguments), no matter how much they try.\r\n\r\nYes, this does not make any script exit with error, only silently providing not intended behavior (which is arguably worse). If this is not considered \"breaking\", then OK. Is this explicitly documented in some linkable place in the help?",
            "created_at": "2024-04-28T06:02:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2081346460",
            "id": 2081346460,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58DtOc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081346460/reactions"
            },
            "updated_at": "2024-04-28T06:02:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081346460",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I’m also beginning to doubt that this is a good idea to make this the default behavior. With the new default mappings, if I have 2 errors and a warning in a buffer, it’s not possible to select the warning *at all*. I suspect this will cause a lot of confusion and will be surprising to many users. \r\n\r\nIMO we either change the default mappings to navigate in order, or revert to using a special option to use the “move to highest severity” behavior. ",
            "created_at": "2024-04-28T14:11:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2081497347",
            "id": 2081497347,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58ESED",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081497347/reactions"
            },
            "updated_at": "2024-04-28T14:12:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081497347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> IMO we either change the default mappings to navigate in order, or revert to using a special option to use the “move to highest severity” behavior.\r\n\r\nOnly changing default mapping will still affect plugins which rely on `vim.diagnostic.goto_{next,prev}()`. So I'd prefer asking for a special option.",
            "created_at": "2024-04-28T14:14:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2081498422",
            "id": 2081498422,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58ESU2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081498422/reactions"
            },
            "updated_at": "2024-04-28T14:14:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081498422",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So I'd prefer asking for a special option.\r\n\r\nThis is short-term thinking. We need to spend our energy building the best interface.\r\n\r\n> Only changing default mapping will still affect plugins which rely on `vim.diagnostic.goto_{next,prev}()`. So I'd prefer asking for a special option.\r\n\r\nPlugins can update their calls.\r\n\r\nThis is not a breaking change. Yes, sometimes the UI changes. \r\n\r\nNo objection to updating the default mappings.",
            "created_at": "2024-04-28T14:18:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2081500134",
            "id": 2081500134,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58ESvm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081500134/reactions"
            },
            "updated_at": "2024-04-28T14:19:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081500134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I’m also beginning to doubt that this is a good idea to make this the default behavior. With the new default mappings, if I have 2 errors and a warning in a buffer, it’s not possible to select the warning _at all_. I suspect this will cause a lot of confusion and will be surprising to many users.\r\n> \r\n> IMO we either change the default mappings to navigate in order, or revert to using a special option to use the “move to highest severity” behavior.\r\n\r\nDo you have an example case that explains why you'd want to move to the warning instead of the errors?\r\n\r\n\r\nIn my editing experience, warnings or hints are often a side effect of errors. E.g. a function is unused because the function calling it has a compile error.\r\n\r\nOr another common scenario for me:\r\nI update a function signature or type and have adapt all call-sites, some of files containing the call-sites have warnings, some of which cannot be addressed for whatever reason. There I want to jump from error to error, and skip the warnings.\r\n",
            "created_at": "2024-04-28T15:24:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2081519506",
            "id": 2081519506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58EXeS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081519506/reactions"
            },
            "updated_at": "2024-04-28T15:25:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081519506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">Do you have an example case that explains why you'd want to move to the warning instead of the errors?\r\n\r\nIt's the more the fact that it is not possible _at all_ to view the warnings so long as there are errors in the buffer that I find problematic. It strikes me as non-intuitive default behavior.\r\n\r\nWe could enhance `vim.diagnostic.setqflist()` and `vim.diagnostic.setloclist()` to list diagnostics in severity order so that `]q` and `[q` (or `]l` and `[l`) (https://github.com/neovim/neovim/pull/28525) navigate in severity order.",
            "created_at": "2024-04-28T15:31:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2081521771",
            "id": 2081521771,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58EYBr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081521771/reactions"
            },
            "updated_at": "2024-04-28T15:31:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081521771",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This is short-term thinking. We need to spend our energy building the best interface.\r\n\r\nExactly, and the point here is that this new \"auto\" behaviour is not the best interface as default.\r\n\r\nThis new behaviour is dependent on all diagnostic providers agreeing on exactly what an error/warning/... are, and that makes this new method deeply flawed.\r\n\r\nThere was nothing wrong with the old default behaviour of these functions, so I would vote that we revert this and make it opt-in.",
            "created_at": "2024-04-30T08:51:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2084747401",
            "id": 2084747401,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58QriJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084747401/reactions"
            },
            "updated_at": "2024-04-30T08:51:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084747401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Although sorting by severity first does sound like a good compromise to me. I wouldn't mind this being the default, although there's good reason to leave it opt-in. In any case, this strikes me as a strictly more useful version (`autosort` instead of `autofilter`).\r\n\r\nThis would imply replacing `severity` with two new keys:\r\n* `filter` (same behavior as `severity` filter from `getOpts`, with additional value `auto`)\r\n* `sort` (either \"none\" or \"severity\")\r\n\r\nThese should be implemented for and passed through to `get`.\r\n",
            "created_at": "2024-04-30T08:58:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2084762107",
            "id": 2084762107,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58QvH7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084762107/reactions"
            },
            "updated_at": "2024-04-30T09:07:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084762107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > This is short-term thinking. We need to spend our energy building the best interface.\r\n> \r\n> Exactly, and the point here is that this new \"auto\" behaviour is not the best interface as default.\r\n> \r\n> This new behaviour is dependent on all diagnostic providers agreeing on exactly what an error/warning/... are, and that makes this new method deeply flawed.\r\n\r\nThat is an edge case. It can be solved by opting out, by passing a \"min\" filter?\r\n\r\n\"auto\" seems like short-term thinking because it is a special case. Why can't the existing filters be used?\r\n\r\nedit: see https://github.com/neovim/neovim/pull/28577#issuecomment-2084849480",
            "created_at": "2024-04-30T09:30:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2084825267",
            "id": 2084825267,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58Q-iz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084825267/reactions"
            },
            "updated_at": "2024-04-30T09:45:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084825267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That is an edge case. It can be solved by opting out, by passing a \"min\" filter?\r\n\r\nHaving more than one diagnostic provider is certainly not an edge case.\r\n\r\n> \"auto\" seems like short-term thinking because it is a special case. Why can't the existing filters be used?\r\n\r\nIt is special, and personally I don't think we need it at all. The compromise is providing it with an opt-in.",
            "created_at": "2024-04-30T09:32:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2084829954",
            "id": 2084829954,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58Q_sC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084829954/reactions"
            },
            "updated_at": "2024-04-30T09:34:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084829954",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Although sorting by severity first does sound like a good compromise to me. \r\n\r\nThe current logic is able to be simple by only requiring to work on the highest level severity. Once you add the other severities with a more generic sorting approach, the logic will may get more complicated.",
            "created_at": "2024-04-30T09:36:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/28490#issuecomment-2084836757",
            "id": 2084836757,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
            "node_id": "IC_kwDOAPphoM58RBWV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084836757/reactions"
            },
            "updated_at": "2024-04-30T09:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2084836757",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28490/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28490/commits",
    "created_at": "2024-04-24T14:34:59Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28490.diff",
    "draft": false,
    "head": {
        "label": "gpanders:diagnostic-severity-auto",
        "ref": "diagnostic-severity-auto",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-05-06T18:53:06Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 263401,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8090e300be0f44c40e76dbfb230636f611216246",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28490",
    "id": 1838979162,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28490",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b13e63db1dbc1dbc7e23690653df1b7317660a2b",
    "merged_at": "2024-04-25T13:07:44Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5tnJha",
    "number": 28490,
    "patch_url": "https://github.com/neovim/neovim/pull/28490.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28490/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8090e300be0f44c40e76dbfb230636f611216246",
    "title": "feat(diagnostic): support severity=nil for goto functions",
    "updated_at": "2024-04-30T09:45:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28490",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}