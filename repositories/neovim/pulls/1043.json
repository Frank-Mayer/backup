{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/1043/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1043/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/1043"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/1043"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1043/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1043"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/9aeaeea791930795ca6b4548cf37659a470ec75d"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4762,
            "forks_count": 4762,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1673,
            "open_issues_count": 1673,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-07-17T22:27:39Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247442,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 67470,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-07-17T23:45:16Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 67470,
            "watchers_count": 67470,
            "web_commit_signoff_required": false
        },
        "sha": "563f38c317908a94893727db501e325f29710edb",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "The first commit allows nvim to toggle between DFS and BFS for the `:find` command by running `:set breadthfirst` or `:set nobreadthfirst`. The second just changes the names of variables because calling a \"queue\" a \"stack\" makes no sense.\r\n\r\nTo test it, I went into my root directory and ran\r\n\r\n```\r\n/$ time /home/admin/src/neovim/build/bin/nvim -c ':find vim.h | :q' \r\n1.12user 0.76system 0:01.89elapsed 99%CPU (0avgtext+0avgdata 9300maxresident)\r\n0inputs+328outputs (0major+12437minor)pagefaults 0swaps\r\n```\r\n\r\nThe format got garbled from having run vim through it, but it found `vim.h` in just over a second! In that amount of time, even the linux program find is still reading my `~/.cabal` directory (quite huge).\r\n\r\n**Caveats:** I'm not sure my test and `make test` are very comprehensive. I had a segfault to fix on builds that ran through the tests perfectly, and this wouldn't be the first time I broke vim without a test reporting it. I also have been considering disabling `breadthfirst` during certain operations other than `:find`.\r\n\r\nAlso, the source warned:\r\n\r\n> The search algorithm is depth first. To change this replace the stack with a list (don't forget to leave partly searched directories on the top of the list).\r\n\r\nI don't fully understand the meaning of that. I thought the logic of what to leave on the list or take off was implemented in the calling code of `ff_push()` and `ff_pop()`, so I'd imagine that by just overloading those, I'm done. Assuming that, I edited this comment to reflect the changes.\r\n\r\n_Update_: `vim_dev@vim.org` threaf: https://groups.google.com/forum/#!topic/vim_dev/_t5XILM6SCI\r\n\r\nClose #1035",
    "closed_at": "2023-07-12T17:57:46Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1043#discussion_r15961916"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1043"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/15961916"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "typo p_bsp -> p_bfs\n",
            "commit_id": "9aeaeea791930795ca6b4548cf37659a470ec75d",
            "created_at": "2014-08-07T20:32:13Z",
            "diff_hunk": "@@ -571,16 +580,15 @@ void vim_findfile_cleanup(void *ctx)\n  *\n  * If the passed search_context is NULL, NULL is returned.\n  *\n- * The search algorithm is depth first. To change this replace the\n- * stack with a list (don't forget to leave partly searched directories on the\n- * top of the list).\n+ * The search algorithm is depth first by default, and breadth first if p_bsp",
            "html_url": "https://github.com/neovim/neovim/pull/1043#discussion_r15961916",
            "id": 15961916,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTYxOTE2",
            "original_commit_id": "0c03ea3d7bb73f62de5d59bd7906ffdb7a6f12b7",
            "original_line": null,
            "original_position": 90,
            "original_start_line": null,
            "path": "src/nvim/file_search.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1043",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/15961916/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2014-08-11T02:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/15961916",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@splinterofchaos Nice turnaround!\n\nThis might be worth submitting to vim_dev for inclusion, since I don't think it depends too much on Neovim refactorings. More importantly, it would be a good way to get an answer about that mysterious \"partly searched directories\" comment.\n",
            "created_at": "2014-08-06T23:20:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51411135",
            "id": 51411135,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDExMTM1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51411135/reactions"
            },
            "updated_at": "2014-08-06T23:20:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51411135",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is pretty cool indeed! Though I'd like a profiling trace screenshot as well, itching for some free time right about now :). Good job!\n",
            "created_at": "2014-08-07T07:57:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51441865",
            "id": 51441865,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQxODY1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51441865/reactions"
            },
            "updated_at": "2014-08-07T07:57:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51441865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ":+1: Nice solution!\n",
            "created_at": "2014-08-07T08:07:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51442672",
            "id": 51442672,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQyNjcy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51442672/reactions"
            },
            "updated_at": "2014-08-07T08:07:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51442672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't have a good alternative suggestion yet, but I think the option name `breadthfirst` may be too generic. \n",
            "created_at": "2014-08-07T17:39:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51505387",
            "id": 51505387,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTA1Mzg3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51505387/reactions"
            },
            "updated_at": "2014-08-07T17:39:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51505387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there a way to make `:find` take a flag like `-bfs`. Sort of like the way `:Unite` works. I don't think these global options are best usability wise.\n",
            "created_at": "2014-08-07T18:06:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51509225",
            "id": 51509225,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTA5MjI1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51509225/reactions"
            },
            "updated_at": "2014-08-07T18:06:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51509225",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/139003?v=4",
                "events_url": "https://api.github.com/users/rgrinberg/events{/privacy}",
                "followers_url": "https://api.github.com/users/rgrinberg/followers",
                "following_url": "https://api.github.com/users/rgrinberg/following{/other_user}",
                "gists_url": "https://api.github.com/users/rgrinberg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rgrinberg",
                "id": 139003,
                "login": "rgrinberg",
                "node_id": "MDQ6VXNlcjEzOTAwMw==",
                "organizations_url": "https://api.github.com/users/rgrinberg/orgs",
                "received_events_url": "https://api.github.com/users/rgrinberg/received_events",
                "repos_url": "https://api.github.com/users/rgrinberg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rgrinberg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rgrinberg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rgrinberg"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I also took a quick look in the \"file expansion\" functions inside of vim. Either I'm crazy or it always uses a shell (it tries to detect which shell and presents different formats to the shell) and some globs.\n\nIf correct:\n\nAt first I thought this was just to avoid having to write a `is_glob_match(pattern, input)` function but that can't be right: vim implements 2 (!) entire regex engines. \n\nSo what gives? Did I miss something? Why can't we use `uv_fs_readdir` and `is_glob_match` (which could even be based on translating to a regex) and cut out a lot of code?\n\nI hope someone can enlighten me.\n",
            "created_at": "2014-08-07T18:23:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51511400",
            "id": 51511400,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTExNDAw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51511400/reactions"
            },
            "updated_at": "2014-08-07T18:23:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51511400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (@rgrinberg) Is there a way to make :find take a flag like -bfs. \n\nTo be honest, I used a global partially because I don't yet understand how the code that parses these commands work, and because the calling code ignores the given options, sending the [`exarg`](https://github.com/neovim/neovim/blob/master/src/nvim/ex_cmds_defs.h#L1128-L1157) structure to [`do_exedit()`](https://github.com/neovim/neovim/blob/master/src/nvim/ex_docmd.c#L5993-L6127). (see also: [`ex_find()`](https://github.com/neovim/neovim/blob/master/src/nvim/ex_docmd.c#L5923-L5949)). I did submit a patch to `vim_dev@vim.org`, and they might complain that I used a global, hopefully suggesting what to do instead.\n\nAlso, I find `:fin ...` much more convenient than `:e dir/...`. Adding a flag would make it less so. Perhaps instead of modifying the behaviour of `:find`, it would be more orthogonal to add a new command like `:near`.\n\nEDIT: Lastly `:Explore`, and probably a few other commands, aren't affected by these changes, so I might want to make them respect this option as well.\n",
            "created_at": "2014-08-07T21:02:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51531311",
            "id": 51531311,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTMxMzEx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51531311/reactions"
            },
            "updated_at": "2014-08-07T21:36:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51531311",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@aktau I don't know much anything about profiling, but I can use gprof enough to produce this: https://gist.github.com/splinterofchaos/d937c1e524e5a593c4fe\n\nSome highlights:\nDFS:\n\n```\n%   cumulative   self              self     total           \n time   seconds   seconds    calls   s/call   s/call  name    \n 83.86     66.13    66.13    42180     0.00     0.00  ff_check_visited +\n  7.16     71.78     5.65 776266823     0.00     0.00  os_file_id_equal\n  2.05     73.40     1.62  6152021     0.00     0.00  addstate\n  1.22     74.36     0.96   421636     0.00     0.00  nfa_regmatch\n  0.82     75.01     0.65    42291     0.00     0.00  os_get_file_id\n  0.70     75.56     0.56 54844248     0.00     0.00  utfc_ptr2len\n  0.62     76.05     0.49 18426339     0.00     0.00  copy_sub\n  0.61     76.53     0.48  9575040     0.00     0.00  vim_strchr\n  0.30     76.77     0.24 17650624     0.00     0.00  utf_ptr2char\n  0.16     76.90     0.13   423513     0.00     0.00  nfa_regexec_both\n  0.14     77.01     0.11  1348079     0.00     0.00  os_stat ++\n  0.14     77.12     0.11   136786     0.00     0.00  pathcmp\n...\n  0.06     77.57     0.05        5     0.01    15.51  vim_findfile\n...\n 0.00     78.86     0.00        1     0.00    19.39  ex_find\n...\n  0.01     78.63     0.01    42418     0.00     0.00  ff_pop\n  0.01     78.64     0.01    42402     0.00     0.00  ffs_push\n  0.01     78.65     0.01    42401     0.00     0.00  ff_free_state_element\n...\n 0.00     78.86     0.00    42401     0.00     0.00  ff_create_state_element\n...\n  0.00     78.86     0.00   841032     0.00     0.00  os_file_exists +++\n```\n\n+vim spends most of its time checking the visited list? Indeed, it is called on every single iteration, but I still find it surprising.\n\n++ `os_stat()` is used more than I'd expect, \n\n+++ Over 800 thousand calls to `os_file_exists()`!\n\nBFS:\n\n```\n  %   cumulative   self              self     total           \n time   seconds   seconds    calls  ms/call  ms/call  name    \n 11.32      0.06     0.06  3671122     0.00     0.00  utfc_ptr2len\n 11.32      0.12     0.06   307643     0.00     0.00  addstate\n  9.43      0.17     0.05    65183     0.00     0.00  find_name_end\n  9.43      0.22     0.05    35517     0.00     0.00  nfa_regmatch\n  5.66      0.25     0.03  1612705     0.00     0.00  os_file_id_equal\n  3.77      0.27     0.02   898507     0.00     0.00  copy_sub\n  3.77      0.29     0.02   559161     0.00     0.00  vim_strchr\n  3.77      0.31     0.02   110318     0.00     0.00  hash_hash\n  3.77      0.33     0.02    37354     0.00     0.00  nfa_regexec_both\n  3.77      0.35     0.02    26531     0.00     0.00  modifier_len\n  3.77      0.37     0.02     2998     0.01     0.01  do_autocmd_event *\n...\n  1.89      0.40     0.01    69768     0.00     0.00  os_file_exists\n...\n  0.00      0.53     0.00   113053     0.00     0.00  os_stat\n...\n  1.89      0.47     0.01     1845     0.01     0.02  ff_check_visited\n...\n  0.00      0.53     0.00     4487     0.00     0.00  ff_pop\n  0.00      0.53     0.00     4470     0.00     0.00  ffq_push\n  0.00      0.53     0.00     4469     0.00     0.00  ff_create_state_element\n  0.00      0.53     0.00     4469     0.00     0.00  ff_free_state_element\n...\n  0.00      0.53     0.00        5     0.00    33.14  vim_findfile\n```\n- I didn't expect to see autocmd on this list, much yet so high.\n\nI see a lot of performance increase in my use-case because 42,401 directories are checked normally, but with BFS only 4,469.\n",
            "created_at": "2014-08-08T02:49:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51557741",
            "id": 51557741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTU3NzQx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51557741/reactions"
            },
            "updated_at": "2014-08-08T02:49:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51557741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> vim spends most of its time checking the visited list? Indeed, it is called on every single iteration, but I still find it surprising.\n\nI think it's a good news! Searching through entire list on every iteration leads to O(n^2) complexity where n is the number of searched nodes. Perhaps we can replace list with hashtable, get O(n) and cut off run time of your dfs test by 80% :-)\n",
            "created_at": "2014-08-08T05:01:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51563682",
            "id": 51563682,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTYzNjgy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51563682/reactions"
            },
            "updated_at": "2014-08-08T05:01:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51563682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's crazy, and revealing.\n\nWhen something like `utfc_ptr2len` reaches the top of your profiling output, the easy pickings are over. But for the DFS case, like @Hinidu says, there's is a _lot_ of room for improvement. I haven't looked at the code so I'm not sure what causes this huge difference. But this is a great step.\n",
            "created_at": "2014-08-08T08:32:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51576134",
            "id": 51576134,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTc2MTM0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51576134/reactions"
            },
            "updated_at": "2014-08-08T08:32:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51576134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> But for the DFS case, like @Hinidu says, there's is a lot of room for improvement.\n\nActually replacing list by hashtable will improve BFS case too (though on this particular test case not significantly). And other optimizations like decreasing os_stat calls will affect performance in both cases. So I agree there are really many meaningful work to be done :-)\n",
            "created_at": "2014-08-08T09:13:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51579627",
            "id": 51579627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTc5NjI3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51579627/reactions"
            },
            "updated_at": "2014-08-08T09:13:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51579627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "80%!? Oh, I feel blind; I didn't even notice the second entry only had 7 seconds accumulative.\n\n@Hinidu I like the idea of using a hash table, though I'm not sure how well it would integrate into the code. Currently, the visited list is a linked list. Here's the critical code from [`ff_check_visited()`](https://github.com/neovim/neovim/blob/master/src/nvim/file_search.c#L1087-L1140):\n\n``` c\n  /* check against list of already visited files */\n  for (vp = *visited_list; vp != NULL; vp = vp->ffv_next) {\n    if ((url && fnamecmp(vp->ffv_fname, ff_expand_buffer) == 0)\n        || (!url && vp->file_id_valid\n            && os_file_id_equal(&(vp->file_id), &file_id))) {\n      /* are the wildcard parts equal */\n      if (ff_wc_equal(vp->ffv_wc_path, wc_path) == TRUE)\n        /* already visited */\n        return FAIL;\n    }\n  }\n```\n\nBut if we found a way to incorporate all this data into something hashable... Also, check out [`ff_wc_equal`](https://github.com/neovim/neovim/blob/master/src/nvim/file_search.c#L1045-L1080), which considers strings like `**4/path` and `**9/path` to be equal.\n",
            "created_at": "2014-08-08T09:55:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51583149",
            "id": 51583149,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTgzMTQ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51583149/reactions"
            },
            "updated_at": "2014-08-08T09:58:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51583149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @Hinidu I like the idea of using a hash table, though I'm not sure how well it would integrate into the code. Currently, the visited list is a linked list. Here's the critical code from ff_check_visited():\n\nThe code you pasted doesn't seem like it would required a linked list at all. Is there any random-access deleting in the list? If not, we could try turning the linked list into a dynamic array (kvec or garray). That will already improve caching by a lot. Now it's just allocating a lot and pointer chasing a lot. The pointer chasing could probably be improved even more by using a static array of `MAXPATHL` inside of the `vp` structs (`ffv_fname`), but that might push up memory usage too much.\n",
            "created_at": "2014-08-08T10:00:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51583596",
            "id": 51583596,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTgzNTk2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51583596/reactions"
            },
            "updated_at": "2014-08-08T10:01:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51583596",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ( @aktau )  Is there any random-access deleting in the list?\n\nNone at all. Nor random insertion. Even if there were, lengthy discussion in the C++ world has revealed that a linked list structure rarely beats an array with a good resizing policy. \n\nI do want to point out, in case anyone expects me to extend this PR, I responded to the claim that `:find` produces the wrong answer. Optimizing it is a whole 'nother issue and orthogonal to the changes made so far.\n",
            "created_at": "2014-08-08T10:28:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51585814",
            "id": 51585814,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTg1ODE0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51585814/reactions"
            },
            "updated_at": "2014-08-08T10:30:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51585814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I do want to point out, in case anyone expects me to extend this PR, I responded to the claim that :find produces the wrong answer. Optimizing it is a whole 'nother issue.\n\nWrong? I thought it was just slow.\n\nAnd sure, optimizing it should be another PR.\n",
            "created_at": "2014-08-08T10:39:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51586629",
            "id": 51586629,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTg2NjI5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51586629/reactions"
            },
            "updated_at": "2014-08-08T10:39:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51586629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Wrong? I thought it was just slow.\n\n#1035 -- I referenced this in the commit message, but perhaps I should have put it in the post as well. The example @qstrahl gives doesn't reproduce the problem because `:find` works in reverse-alphabetical order, so do this:\n\n``` bash\n$ mkdir -p z/z/z/z/z/z/z/z\n$ touch z/z/z/z/z/z/z/z/foo\n$ mkdir goal\n$ touch goal/foo\n$ nvim -c ':find foo'\n```\n\nObserve that vim finds `z/z/z/z/z/z/z/z/foo`.\n",
            "created_at": "2014-08-08T10:47:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51587218",
            "id": 51587218,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTg3MjE4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51587218/reactions"
            },
            "updated_at": "2014-08-08T10:47:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51587218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Observe that vim finds z/z/z/z/z/z/z/z/foo.\n\nInteresting, I suppose vanilla has this problem too (code unchanged as far as I know). Good catch :).\n",
            "created_at": "2014-08-08T10:48:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51587303",
            "id": 51587303,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTg3MzAz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51587303/reactions"
            },
            "updated_at": "2014-08-08T10:48:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51587303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @Hinidu I like the idea of using a hash table, though I'm not sure how well it would integrate into the code. Currently, the visited list is a linked list. Here's the critical code from ff_check_visited():\n\n@splinterofchaos I already saw that code. I think the way we can go in another PR is adding two hashtables: one for urls, one for others. Perhaps if I will have time I will try this approach if noone outpaces me.\n\n> If not, we could try turning the linked list into a dynamic array (kvec or garray). That will already improve caching by a lot.\n\n@aktau I agree it would be improvement. But I think we should try algorithmic (asymptotic) optimizations at first.\n",
            "created_at": "2014-08-08T11:13:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51589093",
            "id": 51589093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTg5MDkz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51589093/reactions"
            },
            "updated_at": "2014-08-08T11:13:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51589093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @aktau I agree it would be improvement. But I think we should try algorithmic (asymptotic) optimizations at first.\n\nYes, I was just spouting of things that came into my mind after seeing that snippet. Boh DFS and BFS should have [the same time and space complexity](http://bigocheatsheet.com/), by the way. Anything resembling `O(N^2)` just seems naively implemented.\n",
            "created_at": "2014-08-08T12:21:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51593826",
            "id": 51593826,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTkzODI2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51593826/reactions"
            },
            "updated_at": "2014-08-08T12:21:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51593826",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`[WIP] -> [RFC]`: Since submitting this PR, I updated to the runtime docs, fixed the typo, reverted `ff[sq]_pop()` back to just `ff_pop()`, and removed the `NULL` checks, which I think were only needed in case `alloc()` failed.\n\n>  I think the way we can go in another PR is adding two hashtables: one for urls, one for others. Perhaps if I will have time I will try this approach if noone outpaces me.\n\n:+1: -- and that'll free me up to investigate other vim commands that might be able to use BFS. (At _least_ `:Expore`.)\n",
            "created_at": "2014-08-08T18:52:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51643038",
            "id": 51643038,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjQzMDM4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51643038/reactions"
            },
            "updated_at": "2014-08-08T22:27:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51643038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim_dev` thread: https://groups.google.com/forum/#!topic/vim_dev/_t5XILM6SCI\n",
            "created_at": "2014-08-08T22:02:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51662902",
            "id": 51662902,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjYyOTAy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51662902/reactions"
            },
            "updated_at": "2014-08-08T22:02:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51662902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That last commit was partially to make the tests rerun.\n\nBram said, for vim, a new ex command would be strongly preferred, but I don't know whether or not neovim should, so I'll leave this as-is, to be merged or closed. In the meanwhile, I'm looking into making a command, `:nea[rest]`, which uses BFS every time.\n\nref: https://github.com/neovim/neovim/issues/1035#issuecomment-51721929\n",
            "created_at": "2014-08-11T04:07:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51740375",
            "id": 51740375,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzQwMzc1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51740375/reactions"
            },
            "updated_at": "2014-08-11T04:09:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51740375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just something I came upon today about DFS vs BFS for file search: http://stackoverflow.com/a/2312337/558819\n\nCited:\n\n> > You seem to be missing one basic point: directory traversal involves reading data from the disk. Even when/if that data is in the cache, you end up going through a fair amount of code to get it from the cache into your process. Paths are also generally pretty short -- any more than a couple hundred bytes is pretty unusual. Together these mean that you can pretty reasonably build up strings for all the paths you need without any real problem. The time spent building the strings is still pretty minor compared to the time to read data from the disk. That means you can normally ignore the time spent on string manipulation, and work exclusively at optimizing disk usage.\n> > \n> > My own experience has been that for most directory traversal a breadth-first search is usually preferable -- as you're traversing the current directory, put the full paths to all sub-directories in something like a priority queue. When you're finished traversing the current directory, pull the first item from the queue and traverse it, continuing until the queue is empty. This generally improves cache locality, so it reduces the amount of time spent reading the disk. Depending on the system (disk speed vs. CPU speed, total memory available, etc.) it's nearly always at least as fast as a depth-first traversal, and can easily be up to twice as fast (or so).\n> \n> Why use a priority queue and not something simpler like a FIFO queue? What do you use as the priority attribute? –  Andrew O'Reilly\n> \n> Andrew: Good question. A FIFO will work perfectly well. A PQ simply makes it easy to produce results in order sorted by name, which the user generally prefers (certainly, I prefer it when I'm using it...) –  Jerry Coffin\n",
            "created_at": "2014-08-11T09:50:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51760576",
            "id": 51760576,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzYwNTc2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51760576/reactions"
            },
            "updated_at": "2014-08-11T09:50:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51760576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another thought I've had, concerning BFS (as for example described [on wikipedia](http://en.wikipedia.org/wiki/Breadth-first_search)):\n\n```\n1  procedure BFS(G,v) is\n2      create a queue Q\n3      create a set V\n4      add v to V\n5      enqueue v onto Q\n6      while Q is not empty loop\n7         t ← Q.dequeue()\n8         if t is what we are looking for then\n9            return t\n10        end if\n11        for all edges e in G.adjacentEdges(t) loop\n12           u ← G.adjacentVertex(t,e)\n13           if u is not in V then\n14               add u to V\n15               enqueue u onto Q\n16           end if\n17        end loop\n18     end loop\n19     return none\n20 end BFS\n```\n\nThe thing that's making us consider a hashtable is this:\n\n```\n13           if u is not in V then\n14               add u to V\n15               enqueue u onto Q\n16           end if\n```\n\nThe `u is not in V` check needs a loop (and lots `strcmp`'s over everything we've already visited). But I wonder why. We're not dealing with a generic graph, but with a folder tree. The only thing to be wary of is symlink loops, but I don't see why we would enter into symlinks anyway.\n\nSaid in another way, when we \"expand\" a node (a folder), we know that none of its children will have been visited, it is unique.\n\nThe reason it's unique is because the complete filesystem name is part of the id: `/home/user/mydir/a` is different from `/home/user/mydirbindmount/a` from the `:find` users' perspective because it has a different name (even though it's the same inode).\n\nI could understand if the bfs/dfs algorithm was meant to work for generic graph problems, but the `ff_` prefix on the functions tells me that's probably not the case.\n\nWhat am I missing?\n\n**EDIT**: just thought of the fact that directory symlinks are also possible on Linux, I confused it with directory hardlinks, which only exist on OSX afaik. That would require some special treatment, perhaps...\n",
            "created_at": "2014-08-11T14:32:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51787679",
            "id": 51787679,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg3Njc5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51787679/reactions"
            },
            "updated_at": "2014-08-11T14:34:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51787679",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We're not dealing with a generic graph, but with a folder tree.\n\nYes an no. `file_search.c` is one giant state machine. You can call `vim_findfile()` multiple times to get multiple results. There are some situations where the search context will be cleared (which includes the directory stack/queue), but the visited list remains. \n\n([example](https://github.com/splinterofchaos/neovim/blob/bfs/src/nvim/file_search.c#L121-L143))\n\n``` c\n/*\n * We might have to manage several visited lists during a search.\n * This is especially needed for the tags option. If tags is set to:\n *      \"./++/tags,./++/TAGS,++/tags\"  (replace + with *)\n * So we have to do 3 searches:\n *   1) search from the current files directory downward for the file \"tags\"\n *   2) search from the current files directory downward for the file \"TAGS\"\n *   3) search from Vims current directory downwards for the file \"tags\"\n * As you can see, the first and the third search are for the same file, so for\n * the third search we can use the visited list of the first search. [...]\n */\n```\n\n> Said in another way, when we \"expand\" a node (a folder), we know that none of its children will have been visited, it is unique.\n\nIFF the expanded node is a leaf or not a symlink and we haven't visited it before. Perhaps that's why files are compared by their ID (do sym links and their targets share an ID?). \n",
            "created_at": "2014-08-11T15:11:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51793372",
            "id": 51793372,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzkzMzcy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51793372/reactions"
            },
            "updated_at": "2014-08-11T15:47:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51793372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> IFF the expanded node is not a symlink and we haven't visited it before. Perhaps that's why files are compared by their ID (do sym links and their targets share an ID?).\n\nYes, the symlink issue is annoying indeed. Symlinks are proper inodes though, they don't share an id with their targets. Look at them as pointers. Pointer have an own address too. (see the difference between `stat()` and `lstat()` as well).\n",
            "created_at": "2014-08-11T15:47:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51798608",
            "id": 51798608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzk4NjA4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51798608/reactions"
            },
            "updated_at": "2014-08-11T15:47:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51798608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The thing that's making us consider a hashtable is this:\n> \n> ```\n> 13           if u is not in V then\n> 14               add u to V\n> 15               enqueue u onto Q\n> 16           end if\n> ```\n\nAfter reviewing the source, I found that while the algorithm on Wikipedia checks the visited list (or `V`) on insertion; vim's algorithm checks on expansion, and it inserts from several parts of `vim_findfile()`. If we can prove that all of a node's children are unique on insertion, and factor `ff_push()` to contain this check, we can save a lot of calls to `ff_check_visited()`. But if we put a call to `ff_check_visited()` in `ff_push()`, we might call it redundantly while the goal sits in the queue.\n",
            "created_at": "2014-08-11T16:15:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-51802437",
            "id": 51802437,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxODAyNDM3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51802437/reactions"
            },
            "updated_at": "2014-08-11T16:15:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51802437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@splinterofchaos what's the future of this PR? Is it being advanced elsewhere (vim_dev)? Is it just needing a rebase? Is it dead?",
            "created_at": "2018-08-14T22:08:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-413032138",
            "id": 413032138,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzAzMjEzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/413032138/reactions"
            },
            "updated_at": "2018-08-14T22:08:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/413032138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7495?v=4",
                "events_url": "https://api.github.com/users/josephholsten/events{/privacy}",
                "followers_url": "https://api.github.com/users/josephholsten/followers",
                "following_url": "https://api.github.com/users/josephholsten/following{/other_user}",
                "gists_url": "https://api.github.com/users/josephholsten/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/josephholsten",
                "id": 7495,
                "login": "josephholsten",
                "node_id": "MDQ6VXNlcjc0OTU=",
                "organizations_url": "https://api.github.com/users/josephholsten/orgs",
                "received_events_url": "https://api.github.com/users/josephholsten/received_events",
                "repos_url": "https://api.github.com/users/josephholsten/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/josephholsten/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/josephholsten/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/josephholsten"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is more of a half-measure than a solution. Likely better to expose `:find` as a \"provider\", so it can use [ripgrep](https://github.com/BurntSushi/ripgrep) (`rg`) as a backend instead. https://github.com/neovim/neovim/issues/7282",
            "created_at": "2023-07-12T17:57:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/1043#issuecomment-1632974343",
            "id": 1632974343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
            "node_id": "IC_kwDOAPphoM5hVTYH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1632974343/reactions"
            },
            "updated_at": "2023-07-15T18:03:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1632974343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/1043/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/1043/commits",
    "created_at": "2014-08-06T23:12:10Z",
    "diff_url": "https://github.com/neovim/neovim/pull/1043.diff",
    "draft": false,
    "head": {
        "label": "splinterofchaos:bfs",
        "ref": "bfs",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/splinterofchaos/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/splinterofchaos/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/splinterofchaos/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/splinterofchaos/neovim/branches{/branch}",
            "clone_url": "https://github.com/splinterofchaos/neovim.git",
            "collaborators_url": "https://api.github.com/repos/splinterofchaos/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/splinterofchaos/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/splinterofchaos/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/splinterofchaos/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/splinterofchaos/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/splinterofchaos/neovim/contributors",
            "created_at": "2014-07-07T13:13:12Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/splinterofchaos/neovim/deployments",
            "description": "vim for the 21st century",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/splinterofchaos/neovim/downloads",
            "events_url": "https://api.github.com/repos/splinterofchaos/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/splinterofchaos/neovim/forks",
            "full_name": "splinterofchaos/neovim",
            "git_commits_url": "https://api.github.com/repos/splinterofchaos/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/splinterofchaos/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/splinterofchaos/neovim/git/tags{/sha}",
            "git_url": "git://github.com/splinterofchaos/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://neovim.org/",
            "hooks_url": "https://api.github.com/repos/splinterofchaos/neovim/hooks",
            "html_url": "https://github.com/splinterofchaos/neovim",
            "id": 21571013,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/splinterofchaos/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/splinterofchaos/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/splinterofchaos/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/splinterofchaos/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/splinterofchaos/neovim/labels{/name}",
            "language": "VimL",
            "languages_url": "https://api.github.com/repos/splinterofchaos/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/splinterofchaos/neovim/merges",
            "milestones_url": "https://api.github.com/repos/splinterofchaos/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTU3MTAxMw==",
            "notifications_url": "https://api.github.com/repos/splinterofchaos/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/splinterofchaos/neovim/pulls{/number}",
            "pushed_at": "2015-08-23T03:58:16Z",
            "releases_url": "https://api.github.com/repos/splinterofchaos/neovim/releases{/id}",
            "size": 33560,
            "ssh_url": "git@github.com:splinterofchaos/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/splinterofchaos/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/splinterofchaos/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/splinterofchaos/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/splinterofchaos/neovim/subscription",
            "svn_url": "https://github.com/splinterofchaos/neovim",
            "tags_url": "https://api.github.com/repos/splinterofchaos/neovim/tags",
            "teams_url": "https://api.github.com/repos/splinterofchaos/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/splinterofchaos/neovim/git/trees{/sha}",
            "updated_at": "2015-04-15T19:23:11Z",
            "url": "https://api.github.com/repos/splinterofchaos/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "9aeaeea791930795ca6b4548cf37659a470ec75d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
            "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
            "followers_url": "https://api.github.com/users/splinterofchaos/followers",
            "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
            "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/splinterofchaos",
            "id": 38515,
            "login": "splinterofchaos",
            "node_id": "MDQ6VXNlcjM4NTE1",
            "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
            "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
            "repos_url": "https://api.github.com/users/splinterofchaos/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/splinterofchaos"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/1043",
    "id": 19438316,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1043",
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is fixed in vim and patch needs to be ported",
            "id": 152276149,
            "name": "has:vim-patch",
            "node_id": "MDU6TGFiZWwxNTIyNzYxNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:vim-patch"
        }
    ],
    "locked": false,
    "merge_commit_sha": "ba16b19ddc9e643f2c76c45527e37bb182d61f37",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MzgzMTY=",
    "number": 1043,
    "patch_url": "https://github.com/neovim/neovim/pull/1043.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/1043/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/9aeaeea791930795ca6b4548cf37659a470ec75d",
    "title": "Enable BFS for :find.",
    "updated_at": "2023-07-15T18:53:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/1043",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
        "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
        "followers_url": "https://api.github.com/users/splinterofchaos/followers",
        "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
        "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/splinterofchaos",
        "id": 38515,
        "login": "splinterofchaos",
        "node_id": "MDQ6VXNlcjM4NTE1",
        "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
        "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
        "repos_url": "https://api.github.com/users/splinterofchaos/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/splinterofchaos"
    }
}