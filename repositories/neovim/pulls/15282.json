{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15282/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15282/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/15282"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15282"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15282/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15282"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a2370bb9c6a024749d97110c1ce96576ed112cf9"
        }
    },
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
        "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
        "followers_url": "https://api.github.com/users/tjdevries/followers",
        "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
        "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tjdevries",
        "id": 4466899,
        "login": "tjdevries",
        "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
        "organizations_url": "https://api.github.com/users/tjdevries/orgs",
        "received_events_url": "https://api.github.com/users/tjdevries/received_events",
        "repos_url": "https://api.github.com/users/tjdevries/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tjdevries"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
            "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
            "followers_url": "https://api.github.com/users/tjdevries/followers",
            "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tjdevries",
            "id": 4466899,
            "login": "tjdevries",
            "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
            "organizations_url": "https://api.github.com/users/tjdevries/orgs",
            "received_events_url": "https://api.github.com/users/tjdevries/received_events",
            "repos_url": "https://api.github.com/users/tjdevries/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tjdevries"
        }
    ],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5096,
            "forks_count": 5096,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1716,
            "open_issues_count": 1716,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-02T01:20:52Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248449,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72293,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-02T00:18:48Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72293,
            "watchers_count": 72293,
            "web_commit_signoff_required": false
        },
        "sha": "e7bde44d6d2a88e67d68d5a1b9f0d037179dd14e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "A problem faced by many Lua plugin authors is the fact that when you want to create an easier-to-use namespace to other Lua modules, you need to \"require\" those modules at the top level of your current module, e.g.\r\n\r\n```lua\r\nlocal foo = require(\"foo\")\r\nlocal bar = require(\"bar\")\r\n```\r\n\r\nThis needs to be done even if you don't use any of those modules until much later. This adds considerable startup time to Lua plugins as they need to essentially load the entirety of their codebase up front.\r\n\r\nContrast this to the autoload function concept of VimL, where functions are not even loaded until called.\r\n\r\nAdd a similar feature to the Neovim Lua stdlib that uses some metatable trickery to defer actually requiring the module until it's actually accessed. Our example above would become\r\n\r\n```lua\r\nlocal foo = vim.autoload(\"foo\")\r\nlocal bar = vim.autoload(\"bar\")\r\n```\r\n\r\nThis provides an easy interface into the 'foo' and 'bar' modules, but does not actually load either of these modules until one of the modules members is accessed, e.g.:\r\n\r\n```lua\r\nfoo.doSomething()\r\n```",
    "closed_at": "2021-08-18T21:30:08Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Marking this as a draft because it will undoubtedly need a lot of discussion and iteration, but I wanted to propose the idea.",
            "created_at": "2021-08-05T23:13:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-893879035",
            "id": 893879035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41R4L7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/893879035/reactions"
            },
            "updated_at": "2021-08-05T23:13:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/893879035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I do like the idea of something like this being in core . \r\nBeing in core will make it more wildly used in plugins and hopefully will overall improve startup time for lua plugins in genaral.\r\nRecently tj has released [lazy.nvim](https://github.com/tjdevries/lazy.nvim). I think this is relevant in this context.\r\n\r\nI think `__newindex` and `__call` should be implemented too.",
            "created_at": "2021-08-06T04:28:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-893992227",
            "id": 893992227,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41ST0j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/893992227/reactions"
            },
            "updated_at": "2021-08-06T05:38:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/893992227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I like the concept but this particular approach is going to generate a lot of proxy objects, which really aren't necessary nor what we want the end result to be (i e access to _real_ modules). Instead what plugins should do is to add a metatable to the table *containing* these lazy modules. I e if `mymod` want to expose `submod` lazily then mymod (the real one) should have a metatable that returns `require'mymod.submod'` upon `__index` access, which is what e.g. `vim.treesitter` is doing already.\r\n\r\nWe could define a utility function for the latter, perhaps something like `vim.autoload_submodules(mymod, 'mymod', {'submod1', 'submodB'})` (which can also be used for `vim.lua` itself).",
            "created_at": "2021-08-06T15:05:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894324232",
            "id": 894324232,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41Tk4I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894324232/reactions"
            },
            "updated_at": "2021-08-06T15:07:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894324232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "How would that work for modules that shouldn't be exposed? Consider a contrived example:\r\n\r\n```lua\r\nlocal submod1 = require(\"mod.submod1\")\r\nlocal submod2 = require(\"mod.submod2\")\r\n\r\nlocal M = {}\r\n\r\nfunction M.setup(opts)\r\n    -- Set user options\r\n    M.opts = opts\r\nend\r\n\r\nfunction M.do_something(args)\r\n    if M.opts.foo then\r\n        submod1.foo()\r\n    else\r\n        submod2.bar()\r\n    end\r\nend\r\n\r\nreturn M\r\n```\r\n\r\n`submod1` and `submod2` are used in this module, but not exposed as part of `M`. Unless I'm misunderstanding your suggestion, the `autoload_submodules` approach would look like this:\r\n\r\n```lua\r\nlocal M = {}\r\n\r\nfunction M.setup(opts)\r\n    -- Set user options\r\n    M.opts = opts\r\nend\r\n\r\nfunction M.do_something(args)\r\n    if M.opts.foo then\r\n        M.submod1.foo()\r\n    else\r\n        M.submod2.bar()\r\n    end\r\nend\r\n\r\nreturn vim.autoload_submodules(M, \"mod\", {\"submod1\", \"submod2\"})\r\n```\r\n\r\nNow `submod1` and `submod2` are exposed as part of the module. This may not always be desirable though, as often people want \"private\" modules.",
            "created_at": "2021-08-06T15:55:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894354788",
            "id": 894354788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41TsVk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894354788/reactions"
            },
            "updated_at": "2021-08-06T15:55:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894354788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For that case, why not just use `require'myplugin.mymod'` at the callsite?",
            "created_at": "2021-08-06T16:46:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894383945",
            "id": 894383945,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41TzdJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894383945/reactions"
            },
            "updated_at": "2021-08-06T16:46:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894383945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> For that case, why not just use `require'myplugin.mymod'` at the callsite?\r\n\r\nThat works, but plugin authors aren't doing this, presumably because it's easier to alias the module to something simple like `mymod` than to use `require(\"myplugin.mymod\")` every time.",
            "created_at": "2021-08-06T17:03:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894392717",
            "id": 894392717,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41T1mN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894392717/reactions"
            },
            "updated_at": "2021-08-06T17:03:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894392717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I just responded to the specific example that you provided, where the situation is the precisely the opposite (direct require is _both_ the fastest and shortest code) . As Lua is a lexically scoped language, in a more complex example there are *a lot* of places you can meaningfully place a `local submod2 = require(\"mod.submod2\")` other than at either top level or callsite, such at function or object construction level. In general the point is: if writers are picking the wrong option between existing choices we need better documentation for picking the right choice, in addition to adding more options specifically for the cases that aren't covered.",
            "created_at": "2021-08-06T17:35:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894411838",
            "id": 894411838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41T6Q-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894411838/reactions"
            },
            "updated_at": "2021-08-06T17:35:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894411838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In general the point is: if writers are picking the wrong option between existing choices we need better documentation for picking the right choice, in addition to adding more options specifically for the cases that aren't covered.\r\n\r\nI don't think this is an issue of lack of documentation. I think authors are aware (at least to some extent) that requiring modules at the top-level introduces unnecessary startup costs, but they do it because it's easiest and what's familiar (placing `require` statements at the top level is reminiscent of `import` statements in Python or Typescript or `#include`s in C). We can make doing the right thing easy by introducing tooling into the Neovim standard library that still allows authors to make top-level declarations, but without paying the startup costs. It's a win for everyone: authors get to continue to write code that feels idiomatic while users don't pay for what they're not using.\r\n\r\nWe can do this in parallel with communicating to authors that they don't need something like `vim.autoload` if they simply defer their `require` statements until actually needed. And we can also provide `autoload_submodules` to solve the cases that aren't already covered, as you said.\r\n\r\n",
            "created_at": "2021-08-06T20:59:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894515006",
            "id": 894515006,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41UTc-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894515006/reactions"
            },
            "updated_at": "2021-08-06T20:59:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894515006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  I think authors are aware (at least to some extent) that requiring modules at the top-level introduces unnecessary startup costs, but they do it because it's easiest and what's familiar (placing require statements at the top level is reminiscent of import statements in Python or Typescript or #includes in C)\r\n\r\nSure, but if they do know they also do it because they know in many cases top-level imports are perfectly fine. if you just use private sub-modules for code organization, I doubt parsing of the sub-modules specifically incurs a large overhead compared to the cost of actually running the code of the plugin, even at startup. Or at least, I would like to see some profiling for this before we recommend an extra layer of indirection as a general solution. (profiilng of lua require imports is something I've planned to work on :)",
            "created_at": "2021-08-07T08:25:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894624227",
            "id": 894624227,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41UuHj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894624227/reactions"
            },
            "updated_at": "2021-08-07T08:25:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894624227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (profiilng of lua require imports is something I've planned to work on :)\r\n\r\nAs a first step, wrapping the root `require` in\r\n```lua\r\nrequire'plenary.profile'.start('profile.log', {flame=true})\r\n...\r\nrequire'plenary.profile'.stop()\r\n```\r\nworks fairly well (if you have LuaJIT and, e.g., https://github.com/jonhoo/inferno -- if you want a flat text log, omit the `flame` option).",
            "created_at": "2021-08-07T08:30:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894624663",
            "id": 894624663,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41UuOX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894624663/reactions"
            },
            "updated_at": "2021-08-07T08:30:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894624663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure, but was thinking of adding explicit timing in our runtime loader https://github.com/neovim/neovim/blob/a1cc146405cb0d97241d7bbaaa8c731ac664c035/src/nvim/lua/vim.lua#L56 where we directly control the parsing and execution of required modules (easy) and later also integrate into the `--startuptime` hierarchy (more involved).",
            "created_at": "2021-08-07T08:48:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894626369",
            "id": 894626369,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41UupB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894626369/reactions"
            },
            "updated_at": "2021-08-07T08:48:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894626369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(which, incidentally, is the function that usually takes the most space in flamegraphs for startup profiling ;))",
            "created_at": "2021-08-07T08:50:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894626619",
            "id": 894626619,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41Uus7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894626619/reactions"
            },
            "updated_at": "2021-08-07T08:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894626619",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm I don't get that function at all in inferno flamegraph for my new config. With some very crude hacks into profile.c I get some numbers which are ca 17% for parsing (and dlopen-ing)  but 20% just for searching the luapath (but ca 10% profiling overhead so those numbers could be quite off, will open PR once this is resolved). maybe we want to cache the toplevel contents of `lua/` dirs in runtime during startup to avoid smashing the same syscalls over and over again.",
            "created_at": "2021-08-07T16:09:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894673640",
            "id": 894673640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41U6Lo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894673640/reactions"
            },
            "updated_at": "2021-08-07T16:09:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894673640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is what I get when profiling the call to `require'gitsigns'.setup(...)` in my config:\r\n[prof.log](https://github.com/neovim/neovim/files/6949386/prof.log)\r\n(can't upload an `svg` file so you'll have to run `inferno` yourself, sorry!)\r\n\r\nOf course, this is a sampling profiler so your numbers are likely more correct anyway. Adding some caching sounds like a good idea in any case.",
            "created_at": "2021-08-07T16:19:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-894674773",
            "id": 894674773,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41U6dV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894674773/reactions"
            },
            "updated_at": "2021-08-07T16:19:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894674773",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm going to close this for now since it sounds like we don't want to prematurely add anything to the stdlib until we get to the Lua profiling.",
            "created_at": "2021-08-18T21:30:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-901443105",
            "id": 901443105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41uu4h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901443105/reactions"
            },
            "updated_at": "2021-08-18T21:30:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901443105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> maybe we want to cache the toplevel contents of `lua/` dirs in runtime during startup to avoid smashing the same syscalls over and over again\r\n\r\nRelated: https://github.com/neovim/neovim/issues/8092\r\n\r\nThough, doesn't `require(...)` already do some implicit caching? \r\n\r\n> Contrast this to the autoload function concept of VimL, where functions are not even loaded until called.\r\n> \r\n> Add a similar feature to the Neovim Lua stdlib that uses some metatable trickery to defer actually requiring the module until it's actually accessed. Our example above would become\r\n> \r\n> ```lua\r\n> local foo = vim.autoload(\"foo\")\r\n> local bar = vim.autoload(\"bar\")\r\n> ```\r\n\r\n`autoload()` as a function name seems potentially confusing, it sounds like it is actively loading (it does not exist as a function in Vimscript either). Maybe `lazy()` is better?",
            "created_at": "2021-08-18T23:25:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-901494328",
            "id": 901494328,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41u7Y4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901494328/reactions"
            },
            "updated_at": "2021-08-18T23:29:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901494328",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk the only thing `require` caches are specific already loaded module objects. This is about the paths of yet unloaded modules (especially submodules for codebasey plugins)",
            "created_at": "2021-08-19T08:31:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-901718489",
            "id": 901718489,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41vyHZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901718489/reactions"
            },
            "updated_at": "2021-08-19T08:31:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901718489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This little snippet I added to my init.lua seems to improve things.\r\n\r\n```lua\r\nlocal luadirs = vim.api.nvim_get_runtime_file('lua/', true)\r\n\r\nfor i = 1, #luadirs do\r\n  luadirs[i] = luadirs[i]:sub(1, -6)\r\nend\r\n\r\nlocal luartp = table.concat(luadirs, ',')\r\n\r\nlocal function load_package(name)\r\n  local orig_rtp = vim.o.rtp\r\n  vim.api.nvim_set_option('rtp', luartp)\r\n  local found = vim._load_package(name)\r\n  vim.api.nvim_set_option('rtp', orig_rtp)\r\n  return found\r\nend\r\n\r\ntable.insert(package.loaders, 1, load_package)\r\n```\r\n\r\nIt basically just reduces `rtp` to just directories which contain a `lua` dir and restores `rtp` when done.\r\n\r\n* Top without snippet\r\n* Bottom with snippet\r\n\r\n![Screenshot 2021-08-19 at 13 14 03](https://user-images.githubusercontent.com/7904185/130066543-b6a225af-3d1c-4059-ad13-d5ad699027f8.png)\r\n\r\n\r\n",
            "created_at": "2021-08-19T12:15:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-901865677",
            "id": 901865677,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41wWDN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901865677/reactions"
            },
            "updated_at": "2021-08-19T12:15:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901865677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@lewis6991  cool, because that is one thing I intend to make `nvim_buf_get_runtime_file` to do by itself :]",
            "created_at": "2021-08-19T12:18:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-901867171",
            "id": 901867171,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41wWaj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901867171/reactions"
            },
            "updated_at": "2021-08-19T12:18:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901867171",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looking at how `nvim_get_runtime_file` is implemented, it turns out it eventually just calls a shell function in `os_expand_wildcards` which seems like an odd way of doing it.\r\n\r\nCouldn't we reimplement that function using `scandir` or something?",
            "created_at": "2021-08-19T12:33:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-901876741",
            "id": 901876741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41wYwF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901876741/reactions"
            },
            "updated_at": "2021-08-19T12:33:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901876741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "sure, but if the end results is gonna be syscalls I still would add some caching on top of that.",
            "created_at": "2021-08-19T12:35:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/15282#issuecomment-901878116",
            "id": 901878116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
            "node_id": "IC_kwDOAPphoM41wZFk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901878116/reactions"
            },
            "updated_at": "2021-08-19T12:35:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901878116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15282/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/15282/commits",
    "created_at": "2021-08-05T23:13:07Z",
    "diff_url": "https://github.com/neovim/neovim/pull/15282.diff",
    "draft": true,
    "head": {
        "label": "gpanders:lua-autoload",
        "ref": "lua-autoload",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2023-12-28T14:34:45Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 238861,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a2370bb9c6a024749d97110c1ce96576ed112cf9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/15282",
    "id": 705079777,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15282",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "For PRs that propose significant changes to some part of the architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e9765fcd6b0c7cf0d86de3456c1abd2326246372",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzA1MDc5Nzc3",
    "number": 15282,
    "patch_url": "https://github.com/neovim/neovim/pull/15282.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/15282/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a2370bb9c6a024749d97110c1ce96576ed112cf9",
    "title": "feat(lua): add vim.autoload",
    "updated_at": "2023-12-27T17:06:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/15282",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}