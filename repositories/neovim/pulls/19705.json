{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/19705/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/19705/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/19705"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/19705"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/19705/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/39d7390cb52845d023ddf29c13d076a34b5209d2"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5066,
            "forks_count": 5066,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1721,
            "open_issues_count": 1721,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-19T00:15:23Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 246400,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71892,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-19T01:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71892,
            "watchers_count": 71892,
            "web_commit_signoff_required": false
        },
        "sha": "1ffd527c837fb2465c9659273bbe5447a1352db2",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Currently, the sign implementations in diagnostic.lua use vim.fn.sign_place and sign_unplace, leading to some strange behavior when trying to control them on a finer level for some features we were discussing in zbirenbaum/neodim#4. I have implemented the basic functionality with extmarks in this PR. \r\n\r\nThis is not quite ready to be merged, as there is some cleanup required for the old code which did things that the extmark api now renders unnecessary. I wanted to submit this for review in case there was some reason that this had not already been done before taking the time and effort to make the edits for cleanup.",
    "closed_at": "2023-12-17T12:44:39Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r942949665"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/942949665"
                }
            },
            "author_association": "MEMBER",
            "body": "`sign_text` is a new option, so be sure to document it.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-10T22:16:19Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r942949665",
            "id": 942949665,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44NEUh",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 906,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1068992424,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/942949665/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-10T22:18:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/942949665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r942949809"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/942949809"
                }
            },
            "author_association": "MEMBER",
            "body": "Why the `pcall`?",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-10T22:16:33Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      }\n+      pcall(vim.api.nvim_buf_set_extmark, bufnr, sign_ns, lnum, col, sign_opts)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r942949809",
            "id": 942949809,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44NEWx",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 912,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1068992424,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/942949809/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-10T22:18:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/942949809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r942993930"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/942993930"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I believe the docs are generated from the comments in the source via Doxygen correct? Is there a formatter for the comments?\r\n\r\nAlso, I think it would be better to change sign_text to a function `M.resolve_sign` which takes a diagnostic as its parameter, is public, and can be configured `via vim.diagnostic.config`, similar to what is implemented for the formatting of the virtual_text handler to allow for more advanced configurations.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-10T23:28:56Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r942993930",
            "id": 942993930,
            "in_reply_to_id": 942949665,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44NPIK",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 906,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069047863,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/942993930/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-10T23:28:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/942993930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r942996397"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/942996397"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It is probably unnecessary, but I was occasionally getting an error from column index. I suppose I could just set col to be 0 since the location in the line of the diagnostic is somewhat irrelevant for a sign, or turn off strict, but I think the index error is indicative of a different issue.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-10T23:31:47Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      }\n+      pcall(vim.api.nvim_buf_set_extmark, bufnr, sign_ns, lnum, col, sign_opts)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r942996397",
            "id": 942996397,
            "in_reply_to_id": 942949809,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44NPut",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 912,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069050625,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/942996397/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-10T23:32:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/942996397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943173288"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943173288"
                }
            },
            "author_association": "MEMBER",
            "body": "Probably want to give this a name, too.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T07:26:11Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943173288",
            "id": 943173288,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44N66o",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 899,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069279928,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943173288/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T07:26:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943173288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943173849"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943173849"
                }
            },
            "author_association": "MEMBER",
            "body": "Definitely don't want a `pcall` here. If something can fail, we need to guard against it explicitly.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T07:26:56Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      }\n+      pcall(vim.api.nvim_buf_set_extmark, bufnr, sign_ns, lnum, col, sign_opts)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943173849",
            "id": 943173849,
            "in_reply_to_id": 942949809,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44N7DZ",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 912,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069280744,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943173849/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T07:26:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943173849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943443993"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943443993"
                }
            },
            "author_association": "MEMBER",
            "body": "Note that according to the documentation, `priority` for extmarks only applies to the highlight group, so this may not work as intended here.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T12:47:50Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943443993",
            "id": 943443993,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44O9AZ",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 917,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069659050,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943443993/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T12:47:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943443993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943450294"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943450294"
                }
            },
            "author_association": "MEMBER",
            "body": "@lewis6991 ",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T12:54:14Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943450294",
            "id": 943450294,
            "in_reply_to_id": 943443993,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44O-i2",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 917,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069668054,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943450294/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T12:54:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943450294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943451846"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943451846"
                }
            },
            "author_association": "MEMBER",
            "body": "I think the docs are wrong. The priority should behave exactly as it does for vim-signs.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T12:55:48Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943451846",
            "id": 943451846,
            "in_reply_to_id": 943443993,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44O-7G",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 917,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069670308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943451846/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T12:55:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943451846",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943454110"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943454110"
                }
            },
            "author_association": "MEMBER",
            "body": "Here is the usage:\r\n\r\nhttps://github.com/neovim/neovim/blob/6669fc94ae76399a619a350b5d2fc9421e575a81/src/nvim/decoration.c#L386-L392",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T12:58:01Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943454110",
            "id": 943454110,
            "in_reply_to_id": 943443993,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44O_ee",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 917,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069673530,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943454110/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T12:58:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943454110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943483955"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943483955"
                }
            },
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/issues/19716\r\n",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T13:26:59Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943483955",
            "id": 943483955,
            "in_reply_to_id": 943443993,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44PGwz",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 917,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1069716888,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943483955/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T13:26:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943483955",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943682502"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943682502"
                }
            },
            "author_association": "MEMBER",
            "body": "fixed in #19718, so please rebase on master",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T16:27:34Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943682502",
            "id": 943682502,
            "in_reply_to_id": 943443993,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44P3PG",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 917,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1070002274,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943682502/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T16:27:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943682502",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943823274"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943823274"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Definitely don't want a `pcall` here. If something can fail, we need to guard against it explicitly.\r\n\r\nI did some testing and the error occurs when a line is deleted. For example if there is an error on line 10, and I delete line 10, with `dd` from normal mode, it will throw a col outside range error. This is just an issue with extmarks in general I think, and I'm not sure how to guard against it explicitly without just setting the column to 0 (as opposed to the starting point of the actual diagnostic) or setting strict to off (which is functionally the same as a pcall in this scenario)",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T18:53:47Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      }\n+      pcall(vim.api.nvim_buf_set_extmark, bufnr, sign_ns, lnum, col, sign_opts)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943823274",
            "id": 943823274,
            "in_reply_to_id": 942949809,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44QZmq",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 912,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1070202448,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943823274/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T18:53:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943823274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943826516"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943826516"
                }
            },
            "author_association": "MEMBER",
            "body": "My vote would be on `col=0` then, as signs don't care about columns.\r\n\r\n(Strict is not equivalent to pcall, either semantically or functionally.)",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T18:57:48Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      }\n+      pcall(vim.api.nvim_buf_set_extmark, bufnr, sign_ns, lnum, col, sign_opts)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943826516",
            "id": 943826516,
            "in_reply_to_id": 942949809,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44QaZU",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 912,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1070207007,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943826516/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T18:57:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943826516",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r943880907"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/943880907"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> My vote would be on `col=0` then, as signs don't care about columns.\r\n> \r\n> (Strict is not equivalent to pcall, either semantically or functionally.)\r\n\r\nI phrased that very poorly, I just meant that the error it avoids is the same one I used pcall to ignore, but since other errors would be suppressed by pcall that would not be by strict, I agree that it is functionally different.\r\n\r\nI also think col being 0 is the best choice here though.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-11T20:00:20Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)\n+      local sign_opts = {\n+        sign_text = sign_text,\n+        sign_hl_group = sign_highlight_map[diagnostic.severity],\n         priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      }\n+      pcall(vim.api.nvim_buf_set_extmark, bufnr, sign_ns, lnum, col, sign_opts)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r943880907",
            "id": 943880907,
            "in_reply_to_id": 942949809,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44QnrL",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 912,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1070285875,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943880907/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-11T20:00:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/943880907",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r945119506"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/945119506"
                }
            },
            "author_association": "MEMBER",
            "body": "Adding a `format` key for the `signs` option would be useful (but can be done in a followup PR). One particular use case would be to always only show a single sign even when multiple sign columns are used (e.g., one for gitsigns and one for diagnostic signs).",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-13T09:40:52Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r945119506",
            "id": 945119506,
            "in_reply_to_id": 942949665,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44VWES",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 906,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1071936247,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945119506/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-13T09:40:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945119506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r945186459"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186459"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done in latest commit",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-13T20:25:00Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r945186459",
            "id": 945186459,
            "in_reply_to_id": 943173288,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44Vmab",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 899,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1071994843,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186459/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-13T20:25:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186459",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r945186946"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186946"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Adding a `format` key for the `signs` option would be useful (but can be done in a followup PR). One particular use case would be to always only show a single sign even when multiple sign columns are used (e.g., one for gitsigns and one for diagnostic signs).\r\n\r\nMy experience has been that vim signs always take precedence over extmark signs (which is the bug that made me want to write this PR). I usually just have one sign appear, giving priority to diagnostics over gitsigns, but with these changes gitsigns has to use the extmark api. Gitsigns does have a config option for this, and everything seems to work smoothly when I set it, but it's a borderline breaking change since behavior will be really different for most people unless the author of gitsigns can change the defaults whenever this is merged.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-13T20:30:20Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r945186946",
            "id": 945186946,
            "in_reply_to_id": 942949665,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44VmiC",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 906,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1071995148,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186946/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-13T20:30:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r945186996"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186996"
                }
            },
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/19737",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-13T20:31:12Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r945186996",
            "id": 945186996,
            "in_reply_to_id": 942949665,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44Vmi0",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 906,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1071995196,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186996/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-13T20:31:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945186996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r945187045"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187045"
                }
            },
            "author_association": "MEMBER",
            "body": "(and the priority issue is fixed on master)",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-13T20:31:45Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r945187045",
            "id": 945187045,
            "in_reply_to_id": 942949665,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44Vmjl",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 906,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1071995225,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187045/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-13T20:31:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r945187524"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187524"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> (and the priority issue is fixed on master)\r\n\r\nWas that today? I ran into that issue while working 30 minutes ago and my branch was built from source yesterday I think. I\r\n\r\n> (and the priority issue is fixed on master)\r\n\r\nOh that's perfect, I think that got pushed literally the day I opened this PR, that's some insane timing. I just rebased onto master so hopefully issue will be gone now.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-13T20:38:28Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r945187524",
            "id": 945187524,
            "in_reply_to_id": 942949665,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44VmrE",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 906,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1071995558,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187524/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-13T20:38:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r945187656"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187656"
                }
            },
            "author_association": "MEMBER",
            "body": "Not a coincidence (see the other comment thread below).",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-13T20:39:32Z",
            "diff_hunk": "@@ -895,22 +895,30 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace('')\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local col = diagnostic.col\n+      local sign_text = opts.sign_text and opts.sign_text[diagnostic.severity] or M.severity[diagnostic.severity]:sub(1,1)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r945187656",
            "id": 945187656,
            "in_reply_to_id": 942949665,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44VmtI",
            "original_commit_id": "69cdd8fc8328e78bc8506de3f2592f8afcc42669",
            "original_line": 906,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1071995618,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187656/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-13T20:39:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/945187656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r951961441"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/951961441"
                }
            },
            "author_association": "MEMBER",
            "body": "If the `filter` function can modify the diagnostics then they should be copied first (so that they remain immutable).\r\n\r\n```suggestion\r\n    if opts.signs and opts.signs.filter then\r\n      diagnostics = vim.tbl_map(opts.signs.filter, vim.deepcopy(diagnostics))\r\n    end\r\n```",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-22T22:18:24Z",
            "diff_hunk": "@@ -869,12 +873,14 @@ M.handlers.signs = {\n     bufnr = get_bufnr(bufnr)\n     opts = opts or {}\n \n+    if opts.filter then\n+      diagnostics = vim.tbl_map(opts.filter, diagnostics)\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r951961441",
            "id": 951961441,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44vcdh",
            "original_commit_id": "727802c3836bed2beb0b16bcd446ce96b02a6015",
            "original_line": 878,
            "original_position": 79,
            "original_start_line": 876,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1081218997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951961441/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-08-22T22:29:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951961441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r951963333"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/951963333"
                }
            },
            "author_association": "MEMBER",
            "body": "This check seems a bit over-defensive. We can trust that `sign_getdefined` will return a list (non-nil) and we also can trust that each table entry in the list will have its values populated.\r\n\r\n```suggestion\r\n  if sign[1] then\r\n    return sign[1].text\r\n  end\r\n```",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-22T22:20:34Z",
            "diff_hunk": "@@ -853,6 +850,13 @@ function M.goto_next(opts)\n   return diagnostic_move_pos(opts, M.get_next_pos(opts))\n end\n \n+local get_fallback_sign = function (severity)\n+  local sign = vim.fn.sign_getdefined(sign_highlight_map[severity])\n+  if sign and sign[1] and not vim.tbl_isempty(sign[1]) then\n+    return sign[1].text\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r951963333",
            "id": 951963333,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44vc7F",
            "original_commit_id": "727802c3836bed2beb0b16bcd446ce96b02a6015",
            "original_line": 873,
            "original_position": 67,
            "original_start_line": 855,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1081218997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951963333/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-08-22T22:29:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951963333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r951964018"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/951964018"
                }
            },
            "author_association": "MEMBER",
            "body": "Minor nit but I think we prefer the `local function` syntax, at least in this file. The `---@private` annotation is needed to prevent documentation generation for this function.\r\n\r\n```suggestion\r\n---@private\r\nlocal function get_fallback_sign(severity)\r\n```",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-22T22:21:48Z",
            "diff_hunk": "@@ -853,6 +850,13 @@ function M.goto_next(opts)\n   return diagnostic_move_pos(opts, M.get_next_pos(opts))\n end\n \n+local get_fallback_sign = function (severity)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r951964018",
            "id": 951964018,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44vdFy",
            "original_commit_id": "727802c3836bed2beb0b16bcd446ce96b02a6015",
            "original_line": 853,
            "original_position": 63,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1081218997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951964018/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-22T22:29:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951964018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r951966178"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/951966178"
                }
            },
            "author_association": "MEMBER",
            "body": "I know @clason suggested using a name for `sign_ns`, which I have no objection to. But to remain consistent we should do the same for the `virt_text_ns` and `underline_ns` namespaces (which are currently anonymous).",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-22T22:25:29Z",
            "diff_hunk": "@@ -895,22 +901,31 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      local sign_ns = string.format('vim.diagnostic.%s', ns.name)\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace(sign_ns)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r951966178",
            "id": 951966178,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44vdni",
            "original_commit_id": "727802c3836bed2beb0b16bcd446ce96b02a6015",
            "original_line": 906,
            "original_position": 98,
            "original_start_line": 905,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1081218997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951966178/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-08-22T22:29:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951966178",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r951967056"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/951967056"
                }
            },
            "author_association": "MEMBER",
            "body": "The diagnostic object has no `sign_text` field. If you want to allow users to attach `sign_text` as an arbitrary value it should be in the `user_data` table (which is designed for this purpose).\r\n\r\nAlso be sure to index into `opts.signs` for signs-specific options.\r\n\r\n```suggestion\r\n      local sign_text = diagnostic.user_data.sign_text or (opts.signs and opts.signs.sign_text and opts.signs.sign_text[diagnostic.severity])\r\n```\r\n\r\nYou may want to split this up into a proper `if` statement...",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-22T22:27:07Z",
            "diff_hunk": "@@ -895,22 +901,31 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      local sign_ns = string.format('vim.diagnostic.%s', ns.name)\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace(sign_ns)\n     end\n \n-    local sign_group = ns.user_data.sign_group\n+    local sign_ns = ns.user_data.sign_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n+      local lnum = diagnostic.lnum\n+      local sign_text = diagnostic.sign_text or opts.sign_text and opts.sign_text[diagnostic.severity]",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r951967056",
            "id": 951967056,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44vd1Q",
            "original_commit_id": "727802c3836bed2beb0b16bcd446ce96b02a6015",
            "original_line": 912,
            "original_position": 106,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1081218997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951967056/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-08-22T22:29:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951967056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r951967689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/951967689"
                }
            },
            "author_association": "MEMBER",
            "body": "Not *strictly* necessary, but I suggest running the `scripts/gen_vimdoc.py` script in the repo to generate the API docs with these updates. This lets us review the documentation changes as part of the PR.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-08-22T22:28:27Z",
            "diff_hunk": "@@ -637,6 +613,27 @@ end\n ---                * priority: (number, default 10) Base priority to use for signs. When\n ---                {severity_sort} is used, the priority of a sign is adjusted based on\n ---                its severity. Otherwise, all signs use the same priority.\n+---                * sign_text: (table) Table of vim.diagnostic.severity symbol pairs.\n+---                Text values in this table take priority over existing sign definitions\n+---                but will not be prioritized over a sign_text field for an individual\n+---                diagnostic. Individual diagnostic's sign_text can be set within a function\n+---                passed to the filter parameter.\n+---                * filter: (function) A function which will be run prior to determining the signs\n+---                This function takes the diagnostics table as a parameter and can be used to filter\n+---                or otherwise customize how signs will appear. Example\n+---                <pre>\n+---                  function(diagnostic)\n+---                    -- Replace signs for diagnostics relating to <symbol> being unused with 'U'\n+---                    if string.lower(diagnostic.message):find('unused') then\n+---                       diagnostic.sign_text = 'U'\n+---                    end\n+---                    -- do not show signs for any INFO severity diagnostic\n+---                    if diagnostic.severity == vim.diagnostic.severity.INFO then\n+---                      return\n+---                    end\n+---                    return diagnostic\n+---                  end\n+---                </pre>",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r951967689",
            "id": 951967689,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM44vd_J",
            "original_commit_id": "727802c3836bed2beb0b16bcd446ce96b02a6015",
            "original_line": 651,
            "original_position": 55,
            "original_start_line": 616,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1081218997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951967689/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-08-22T22:29:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/951967689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962033404"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962033404"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@zbirenbaum, apologies for sticking my nose in 🙏🏿, one thing I had thought when you first opened this issue that it might mean for anyone trying to restrict the number of signs placed per line, as historically discussed in #15770, this filter could be a nice solution rather than having to completely override the handlers as described in `:h diagnostic-handlers-example` could be completely out of scope, but seems like if there was another function here like\r\n```lua\r\ndiagnostics = opts.signs.filter_all(diagnostics)\r\n```\r\nThen overriding the handlers to determine what diagnostics showed per line wouldn't be necessary. A second function is maybe not a great solution and this could be out of scope, but I wonder if somehow this function could be more like a fold/reduce and that way the user can control what happens e.g.\r\n\r\n```lua\r\ndiagnostics = fold(function(result, current, all_diagnostics)\r\n\t-- do some logic based on all diagnostics\r\n    -- maybe return a value\r\n    table.insert(current)\r\n    return result\r\n    -- maybe skip it\r\n    return result\r\n    -- maybe do some logic based on all diagnostics to determine what to skip or not\r\nend)\r\n```\r\nDefinitely don't know what the best solution is but seemed like a good opportunity for a cleaner/simpler solution than overriding handlers, especially given the issues that resulted in over in your plugin with both you (in your plugin) and I (in my config) overriding the diagnostic handlers",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-02T21:50:29Z",
            "diff_hunk": "@@ -879,7 +893,9 @@ M.handlers.signs = {\n       diagnostics = filter_by_severity(opts.signs.severity, diagnostics)\n     end\n \n-    define_default_signs()\n+    if opts.signs and opts.signs.filter then\n+      diagnostics = vim.tbl_map(opts.signs.filter, diagnostics)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962033404",
            "id": 962033404,
            "line": 897,
            "node_id": "PRRC_kwDOAPphoM45V3b8",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 897,
            "original_position": 89,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 89,
            "pull_request_review_id": 1095379845,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962033404/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-09-02T21:51:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962033404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22454918?v=4",
                "events_url": "https://api.github.com/users/akinsho/events{/privacy}",
                "followers_url": "https://api.github.com/users/akinsho/followers",
                "following_url": "https://api.github.com/users/akinsho/following{/other_user}",
                "gists_url": "https://api.github.com/users/akinsho/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/akinsho",
                "id": 22454918,
                "login": "akinsho",
                "node_id": "MDQ6VXNlcjIyNDU0OTE4",
                "organizations_url": "https://api.github.com/users/akinsho/orgs",
                "received_events_url": "https://api.github.com/users/akinsho/received_events",
                "repos_url": "https://api.github.com/users/akinsho/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/akinsho/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/akinsho/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/akinsho"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962130014"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962130014"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this is a separate issue orthogonal to this refactor(!). It would be better to open a dedicated issue about it.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-03T09:36:01Z",
            "diff_hunk": "@@ -879,7 +893,9 @@ M.handlers.signs = {\n       diagnostics = filter_by_severity(opts.signs.severity, diagnostics)\n     end\n \n-    define_default_signs()\n+    if opts.signs and opts.signs.filter then\n+      diagnostics = vim.tbl_map(opts.signs.filter, diagnostics)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962130014",
            "id": 962130014,
            "in_reply_to_id": 962033404,
            "line": 897,
            "node_id": "PRRC_kwDOAPphoM45WPBe",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 897,
            "original_position": 89,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 89,
            "pull_request_review_id": 1095485216,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962130014/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-09-03T09:36:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962130014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962187940"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962187940"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I heavily considered making a filter taking all diagnostics as a parameter, but the last set of review notes was rather lengthy, and I wanted to prioritize getting things into a decent state before trying to figure out what the best way to do that would be. The issues is mostly consistency, since other handlers currently provide individual diagnostics. Maybe an option in the diagnostic config would be a good way to flag handlers to send the whole list, but I think that may need to be implemented  in another PR as clason said. @akinsho \r\n\r\nIf you open a issue for discussing potential implementations and tag me on it, I'll PR it after we finish up with this one.",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-03T18:14:14Z",
            "diff_hunk": "@@ -879,7 +893,9 @@ M.handlers.signs = {\n       diagnostics = filter_by_severity(opts.signs.severity, diagnostics)\n     end\n \n-    define_default_signs()\n+    if opts.signs and opts.signs.filter then\n+      diagnostics = vim.tbl_map(opts.signs.filter, diagnostics)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962187940",
            "id": 962187940,
            "in_reply_to_id": 962033404,
            "line": 897,
            "node_id": "PRRC_kwDOAPphoM45WdKk",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 897,
            "original_position": 89,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 89,
            "pull_request_review_id": 1095548087,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962187940/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-09-03T18:14:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962187940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962191044"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962191044"
                }
            },
            "author_association": "MEMBER",
            "body": "Let me be very clear here: I strongly prefer this PR to be a pure refactor (as advertised) with zero new features.\r\n\r\nPRs get superlinearly more difficult to review (and merge quickly) as a function of the number of changes they make.\r\n\r\nCan we drop the filter for now and move it to a separate PR?",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-03T18:51:01Z",
            "diff_hunk": "@@ -879,7 +893,9 @@ M.handlers.signs = {\n       diagnostics = filter_by_severity(opts.signs.severity, diagnostics)\n     end\n \n-    define_default_signs()\n+    if opts.signs and opts.signs.filter then\n+      diagnostics = vim.tbl_map(opts.signs.filter, diagnostics)",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962191044",
            "id": 962191044,
            "in_reply_to_id": 962033404,
            "line": 897,
            "node_id": "PRRC_kwDOAPphoM45Wd7E",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 897,
            "original_position": 89,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 89,
            "pull_request_review_id": 1095550580,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962191044/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-09-03T18:51:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962191044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962193815"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962193815"
                }
            },
            "author_association": "MEMBER",
            "body": "`user_data` is a catch-all table, to avoid potential collisions call this `sign_priority`.\r\n\r\n```suggestion\r\n      if diagnostic.user_data.sign_priority then\r\n        priority = diagnostic.user_data.sign_priority\r\n      else\r\n        priority = get_priority(diagnostic.severity)\r\n      end\r\n```",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-03T19:23:06Z",
            "diff_hunk": "@@ -901,22 +917,54 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      local _sign_ns = string.format('vim.diagnostic.%s', ns.name)\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace(_sign_ns)\n+    end\n+\n+    local sign_ns = ns.user_data.sign_ns\n+\n+    local function resolve_sign(diagnostic)\n     end\n \n-    local sign_group = ns.user_data.sign_group\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n-        priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      local sign_text\n+      if diagnostic.user_data.sign_text then\n+        sign_text = diagnostic.user_data.sign_text\n+      elseif opts.sign_text and opts.sign_text[diagnostic.severity] then\n+        sign_text = opts.sign_text[diagnostic.severity]\n+      else\n+        sign_text = get_fallback_sign(diagnostic.severity) or M.severity[diagnostic.severity]:sub(1,1)\n+      end\n+\n+      local sign_hl_group\n+      if diagnostic.user_data.sign_hl_group then\n+        sign_hl_group = diagnostic.user_data.sign_hl_group\n+      else\n+        sign_hl_group = sign_highlight_map[diagnostic.severity]\n+      end\n+\n+      if diagnostic.user_data.priority then\n+        priority = diagnostic.user_data.priority\n+      else\n+        priority = get_priority(diagnostic.severity)\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962193815",
            "id": 962193815,
            "line": 951,
            "node_id": "PRRC_kwDOAPphoM45WemX",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 951,
            "original_position": 136,
            "original_start_line": 947,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 136,
            "pull_request_review_id": 1095552686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962193815/reactions"
            },
            "side": "RIGHT",
            "start_line": 947,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-09-03T19:40:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962193815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962194222"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194222"
                }
            },
            "author_association": "MEMBER",
            "body": "?",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-03T19:28:29Z",
            "diff_hunk": "@@ -901,22 +917,54 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      local _sign_ns = string.format('vim.diagnostic.%s', ns.name)\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace(_sign_ns)\n+    end\n+\n+    local sign_ns = ns.user_data.sign_ns\n+\n+    local function resolve_sign(diagnostic)\n     end",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962194222",
            "id": 962194222,
            "line": 928,
            "node_id": "PRRC_kwDOAPphoM45Wesu",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 928,
            "original_position": 108,
            "original_start_line": 927,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 108,
            "pull_request_review_id": 1095552686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194222/reactions"
            },
            "side": "RIGHT",
            "start_line": 927,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-09-03T19:40:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962194583"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194583"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      elseif vim.tbl_get(opts, 'signs', 'sign_text', diagnostic.severity) then\r\n```",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-03T19:33:20Z",
            "diff_hunk": "@@ -901,22 +917,54 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      local _sign_ns = string.format('vim.diagnostic.%s', ns.name)\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace(_sign_ns)\n+    end\n+\n+    local sign_ns = ns.user_data.sign_ns\n+\n+    local function resolve_sign(diagnostic)\n     end\n \n-    local sign_group = ns.user_data.sign_group\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n-        priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      local sign_text\n+      if diagnostic.user_data.sign_text then\n+        sign_text = diagnostic.user_data.sign_text\n+      elseif opts.sign_text and opts.sign_text[diagnostic.severity] then",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962194583",
            "id": 962194583,
            "line": 934,
            "node_id": "PRRC_kwDOAPphoM45WeyX",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 934,
            "original_position": 119,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 119,
            "pull_request_review_id": 1095552686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194583/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-09-03T19:40:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962194602"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194602"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        sign_text = opts.signs.sign_text[diagnostic.severity]\r\n```",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-03T19:33:28Z",
            "diff_hunk": "@@ -901,22 +917,54 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      local _sign_ns = string.format('vim.diagnostic.%s', ns.name)\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace(_sign_ns)\n+    end\n+\n+    local sign_ns = ns.user_data.sign_ns\n+\n+    local function resolve_sign(diagnostic)\n     end\n \n-    local sign_group = ns.user_data.sign_group\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n-        priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      local sign_text\n+      if diagnostic.user_data.sign_text then\n+        sign_text = diagnostic.user_data.sign_text\n+      elseif opts.sign_text and opts.sign_text[diagnostic.severity] then\n+        sign_text = opts.sign_text[diagnostic.severity]",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962194602",
            "id": 962194602,
            "line": 935,
            "node_id": "PRRC_kwDOAPphoM45Weyq",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 935,
            "original_position": 120,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 120,
            "pull_request_review_id": 1095552686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194602/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-09-03T19:40:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194602",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962194908"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194908"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---                * filter: (function) A function which takes an individual diagnostic as its\r\n---                single argument and optionally returns a diagnostic. It can be used to filter or\r\n---                otherwise customize how signs will appear by setting the \"sign_text\",\r\n---                \"sign_hl_group\", or \"sign_priority\" fields in the diagnostic's \"user_data\" table.\r\n---                If nil is returned, no sign is created for the given diagnostic.\r\n```",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-03T19:37:28Z",
            "diff_hunk": "@@ -643,6 +619,36 @@ end\n ---                * priority: (number, default 10) Base priority to use for signs. When\n ---                {severity_sort} is used, the priority of a sign is adjusted based on\n ---                its severity. Otherwise, all signs use the same priority.\n+---                * sign_text: (table) Table of vim.diagnostic.severity symbol pairs.\n+---                Text values in this table take priority over existing sign definitions\n+---                but will not be prioritized over a sign_text field in the user data of an individual\n+---                diagnostic. Individual diagnostic's sign_text can be set within a function\n+---                passed to the filter parameter.\n+---                * filter: (function) A function which will be run prior to determining the signs\n+---                This function takes an individual diagnostic as a parameter and can be used to filter\n+---                or otherwise customize how signs will appear by setting the sign_text, sign_hl_group or\n+---                priority fields for the diagnostic. If a diagnostic is not returned, no sign will be created",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962194908",
            "id": 962194908,
            "line": 630,
            "node_id": "PRRC_kwDOAPphoM45We3c",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 630,
            "original_position": 43,
            "original_start_line": 627,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 43,
            "pull_request_review_id": 1095552686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194908/reactions"
            },
            "side": "RIGHT",
            "start_line": 627,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-09-03T19:40:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962194908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/19705#discussion_r962764590"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/19705"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/962764590"
                }
            },
            "author_association": "MEMBER",
            "body": "You can use a single assignment style here.\r\n\r\n```suggestion\r\n      local sign_hl_group = diagnostic.user_data.sign_hl_group\r\n                            or sign_highlight_map[diagnostic.severity]\r\n```",
            "commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "created_at": "2022-09-05T10:43:57Z",
            "diff_hunk": "@@ -901,22 +917,54 @@ M.handlers.signs = {\n     end\n \n     local ns = M.get_namespace(namespace)\n-    if not ns.user_data.sign_group then\n-      ns.user_data.sign_group = string.format('vim.diagnostic.%s', ns.name)\n+    if not ns.user_data.sign_ns then\n+      local _sign_ns = string.format('vim.diagnostic.%s', ns.name)\n+      ns.user_data.sign_ns = vim.api.nvim_create_namespace(_sign_ns)\n+    end\n+\n+    local sign_ns = ns.user_data.sign_ns\n+\n+    local function resolve_sign(diagnostic)\n     end\n \n-    local sign_group = ns.user_data.sign_group\n     for _, diagnostic in ipairs(diagnostics) do\n-      vim.fn.sign_place(0, sign_group, sign_highlight_map[diagnostic.severity], bufnr, {\n-        priority = get_priority(diagnostic.severity),\n-        lnum = diagnostic.lnum + 1,\n-      })\n+      local sign_text\n+      if diagnostic.user_data.sign_text then\n+        sign_text = diagnostic.user_data.sign_text\n+      elseif opts.sign_text and opts.sign_text[diagnostic.severity] then\n+        sign_text = opts.sign_text[diagnostic.severity]\n+      else\n+        sign_text = get_fallback_sign(diagnostic.severity) or M.severity[diagnostic.severity]:sub(1,1)\n+      end\n+\n+      local sign_hl_group\n+      if diagnostic.user_data.sign_hl_group then\n+        sign_hl_group = diagnostic.user_data.sign_hl_group\n+      else\n+        sign_hl_group = sign_highlight_map[diagnostic.severity]\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/19705#discussion_r962764590",
            "id": 962764590,
            "line": 945,
            "node_id": "PRRC_kwDOAPphoM45Yp8u",
            "original_commit_id": "39d7390cb52845d023ddf29c13d076a34b5209d2",
            "original_line": 945,
            "original_position": 130,
            "original_start_line": 940,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 130,
            "pull_request_review_id": 1096251638,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962764590/reactions"
            },
            "side": "RIGHT",
            "start_line": 940,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-09-05T10:43:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/962764590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Thanks, this is something that needed to be done so I appreciate the initiative.\r\n> \r\n> I've not used the extmark API for signs personally, do we still need to define the signs with `sign_define` before using them? If not, we can also delete the `define_default_signs` function.\r\n\r\nWe definitely do not need it, and one of the big reasons to move to extmarks would be to replace that with a function configurable from `vim.diagnostic.config` that allows the user to configure what sign to show on a more granular level, similar to the formatting function for virtual_text.",
            "created_at": "2022-08-10T23:35:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1211404687",
            "id": 1211404687,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5INJGP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1211404687/reactions"
            },
            "updated_at": "2022-08-10T23:37:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1211404687",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Do you think it's worth looking up the existing sign definition for backward compatibility?\r\nCurrently users can override the sign definition to customize the display, this will no longer work with the change:\r\n\r\n```\r\nsign define DiagnosticSignError text= texthl= linehl= numhl=ErrorMsg\r\nsign define DiagnosticSignWarn text= texthl= linehl= numhl=WarningMsg\r\nsign define DiagnosticSignInfo text= texthl= linehl= numhl=Underlined\r\nsign define DiagnosticSignHint text= texthl= linehl= numhl=Underlined\r\n```\r\n\r\n",
            "created_at": "2022-08-11T07:06:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1211624105",
            "id": 1211624105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5IN-qp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1211624105/reactions"
            },
            "updated_at": "2022-08-11T07:06:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1211624105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I just had the realization that it would be more computationally efficient to combine the sign handler into the virtualtext handler, since the virtualtext is already using extmarks, and the signs could just be added in the same iteration of diagnostics. \r\n\r\nThis might make things a bit harder to read, so I'm not sure it would be worth it, but wanted to see if anyone had thoughts about this.",
            "created_at": "2022-08-11T18:57:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1212372585",
            "id": 1212372585,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5IQ1Zp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212372585/reactions"
            },
            "updated_at": "2022-08-11T18:57:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212372585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Do you think it's worth looking up the existing sign definition for backward compatibility? Currently users can override the sign definition to customize the display, this will no longer work with the change:\r\n> \r\n> ```\r\n> sign define DiagnosticSignError text= texthl= linehl= numhl=ErrorMsg\r\n> sign define DiagnosticSignWarn text= texthl= linehl= numhl=WarningMsg\r\n> sign define DiagnosticSignInfo text= texthl= linehl= numhl=Underlined\r\n> sign define DiagnosticSignHint text= texthl= linehl= numhl=Underlined\r\n> ```\r\n\r\nThis is pretty easy to implement, but on my local copy I had written that the user could override the symbol map under opts.signs.symbols. The question would be which takes precedence if the user defines the signs under vim.diagnostic.config but a plugin also defines signs with `sign define`",
            "created_at": "2022-08-11T19:13:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1212386258",
            "id": 1212386258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5IQ4vS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212386258/reactions"
            },
            "updated_at": "2022-08-11T19:13:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212386258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> to combine the sign handler into the virtualtext handler, since the virtualtext is already using extmarks, and the signs could just be added in the same iteration of diagnostics.\r\n\r\nWouldn't that also affect the configuration? It should be possible to turn off virtual text but keep signs enabled",
            "created_at": "2022-08-11T19:13:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1212386767",
            "id": 1212386767,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5IQ43P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212386767/reactions"
            },
            "updated_at": "2022-08-11T19:13:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212386767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > to combine the sign handler into the virtualtext handler, since the virtualtext is already using extmarks, and the signs could just be added in the same iteration of diagnostics.\r\n> \r\n> Wouldn't that also affect the configuration? It should be possible to turn off virtual text but keep signs enabled\r\n\r\nNope, something like this placed where the virtual text extmark definition currently is would work (max_severity doesn't exist so this code isn't valid currently, but the idea is sound)\r\n\r\n```\r\nlocal extmark_opts = opts.virtual_text and {\r\n  hl_mode = 'combine',\r\n  virt_text = virt_texts\r\n} or {}\r\n\r\nif opts.signs then\r\n  local diagnostic = max_severity(line_diagnostics)\r\n  local sign_opts = opts.signs and {\r\n    sign_text = sign_text,\r\n    sign_hl_group = sign_highlight_map[diagnostic.severity],\r\n    priority = get_priority(diagnostic.severity),\r\n    strict = false,\r\n  }\r\n  extmark_opts = vim.tbl_extend(\"keep\", extmark_opts, sign_opts)\r\nend\r\n\r\nif virt_texts then\r\n  vim.api.nvim_buf_set_extmark(bufnr, virt_text_ns, line, 0, extmark_opts)\r\nend\r\n```\r\nThis implementation would require some rather significant refactoring in terms of function naming though (and thus be a breaking change), as there would essentially just be one function that places the diagnostic_extmarks and does different behaviors based upon the config. The only thing that would have to be combined is the namespace used between the virtualtext and the signs (which is kinda a big deal and I am not a huge fan of to be honest)\r\n\r\nI came up with some slightly smarter implementations, but none are without their drawbacks, so I think it would be best to just try and iron out the sign implementation as a separate handler here (especially since there's already a number of design choices to make on this PR that may result in breaking changes) and maybe revisit the idea later.",
            "created_at": "2022-08-11T19:42:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1212415337",
            "id": 1212415337,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5IQ_1p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212415337/reactions"
            },
            "updated_at": "2022-08-11T19:46:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212415337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Signs and virtual text handlers should remain separate. They can be individually overridden by users. Someone may wish to replace the virtual text handler and suddenly find that signs no longer work. ",
            "created_at": "2022-08-11T22:11:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1212548102",
            "id": 1212548102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5IRgQG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212548102/reactions"
            },
            "updated_at": "2022-08-11T22:11:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1212548102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think this is ready for review again. I am so sorry for all the review requests sent, didn't realize asking for one cancels another. Usually on the other side of it or working on projects with only 1 reviewer...",
            "created_at": "2022-08-22T20:57:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1223023424",
            "id": 1223023424,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5I5dtA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1223023424/reactions"
            },
            "updated_at": "2022-08-22T20:57:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1223023424",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think I covered everything that came up in the review comments, and I tested all the functions and they seem to be working well. I also ran scripts/gen_vimdoc.py so the documentation can be reviewed as well.",
            "created_at": "2022-09-02T21:08:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1235900521",
            "id": 1235900521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5Jqlhp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1235900521/reactions"
            },
            "updated_at": "2022-09-02T21:08:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1235900521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "API migration was superseded by #26193. If the filter functionality introduced here is still desired, a rebase is necessary.",
            "created_at": "2023-12-13T14:27:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/19705#issuecomment-1854017942",
            "id": 1854017942,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
            "node_id": "IC_kwDOAPphoM5ughGW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854017942/reactions"
            },
            "updated_at": "2023-12-13T14:27:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854017942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/19705/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/19705/commits",
    "created_at": "2022-08-10T21:32:05Z",
    "diff_url": "https://github.com/neovim/neovim/pull/19705.diff",
    "draft": true,
    "head": {
        "label": "zbirenbaum:sign-extmarks",
        "ref": "sign-extmarks",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/zbirenbaum/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/zbirenbaum/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/zbirenbaum/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/zbirenbaum/neovim/branches{/branch}",
            "clone_url": "https://github.com/zbirenbaum/neovim.git",
            "collaborators_url": "https://api.github.com/repos/zbirenbaum/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/zbirenbaum/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/zbirenbaum/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/zbirenbaum/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/zbirenbaum/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/zbirenbaum/neovim/contributors",
            "created_at": "2022-01-03T19:37:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/zbirenbaum/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/zbirenbaum/neovim/downloads",
            "events_url": "https://api.github.com/repos/zbirenbaum/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/zbirenbaum/neovim/forks",
            "full_name": "zbirenbaum/neovim",
            "git_commits_url": "https://api.github.com/repos/zbirenbaum/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/zbirenbaum/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/zbirenbaum/neovim/git/tags{/sha}",
            "git_url": "git://github.com/zbirenbaum/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/zbirenbaum/neovim/hooks",
            "html_url": "https://github.com/zbirenbaum/neovim",
            "id": 444178781,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/zbirenbaum/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/zbirenbaum/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/zbirenbaum/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/zbirenbaum/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/zbirenbaum/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/zbirenbaum/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/zbirenbaum/neovim/merges",
            "milestones_url": "https://api.github.com/repos/zbirenbaum/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGnmhXQ",
            "notifications_url": "https://api.github.com/repos/zbirenbaum/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
                "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
                "followers_url": "https://api.github.com/users/zbirenbaum/followers",
                "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
                "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zbirenbaum",
                "id": 32016110,
                "login": "zbirenbaum",
                "node_id": "MDQ6VXNlcjMyMDE2MTEw",
                "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
                "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
                "repos_url": "https://api.github.com/users/zbirenbaum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zbirenbaum"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/zbirenbaum/neovim/pulls{/number}",
            "pushed_at": "2023-10-05T05:26:55Z",
            "releases_url": "https://api.github.com/repos/zbirenbaum/neovim/releases{/id}",
            "size": 237915,
            "ssh_url": "git@github.com:zbirenbaum/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/zbirenbaum/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/zbirenbaum/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/zbirenbaum/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/zbirenbaum/neovim/subscription",
            "svn_url": "https://github.com/zbirenbaum/neovim",
            "tags_url": "https://api.github.com/repos/zbirenbaum/neovim/tags",
            "teams_url": "https://api.github.com/repos/zbirenbaum/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/zbirenbaum/neovim/git/trees{/sha}",
            "updated_at": "2023-08-01T00:32:11Z",
            "url": "https://api.github.com/repos/zbirenbaum/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "39d7390cb52845d023ddf29c13d076a34b5209d2",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
            "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
            "followers_url": "https://api.github.com/users/zbirenbaum/followers",
            "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
            "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zbirenbaum",
            "id": 32016110,
            "login": "zbirenbaum",
            "node_id": "MDQ6VXNlcjMyMDE2MTEw",
            "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
            "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
            "repos_url": "https://api.github.com/users/zbirenbaum/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zbirenbaum"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/19705",
    "id": 1023226133,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19705",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": "33abc6775a6f69ec1a94a033e0cd0969998f929c",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM48_TEV",
    "number": 19705,
    "patch_url": "https://github.com/neovim/neovim/pull/19705.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/19705/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/39d7390cb52845d023ddf29c13d076a34b5209d2",
    "title": "refactor(diagnostic): migrate diagnostic signs to extmark api",
    "updated_at": "2023-12-17T12:44:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/19705",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32016110?v=4",
        "events_url": "https://api.github.com/users/zbirenbaum/events{/privacy}",
        "followers_url": "https://api.github.com/users/zbirenbaum/followers",
        "following_url": "https://api.github.com/users/zbirenbaum/following{/other_user}",
        "gists_url": "https://api.github.com/users/zbirenbaum/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zbirenbaum",
        "id": 32016110,
        "login": "zbirenbaum",
        "node_id": "MDQ6VXNlcjMyMDE2MTEw",
        "organizations_url": "https://api.github.com/users/zbirenbaum/orgs",
        "received_events_url": "https://api.github.com/users/zbirenbaum/received_events",
        "repos_url": "https://api.github.com/users/zbirenbaum/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zbirenbaum/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zbirenbaum/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zbirenbaum"
    }
}