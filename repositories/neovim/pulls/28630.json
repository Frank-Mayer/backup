{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28630/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28630/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28630"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28630"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28630/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5383,
            "forks_count": 5383,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1728,
            "open_issues_count": 1728,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-20T23:45:59Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 270386,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 77935,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-21T02:01:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 77935,
            "watchers_count": 77935,
            "web_commit_signoff_required": false
        },
        "sha": "48c2ad5d2d79a314502b11c868045d28bc23efab",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "In other words, `gx` works regardless of where it was used in\n`[...](https://...)`. This only works on markdown buffers.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1590816006"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1590816006"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: we could model this as a `get_url` function, which may later find its way into a util module or even the stdlib, which may later be used to enhance the behavior of `<cfile>`.  It also makes the purpose of this function clearer.\r\n\r\n```suggestion\r\n    --- Gets the URL at cursor, if any.\r\n    local function get_url()\r\n```\r\n",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-06T10:27:24Z",
            "diff_hunk": "@@ -107,22 +107,50 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    local function do_open_shotgun()",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1590816006",
            "id": 1590816006,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5e0e0G",
            "original_commit_id": "8cc1769896cf576ecb9e8e65e69e76f8198d7c8c",
            "original_line": 113,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2040451836,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1590816006/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-06T10:30:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1590816006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1590817671"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1590817671"
                }
            },
            "author_association": "MEMBER",
            "body": "if the function is renamed to `get_url`, then this becomes\r\n```suggestion\r\n          return vim.treesitter.get_node_text(current_node, 0)\r\n```\r\n\r\nand the caller calls `do_open(get_url())`.",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-06T10:29:22Z",
            "diff_hunk": "@@ -107,22 +107,50 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    local function do_open_shotgun()\n+      local current_node =\n+        vim.treesitter.get_node { ignore_injections = false, lang = 'markdown_inline' }\n+\n+      while current_node do\n+        local type = current_node:type()\n+        if type == 'link_destination' then\n+          return do_open(vim.treesitter.get_node_text(current_node, 0))",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1590817671",
            "id": 1590817671,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5e0fOH",
            "original_commit_id": "8cc1769896cf576ecb9e8e65e69e76f8198d7c8c",
            "original_line": 120,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2040454948,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1590817671/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-06T10:29:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1590817671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1591199453"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1591199453"
                }
            },
            "author_association": "MEMBER",
            "body": "should it fallback to `vim.fn.expand('<cfile>')` ? or is that implied already?",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-06T15:46:32Z",
            "diff_hunk": "@@ -107,22 +107,51 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    --- Gets the URL at cursor, if any.\n+    local function get_url()\n+      local current_node =\n+        vim.treesitter.get_node { ignore_injections = false, lang = 'markdown_inline' }\n+\n+      while current_node do",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1591199453",
            "id": 1591199453,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5e18bd",
            "original_commit_id": "331d55b6cd688fc2526703989595d9248f788297",
            "original_line": 116,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2041110363,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1591199453/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-06T15:46:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1591199453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1593757555"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593757555"
                }
            },
            "author_association": "MEMBER",
            "body": "It is not implied, but I'm not sure it should fallback. When pressing `gx` on an empty line on master it opens the file explorer of the directory where the file is. This is because of `vim.fn.expand('<cfile>')` resolves to empty string in that case. If this is the intended behavior I can put back `vim.fn.expand('<cfile>')`.",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-08T09:50:48Z",
            "diff_hunk": "@@ -107,22 +107,51 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    --- Gets the URL at cursor, if any.\n+    local function get_url()\n+      local current_node =\n+        vim.treesitter.get_node { ignore_injections = false, lang = 'markdown_inline' }\n+\n+      while current_node do",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1593757555",
            "id": 1593757555,
            "in_reply_to_id": 1591199453,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5e_s9z",
            "original_commit_id": "331d55b6cd688fc2526703989595d9248f788297",
            "original_line": 116,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2045192933,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593757555/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-08T09:50:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593757555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1593826731"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593826731"
                }
            },
            "author_association": "MEMBER",
            "body": "my question is more about what happens if `vim.treesitter.get_node { ignore_injections = false, lang = 'markdown_inline' }` returns nothing? `get_url()` should support all kinds of buffers, not only markdown. so presumably `<cfile>` is a way to do that  ",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-08T10:44:13Z",
            "diff_hunk": "@@ -107,22 +107,51 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    --- Gets the URL at cursor, if any.\n+    local function get_url()\n+      local current_node =\n+        vim.treesitter.get_node { ignore_injections = false, lang = 'markdown_inline' }\n+\n+      while current_node do",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1593826731",
            "id": 1593826731,
            "in_reply_to_id": 1591199453,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5e_92r",
            "original_commit_id": "331d55b6cd688fc2526703989595d9248f788297",
            "original_line": 116,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2045311568,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593826731/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-08T10:44:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593826731",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1593907521"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593907521"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, you're right. I tested it with this pr and it fails for \"normal\" urls. Added `<cfile>` as fallback.",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-08T11:55:03Z",
            "diff_hunk": "@@ -107,22 +107,51 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    --- Gets the URL at cursor, if any.\n+    local function get_url()\n+      local current_node =\n+        vim.treesitter.get_node { ignore_injections = false, lang = 'markdown_inline' }\n+\n+      while current_node do",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1593907521",
            "id": 1593907521,
            "in_reply_to_id": 1591199453,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fARlB",
            "original_commit_id": "331d55b6cd688fc2526703989595d9248f788297",
            "original_line": 116,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2045447796,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593907521/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-08T11:55:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1593907521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1597635378"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597635378"
                }
            },
            "author_association": "MEMBER",
            "body": "You need to make sure the tree is actually parsed before doing this; see `:h vim.treesitter.get_node()`.\r\n\r\n(A running treesitter highlighter (`vim.treesitter.start()`) will do that for you via the callbacks, but otherwise you're on your own.)\r\n\r\nAnd you shouldn't force the language here; set the correct parser (which normally is `markdown`, not `markdown_inline`), otherwise all manner of bad things can happen. \r\n\r\nAnd note that URLs in Markdown have to be... marked up (`<url>`), otherwise they are not valid nodes and won't be recognized by the parsers.\r\n\r\nIn sum, I don't think tree-sitter is the right tool for the job here unless you _know_ that you are dealing with valid markdown (in a markdown file or injected).",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-12T13:12:19Z",
            "diff_hunk": "@@ -107,22 +107,39 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    --- Gets the URL at cursor, if any.\n+    local function get_url()\n+      local current_node = vim.treesitter.get_node { lang = 'markdown_inline' }",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1597635378",
            "id": 1597635378,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fOfsy",
            "original_commit_id": "a57dcc666ae34ba6f8d9f2d77eb2d8fed5576e3d",
            "original_line": 115,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2051376059,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597635378/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-12T13:12:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597635378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1597639668"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597639668"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's get this working on markdown buffers if nothing else.",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-12T13:38:42Z",
            "diff_hunk": "@@ -107,22 +107,39 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    --- Gets the URL at cursor, if any.\n+    local function get_url()\n+      local current_node = vim.treesitter.get_node { lang = 'markdown_inline' }",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1597639668",
            "id": 1597639668,
            "in_reply_to_id": 1597635378,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fOgv0",
            "original_commit_id": "a57dcc666ae34ba6f8d9f2d77eb2d8fed5576e3d",
            "original_line": 115,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2051380293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597639668/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-12T13:38:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597639668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28630#discussion_r1597640336"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28630"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597640336"
                }
            },
            "author_association": "MEMBER",
            "body": "Then call `parser = vim.treesitter.get_parser(bufnr)` followed by `parser:parse(range)` before `get_node()`. Make sure to only call `parse` for the minimal `range` you need (so `get_url` should get the cursor position _first_).",
            "commit_id": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
            "created_at": "2024-05-12T13:41:19Z",
            "diff_hunk": "@@ -107,22 +107,39 @@ do\n           vim.inspect(cmd.cmd)\n         )\n       end\n+      return err\n+    end\n \n-      if err then\n-        vim.notify(err, vim.log.levels.ERROR)\n+    --- Gets the URL at cursor, if any.\n+    local function get_url()\n+      local current_node = vim.treesitter.get_node { lang = 'markdown_inline' }",
            "html_url": "https://github.com/neovim/neovim/pull/28630#discussion_r1597640336",
            "id": 1597640336,
            "in_reply_to_id": 1597635378,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fOg6Q",
            "original_commit_id": "a57dcc666ae34ba6f8d9f2d77eb2d8fed5576e3d",
            "original_line": 115,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 2051380768,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597640336/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-12T13:41:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1597640336",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Since the markdown parser is bundled could we use Tree-sitter for this? The downside is that maybe the grammar changes (affecting the node names) but it seems like this could be easier:\r\n```lua\r\n  local current_node = get_node { ignore_injections = false }\r\n  while current_node do\r\n    local type = current_node:type()\r\n    if type == 'link_destination' then\r\n      return do_open(vim.treesitter.get_node_text(current_node, 0))\r\n    elseif type == 'inline_link' or type == 'image' then\r\n      return do_open(vim.treesitter.get_node_text(current_node:named_child(1), 0))\r\n    elseif type == 'link_text' or type == 'image_description' then\r\n      return do_open(vim.treesitter.get_node_text(current_node:next_named_sibling(), 0))\r\n    end\r\n    current_node = current_node:parent()\r\n  end\r\n```",
            "created_at": "2024-05-03T19:57:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093678023",
            "id": 2093678023,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58yv3H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093678023/reactions"
            },
            "updated_at": "2024-05-03T19:58:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093678023",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Since the markdown parser is bundled could we use Tree-sitter for this?\r\n\r\nI dunno if there's any problems with that, I'll need to ask the ts squad: @neovim/treesitter ",
            "created_at": "2024-05-03T20:01:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093681665",
            "id": 2093681665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58ywwB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093681665/reactions"
            },
            "updated_at": "2024-05-03T20:01:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093681665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ribru17 I get the following warning after the first line:\r\n\r\n```\r\nE5108: Error executing lua: ...dundargoc/programs/neovim/runtime/lua/vim/treesitter.lua:97: There is no parser available for buffer 1 and one could not be created because\r\nlang could not be determined. Either pass lang or set the buffer filetype\r\n```\r\n\r\nI'm guessing there are some setup code needed to get that to work. Thanks for the code anyway, I can investigate how to get it to work if it turns out we can use treesitter for this.",
            "created_at": "2024-05-03T20:16:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093703170",
            "id": 2093703170,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58y2AC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093703170/reactions"
            },
            "updated_at": "2024-05-03T20:50:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093703170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah weird. Maybe instead of `{ignore_injections = false}` it should be `{lang = 'markdown_inline'}`? Either way feel free to disregard if it ends up just making things more complicated :laughing: ",
            "created_at": "2024-05-03T20:21:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093709697",
            "id": 2093709697,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58y3mB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093709697/reactions"
            },
            "updated_at": "2024-05-03T20:50:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093709697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, if the language name is not equal to the filetype (or registered as an alias), you need to specify it explicitly.",
            "created_at": "2024-05-03T20:23:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093711794",
            "id": 2093711794,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58y4Gy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093711794/reactions"
            },
            "updated_at": "2024-05-03T20:50:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093711794",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yes, if the language name is not equal to the filetype (or registered as an alias), you need to specify it explicitly.\r\n\r\nSyntax aside, is relying on the markdown parser acceptable in this case?",
            "created_at": "2024-05-03T20:42:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093735181",
            "id": 2093735181,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58y90N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093735181/reactions"
            },
            "updated_at": "2024-05-03T20:42:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093735181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What is the benefit in using the Markdown parser? This seems easy enough to parse manually.",
            "created_at": "2024-05-03T20:44:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093737690",
            "id": 2093737690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58y-ba",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093737690/reactions"
            },
            "updated_at": "2024-05-03T20:45:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093737690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@lewis6991 No real reason if it is easy enough to parse manually; that said I do think the code looks a bit simpler (and using the parser would handle cases with escaped `\\)` or `\\]` that I think needs to be handled specially and might not work with the current manual code (not 100% sure about this))",
            "created_at": "2024-05-03T20:48:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093743158",
            "id": 2093743158,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58y_w2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093743158/reactions"
            },
            "updated_at": "2024-05-03T20:49:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093743158",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Also the inline parser is pretty flat so traversing up nodes like that (only needed when there is e.g. an emphasis node inside the link text node) won't be too expensive",
            "created_at": "2024-05-03T20:50:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093744477",
            "id": 2093744477,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58zAFd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093744477/reactions"
            },
            "updated_at": "2024-05-03T20:50:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093744477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I tried the treesitter suggestion (with some adjustments to get rid of type warnings). It works as expected. I suspect this might be more robust than my initial PR. Thanks for the suggestion.\r\n\r\nI will leave this up for a bit to see if there are more input on this.",
            "created_at": "2024-05-03T21:17:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2093776410",
            "id": 2093776410,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM58zH4a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093776410/reactions"
            },
            "updated_at": "2024-05-03T21:17:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2093776410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ribru17 is there a reason to not simplify your code snippet to the following?\r\n\r\n```lua\r\nlocal current_node =\r\n  vim.treesitter.get_node { ignore_injections = false, lang = 'markdown_inline' }\r\nwhile current_node do\r\n  local type = current_node:type()\r\n  if type == 'inline_link' or type == 'image' then\r\n    local child = assert(current_node:named_child(1))\r\n    return vim.treesitter.get_node_text(child, 0)\r\n  end\r\n  current_node = current_node:parent()\r\nend\r\n```\r\n\r\nSince we're doing node traversal anyway and all markdown links are wrapped inside of a `inline_link` then this seems simpler. I still wanted to ask in case I missed an edge case or if it was done for performance reasons.",
            "created_at": "2024-05-08T12:23:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2100457561",
            "id": 2100457561,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM59MnBZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100457561/reactions"
            },
            "updated_at": "2024-05-08T12:23:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100457561",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Oh nice! Yeah great point that is better I think. Also I could be wrong but I think that `ignore_injections = false` is superfluous if we specify `lang = 'markdown_inline'`?\r\n\r\nEdit: Also should this code check first if the user is in a markdown buffer? I think if this is run on another filetype it will still try to parse it and then potentially return back some nonsense nodes (if there happens to be text that the inline parser can process). E.g. I tried running this on `CMakeLists.txt` and it sometimes thought I was in a shortcut link, if there was a string like `[[ ... ]]`",
            "created_at": "2024-05-08T16:04:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2100914687",
            "id": 2100914687,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM59OWn_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100914687/reactions"
            },
            "updated_at": "2024-05-08T16:11:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100914687",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Edit: Also should this code check first if the user is in a markdown buffer? I think if this is run on another filetype it will still try to parse it and then potentially return back some nonsense nodes (if there happens to be text that the inline parser can process). E.g. I tried running this on `CMakeLists.txt` and it sometimes thought I was in a shortcut link, if there was a string like `[[ ... ]]`\r\n\r\nI see what you mean. The parser thinks the text inside `[[ ]]` is a `link_text`. This did cause a problem before when we explicitly matched for `link_text`, but if we only look for `inline_link` like we do now the problem seems to go away.",
            "created_at": "2024-05-08T16:35:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2100970631",
            "id": 2100970631,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM59OkSH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100970631/reactions"
            },
            "updated_at": "2024-05-08T16:35:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100970631",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ah I see; but couldn't it be the case that there happens to be some language using some weird `[...](...)` syntax that will still affect the current version?",
            "created_at": "2024-05-08T16:39:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2100976350",
            "id": 2100976350,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM59Olre",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100976350/reactions"
            },
            "updated_at": "2024-05-08T16:39:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100976350",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Theoretically, yes. But I still wonder if the benefit of always enabling this isn't greater than the potential clash with a language that may or may not exist. I certainly can't come up with any. I don't think this decision is irreversible, if we notice it causes any problems for some filetype we can further evaluate and iterate on this. I'm not dead set on either approach though, so input welcome. @justinmk any thoughts?",
            "created_at": "2024-05-08T16:48:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2100999784",
            "id": 2100999784,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM59OrZo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100999784/reactions"
            },
            "updated_at": "2024-05-08T16:48:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2100999784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Tested locally. It works, but it seems that the parse tree gets \"stale\". If I use `gx` on `[foo bar baz](https://example.com/?a=1&b=2)` then make random edits and try `gx` again, then undo and try again, ... the results are just random.\r\n\r\nPossibly https://github.com/neovim/neovim/pull/28715 is needed, or just need to re-parse. Or maybe we should use `vim.treesitter.get_string_parser()` instead?",
            "created_at": "2024-05-12T11:47:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2106219226",
            "id": 2106219226,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM59ilra",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2106219226/reactions"
            },
            "updated_at": "2024-05-12T12:40:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2106219226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would it be possible to export this as a callable function? Or add a way to hook into it?\r\n\r\nI maintain a [plugin](https://github.com/icholy/lsplinks.nvim) which adds support for LSP document links. It has a [gx](https://github.com/icholy/lsplinks.nvim/blob/0c6d8aee51a6d8a2b999333f3533fe672e957f1e/lua/lsplinks.lua#L158-L163) function which opens the link under the cursor or falls back to the default `<cfile>` behaviour if one doesn't exist.\r\n\r\nIf this change goes in as-is, I no longer have a simple way to fallback to the default.",
            "created_at": "2024-05-18T00:14:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2118515154",
            "id": 2118515154,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM5-RfnS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118515154/reactions"
            },
            "updated_at": "2024-05-18T00:15:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118515154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would it be possible to export this as a callable function? Or add a way to hook into it?\r\n\r\nDo you mean `get_url()` specifically, or the entire\r\n\r\n```lua\r\nfunction()\r\n  local err = do_open(get_url())\r\n  if err then\r\n    vim.notify(err, vim.log.levels.ERROR)\r\n  end\r\nend\r\n```\r\n\r\n?",
            "created_at": "2024-05-18T10:42:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2118771484",
            "id": 2118771484,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM5-SeMc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118771484/reactions"
            },
            "updated_at": "2024-05-18T10:42:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118771484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Either one is fine.",
            "created_at": "2024-05-18T11:17:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2118783932",
            "id": 2118783932,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM5-ShO8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118783932/reactions"
            },
            "updated_at": "2024-05-18T11:17:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118783932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've created module `vim.url` and added the function `_get_url()`. Underscore to mark it private. I don't particularly care where this is added, I just chose something. If someone wants this somewhere else that's fine by me.",
            "created_at": "2024-05-18T13:13:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/28630#issuecomment-2118822517",
            "id": 2118822517,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
            "node_id": "IC_kwDOAPphoM5-Sqp1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118822517/reactions"
            },
            "updated_at": "2024-05-18T13:16:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118822517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28630/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28630/commits",
    "created_at": "2024-05-03T18:34:08Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28630.diff",
    "draft": false,
    "head": {
        "label": "dundargoc:feat/gx",
        "ref": "feat/gx",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dundargoc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dundargoc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dundargoc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dundargoc/neovim/branches{/branch}",
            "clone_url": "https://github.com/dundargoc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dundargoc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dundargoc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dundargoc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dundargoc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dundargoc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dundargoc/neovim/contributors",
            "created_at": "2021-06-20T10:14:48Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dundargoc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dundargoc/neovim/downloads",
            "events_url": "https://api.github.com/repos/dundargoc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dundargoc/neovim/forks",
            "full_name": "dundargoc/neovim",
            "git_commits_url": "https://api.github.com/repos/dundargoc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dundargoc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dundargoc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dundargoc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dundargoc/neovim/hooks",
            "html_url": "https://github.com/dundargoc/neovim",
            "id": 378614899,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dundargoc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dundargoc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dundargoc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dundargoc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dundargoc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/dundargoc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dundargoc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dundargoc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzg2MTQ4OTk=",
            "notifications_url": "https://api.github.com/repos/dundargoc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dundargoc/neovim/pulls{/number}",
            "pushed_at": "2024-05-20T19:35:37Z",
            "releases_url": "https://api.github.com/repos/dundargoc/neovim/releases{/id}",
            "size": 268332,
            "ssh_url": "git@github.com:dundargoc/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/dundargoc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dundargoc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dundargoc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dundargoc/neovim/subscription",
            "svn_url": "https://github.com/dundargoc/neovim",
            "tags_url": "https://api.github.com/repos/dundargoc/neovim/tags",
            "teams_url": "https://api.github.com/repos/dundargoc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dundargoc/neovim/git/trees{/sha}",
            "updated_at": "2024-05-20T16:28:50Z",
            "url": "https://api.github.com/repos/dundargoc/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
            "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
            "followers_url": "https://api.github.com/users/dundargoc/followers",
            "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dundargoc",
            "id": 33953936,
            "login": "dundargoc",
            "node_id": "MDQ6VXNlcjMzOTUzOTM2",
            "organizations_url": "https://api.github.com/users/dundargoc/orgs",
            "received_events_url": "https://api.github.com/users/dundargoc/received_events",
            "repos_url": "https://api.github.com/users/dundargoc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dundargoc"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28630",
    "id": 1853923004,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28630",
    "labels": [
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 6664957181,
            "name": "ci:skip-news",
            "node_id": "LA_kwDOAPphoM8AAAABjUMs_Q",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:skip-news"
        }
    ],
    "locked": false,
    "merge_commit_sha": "664d09f08ed39743ec4cf475492be8e12331343b",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 11,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "",
        "due_on": "2024-10-31T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 59,
        "state": "open",
        "title": "0.11",
        "updated_at": "2024-05-19T22:02:51Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM5ugJ68",
    "number": 28630,
    "patch_url": "https://github.com/neovim/neovim/pull/28630.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28630/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2bcf81caeaac1fd854c96ed5e0ac10d806fa95bc",
    "title": "feat: allow gx to function for markdown links",
    "updated_at": "2024-05-18T13:16:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28630",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
        "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/dundargoc/followers",
        "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dundargoc",
        "id": 33953936,
        "login": "dundargoc",
        "node_id": "MDQ6VXNlcjMzOTUzOTM2",
        "organizations_url": "https://api.github.com/users/dundargoc/orgs",
        "received_events_url": "https://api.github.com/users/dundargoc/received_events",
        "repos_url": "https://api.github.com/users/dundargoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dundargoc"
    }
}