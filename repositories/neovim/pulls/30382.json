{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30382/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30382/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30382"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30382"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30382/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5599,
            "forks_count": 5599,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1777,
            "open_issues_count": 1777,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-09-16T10:33:35Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 285944,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 81723,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-09-17T01:51:52Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 81723,
            "watchers_count": 81723,
            "web_commit_signoff_required": false
        },
        "sha": "3b54adc6c6d25dd146fa1eac21321f6bd612f50a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "**Problem:** #30313 introduced a change to `vim.treesitter.get_parser` that would always show a deprecation warning message without giving plugins/users a way to suppress it by updating to the new functionality.\r\n\r\n**Solution:** Introduce `opts.error` to allow plugins/users to explicitly say that they are moving away from the deprecated functionality, thus allowing them to remove the annoying warning. See https://github.com/neovim/neovim/pull/30313#issuecomment-2349327458",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1759815004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759815004"
                }
            },
            "author_association": "MEMBER",
            "body": "a way to give ourselves a reminder about this in the future is to add a `test/functional/lua/deprecated_spec.lua` file with an `it()` test case that checks `vim.version.ge(vim.version(), '0.11')` ",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-14T20:52:29Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1759815004",
            "id": 1759815004,
            "line": 117,
            "node_id": "PRRC_kwDOAPphoM5o5KVc",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 117,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 5,
            "pull_request_review_id": 2305201588,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759815004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-14T20:52:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759815004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1759985116"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759985116"
                }
            },
            "author_association": "MEMBER",
            "body": "I think there is no merit in having `_get_parser()` anymore, so maybe resolve this TODO here?",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T07:33:56Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1759985116",
            "id": 1759985116,
            "line": 126,
            "node_id": "PRRC_kwDOAPphoM5o5z3c",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 126,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 15,
            "pull_request_review_id": 2305302191,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759985116/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T07:33:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759985116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1759989638"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759989638"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this `vim.notify()` also suffers from the similar issue as `vim.notify_once()` in the `get_parser()`.\r\n\r\nPrior to #30313 the call `local has_ts = pcall(vim.treesitter.start, 0)` could be used to start tree-sitter in the buffer while falling back to something else in case of `has_ts == false`. Now it does not fail silently and there is no good way of suppressing the notification. Possible solutions may be:\r\n- Suggest to first call `vim.treesitter.get_parser` to check if there is a parser for the buffer and possibly fall back to something else. This leads to essentially calling `get_parser` twice if there *is a parser, which is not ideal.\r\n- Show no notification if there is no parser (i.e. fail silently).\r\n\r\nNot sure what is the best approach here. I'd probably choose a silent fail here.",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T08:00:23Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1759989638",
            "id": 1759989638,
            "line": 451,
            "node_id": "PRRC_kwDOAPphoM5o50-G",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 46,
            "pull_request_review_id": 2305306534,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759989638/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T08:00:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759989638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1759998484"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759998484"
                }
            },
            "author_association": "MEMBER",
            "body": "> I think this vim.notify() also suffers from the similar issue as vim.notify_once() in the get_parser().\r\n\r\nYes, but `start` is something that _users_ call (possibly interactively), so they expect feedback -- and `vim.notify` is what we have for this. Let's keep focused on the low-level `get_parser` function.",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T08:50:26Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1759998484",
            "id": 1759998484,
            "in_reply_to_id": 1759989638,
            "line": 451,
            "node_id": "PRRC_kwDOAPphoM5o53IU",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 46,
            "pull_request_review_id": 2305315372,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759998484/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T08:50:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759998484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760003769"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760003769"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we pass correct arguments here? Could make it more robust...",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T09:19:57Z",
            "diff_hunk": "@@ -9,7 +9,7 @@\n local function get_commentstring(ref_position)\n   local buf_cs = vim.bo.commentstring\n \n-  local ts_parser = vim.treesitter._get_parser()\n+  local ts_parser = vim.treesitter.get_parser(nil, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760003769",
            "id": 1760003769,
            "line": 12,
            "node_id": "PRRC_kwDOAPphoM5o54a5",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 12,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/_comment.lua",
            "position": 5,
            "pull_request_review_id": 2305320291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760003769/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760003769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004234"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004234"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- If no parser can be created, an error is thrown. Set `opts.error = false` to suppress this and return nil instead.\r\n--- WARNING: This behavior will become default in Nvim 0.12 and the option will be removed.\r\n```",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T09:22:32Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004234",
            "id": 1760004234,
            "line": 117,
            "node_id": "PRRC_kwDOAPphoM5o54iK",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 117,
            "original_position": 5,
            "original_start_line": 116,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 5,
            "pull_request_review_id": 2305320291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004234/reactions"
            },
            "side": "RIGHT",
            "start_line": 116,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-15T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004676"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, that todo is obsolete now.",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T09:24:40Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004676",
            "id": 1760004676,
            "in_reply_to_id": 1759985116,
            "line": 126,
            "node_id": "PRRC_kwDOAPphoM5o54pE",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 126,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 15,
            "pull_request_review_id": 2305320291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004676/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004984"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004984"
                }
            },
            "author_association": "MEMBER",
            "body": "I thought the point was to _remove_ the warning because it can't be slurped by `pcall`?",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T09:25:53Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function\n   -- signature change is acceptable.\n+  opts = opts or {}\n+\n   local parser = M._get_parser(bufnr, lang, opts)\n-  if not parser then\n+  local should_error = opts.error == nil or opts.error\n+  if not parser and should_error then\n     vim.notify_once(\n-      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim 0.12',\n+      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim'\n+        .. ' 0.12. Please run with \"opts.error = false\".',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004984",
            "id": 1760004984,
            "line": 135,
            "node_id": "PRRC_kwDOAPphoM5o54t4",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 135,
            "original_position": 26,
            "original_start_line": 133,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 26,
            "pull_request_review_id": 2305320291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004984/reactions"
            },
            "side": "RIGHT",
            "start_line": 133,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-15T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760006126"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006126"
                }
            },
            "author_association": "MEMBER",
            "body": "> Let's keep focused on the low-level `get_parser` function.\r\n\r\nThis was changed in #30313, so I thought it is reasonable to be discussed here.",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T09:31:36Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760006126",
            "id": 1760006126,
            "in_reply_to_id": 1759989638,
            "line": 451,
            "node_id": "PRRC_kwDOAPphoM5o54_u",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 46,
            "pull_request_review_id": 2305322119,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006126/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:31:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760006902"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006902"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, but correctly so. _That_ is where the warning _should_ be triggered (at top of the stack).\r\n\r\nOtherwise this sounds like a fundamental (unresolvable) problem with `vim.notify`: that callers cannot silence it by `pcall` (which is deliberate since we use it for deprecation warnings that should be handled instead of ignored).\r\n\r\nWhat you are correct about is that the API is missing a clear `has_parser` function; hence my comment about refactoring `vim.treesitter.language.add` so that it returns a value (instead of throwing an error) that can be used for that purpose. (This was something that was lost in the `require_language` deprecation.)",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T09:35:42Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760006902",
            "id": 1760006902,
            "in_reply_to_id": 1759989638,
            "line": 451,
            "node_id": "PRRC_kwDOAPphoM5o55L2",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 46,
            "pull_request_review_id": 2305322748,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006902/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:42:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760008535"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760008535"
                }
            },
            "author_association": "MEMBER",
            "body": "But maybe I am wrong, and throwing errors and catching them (and the error message) with `pcall` is really the correct way of such \"exception handling\"? In this case, we should simply revert.",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-15T09:44:31Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760008535",
            "id": 1760008535,
            "in_reply_to_id": 1759989638,
            "line": 451,
            "node_id": "PRRC_kwDOAPphoM5o55lX",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 46,
            "pull_request_review_id": 2305324226,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760008535/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:44:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760008535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1761465303"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761465303"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, I thought the point was the make the warning remov*able* by users (by passing the argument); if the warning is removed, will it not be difficult to know (as a user) that there will be a breaking change in the future?",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-16T16:24:52Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function\n   -- signature change is acceptable.\n+  opts = opts or {}\n+\n   local parser = M._get_parser(bufnr, lang, opts)\n-  if not parser then\n+  local should_error = opts.error == nil or opts.error\n+  if not parser and should_error then\n     vim.notify_once(\n-      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim 0.12',\n+      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim'\n+        .. ' 0.12. Please run with \"opts.error = false\".',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1761465303",
            "id": 1761465303,
            "in_reply_to_id": 1760004984,
            "line": 135,
            "node_id": "PRRC_kwDOAPphoM5o_dPX",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 135,
            "original_position": 26,
            "original_start_line": 133,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 26,
            "pull_request_review_id": 2307142116,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761465303/reactions"
            },
            "side": "RIGHT",
            "start_line": 133,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-16T16:24:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761465303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1761471004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761471004"
                }
            },
            "author_association": "MEMBER",
            "body": "Careful; user != caller (that would be a plugin). The point here is that we need to be careful with deprecations that concern plugins. In particular, we should absolutely minimize the chance that the warning will trigger a \"press ENTER\" prompt.\r\n\r\nPersonally, I would consider a soft deprecation here (doc change only).",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-16T16:29:00Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function\n   -- signature change is acceptable.\n+  opts = opts or {}\n+\n   local parser = M._get_parser(bufnr, lang, opts)\n-  if not parser then\n+  local should_error = opts.error == nil or opts.error\n+  if not parser and should_error then\n     vim.notify_once(\n-      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim 0.12',\n+      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim'\n+        .. ' 0.12. Please run with \"opts.error = false\".',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1761471004",
            "id": 1761471004,
            "in_reply_to_id": 1760004984,
            "line": 135,
            "node_id": "PRRC_kwDOAPphoM5o_eoc",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 135,
            "original_position": 26,
            "original_start_line": 133,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 26,
            "pull_request_review_id": 2307150302,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761471004/reactions"
            },
            "side": "RIGHT",
            "start_line": 133,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-16T16:29:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761471004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1761509589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761509589"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok, that makes sense",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-16T16:53:47Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function\n   -- signature change is acceptable.\n+  opts = opts or {}\n+\n   local parser = M._get_parser(bufnr, lang, opts)\n-  if not parser then\n+  local should_error = opts.error == nil or opts.error\n+  if not parser and should_error then\n     vim.notify_once(\n-      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim 0.12',\n+      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim'\n+        .. ' 0.12. Please run with \"opts.error = false\".',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1761509589",
            "id": 1761509589,
            "in_reply_to_id": 1760004984,
            "line": 135,
            "node_id": "PRRC_kwDOAPphoM5o_oDV",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 135,
            "original_position": 26,
            "original_start_line": 133,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 26,
            "pull_request_review_id": 2307203491,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761509589/reactions"
            },
            "side": "RIGHT",
            "start_line": 133,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-16T16:53:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761509589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1761520897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761520897"
                }
            },
            "author_association": "MEMBER",
            "body": "You both bring up great points. Is there a consensus here? I also feel like not throwing an error in `start` is breaking, as with `get_parser`",
            "commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "created_at": "2024-09-16T17:00:24Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1761520897",
            "id": 1761520897,
            "in_reply_to_id": 1759989638,
            "line": 451,
            "node_id": "PRRC_kwDOAPphoM5o_q0B",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": 46,
            "pull_request_review_id": 2307219493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761520897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-16T17:00:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761520897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30382/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30382/commits",
    "created_at": "2024-09-14T20:01:46Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30382.diff",
    "draft": false,
    "head": {
        "label": "ribru17:get_parser_warn_fix",
        "ref": "get_parser_warn_fix",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2024-09-14T20:17:43Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 278639,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2024-09-14T19:29:10Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30382",
    "id": 2072445128,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 7015106619,
            "name": "comment",
            "node_id": "LA_kwDOAPphoM8AAAABoiIIOw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/comment"
        }
    ],
    "locked": false,
    "merge_commit_sha": "4acdb7243d9b34be411ba612231262edcba2e64c",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM57hwDI",
    "number": 30382,
    "patch_url": "https://github.com/neovim/neovim/pull/30382.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30382/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
    "title": "fix(treesitter): suppress get_parser warnings via opts.error",
    "updated_at": "2024-09-16T17:00:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17"
    }
}