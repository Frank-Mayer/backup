{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30382/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30382/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30382"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30382"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30382/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8df9c6b122b867018247d4c7b5cda171d667555d"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": {
        "commit_message": "fix(treesitter): suppress get_parser warnings via opts.error",
        "commit_title": "Merge pull request #30382 from ribru17/get_parser_warn_fix",
        "enabled_by": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        },
        "merge_method": "rebase"
    },
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5605,
            "forks_count": 5605,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1776,
            "open_issues_count": 1776,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-09-30T22:27:30Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 287362,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 82117,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-10-01T02:33:57Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 82117,
            "watchers_count": 82117,
            "web_commit_signoff_required": false
        },
        "sha": "09d76afe84dd5b895e102dcd8df8ce6271bebfef",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "**Problem:** #30313 introduced a change to `vim.treesitter.get_parser` that would always show a deprecation warning message without giving plugins/users a way to suppress it by updating to the new functionality.\r\n\r\n**Solution:** Introduce `opts.error` to allow plugins/users to explicitly say that they are moving away from the deprecated functionality, thus allowing them to remove the annoying warning. See https://github.com/neovim/neovim/pull/30313#issuecomment-2349327458",
    "closed_at": "2024-09-27T22:31:45Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1759815004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759815004"
                }
            },
            "author_association": "MEMBER",
            "body": "a way to give ourselves a reminder about this in the future is to add a `test/functional/lua/deprecated_spec.lua` file with an `it()` test case that checks `vim.version.ge(vim.version(), '0.11')` ",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-14T20:52:29Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1759815004",
            "id": 1759815004,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o5KVc",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 117,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305201588,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759815004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-14T20:52:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759815004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1759985116"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759985116"
                }
            },
            "author_association": "MEMBER",
            "body": "I think there is no merit in having `_get_parser()` anymore, so maybe resolve this TODO here?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T07:33:56Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1759985116",
            "id": 1759985116,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o5z3c",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 126,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305302191,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759985116/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T07:33:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759985116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1759989638"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759989638"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this `vim.notify()` also suffers from the similar issue as `vim.notify_once()` in the `get_parser()`.\r\n\r\nPrior to #30313 the call `local has_ts = pcall(vim.treesitter.start, 0)` could be used to start tree-sitter in the buffer while falling back to something else in case of `has_ts == false`. Now it does not fail silently and there is no good way of suppressing the notification. Possible solutions may be:\r\n- Suggest to first call `vim.treesitter.get_parser` to check if there is a parser for the buffer and possibly fall back to something else. This leads to essentially calling `get_parser` twice if there *is a parser, which is not ideal.\r\n- Show no notification if there is no parser (i.e. fail silently).\r\n\r\nNot sure what is the best approach here. I'd probably choose a silent fail here.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T08:00:23Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1759989638",
            "id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o50-G",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305306534,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759989638/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T08:00:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759989638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1759998484"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759998484"
                }
            },
            "author_association": "MEMBER",
            "body": "> I think this vim.notify() also suffers from the similar issue as vim.notify_once() in the get_parser().\r\n\r\nYes, but `start` is something that _users_ call (possibly interactively), so they expect feedback -- and `vim.notify` is what we have for this. Let's keep focused on the low-level `get_parser` function.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T08:50:26Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1759998484",
            "id": 1759998484,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o53IU",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305315372,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759998484/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T08:50:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1759998484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760003769"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760003769"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we pass correct arguments here? Could make it more robust...",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T09:19:57Z",
            "diff_hunk": "@@ -9,7 +9,7 @@\n local function get_commentstring(ref_position)\n   local buf_cs = vim.bo.commentstring\n \n-  local ts_parser = vim.treesitter._get_parser()\n+  local ts_parser = vim.treesitter.get_parser(nil, nil, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760003769",
            "id": 1760003769,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o54a5",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 12,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/_comment.lua",
            "position": null,
            "pull_request_review_id": 2305320291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760003769/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760003769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004234"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004234"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- If no parser can be created, an error is thrown. Set `opts.error = false` to suppress this and return nil instead.\r\n--- WARNING: This behavior will become default in Nvim 0.12 and the option will be removed.\r\n```",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T09:22:32Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004234",
            "id": 1760004234,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o54iK",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 117,
            "original_position": 5,
            "original_start_line": 116,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305320291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004234/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-15T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004676"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, that todo is obsolete now.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T09:24:40Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004676",
            "id": 1760004676,
            "in_reply_to_id": 1759985116,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o54pE",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 126,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305320291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004676/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004984"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004984"
                }
            },
            "author_association": "MEMBER",
            "body": "I thought the point was to _remove_ the warning because it can't be slurped by `pcall`?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T09:25:53Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function\n   -- signature change is acceptable.\n+  opts = opts or {}\n+\n   local parser = M._get_parser(bufnr, lang, opts)\n-  if not parser then\n+  local should_error = opts.error == nil or opts.error\n+  if not parser and should_error then\n     vim.notify_once(\n-      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim 0.12',\n+      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim'\n+        .. ' 0.12. Please run with \"opts.error = false\".',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760004984",
            "id": 1760004984,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o54t4",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 135,
            "original_position": 26,
            "original_start_line": 133,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305320291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004984/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-15T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760004984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760006126"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006126"
                }
            },
            "author_association": "MEMBER",
            "body": "> Let's keep focused on the low-level `get_parser` function.\r\n\r\nThis was changed in #30313, so I thought it is reasonable to be discussed here.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T09:31:36Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760006126",
            "id": 1760006126,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o54_u",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305322119,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006126/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:31:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760006902"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006902"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, but correctly so. _That_ is where the warning _should_ be triggered (at top of the stack).\r\n\r\nOtherwise this sounds like a fundamental (unresolvable) problem with `vim.notify`: that callers cannot silence it by `pcall` (which is deliberate since we use it for deprecation warnings that should be handled instead of ignored).\r\n\r\nWhat you are correct about is that the API is missing a clear `has_parser` function; hence my comment about refactoring `vim.treesitter.language.add` so that it returns a value (instead of throwing an error) that can be used for that purpose. (This was something that was lost in the `require_language` deprecation.)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T09:35:42Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760006902",
            "id": 1760006902,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o55L2",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305322748,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006902/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:42:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760006902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1760008535"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760008535"
                }
            },
            "author_association": "MEMBER",
            "body": "But maybe I am wrong, and throwing errors and catching them (and the error message) with `pcall` is really the correct way of such \"exception handling\"? In this case, we should simply revert.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-15T09:44:31Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1760008535",
            "id": 1760008535,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o55lX",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2305324226,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760008535/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-15T09:44:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1760008535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1761465303"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761465303"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, I thought the point was the make the warning remov*able* by users (by passing the argument); if the warning is removed, will it not be difficult to know (as a user) that there will be a breaking change in the future?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-16T16:24:52Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function\n   -- signature change is acceptable.\n+  opts = opts or {}\n+\n   local parser = M._get_parser(bufnr, lang, opts)\n-  if not parser then\n+  local should_error = opts.error == nil or opts.error\n+  if not parser and should_error then\n     vim.notify_once(\n-      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim 0.12',\n+      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim'\n+        .. ' 0.12. Please run with \"opts.error = false\".',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1761465303",
            "id": 1761465303,
            "in_reply_to_id": 1760004984,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o_dPX",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 135,
            "original_position": 26,
            "original_start_line": 133,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2307142116,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761465303/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-16T16:24:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761465303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1761471004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761471004"
                }
            },
            "author_association": "MEMBER",
            "body": "Careful; user != caller (that would be a plugin). The point here is that we need to be careful with deprecations that concern plugins. In particular, we should absolutely minimize the chance that the warning will trigger a \"press ENTER\" prompt.\r\n\r\nPersonally, I would consider a soft deprecation here (doc change only).",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-16T16:29:00Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function\n   -- signature change is acceptable.\n+  opts = opts or {}\n+\n   local parser = M._get_parser(bufnr, lang, opts)\n-  if not parser then\n+  local should_error = opts.error == nil or opts.error\n+  if not parser and should_error then\n     vim.notify_once(\n-      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim 0.12',\n+      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim'\n+        .. ' 0.12. Please run with \"opts.error = false\".',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1761471004",
            "id": 1761471004,
            "in_reply_to_id": 1760004984,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o_eoc",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 135,
            "original_position": 26,
            "original_start_line": 133,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2307150302,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761471004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-16T16:29:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761471004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1761509589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761509589"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok, that makes sense",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-16T16:53:47Z",
            "diff_hunk": "@@ -113,18 +113,26 @@ end\n ---\n --- If needed, this will create the parser.\n ---\n+--- NOTE: This function will return `nil` rather than throwing an error in\n+--- Nvim 0.12. Please pass `opts.error = false` to achieve this behavior\n+--- now.\n+---\n ---@param bufnr (integer|nil) Buffer the parser should be tied to (default: current buffer)\n ---@param lang (string|nil) Language of this parser (default: from buffer filetype)\n ---@param opts (table|nil) Options to pass to the created language tree\n ---\n----@return vim.treesitter.LanguageTree object to use for parsing\n+---@return vim.treesitter.LanguageTree? object to use for parsing\n function M.get_parser(bufnr, lang, opts)\n   -- TODO(ribru17): Remove _get_parser and move that logic back here once the breaking function\n   -- signature change is acceptable.\n+  opts = opts or {}\n+\n   local parser = M._get_parser(bufnr, lang, opts)\n-  if not parser then\n+  local should_error = opts.error == nil or opts.error\n+  if not parser and should_error then\n     vim.notify_once(\n-      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim 0.12',\n+      'WARNING: vim.treesitter.get_parser will return nil instead of raising an error in Neovim'\n+        .. ' 0.12. Please run with \"opts.error = false\".',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1761509589",
            "id": 1761509589,
            "in_reply_to_id": 1760004984,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o_oDV",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 135,
            "original_position": 26,
            "original_start_line": 133,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2307203491,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761509589/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-16T16:53:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761509589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1761520897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761520897"
                }
            },
            "author_association": "MEMBER",
            "body": "You both bring up great points. Is there a consensus here? I also feel like not throwing an error in `start` is breaking, as with `get_parser`",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-16T17:00:24Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1761520897",
            "id": 1761520897,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5o_q0B",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2307219493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761520897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-16T17:00:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1761520897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1763088044"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763088044"
                }
            },
            "author_association": "MEMBER",
            "body": "If we want to move away from pcall the I feel we shouldn't be calling vim.notify at all, at least for `start()`.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-17T11:43:10Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1763088044",
            "id": 1763088044,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pFpas",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2309504668,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763088044/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-17T11:43:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763088044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1763540778"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763540778"
                }
            },
            "author_association": "MEMBER",
            "body": "I agree- I mostly meant in terms of erroring, should we still throw in `start`? I hadn't considered that this changes the behavior of `start` as well as `get_parser`",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-17T16:26:24Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1763540778",
            "id": 1763540778,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pHX8q",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2310246999,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763540778/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-17T16:26:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763540778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1763551187"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763551187"
                }
            },
            "author_association": "MEMBER",
            "body": "There's two issues here:\r\n1. Signaling to the _calling function_ that a parser couldn't be found.\r\n2. Signaling to the _user_ that a parser couldn't be found.\r\n\r\nA change in 1. would be considered breaking (code), but a change in 2. would _not_. So no user-facing warning here should be added. If we want to prevent breaking code, we will _have to_ throw an `error`; if we don't, we simply document this and brace for impact.\r\n\r\nTL;DR: Error or error not; there is no `vim.notifiy`.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-17T16:34:33Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1763551187",
            "id": 1763551187,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pHafT",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2310263934,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763551187/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-17T16:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763551187",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1763562747"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763562747"
                }
            },
            "author_association": "MEMBER",
            "body": "> if we don't, we simply document this and brace for impact.\r\n\r\nSounds good to me? :)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-17T16:43:25Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1763562747",
            "id": 1763562747,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pHdT7",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2310283534,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763562747/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-17T16:43:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763562747",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1763566184"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763566184"
                }
            },
            "author_association": "MEMBER",
            "body": "Actually, I think it would be best to match the default behavior of `get_parser` (which would error until 0.12) because right now `start` returns nil even upon success. Also keeping backwards compatibility here would remove some headache",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-17T16:46:19Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1763566184",
            "id": 1763566184,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pHeJo",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2310289180,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763566184/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-17T16:46:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763566184",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1763575265"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763575265"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, being consistent is good. I'll think about how I want to handle this for `language.add()`, which is a lower-level API.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-17T16:53:46Z",
            "diff_hunk": "@@ -438,7 +446,7 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })\n   if not parser then\n     vim.notify('No parser for the given buffer.', vim.log.levels.WARN)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1763575265",
            "id": 1763575265,
            "in_reply_to_id": 1759989638,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pHgXh",
            "original_commit_id": "cc8e1e5dc4f7a670fbdde8fc38ff87ee9677f08a",
            "original_line": 451,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2310305480,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763575265/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-17T16:53:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1763575265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1766674607"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766674607"
                }
            },
            "author_association": "MEMBER",
            "body": "use `assert` here?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-19T11:35:37Z",
            "diff_hunk": "@@ -438,10 +426,11 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1766674607",
            "id": 1766674607,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pTVCv",
            "original_commit_id": "4626e3b7a6c87eb1fbf10f76319fffb2462c1646",
            "original_line": 429,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2315269973,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766674607/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-19T11:35:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766674607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1766686001"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766686001"
                }
            },
            "author_association": "MEMBER",
            "body": "Later `if not parser then` gives a more informative error message.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-19T11:45:00Z",
            "diff_hunk": "@@ -438,10 +426,11 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1766686001",
            "id": 1766686001,
            "in_reply_to_id": 1766674607,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pTX0x",
            "original_commit_id": "4626e3b7a6c87eb1fbf10f76319fffb2462c1646",
            "original_line": 429,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2315289820,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766686001/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-19T11:45:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766686001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1766689588"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766689588"
                }
            },
            "author_association": "MEMBER",
            "body": "No, I mean use `assert` _here_ with the more informative error message. It's equivalent, of course; it's just a question of which pattern we want to promote (`if not foo then error('bar')` vs. `assert(foo, 'bar')`).",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-19T11:48:01Z",
            "diff_hunk": "@@ -438,10 +426,11 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n+  local parser = M.get_parser(bufnr, lang, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1766689588",
            "id": 1766689588,
            "in_reply_to_id": 1766674607,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pTYs0",
            "original_commit_id": "4626e3b7a6c87eb1fbf10f76319fffb2462c1646",
            "original_line": 429,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2315295951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766689588/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-19T11:48:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1766689588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1767209415"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767209415"
                }
            },
            "author_association": "MEMBER",
            "body": "The option becoming default and the option being removed should happen in separate releases. Might want to reword here to clarify that. “This behavior will become default in Nvim 0.12 and removed in a future release”",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-19T16:48:44Z",
            "diff_hunk": "@@ -818,6 +818,10 @@ get_parser({bufnr}, {lang}, {opts})              *vim.treesitter.get_parser()*\n \n     If needed, this will create the parser.\n \n+    If no parser can be created, an error is thrown. Set `opts.error = false`\n+    to suppress this and return nil instead. WARNING: This behavior will\n+    become default in Nvim 0.12 and the option will be removed.",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1767209415",
            "id": 1767209415,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pVXnH",
            "original_commit_id": "4626e3b7a6c87eb1fbf10f76319fffb2462c1646",
            "original_line": 823,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2316146565,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767209415/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-19T16:48:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767209415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1767221988"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767221988"
                }
            },
            "author_association": "MEMBER",
            "body": "No, the proposal is in fact for an expedited deprecation (flying under the \"experimental\" flag). If there are _specific_ objections to that (and the related API change; this is a bigger project), I would like to hear them. (This change is _much_ easier to adapt to than the query iteration one.)\r\n\r\nI would like to minimize the amount of breakage but not drag it out.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-19T16:52:03Z",
            "diff_hunk": "@@ -818,6 +818,10 @@ get_parser({bufnr}, {lang}, {opts})              *vim.treesitter.get_parser()*\n \n     If needed, this will create the parser.\n \n+    If no parser can be created, an error is thrown. Set `opts.error = false`\n+    to suppress this and return nil instead. WARNING: This behavior will\n+    become default in Nvim 0.12 and the option will be removed.",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1767221988",
            "id": 1767221988,
            "in_reply_to_id": 1767209415,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pVark",
            "original_commit_id": "4626e3b7a6c87eb1fbf10f76319fffb2462c1646",
            "original_line": 823,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2316162303,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767221988/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-19T16:53:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767221988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1767260565"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767260565"
                }
            },
            "author_association": "MEMBER",
            "body": "To be more precise: What I'm looking for here is scenarios where the option removal will be breaking whereas the default switch would not be. (Note that you're opting in to the new behavior, not the old one, from the start -- unlike the query change.)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-19T17:04:37Z",
            "diff_hunk": "@@ -818,6 +818,10 @@ get_parser({bufnr}, {lang}, {opts})              *vim.treesitter.get_parser()*\n \n     If needed, this will create the parser.\n \n+    If no parser can be created, an error is thrown. Set `opts.error = false`\n+    to suppress this and return nil instead. WARNING: This behavior will\n+    become default in Nvim 0.12 and the option will be removed.",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1767260565",
            "id": 1767260565,
            "in_reply_to_id": 1767209415,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pVkGV",
            "original_commit_id": "4626e3b7a6c87eb1fbf10f76319fffb2462c1646",
            "original_line": 823,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 2316214065,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767260565/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-19T17:04:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1767260565",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769510280"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510280"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry to \"one more thing\" you, but I think the error message should contain as much context as possible -- in this case also the language name. (This may be called from \"distros\", so the context may not be always clear to the user.)\r\n\r\n(This is related to a regression on treesitter highlight error messages, which used to contain the language and query name.)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T08:31:41Z",
            "diff_hunk": "@@ -438,11 +426,10 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n-  if not parser then\n-    vim.notify('No parser for the given buffer.', vim.log.levels.WARN)\n-    return\n-  end\n+  local parser = assert(\n+    M.get_parser(bufnr, lang, { error = false }),\n+    string.format('Highlighting could not be started for buffer: %s. No parser found.', bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769510280",
            "id": 1769510280,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peJWI",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 431,
            "original_position": 92,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2319688589,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510280/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-21T08:31:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769510431"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510431"
                }
            },
            "author_association": "MEMBER",
            "body": "can this be an assert (with context) as well?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T08:32:34Z",
            "diff_hunk": "@@ -76,7 +76,7 @@ end\n ---\n ---@package\n function TSTreeView:new(bufnr, lang)\n-  local parser = vim.treesitter._get_parser(bufnr or 0, lang)\n+  local parser = vim.treesitter.get_parser(bufnr or 0, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer.'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769510431",
            "id": 1769510431,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peJYf",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 87,
            "original_position": 8,
            "original_start_line": 80,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2319688694,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510431/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T08:32:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769510476"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510476"
                }
            },
            "author_association": "MEMBER",
            "body": "same?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T08:32:46Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769510476",
            "id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peJZM",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2319688730,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510476/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T08:32:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510476",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769510606"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510606"
                }
            },
            "author_association": "MEMBER",
            "body": "(sorry for the iterations; I want to get this right, since it'll establish a pattern for use elsewhere, e.g., my `add()` PR.)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T08:33:40Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769510606",
            "id": 1769510606,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peJbO",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2319688852,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510606/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T08:33:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769510606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769555083"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769555083"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should show an error in \r\n`:InspectTree`, but not here in the API.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T13:14:44Z",
            "diff_hunk": "@@ -76,7 +76,7 @@ end\n ---\n ---@package\n function TSTreeView:new(bufnr, lang)\n-  local parser = vim.treesitter._get_parser(bufnr or 0, lang)\n+  local parser = vim.treesitter.get_parser(bufnr or 0, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer.'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769555083",
            "id": 1769555083,
            "in_reply_to_id": 1769510431,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peUSL",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 87,
            "original_position": 8,
            "original_start_line": 80,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2319735155,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769555083/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T13:14:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769555083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769560251"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769560251"
                }
            },
            "author_association": "MEMBER",
            "body": "And I am actually not at all fond of propagating error messages as strings. Either\r\n1. `assert` them,\r\n2. notify them, or \r\n3. log them,\r\n\r\nbut keep them where they happen.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T13:23:21Z",
            "diff_hunk": "@@ -76,7 +76,7 @@ end\n ---\n ---@package\n function TSTreeView:new(bufnr, lang)\n-  local parser = vim.treesitter._get_parser(bufnr or 0, lang)\n+  local parser = vim.treesitter.get_parser(bufnr or 0, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer.'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769560251",
            "id": 1769560251,
            "in_reply_to_id": 1769510431,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peVi7",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 87,
            "original_position": 8,
            "original_start_line": 80,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2319744585,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769560251/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T13:23:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769560251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769563528"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769563528"
                }
            },
            "author_association": "MEMBER",
            "body": "> And I am actually not at all fond of propagating error messages as strings.\r\n\r\nIt's a standard Lua pattern. The error should be asserted/notified at the application level (`:InspectTree` in this case, or other plugin code), not the \"library\"/API level.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T13:46:21Z",
            "diff_hunk": "@@ -76,7 +76,7 @@ end\n ---\n ---@package\n function TSTreeView:new(bufnr, lang)\n-  local parser = vim.treesitter._get_parser(bufnr or 0, lang)\n+  local parser = vim.treesitter.get_parser(bufnr or 0, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer.'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769563528",
            "id": 1769563528,
            "in_reply_to_id": 1769510431,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peWWI",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 87,
            "original_position": 8,
            "original_start_line": 80,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2319747778,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769563528/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T13:46:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769563528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769565441"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769565441"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, and pcall is the standard approach for that pattern (throw/catch), isn't it?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T13:52:18Z",
            "diff_hunk": "@@ -76,7 +76,7 @@ end\n ---\n ---@package\n function TSTreeView:new(bufnr, lang)\n-  local parser = vim.treesitter._get_parser(bufnr or 0, lang)\n+  local parser = vim.treesitter.get_parser(bufnr or 0, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer.'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769565441",
            "id": 1769565441,
            "in_reply_to_id": 1769510431,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peW0B",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 87,
            "original_position": 8,
            "original_start_line": 80,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2319751484,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769565441/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T13:52:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769565441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1769573453"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769573453"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry, I'm not making my point very well; let me try again. It's not about the error itself, it's about the message -- in particular, where it is constructed. I believe that this should be as close as possible to the point where the actual error is raised.\r\n\r\nIn this case, you're asking a function \"do this thing\", to which it replies \"I cannot do this thing you ask\". Now, we have just established a convention for that: simply return `nil`, which tells the calling function all it needs to know. Why should we return an additional string that says exactly the same thing, just in (more) words? What is that message telling the calling function that it cannot infer from the `nil` return, and what does it do with this information? Why can't `:InspectTree` not simply do `assert(parser, 'No parser available for the buffer')`?\r\n\r\n(Or put differently: Hard-coded error strings without dynamic content are sus.)\r\n\r\n",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-21T14:07:45Z",
            "diff_hunk": "@@ -76,7 +76,7 @@ end\n ---\n ---@package\n function TSTreeView:new(bufnr, lang)\n-  local parser = vim.treesitter._get_parser(bufnr or 0, lang)\n+  local parser = vim.treesitter.get_parser(bufnr or 0, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer.'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1769573453",
            "id": 1769573453,
            "in_reply_to_id": 1769510431,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peYxN",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 87,
            "original_position": 8,
            "original_start_line": 80,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2319780931,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769573453/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T14:07:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769573453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1770849725"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770849725"
                }
            },
            "author_association": "MEMBER",
            "body": "Concretely, my proposal is 'do not return an error message here, `nil` already means \"No parser available\", just return'. ",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T06:54:41Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1770849725",
            "id": 1770849725,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pjQW9",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2321256073,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770849725/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T06:54:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770849725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771266100"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771266100"
                }
            },
            "author_association": "MEMBER",
            "body": "How else will the caller know why the function failed? Maybe there is only a single error path now, but there could be more in the future, and in that case we would want to explain what the error was. \r\n\r\nReturning an error message also lets callers simply use `local blah = assert(vim.treesitter.dev.show_tree())` which will conveniently show the error message “for free” (this is the same pattern Lua itself uses in e.g. the `io` library. I don’t see any reason to deviate here).",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T11:55:22Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771266100",
            "id": 1771266100,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pk2A0",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2321962789,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771266100/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T11:55:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771266100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771321435"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771321435"
                }
            },
            "author_association": "MEMBER",
            "body": "Then that error message should provide more value, if it's the (only) one that is surfaced to the user. (At the very least, _which_ parser? _which_ buffer?)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T12:36:34Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771321435",
            "id": 1771321435,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5plDhb",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2322055223,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771321435/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T12:36:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771321435",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771334319"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771334319"
                }
            },
            "author_association": "MEMBER",
            "body": "Also, I'm a bit confused, since we're commenting here on `:EditQuery`, which does not have a \"caller\" (in the sense of a calling function -- unless we are talking about the `nvim_create_usercommand`, which then needs to `assert` the call).\r\n\r\nSorry for being so ornery, but I'm genuinely interested in having a discussion about this so I can understand the _full_ pattern across our API (at least treesitter, possibly beyond). Ideally, we'll get something we can actually write in `develop.txt` and I can follow in future PRs instead of winging it based on contributor style as we (certainly I) have so far.\r\n\r\n(Part of the concern is that adding the error message to the return value locks the return part of the API. If we want to promote this pattern, we'll have to standardize on `retval, err`, with `retval` being a table for forward compatibility. Of course, that's very restrictive...)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T12:44:46Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771334319",
            "id": 1771334319,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5plGqv",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2322076312,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771334319/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T12:44:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771334319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771495682"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771495682"
                }
            },
            "author_association": "MEMBER",
            "body": ">Also, I'm a bit confused, since we're commenting here on :EditQuery, which does not have a \"caller\" (in the sense of a calling function -- unless we are talking about the nvim_create_usercommand, which then needs to assert the call).\r\n\r\nNo, we're talking about `vim.treesitter.dev.edit_query()`, which does have a caller.\r\n\r\n>If we want to promote this pattern, we'll have to standardize on retval, err, with retval being a table for forward compatibility. \r\n\r\nThis is a good point, and I hadn't appreciated until this comment that the API in question (`edit_query`) does not return a value.\r\n\r\nIMO for functions which are only called for their side effects (like this one), calling `assert` or `error` directly is appropriate (I realize that takes this entire discussion in a different direction, I apologize for not looking closer at this earlier).\r\n\r\nThe pattern of returning `retval, err` is the right one to use for functions which return a value (like `TSTreeView::new`).",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T13:55:44Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771495682",
            "id": 1771495682,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pluEC",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2322331995,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771495682/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T13:55:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771495682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771604129"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771604129"
                }
            },
            "author_association": "MEMBER",
            "body": "Thank you, that helps in wrapping my mind around this. It's clear that \"one size fits all\" fits none, so my goal is to understand (with the help of these examples) which pattern is appropriate in which situation; and the difference between \"generators\" (that return a value) and \"actors\" (that don't, and are called purely for their side effects) is one I tried making earlier.\r\n\r\nWhat muddies the waters here unfortunately is that some of the functions change their type in these PRs...",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T14:47:25Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771604129",
            "id": 1771604129,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pmIih",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2322522284,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771604129/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T14:47:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771604129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771667638"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771667638"
                }
            },
            "author_association": "MEMBER",
            "body": ">  but I'm genuinely interested in having a discussion about this so I can understand the full pattern across our API (at least treesitter, possibly beyond). Ideally, we'll get something we can actually write in develop.txt and I can follow in future PRs instead of winging it based on contributor style as we (certainly I) have so far.\r\n\r\n> (Part of the concern is that adding the error message to the return value locks the return part of the API. If we want to promote this pattern, we'll have to standardize on retval, err, with retval being a table for forward compatibility. Of course, that's very restrictive...)\r\n\r\n\r\nI think part of the challenge here is that:\r\n\r\n- there's no clear established pattern (yet)\r\n- it's not one size fit all\r\n- different contributors have slightly different preferences\r\n\r\nFrom what I can tell we have at least:\r\n\r\n1. `error(\"no luck\")`\r\n2. `retval, errmsg`\r\n3. optional result, no errormsg\r\n4. `on_error` parameter (async, visitors - where `n` errors can happen)\r\n5. `vim.notify` (sometimes with optional `opts.silent` (async, visitors ^))\r\n\r\n\r\nMy personal reasoning for when to use which (so far):\r\n\r\n\r\n1) is well suited for cases where the error is very exceptional, in a lower level and where the consumers are unlikely to handle it in a meaningful way. Advantage over 2) is that propagation happens for free and it's harder to accidentally swallow errors. (E.g. using `uv_handle/pipe:write()` without checking return values is common)\r\n\r\n2) is well suited for cases where the error is more likely or where having a fallback is more realistic. This is also more suited than 1) to have a list of well known error codes which could be returned as a third value. For scenarios where the user may be able to handle a few specific cases in different ways.\r\n\r\n3) Kinda same as 2. where there is only a single case of \"doesn't exist\" (e.g. cache lookup, dict lookup)\r\n\r\n4) lower level, either async methods or where the error can happen multiple times\r\n\r\n5) Higher level. End-user invokes these directly\r\n\r\n",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T15:23:39Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771667638",
            "id": 1771667638,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pmYC2",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2322630136,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 4,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771667638/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T15:32:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771667638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771671539"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771671539"
                }
            },
            "author_association": "MEMBER",
            "body": "Thank you, that is exactly the sort of guidance I was hoping for (and puts a proper face on my vague and confusing thoughts)!\r\n\r\nTo complement this from the other side, what would be guidelines for using `pcall` /  `assert`? (Eating vs propagating vs. throwing errors).\r\n\r\n(This is basically already suitable for copy&pasting into `develop.txt` under \"Error handling\". I would then only add a reminder on making sure to use `string.format` to include _all relevant_ context in the error message -- that is basically free in the non-error case if done correctly (how), right?)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T15:26:11Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771671539",
            "id": 1771671539,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pmY_z",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2322636446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771671539/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T15:30:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771671539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771829147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771829147"
                }
            },
            "author_association": "MEMBER",
            "body": "> what would be guidelines for using pcall / assert? (Eating vs propagating vs. throwing errors).\r\n\r\nI'd say:\r\n\r\n`pcall` only if you either:\r\n\r\n- rethrow and enrich the error with additional context\r\n- can provide a fallback, or in case of a higher level function want to avoid the user getting a error with stacktrace but only a warning\r\n\r\n`assert` is either:\r\n\r\n- defensive programming: To make an assumption explicit that should always be true due to contracts.\r\n- alternative to `error` ⬇️\r\n\r\nIn regards to `assert(truthy, msg)` vs. `if condition then error(msg) end`:\r\nUse the latter if building the `msg` would be costly (and do it only within the if block. Otherwise `assert` is fine.\r\n\r\n\r\n(Disclaimer: This is just how I've been using these things, not sure if there's consensus on these)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T17:26:17Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771829147",
            "id": 1771829147,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pm_eb",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2322897796,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 3,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771829147/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T17:26:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771829147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1771833307"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771833307"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, that's a good point: `assert` needs a constructed message (which I believe should be the default ;))\r\n\r\nAnd I would absolutely find these helpful in our docs as \"things to consider\". (Or, \"So you want to throw an error.\")",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-23T17:30:09Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1771833307",
            "id": 1771833307,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pnAfb",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2322905296,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771833307/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-23T17:36:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1771833307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1773139600"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1773139600"
                }
            },
            "author_association": "MEMBER",
            "body": "Incorporated @mfussenegger 's outline into https://github.com/neovim/neovim/pull/30240",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-24T11:15:51Z",
            "diff_hunk": "@@ -595,7 +595,7 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n     return nil, 'No parser available for the given buffer'\n   end",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1773139600",
            "id": 1773139600,
            "in_reply_to_id": 1769510476,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pr_aQ",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 607,
            "original_position": 26,
            "original_start_line": 599,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2324906675,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1773139600/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-24T11:15:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1773139600",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1773654832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1773654832"
                }
            },
            "author_association": "MEMBER",
            "body": "Let me know if this change is not acceptable; I think the behavior is slightly less intuitive now because often `start()` is passed `nil` and the language is determined in the `get_parser` side, but now we shoot out the error message in `start()` (before that `lang` calculation) so the error message may be less helpful in a lot of cases (i.e. cases where you are *not* passing the language with something like `vim.treesitter.start(0, 'javascript')`",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-24T16:10:05Z",
            "diff_hunk": "@@ -438,11 +426,10 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n-  if not parser then\n-    vim.notify('No parser for the given buffer.', vim.log.levels.WARN)\n-    return\n-  end\n+  local parser = assert(\n+    M.get_parser(bufnr, lang, { error = false }),\n+    string.format('Highlighting could not be started for buffer: %s. No parser found.', bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1773654832",
            "id": 1773654832,
            "in_reply_to_id": 1769510280,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pt9Mw",
            "original_commit_id": "d2863bd8aa9e4facc5ae4908a67b407839ff4cd3",
            "original_line": 431,
            "original_position": 92,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2325760739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1773654832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-24T16:10:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1773654832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1774669213"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774669213"
                }
            },
            "author_association": "MEMBER",
            "body": "PUC Lua can't handle `nil` for the interpolated arguments; that needs to be handled explicitly.\r\n\r\n(And constructing the error message inside an `assert` is exactly what we shouldn't do -- we should use `if not get_parser(...) then error(string.format(...)) end` here.)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-25T07:17:45Z",
            "diff_hunk": "@@ -438,11 +426,14 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n-  if not parser then\n-    vim.notify('No parser for the given buffer.', vim.log.levels.WARN)\n-    return\n-  end\n+  local parser = assert(\n+    M.get_parser(bufnr, lang, { error = false }),\n+    string.format(",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1774669213",
            "id": 1774669213,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5px02d",
            "original_commit_id": "0fbac2e0e1918660eabcba628bc168c25bed56d9",
            "original_line": 431,
            "original_position": 92,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2327340886,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774669213/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T08:08:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774669213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1774671410"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774671410"
                }
            },
            "author_association": "MEMBER",
            "body": "`return nil, errmsg` and `error(errmsg)`, same below. ",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-25T07:19:13Z",
            "diff_hunk": "@@ -94,11 +99,17 @@ function M._get_parser(bufnr, lang, opts)\n \n   if not valid_lang(lang) then\n     if not parsers[bufnr] then\n+      if should_error then\n+        error('Parser not found.')\n+      end\n       return nil",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1774671410",
            "id": 1774671410,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5px1Yy",
            "original_commit_id": "0fbac2e0e1918660eabcba628bc168c25bed56d9",
            "original_line": 105,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2327344297,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774671410/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T07:19:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774671410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1774694529"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774694529"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        'Failed to show query editor for buffer %s: no parser for lang \"%s\"',\r\n```\r\n\r\nNit, while something still has to be fixed anyway. (And similarly in other places.)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-25T07:34:04Z",
            "diff_hunk": "@@ -595,9 +600,14 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })\n   if not parser then\n-    return nil, 'No parser available for the given buffer'\n+    return nil,\n+      string.format(\n+        'Failed to show query editor for buffer: %s. No parser for lang: %s.',",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1774694529",
            "id": 1774694529,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5px7CB",
            "original_commit_id": "0fbac2e0e1918660eabcba628bc168c25bed56d9",
            "original_line": 607,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 2327384363,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774694529/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T09:16:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774694529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1774697378"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774697378"
                }
            },
            "author_association": "MEMBER",
            "body": "Can this assert even be triggered, given that  `foldexpr` already returns early on the same check?\r\n\r\n(That'd be fine and a good use of `assert` without error message; just wondering.)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-25T07:36:12Z",
            "diff_hunk": "@@ -114,7 +114,7 @@ local function compute_folds_levels(bufnr, info, srow, erow, parse_injections)\n   srow = srow or 0\n   erow = erow or api.nvim_buf_line_count(bufnr)\n \n-  local parser = assert(ts._get_parser(bufnr))\n+  local parser = assert(ts.get_parser(bufnr, nil, { error = false }))",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1774697378",
            "id": 1774697378,
            "line": 117,
            "node_id": "PRRC_kwDOAPphoM5px7ui",
            "original_commit_id": "0fbac2e0e1918660eabcba628bc168c25bed56d9",
            "original_line": 117,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": 5,
            "pull_request_review_id": 2327389028,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774697378/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T07:36:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774697378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1774765098"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774765098"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, wait, `bufnr` and especially `lang` are only determined in `get_parser`. Then we _have_ to use the `nil, errmsg` pattern and just `assert(get_parser(...))` here!",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-25T08:07:51Z",
            "diff_hunk": "@@ -438,11 +426,14 @@ end\n ---@param lang (string|nil) Language of the parser (default: from buffer filetype)\n function M.start(bufnr, lang)\n   bufnr = bufnr or api.nvim_get_current_buf()\n-  local parser = M._get_parser(bufnr, lang)\n-  if not parser then\n-    vim.notify('No parser for the given buffer.', vim.log.levels.WARN)\n-    return\n-  end\n+  local parser = assert(\n+    M.get_parser(bufnr, lang, { error = false }),\n+    string.format(",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1774765098",
            "id": 1774765098,
            "in_reply_to_id": 1774669213,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pyMQq",
            "original_commit_id": "0fbac2e0e1918660eabcba628bc168c25bed56d9",
            "original_line": 431,
            "original_position": 92,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2327501696,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774765098/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-25T08:07:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1774765098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1777950563"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1777950563"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it maybe could, due to being called in the `autocmd` at the bottom. Not certain but maybe best to add an error message just in case\r\n\r\nEdit: this is no longer necessary due to `get_parser` returning its own error message",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T03:00:47Z",
            "diff_hunk": "@@ -114,7 +114,7 @@ local function compute_folds_levels(bufnr, info, srow, erow, parse_injections)\n   srow = srow or 0\n   erow = erow or api.nvim_buf_line_count(bufnr)\n \n-  local parser = assert(ts._get_parser(bufnr))\n+  local parser = assert(ts.get_parser(bufnr, nil, { error = false }))",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1777950563",
            "id": 1777950563,
            "in_reply_to_id": 1774697378,
            "line": 117,
            "node_id": "PRRC_kwDOAPphoM5p-V9j",
            "original_commit_id": "0fbac2e0e1918660eabcba628bc168c25bed56d9",
            "original_line": 117,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_fold.lua",
            "position": 5,
            "pull_request_review_id": 2332663955,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1777950563/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T16:23:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1777950563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778925777"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778925777"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      local err_msg = string.format('Parser not found for buffer %s: invalid language \"%s\"', bufnr, lang)\r\n```",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:14:25Z",
            "diff_hunk": "@@ -94,12 +100,21 @@ function M._get_parser(bufnr, lang, opts)\n \n   if not valid_lang(lang) then\n     if not parsers[bufnr] then\n-      return nil\n+      local err_msg = string.format('Parser not found for buffer %s: invalid language', bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778925777",
            "id": 1778925777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qCEDR",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 103,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2334248945,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778925777/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:15:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778925777",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778926630"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778926630"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        string.format('Parser could not be created for buffer %s and language \"%s\"', bufnr, lang)\r\n```",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:15:23Z",
            "diff_hunk": "@@ -94,12 +100,21 @@ function M._get_parser(bufnr, lang, opts)\n \n   if not valid_lang(lang) then\n     if not parsers[bufnr] then\n-      return nil\n+      local err_msg = string.format('Parser not found for buffer %s: invalid language', bufnr)\n+      if should_error then\n+        error(err_msg)\n+      end\n+      return nil, err_msg\n     end\n   elseif parsers[bufnr] == nil or parsers[bufnr]:lang() ~= lang then\n     local parser = vim.F.npcall(M._create_parser, bufnr, lang, opts)\n     if not parser then\n-      return nil\n+      local err_msg =\n+        string.format('Parser could not be created for buffer %s, lang \"%s\"', bufnr, lang)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778926630",
            "id": 1778926630,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qCEQm",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 113,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2334250461,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778926630/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:15:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778926630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778927655"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778927655"
                }
            },
            "author_association": "MEMBER",
            "body": "could `assert` here a well",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:16:27Z",
            "diff_hunk": "@@ -595,9 +600,10 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778927655",
            "id": 1778927655,
            "line": 603,
            "node_id": "PRRC_kwDOAPphoM5qCEgn",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 603,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": 31,
            "pull_request_review_id": 2334252247,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778927655/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:16:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778927655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778927915"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778927915"
                }
            },
            "author_association": "MEMBER",
            "body": "assert?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:16:46Z",
            "diff_hunk": "@@ -1028,7 +1028,10 @@ end\n ---\n --- @param lang? string language to open the query editor for. If omitted, inferred from the current buffer's filetype.\n function M.edit(lang)\n-  vim.treesitter.dev.edit_query(lang)\n+  local _, err_msg = vim.treesitter.dev.edit_query(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778927915",
            "id": 1778927915,
            "line": 1032,
            "node_id": "PRRC_kwDOAPphoM5qCEkr",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 1032,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": 6,
            "pull_request_review_id": 2334252727,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778927915/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:16:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778927915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778941486"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778941486"
                }
            },
            "author_association": "MEMBER",
            "body": "I think maybe it should be changed to `language could not be determined`? It isn't clear from the code (and I didn't make it clear enough here) that `lang` will always be `nil` right here (or empty string)",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:30:19Z",
            "diff_hunk": "@@ -94,12 +100,21 @@ function M._get_parser(bufnr, lang, opts)\n \n   if not valid_lang(lang) then\n     if not parsers[bufnr] then\n-      return nil\n+      local err_msg = string.format('Parser not found for buffer %s: invalid language', bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778941486",
            "id": 1778941486,
            "in_reply_to_id": 1778925777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qCH4u",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 103,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2334276691,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778941486/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:30:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778941486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778945319"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778945319"
                }
            },
            "author_association": "MEMBER",
            "body": "I thought about that but I think it cannot be done here since `edit_query` returns `nil` even upon success (meaning the assertion would always fail). That's why I think it should return true on success but maybe could be done in a small follow-up PR? To lubricate the merging of this one",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:34:31Z",
            "diff_hunk": "@@ -1028,7 +1028,10 @@ end\n ---\n --- @param lang? string language to open the query editor for. If omitted, inferred from the current buffer's filetype.\n function M.edit(lang)\n-  vim.treesitter.dev.edit_query(lang)\n+  local _, err_msg = vim.treesitter.dev.edit_query(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778945319",
            "id": 1778945319,
            "in_reply_to_id": 1778927915,
            "line": 1032,
            "node_id": "PRRC_kwDOAPphoM5qCI0n",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 1032,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": 6,
            "pull_request_review_id": 2334283007,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778945319/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:34:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778945319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778946407"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778946407"
                }
            },
            "author_association": "MEMBER",
            "body": "I thought `edit_query` was meant to return `nil, err_msg` while `query.edit` should do the actual assertion?",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:35:43Z",
            "diff_hunk": "@@ -595,9 +600,10 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778946407",
            "id": 1778946407,
            "in_reply_to_id": 1778927655,
            "line": 603,
            "node_id": "PRRC_kwDOAPphoM5qCJFn",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 603,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": 31,
            "pull_request_review_id": 2334284796,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778946407/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:35:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778946407",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778951463"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778951463"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, thank you, I missed that!",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:40:54Z",
            "diff_hunk": "@@ -94,12 +100,21 @@ function M._get_parser(bufnr, lang, opts)\n \n   if not valid_lang(lang) then\n     if not parsers[bufnr] then\n-      return nil\n+      local err_msg = string.format('Parser not found for buffer %s: invalid language', bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778951463",
            "id": 1778951463,
            "in_reply_to_id": 1778925777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qCKUn",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 103,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 2334292838,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778951463/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:40:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778951463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778952658"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778952658"
                }
            },
            "author_association": "MEMBER",
            "body": "Right, sorry, I keep getting these two mixed up. I see now that you return here rather than `error`, so this is fine of course.",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:42:11Z",
            "diff_hunk": "@@ -595,9 +600,10 @@ function M.edit_query(lang)\n   end\n   vim.cmd(cmd)\n \n-  local parser = vim.treesitter._get_parser(buf, lang)\n+  local parser = vim.treesitter.get_parser(buf, lang, { error = false })",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778952658",
            "id": 1778952658,
            "in_reply_to_id": 1778927655,
            "line": 603,
            "node_id": "PRRC_kwDOAPphoM5qCKnS",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 603,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": 31,
            "pull_request_review_id": 2334294814,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778952658/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:42:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778952658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30382#discussion_r1778953807"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30382"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778953807"
                }
            },
            "author_association": "MEMBER",
            "body": "Please add a todo then. (And let's follow up quickly ;))",
            "commit_id": "8df9c6b122b867018247d4c7b5cda171d667555d",
            "created_at": "2024-09-27T17:43:20Z",
            "diff_hunk": "@@ -1028,7 +1028,10 @@ end\n ---\n --- @param lang? string language to open the query editor for. If omitted, inferred from the current buffer's filetype.\n function M.edit(lang)\n-  vim.treesitter.dev.edit_query(lang)\n+  local _, err_msg = vim.treesitter.dev.edit_query(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/30382#discussion_r1778953807",
            "id": 1778953807,
            "in_reply_to_id": 1778927915,
            "line": 1032,
            "node_id": "PRRC_kwDOAPphoM5qCK5P",
            "original_commit_id": "9170c2408c3ef95d63aa67e1bd62d89347a5c6f1",
            "original_line": 1032,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": 6,
            "pull_request_review_id": 2334296728,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778953807/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T17:43:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778953807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@ribru17 I think the query linter may be broken by the change as well? (Sorry, don't have the time to bisect right now; just wanted to note this down somewhere.) Looks like `language.inspect()` fails now?\r\n\r\nBut #30379 seems to fix it again :)",
            "created_at": "2024-09-18T07:34:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2357721014",
            "id": 2357721014,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6Mh_e2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2357721014/reactions"
            },
            "updated_at": "2024-09-18T07:41:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2357721014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I tried and it seems to work for me, both with this change and just with the previous `get_parser` change",
            "created_at": "2024-09-19T01:05:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2359704413",
            "id": 2359704413,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6Mpjtd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2359704413/reactions"
            },
            "updated_at": "2024-09-19T01:05:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2359704413",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ... is there any reason you switched from calling the private function in our code (which is exactly what it's for ;)) to calling the public function with explicit option in this PR? ...\r\n\r\nI think it was a reaction to [this comment](https://github.com/neovim/neovim/pull/30382#discussion_r1759985116) which *did* suggest not creating `_get_parser()` as it is mostly obsolete. I guess it is a miscommunication over the followed \"Yes, that todo is obsolete now.\".",
            "created_at": "2024-09-19T11:20:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2360711651",
            "id": 2360711651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6MtZnj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2360711651/reactions"
            },
            "updated_at": "2024-09-19T11:20:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2360711651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > ... is there any reason you switched from calling the private function in our code (which is exactly what it's for ;)) to calling the public function with explicit option in this PR? ...\r\n> \r\n> I think it was a reaction to [this comment](https://github.com/neovim/neovim/pull/30382#discussion_r1759985116) which _did_ suggest not creating `_get_parser()` as it is mostly obsolete. I guess it is a miscommunication over the followed \"Yes, that todo is obsolete now.\".\r\n\r\nAh, ok, I missed that `_get_parser` is gone completely (change view was confusing...)\r\n\r\nThat's fine, but since we don't have a standard deprecation warning, we should probably still have a `todo` about removing the option -- or is the documentation warning enough?",
            "created_at": "2024-09-19T11:37:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2360746568",
            "id": 2360746568,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6MtiJI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2360746568/reactions"
            },
            "updated_at": "2024-09-19T11:37:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2360746568",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That's fine, but since we don't have a standard deprecation warning, we should probably still have a `todo` about removing the option -- or is the documentation warning enough?\r\n\r\nI added a test indicating the option should be removed in 0.12, maybe that + the documentation warning is enough?",
            "created_at": "2024-09-19T20:15:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2362094725",
            "id": 2362094725,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6MyrSF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2362094725/reactions"
            },
            "updated_at": "2024-09-19T20:15:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2362094725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ribru17 sorry for holding this up -- could you change the errors/asserts to align with @mfussenegger's suggestions (in particular, include the context (language) in the messages?) Then I think we can merge.\r\n\r\n(If you prefer not to do it, let me know and I'll add a todo instead and try to address it in my follow-up PR.)",
            "created_at": "2024-09-24T11:22:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2370982928",
            "id": 2370982928,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NUlQQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2370982928/reactions"
            },
            "updated_at": "2024-09-24T11:22:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2370982928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> you change the errors/asserts to align with mfussenegger's suggestions\r\n\r\nAfter https://github.com/neovim/neovim/pull/30240 these will be documented in `:help dev-error-patterns`.",
            "created_at": "2024-09-24T11:43:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2371028223",
            "id": 2371028223,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NUwT_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371028223/reactions"
            },
            "updated_at": "2024-09-24T11:43:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371028223",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@clason No worries, sorry for the delay I'll fix this up today once I am at my computer",
            "created_at": "2024-09-24T14:25:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2371458241",
            "id": 2371458241,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NWZTB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371458241/reactions"
            },
            "updated_at": "2024-09-24T14:25:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371458241",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There was a lot of discussion here and I want to make sure I get this right- the consensus is to use `assert` in `edit_query()` and return `nil, err_msg` (with a more descriptive, dynamic error message) in `TSTreeView:new`?",
            "created_at": "2024-09-24T16:09:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2371730957",
            "id": 2371730957,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NXb4N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371730957/reactions"
            },
            "updated_at": "2024-09-24T16:09:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371730957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> There was a lot of discussion here and I want to make sure I get this right- the consensus is to use `assert` in `edit_query()` and \r\n\r\nNo, I think the suggestion was to return `nil, err` in `edit_query()` and `assert` in `query.edit()` (I missed that little bit of indirection, hence the confusion).\r\n\r\n> return `nil, err_msg` (with a more descriptive, dynamic error message) in `TSTreeView:new`?\r\n\r\nCorrect, and `assert` in `inspect_tree()` (which one?)\r\n\r\n(And make sure to build the error message conditionally on failure.)\r\n\r\n@gpanders did I get that right?",
            "created_at": "2024-09-24T16:14:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2371743233",
            "id": 2371743233,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NXe4B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371743233/reactions"
            },
            "updated_at": "2024-09-24T16:15:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371743233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (And make sure to build the error message conditionally on failure.)\r\n\r\nGotcha, so I'm guessing this error should be of the form `if condition then error(msg) end`",
            "created_at": "2024-09-24T16:46:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2371814207",
            "id": 2371814207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NXwM_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371814207/reactions"
            },
            "updated_at": "2024-09-24T16:46:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371814207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "or `if condition then return nil, string.format(...) end` (rather than having the format outside the condition)\r\n\r\nThe `assert` just catches and exposes that message; it shouldn't need to do its own formatting.",
            "created_at": "2024-09-24T16:48:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2371819134",
            "id": 2371819134,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NXxZ-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371819134/reactions"
            },
            "updated_at": "2024-09-24T16:50:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371819134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Alright, I think this is good to go- I made the last commit a fixup so it would be easier to see what changed. Looks like `inspect_tree` already handled assertion logic (around `TSTreeView`) so I was able to leave that unchanged\r\n\r\nI think in the future it would be good to have `edit_query` return `true` on success so that way there is a reason to return `nil` in the first argument of the failure case (right now it's weird because it will return `nil` anyway)\r\n\r\nEdit: ok CI doesn't like fixup haha just gonna squash",
            "created_at": "2024-09-24T17:46:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2371928682",
            "id": 2371928682,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NYMJq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371928682/reactions"
            },
            "updated_at": "2024-09-24T17:47:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371928682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think in the future it would be good to have edit_query return true on success so that way there is a reason to return nil in the first argument of the failure case (right now it's weird because it will return nil anyway)\n\nLet's leave it for now, since we might come up with a better thing to return in the future (which is probably going to be truthy, but still).",
            "created_at": "2024-09-24T18:04:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/30382#issuecomment-2371962157",
            "id": 2371962157,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
            "node_id": "IC_kwDOAPphoM6NYUUt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371962157/reactions"
            },
            "updated_at": "2024-09-24T18:04:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2371962157",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30382/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30382/commits",
    "created_at": "2024-09-14T20:01:46Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30382.diff",
    "draft": false,
    "head": {
        "label": "ribru17:get_parser_warn_fix",
        "ref": "get_parser_warn_fix",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2024-09-30T00:04:56Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 280752,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2024-09-29T17:25:26Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8df9c6b122b867018247d4c7b5cda171d667555d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30382",
    "id": 2072445128,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30382",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 7015106619,
            "name": "comment",
            "node_id": "LA_kwDOAPphoM8AAAABoiIIOw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/comment"
        }
    ],
    "locked": false,
    "merge_commit_sha": "0f067cd34d09b38f9aaf2e1732d825e89b573077",
    "merged_at": "2024-09-27T22:31:45Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM57hwDI",
    "number": 30382,
    "patch_url": "https://github.com/neovim/neovim/pull/30382.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30382/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8df9c6b122b867018247d4c7b5cda171d667555d",
    "title": "fix(treesitter): suppress get_parser warnings via opts.error",
    "updated_at": "2024-09-28T15:25:51Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30382",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17"
    }
}