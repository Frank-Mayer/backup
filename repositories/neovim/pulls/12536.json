{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/12536/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/12536/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/12536"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/12536"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/12536/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/5f9034907157860adb9915a40d2556e0bf503839"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5646,
            "forks_count": 5646,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1800,
            "open_issues_count": 1800,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-10-15T01:40:54Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 289049,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 82517,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-10-15T02:03:54Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 82517,
            "watchers_count": 82517,
            "web_commit_signoff_required": false
        },
        "sha": "94b7ff730a1914c14f347f5dc75175dc34a4b3f5",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Proposal:\r\n\r\nAdd ability to run lua to inspect current keys and do whatever you want with them.\r\n\r\nWhy:\r\n\r\nI want to show recently typed keys in a little floating window for streaming :)\r\n\r\n\r\n@kdheepak Here's what I was thinking for taking the key logging / viewer to a whole different level.\r\n\r\n",
    "closed_at": "2020-08-14T14:03:18Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r445790262"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/445790262"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n    error(string.format(\"Error executing 'on_keystroke' with indices of '%s'\", table.concat(errored_callbacks, \", \")))\r\n```",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-06-25T19:30:10Z",
            "diff_hunk": "@@ -478,4 +478,52 @@ function vim.defer_fn(fn, timeout)\n   return timer\n end\n \n+local on_keystroke_callbacks = {}\n+\n+--- Register a lua {fn} with an {id} to be run after every keystroke.\n+---\n+--- NOTE: {fn} will be automatically removed if an error occurs while calling.\n+---\n+--@param id string: Name of the ID. For plugin authors, should be unique to plugin.\n+--@param fn function: Function to call. It should take one argument, which is a string.\n+--                    The string will contain the literal keys typed.\n+--                    See |i_CTRL-V|\n+function vim.register_keystroke_callback(id, fn)\n+  vim.validate { fn = { fn, 'c', true} }\n+\n+  on_keystroke_callbacks[id] = fn\n+  return id\n+end\n+\n+--- Remove {id} from running on keystroke.\n+---\n+--@param id string: Name of the ID. For plugin authors, should be unique to plugin.\n+function vim.remove_keystroke_callback(id)\n+  vim.validate { id = { id, 's' } }\n+\n+  on_keystroke_callbacks[id] = nil\n+end\n+\n+--- Function that executes the keystroke callbacks.\n+---\n+--- Private since no one should really need to call this outside of internal use.\n+function vim._execute_on_keystroke(buf)\n+  local errored_callbacks = {}\n+  for k, v in pairs(on_keystroke_callbacks) do\n+    if not pcall(v, buf) then\n+      -- Insert at the beginning of the table\n+      table.insert(errored_callbacks, 1, k)\n+    end\n+  end\n+\n+  -- Remove errored_callbacks\n+  for _, index in ipairs(errored_callbacks) do\n+    on_keystroke_callbacks[index] = nil\n+  end\n+\n+  if not vim.tbl_isempty(errored_callbacks) then\n+    error(string.format(\"Error executing 'on_keystroke' with indeces of '%s'\", table.concat(errored_callbacks, \", \")))",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r445790262",
            "id": 445790262,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5MDI2Mg==",
            "original_commit_id": "ec3310d57b3dffdf1efedb10676baf0bae8677b8",
            "original_line": 525,
            "original_position": 48,
            "original_start_line": null,
            "path": "src/nvim/lua/vim.lua",
            "position": null,
            "pull_request_review_id": 437796185,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/445790262/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/445790262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1813121?v=4",
                "events_url": "https://api.github.com/users/kdheepak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kdheepak/followers",
                "following_url": "https://api.github.com/users/kdheepak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kdheepak",
                "id": 1813121,
                "login": "kdheepak",
                "node_id": "MDQ6VXNlcjE4MTMxMjE=",
                "organizations_url": "https://api.github.com/users/kdheepak/orgs",
                "received_events_url": "https://api.github.com/users/kdheepak/received_events",
                "repos_url": "https://api.github.com/users/kdheepak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kdheepak"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r445940261"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/445940261"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't this be something like `ns_id` in `nvim_buf_set_virtual_text()`?",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-06-26T02:47:35Z",
            "diff_hunk": "@@ -801,6 +801,28 @@ vim.region({bufnr}, {pos1}, {pos2}, {type}, {inclusive})       *vim.region()*\n         whether the selection is inclusive or not, into a zero-indexed table \n         of linewise selections of the form `{linenr = {startcol, endcol}}` .\n \n+vim.register_keystroke_callback({id}, {fn})  *vim.register_keystroke_callback()*\n+        Register a lua {fn} with an {id} to be run after every keystroke.\n+\n+        Callbacks will not be run unless 'keystrokecallback' is set.\n+\n+        NOTE: {fn} will be automatically removed if an error occurs while\n+        calling.\n+\n+        Parameters: ~\n+            {id}: (string)  Name of the ID.",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r445940261",
            "id": 445940261,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk0MDI2MQ==",
            "original_commit_id": "c0ad7c83b52e43a9e9841d1d9ab027c3046aed6e",
            "original_line": 891,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 437981224,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/445940261/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/445940261",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r445940572"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/445940572"
                }
            },
            "author_association": "MEMBER",
            "body": "The name implies this _is_ a callback, like one of the `'...expr'` options or `'statusline'`.\r\n\r\nWhy is this needed?  If there are callbacks registered, then we call them, otherwise there's nothing to do.  This feels like it should just be an autocmd (`Input` event?), which would also allow easily restricting it to a specific buffer, if needed.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-06-26T02:49:12Z",
            "diff_hunk": "@@ -3504,6 +3504,12 @@ A jump table for the options with a short description can be found at |Q_op|.\n \t<PageUp> and <PageDown>.\n \tThe 'keymodel' option is set by the |:behave| command.\n \n+\t\t\t\t\t*'keystrokecallback'* *'kscb'*\n+'keystrokecallback' 'kscb'  boolean (default: false)",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r445940572",
            "id": 445940572,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk0MDU3Mg==",
            "original_commit_id": "c0ad7c83b52e43a9e9841d1d9ab027c3046aed6e",
            "original_line": 3508,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": null,
            "pull_request_review_id": 437981224,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/445940572/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/445940572",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r446142741"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/446142741"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, yes, that is a good point.\r\n\r\nThe reason I want to do this (have an option to disable it) is I don't want to have to open a new lua stack and check the table every time if people don't want it.\r\n\r\nPerhaps a buffer local option would be better? \r\n\r\nThe reason I don't want to add a new autocmd event is that I want the keystroke callback to be as fast as possible. I don't want to parse commands, call vim functions, etc. I just want to pass a string to luajit and let it do its work.\r\n\r\nI'm not sure if that's a good enough reason, but that's how I was feeling when I wrote it.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-06-26T12:05:16Z",
            "diff_hunk": "@@ -3504,6 +3504,12 @@ A jump table for the options with a short description can be found at |Q_op|.\n \t<PageUp> and <PageDown>.\n \tThe 'keymodel' option is set by the |:behave| command.\n \n+\t\t\t\t\t*'keystrokecallback'* *'kscb'*\n+'keystrokecallback' 'kscb'  boolean (default: false)",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r446142741",
            "id": 446142741,
            "in_reply_to_id": 445940572,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0Mjc0MQ==",
            "original_commit_id": "c0ad7c83b52e43a9e9841d1d9ab027c3046aed6e",
            "original_line": 3508,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": null,
            "pull_request_review_id": 438239856,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/446142741/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/446142741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r446142959"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/446142959"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, and change the name to `keystrokelog` or similar? Maybe `enableonkeystroke`? I can think of the name a bit more.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-06-26T12:05:45Z",
            "diff_hunk": "@@ -3504,6 +3504,12 @@ A jump table for the options with a short description can be found at |Q_op|.\n \t<PageUp> and <PageDown>.\n \tThe 'keymodel' option is set by the |:behave| command.\n \n+\t\t\t\t\t*'keystrokecallback'* *'kscb'*\n+'keystrokecallback' 'kscb'  boolean (default: false)",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r446142959",
            "id": 446142959,
            "in_reply_to_id": 445940572,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0Mjk1OQ==",
            "original_commit_id": "c0ad7c83b52e43a9e9841d1d9ab027c3046aed6e",
            "original_line": 3508,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": null,
            "pull_request_review_id": 438240129,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/446142959/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/446142959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r446143177"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/446143177"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, that seems better. I'll change it to a namespace. That way it will make more sense to clear as well, since you're clearing from the namespace of your app.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-06-26T12:06:19Z",
            "diff_hunk": "@@ -801,6 +801,28 @@ vim.region({bufnr}, {pos1}, {pos2}, {type}, {inclusive})       *vim.region()*\n         whether the selection is inclusive or not, into a zero-indexed table \n         of linewise selections of the form `{linenr = {startcol, endcol}}` .\n \n+vim.register_keystroke_callback({id}, {fn})  *vim.register_keystroke_callback()*\n+        Register a lua {fn} with an {id} to be run after every keystroke.\n+\n+        Callbacks will not be run unless 'keystrokecallback' is set.\n+\n+        NOTE: {fn} will be automatically removed if an error occurs while\n+        calling.\n+\n+        Parameters: ~\n+            {id}: (string)  Name of the ID.",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r446143177",
            "id": 446143177,
            "in_reply_to_id": 445940261,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0MzE3Nw==",
            "original_commit_id": "c0ad7c83b52e43a9e9841d1d9ab027c3046aed6e",
            "original_line": 891,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 438240398,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/446143177/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/446143177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r469468370"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468370"
                }
            },
            "author_association": "MEMBER",
            "body": "How come this assertion doesn't check against the result of `table.concat(KeysPressed, '')` like the others?",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-12T18:47:14Z",
            "diff_hunk": "@@ -1068,6 +1068,115 @@ describe('lua stdlib', function()\n     eq({5,15}, exec_lua[[ return vim.region(0,{1,5},{1,14},'v',true)[1] ]])\n   end)\n \n+  describe('vim.execute_on_keystroke', function()\n+    it('should keep track of keystrokes', function()\n+      helpers.insert([[hello world ]])\n+\n+      exec_lua [[\n+        KeysPressed = {}\n+\n+        vim.register_keystroke_callback(vim.api.nvim_create_namespace(\"logger\"), function(buf)\n+          if buf:byte() == 27 then\n+            buf = \"<ESC>\"\n+          end\n+\n+          table.insert(KeysPressed, buf)\n+        end)\n+      ]]\n+\n+      helpers.insert([[next 🤦 lines å ]])\n+\n+      local next_status = exec_lua [[\n+        return table.concat(KeysPressed, '')\n+      ]]\n+\n+      -- It has escape in the keys pressed\n+      eq('inext 🤦 lines å <ESC>', next_status)\n+    end)\n+\n+    it('should allow removing trackers.', function()\n+      helpers.insert([[hello world]])\n+\n+      exec_lua [[\n+        KeysPressed = {}\n+\n+        return vim.register_keystroke_callback(vim.api.nvim_create_namespace(\"logger\"), function(buf)\n+          if buf:byte() == 27 then\n+            buf = \"<ESC>\"\n+          end\n+\n+          table.insert(KeysPressed, buf)\n+        end)\n+      ]]\n+\n+      helpers.insert([[next lines]])\n+\n+      exec_lua(\"vim.remove_keystroke_callback(vim.api.nvim_create_namespace('logger'))\")\n+\n+      helpers.insert([[more lines]])\n+\n+      local next_status = exec_lua [[\n+        return table.concat(KeysPressed, '')\n+      ]]\n+\n+      -- It has escape in the keys pressed\n+      eq('inext lines<ESC>', next_status)\n+    end)\n+\n+    it('should not call functions that error again.', function()\n+      helpers.insert([[hello world]])\n+\n+      exec_lua [[\n+        KeysPressed = {}\n+\n+        return vim.register_keystroke_callback(vim.api.nvim_create_namespace(\"logger\"), function(buf)\n+          if buf:byte() == 27 then\n+            buf = \"<ESC>\"\n+          end\n+\n+          table.insert(KeysPressed, buf)\n+\n+          if buf == 'l' then\n+            error(\"Dumb Error\")\n+          end\n+        end)\n+      ]]\n+\n+      helpers.insert([[next lines]])\n+      helpers.insert([[more lines]])\n+\n+\n+      local next_status = exec_lua [[\n+        return table.concat(KeysPressed, '')\n+      ]]\n+\n+      -- Only the first letter gets added. After that we remove the callback\n+      eq('inext l', next_status)\n+    end)\n+\n+    it('should process mapped keys, not unmapped keys', function()\n+      exec_lua [[\n+        KeysPressed = {}\n+\n+        vim.cmd(\"inoremap hello world\")\n+\n+        vim.register_keystroke_callback(vim.api.nvim_create_namespace(\"logger\"), function(buf)\n+          if buf:byte() == 27 then\n+            buf = \"<ESC>\"\n+          end\n+\n+          table.insert(KeysPressed, buf)\n+        end)\n+      ]]\n+\n+      helpers.insert(\"hello\")\n+\n+      eq({'i', 'w', 'o', 'r', 'l', 'd', '<ESC>'}, exec_lua [[",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r469468370",
            "id": 469468370,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ2ODM3MA==",
            "original_commit_id": "e60d1d2949f13eaa4b28006195db5d85790829ce",
            "original_line": 1174,
            "original_position": 107,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": null,
            "pull_request_review_id": 466182018,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468370/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r469468748"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468748"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n#ifndef NDEBUG\r\n```",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-12T18:47:52Z",
            "diff_hunk": "@@ -1465,3 +1465,40 @@ void nlua_free_typval_dict(dict_T *const d)\n     d->lua_table_ref = LUA_NOREF;\n   }\n }\n+\n+void nlua_execute_log_keystroke(int c)\n+{\n+  char_u buf[NUMBUFLEN];\n+  buf[special_to_buf(c, mod_mask, false, buf)] = NUL;\n+\n+  lua_State *const lstate = nlua_enter();\n+\n+#ifdef DEBUG",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r469468748",
            "id": 469468748,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ2ODc0OA==",
            "original_commit_id": "e60d1d2949f13eaa4b28006195db5d85790829ce",
            "original_line": 1476,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 466182018,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468748/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468748",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r469468890"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468890"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n#ifndef NDEBUG\r\n```",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-12T18:48:08Z",
            "diff_hunk": "@@ -1465,3 +1465,40 @@ void nlua_free_typval_dict(dict_T *const d)\n     d->lua_table_ref = LUA_NOREF;\n   }\n }\n+\n+void nlua_execute_log_keystroke(int c)\n+{\n+  char_u buf[NUMBUFLEN];\n+  buf[special_to_buf(c, mod_mask, false, buf)] = NUL;\n+\n+  lua_State *const lstate = nlua_enter();\n+\n+#ifdef DEBUG\n+  int top = lua_gettop(lstate);\n+#endif\n+\n+  // [ vim ]\n+  lua_getglobal(lstate, \"vim\");\n+\n+  // [ vim, vim._log_keystroke ]\n+  lua_getfield(lstate, -1, \"_log_keystroke\");\n+  luaL_checktype(lstate, -1, LUA_TFUNCTION);\n+\n+  // [ vim, vim._log_keystroke, buf ]\n+  lua_pushstring(lstate, (const char *)buf);\n+\n+  if (lua_pcall(lstate, 1, 0, 0)) {\n+    nlua_error(\n+        lstate,\n+        _(\"Error executing vim.log_keystroke lua callback: %.*s\"));\n+  }\n+\n+  // [ vim ]\n+  lua_pop(lstate, 1);\n+\n+#ifdef DEBUG",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r469468890",
            "id": 469468890,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ2ODg5MA==",
            "original_commit_id": "e60d1d2949f13eaa4b28006195db5d85790829ce",
            "original_line": 1499,
            "original_position": 35,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 466182018,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468890/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/469468890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r469470164"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/469470164"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nunsigned int special_to_buf(int key, int modifiers, bool keycode, char_u *const dst)\r\n```",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-12T18:50:29Z",
            "diff_hunk": "@@ -530,13 +530,24 @@ unsigned int trans_special(const char_u **srcp, const size_t src_len,\n {\n   int modifiers = 0;\n   int key;\n-  unsigned int dlen = 0;\n \n   key = find_special_key(srcp, src_len, &modifiers, keycode, false, in_string);\n   if (key == 0) {\n     return 0;\n   }\n \n+  return special_to_buf(key, modifiers, keycode, dst);\n+}\n+\n+/// Put the character sequence for \"key\" with \"modifiers\" into \"dst\" and return\n+/// the resulting length.\n+/// When \"keycode\" is TRUE prefer key code, e.g. K_DEL instead of DEL.\n+/// The sequence is not NUL terminated.\n+/// This is how characters in a string are encoded.\n+unsigned int special_to_buf(int key, int modifiers, int keycode, char_u *dst)",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r469470164",
            "id": 469470164,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ3MDE2NA==",
            "original_commit_id": "e60d1d2949f13eaa4b28006195db5d85790829ce",
            "original_line": 547,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/keymap.c",
            "position": null,
            "pull_request_review_id": 466184234,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/469470164/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/469470164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r470068449"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/470068449"
                }
            },
            "author_association": "NONE",
            "body": "Instead of doing this, you could do \r\n```suggestion\r\n  int buf_len = special_to_buf(c, mod_mask, false, buf);\r\n```\r\nand then further down use `lua_pushlstring(lstate, buf, buf_len)` which precalculates the buffer length.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-13T16:15:59Z",
            "diff_hunk": "@@ -1465,3 +1465,40 @@ void nlua_free_typval_dict(dict_T *const d)\n     d->lua_table_ref = LUA_NOREF;\n   }\n }\n+\n+void nlua_execute_log_keystroke(int c)\n+{\n+  char_u buf[NUMBUFLEN];\n+  buf[special_to_buf(c, mod_mask, false, buf)] = NUL;",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r470068449",
            "id": 470068449,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA2ODQ0OQ==",
            "original_commit_id": "f5ebadfc5760af06f998a99dc98fd0063e9ce353",
            "original_line": 1472,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 466914983,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470068449/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470068449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r470069838"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/470069838"
                }
            },
            "author_association": "NONE",
            "body": "Using the terminology `ns_id` implies that `vim.api.nvim_buf_clear_namespace(bufnr, ns_id)` would clear the keystroke callbacks. Otherwise using ns_id here is incorrect, I think.\r\n\r\n```\r\n                Clears namespaced objects (highlights, extmarks, virtual text)\r\n                from a region.\r\n```\r\n\r\nInstead with what you want, I would just take `{fn}` and return an `id` which you can use later to remove the callback. This can just be an incrementing integer since someone probably won't make 4 million callbacks.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-13T16:18:20Z",
            "diff_hunk": "@@ -876,6 +876,32 @@ vim.region({bufnr}, {pos1}, {pos2}, {type}, {inclusive})       *vim.region()*\n         whether the selection is inclusive or not, into a zero-indexed table \n         of linewise selections of the form `{linenr = {startcol, endcol}}` .\n \n+                                             *vim.register_keystroke_callback()*\n+vim.register_keystroke_callback({ns_id}, {fn})",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r470069838",
            "id": 470069838,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA2OTgzOA==",
            "original_commit_id": "f5ebadfc5760af06f998a99dc98fd0063e9ce353",
            "original_line": 880,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 466914983,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470069838/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470069838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r470070546"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/470070546"
                }
            },
            "author_association": "NONE",
            "body": "It would be tremendously getting messages for every keystroke if you made a bug, and people could wrap it in pcall, I suppose. I'm ok with this, but I would consider adding a sentence about the motivation (but not required).",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-13T16:19:34Z",
            "diff_hunk": "@@ -876,6 +876,32 @@ vim.region({bufnr}, {pos1}, {pos2}, {type}, {inclusive})       *vim.region()*\n         whether the selection is inclusive or not, into a zero-indexed table \n         of linewise selections of the form `{linenr = {startcol, endcol}}` .\n \n+                                             *vim.register_keystroke_callback()*\n+vim.register_keystroke_callback({ns_id}, {fn})\n+        Register a lua {fn} with an {ns_id} to be run after every keystroke.\n+\n+        NOTE: {fn} will be automatically removed if an error occurs while\n+        calling.",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r470070546",
            "id": 470070546,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA3MDU0Ng==",
            "original_commit_id": "f5ebadfc5760af06f998a99dc98fd0063e9ce353",
            "original_line": 884,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 466914983,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470070546/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470070546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r470075905"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/470075905"
                }
            },
            "author_association": "NONE",
            "body": "Alternatively\r\n```lua\r\nfunction vim._log_keystroke(char)\r\n  local failed_indices = {}\r\n  local failed_messages = {}\r\n  for k, v in pairs(on_keystroke_callbacks) do\r\n    local ok, err_msg = pcall(v, char)\r\n    if not ok then\r\n      on_keystroke_callbacks[k] = nil\r\n      table.insert(failed_indices, k)\r\n      table.insert(failed_messages, err_msg)\r\n    end\r\n  end\r\n\r\n  if failed_indices[1] then\r\n    error(string.format(\r\n      \"Error executing 'on_keystroke' with indices of '%s'\\n    With messages: %s\",\r\n      table.concat(failed_indices, \", \"),\r\n      table.concat(failed_messages, \"\\n\")))\r\n  end\r\nend\r\n```\r\nNote that deleting from a table is allowed during iteration with pairs. Quote:\r\n\r\n> The behavior of next is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may clear existing fields.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-13T16:28:13Z",
            "diff_hunk": "@@ -489,4 +489,73 @@ function vim.defer_fn(fn, timeout)\n   return timer\n end\n \n+local on_keystroke_callbacks = {}\n+\n+--- Register a lua {fn} with an {id} to be run after every keystroke.\n+---\n+--- NOTE: {fn} will be automatically removed if an error occurs while calling.\n+---\n+--@param ns_id number: See |nvim_create_namesapce()|\n+--@param fn function: Function to call. It should take one argument, which is a string.\n+--                    The string will contain the literal keys typed.\n+--                    See |i_CTRL-V|\n+function vim.register_keystroke_callback(ns_id, fn)\n+  vim.validate {\n+    fn = { fn, 'c', true},\n+    ns_id = { ns_id, function()\n+      if type(ns_id) ~= 'number' then\n+        return false\n+      end\n+\n+      return ns_id > 0\n+    end, 'Must be valid namespace ID. See |:help nvim_create_namespace()|' }\n+  }\n+\n+  on_keystroke_callbacks[ns_id] = fn\n+  return ns_id\n+end\n+\n+--- Remove {id} from running on keystroke.\n+---\n+--@param ns_id number: See |nvim_create_namesapce()|\n+function vim.remove_keystroke_callback(ns_id)\n+  vim.validate { ns_id = { ns_id, 'n' } }\n+\n+  on_keystroke_callbacks[ns_id] = nil\n+end\n+\n+--- Function that executes the keystroke callbacks.\n+--@private\n+function vim._log_keystroke(char)",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r470075905",
            "id": 470075905,
            "line": 527,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA3NTkwNQ==",
            "original_commit_id": "f5ebadfc5760af06f998a99dc98fd0063e9ce353",
            "original_line": 529,
            "original_position": 41,
            "original_start_line": null,
            "path": "src/nvim/lua/vim.lua",
            "position": 39,
            "pull_request_review_id": 466914983,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470075905/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470075905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r470092649"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/470092649"
                }
            },
            "author_association": "NONE",
            "body": "If this is optional to allow using register to *also* remove things, then we should remove the remove_keystroke_callback function and say that you can use `nil` to clear it. Otherwise the optionality should be documented.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-13T16:56:04Z",
            "diff_hunk": "@@ -489,4 +489,73 @@ function vim.defer_fn(fn, timeout)\n   return timer\n end\n \n+local on_keystroke_callbacks = {}\n+\n+--- Register a lua {fn} with an {id} to be run after every keystroke.\n+---\n+--- NOTE: {fn} will be automatically removed if an error occurs while calling.\n+---\n+--@param ns_id number: See |nvim_create_namesapce()|\n+--@param fn function: Function to call. It should take one argument, which is a string.\n+--                    The string will contain the literal keys typed.\n+--                    See |i_CTRL-V|\n+function vim.register_keystroke_callback(ns_id, fn)\n+  vim.validate {\n+    fn = { fn, 'c', true},",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r470092649",
            "id": 470092649,
            "line": 513,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5MjY0OQ==",
            "original_commit_id": "f5ebadfc5760af06f998a99dc98fd0063e9ce353",
            "original_line": 504,
            "original_position": 16,
            "original_start_line": null,
            "path": "src/nvim/lua/vim.lua",
            "position": 25,
            "pull_request_review_id": 466947898,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470092649/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470092649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r470638660"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/470638660"
                }
            },
            "author_association": "NONE",
            "body": "```suggestion\r\n        NOTE: {fn} will *NOT* be cleared from |nvim_buf_clear_namespace()|\r\n```",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2020-08-14T13:55:32Z",
            "diff_hunk": "@@ -876,6 +876,34 @@ vim.region({bufnr}, {pos1}, {pos2}, {type}, {inclusive})       *vim.region()*\n         whether the selection is inclusive or not, into a zero-indexed table \n         of linewise selections of the form `{linenr = {startcol, endcol}}` .\n \n+                                             *vim.register_keystroke_callback()*\n+vim.register_keystroke_callback({fn}, {ns_id})\n+        Register a lua {fn} with an {ns_id} to be run after every keystroke.\n+\n+        Parameters: ~\n+            {fn}: (function): Function to call on keystroke.\n+                    It should take one argument, which is a string.\n+                    The string will contain the literal keys typed.\n+                    See |i_CTRL-V|\n+\n+                    If {fn} is `nil`, it removes the callback for the\n+                    associated {ns_id}.\n+\n+            {ns_id}: (number)  Namespace ID. If not passed or 0, will generate\n+                     and return a new namespace ID from |nvim_create_namespace()|\n+\n+        Return: ~\n+            (number) Namespace ID associated with {fn}\n+\n+        NOTE: {fn} will be automatically removed if an error occurs while\n+        calling. This is to prevent the annoying situation of every keystroke\n+        erroring while trying to remove a broken callback.\n+\n+        NOTE: {fn} will receive the keystrokes after mappings have been\n+        evaluated\n+\n+        NOTE: {fn} will not be cleared from |nvim_buf_clear_namespace()|",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r470638660",
            "id": 470638660,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYzODY2MA==",
            "original_commit_id": "7a862967110355476a016aad3f66cee62ef0c59b",
            "original_line": 905,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 467594300,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470638660/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2020-08-14T14:01:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/470638660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r693516691"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693516691"
                }
            },
            "author_association": "MEMBER",
            "body": "- `-w` was mentioned in the PR discussion, that's a hint that it should be mentioned in the docs here (and the commit message).\r\n- is `on_key` a more conventional name? we should try to use consistent naming conventions. It really helps users and plugin authors discover and reason about the API.\r\n\r\nPR: https://github.com/neovim/neovim/pull/15460",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2021-08-22T15:16:06Z",
            "diff_hunk": "@@ -876,6 +876,34 @@ vim.region({bufnr}, {pos1}, {pos2}, {type}, {inclusive})       *vim.region()*\n         whether the selection is inclusive or not, into a zero-indexed table \n         of linewise selections of the form `{linenr = {startcol, endcol}}` .\n \n+                                             *vim.register_keystroke_callback()*\n+vim.register_keystroke_callback({fn}, {ns_id})\n+        Register a lua {fn} with an {ns_id} to be run after every keystroke.",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r693516691",
            "id": 693516691,
            "line": 881,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzUxNjY5MQ==",
            "original_commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "original_line": 881,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 6,
            "pull_request_review_id": 735586641,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693516691/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-23T02:07:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693516691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r1797537933"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1797537933"
                }
            },
            "author_association": "MEMBER",
            "body": "What is the `i_CTRL-V` tag supposed to mean here? Mentioning it here is quite confusing.",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2024-10-12T03:07:17Z",
            "diff_hunk": "@@ -876,6 +876,34 @@ vim.region({bufnr}, {pos1}, {pos2}, {type}, {inclusive})       *vim.region()*\n         whether the selection is inclusive or not, into a zero-indexed table \n         of linewise selections of the form `{linenr = {startcol, endcol}}` .\n \n+                                             *vim.register_keystroke_callback()*\n+vim.register_keystroke_callback({fn}, {ns_id})\n+        Register a lua {fn} with an {ns_id} to be run after every keystroke.\n+\n+        Parameters: ~\n+            {fn}: (function): Function to call on keystroke.\n+                    It should take one argument, which is a string.\n+                    The string will contain the literal keys typed.\n+                    See |i_CTRL-V|",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r1797537933",
            "id": 1797537933,
            "line": 887,
            "node_id": "PRRC_kwDOAPphoM5rJECN",
            "original_commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "original_line": 887,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 12,
            "pull_request_review_id": 2363725658,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1797537933/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-12T03:07:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1797537933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/12536#discussion_r1797720546"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/12536"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1797720546"
                }
            },
            "author_association": "MEMBER",
            "body": "It is a way to see the \"literal keys typed\".",
            "commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "created_at": "2024-10-12T15:36:42Z",
            "diff_hunk": "@@ -876,6 +876,34 @@ vim.region({bufnr}, {pos1}, {pos2}, {type}, {inclusive})       *vim.region()*\n         whether the selection is inclusive or not, into a zero-indexed table \n         of linewise selections of the form `{linenr = {startcol, endcol}}` .\n \n+                                             *vim.register_keystroke_callback()*\n+vim.register_keystroke_callback({fn}, {ns_id})\n+        Register a lua {fn} with an {ns_id} to be run after every keystroke.\n+\n+        Parameters: ~\n+            {fn}: (function): Function to call on keystroke.\n+                    It should take one argument, which is a string.\n+                    The string will contain the literal keys typed.\n+                    See |i_CTRL-V|",
            "html_url": "https://github.com/neovim/neovim/pull/12536#discussion_r1797720546",
            "id": 1797720546,
            "in_reply_to_id": 1797537933,
            "line": 887,
            "node_id": "PRRC_kwDOAPphoM5rJwni",
            "original_commit_id": "5f9034907157860adb9915a40d2556e0bf503839",
            "original_line": 887,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 12,
            "pull_request_review_id": 2363928777,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1797720546/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-12T15:36:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1797720546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "TODO:\r\n- [x] Some more testing\r\n- [x] Disable the check when you don't have anything in the table (it is very inexpensive to do, but I would still like to make it have \"no change\" for current users).",
            "created_at": "2020-06-25T15:27:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-649621712",
            "id": 649621712,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTYyMTcxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649621712/reactions"
            },
            "updated_at": "2020-06-25T20:40:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649621712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Super neat! I like how simple and elegant the implementation is :)",
            "created_at": "2020-06-25T15:30:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-649625386",
            "id": 649625386,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTYyNTM4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649625386/reactions"
            },
            "updated_at": "2020-06-25T15:30:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649625386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1813121?v=4",
                "events_url": "https://api.github.com/users/kdheepak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kdheepak/followers",
                "following_url": "https://api.github.com/users/kdheepak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kdheepak",
                "id": 1813121,
                "login": "kdheepak",
                "node_id": "MDQ6VXNlcjE4MTMxMjE=",
                "organizations_url": "https://api.github.com/users/kdheepak/orgs",
                "received_events_url": "https://api.github.com/users/kdheepak/received_events",
                "repos_url": "https://api.github.com/users/kdheepak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kdheepak"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh, I forgot to mention motivation. `-w` doesn't work in real time, and it seems weird to make it work in real time as well.\r\n\r\nYou can see some related and compiled information here: https://github.com/kdheepak/keystrokes.nvim Shoutout to @kdheepak for inspiring me to think about how to do this.",
            "created_at": "2020-06-25T19:04:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-649762593",
            "id": 649762593,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTc2MjU5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649762593/reactions"
            },
            "updated_at": "2020-06-25T19:04:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649762593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "NONE",
            "body": "Why not create a vim function that can be used in both Vim script  and lua? ",
            "created_at": "2020-06-25T21:14:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-649820953",
            "id": 649820953,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTgyMDk1Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649820953/reactions"
            },
            "updated_at": "2020-06-25T21:14:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649820953",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tjdevries Is this only enabled when using the `-W` or `-w` flag? Or does it work even if you start nvim normally?",
            "created_at": "2020-06-26T04:45:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-649961666",
            "id": 649961666,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTk2MTY2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649961666/reactions"
            },
            "updated_at": "2020-06-26T04:45:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649961666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1813121?v=4",
                "events_url": "https://api.github.com/users/kdheepak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kdheepak/followers",
                "following_url": "https://api.github.com/users/kdheepak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kdheepak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kdheepak",
                "id": 1813121,
                "login": "kdheepak",
                "node_id": "MDQ6VXNlcjE4MTMxMjE=",
                "organizations_url": "https://api.github.com/users/kdheepak/orgs",
                "received_events_url": "https://api.github.com/users/kdheepak/received_events",
                "repos_url": "https://api.github.com/users/kdheepak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kdheepak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kdheepak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kdheepak"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It always works @kdheepak no need for -w/-W flags",
            "created_at": "2020-06-26T12:06:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-650144122",
            "id": 650144122,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDE0NDEyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650144122/reactions"
            },
            "updated_at": "2020-06-26T12:06:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650144122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Why not create a vim function that can be used in both Vim script and lua?\r\n\r\nTo be honest, I did't want to handle both here for maximum performance. If it is going to be called on every keystroke, I want it to be as lightning fast as possible, and Lua is a first-class language for Neovim now, so every feature does not always have to have a corresponding vim function (at least in my opinion).\r\n\r\nI suppose we could do something like\r\n\r\n```vim\r\nfunction keystroke#register(name, f)\r\n  call luaeval(\"vim.register_keystroke_callback(_A.name, _A.f)\", { 'name': a:name, 'f': a:f })\r\nendfunction\r\n```\r\n\r\nbut I want it to be all Lua side first.",
            "created_at": "2020-06-26T12:11:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-650146096",
            "id": 650146096,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDE0NjA5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650146096/reactions"
            },
            "updated_at": "2020-06-26T12:11:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650146096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Have you measured the performance hit of jumping to Lua to check whether anything's registered rather than checking an option?\r\n\r\nSetting a global option just seems icky to me. :) I can certainly understand not wanting to make this an autocmd.  I mention it mainly because I think this would be _more_ useful if it's not (solely) a global callback.  I think there's going to be a need to either know at registration time that the callback is limited to a specific context (buffer or window) or for the callback to be provided that context.\r\n\r\nVim's [`popup_create()`](https://vimhelp.org/popup.txt.html#popup_create-arguments) has a 'filter' option that [specifies a callback](https://vimhelp.org/popup.txt.html#popup-filter) allowing the popup to choose which keys have an effect and what they do.  This PR could help lay some of the groundwork for the popup sugar on our floating windows.",
            "created_at": "2020-06-26T12:55:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-650163804",
            "id": 650163804,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDE2MzgwNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650163804/reactions"
            },
            "updated_at": "2020-06-26T12:55:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650163804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, thanks @jamessan I will check that out and then maybe grab some of the code required to make that feature work later as well. I haven't actually measured anything in terms of the performance, I just wanted to make it as lean as possible because it happens every keystroke and so far no one has wanted to do this in vimscript or others before, so I didn't think people would want to do it now either ;)\r\n\r\nI mean, when I have it enabled and it's checking stuff and adding to tables and all that, I cannot tell any difference between on or off, so I guess it's not terrible to just leave it on all the time -- I was just hoping to make it so people can literally just \"remove\" this feature from existing by disabling a flag.\r\n\r\n@jamessan do you think having a `register_buf_keystroke_callback` and `register_keystroke_callback` as two separate functions would be good? Or should I do an options dict with `buffer` as one of the opts, to only attach to a certain buffer. ",
            "created_at": "2020-06-26T16:04:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-650259758",
            "id": 650259758,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDI1OTc1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650259758/reactions"
            },
            "updated_at": "2020-06-26T16:04:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650259758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree with @jamessan this seems pretty niche, what's the usecase ? When I watch vimcasts, keys can be intercepted and shown by the terminal recorder I believe",
            "created_at": "2020-06-27T18:37:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-650599608",
            "id": 650599608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDU5OTYwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650599608/reactions"
            },
            "updated_at": "2020-06-27T18:37:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650599608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I agree with @jamessan this seems pretty niche, what's the usecase ? When I watch vimcasts, keys can be intercepted and shown by the terminal recorder I believe\r\n\r\nFor example:\r\n1. You could have a screen logger that does not log your key strokes in your terminal buffers, so that you don't display any keystrokes for password / credentials\r\n2. You could log for only certain filetypes / modes / etc.\r\n3. You could make a plugin for checking if you have used the same keystroke / command several times in a row, and let you know that you should be using some other movement.\r\n\r\nProbably more, but those are just examples that I know of.  Additionally, people clearly already want to be able to track the motions and that's why people have passed around the patch that was mentioned in @kdheepak 's links. I'm proposing a better way than watching a file, but instead actually being able to directly run what you want on a per-keystroke basis.\r\n\r\nIt seems completely non-intrusive since it can be disabled by an option (or perhaps not, but I think an option is a good way to make it off-by-default).\r\n\r\nI think it is a worthwhile addition 😄 \r\n\r\nI will make updates to try and accommodate the feedback above though.",
            "created_at": "2020-06-28T20:39:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-650818659",
            "id": 650818659,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDgxODY1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650818659/reactions"
            },
            "updated_at": "2020-06-28T20:39:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650818659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "NONE",
            "body": "@tjdevries my thought was to use `vim.fn.keystroke_listener_add`, `vim.fn.keystroke_listener_remove` which works in vimscript then intercept in the lua in future to improve perf by `vim.fn.keystroke_listener_add = vim._native_lua_keystroke_listener_add`.",
            "created_at": "2020-06-28T21:36:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-650825098",
            "id": 650825098,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDgyNTA5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650825098/reactions"
            },
            "updated_at": "2020-06-28T22:02:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650825098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, that is a good idea. ",
            "created_at": "2020-06-28T21:47:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-650826240",
            "id": 650826240,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDgyNjI0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650826240/reactions"
            },
            "updated_at": "2020-06-28T21:47:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650826240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "NONE",
            "body": "I proposed something similar regarding this and Justin, Bjorn, and I discussed that it was also related to user created modes (like alternatives to normal,terminal,insert,etc.). I would say that merging this might be premature considering there is more to the design that could be considered, like modiying the keystrokes, per buffer callbacks. So I'm going to :-1: for now.",
            "created_at": "2020-07-02T13:58:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-653021966",
            "id": 653021966,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzAyMTk2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/653021966/reactions"
            },
            "updated_at": "2020-07-02T13:58:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/653021966",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry, I forgot to move it back to WIP after the commetns.\r\n\r\nYeah, I will go back and answer the questions above, but I think it would be very simple to answer a few of the questions above (like per-buffer callbacks, for example).\r\n\r\nI don't know why you'd need to modify the keystrokes for this? This is just to see what people were typing.\r\n\r\nI see this PR as a natural extension of the `-w` and `-W` flags, which are useful, but not for any real-time feedback. This extends that feature in a more powerful and extensible way. Of course, since the callbacks are in Lua, people can do whatever they want with it afterward.",
            "created_at": "2020-07-02T14:11:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-653029513",
            "id": 653029513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzAyOTUxMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/653029513/reactions"
            },
            "updated_at": "2020-07-02T14:11:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/653029513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@norcalli @jamessan \r\n\r\nI have removed the keystroke handling part of this PR, as we'll need to have a bit more discussion about how that will work (especially with forward thinking about user modes and more). This will be handled in a separate PR.\r\n\r\n I have removed the global option, as it is pretty useless and icky (as mentioned by @jamessan ). \r\n\r\nI have kept the tests that are applicable and updated the documentation as well.\r\n\r\nWhile I understand the PR seems somewhat niche, there are already plugins and people doing interesting things based off of this WIP PR (see https://github.com/theprimeagen/vim-apm and https://github.com/ThePrimeagen/vim-apm/tree/timings) and I'd like to add some of my own features on top of it as well.\r\n\r\nIt is not possible to reproduce this kind of work just from the output of -W since you cannot run code at the moment of the keystroke.\r\n\r\nFor example, to answer @jamessan 's point about \"buffer local\" versions of this, you can simply do something like checking if the current buffer is the one that you want to be executing (and this is how I plan on not showing keystrokes done in the terminal for my eventual screen keys ",
            "created_at": "2020-08-11T18:50:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-672192796",
            "id": 672192796,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjE5Mjc5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/672192796/reactions"
            },
            "updated_at": "2020-08-11T18:50:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/672192796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I will not add a vimscript version of this, although if someone wanted to go through the work in the future, I will not oppose the PR.",
            "created_at": "2020-08-11T18:51:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-672193100",
            "id": 672193100,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjE5MzEwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/672193100/reactions"
            },
            "updated_at": "2020-08-11T18:51:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/672193100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Cool, answered those comments (and just removed the intermediate variable in the tests, since it didn't really need to be there at all).",
            "created_at": "2020-08-12T20:24:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/12536#issuecomment-673092395",
            "id": 673092395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzA5MjM5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/673092395/reactions"
            },
            "updated_at": "2020-08-12T20:24:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/673092395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12536/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/12536/commits",
    "created_at": "2020-06-25T15:26:16Z",
    "diff_url": "https://github.com/neovim/neovim/pull/12536.diff",
    "draft": false,
    "head": {
        "label": "tjdevries:tjdevries/keystrokes",
        "ref": "tjdevries/keystrokes",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tjdevries/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tjdevries/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tjdevries/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tjdevries/neovim/branches{/branch}",
            "clone_url": "https://github.com/tjdevries/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tjdevries/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tjdevries/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tjdevries/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tjdevries/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tjdevries/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tjdevries/neovim/contributors",
            "created_at": "2016-03-22T17:52:01Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tjdevries/neovim/deployments",
            "description": "Vim-fork focused on extensibility and agility. Consider helping sustain Neovim development! ",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tjdevries/neovim/downloads",
            "events_url": "https://api.github.com/repos/tjdevries/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tjdevries/neovim/forks",
            "full_name": "tjdevries/neovim",
            "git_commits_url": "https://api.github.com/repos/tjdevries/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tjdevries/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tjdevries/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tjdevries/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://salt.bountysource.com/teams/neovim",
            "hooks_url": "https://api.github.com/repos/tjdevries/neovim/hooks",
            "html_url": "https://github.com/tjdevries/neovim",
            "id": 54496822,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tjdevries/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tjdevries/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tjdevries/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tjdevries/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tjdevries/neovim/labels{/name}",
            "language": "VimL",
            "languages_url": "https://api.github.com/repos/tjdevries/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tjdevries/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tjdevries/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnk1NDQ5NjgyMg==",
            "notifications_url": "https://api.github.com/repos/tjdevries/neovim/notifications{?since,all,participating}",
            "open_issues": 6,
            "open_issues_count": 6,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tjdevries/neovim/pulls{/number}",
            "pushed_at": "2023-01-06T16:36:16Z",
            "releases_url": "https://api.github.com/repos/tjdevries/neovim/releases{/id}",
            "size": 220153,
            "ssh_url": "git@github.com:tjdevries/neovim.git",
            "stargazers_count": 8,
            "stargazers_url": "https://api.github.com/repos/tjdevries/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tjdevries/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tjdevries/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tjdevries/neovim/subscription",
            "svn_url": "https://github.com/tjdevries/neovim",
            "tags_url": "https://api.github.com/repos/tjdevries/neovim/tags",
            "teams_url": "https://api.github.com/repos/tjdevries/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tjdevries/neovim/git/trees{/sha}",
            "updated_at": "2023-01-28T15:11:08Z",
            "url": "https://api.github.com/repos/tjdevries/neovim",
            "visibility": "public",
            "watchers": 8,
            "watchers_count": 8,
            "web_commit_signoff_required": false
        },
        "sha": "5f9034907157860adb9915a40d2556e0bf503839",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
            "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
            "followers_url": "https://api.github.com/users/tjdevries/followers",
            "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tjdevries",
            "id": 4466899,
            "login": "tjdevries",
            "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
            "organizations_url": "https://api.github.com/users/tjdevries/orgs",
            "received_events_url": "https://api.github.com/users/tjdevries/received_events",
            "repos_url": "https://api.github.com/users/tjdevries/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tjdevries"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/12536",
    "id": 440095207,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12536",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "3ccdbc570d856ee3ff1f64204e352a40b9030ac2",
    "merged_at": "2020-08-14T14:03:18Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDQwMDk1MjA3",
    "number": 12536,
    "patch_url": "https://github.com/neovim/neovim/pull/12536.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/12536/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/5f9034907157860adb9915a40d2556e0bf503839",
    "title": "Lua: Execute callback on keystroke",
    "updated_at": "2024-10-12T15:36:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/12536",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
        "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
        "followers_url": "https://api.github.com/users/tjdevries/followers",
        "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
        "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tjdevries",
        "id": 4466899,
        "login": "tjdevries",
        "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
        "organizations_url": "https://api.github.com/users/tjdevries/orgs",
        "received_events_url": "https://api.github.com/users/tjdevries/received_events",
        "repos_url": "https://api.github.com/users/tjdevries/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tjdevries"
    }
}