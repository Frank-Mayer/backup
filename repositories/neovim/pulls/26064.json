{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26064/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26064/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26064"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26064"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26064/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4983,
            "forks_count": 4983,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1688,
            "open_issues_count": 1688,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-17T01:59:41Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 239093,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70942,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-17T01:19:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70942,
            "watchers_count": 70942,
            "web_commit_signoff_required": false
        },
        "sha": "4bf47222c973c4bc935d6fde106329f8a0e103e3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Use the XTGETTCAP sequence to determine if the host terminal supports the OSC 52 sequence and, if it does, enable the OSC 52 clipboard provider by default.\r\n\r\nThis is only done automatically when all of the following are true:\r\n\r\n  1. Nvim is running in the TUI\r\n  2. 'clipboard' is not set to unnamed or unnamedplus\r\n  3. `g:clipboard` is unset\r\n  4. Nvim is running in an SSH connection ($SSH_TTY is set)\r\n  5. Nvim is not running inside tmux ($TMUX is unset)\r\n\r\n---\r\n\r\nThis branch is rebased on https://github.com/neovim/neovim/pull/26061, which is a prerequisite for this PR.\r\n\r\ncc @justinmk \r\n\r\nRelevant discussion: https://github.com/neovim/neovim/issues/3344#issuecomment-1808677428",
    "closed_at": "2023-11-16T18:21:24Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395539476"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395539476"
                }
            },
            "author_association": "MEMBER",
            "body": "Out of scope here, but if the terminal supports XTGETTCAP we should ignore terminfo entirely (by default at least).",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T11:14:17Z",
            "diff_hunk": "@@ -0,0 +1,86 @@\n+local M = {}\n+\n+--- Hex encode a string.\n+---\n+--- @param str string String to encode\n+--- @return string Hex encoded string\n+local function hexencode(str)\n+  local bytes = { str:byte(1, #str) }\n+  local enc = {} ---@type string[]\n+  for i = 1, #bytes do\n+    enc[i] = string.format('%02X', bytes[i])\n+  end\n+  return table.concat(enc)\n+end\n+\n+--- Hex decode a string.\n+---\n+--- @param enc string String to decode\n+--- @return string Decoded string\n+local function hexdecode(enc)\n+  assert(#enc % 2 == 0, 'string must have an even number of hex characters')\n+  local str = {} ---@type string[]\n+  for i = 1, #enc, 2 do\n+    local n = assert(tonumber(string.format('0x%s', enc:sub(i, i + 1))))\n+    str[#str + 1] = string.char(n)\n+  end\n+  return table.concat(str)\n+end\n+\n+--- Query the host terminal emulator for terminfo capabilities.\n+---\n+--- This function sends the XTGETTCAP DCS sequence to the host terminal emulator asking the terminal\n+--- to send us its terminal capabilities. These are strings that are normally taken from a terminfo\n+--- file, however an up to date terminfo database is not always available (particularly on remote\n+--- machines), and many terminals continue to misidentify themselves or do not provide their own\n+--- terminfo file, making the terminfo database unreliable.\n+---\n+--- Querying the terminal guarantees that we get a truthful answer, but only if the host terminal\n+--- emulator supports the XTGETTCAP sequence.",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395539476",
            "id": 1395539476,
            "line": 12,
            "node_id": "PRRC_kwDOAPphoM5TLj4U",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 12,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/termcap.lua",
            "position": 12,
            "pull_request_review_id": 1734122654,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395539476/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T11:14:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395539476",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395546234"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395546234"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm wondering if we should discourage this. Bracketed paste makes it rather unnecessary.\r\n\r\n```suggestion\r\nimplications), so using OSC 52 for pasting may not be possible (and not necessary, because you can |paste| instead using your system paste function). Users may need\r\n```",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T11:20:09Z",
            "diff_hunk": "@@ -254,33 +254,25 @@ For Windows WSL, try this g:clipboard definition:\n                 \\   'cache_enabled': 0,\n                 \\ }\n <\n-\t\t\t\t\t\t\t    *clipboard-osc52*\n+\t\t\t\t\t\t   *clipboard-osc52* *g:osc52*\n Nvim bundles a clipboard provider that allows copying to the system clipboard\n using OSC 52. OSC 52 is an Operating System Command control sequence that\n writes the copied text to the terminal emulator. If the terminal emulator\n supports OSC 52 then it will write the copied text into the system clipboard.\n \n-This is most useful when using Nvim remotely (e.g. via ssh) as Nvim does not\n-have direct access to the system clipboard in that case.\n-\n-Because not all terminal emulators support OSC 52, this provider must be opted\n-into explicitly by setting the following |g:clipboard| definition: >lua\n-\n-    vim.g.clipboard = {\n-      name = 'OSC 52',\n-      copy = {\n-        ['+'] = require('vim.ui.clipboard.osc52').copy,\n-        ['*'] = require('vim.ui.clipboard.osc52').copy,\n-      },\n-      paste = {\n-        ['+'] = require('vim.ui.clipboard.osc52').paste,\n-        ['*'] = require('vim.ui.clipboard.osc52').paste,\n-      },\n-    }\n-<\n+Nvim can attempt to automatically determine if the host terminal emulator\n+supports the OSC 52 sequence and enable the OSC 52 clipboard provider if it\n+does. This behavior is set by the |g:osc52| variable. If unset (nil) then Nvim\n+will only attempt to detect OSC 52 support automatically when $SSH_TTY is set,\n+$TMUX is unset, and 'clipboard' is not set to \"unnamed\" or \"unnamedplus\". If\n+|g:osc52| is false, Nvim will never use the OSC 52 clipboard provider. If\n+|g:osc52| is true, Nvim will always use the OSC 52 clipboard provider,\n+regardless of the values of $SSH_TTY and $TMUX.\n+\n Note that not all terminal emulators support reading from the system clipboard\n (and even for those that do, users should be aware of the security\n-implications), so using OSC 52 for pasting may not be possible.\n+implications), so using OSC 52 for pasting may not be possible. Users may need",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395546234",
            "id": 1395546234,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TLlh6",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 274,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/doc/provider.txt",
            "position": null,
            "pull_request_review_id": 1734133541,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395546234/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T14:20:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395546234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395551258"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395551258"
                }
            },
            "author_association": "MEMBER",
            "body": "Should we put this in `vim.codec.hex.encode`? Then base64 could live in `vim.codec.base64`.\r\n\r\nOr `vim.text.hexencode()` ? We definitely will add a `vim.text` module soonish.",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T11:24:40Z",
            "diff_hunk": "@@ -0,0 +1,86 @@\n+local M = {}\n+\n+--- Hex encode a string.\n+---\n+--- @param str string String to encode\n+--- @return string Hex encoded string\n+local function hexencode(str)",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395551258",
            "id": 1395551258,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TLmwa",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 7,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/termcap.lua",
            "position": null,
            "pull_request_review_id": 1734141412,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395551258/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T11:24:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395551258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395561667"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395561667"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: query is a good name but would `request` make sense (for symmetry with [TermRequest](https://github.com/neovim/neovim/pull/22159))? Don't want a \"foolish consistency\", but _if_ they are reasonably equivalent then using common language is good.",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T11:33:26Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')\n+  )\n+then\n+  return\n+end\n+\n+require('vim.termcap').query('Ms', function(cap, seq)",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395561667",
            "id": 1395561667,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM5TLpTD",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 15,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": 15,
            "pull_request_review_id": 1734158673,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395561667/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T11:41:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395561667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395568290"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395568290"
                }
            },
            "author_association": "MEMBER",
            "body": "We really need a builtin way to disable plugins without special purpose variables. Often it's good enough to delete an autocmd group or unmap a mapping, but when neither of those mechanisms is in use, I guess the only way is to mess with 'runtimepath' (nasty) or to monkeypatch `vim.*` modules/functions (fine and idiomatic imo)...\r\n\r\nIn this case, `g:clipboard` may give enough control. If `g:clipboard` is set we can skip this. So let's just document that, then we don't need `g:osc52`.\r\n\r\nThe story here will improve further after we migrate clipboard.vim to Lua.",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T11:39:29Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395568290",
            "id": 1395568290,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TLq6i",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 1734168910,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395568290/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T11:41:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395568290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395757941"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395757941"
                }
            },
            "author_association": "MEMBER",
            "body": "We get _a lot_ of information out of terminfo. Getting all of that via XTGETTCAP would result in a lot of overhead.\r\n\r\nTerminfo has a bad reputation but most of the newer wave of terminal emulators all ship with their own terminfo entries which are actually correct (kitty, Wezterm, foot, Ghostty, and Alacritty all do). The worst offenders are those that masquerade as `xterm-256color`. I would be more open to ignoring terminfo when `$TERM` is `xterm-256color`",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T14:14:05Z",
            "diff_hunk": "@@ -0,0 +1,86 @@\n+local M = {}\n+\n+--- Hex encode a string.\n+---\n+--- @param str string String to encode\n+--- @return string Hex encoded string\n+local function hexencode(str)\n+  local bytes = { str:byte(1, #str) }\n+  local enc = {} ---@type string[]\n+  for i = 1, #bytes do\n+    enc[i] = string.format('%02X', bytes[i])\n+  end\n+  return table.concat(enc)\n+end\n+\n+--- Hex decode a string.\n+---\n+--- @param enc string String to decode\n+--- @return string Decoded string\n+local function hexdecode(enc)\n+  assert(#enc % 2 == 0, 'string must have an even number of hex characters')\n+  local str = {} ---@type string[]\n+  for i = 1, #enc, 2 do\n+    local n = assert(tonumber(string.format('0x%s', enc:sub(i, i + 1))))\n+    str[#str + 1] = string.char(n)\n+  end\n+  return table.concat(str)\n+end\n+\n+--- Query the host terminal emulator for terminfo capabilities.\n+---\n+--- This function sends the XTGETTCAP DCS sequence to the host terminal emulator asking the terminal\n+--- to send us its terminal capabilities. These are strings that are normally taken from a terminfo\n+--- file, however an up to date terminfo database is not always available (particularly on remote\n+--- machines), and many terminals continue to misidentify themselves or do not provide their own\n+--- terminfo file, making the terminfo database unreliable.\n+---\n+--- Querying the terminal guarantees that we get a truthful answer, but only if the host terminal\n+--- emulator supports the XTGETTCAP sequence.",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395757941",
            "id": 1395757941,
            "in_reply_to_id": 1395539476,
            "line": 12,
            "node_id": "PRRC_kwDOAPphoM5TMZN1",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 12,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/termcap.lua",
            "position": 12,
            "pull_request_review_id": 1734485270,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395757941/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T14:14:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395757941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395758367"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395758367"
                }
            },
            "author_association": "MEMBER",
            "body": "I agree, I think people only end up using this when they `set clipboard=unnamed`.",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T14:14:26Z",
            "diff_hunk": "@@ -254,33 +254,25 @@ For Windows WSL, try this g:clipboard definition:\n                 \\   'cache_enabled': 0,\n                 \\ }\n <\n-\t\t\t\t\t\t\t    *clipboard-osc52*\n+\t\t\t\t\t\t   *clipboard-osc52* *g:osc52*\n Nvim bundles a clipboard provider that allows copying to the system clipboard\n using OSC 52. OSC 52 is an Operating System Command control sequence that\n writes the copied text to the terminal emulator. If the terminal emulator\n supports OSC 52 then it will write the copied text into the system clipboard.\n \n-This is most useful when using Nvim remotely (e.g. via ssh) as Nvim does not\n-have direct access to the system clipboard in that case.\n-\n-Because not all terminal emulators support OSC 52, this provider must be opted\n-into explicitly by setting the following |g:clipboard| definition: >lua\n-\n-    vim.g.clipboard = {\n-      name = 'OSC 52',\n-      copy = {\n-        ['+'] = require('vim.ui.clipboard.osc52').copy,\n-        ['*'] = require('vim.ui.clipboard.osc52').copy,\n-      },\n-      paste = {\n-        ['+'] = require('vim.ui.clipboard.osc52').paste,\n-        ['*'] = require('vim.ui.clipboard.osc52').paste,\n-      },\n-    }\n-<\n+Nvim can attempt to automatically determine if the host terminal emulator\n+supports the OSC 52 sequence and enable the OSC 52 clipboard provider if it\n+does. This behavior is set by the |g:osc52| variable. If unset (nil) then Nvim\n+will only attempt to detect OSC 52 support automatically when $SSH_TTY is set,\n+$TMUX is unset, and 'clipboard' is not set to \"unnamed\" or \"unnamedplus\". If\n+|g:osc52| is false, Nvim will never use the OSC 52 clipboard provider. If\n+|g:osc52| is true, Nvim will always use the OSC 52 clipboard provider,\n+regardless of the values of $SSH_TTY and $TMUX.\n+\n Note that not all terminal emulators support reading from the system clipboard\n (and even for those that do, users should be aware of the security\n-implications), so using OSC 52 for pasting may not be possible.\n+implications), so using OSC 52 for pasting may not be possible. Users may need",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395758367",
            "id": 1395758367,
            "in_reply_to_id": 1395546234,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TMZUf",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 274,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/doc/provider.txt",
            "position": null,
            "pull_request_review_id": 1734486035,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395758367/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T14:14:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395758367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395759255"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395759255"
                }
            },
            "author_association": "MEMBER",
            "body": "`vim.text.hex{en,de}code()` sounds fine to me",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T14:15:05Z",
            "diff_hunk": "@@ -0,0 +1,86 @@\n+local M = {}\n+\n+--- Hex encode a string.\n+---\n+--- @param str string String to encode\n+--- @return string Hex encoded string\n+local function hexencode(str)",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395759255",
            "id": 1395759255,
            "in_reply_to_id": 1395551258,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TMZiX",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 7,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/termcap.lua",
            "position": null,
            "pull_request_review_id": 1734487532,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395759255/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T14:15:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395759255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395761096"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395761096"
                }
            },
            "author_association": "MEMBER",
            "body": ">In this case, g:clipboard may give enough control. If g:clipboard is set we can skip this. So let's just document that, then we don't need g:osc52.\r\n\r\nHow would someone opt out of using both OSC 52 _and_ `g:clipboard` in that case? For example, if they want to stick with `xsel`?",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T14:16:28Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395761096",
            "id": 1395761096,
            "in_reply_to_id": 1395568290,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TMZ_I",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 1734490589,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395761096/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T14:16:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395761096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395824837"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395824837"
                }
            },
            "author_association": "MEMBER",
            "body": "> How would someone opt out of using both OSC 52 and g:clipboard in that case? \r\n\r\nIf you don't want the default behavior then you can't \"opt out\" of g:clipboard (yet). Why is it any different than e.g. tmux clipboard (we don't have a `g:tmuxclipboard = false` option)?\r\n\r\n\r\nIf it's too cumbersome to tell the clipboard provider which tools to enable, we should (in the future) fix that with something like a `vim.ui.clipboard.tools: table`, or a 'clipboardoptions' option.\r\n\r\nIn the meantime, we can document how to set g:clipboard to something \"neutral\".\r\n\r\n---\r\n\r\nP.S. For reference, I started this patch, but then realized that treating `g:clipboard=v:true` as \"disable OSC52\" is weird:\r\n\r\n```diff\r\ndiff --git a/runtime/autoload/provider/clipboard.vim b/runtime/autoload/provider/clipboard.vim\r\nindex 05f6bdb871d3..c1534a87f199 100644\r\n--- a/runtime/autoload/provider/clipboard.vim\r\n+++ b/runtime/autoload/provider/clipboard.vim\r\n@@ -67,7 +67,11 @@ function! provider#clipboard#Error() abort\r\n endfunction\r\n \r\n function! provider#clipboard#Executable() abort\r\n-  if exists('g:clipboard')\r\n+  let enabled = get(g:, 'clipboard', v:true)\r\n+  if enabled is# v:false\r\n+    let s:err = 'clipboard: disabled (g:clipboard=v:false). :help clipboard'\r\n+    return ''\r\n+  elseif enabled isnot# v:true\r\n     if type({}) isnot# type(g:clipboard)\r\n           \\ || type({}) isnot# type(get(g:clipboard, 'copy', v:null))\r\n           \\ || type({}) isnot# type(get(g:clipboard, 'paste', v:null))\r\n```\r\n",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T14:47:14Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395824837",
            "id": 1395824837,
            "in_reply_to_id": 1395568290,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TMpjF",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 1734594377,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395824837/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T15:02:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395824837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395843492"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395843492"
                }
            },
            "author_association": "MEMBER",
            "body": "I guess that means XTGETTCAP doesn't have a \"batch\" request which returns everything?",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T14:52:39Z",
            "diff_hunk": "@@ -0,0 +1,86 @@\n+local M = {}\n+\n+--- Hex encode a string.\n+---\n+--- @param str string String to encode\n+--- @return string Hex encoded string\n+local function hexencode(str)\n+  local bytes = { str:byte(1, #str) }\n+  local enc = {} ---@type string[]\n+  for i = 1, #bytes do\n+    enc[i] = string.format('%02X', bytes[i])\n+  end\n+  return table.concat(enc)\n+end\n+\n+--- Hex decode a string.\n+---\n+--- @param enc string String to decode\n+--- @return string Decoded string\n+local function hexdecode(enc)\n+  assert(#enc % 2 == 0, 'string must have an even number of hex characters')\n+  local str = {} ---@type string[]\n+  for i = 1, #enc, 2 do\n+    local n = assert(tonumber(string.format('0x%s', enc:sub(i, i + 1))))\n+    str[#str + 1] = string.char(n)\n+  end\n+  return table.concat(str)\n+end\n+\n+--- Query the host terminal emulator for terminfo capabilities.\n+---\n+--- This function sends the XTGETTCAP DCS sequence to the host terminal emulator asking the terminal\n+--- to send us its terminal capabilities. These are strings that are normally taken from a terminfo\n+--- file, however an up to date terminfo database is not always available (particularly on remote\n+--- machines), and many terminals continue to misidentify themselves or do not provide their own\n+--- terminfo file, making the terminfo database unreliable.\n+---\n+--- Querying the terminal guarantees that we get a truthful answer, but only if the host terminal\n+--- emulator supports the XTGETTCAP sequence.",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395843492",
            "id": 1395843492,
            "in_reply_to_id": 1395539476,
            "line": 12,
            "node_id": "PRRC_kwDOAPphoM5TMuGk",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 12,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/termcap.lua",
            "position": 12,
            "pull_request_review_id": 1734623774,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395843492/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T14:52:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395843492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395922952"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395922952"
                }
            },
            "author_association": "MEMBER",
            "body": ">Why is it any different than e.g. tmux clipboard (we don't have a g:tmuxclipboard = false option)?\r\n\r\nThis is true, but tmux doesn't have the problems that OSC 52 has: namely, the fact that OSC 52 must wait for a response from the terminal (which can take a while for some terminals, according to some users) and that some terminals simply don't allow reading from the clipboard with OSC 52 (tmux reads and writes to its own internal buffers in addition to the system clipboard, so it can sidestep these problems).\r\n\r\nFor both of these reasons I expect it will be much more common for users to want to opt out of OSC 52 than for tmux.\r\n\r\nReally the only issue with OSC 52 is when pasting, and even then it's much easier (and better!) to use `Ctrl-V` or whatever. So this is really only an issue for people using `set clipboard=unnamed` (which is why I want to not use OSC 52 when that is set).",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T15:38:39Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395922952",
            "id": 1395922952,
            "in_reply_to_id": 1395568290,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TNBgI",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 1734760162,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395922952/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T15:38:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395922952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395928210"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395928210"
                }
            },
            "author_association": "MEMBER",
            "body": "No, we have to specify each capability that we want in the request. The response differs between terminal emulators: Xterm returns all of the requested capabilities in a single response, while foot, Ghostty, kitty, and Wezterm (not sure about others) send separate DCS responses for each capability.",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T15:42:04Z",
            "diff_hunk": "@@ -0,0 +1,86 @@\n+local M = {}\n+\n+--- Hex encode a string.\n+---\n+--- @param str string String to encode\n+--- @return string Hex encoded string\n+local function hexencode(str)\n+  local bytes = { str:byte(1, #str) }\n+  local enc = {} ---@type string[]\n+  for i = 1, #bytes do\n+    enc[i] = string.format('%02X', bytes[i])\n+  end\n+  return table.concat(enc)\n+end\n+\n+--- Hex decode a string.\n+---\n+--- @param enc string String to decode\n+--- @return string Decoded string\n+local function hexdecode(enc)\n+  assert(#enc % 2 == 0, 'string must have an even number of hex characters')\n+  local str = {} ---@type string[]\n+  for i = 1, #enc, 2 do\n+    local n = assert(tonumber(string.format('0x%s', enc:sub(i, i + 1))))\n+    str[#str + 1] = string.char(n)\n+  end\n+  return table.concat(str)\n+end\n+\n+--- Query the host terminal emulator for terminfo capabilities.\n+---\n+--- This function sends the XTGETTCAP DCS sequence to the host terminal emulator asking the terminal\n+--- to send us its terminal capabilities. These are strings that are normally taken from a terminfo\n+--- file, however an up to date terminfo database is not always available (particularly on remote\n+--- machines), and many terminals continue to misidentify themselves or do not provide their own\n+--- terminfo file, making the terminfo database unreliable.\n+---\n+--- Querying the terminal guarantees that we get a truthful answer, but only if the host terminal\n+--- emulator supports the XTGETTCAP sequence.",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395928210",
            "id": 1395928210,
            "in_reply_to_id": 1395539476,
            "line": 12,
            "node_id": "PRRC_kwDOAPphoM5TNCyS",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 12,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/termcap.lua",
            "position": 12,
            "pull_request_review_id": 1734768381,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395928210/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T15:42:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395928210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395933813"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395933813"
                }
            },
            "author_association": "MEMBER",
            "body": "> really only an issue for people using `set clipboard=unnamed` (which is why I want to not use OSC 52 when that is set).\r\n\r\nSure, no objection to disabling by default when clipboard=unnamed is set. \r\n\r\nIf we absolutely need a special purpose option, as a stop-gap we could make `g:clipboard` accept a list of default provider names. So users could opt-out of osc52 by saying which tools they want to enable:\r\n\r\n    let g:clipboard = ['xsel', 'xclip', ...]\r\n\r\nI'm happy to make this change myself to avoid the g:osc52 option.\r\n\r\nSo this PR isn't blocked",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T15:45:47Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395933813",
            "id": 1395933813,
            "in_reply_to_id": 1395568290,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TNEJ1",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 1734777325,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395933813/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T15:47:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395933813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395938971"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395938971"
                }
            },
            "author_association": "MEMBER",
            "body": "Sounds good, I'll remove `g:osc52` and let you do that in a follow up.\r\n\r\nEDIT: We just need to finish painting our bike shed in https://github.com/neovim/neovim/pull/26061 😁 ",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T15:49:22Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395938971",
            "id": 1395938971,
            "in_reply_to_id": 1395568290,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TNFab",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 1734787068,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395938971/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T15:49:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395938971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395943265"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395943265"
                }
            },
            "author_association": "MEMBER",
            "body": "Do we also need to check if the TUI is attached? Or is `g:clipboard` already a TUI only concept?",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T15:52:22Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395943265",
            "id": 1395943265,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TNGdh",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 1734794085,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395943265/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T15:52:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395943265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1395951210"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395951210"
                }
            },
            "author_association": "MEMBER",
            "body": "Makes sense. If we are embedded we don't want to write to stdout.\r\n\r\nclipboard / g:clipboard supports any UI, not only TUI",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T15:57:13Z",
            "diff_hunk": "@@ -0,0 +1,26 @@\n+if\n+  vim.g.osc52 == false\n+  or (\n+    vim.g.osc52 == nil and (not os.getenv('SSH_TTY') or os.getenv('TMUX') or vim.o.clipboard ~= '')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1395951210",
            "id": 1395951210,
            "in_reply_to_id": 1395943265,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TNIZq",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 4,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/plugin/osc52.lua",
            "position": null,
            "pull_request_review_id": 1734806175,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395951210/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T15:58:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1395951210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1396004343"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396004343"
                }
            },
            "author_association": "MEMBER",
            "body": "Made a separate PR for `vim.text`, which now blocks this one https://github.com/neovim/neovim/pull/26069",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T16:29:51Z",
            "diff_hunk": "@@ -0,0 +1,86 @@\n+local M = {}\n+\n+--- Hex encode a string.\n+---\n+--- @param str string String to encode\n+--- @return string Hex encoded string\n+local function hexencode(str)",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1396004343",
            "id": 1396004343,
            "in_reply_to_id": 1395551258,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TNVX3",
            "original_commit_id": "8f41c22ed3ccaa041de9de1c356c0617990b241e",
            "original_line": 7,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/termcap.lua",
            "position": null,
            "pull_request_review_id": 1734891098,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396004343/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T16:29:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396004343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1396010241"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396010241"
                }
            },
            "author_association": "MEMBER",
            "body": "@justinmk Please re-review the copy here.",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T16:34:07Z",
            "diff_hunk": "@@ -260,27 +260,41 @@ using OSC 52. OSC 52 is an Operating System Command control sequence that\n writes the copied text to the terminal emulator. If the terminal emulator\n supports OSC 52 then it will write the copied text into the system clipboard.\n \n-This is most useful when using Nvim remotely (e.g. via ssh) as Nvim does not\n-have direct access to the system clipboard in that case.\n+Nvim will attempt to automatically determine if the host terminal emulator\n+supports the OSC 52 sequence and enable the OSC 52 clipboard provider if it\n+does as long as all of the following are true:\n \n-Because not all terminal emulators support OSC 52, this provider must be opted\n-into explicitly by setting the following |g:clipboard| definition: >lua\n+  • Nvim is running in the |TUI|\n+  • |g:clipboard| is unset\n+  • 'clipboard' is not set to \"unnamed\" or \"unnamedplus\"\n+  • $SSH_TTY is set\n+  • $TMUX is unset\n+\n+If any of the above conditions are not met then the OSC 52 clipboard provider\n+will not be used by default and Nvim will fall back to discovering a\n+|clipboard-tool| through the usual process.\n+\n+To force Nvim to use the OSC 52 provider you can use the following\n+|g:clipboard| definition: >lua\n \n     vim.g.clipboard = {\n       name = 'OSC 52',\n       copy = {\n-        ['+'] = require('vim.ui.clipboard.osc52').copy,\n-        ['*'] = require('vim.ui.clipboard.osc52').copy,\n+        ['+'] = require('vim.ui.clipboard.osc52').copy('+'),\n+        ['*'] = require('vim.ui.clipboard.osc52').copy('*'),\n       },\n       paste = {\n-        ['+'] = require('vim.ui.clipboard.osc52').paste,\n-        ['*'] = require('vim.ui.clipboard.osc52').paste,\n+        ['+'] = require('vim.ui.clipboard.osc52').paste('+'),\n+        ['*'] = require('vim.ui.clipboard.osc52').paste('*'),\n       },\n     }\n <\n Note that not all terminal emulators support reading from the system clipboard\n (and even for those that do, users should be aware of the security\n-implications), so using OSC 52 for pasting may not be possible.\n+implications), so using OSC 52 for pasting may not be possible (and not\n+necessary, because you can |paste| instead using your system paste function).\n+Users may need to configure their terminal emulator to allow reading from the\n+clipboard.",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1396010241",
            "id": 1396010241,
            "line": 297,
            "node_id": "PRRC_kwDOAPphoM5TNW0B",
            "original_commit_id": "88d09448eb844d2ffb4043ebc19af4a76ac8ad1c",
            "original_line": 297,
            "original_position": 47,
            "original_start_line": 266,
            "path": "runtime/doc/provider.txt",
            "position": 47,
            "pull_request_review_id": 1734907675,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396010241/reactions"
            },
            "side": "RIGHT",
            "start_line": 266,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2023-11-16T16:34:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396010241",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1396020123"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396020123"
                }
            },
            "author_association": "MEMBER",
            "body": "Perfect",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T16:39:31Z",
            "diff_hunk": "@@ -260,27 +260,41 @@ using OSC 52. OSC 52 is an Operating System Command control sequence that\n writes the copied text to the terminal emulator. If the terminal emulator\n supports OSC 52 then it will write the copied text into the system clipboard.\n \n-This is most useful when using Nvim remotely (e.g. via ssh) as Nvim does not\n-have direct access to the system clipboard in that case.\n+Nvim will attempt to automatically determine if the host terminal emulator\n+supports the OSC 52 sequence and enable the OSC 52 clipboard provider if it\n+does as long as all of the following are true:\n \n-Because not all terminal emulators support OSC 52, this provider must be opted\n-into explicitly by setting the following |g:clipboard| definition: >lua\n+  • Nvim is running in the |TUI|\n+  • |g:clipboard| is unset\n+  • 'clipboard' is not set to \"unnamed\" or \"unnamedplus\"\n+  • $SSH_TTY is set\n+  • $TMUX is unset\n+\n+If any of the above conditions are not met then the OSC 52 clipboard provider\n+will not be used by default and Nvim will fall back to discovering a\n+|clipboard-tool| through the usual process.\n+\n+To force Nvim to use the OSC 52 provider you can use the following\n+|g:clipboard| definition: >lua\n \n     vim.g.clipboard = {\n       name = 'OSC 52',\n       copy = {\n-        ['+'] = require('vim.ui.clipboard.osc52').copy,\n-        ['*'] = require('vim.ui.clipboard.osc52').copy,\n+        ['+'] = require('vim.ui.clipboard.osc52').copy('+'),\n+        ['*'] = require('vim.ui.clipboard.osc52').copy('*'),\n       },\n       paste = {\n-        ['+'] = require('vim.ui.clipboard.osc52').paste,\n-        ['*'] = require('vim.ui.clipboard.osc52').paste,\n+        ['+'] = require('vim.ui.clipboard.osc52').paste('+'),\n+        ['*'] = require('vim.ui.clipboard.osc52').paste('*'),\n       },\n     }\n <\n Note that not all terminal emulators support reading from the system clipboard\n (and even for those that do, users should be aware of the security\n-implications), so using OSC 52 for pasting may not be possible.\n+implications), so using OSC 52 for pasting may not be possible (and not\n+necessary, because you can |paste| instead using your system paste function).\n+Users may need to configure their terminal emulator to allow reading from the\n+clipboard.",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1396020123",
            "id": 1396020123,
            "in_reply_to_id": 1396010241,
            "line": 297,
            "node_id": "PRRC_kwDOAPphoM5TNZOb",
            "original_commit_id": "88d09448eb844d2ffb4043ebc19af4a76ac8ad1c",
            "original_line": 297,
            "original_position": 47,
            "original_start_line": 266,
            "path": "runtime/doc/provider.txt",
            "position": 47,
            "pull_request_review_id": 1734922634,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396020123/reactions"
            },
            "side": "RIGHT",
            "start_line": 266,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2023-11-16T16:39:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396020123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1396113494"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396113494"
                }
            },
            "author_association": "MEMBER",
            "body": "Note: it's _technically_ possible for some pathological terminal to use some other sequence than the standard OSC 52 sequence, in which case this pattern won't match. For now we assume that no such terminals exist and that if they do they just won't work. If this assumption ever needs to be revisited then this line will need to become a bit smarter (we would need to convert the `format` parameter from a `string.format` format to a `string.match` pattern).",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T17:41:47Z",
            "diff_hunk": "@@ -1,60 +1,71 @@\n local M = {}\n \n-function M.copy(lines)\n-  local s = table.concat(lines, '\\n')\n-  io.stdout:write(string.format('\\027]52;;%s\\027\\\\', vim.base64.encode(s)))\n+-- The default format string of the OSC 52 sequence. This will be used unless\n+-- the caller provides a separate format string (e.g. one obtained via terminfo\n+-- or XTGETTCAP)\n+local osc52 = '\\027]52;%s;%s\\027\\\\'\n+\n+function M.copy(reg, format)\n+  local clipboard = reg == '+' and 'c' or 's'\n+  return function(lines)\n+    local s = table.concat(lines, '\\n')\n+    io.stdout:write(string.format(format or osc52, clipboard, vim.base64.encode(s)))\n+  end\n end\n \n-function M.paste()\n-  local contents = nil\n-  local id = vim.api.nvim_create_autocmd('TermResponse', {\n-    callback = function(args)\n-      local resp = args.data ---@type string\n-      local encoded = resp:match('\\027%]52;%w?;([A-Za-z0-9+/=]*)')\n-      if encoded then\n-        contents = vim.base64.decode(encoded)\n-        return true\n-      end\n-    end,\n-  })\n-\n-  io.stdout:write('\\027]52;;?\\027\\\\')\n-\n-  local ok, res\n-\n-  -- Wait 1s first for terminals that respond quickly\n-  ok, res = vim.wait(1000, function()\n-    return contents ~= nil\n-  end)\n-\n-  if res == -1 then\n-    -- If no response was received after 1s, print a message and keep waiting\n-    vim.api.nvim_echo(\n-      { { 'Waiting for OSC 52 response from the terminal. Press Ctrl-C to interrupt...' } },\n-      false,\n-      {}\n-    )\n-    ok, res = vim.wait(9000, function()\n+function M.paste(reg, format)\n+  local clipboard = reg == '+' and 'c' or 's'\n+  return function()\n+    local contents = nil\n+    local id = vim.api.nvim_create_autocmd('TermResponse', {\n+      callback = function(args)\n+        local resp = args.data ---@type string\n+        local encoded = resp:match('\\027%]52;%w?;([A-Za-z0-9+/=]*)')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1396113494",
            "id": 1396113494,
            "line": 27,
            "node_id": "PRRC_kwDOAPphoM5TNwBW",
            "original_commit_id": "43e7dc2b273c96bbc95084dfbc699d810e016dd1",
            "original_line": 27,
            "original_position": 56,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": 60,
            "pull_request_review_id": 1735079397,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396113494/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T17:41:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396113494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26064#discussion_r1396155715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26064"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396155715"
                }
            },
            "author_association": "MEMBER",
            "body": "I went ahead and nipped this in the bud by ignoring Ms capabilities that don't match `OSC 52`:\r\n\r\n```lua\r\n  -- If the terminal reports a sequence other than OSC 52 for the Ms capability\r\n  -- then ignore it. We only support OSC 52 (for now)\r\n  if not seq:match('^\\027%]52') then\r\n    return\r\n  end\r\n```",
            "commit_id": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
            "created_at": "2023-11-16T18:18:31Z",
            "diff_hunk": "@@ -1,60 +1,71 @@\n local M = {}\n \n-function M.copy(lines)\n-  local s = table.concat(lines, '\\n')\n-  io.stdout:write(string.format('\\027]52;;%s\\027\\\\', vim.base64.encode(s)))\n+-- The default format string of the OSC 52 sequence. This will be used unless\n+-- the caller provides a separate format string (e.g. one obtained via terminfo\n+-- or XTGETTCAP)\n+local osc52 = '\\027]52;%s;%s\\027\\\\'\n+\n+function M.copy(reg, format)\n+  local clipboard = reg == '+' and 'c' or 's'\n+  return function(lines)\n+    local s = table.concat(lines, '\\n')\n+    io.stdout:write(string.format(format or osc52, clipboard, vim.base64.encode(s)))\n+  end\n end\n \n-function M.paste()\n-  local contents = nil\n-  local id = vim.api.nvim_create_autocmd('TermResponse', {\n-    callback = function(args)\n-      local resp = args.data ---@type string\n-      local encoded = resp:match('\\027%]52;%w?;([A-Za-z0-9+/=]*)')\n-      if encoded then\n-        contents = vim.base64.decode(encoded)\n-        return true\n-      end\n-    end,\n-  })\n-\n-  io.stdout:write('\\027]52;;?\\027\\\\')\n-\n-  local ok, res\n-\n-  -- Wait 1s first for terminals that respond quickly\n-  ok, res = vim.wait(1000, function()\n-    return contents ~= nil\n-  end)\n-\n-  if res == -1 then\n-    -- If no response was received after 1s, print a message and keep waiting\n-    vim.api.nvim_echo(\n-      { { 'Waiting for OSC 52 response from the terminal. Press Ctrl-C to interrupt...' } },\n-      false,\n-      {}\n-    )\n-    ok, res = vim.wait(9000, function()\n+function M.paste(reg, format)\n+  local clipboard = reg == '+' and 'c' or 's'\n+  return function()\n+    local contents = nil\n+    local id = vim.api.nvim_create_autocmd('TermResponse', {\n+      callback = function(args)\n+        local resp = args.data ---@type string\n+        local encoded = resp:match('\\027%]52;%w?;([A-Za-z0-9+/=]*)')",
            "html_url": "https://github.com/neovim/neovim/pull/26064#discussion_r1396155715",
            "id": 1396155715,
            "in_reply_to_id": 1396113494,
            "line": 27,
            "node_id": "PRRC_kwDOAPphoM5TN6VD",
            "original_commit_id": "43e7dc2b273c96bbc95084dfbc699d810e016dd1",
            "original_line": 27,
            "original_position": 56,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui/clipboard/osc52.lua",
            "position": 60,
            "pull_request_review_id": 1735145785,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396155715/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-16T18:18:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396155715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "For reference, these are the terminals I've been able to test that support both OSC 52 and XTGETTCAP:\r\n\r\n- Kitty\r\n- Wezterm (has no option to enable reading the clipboard)\r\n- Ghostty\r\n- foot (I haven't tested personally but AFAIK they correctly implement both)\r\n\r\niTerm2 supports OSC 52 and XTGETTCAP, but for whatever reason does not report the Ms capability in its XTGETTCAP response.\r\n\r\nAlacrity supports OSC 52, but not XTGETTCAP.\r\n\r\nTerminal.app supports nothing (are you surprised?)",
            "created_at": "2023-11-16T18:17:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/26064#issuecomment-1814993159",
            "id": 1814993159,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26064",
            "node_id": "IC_kwDOAPphoM5sLpkH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1814993159/reactions"
            },
            "updated_at": "2023-11-16T21:24:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1814993159",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "May I ask why this is disabled if nvim is running in a tmux session?\nAnd is there a way to enable OSC 52 even if it is running inside tmux? ",
            "created_at": "2023-11-16T18:48:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/26064#issuecomment-1815036633",
            "id": 1815036633,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26064",
            "node_id": "IC_kwDOAPphoM5sL0LZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815036633/reactions"
            },
            "updated_at": "2023-11-16T18:48:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815036633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2816893?v=4",
                "events_url": "https://api.github.com/users/tuxflo/events{/privacy}",
                "followers_url": "https://api.github.com/users/tuxflo/followers",
                "following_url": "https://api.github.com/users/tuxflo/following{/other_user}",
                "gists_url": "https://api.github.com/users/tuxflo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tuxflo",
                "id": 2816893,
                "login": "tuxflo",
                "node_id": "MDQ6VXNlcjI4MTY4OTM=",
                "organizations_url": "https://api.github.com/users/tuxflo/orgs",
                "received_events_url": "https://api.github.com/users/tuxflo/received_events",
                "repos_url": "https://api.github.com/users/tuxflo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tuxflo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tuxflo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tuxflo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">May I ask why this is disabled if nvim is running in a tmux session?\r\n\r\nFor two reasons:\r\n\r\n1. tmux does not passthrough escape sequences to the host terminal unless you explicitly enable the option or wrap it in another, tmux specific escape sequence\r\n2. tmux already supports OSC 52 \"natively\" with `load-buffer -w`, which Nvim's [tmux clipboard provider already uses](https://github.com/neovim/neovim/blob/db57df04b6af03ad9dd0447ffc8e881c97a39732/runtime/autoload/provider/clipboard.vim#L150-L154).",
            "created_at": "2023-11-16T18:51:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/26064#issuecomment-1815040376",
            "id": 1815040376,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26064",
            "node_id": "IC_kwDOAPphoM5sL1F4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815040376/reactions"
            },
            "updated_at": "2023-11-16T18:51:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815040376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "OK, thanks for the quick reply. But isn't there a difference between the two cases:\n\n1. Tmux running on the client, inside tmux an ssh session is opened and nvim is opened in there (on the server)\n2. Tmux running on the server with an open nvim.\n\nIn both cases I'd like to be able to use `\"+y` to yank into my local clipboard (via OSC 52). At least that's what I thought the OSC feature is usable for. ",
            "created_at": "2023-11-16T18:57:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/26064#issuecomment-1815071764",
            "id": 1815071764,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26064",
            "node_id": "IC_kwDOAPphoM5sL8wU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815071764/reactions"
            },
            "updated_at": "2023-11-16T19:00:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815071764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2816893?v=4",
                "events_url": "https://api.github.com/users/tuxflo/events{/privacy}",
                "followers_url": "https://api.github.com/users/tuxflo/followers",
                "following_url": "https://api.github.com/users/tuxflo/following{/other_user}",
                "gists_url": "https://api.github.com/users/tuxflo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tuxflo",
                "id": 2816893,
                "login": "tuxflo",
                "node_id": "MDQ6VXNlcjI4MTY4OTM=",
                "organizations_url": "https://api.github.com/users/tuxflo/orgs",
                "received_events_url": "https://api.github.com/users/tuxflo/received_events",
                "repos_url": "https://api.github.com/users/tuxflo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tuxflo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tuxflo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tuxflo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Actually I completely forgot about tmux's `set-clipboard` option. If this is set to `on` then applications in tmux can set the system clipboard with the usual OSC 52 sequence.\r\n\r\nSo there is no reason to disable this in tmux. I'll make a correction.",
            "created_at": "2023-11-16T19:02:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/26064#issuecomment-1815117138",
            "id": 1815117138,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26064",
            "node_id": "IC_kwDOAPphoM5sMH1S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815117138/reactions"
            },
            "updated_at": "2023-11-16T19:02:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815117138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "@tuxflo am i mistaken that, in your scenario 2, tmux passthrough must be supported?",
            "created_at": "2023-11-16T20:09:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/26064#issuecomment-1815238299",
            "id": 1815238299,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26064",
            "node_id": "IC_kwDOAPphoM5sMlab",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815238299/reactions"
            },
            "updated_at": "2023-11-16T20:09:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815238299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4702260?v=4",
                "events_url": "https://api.github.com/users/WhoIsSethDaniel/events{/privacy}",
                "followers_url": "https://api.github.com/users/WhoIsSethDaniel/followers",
                "following_url": "https://api.github.com/users/WhoIsSethDaniel/following{/other_user}",
                "gists_url": "https://api.github.com/users/WhoIsSethDaniel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/WhoIsSethDaniel",
                "id": 4702260,
                "login": "WhoIsSethDaniel",
                "node_id": "MDQ6VXNlcjQ3MDIyNjA=",
                "organizations_url": "https://api.github.com/users/WhoIsSethDaniel/orgs",
                "received_events_url": "https://api.github.com/users/WhoIsSethDaniel/received_events",
                "repos_url": "https://api.github.com/users/WhoIsSethDaniel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/WhoIsSethDaniel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/WhoIsSethDaniel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/WhoIsSethDaniel"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think so, but I'm not sure.",
            "created_at": "2023-11-17T00:18:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/26064#issuecomment-1815534111",
            "id": 1815534111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26064",
            "node_id": "IC_kwDOAPphoM5sNtof",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815534111/reactions"
            },
            "updated_at": "2023-11-17T00:18:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815534111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2816893?v=4",
                "events_url": "https://api.github.com/users/tuxflo/events{/privacy}",
                "followers_url": "https://api.github.com/users/tuxflo/followers",
                "following_url": "https://api.github.com/users/tuxflo/following{/other_user}",
                "gists_url": "https://api.github.com/users/tuxflo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tuxflo",
                "id": 2816893,
                "login": "tuxflo",
                "node_id": "MDQ6VXNlcjI4MTY4OTM=",
                "organizations_url": "https://api.github.com/users/tuxflo/orgs",
                "received_events_url": "https://api.github.com/users/tuxflo/received_events",
                "repos_url": "https://api.github.com/users/tuxflo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tuxflo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tuxflo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tuxflo"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26064/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26064/commits",
    "created_at": "2023-11-16T04:27:02Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26064.diff",
    "draft": false,
    "head": {
        "label": "gpanders:xtgettcap",
        "ref": "xtgettcap",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2023-11-16T20:55:32Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 234190,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26064",
    "id": 1603661630,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26064",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "clipboard, paste",
            "id": 186192409,
            "name": "clipboard",
            "node_id": "MDU6TGFiZWwxODYxOTI0MDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/clipboard"
        }
    ],
    "locked": false,
    "merge_commit_sha": "db57df04b6af03ad9dd0447ffc8e881c97a39732",
    "merged_at": "2023-11-16T18:21:24Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5fle8-",
    "number": 26064,
    "patch_url": "https://github.com/neovim/neovim/pull/26064.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26064/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7f7bc16930f4e3fcd69b7f75a18f909afbc8e2de",
    "title": "feat(clipboard): enable OSC 52 clipboard provider by default",
    "updated_at": "2023-11-17T00:18:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26064",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}