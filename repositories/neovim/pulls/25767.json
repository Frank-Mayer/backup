{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25767/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25767/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25767"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25767"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25767/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8efe00e984319785e03714adc81467b2890622ad"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4961,
            "forks_count": 4961,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1682,
            "open_issues_count": 1682,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-07T01:51:15Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 236891,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70667,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-07T01:54:44Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70667,
            "watchers_count": 70667,
            "web_commit_signoff_required": false
        },
        "sha": "3198038224209c41932a305e2a2dee708d4e3ec8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem:  No way to have extmarks automatically removed when the range it\r\n          is attached to is deleted.\r\nSolution: Add new 'invalidate' property that will remove marks when the\r\n          start of its range is deleted.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1370092133"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370092133"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n/// on a per-window or per-lines basis. Set the `lifetime` key to \"redraw\" to\r\n```",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-24T12:38:51Z",
            "diff_hunk": "@@ -1001,9 +1026,9 @@ void nvim_buf_clear_namespace(Buffer buffer, Integer ns_id, Integer line_start,\n ///\n /// The expected usage is to set |extmarks| for the currently\n /// redrawn buffer. |nvim_buf_set_extmark()| can be called to add marks\n-/// on a per-window or per-lines basis. Use the `ephemeral` key to only\n-/// use the mark for the current screen redraw (the callback will be called\n-/// again for the next redraw ).\n+/// on a per-window or per-lines basis. Set the `lifetime` key to `'redraw'` to",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1370092133",
            "id": 1370092133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5RqfJl",
            "original_commit_id": "9b363a0455496d094d26ee9928b6fbba24523a95",
            "original_line": 1029,
            "original_position": 92,
            "original_start_line": null,
            "path": "src/nvim/api/extmark.c",
            "position": null,
            "pull_request_review_id": 1694736738,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370092133/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-24T12:38:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370092133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1370125777"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370125777"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think lumping in `ephemeral` extmarks with a concept of extmark invalidation (as an active response to events) really makes sense. \r\n\r\nIMO I would call this option `\"Invalidate\"` or something like that, where `\"line\"` is the current only value (but leaves the door open to invalidate the extmark on other conditions in the future, like deleting the range of chars instead of the line). And then leave `ephemeral` be what it is.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-24T13:05:52Z",
            "diff_hunk": "@@ -2684,6 +2684,17 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                     • \"blend\": blend with background text color. Not supported\n                       for \"inline\" virt_text.\n \n+                  • lifetime : control the lifetime of the mark.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1370125777",
            "id": 1370125777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5RqnXR",
            "original_commit_id": "e828959f8bc289803a85c17de4dc1b24ca85f154",
            "original_line": 2687,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1694788376,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370125777/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-24T13:05:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370125777",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1370128507"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370128507"
                }
            },
            "author_association": "MEMBER",
            "body": "Fine by me. I just went with @lewis6991's suggestion to be able to move forward with the sign refactor.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-24T13:08:04Z",
            "diff_hunk": "@@ -2684,6 +2684,17 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                     • \"blend\": blend with background text color. Not supported\n                       for \"inline\" virt_text.\n \n+                  • lifetime : control the lifetime of the mark.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1370128507",
            "id": 1370128507,
            "in_reply_to_id": 1370125777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5RqoB7",
            "original_commit_id": "e828959f8bc289803a85c17de4dc1b24ca85f154",
            "original_line": 2687,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1694792811,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370128507/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-24T13:32:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370128507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1370442866"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370442866"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm happy if we keep this separate from `ephemeral` and call it `invalidate`, however I would like us to align on what `ephemeral` really means and how it conceptually differs to `invalidate`.\r\n\r\nConceptually I understood ephemeral extmarks to be invalidated/removed at the end of the redraw cycle, which is why I suggested combining these together. I thought this would work out nicely since these options are mutually exclusive and thus reduces entropy and ambiguity.\r\n\r\nI know internally they are implemented by skipping the marktree and are applied to the redraw state directly, but isn't that just an implementation detail?\r\n\r\nIs there a more accurate description we can update `ephemeral` to so the difference between that and `invalidate` is more conceptually distinct?  I guess one significant difference is that `ephemeral` marks can't be inspected with `nvim_buf_get_extmarks`, though this could be treated as a caveat rather than a defining property.\r\n\r\nFor reference here's the current description:\r\n\r\n```\r\n                  • ephemeral : for use with |nvim_set_decoration_provider()|\r\n                    callbacks. The mark will only be used for the current\r\n                    redraw cycle, and not be permantently stored in the\r\n                    buffer.\r\n```",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-24T15:52:30Z",
            "diff_hunk": "@@ -2684,6 +2684,17 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                     • \"blend\": blend with background text color. Not supported\n                       for \"inline\" virt_text.\n \n+                  • lifetime : control the lifetime of the mark.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1370442866",
            "id": 1370442866,
            "in_reply_to_id": 1370125777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Rr0xy",
            "original_commit_id": "e828959f8bc289803a85c17de4dc1b24ca85f154",
            "original_line": 2687,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1695288613,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370442866/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-24T15:52:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370442866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1370859702"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370859702"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok, I agree that decoration providers and ephemeral extmarks are underdocumented, both in concept and detail.\r\n\r\nFor reference, after having them and using them for some while, I think the refactor of the interface that _would_ make sense is more like this: (not saying it has to be done, but it would be more conceptually transparent). Deprecate `ephemeral=true` as suggested. But then do this: add a new lua-only function `vim.decoration_provider_emit_decoration()` . This is no longer an \"extmark\" which lives for any period of time, but just an event (or \"yielded value\" of a generator, etc)  which is fired in response in a lua event handler. \"decoration\" is no longer a synonym to \"decorated extmark\", but a valid thing on its own. (then we can speak of \"ephemeral decorations\" in contrast to \"extmarks with decorations\").\r\n\r\nI'd be happy to expand more on this (and at least improve the documentation if not more) after some refactors to the internals I am currently working on.\r\n\r\n>  I guess one significant difference is that ephemeral marks can't be inspected with nvim_buf_get_extmarks, though this could be treated as a caveat rather than a defining property.\r\n\r\nIt is a caveat that they cannot be logged/introspected in in-process tests _at all_, but it is a defining property that they cannot be inspected the same way. an added inspection interface will be more like inspecting an event log (not inspecting any \"state\").",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-24T22:00:16Z",
            "diff_hunk": "@@ -2684,6 +2684,17 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                     • \"blend\": blend with background text color. Not supported\n                       for \"inline\" virt_text.\n \n+                  • lifetime : control the lifetime of the mark.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1370859702",
            "id": 1370859702,
            "in_reply_to_id": 1370125777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Rtai2",
            "original_commit_id": "e828959f8bc289803a85c17de4dc1b24ca85f154",
            "original_line": 2687,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1695959469,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370859702/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-24T22:00:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370859702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1370882173"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370882173"
                }
            },
            "author_association": "MEMBER",
            "body": "> Deprecate `ephemeral=true` as suggested. But then do this: add a new lua-only function `vim.decoration_provider_emit_decoration()`\r\n\r\nSounds good to me. But there is no need to deprecate `ephemeral=true` here then right? Can just be deprecated whenever this replacement `ephemeral decoration` interface is added.\r\n\r\nDo we then go ahead with a boolean `invalidate` property? Or `invalidate == 'line'` or `invalidate == { 'line',  <???> }`? Or forego adding a new property and keep it internal to the sign refactor only?\r\n\r\n(Happy to do it (remove the documentation for the flag) here if it is better done sooner rather than later. It's just no longer really related to this PR if we don't add a replacing property/interface here.)",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-24T22:30:31Z",
            "diff_hunk": "@@ -2684,6 +2684,17 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                     • \"blend\": blend with background text color. Not supported\n                       for \"inline\" virt_text.\n \n+                  • lifetime : control the lifetime of the mark.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1370882173",
            "id": 1370882173,
            "in_reply_to_id": 1370125777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5RtgB9",
            "original_commit_id": "e828959f8bc289803a85c17de4dc1b24ca85f154",
            "original_line": 2687,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1695994925,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370882173/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-25T14:50:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1370882173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1371511032"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1371511032"
                }
            },
            "author_association": "MEMBER",
            "body": ">  Can just be deprecated whenever this replacement ephemeral decoration interface is added.\r\n\r\nYes, the point is that is completely orthogonal to anything which happens in this PR.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-25T10:26:08Z",
            "diff_hunk": "@@ -2684,6 +2684,17 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                     • \"blend\": blend with background text color. Not supported\n                       for \"inline\" virt_text.\n \n+                  • lifetime : control the lifetime of the mark.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1371511032",
            "id": 1371511032,
            "in_reply_to_id": 1370125777,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Rv5j4",
            "original_commit_id": "e828959f8bc289803a85c17de4dc1b24ca85f154",
            "original_line": 2687,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1696924759,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1371511032/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-25T10:26:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1371511032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1375331070"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375331070"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n///               - invalidate : boolean that indicates whether to remove the\r\n///                   extmark if the start of its range is deleted.\r\n```",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-28T22:53:21Z",
            "diff_hunk": "@@ -512,6 +512,9 @@ Array nvim_buf_get_extmarks(Buffer buffer, Integer ns_id, Object start, Object e\n ///                   callbacks. The mark will only be used for the current\n ///                   redraw cycle, and not be permantently stored in the\n ///                   buffer.\n+///               - invalidate : boolean that indicates if a mark of which the\n+///                   start of it's range is deleted, will also remove the mark\n+///                   from the buffer.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1375331070",
            "id": 1375331070,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5R-eL-",
            "original_commit_id": "d24e69e12575ef5f248961de13de2ebc3fad2d71",
            "original_line": 517,
            "original_position": 6,
            "original_start_line": 515,
            "path": "src/nvim/api/extmark.c",
            "position": null,
            "pull_request_review_id": 1702859907,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375331070/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-28T22:53:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375331070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1375413279"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375413279"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this should be a flag `MT_FLAG_INVALIDATE` on MTKey itself, just like `MT_FLAG_RIGHT_GRAVITY`. This is really a property of the extmark itself and useful even without visible decorations, i e plugin can check that the text containing the mark was deleted.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-29T10:51:27Z",
            "diff_hunk": "@@ -32,6 +32,7 @@ typedef struct {\n   Boolean virt_text_hide;\n   Boolean hl_eol;\n   String hl_mode;\n+  Boolean invalidate;",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1375413279",
            "id": 1375413279,
            "line": 35,
            "node_id": "PRRC_kwDOAPphoM5R-yQf",
            "original_commit_id": "9eaebbe2952c6738ddf17c41b4e492857be4e21c",
            "original_line": 35,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/api/keysets.h",
            "position": 4,
            "pull_request_review_id": 1702938072,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375413279/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-29T10:51:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375413279",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1375416235"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375416235"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah makes sense, was wondering about this myself as well.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-29T11:13:08Z",
            "diff_hunk": "@@ -32,6 +32,7 @@ typedef struct {\n   Boolean virt_text_hide;\n   Boolean hl_eol;\n   String hl_mode;\n+  Boolean invalidate;",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1375416235",
            "id": 1375416235,
            "in_reply_to_id": 1375413279,
            "line": 35,
            "node_id": "PRRC_kwDOAPphoM5R-y-r",
            "original_commit_id": "9eaebbe2952c6738ddf17c41b4e492857be4e21c",
            "original_line": 35,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/api/keysets.h",
            "position": 4,
            "pull_request_review_id": 1702940961,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375416235/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-29T11:13:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375416235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1375434943"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375434943"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think we want just the start of the range. I think invalidate should delete the mark only if the entire range is deleted. If just the head or the tail of a range is deleted, then the mark is shortened, like it does already.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-29T13:11:09Z",
            "diff_hunk": "@@ -2700,6 +2700,8 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                     callbacks. The mark will only be used for the current\n                     redraw cycle, and not be permantently stored in the\n                     buffer.\n+                  • invalidate : boolean that indicates whether to remove the\n+                    extmark if the start of its range is deleted.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1375434943",
            "id": 1375434943,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5R-3i_",
            "original_commit_id": "9eaebbe2952c6738ddf17c41b4e492857be4e21c",
            "original_line": 2704,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1702958864,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375434943/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-29T13:11:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375434943",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1375438886"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375438886"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah agree TBH. I'll try to adjust for that.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-10-29T13:34:40Z",
            "diff_hunk": "@@ -2700,6 +2700,8 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                     callbacks. The mark will only be used for the current\n                     redraw cycle, and not be permantently stored in the\n                     buffer.\n+                  • invalidate : boolean that indicates whether to remove the\n+                    extmark if the start of its range is deleted.",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1375438886",
            "id": 1375438886,
            "in_reply_to_id": 1375434943,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5R-4gm",
            "original_commit_id": "9eaebbe2952c6738ddf17c41b4e492857be4e21c",
            "original_line": 2704,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1702962753,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375438886/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-29T13:34:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1375438886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1382609444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1382609444"
                }
            },
            "author_association": "MEMBER",
            "body": "I was also referring to this here https://github.com/neovim/neovim/pull/25882#discussion_r1382553709. My current tests failed without setting the flags for `old_mark`. I'll try to add a test that fails without line 137-139, I thought I had one before.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-11-05T16:54:39Z",
            "diff_hunk": "@@ -111,13 +111,15 @@ void extmark_set(buf_T *buf, uint32_t ns_id, uint32_t *idp, int row, colnr_T col\n             // apparently incapable of handling basic integer constants.\n             // This can be underanged as soon as we bump minimal gcc version.\n             old_mark.flags = (uint16_t)(old_mark.flags\n-                                        | (decor->hl_eol ? (uint16_t)MT_FLAG_HL_EOL : (uint16_t)0));\n+                                        | (uint16_t)(decor->hl_eol ? MT_FLAG_HL_EOL : 0));\n             old_mark.priority = decor->priority;\n           }\n+          old_mark.flags |= no_undo ? MT_FLAG_NO_UNDO : 0;",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1382609444",
            "id": 1382609444,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5SaPIk",
            "original_commit_id": "6a8170fdee13043b14be616adadeacccf0733fe1",
            "original_line": 117,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/extmark.c",
            "position": null,
            "pull_request_review_id": 1714019984,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1382609444/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-05T16:54:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1382609444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1382618284"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1382618284"
                }
            },
            "author_association": "MEMBER",
            "body": "sure yes. A test would be good. My aim is to clean up the mess that is the flags (the concept of \"external\" flags is a bit fuzzy and outdated), once the existing batch of open PR:s are done.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-11-05T17:51:42Z",
            "diff_hunk": "@@ -111,13 +111,15 @@ void extmark_set(buf_T *buf, uint32_t ns_id, uint32_t *idp, int row, colnr_T col\n             // apparently incapable of handling basic integer constants.\n             // This can be underanged as soon as we bump minimal gcc version.\n             old_mark.flags = (uint16_t)(old_mark.flags\n-                                        | (decor->hl_eol ? (uint16_t)MT_FLAG_HL_EOL : (uint16_t)0));\n+                                        | (uint16_t)(decor->hl_eol ? MT_FLAG_HL_EOL : 0));\n             old_mark.priority = decor->priority;\n           }\n+          old_mark.flags |= no_undo ? MT_FLAG_NO_UNDO : 0;",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1382618284",
            "id": 1382618284,
            "in_reply_to_id": 1382609444,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5SaRSs",
            "original_commit_id": "6a8170fdee13043b14be616adadeacccf0733fe1",
            "original_line": 117,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/extmark.c",
            "position": null,
            "pull_request_review_id": 1714029271,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1382618284/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-05T17:51:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1382618284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1384059585"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1384059585"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    command('silent undo')\r\n```",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-11-06T21:46:45Z",
            "diff_hunk": "@@ -1599,12 +1599,71 @@ describe('API/extmarks', function()\n     set_extmark(ns, 3, 0, 0, { sign_text = '>>' })\n     set_extmark(ns, 4, 0, 0, { virt_text = {{'text', 'Normal'}}})\n     set_extmark(ns, 5, 0, 0, { virt_lines = {{{ 'line', 'Normal' }}}})\n-    eq(5, #get_extmarks(-1, 0, -1, { details = true }))\n+    eq(5, #get_extmarks(-1, 0, -1, {}))\n     eq({{ 2, 0, 0 }}, get_extmarks(-1, 0, -1, { type = 'highlight' }))\n     eq({{ 3, 0, 0 }}, get_extmarks(-1, 0, -1, { type = 'sign' }))\n     eq({{ 4, 0, 0 }}, get_extmarks(-1, 0, -1, { type = 'virt_text' }))\n     eq({{ 5, 0, 0 }}, get_extmarks(-1, 0, -1, { type = 'virt_lines' }))\n   end)\n+\n+  it(\"invalidated marks are deleted\", function()\n+    screen = Screen.new(40, 6)\n+    screen:attach()\n+    feed('dd6iaaa bbb ccc<CR><ESC>gg')\n+    set_extmark(ns, 1, 0, 0, { sign_text = 'S1' })\n+    set_extmark(ns, 2, 1, 0, { invalidate = true, sign_text = 'S2' })\n+    -- mark with invalidate is removed\n+    command('2d')\n+    screen:expect([[\n+      S1aaa bbb ccc                           |\n+        ^aaa bbb ccc                           |\n+        aaa bbb ccc                           |\n+        aaa bbb ccc                           |\n+        aaa bbb ccc                           |\n+                                              |\n+    ]])\n+    -- mark is brought back with undo_restore == true\n+    command('undo')",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1384059585",
            "id": 1384059585,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5SfxLB",
            "original_commit_id": "43b344642343d6db247ab6e46833ffb84d0961ea",
            "original_line": 1626,
            "original_position": 29,
            "original_start_line": null,
            "path": "test/functional/api/extmark_spec.lua",
            "position": null,
            "pull_request_review_id": 1716330994,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1384059585/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-06T21:46:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1384059585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25767#discussion_r1384085107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25767"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1384085107"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure. Still looking for a way to unflake this test though. Somehow the restored sign isn't always drawn on CI.",
            "commit_id": "8efe00e984319785e03714adc81467b2890622ad",
            "created_at": "2023-11-06T22:09:28Z",
            "diff_hunk": "@@ -1599,12 +1599,71 @@ describe('API/extmarks', function()\n     set_extmark(ns, 3, 0, 0, { sign_text = '>>' })\n     set_extmark(ns, 4, 0, 0, { virt_text = {{'text', 'Normal'}}})\n     set_extmark(ns, 5, 0, 0, { virt_lines = {{{ 'line', 'Normal' }}}})\n-    eq(5, #get_extmarks(-1, 0, -1, { details = true }))\n+    eq(5, #get_extmarks(-1, 0, -1, {}))\n     eq({{ 2, 0, 0 }}, get_extmarks(-1, 0, -1, { type = 'highlight' }))\n     eq({{ 3, 0, 0 }}, get_extmarks(-1, 0, -1, { type = 'sign' }))\n     eq({{ 4, 0, 0 }}, get_extmarks(-1, 0, -1, { type = 'virt_text' }))\n     eq({{ 5, 0, 0 }}, get_extmarks(-1, 0, -1, { type = 'virt_lines' }))\n   end)\n+\n+  it(\"invalidated marks are deleted\", function()\n+    screen = Screen.new(40, 6)\n+    screen:attach()\n+    feed('dd6iaaa bbb ccc<CR><ESC>gg')\n+    set_extmark(ns, 1, 0, 0, { sign_text = 'S1' })\n+    set_extmark(ns, 2, 1, 0, { invalidate = true, sign_text = 'S2' })\n+    -- mark with invalidate is removed\n+    command('2d')\n+    screen:expect([[\n+      S1aaa bbb ccc                           |\n+        ^aaa bbb ccc                           |\n+        aaa bbb ccc                           |\n+        aaa bbb ccc                           |\n+        aaa bbb ccc                           |\n+                                              |\n+    ]])\n+    -- mark is brought back with undo_restore == true\n+    command('undo')",
            "html_url": "https://github.com/neovim/neovim/pull/25767#discussion_r1384085107",
            "id": 1384085107,
            "in_reply_to_id": 1384059585,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Sf3Zz",
            "original_commit_id": "43b344642343d6db247ab6e46833ffb84d0961ea",
            "original_line": 1626,
            "original_position": 29,
            "original_start_line": null,
            "path": "test/functional/api/extmark_spec.lua",
            "position": null,
            "pull_request_review_id": 1716372132,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1384085107/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-06T22:11:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1384085107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "This is not a breaking change, right?",
            "created_at": "2023-10-24T12:35:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1777120059",
            "id": 1777120059,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5p7LM7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777120059/reactions"
            },
            "updated_at": "2023-10-24T12:35:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777120059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Guess not, `ephemeral` is soft deprecated. (Are there any additional guidelines I didn't follow for soft deprecating API argument properties?)",
            "created_at": "2023-10-24T12:36:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1777122772",
            "id": 1777122772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5p7L3U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777122772/reactions"
            },
            "updated_at": "2023-10-26T14:43:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777122772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ideally `invalidate` should be range based and not line based. E.g. when a word is deleted with `dw`, the extmarks within the deleted word are also deleted. However I appreciate this may be more complicated to implement so either:\r\n\r\n1. keep the logic here internal to #25724 and expose this later when we can do it more generally for ranges.\r\n2. add `line` as an unstable option by prefixing with `_` to `_line` so we can change `_line` -> `range` at a later date without incurring the cost of a deprecation cycle. \r\n3. simply go with this PR and accept both `line` and `range` going forward.\r\n\r\nMy preference here in order would be 2, 1, 3.\r\n\r\nWhat do you think?",
            "created_at": "2023-10-24T15:31:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1777492884",
            "id": 1777492884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5p8mOU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777492884/reactions"
            },
            "updated_at": "2023-10-24T15:53:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777492884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm not sure, I guess `\"line\"` will indeed become redundant when `\"range\"` is implemented. So in that sense going with 2. or 1. might be better. Do we have precedent for adding unstable args keys? I'm fine with either. But yeah I suspect supporting mark removal when the range is deleted will be more difficult so having the unstable flag in the meantime might be nice.",
            "created_at": "2023-10-24T15:48:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1777524414",
            "id": 1777524414,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5p8t6-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777524414/reactions"
            },
            "updated_at": "2023-10-24T16:04:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777524414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Atm the only unstable API elements are:\r\n- functions prefixed with `nvim__`.\r\n- `_hl_def` and `_on_spell_nav` in `nvim_set_decorartion_provider`, however they are undocumented.\r\n\r\nSo maybe we add this to the API without documenting?",
            "created_at": "2023-10-24T15:59:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1777547242",
            "id": 1777547242,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5p8zfq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777547242/reactions"
            },
            "updated_at": "2023-10-24T15:59:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777547242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I believe `line` would be inclusive to `range`, so perhaps `invalidate` can just be a boolean for now, until other invalidation reasons are added, if ever. Nothing user-facing would have to change when we can support range removal, except the documentation? It can be made an `Object` if other invalidation reasons are ever added.",
            "created_at": "2023-10-24T16:37:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1777614066",
            "id": 1777614066,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5p9Dzy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777614066/reactions"
            },
            "updated_at": "2023-10-24T16:41:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1777614066",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I would have to do more testing to verify correctness but this appears to work properly for removing marks when the entirety (or start) of their range is deleted (not just lines). Does this look right @bfredl? And would it be acceptable to run/loop over `extmark_get()` whenever `marktree_splice()` is called for deleted text?\r\n\r\nI also wonder if this `invalidate` property should be added to the `MTKey` struct rather than it's `Decoration`.",
            "created_at": "2023-10-25T21:31:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1780085393",
            "id": 1780085393,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qGfKR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1780085393/reactions"
            },
            "updated_at": "2023-10-26T22:13:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1780085393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think range removal works as expected, so I've gone ahead and pushed an update. Perhaps more test cases are in order although the current tests cover all that I could think of. I'll leave this be until more feedback.",
            "created_at": "2023-10-25T22:48:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1780162337",
            "id": 1780162337,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qGx8h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1780162337/reactions"
            },
            "updated_at": "2023-10-25T22:48:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1780162337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Updated to only remove marks when the entirety of its range is deleted.\r\nAlso exchanged `decor->invalidate` for `MT_FLAG_INVALIDATE` but the flag usage was quite confusing to me so I'm not positive that I got it right. Seems to work though.",
            "created_at": "2023-10-29T19:01:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1784198284",
            "id": 1784198284,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qWLSM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1784198284/reactions"
            },
            "updated_at": "2023-10-29T21:04:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1784198284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A current concern (@bfredl had on matrix) is what should happen when the range delete is undone. Instead of actually deleting the mark we could set another flag for invalidated marks that would simply cause them to not be drawn(/show up in `nvim_buf_get_extmarks()`?). This way restoring them after an undo would simply amount to unsetting the invalid flag.\r\n\r\nI wonder if that is what we actually want though. This would still place the burden of actually deleting the marks on the user/plugin. Only thing we gain is a way to automatically hide sign/virtual text when the range it is attached to is deleted I guess. What do you think @lewis6991?",
            "created_at": "2023-10-30T12:46:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1785116974",
            "id": 1785116974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qZrku",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1785116974/reactions"
            },
            "updated_at": "2023-10-30T12:46:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1785116974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This would still place the burden of actually deleting the marks on the user/plugin\r\n\r\nYes? this is how all extmarks has worked since forever and is not meant to be a big burden anyway. `nvim_buf_clear_namespace()` exists for a reason.",
            "created_at": "2023-10-30T15:37:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1785485389",
            "id": 1785485389,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qbFhN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1785485389/reactions"
            },
            "updated_at": "2023-10-30T15:39:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1785485389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Well I'm just trying to grasp what this property's intended use is. I thought this 'invalidate' property was intended to alleviate the \"burden\" of removing marks.\r\n\r\nI just got around to proposing it as an API extension because it's needed to delete signs in the sign refactor.\r\nIf it's not clear to me how exactly this API extension should be implemented I'd rather just keep it internal to the sign refactor...\r\n\r\nAs I understand it now, the intended use would be automatically hiding sign and virtual text marks of which the range got deleted. There would be no difference in behavior for highlight marks as they are already invisible when the range is reduced to 0. Does that check out?",
            "created_at": "2023-10-30T16:03:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1785538465",
            "id": 1785538465,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qbSeh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1785538465/reactions"
            },
            "updated_at": "2023-10-30T16:37:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1785538465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If it's not clear to me how exactly this API extension should be implemented I'd rather just keep it internal to the sign refactor...\r\n\r\nThat would be a perfectly fine option. we don't need to rush the design of an external API if there is no immediate need for it.",
            "created_at": "2023-10-30T16:46:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1785640279",
            "id": 1785640279,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qbrVX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1785640279/reactions"
            },
            "updated_at": "2023-10-30T16:46:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1785640279",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> A current concern (@bfredl had on matrix) is what should happen when the range delete is undone. Instead of actually deleting the mark we could set another flag for invalidated marks that would simply cause them to not be drawn(/show up in nvim_buf_get_extmarks()?). This way restoring them after an undo would simply amount to unsetting the invalid flag.\r\n>\r\n> I wonder if that is what we actually want though. This would still place the burden of actually deleting the marks on the user/plugin. Only thing we gain is a way to automatically hide sign/virtual text when the range it is attached to is deleted I guess. What do you think @lewis6991?\r\n\r\nThe main usecase I have for `invalidate` is for when extmarks are set directly through `nvim_buf_attach` callbacks. Since these callbacks are agnostic to undo events, the fact that the extmark persists has been inconvenient from my experience as the start of each `on_lines` callback needs to call `nvim_buf_clear_namespace` on the new range.\r\n\r\nThis has been particularly awkward to deal with in Gitsigns which implements an [agnostic signs interface](https://github.com/lewis6991/gitsigns.nvim/blob/main/lua/gitsigns/signs.lua) which uses either extmarks or legacy signs as a backend. `invalidate` would allow me to remove `on_lines` from this interface, and have a closer mapping on implementing legacy signs via extmarks.\r\n\r\nSo hiding the extmark instead of deleting doesn't solve my problem as the motivation for `invalidate` is to fully remove the marks. If `nvim_buf_attach` callbacks were more undo aware then this wouldn't be needed, however I do like the simplicity of these callbacks being undo agnostic as from a plugin POV (most of the time) an undo event shouldn't be treated any differently to a normal edit.",
            "created_at": "2023-11-02T10:02:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1790421741",
            "id": 1790421741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qt6rt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790421741/reactions"
            },
            "updated_at": "2023-11-02T10:02:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790421741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's a good description of your use case, thanks.\r\n\r\nI still think we want `invalidate=true` to respect undo/redo by default, but it would make sense with a separate flag to opt-out of undo handling for a given extmark. we do quite a bit of bookkeeping to restore the precise position of marks at undo/redo time and this is quite wasteful if the plugin just uses the stale marks as a visual approximation before replacing marks anyway in reaction to a buffer change. so something like `ignore_undo=true` would make sense as a flag, and as a logical conclusion, combining `invalidate` with `ignore_undo` should just delete the mark directly at invalidation as it is would never be re-validated again.",
            "created_at": "2023-11-02T10:54:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1790502818",
            "id": 1790502818,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5quOei",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790502818/reactions"
            },
            "updated_at": "2023-11-02T10:54:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790502818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So does this mean\r\n```\r\n                 • invalidate : boolean that indicates whether to remove the\r\n                    extmark if the entirety of its range is deleted.\r\n```\r\nbecomes:\r\n```\r\n                 • invalidate : boolean that indicates whether to hide the\r\n                    extmark if the entirety of its range is deleted. If `ignore_undo`\r\n                    is also provided then the mark is deleted.\r\n```\r\n\r\nAlternatively we could have `invalidate = 'hide'|'delete'` since I don't know what `ignore_undo` would do without `invalidate`?",
            "created_at": "2023-11-02T11:05:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1790518703",
            "id": 1790518703,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5quSWv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790518703/reactions"
            },
            "updated_at": "2023-11-02T11:05:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790518703",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> what ignore_undo would do without invalidate?\r\n\r\nConcretely, it would avoid the need to save any specific info about the extmark in the undo tree (as is done by `u_extmark_set()`) which is relevant regardless if `invalidate` functionality is used or not.",
            "created_at": "2023-11-02T12:03:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1790603706",
            "id": 1790603706,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5qunG6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790603706/reactions"
            },
            "updated_at": "2023-11-02T12:03:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1790603706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm this added test looks to be flaky for some reason: https://github.com/neovim/neovim/actions/runs/6772795060/job/18406169423?pr=25767#step:8:8151.",
            "created_at": "2023-11-06T15:40:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1795162989",
            "id": 1795162989,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5rAANt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1795162989/reactions"
            },
            "updated_at": "2023-11-06T15:40:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1795162989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Do I add an `invalid`, or `invalidated` key to `ExtmarkInfo` in addition to `invalidate`?\r\nI think it makes sense to be able to inspect the valid status with `nvim_buf_get_extmarks()` in general. Also would help me to make sure that the mark is at least being validated and that it is just a redraw issue for this flaky test.",
            "created_at": "2023-11-06T22:38:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/25767#issuecomment-1796965482",
            "id": 1796965482,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
            "node_id": "IC_kwDOAPphoM5rG4Rq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1796965482/reactions"
            },
            "updated_at": "2023-11-06T22:38:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1796965482",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25767/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25767/commits",
    "created_at": "2023-10-24T12:20:46Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25767.diff",
    "draft": false,
    "head": {
        "label": "luukvbaal:signdel",
        "ref": "signdel",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/luukvbaal/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/luukvbaal/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/luukvbaal/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/luukvbaal/neovim/branches{/branch}",
            "clone_url": "https://github.com/luukvbaal/neovim.git",
            "collaborators_url": "https://api.github.com/repos/luukvbaal/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/luukvbaal/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/luukvbaal/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/luukvbaal/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/luukvbaal/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/luukvbaal/neovim/contributors",
            "created_at": "2022-07-05T23:21:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/luukvbaal/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/luukvbaal/neovim/downloads",
            "events_url": "https://api.github.com/repos/luukvbaal/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/luukvbaal/neovim/forks",
            "full_name": "luukvbaal/neovim",
            "git_commits_url": "https://api.github.com/repos/luukvbaal/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/luukvbaal/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/luukvbaal/neovim/git/tags{/sha}",
            "git_url": "git://github.com/luukvbaal/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/luukvbaal/neovim/hooks",
            "html_url": "https://github.com/luukvbaal/neovim",
            "id": 510922471,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/luukvbaal/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/luukvbaal/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/luukvbaal/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/luukvbaal/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/luukvbaal/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/luukvbaal/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/luukvbaal/neovim/merges",
            "milestones_url": "https://api.github.com/repos/luukvbaal/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHnQO5w",
            "notifications_url": "https://api.github.com/repos/luukvbaal/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/luukvbaal/neovim/pulls{/number}",
            "pushed_at": "2023-11-07T01:02:25Z",
            "releases_url": "https://api.github.com/repos/luukvbaal/neovim/releases{/id}",
            "size": 233952,
            "ssh_url": "git@github.com:luukvbaal/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/luukvbaal/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/luukvbaal/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/luukvbaal/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/luukvbaal/neovim/subscription",
            "svn_url": "https://github.com/luukvbaal/neovim",
            "tags_url": "https://api.github.com/repos/luukvbaal/neovim/tags",
            "teams_url": "https://api.github.com/repos/luukvbaal/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/luukvbaal/neovim/git/trees{/sha}",
            "updated_at": "2022-09-14T02:39:38Z",
            "url": "https://api.github.com/repos/luukvbaal/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8efe00e984319785e03714adc81467b2890622ad",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25767",
    "id": 1570927259,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25767",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "extmarks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/extmarks"
        }
    ],
    "locked": false,
    "merge_commit_sha": "c30b105feece61a67a7f6601f28e972b8afd6955",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5donKb",
    "number": 25767,
    "patch_url": "https://github.com/neovim/neovim/pull/25767.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
            "events_url": "https://api.github.com/users/famiu/events{/privacy}",
            "followers_url": "https://api.github.com/users/famiu/followers",
            "following_url": "https://api.github.com/users/famiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/famiu",
            "id": 29580810,
            "login": "famiu",
            "node_id": "MDQ6VXNlcjI5NTgwODEw",
            "organizations_url": "https://api.github.com/users/famiu/orgs",
            "received_events_url": "https://api.github.com/users/famiu/received_events",
            "repos_url": "https://api.github.com/users/famiu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/famiu"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25767/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8efe00e984319785e03714adc81467b2890622ad",
    "title": "feat(extmarks): add 'invalidate' property",
    "updated_at": "2023-11-07T01:02:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25767",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal"
    }
}