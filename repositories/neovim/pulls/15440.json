{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15440/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15440/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/15440"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15440"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15440/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/3fb372eba48796b5d0a7758f91e168be8e70e183"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4813,
            "forks_count": 4813,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1656,
            "open_issues_count": 1656,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-08-13T22:55:10Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248136,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 68455,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-08-14T01:46:07Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 68455,
            "watchers_count": 68455,
            "web_commit_signoff_required": false
        },
        "sha": "3d948a4dc4b2cd3c8d3ac497caf3dfe25adfb90d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "When starting a terminal buffer with no arguments (i.e. `:terminal`), automatically close the buffer if the shell exits without an error.\r\n\r\nCloses #8975.\r\n",
    "closed_at": "2023-08-13T12:23:15Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r693233441"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693233441"
                }
            },
            "author_association": "MEMBER",
            "body": "Probably should be global (from main.c init_defaults() or whatever) rather than `<buffer>` local. And we can declare it in a `nvim_` augroup so that users can opt-out.\r\n\r\nI guess the `*eap->arg == NUL` is important... In a global TermOpen autocmd, that could possibly be  derived from the `term://` buffer name, or maybe we should expose the args in `v:event`.  Or `nvim_get_chan_info(&channel)` ?",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-20T21:44:34Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r693233441",
            "id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzIzMzQ0MQ==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 735404350,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693233441/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-20T21:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693233441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r693240110"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693240110"
                }
            },
            "author_association": "MEMBER",
            "body": "I don’t think it should be global as then it would apply to all `termopen` calls rather than just `:terminal`. The former provides finer grained control so we should make fewer assumptions and allow the user to do whatever they want, while `:terminal` is a convenience function that should have more convenient defaults.\r\n\r\nMy 2¢.",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-20T22:04:16Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r693240110",
            "id": 693240110,
            "in_reply_to_id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzI0MDExMA==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 735412296,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693240110/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-20T22:04:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693240110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r693288627"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693288627"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm. Thinking about how a user could opt-out of this in its current form: `autocmd TermClose` is done after the `do_cmdline_cmd(ex_cmd);` above. So this is setup after TermOpen... how would users opt-out?\r\n\r\n> I don’t think it should be global as then it would apply to all `termopen` calls\r\n\r\nMakes sense, but OTOH consistent behavior is easier to reason about, and to document. Clear documentation (one-liner that can be pasted), somewhat addresses the termopen() case, and avoids contortions for the :terminal case.\r\n\r\nA global autocmd or augroup solves the user config case, but doesn't solve the termopen() case for scripts:  can't selectively opt-out, except by `:noautocmd call termopen(...)` ... maybe that's reasonable...\r\n",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-21T02:14:56Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r693288627",
            "id": 693288627,
            "in_reply_to_id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzI4ODYyNw==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 735457898,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693288627/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-21T02:14:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693288627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r693289197"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693289197"
                }
            },
            "author_association": "MEMBER",
            "body": "> A global autocmd or augroup solves the user config case, but doesn't solve the termopen() case for scripts: can't selectively opt-out, except by `:noautocmd call termopen(...)` ... maybe that's reasonable...\r\n\r\nI think that's reasonable, especially if it's documented.\r\n\r\nIf we do make it a global default autocommand then we may want to resolve https://github.com/neovim/neovim/pull/15401 first so that we can use whatever default autocommand framework we decide on.",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-21T02:20:14Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r693289197",
            "id": 693289197,
            "in_reply_to_id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzI4OTE5Nw==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 735458262,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693289197/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-21T02:20:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693289197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r699396272"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/699396272"
                }
            },
            "author_association": "MEMBER",
            "body": "I've been thinking about this more and two things occurred to me:\r\n\r\n1) Making it a global autocommand means we can't use the heuristic of whether or not an argument was provided to `:terminal` to determine if we should automatically close the buffer or not. Right now, we create this autocommand if there is no argument and we are therefore using a default shell. But if, for instance, a user runs `:terminal ls` then we *do not* want to automatically close the buffer when the job completes. If we use a global autocommand we will need another flag or something to indicate which state we are in.\r\n\r\n2) I wonder if it's not actually more common that users may want to opt-out of the auto-close behavior on a per-job/per-terminal instance, rather than opting out globally. This is much more straightforward to do with a buffer-local autocommand. This would also provide plugins finer-grained control to opt out of this behavior, which wouldn't be possible (or at least, more complex) with a global autocommand.\r\n\r\nFor these two reasons I think we ought to stick with a buffer-local autocommand. What do you think?",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-31T14:43:54Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r699396272",
            "id": 699396272,
            "in_reply_to_id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTM5NjI3Mg==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 742826635,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699396272/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-31T14:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699396272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r699416859"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/699416859"
                }
            },
            "author_association": "MEMBER",
            "body": "> 1\\. ... But if, for instance, a user runs `:terminal ls` then we _do not_ want to automatically close the buffer when the job completes. If we use a global autocommand we will need another flag or something to indicate which state we are in.\r\n\r\nyeah, that's where I was going with [this comment](https://github.com/neovim/neovim/pull/15440#discussion_r693233441):\r\n\r\n> In a global TermOpen autocmd, that could possibly be derived from the `term://` buffer name, or maybe we should expose the args in `v:event`. Or `nvim_get_chan_info(&channel)`\r\n\r\nre (2):\r\n\r\n> This is much more straightforward to do with a buffer-local autocommand. This would also provide plugins finer-grained control to opt out of this behavior,\r\n\r\nShould work, since this default autocmd will always be defined before any user/plugin autocmds. Just needs a unique augroup, something like `nvim_terminal_close`.\r\n\r\n The global autocmd seems less messy but requires more work on our side, as discussed above.",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-31T15:04:21Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r699416859",
            "id": 699416859,
            "in_reply_to_id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTQxNjg1OQ==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 742854426,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699416859/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-31T15:06:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699416859",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r699439652"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/699439652"
                }
            },
            "author_association": "MEMBER",
            "body": "> Should work, since this default autocmd will always be defined before any user/plugin autocmds. Just needs a unique augroup, something like `nvim_terminal_close`.\r\n\r\nThe plugin would need to disable the global autocommand in that case though, which the user may not want. The only way around this would be to add some kind of buffer-local variable that acts as a flag (e.g. `let b:terminal_autoclose = v:false`) that the plugin could set. But if we're doing that, why not just use a buffer-local autocommand?\r\n\r\nI guess I disagree that a global autocommand is less messy, it paints with too broad of a brush so we end up needing to introduce further measures to account for edge cases and exceptions.",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-31T15:29:07Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r699439652",
            "id": 699439652,
            "in_reply_to_id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTQzOTY1Mg==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 742884983,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699439652/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-31T15:29:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699439652",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r699483612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/699483612"
                }
            },
            "author_association": "MEMBER",
            "body": ">> Should work, since this default autocmd will always be defined before any user/plugin autocmds. Just needs a unique augroup, something like `nvim_terminal_close`.\r\n\r\n^ this was regarding buffer-local autocommand",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-31T16:20:31Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r699483612",
            "id": 699483612,
            "in_reply_to_id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTQ4MzYxMg==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 742943188,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699483612/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-31T16:20:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699483612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r699486960"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/699486960"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah cool, sorry for the misunderstanding 😅 ",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2021-08-31T16:24:30Z",
            "diff_hunk": "@@ -9504,6 +9504,13 @@ static void ex_terminal(exarg_T *eap)\n   }\n \n   do_cmdline_cmd(ex_cmd);\n+\n+  if (*eap->arg == NUL) {\n+    do_cmdline_cmd(\"autocmd TermClose <buffer> \"\n+                   \" if !v:event.status | \"\n+                   \"   exec 'bdelete! ' .. expand('<abuf>') | \"\n+                   \" endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r699486960",
            "id": 699486960,
            "in_reply_to_id": 693233441,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTQ4Njk2MA==",
            "original_commit_id": "5f62d2a3306fc1a5c60a52e386ea9d932a16a853",
            "original_line": 9512,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 742947298,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699486960/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-31T16:24:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699486960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r1292779055"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292779055"
                }
            },
            "author_association": "MEMBER",
            "body": "This will close the current split window (if any). That's probably unwanted in many cases, so we need either of:\r\n\r\n- open `:terminal` in split by default\r\n- add a `:bdelete` variant that doesn't close the current split (or hack it here using `b#`) https://github.com/neovim/neovim/issues/2434",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2023-08-13T12:34:16Z",
            "diff_hunk": "@@ -1107,13 +1107,26 @@ end\n \n function vim._init_default_autocmds()\n   local nvim_terminal_augroup = vim.api.nvim_create_augroup('nvim_terminal', {})\n-  vim.api.nvim_create_autocmd({ 'bufreadcmd' }, {\n+  vim.api.nvim_create_autocmd({ 'BufReadCmd' }, {\n     pattern = 'term://*',\n     group = nvim_terminal_augroup,\n     nested = true,\n     command = \"if !exists('b:term_title')|call termopen(matchstr(expand(\\\"<amatch>\\\"), '\\\\c\\\\mterm://\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), {'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), '\\\\c\\\\mterm://\\\\(.\\\\{-}\\\\)//'), 1, ''))})\",\n   })\n-  vim.api.nvim_create_autocmd({ 'cmdwinenter' }, {\n+  vim.api.nvim_create_autocmd({ 'TermClose' }, {\n+    group = nvim_terminal_augroup,\n+    desc = 'Automatically close terminal buffers when started with no arguments and exiting without an error',\n+    callback = function(args)\n+      if vim.v.event.status == 0 then\n+        local info = vim.api.nvim_get_chan_info(vim.bo[args.buf].channel)\n+        local argv = info.argv or {}\n+        if #argv == 1 and argv[1] == vim.o.shell then\n+          vim.cmd({ cmd = 'bdelete', args = { args.buf }, bang = true })",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r1292779055",
            "id": 1292779055,
            "line": 1124,
            "node_id": "PRRC_kwDOAPphoM5NDj4v",
            "original_commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "original_line": 1124,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/_editor.lua",
            "position": 20,
            "pull_request_review_id": 1575812682,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292779055/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-13T12:34:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292779055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r1292786345"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292786345"
                }
            },
            "author_association": "MEMBER",
            "body": "I made https://github.com/neovim/neovim/pull/15427 a while ago for the first option. Even though it would probably break a lot of things, I think I’d still prefer the split-by-default behavior 😬",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2023-08-13T13:09:23Z",
            "diff_hunk": "@@ -1107,13 +1107,26 @@ end\n \n function vim._init_default_autocmds()\n   local nvim_terminal_augroup = vim.api.nvim_create_augroup('nvim_terminal', {})\n-  vim.api.nvim_create_autocmd({ 'bufreadcmd' }, {\n+  vim.api.nvim_create_autocmd({ 'BufReadCmd' }, {\n     pattern = 'term://*',\n     group = nvim_terminal_augroup,\n     nested = true,\n     command = \"if !exists('b:term_title')|call termopen(matchstr(expand(\\\"<amatch>\\\"), '\\\\c\\\\mterm://\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), {'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), '\\\\c\\\\mterm://\\\\(.\\\\{-}\\\\)//'), 1, ''))})\",\n   })\n-  vim.api.nvim_create_autocmd({ 'cmdwinenter' }, {\n+  vim.api.nvim_create_autocmd({ 'TermClose' }, {\n+    group = nvim_terminal_augroup,\n+    desc = 'Automatically close terminal buffers when started with no arguments and exiting without an error',\n+    callback = function(args)\n+      if vim.v.event.status == 0 then\n+        local info = vim.api.nvim_get_chan_info(vim.bo[args.buf].channel)\n+        local argv = info.argv or {}\n+        if #argv == 1 and argv[1] == vim.o.shell then\n+          vim.cmd({ cmd = 'bdelete', args = { args.buf }, bang = true })",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r1292786345",
            "id": 1292786345,
            "in_reply_to_id": 1292779055,
            "line": 1124,
            "node_id": "PRRC_kwDOAPphoM5NDlqp",
            "original_commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "original_line": 1124,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/_editor.lua",
            "position": 20,
            "pull_request_review_id": 1575821511,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292786345/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-13T23:27:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292786345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r1292841589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292841589"
                }
            },
            "author_association": "MEMBER",
            "body": "Do you mean https://github.com/neovim/neovim/pull/15427 ? Unless it breaks fugitive I think we should try it.",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2023-08-13T19:08:08Z",
            "diff_hunk": "@@ -1107,13 +1107,26 @@ end\n \n function vim._init_default_autocmds()\n   local nvim_terminal_augroup = vim.api.nvim_create_augroup('nvim_terminal', {})\n-  vim.api.nvim_create_autocmd({ 'bufreadcmd' }, {\n+  vim.api.nvim_create_autocmd({ 'BufReadCmd' }, {\n     pattern = 'term://*',\n     group = nvim_terminal_augroup,\n     nested = true,\n     command = \"if !exists('b:term_title')|call termopen(matchstr(expand(\\\"<amatch>\\\"), '\\\\c\\\\mterm://\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), {'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), '\\\\c\\\\mterm://\\\\(.\\\\{-}\\\\)//'), 1, ''))})\",\n   })\n-  vim.api.nvim_create_autocmd({ 'cmdwinenter' }, {\n+  vim.api.nvim_create_autocmd({ 'TermClose' }, {\n+    group = nvim_terminal_augroup,\n+    desc = 'Automatically close terminal buffers when started with no arguments and exiting without an error',\n+    callback = function(args)\n+      if vim.v.event.status == 0 then\n+        local info = vim.api.nvim_get_chan_info(vim.bo[args.buf].channel)\n+        local argv = info.argv or {}\n+        if #argv == 1 and argv[1] == vim.o.shell then\n+          vim.cmd({ cmd = 'bdelete', args = { args.buf }, bang = true })",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r1292841589",
            "id": 1292841589,
            "in_reply_to_id": 1292779055,
            "line": 1124,
            "node_id": "PRRC_kwDOAPphoM5NDzJ1",
            "original_commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "original_line": 1124,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/_editor.lua",
            "position": 20,
            "pull_request_review_id": 1575879160,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292841589/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-13T19:08:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292841589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15440#discussion_r1292876248"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15440"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292876248"
                }
            },
            "author_association": "MEMBER",
            "body": "Oops, yes, thanks. Updated my original comment. ",
            "commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "created_at": "2023-08-13T23:27:17Z",
            "diff_hunk": "@@ -1107,13 +1107,26 @@ end\n \n function vim._init_default_autocmds()\n   local nvim_terminal_augroup = vim.api.nvim_create_augroup('nvim_terminal', {})\n-  vim.api.nvim_create_autocmd({ 'bufreadcmd' }, {\n+  vim.api.nvim_create_autocmd({ 'BufReadCmd' }, {\n     pattern = 'term://*',\n     group = nvim_terminal_augroup,\n     nested = true,\n     command = \"if !exists('b:term_title')|call termopen(matchstr(expand(\\\"<amatch>\\\"), '\\\\c\\\\mterm://\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), {'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), '\\\\c\\\\mterm://\\\\(.\\\\{-}\\\\)//'), 1, ''))})\",\n   })\n-  vim.api.nvim_create_autocmd({ 'cmdwinenter' }, {\n+  vim.api.nvim_create_autocmd({ 'TermClose' }, {\n+    group = nvim_terminal_augroup,\n+    desc = 'Automatically close terminal buffers when started with no arguments and exiting without an error',\n+    callback = function(args)\n+      if vim.v.event.status == 0 then\n+        local info = vim.api.nvim_get_chan_info(vim.bo[args.buf].channel)\n+        local argv = info.argv or {}\n+        if #argv == 1 and argv[1] == vim.o.shell then\n+          vim.cmd({ cmd = 'bdelete', args = { args.buf }, bang = true })",
            "html_url": "https://github.com/neovim/neovim/pull/15440#discussion_r1292876248",
            "id": 1292876248,
            "in_reply_to_id": 1292779055,
            "line": 1124,
            "node_id": "PRRC_kwDOAPphoM5ND7nY",
            "original_commit_id": "3fb372eba48796b5d0a7758f91e168be8e70e183",
            "original_line": 1124,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/_editor.lua",
            "position": 20,
            "pull_request_review_id": 1575917691,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292876248/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-13T23:27:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1292876248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm going to see if I can also find a way to close https://github.com/neovim/neovim/issues/5176 as well.",
            "created_at": "2021-08-20T21:15:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-902961450",
            "id": 902961450,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM410hkq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/902961450/reactions"
            },
            "updated_at": "2021-08-20T21:15:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/902961450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm going to see if I can also find a way to close #5176 as well.\r\n\r\nhttps://github.com/neovim/neovim/pull/15442 takes care of #5176, so if we can find a way to make the `TermClose` autocommand somehow enter the `terminal_enter` code path we can kill two birds with one stone.",
            "created_at": "2021-08-21T02:06:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-903037405",
            "id": 903037405,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM4100Hd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/903037405/reactions"
            },
            "updated_at": "2021-08-21T02:06:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/903037405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Different idea: what if we only set this on `TermEnter ` (terminal buffer version of \"InsertEnter\")? I'm trying this in my config:\r\n\r\n```\r\nautocmd TermOpen *\r\n  \\ autocmd TermEnter <buffer=abuf> ++once\r\n  \\ autocmd TermClose <buffer=abuf> if !v:event.status | exe 'bdelete '..expand('<abuf>') | endif\r\n```\r\n\r\nSo far it works as desired with these cases:\r\n\r\n- `:te top` (interactive)\r\n- `:te ls` (non-interactive)\r\n- `:te` (default shell)",
            "created_at": "2021-08-31T18:51:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-909510618",
            "id": 909510618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM42Ngfa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909510618/reactions"
            },
            "updated_at": "2023-08-13T12:11:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909510618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Different idea: what if we only set this on `TermEnter ` (terminal buffer version of \"InsertEnter\")? I'm trying this in my config:\r\n> \r\n> ```\r\n> autocmd TermOpen *\r\n>   \\ autocmd TermEnter <buffer=abuf> ++once\r\n>   \\ autocmd TermClose <buffer=abuf> if !v:event.status | exe 'bdelete '..expand('<abuf>') | endif\r\n> ```\r\n> \r\n> So far it works as desired with these cases:\r\n> \r\n>     * `:te top` (interactive)\r\n> \r\n>     * `:te ls` (non-interactive)\r\n> \r\n>     * `:te` (default shell)\r\n\r\nThis won't work if the user uses `autocmd TermOpen * startinsert` (which the docs mention in `:h :terminal`). I'd wager this is not that uncommon.",
            "created_at": "2021-08-31T19:23:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-909536858",
            "id": 909536858,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM42Nm5a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909536858/reactions"
            },
            "updated_at": "2021-12-02T20:39:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909536858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This won't work if the user uses `autocmd TermOpen * startinsert` (which the docs mention in `:h :terminal`). I'd wager this is not that uncommon.\r\n\r\ngood catch. At this point, it seems like this is a requirement:\r\n\r\n> .... expose the `:terminal` args in `v:event`. Or `nvim_get_chan_info(&channel)`\r\n\r\n",
            "created_at": "2021-08-31T19:34:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-909546802",
            "id": 909546802,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM42NpUy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909546802/reactions"
            },
            "updated_at": "2021-08-31T19:34:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909546802",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> .... expose the :terminal args in v:event. Or nvim_get_chan_info(&channel)\r\n\r\nFortunately, `f_termopen()` already parses out the command argument; we just need to store that somewhere.\r\n\r\nI'm thinking of adding a new `const char *cmd` field to `struct Terminal`. Do you have a better suggestion?\r\n\r\nI've already looked at just using `proc->argv[0]`, but this memory is freed when the process exits, which can happen even if the terminal buffer is still alive (that wouldn't really be that helpful anyway, because in the event someone uses e.g. `:terminal ls`, `proc->argv[0]` would still just be the shell).\r\n\r\n**EDIT:** Wait wait, if we're not doing the global autocommand, isn't it just sufficient to check `*eap->arg == NUL`?",
            "created_at": "2021-08-31T20:26:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-909608293",
            "id": 909608293,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM42N4Vl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909608293/reactions"
            },
            "updated_at": "2021-08-31T20:37:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909608293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm thinking of adding a new `const char *cmd` field to `struct Terminal`. Do you have a better suggestion?\r\n\r\n`nvim_get_chan_info()` could include an `argv` field. PR: https://github.com/neovim/neovim/pull/15537 . Only works for running jobs currently, because...\r\n\r\n> I've already looked at just using `proc->argv[0]`, but this memory is freed when the process exits, which can happen even if the terminal buffer is still alive\r\n\r\nYeah good point. I wonder if we can just link job lifetime to the channel lifetime. Is there a reason we need to free jobs before channels? Probably not...\r\n\r\n> **EDIT:** Wait wait, if we're not doing the global autocommand, isn't it just sufficient to check `*eap->arg == NUL`?\r\n\r\nidk, maybe. Ideally we avoid using internal magic, so that these decisions can be made by scripts.",
            "created_at": "2021-09-01T00:27:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-909755899",
            "id": 909755899,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM42OcX7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909755899/reactions"
            },
            "updated_at": "2021-09-01T00:28:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909755899",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "With #15537 the check simply becomes\r\n\r\n```vim\r\nif nvim_get_chan_info(&channel).argv ==# [&shell]\r\n```\r\n\r\nI moved the autocommand creation into `f_termopen`, so this will also work when using `termopen()` (rather than just `:terminal`).",
            "created_at": "2021-09-01T14:56:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-910367045",
            "id": 910367045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM42QxlF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/910367045/reactions"
            },
            "updated_at": "2021-09-01T14:57:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/910367045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Lint failure is on `screen.c` (why?), otherwise everything looks good.",
            "created_at": "2021-09-05T03:28:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-913079172",
            "id": 913079172,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM42bHuE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/913079172/reactions"
            },
            "updated_at": "2021-09-05T03:28:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/913079172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Lint failure is on `screen.c` (why?), otherwise everything looks good.\r\n\r\nBecause dundargoc taught uncrustify new tricks, tested them on `screen.c`, and nobody told the linter about it yet ;)\r\n\r\nTL;DR: unrelated",
            "created_at": "2021-09-05T08:42:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-913111167",
            "id": 913111167,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM42bPh_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/913111167/reactions"
            },
            "updated_at": "2021-09-05T08:42:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/913111167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Rebased on master. Let's see if CI is happy. @justinmk still interested in this? Maybe we can finally merge 😅\r\n\r\n**EDIT:** Revisiting this for the first time in a while. I'm re-reading the arguments re: global vs. buffer-local autocommand, and I think the arguments in favor of a buffer-local autocommand have become weaker since this PR was first created. For instance,\r\n\r\n>Making it a global autocommand means we can't use the heuristic of whether or not an argument was provided to :terminal to determine if we should automatically close the buffer or not\r\n\r\nThis is no longer true, as we have the buffer information in the autocommand callback, and we can use `nvim_get_chan_info` to check `argv` of the channel.\r\n\r\n>I wonder if it's not actually more common that users may want to opt-out of the auto-close behavior on a per-job/per-terminal instance, rather than opting out globally. This is much more straightforward to do with a buffer-local autocommand.\r\n\r\nI think I disagree with my past self, I don't really see users wanting to opt-out of this on a per-terminal instance. The new behavior is fairly straightforward: a terminal buffer closes automatically _iff_ it was started with no arguments (and thus uses `'shell'`) _and_ it exited without an error. People either want that or not, so making it globally opt-out seems fine.\r\n\r\nAlso since this PR was first written, we now have a way to introduce default autocommands in Lua, so I will modify the implementation to do that instead of the current approach.",
            "created_at": "2023-08-10T14:09:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/15440#issuecomment-1673296358",
            "id": 1673296358,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
            "node_id": "IC_kwDOAPphoM5jvHnm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1673296358/reactions"
            },
            "updated_at": "2023-08-10T14:49:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1673296358",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15440/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/15440/commits",
    "created_at": "2021-08-20T20:59:59Z",
    "diff_url": "https://github.com/neovim/neovim/pull/15440.diff",
    "draft": false,
    "head": {
        "label": "gpanders:hide-process-exit",
        "ref": "hide-process-exit",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2023-08-10T14:54:12Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 242862,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "3fb372eba48796b5d0a7758f91e168be8e70e183",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/15440",
    "id": 716995410,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15440",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "0fe921663f1be9e32afa66874fda1ef15142a47e",
    "merged_at": "2023-08-13T12:23:15Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzE2OTk1NDEw",
    "number": 15440,
    "patch_url": "https://github.com/neovim/neovim/pull/15440.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/15440/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/3fb372eba48796b5d0a7758f91e168be8e70e183",
    "title": "feat(terminal): close shell terminals automatically",
    "updated_at": "2023-08-13T23:27:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/15440",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}