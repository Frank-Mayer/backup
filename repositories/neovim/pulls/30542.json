{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30542/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30542/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30542"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30542"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30542/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/4cc24e5acf9ccf2fd818376a976a14d2b60115f7"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5622,
            "forks_count": 5622,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1788,
            "open_issues_count": 1788,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-10-08T00:43:44Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 289510,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 82327,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-10-08T00:49:29Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 82327,
            "watchers_count": 82327,
            "web_commit_signoff_required": false
        },
        "sha": "2377443cd27ac41429d77fc6ba41e21469ed3b5b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Close #30504\r\n\r\nEarly draft. Callback doesn't have arguments yet.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1778562494"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562494"
                }
            },
            "author_association": "MEMBER",
            "body": "Normally callbacks should be `on_xx`, but if `on_mouse` is too awkward here, we can just call it `mouse`.\r\n```suggestion\r\n///   - mouse: Specify how this window affects mouse events. Defaults to `focusable` value.\r\n```",
            "commit_id": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
            "created_at": "2024-09-27T12:43:49Z",
            "diff_hunk": "@@ -130,6 +131,14 @@\n ///   - focusable: Enable focus by user actions (wincmds, mouse events).\n ///       Defaults to true. Non-focusable windows can be entered by\n ///       |nvim_set_current_win()|.\n+///   - mouseevent: Specify how this window affects mouse events.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1778562494",
            "id": 1778562494,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qArW-",
            "original_commit_id": "584b3a1cbab2b96425ff59c9a6bbf6c6d9161bc9",
            "original_line": 134,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": null,
            "pull_request_review_id": 2333644173,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562494/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T12:43:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1778562891"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562891"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n///       |nvim_set_current_win()|. Overridden by `mouse`.\r\n```",
            "commit_id": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
            "created_at": "2024-09-27T12:44:03Z",
            "diff_hunk": "@@ -130,6 +131,14 @@\n ///   - focusable: Enable focus by user actions (wincmds, mouse events).\n ///       Defaults to true. Non-focusable windows can be entered by\n ///       |nvim_set_current_win()|.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1778562891",
            "id": 1778562891,
            "line": 134,
            "node_id": "PRRC_kwDOAPphoM5qArdL",
            "original_commit_id": "584b3a1cbab2b96425ff59c9a6bbf6c6d9161bc9",
            "original_line": 134,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 16,
            "pull_request_review_id": 2333645414,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562891/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T12:44:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1778568719"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778568719"
                }
            },
            "author_association": "MEMBER",
            "body": "Somewhat off-topic but: RPC clients could easily implement their own \"callbacks\" if our API \"callback\" fields had a string form invoked as Lua which received a channel-id. \r\n\r\nExample RPC call:\r\n\r\n    nvim_open_win(... { mouse = 'local ev = ...; vim.rpcrequest(ev.chan, \"my_method\")' })    ",
            "commit_id": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
            "created_at": "2024-09-27T12:47:57Z",
            "diff_hunk": "@@ -130,6 +131,14 @@\n ///   - focusable: Enable focus by user actions (wincmds, mouse events).\n ///       Defaults to true. Non-focusable windows can be entered by\n ///       |nvim_set_current_win()|.\n+///   - mouseevent: Specify how this window affects mouse events.\n+///       Maybe a boolean or a Lua callback.\n+///       - If false, mouse events ignore this window.\n+///       - If true, mouse events interact with this window normally.\n+///       - If a Lua callback, mouse events interact with this window,",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1778568719",
            "id": 1778568719,
            "line": 139,
            "node_id": "PRRC_kwDOAPphoM5qAs4P",
            "original_commit_id": "584b3a1cbab2b96425ff59c9a6bbf6c6d9161bc9",
            "original_line": 139,
            "original_position": 13,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 21,
            "pull_request_review_id": 2333659955,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778568719/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T12:47:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778568719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1778825624"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778825624"
                }
            },
            "author_association": "MEMBER",
            "body": "the \"If this field...\" should go near the top",
            "commit_id": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
            "created_at": "2024-09-27T15:45:04Z",
            "diff_hunk": "@@ -3196,6 +3196,16 @@ nvim_open_win({buffer}, {enter}, {config})                   *nvim_open_win()*\n                   • focusable: Enable focus by user actions (wincmds, mouse\n                     events). Defaults to true. Non-focusable windows can be\n                     entered by |nvim_set_current_win()|.\n+                  • mouse: Specify how this window affects mouse events. May\n+                    be a boolean or a Lua callback.\n+                    • If false, mouse events ignore this window.\n+                    • If true, mouse events interact with this window\n+                      normally.\n+                    • If a Lua callback, mouse events interact with this\n+                      window, but the callback is called in place of the\n+                      default handling. If this field is not specified but\n+                      `focusable` is specified, the value of `focusable` will\n+                      be used.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1778825624",
            "id": 1778825624,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qBrmY",
            "original_commit_id": "094c134131373c97240f5d01a4d6e43fdfb5f069",
            "original_line": 3208,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2334085723,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778825624/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T15:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778825624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1780105020"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780105020"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Wonder if this should be something like\r\n```\r\ngrid->mouse != kWinMouseIgnore\r\n```",
            "commit_id": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
            "created_at": "2024-09-29T18:30:53Z",
            "diff_hunk": "@@ -275,7 +275,7 @@ ScreenGrid *ui_comp_mouse_focus(int row, int col)\n {\n   for (ssize_t i = (ssize_t)kv_size(layers) - 1; i > 0; i--) {\n     ScreenGrid *grid = kv_A(layers, i);\n-    if (grid->focusable\n+    if (grid->mouse",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1780105020",
            "id": 1780105020,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qGj88",
            "original_commit_id": "09dda44b452b184f682a7d8b00e5e9906b07f81c",
            "original_line": 278,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/ui_compositor.c",
            "position": null,
            "pull_request_review_id": 2335910854,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780105020/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-29T18:30:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780105020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1780191233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780191233"
                }
            },
            "author_association": "MEMBER",
            "body": "`WinMouseEvent` is only used in `w_config`. In `ScreenGrid` a simple boolean is used. I've renamed that to `mouse_enabled` to avoid confusion.",
            "commit_id": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
            "created_at": "2024-09-29T22:17:14Z",
            "diff_hunk": "@@ -275,7 +275,7 @@ ScreenGrid *ui_comp_mouse_focus(int row, int col)\n {\n   for (ssize_t i = (ssize_t)kv_size(layers) - 1; i > 0; i--) {\n     ScreenGrid *grid = kv_A(layers, i);\n-    if (grid->focusable\n+    if (grid->mouse",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1780191233",
            "id": 1780191233,
            "in_reply_to_id": 1780105020,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qG5AB",
            "original_commit_id": "09dda44b452b184f682a7d8b00e5e9906b07f81c",
            "original_line": 278,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/ui_compositor.c",
            "position": null,
            "pull_request_review_id": 2336028129,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780191233/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-29T22:17:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780191233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1780193887"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780193887"
                }
            },
            "author_association": "MEMBER",
            "body": "It may be hard to describe the default value here:\r\n- When `mouse` was `true` or `false`, and only `focusable` is specified in `nvim_win_set_config`, `mouse` needs to be set to the same value as `focusable` for backward-compatibility.\r\n- However, when `mouse` was a callback, it's better not to change it when only `focusable` is specified in `nvim_win_set_config`.",
            "commit_id": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
            "created_at": "2024-09-29T22:35:04Z",
            "diff_hunk": "@@ -3196,6 +3196,15 @@ nvim_open_win({buffer}, {enter}, {config})                   *nvim_open_win()*\n                   • focusable: Enable focus by user actions (wincmds, mouse\n                     events). Defaults to true. Non-focusable windows can be\n                     entered by |nvim_set_current_win()|.\n+                  • mouse: Specify how this window affects mouse events. May\n+                    be a boolean or a Lua callback. Defaults to `focusable`\n+                    value.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1780193887",
            "id": 1780193887,
            "line": 3201,
            "node_id": "PRRC_kwDOAPphoM5qG5pf",
            "original_commit_id": "cc2efb19cedb453763b4a4486e121308f71f7249",
            "original_line": 3201,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": 6,
            "pull_request_review_id": 2336030723,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780193887/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-29T23:13:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780193887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1780208278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780208278"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was originally thinking that it would be good to track if `mouse` had ever been manually set, and if it had been then don't automatically change it to follow `focusable`. But doing as you describe is nice and simple.\r\n\r\nIt means that if you ever manually set `mouse` to something different than `focusable`, it is probably best to always set it when setting `focusable`. That's reasonable and simple.\r\n\r\nI guess it's friendly to not automatically change `mouse` when it's a callback; but it doesn't seem to offer that much and makes things more difficult to describe. Instead of special casing callback, in `nvim_win_set_config` could just say something like:\r\n\"If `focusable` is specified and `mouse` is not, then `mouse` is set to the same value as `focusable`.\"",
            "commit_id": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
            "created_at": "2024-09-29T23:50:10Z",
            "diff_hunk": "@@ -3196,6 +3196,15 @@ nvim_open_win({buffer}, {enter}, {config})                   *nvim_open_win()*\n                   • focusable: Enable focus by user actions (wincmds, mouse\n                     events). Defaults to true. Non-focusable windows can be\n                     entered by |nvim_set_current_win()|.\n+                  • mouse: Specify how this window affects mouse events. May\n+                    be a boolean or a Lua callback. Defaults to `focusable`\n+                    value.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1780208278",
            "id": 1780208278,
            "in_reply_to_id": 1780193887,
            "line": 3201,
            "node_id": "PRRC_kwDOAPphoM5qG9KW",
            "original_commit_id": "cc2efb19cedb453763b4a4486e121308f71f7249",
            "original_line": 3201,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": 6,
            "pull_request_review_id": 2336044282,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780208278/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-29T23:50:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780208278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Tried a variety of cases, looks like \r\n```\r\nvim.api.nvim_win_get_config(wid).mouse\r\n```\r\nis alway `nil`.\r\n\r\nWanted to look at how `mouse` changed when `focusable` is changed given different starting conditions.",
            "created_at": "2024-09-29T18:28:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2381453992",
            "id": 2381453992,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6N8hqo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381453992/reactions"
            },
            "updated_at": "2024-09-29T18:28:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381453992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The callback is now invoked for floating windows, although it doesn't have arguments yet (but `getmousepos()` and `getcharmod()` should work).\r\n\r\nIt isn't hard to enable the callback for non-floating windows, but maybe that should be addressed together with #29365.",
            "created_at": "2024-09-30T00:56:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2381798702",
            "id": 2381798702,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6N910u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381798702/reactions"
            },
            "updated_at": "2024-09-30T01:01:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381798702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The callback is now invoked for floating windows, although it doesn't have arguments yet\r\n\r\nLooking at the output of `getmousepos()` can guess at the argument :) Mouse press event, mouse release event. Drag event if holding the mouse down and move across floating window. No mouse events if sweep across floater until `set mousemoveevent`.\r\n\r\nImplementing window dragging will have problems. If click on left border, then move left, there is no event, drag or otherwise. Could leave an empty cell outside the border and don't move too fast (width not compatible). Something to consider later. (some systems might keep delivering drag event even after the window is left, and there's exit window events)\r\n\r\n> (but `getmousepos()` \r\n\r\nYes, been working for a few pushes\r\n\r\n> and `getcharmod()` should work).\r\n\r\nAh, so that's how you get that info. Cool. Yes, that works. Too bad the state of the buttons is not available. Kind of like for `nvim_input_mouse`'s `{button}` but a bit mask.\r\n \r\n> It isn't hard to enable the callback for non-floating windows, but maybe that should be addressed together with #29365.\r\n\r\nPopups don't need this AFAIK. \r\n\r\nInterestingly, in simple cases it could be part of a workaround for not getting drag events past the edge or window leave events. Would require temporarily, while dragging a window, swapping into the popup's surrounding window a helper `mouse` function to track movement out of the popup. But in general much more complicated because of overlapping windows.\r\n\r\nMaybe a \"global\" mouse function?",
            "created_at": "2024-09-30T16:56:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2383713448",
            "id": 2383713448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OFJSo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2383713448/reactions"
            },
            "updated_at": "2024-09-30T16:58:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2383713448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's another possibility. Say the signiture of the mouse callback is something like\r\n```\r\nfunction mouse_callback(win_id: int, within_bounds: bool, event_id)\r\n```\r\nCurrently the callback is only invoked when `within_bounds` is true. If it was always invoked and there was a method `get_event_info(win_id, event_id)` which returned the info like `getmousepos()` and returned stuff like `column_distance` when not within_bounds, positive or negative, giving the distance from the edge. I think if `within_bounds` is false, the event would typically be ignored except when dragging.\r\n\r\nDon't know about specific parameters, for example could be only one arg with a single bit for `within_bounds` and win_id could be stuffed in there as well. Don't know what the performance considerations might be. If there's concern about too many event callbacks being invoked, win could have a field for \"deliver extra events\".",
            "created_at": "2024-10-01T05:51:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2384859136",
            "id": 2384859136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OJhAA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2384859136/reactions"
            },
            "updated_at": "2024-10-01T05:51:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2384859136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Was looking at how mouse events work. Wanted to compare regular mappings versus how this PR delivers events to the window through `mouse=callback`. (Had to intuit events for the callback, but it's pretty clear).\r\n\r\nDiscovered that if there is a regular mapping, like (and similarly for drag events)\r\n```\r\nvim.keymap.set({'n', 'i'}, '<LeftRelease>', function() mouse_mapping(\"RELEASE\") end)\r\n```\r\nThen there there are no left relese events delivered to the window's mouse callback. The mapping events should not be generated if the event is going to window's mouse handler.\r\n",
            "created_at": "2024-10-06T18:24:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2395534821",
            "id": 2395534821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OyPXl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395534821/reactions"
            },
            "updated_at": "2024-10-06T18:24:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395534821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "With regualar drag/release mappings, they track mouse movement even when outide the OS window; something similar is needed for `mouse=callback` events. The events should be delived to the window where the press occured. I didn't look for the code that disposes the event before `do_mouse` is called.\r\n\r\nPlaying around to correctly deliver drag/release events, the following seems to work. The idea is tag each mouse press with a unique id and associate the window that handles the press with the id. Then when processing drag/release events make sure they go to the window where the event was generated.\r\n\r\nThis is not meant to be a patch, just an example of partially working code. I think it's sufficient for the press to record both current window handle and current_click_id and not save the click_id in `window_S` like in this example. Even the click_id itself may not be needed, only the handle where the last click occured, but it could be used to generate an internal error message if things are out of whack.\r\n\r\n```diff\r\ndiff --git a/src/nvim/buffer_defs.h b/src/nvim/buffer_defs.h\r\n--- a/src/nvim/buffer_defs.h\r\n+++ b/src/nvim/buffer_defs.h\r\n@@ -1338,4 +1338,6 @@\r\n   StlClickDefinition *w_statuscol_click_defs;\r\n   // Size of the w_statuscol_click_defs array\r\n   size_t w_statuscol_click_defs_size;\r\n+\r\n+  int w_mouse_click_id; // id of click in this window\r\n };\r\ndiff --git a/src/nvim/mouse.c b/src/nvim/mouse.c\r\n--- a/src/nvim/mouse.c\r\n+++ b/src/nvim/mouse.c\r\n@@ -221,20 +221,54 @@\r\n   got_click = false;\r\n }\r\n \r\n+static handle_T mouse_click_owner;\r\n+static int current_mouse_click_id;\r\n+\r\n+// Retur the window that has a \"mouse\" dispatch drag related operation in progress.\r\n+static win_T *drag_mouse(int c)\r\n+{\r\n+  if (c == K_LEFTDRAG || c == K_LEFTRELEASE) {\r\n+    Error err = ERROR_INIT;\r\n+    win_T *wp = find_window_by_handle(mouse_click_owner, &err);\r\n+    if (ERROR_SET(&err)) {\r\n+      DLOG(\"xyzzy error: %s\", err.msg);\r\n+    } else if (wp != NULL && wp->w_mouse_click_id == current_mouse_click_id) {\r\n+      DLOG(\"xyzzy win_id %d\", wp->handle);\r\n+      return wp;\r\n+    }\r\n+  }\r\n+  return NULL;\r\n+}\r\n+\r\n /// When clicking on a window with a mouse callback, invoke it.\r\n ///\r\n /// @return  whether to proceeded with mouse handling.\r\n-static bool invoke_mouse_cb(void)\r\n+static bool invoke_mouse_cb(int c)\r\n {\r\n   int grid = mouse_grid;\r\n   int row = mouse_row;\r\n   int col = mouse_col;\r\n \r\n+  if (c == K_LEFTMOUSE) {\r\n+      current_mouse_click_id++;\r\n+  }\r\n+\r\n   if (row < 0 || col < 0) {\r\n     return true;\r\n   }\r\n \r\n-  win_T *wp = mouse_find_win(&grid, &row, &col);\r\n+  win_T *wp;\r\n+  if ((wp = drag_mouse(c)) == NULL) {\r\n+    wp = mouse_find_win(&grid, &row, &col);\r\n+    if (wp != NULL && c == K_LEFTMOUSE) {\r\n+      mouse_click_owner = wp->handle;\r\n+      wp->w_mouse_click_id = current_mouse_click_id;\r\n+    }\r\n+  }\r\n+  DLOG(\"xyzzy c = %x, click: %d, win_id %d, has_cb %d\",\r\n+       c&0xffff, current_mouse_click_id, wp ? wp->handle : 0,\r\n+       wp->w_config.mouse == kWinMouseCallback);\r\n+\r\n   if (wp == NULL || wp->w_config.mouse != kWinMouseCallback) {\r\n     return true;\r\n   }\r\n@@ -399,7 +433,7 @@\r\n     break;\r\n   }\r\n \r\n-  if (!invoke_mouse_cb()) {\r\n+  if (!invoke_mouse_cb(c)) {\r\n     return false;\r\n   }\r\n \r\n@@ -1095,7 +1129,7 @@\r\n /// of the MSCR_ values.\r\n void ins_mousescroll(int dir)\r\n {\r\n-  if (!invoke_mouse_cb()) {\r\n+  if (!invoke_mouse_cb(0)) {\r\n     return;\r\n   }\r\n \r\n@@ -1608,7 +1642,7 @@\r\n /// \"cap->arg\", which is one of the MSCR_ values.\r\n void nv_mousescroll(cmdarg_T *cap)\r\n {\r\n-  if (!invoke_mouse_cb()) {\r\n+  if (!invoke_mouse_cb(0)) {\r\n     return;\r\n   }\r\n```\r\n",
            "created_at": "2024-10-06T18:25:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2395535244",
            "id": 2395535244,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OyPeM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395535244/reactions"
            },
            "updated_at": "2024-10-06T18:25:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395535244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "FYI, see [popup tracking](https://github.com/errael/plenary.nvim/blob/PopupMouse/POPUP.md) for details of the current state of the popup API.\r\n",
            "created_at": "2024-10-06T18:26:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2395535478",
            "id": 2395535478,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OyPh2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395535478/reactions"
            },
            "updated_at": "2024-10-06T18:26:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395535478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The mapping events should not be generated if the event is going to window's mouse handler.\r\n\r\nThis can be complicated to achieve, and may require extra restrictions on the callback. Is it needed for a part of the popup API?",
            "created_at": "2024-10-07T07:40:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2396156869",
            "id": 2396156869,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O0nPF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2396156869/reactions"
            },
            "updated_at": "2024-10-07T07:40:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2396156869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > The mapping events should not be generated if the event is going to window's mouse handler.\r\n> \r\n> This can be complicated to achieve, and may require extra restrictions on the callback. Is it needed for a part of the popup API?\r\n\r\nIf the main app has\r\n```\r\nvim.keymap.set({'n', 'i'}, '<LeftMouse>', function() mouse_mapping(\"CLICK\") end)\r\n```\r\nAnd a popup is brought up with `close=click`, and `drag=true` (and it's underlying window has `focusable = false, mouse = win_mouse_cb,`). But `win_mouse_cb` is never invoked for `<LeftMouse>`, `<LeftDrag>`, `<LeftRelease>` event because the mapping consumes the event.\r\n\r\nSo, the answer is yes, it is needed for the popup API.\r\n\r\nCould you point out where in the code the mouse event is queued as a key and/or turned into a mapping?\r\n\r\n(Maybe more important, is it also needed to have a `nvim_open_win` `mouse` API you can reason about?)\r\n\r\nAn actual example of this is seen with [Splice9](https://github.com/errael/splice9). All actions have keyboard shortcuts, but the mouse can click on commands displayed in the `HUD` (heads up display). There is use of popups in several situations, a non-modal popup typically has click to close.\r\n\r\nAs seen in `Splice9`, also note that a clickable command is highlighted when the mouse rolls over it.\r\n\r\n![HUD-only-partial](https://github.com/user-attachments/assets/4e048df0-9272-4164-9e5b-813354d833d4)\r\n",
            "created_at": "2024-10-07T20:16:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2397809551",
            "id": 2397809551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O66uP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2397809551/reactions"
            },
            "updated_at": "2024-10-07T20:16:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2397809551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > The mapping events should not be generated if the event is going to window's mouse handler.\r\n> \r\n> This can be complicated to achieve, and may require extra restrictions on the callback. \r\n\r\nCould you elaborate on the \"extra restrictions\"?\r\n\r\n",
            "created_at": "2024-10-07T20:17:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2397811503",
            "id": 2397811503,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O67Mv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2397811503/reactions"
            },
            "updated_at": "2024-10-07T20:17:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2397811503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > > The mapping events should not be generated if the event is going to window's mouse handler.\r\n> > \r\n> > \r\n> > This can be complicated to achieve, and may require extra restrictions on the callback. Is it needed for a part of the popup API?\r\n> \r\n> If the main app has\r\n> \r\n> ```\r\n> vim.keymap.set({'n', 'i'}, '<LeftMouse>', function() mouse_mapping(\"CLICK\") end)\r\n> ```\r\n> \r\n> And a popup is brought up with `close=click`, and `drag=true` (and it's underlying window has `focusable = false, mouse = win_mouse_cb,`). But `win_mouse_cb` is never invoked for `<LeftMouse>`, `<LeftDrag>`, `<LeftRelease>` event because the mapping consumes the event.\r\n> \r\n> So, the answer is yes, it is needed for the popup API.\r\n\r\nThat doesn't explain why the mapping shouldn't consume the event. Does the popup API work like that?\r\n\r\n> Could you point out where in the code the mouse event is queued as a key and/or turned into a mapping?\r\n\r\nUsually, it's `nvim_input` or `nvim_input_mouse` invoked from `state_enter() -> input_get() -> inbuf_poll() -> loop_poll_events() -> loop_uv_run() -> uv_run() -> receive_msgpack() -> parse_msgpack() -> handle_request() -> request_event()` that queue the mouse event as a key. But when Nvim is busy, `loop_poll_events()` can be called by an `os_breakcheck()`.\r\n\r\nMappings are applied in `vgetorpeek() -> handle_mapping()`, which is usually called from `state_enter() -> vpeekc()` or `state_enter() -> safe_vgetc() -> vgetc()`.\r\n\r\nMouse event handling is invoked from `state_enter() -> normal_execute() -> nv_mouse() -> do_mouse()` or `state_enter() -> insert_execute() -> insert_handle_key() -> ins_mouse() -> do_mouse()`.\r\n\r\n> Could you elaborate on the \"extra restrictions\"?\r\n\r\nDepends on the implementation, which doesn't exist yet and may or may not be achievable.",
            "created_at": "2024-10-08T01:16:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2398389886",
            "id": 2398389886,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O9IZ-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2398389886/reactions"
            },
            "updated_at": "2024-10-08T01:18:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2398389886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30542/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30542/commits",
    "created_at": "2024-09-27T12:17:56Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30542.diff",
    "draft": true,
    "head": {
        "label": "zeertzjq:win-mouseevent",
        "ref": "win-mouseevent",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/zeertzjq/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/zeertzjq/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/zeertzjq/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/zeertzjq/neovim/branches{/branch}",
            "clone_url": "https://github.com/zeertzjq/neovim.git",
            "collaborators_url": "https://api.github.com/repos/zeertzjq/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/zeertzjq/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/zeertzjq/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/zeertzjq/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/zeertzjq/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/zeertzjq/neovim/contributors",
            "created_at": "2021-09-27T02:22:45Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/zeertzjq/neovim/deployments",
            "description": null,
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/zeertzjq/neovim/downloads",
            "events_url": "https://api.github.com/repos/zeertzjq/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/zeertzjq/neovim/forks",
            "full_name": "zeertzjq/neovim",
            "git_commits_url": "https://api.github.com/repos/zeertzjq/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/zeertzjq/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/zeertzjq/neovim/git/tags{/sha}",
            "git_url": "git://github.com/zeertzjq/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "",
            "hooks_url": "https://api.github.com/repos/zeertzjq/neovim/hooks",
            "html_url": "https://github.com/zeertzjq/neovim",
            "id": 410715915,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/zeertzjq/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/zeertzjq/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/zeertzjq/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/zeertzjq/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/zeertzjq/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/zeertzjq/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/zeertzjq/neovim/merges",
            "milestones_url": "https://api.github.com/repos/zeertzjq/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGHsHCw",
            "notifications_url": "https://api.github.com/repos/zeertzjq/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/zeertzjq/neovim/pulls{/number}",
            "pushed_at": "2024-10-08T01:21:59Z",
            "releases_url": "https://api.github.com/repos/zeertzjq/neovim/releases{/id}",
            "size": 282031,
            "ssh_url": "git@github.com:zeertzjq/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/zeertzjq/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/zeertzjq/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/zeertzjq/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/zeertzjq/neovim/subscription",
            "svn_url": "https://github.com/zeertzjq/neovim",
            "tags_url": "https://api.github.com/repos/zeertzjq/neovim/tags",
            "teams_url": "https://api.github.com/repos/zeertzjq/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/zeertzjq/neovim/git/trees{/sha}",
            "updated_at": "2023-02-18T11:19:39Z",
            "url": "https://api.github.com/repos/zeertzjq/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30542",
    "id": 2095714995,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 646043375,
            "name": "mouse",
            "node_id": "MDU6TGFiZWw2NDYwNDMzNzU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mouse"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows, popups, hover",
            "id": 3234818716,
            "name": "floatwin",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/floatwin"
        }
    ],
    "locked": false,
    "merge_commit_sha": "7c788650e8e2b3543f7d7747e6bfd0f53a9fa4df",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM586hKz",
    "number": 30542,
    "patch_url": "https://github.com/neovim/neovim/pull/30542.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30542/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/4cc24e5acf9ccf2fd818376a976a14d2b60115f7",
    "title": "feat(float): more configurable mouse event handling",
    "updated_at": "2024-10-08T01:18:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq"
    }
}