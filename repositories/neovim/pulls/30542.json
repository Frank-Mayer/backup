{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30542/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30542/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30542"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30542"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30542/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5657,
            "forks_count": 5657,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1801,
            "open_issues_count": 1801,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-10-22T01:05:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 290505,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 82684,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-10-22T02:10:43Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 82684,
            "watchers_count": 82684,
            "web_commit_signoff_required": false
        },
        "sha": "9b8907d90508d7b66f025bbd1f5a48a78c5ce035",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Close #30504\r\n\r\nEarly draft. Callback doesn't have arguments yet.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1778562494"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562494"
                }
            },
            "author_association": "MEMBER",
            "body": "Normally callbacks should be `on_xx`, but if `on_mouse` is too awkward here, we can just call it `mouse`.\r\n```suggestion\r\n///   - mouse: Specify how this window affects mouse events. Defaults to `focusable` value.\r\n```",
            "commit_id": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
            "created_at": "2024-09-27T12:43:49Z",
            "diff_hunk": "@@ -130,6 +131,14 @@\n ///   - focusable: Enable focus by user actions (wincmds, mouse events).\n ///       Defaults to true. Non-focusable windows can be entered by\n ///       |nvim_set_current_win()|.\n+///   - mouseevent: Specify how this window affects mouse events.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1778562494",
            "id": 1778562494,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qArW-",
            "original_commit_id": "584b3a1cbab2b96425ff59c9a6bbf6c6d9161bc9",
            "original_line": 134,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": null,
            "pull_request_review_id": 2333644173,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562494/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T12:43:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1778562891"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562891"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n///       |nvim_set_current_win()|. Overridden by `mouse`.\r\n```",
            "commit_id": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
            "created_at": "2024-09-27T12:44:03Z",
            "diff_hunk": "@@ -130,6 +131,14 @@\n ///   - focusable: Enable focus by user actions (wincmds, mouse events).\n ///       Defaults to true. Non-focusable windows can be entered by\n ///       |nvim_set_current_win()|.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1778562891",
            "id": 1778562891,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qArdL",
            "original_commit_id": "584b3a1cbab2b96425ff59c9a6bbf6c6d9161bc9",
            "original_line": 134,
            "original_position": 8,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": null,
            "pull_request_review_id": 2333645414,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562891/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T12:44:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778562891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1778568719"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778568719"
                }
            },
            "author_association": "MEMBER",
            "body": "Somewhat off-topic but: RPC clients could easily implement their own \"callbacks\" if our API \"callback\" fields had a string form invoked as Lua which received a channel-id. \r\n\r\nExample RPC call:\r\n\r\n    nvim_open_win(... { mouse = 'local ev = ...; vim.rpcrequest(ev.chan, \"my_method\")' })    ",
            "commit_id": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
            "created_at": "2024-09-27T12:47:57Z",
            "diff_hunk": "@@ -130,6 +131,14 @@\n ///   - focusable: Enable focus by user actions (wincmds, mouse events).\n ///       Defaults to true. Non-focusable windows can be entered by\n ///       |nvim_set_current_win()|.\n+///   - mouseevent: Specify how this window affects mouse events.\n+///       Maybe a boolean or a Lua callback.\n+///       - If false, mouse events ignore this window.\n+///       - If true, mouse events interact with this window normally.\n+///       - If a Lua callback, mouse events interact with this window,",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1778568719",
            "id": 1778568719,
            "line": 140,
            "node_id": "PRRC_kwDOAPphoM5qAs4P",
            "original_commit_id": "584b3a1cbab2b96425ff59c9a6bbf6c6d9161bc9",
            "original_line": 140,
            "original_position": 13,
            "original_start_line": null,
            "path": "src/nvim/api/win_config.c",
            "position": 21,
            "pull_request_review_id": 2333659955,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778568719/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T12:47:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778568719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1778825624"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778825624"
                }
            },
            "author_association": "MEMBER",
            "body": "the \"If this field...\" should go near the top",
            "commit_id": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
            "created_at": "2024-09-27T15:45:04Z",
            "diff_hunk": "@@ -3196,6 +3196,16 @@ nvim_open_win({buffer}, {enter}, {config})                   *nvim_open_win()*\n                   • focusable: Enable focus by user actions (wincmds, mouse\n                     events). Defaults to true. Non-focusable windows can be\n                     entered by |nvim_set_current_win()|.\n+                  • mouse: Specify how this window affects mouse events. May\n+                    be a boolean or a Lua callback.\n+                    • If false, mouse events ignore this window.\n+                    • If true, mouse events interact with this window\n+                      normally.\n+                    • If a Lua callback, mouse events interact with this\n+                      window, but the callback is called in place of the\n+                      default handling. If this field is not specified but\n+                      `focusable` is specified, the value of `focusable` will\n+                      be used.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1778825624",
            "id": 1778825624,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qBrmY",
            "original_commit_id": "094c134131373c97240f5d01a4d6e43fdfb5f069",
            "original_line": 3208,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2334085723,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778825624/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-27T15:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1778825624",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1780105020"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780105020"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Wonder if this should be something like\r\n```\r\ngrid->mouse != kWinMouseIgnore\r\n```",
            "commit_id": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
            "created_at": "2024-09-29T18:30:53Z",
            "diff_hunk": "@@ -275,7 +275,7 @@ ScreenGrid *ui_comp_mouse_focus(int row, int col)\n {\n   for (ssize_t i = (ssize_t)kv_size(layers) - 1; i > 0; i--) {\n     ScreenGrid *grid = kv_A(layers, i);\n-    if (grid->focusable\n+    if (grid->mouse",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1780105020",
            "id": 1780105020,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qGj88",
            "original_commit_id": "09dda44b452b184f682a7d8b00e5e9906b07f81c",
            "original_line": 278,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/ui_compositor.c",
            "position": null,
            "pull_request_review_id": 2335910854,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780105020/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-29T18:30:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780105020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1780191233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780191233"
                }
            },
            "author_association": "MEMBER",
            "body": "`WinMouseEvent` is only used in `w_config`. In `ScreenGrid` a simple boolean is used. I've renamed that to `mouse_enabled` to avoid confusion.",
            "commit_id": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
            "created_at": "2024-09-29T22:17:14Z",
            "diff_hunk": "@@ -275,7 +275,7 @@ ScreenGrid *ui_comp_mouse_focus(int row, int col)\n {\n   for (ssize_t i = (ssize_t)kv_size(layers) - 1; i > 0; i--) {\n     ScreenGrid *grid = kv_A(layers, i);\n-    if (grid->focusable\n+    if (grid->mouse",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1780191233",
            "id": 1780191233,
            "in_reply_to_id": 1780105020,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qG5AB",
            "original_commit_id": "09dda44b452b184f682a7d8b00e5e9906b07f81c",
            "original_line": 278,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/ui_compositor.c",
            "position": null,
            "pull_request_review_id": 2336028129,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780191233/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-29T22:17:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780191233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1780193887"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780193887"
                }
            },
            "author_association": "MEMBER",
            "body": "It may be hard to describe the default value here:\r\n- When `mouse` was `true` or `false`, and only `focusable` is specified in `nvim_win_set_config`, `mouse` needs to be set to the same value as `focusable` for backward-compatibility.\r\n- However, when `mouse` was a callback, it's better not to change it when only `focusable` is specified in `nvim_win_set_config`.",
            "commit_id": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
            "created_at": "2024-09-29T22:35:04Z",
            "diff_hunk": "@@ -3196,6 +3196,15 @@ nvim_open_win({buffer}, {enter}, {config})                   *nvim_open_win()*\n                   • focusable: Enable focus by user actions (wincmds, mouse\n                     events). Defaults to true. Non-focusable windows can be\n                     entered by |nvim_set_current_win()|.\n+                  • mouse: Specify how this window affects mouse events. May\n+                    be a boolean or a Lua callback. Defaults to `focusable`\n+                    value.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1780193887",
            "id": 1780193887,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qG5pf",
            "original_commit_id": "cc2efb19cedb453763b4a4486e121308f71f7249",
            "original_line": 3201,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2336030723,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780193887/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-29T23:13:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780193887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30542#discussion_r1780208278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30542"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780208278"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was originally thinking that it would be good to track if `mouse` had ever been manually set, and if it had been then don't automatically change it to follow `focusable`. But doing as you describe is nice and simple.\r\n\r\nIt means that if you ever manually set `mouse` to something different than `focusable`, it is probably best to always set it when setting `focusable`. That's reasonable and simple.\r\n\r\nI guess it's friendly to not automatically change `mouse` when it's a callback; but it doesn't seem to offer that much and makes things more difficult to describe. Instead of special casing callback, in `nvim_win_set_config` could just say something like:\r\n\"If `focusable` is specified and `mouse` is not, then `mouse` is set to the same value as `focusable`.\"",
            "commit_id": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
            "created_at": "2024-09-29T23:50:10Z",
            "diff_hunk": "@@ -3196,6 +3196,15 @@ nvim_open_win({buffer}, {enter}, {config})                   *nvim_open_win()*\n                   • focusable: Enable focus by user actions (wincmds, mouse\n                     events). Defaults to true. Non-focusable windows can be\n                     entered by |nvim_set_current_win()|.\n+                  • mouse: Specify how this window affects mouse events. May\n+                    be a boolean or a Lua callback. Defaults to `focusable`\n+                    value.",
            "html_url": "https://github.com/neovim/neovim/pull/30542#discussion_r1780208278",
            "id": 1780208278,
            "in_reply_to_id": 1780193887,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5qG9KW",
            "original_commit_id": "cc2efb19cedb453763b4a4486e121308f71f7249",
            "original_line": 3201,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 2336044282,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780208278/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-29T23:50:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1780208278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Tried a variety of cases, looks like \r\n```\r\nvim.api.nvim_win_get_config(wid).mouse\r\n```\r\nis alway `nil`.\r\n\r\nWanted to look at how `mouse` changed when `focusable` is changed given different starting conditions.",
            "created_at": "2024-09-29T18:28:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2381453992",
            "id": 2381453992,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6N8hqo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381453992/reactions"
            },
            "updated_at": "2024-09-29T18:28:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381453992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The callback is now invoked for floating windows, although it doesn't have arguments yet (but `getmousepos()` and `getcharmod()` should work).\r\n\r\nIt isn't hard to enable the callback for non-floating windows, but maybe that should be addressed together with #29365.",
            "created_at": "2024-09-30T00:56:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2381798702",
            "id": 2381798702,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6N910u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381798702/reactions"
            },
            "updated_at": "2024-09-30T01:01:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381798702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The callback is now invoked for floating windows, although it doesn't have arguments yet\r\n\r\nLooking at the output of `getmousepos()` can guess at the argument :) Mouse press event, mouse release event. Drag event if holding the mouse down and move across floating window. No mouse events if sweep across floater until `set mousemoveevent`.\r\n\r\nImplementing window dragging will have problems. If click on left border, then move left, there is no event, drag or otherwise. Could leave an empty cell outside the border and don't move too fast (width not compatible). Something to consider later. (some systems might keep delivering drag event even after the window is left, and there's exit window events)\r\n\r\n> (but `getmousepos()` \r\n\r\nYes, been working for a few pushes\r\n\r\n> and `getcharmod()` should work).\r\n\r\nAh, so that's how you get that info. Cool. Yes, that works. Too bad the state of the buttons is not available. Kind of like for `nvim_input_mouse`'s `{button}` but a bit mask.\r\n \r\n> It isn't hard to enable the callback for non-floating windows, but maybe that should be addressed together with #29365.\r\n\r\nPopups don't need this AFAIK. \r\n\r\nInterestingly, in simple cases it could be part of a workaround for not getting drag events past the edge or window leave events. Would require temporarily, while dragging a window, swapping into the popup's surrounding window a helper `mouse` function to track movement out of the popup. But in general much more complicated because of overlapping windows.\r\n\r\nMaybe a \"global\" mouse function?",
            "created_at": "2024-09-30T16:56:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2383713448",
            "id": 2383713448,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OFJSo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2383713448/reactions"
            },
            "updated_at": "2024-09-30T16:58:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2383713448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's another possibility. Say the signiture of the mouse callback is something like\r\n```\r\nfunction mouse_callback(win_id: int, within_bounds: bool, event_id)\r\n```\r\nCurrently the callback is only invoked when `within_bounds` is true. If it was always invoked and there was a method `get_event_info(win_id, event_id)` which returned the info like `getmousepos()` and returned stuff like `column_distance` when not within_bounds, positive or negative, giving the distance from the edge. I think if `within_bounds` is false, the event would typically be ignored except when dragging.\r\n\r\nDon't know about specific parameters, for example could be only one arg with a single bit for `within_bounds` and win_id could be stuffed in there as well. Don't know what the performance considerations might be. If there's concern about too many event callbacks being invoked, win could have a field for \"deliver extra events\".",
            "created_at": "2024-10-01T05:51:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2384859136",
            "id": 2384859136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OJhAA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2384859136/reactions"
            },
            "updated_at": "2024-10-01T05:51:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2384859136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Was looking at how mouse events work. Wanted to compare regular mappings versus how this PR delivers events to the window through `mouse=callback`. (Had to intuit events for the callback, but it's pretty clear).\r\n\r\nDiscovered that if there is a regular mapping, like (and similarly for drag events)\r\n```\r\nvim.keymap.set({'n', 'i'}, '<LeftRelease>', function() mouse_mapping(\"RELEASE\") end)\r\n```\r\nThen there there are no left relese events delivered to the window's mouse callback. The mapping events should not be generated if the event is going to window's mouse handler.\r\n",
            "created_at": "2024-10-06T18:24:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2395534821",
            "id": 2395534821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OyPXl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395534821/reactions"
            },
            "updated_at": "2024-10-06T18:24:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395534821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Regular drag/release mappings track mouse movement even when outside the OS window; something similar is needed for `mouse=callback` events. The events should be delivered to the window where the press occurred.\r\n\r\nPlaying around to correctly deliver drag/release events, the **patch** on top of this PR, found in https://github.com/neovim/neovim/issues/30504#issuecomment-2415632851, seems to work. The idea is tag each mouse press with a unique id and associate the window that handles the press with the id. Then when processing drag/release events make sure they go to the window where the original press-click event was generated.\r\n\r\nThis is not meant to be a patch, just an example of partially working code. The click_id may not be needed, only the handle where the last click occurred, but it helps insure things don't get out of whack.",
            "created_at": "2024-10-06T18:25:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2395535244",
            "id": 2395535244,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OyPeM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395535244/reactions"
            },
            "updated_at": "2024-10-17T04:07:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395535244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "FYI, see [popup tracking](https://github.com/errael/plenary.nvim/blob/PopupDrag/POPUP.md) for details of the current state of the popup API.\r\n",
            "created_at": "2024-10-06T18:26:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2395535478",
            "id": 2395535478,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6OyPh2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395535478/reactions"
            },
            "updated_at": "2024-10-17T04:00:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2395535478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The mapping events should not be generated if the event is going to window's mouse handler.\r\n\r\nThis can be complicated to achieve, and may require extra restrictions on the callback. Is it needed for a part of the popup API?",
            "created_at": "2024-10-07T07:40:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2396156869",
            "id": 2396156869,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O0nPF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2396156869/reactions"
            },
            "updated_at": "2024-10-07T07:40:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2396156869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > The mapping events should not be generated if the event is going to window's mouse handler.\r\n> \r\n> This can be complicated to achieve, and may require extra restrictions on the callback. Is it needed for a part of the popup API?\r\n\r\nIf the main app has\r\n```\r\nvim.keymap.set({'n', 'i'}, '<LeftMouse>', function() mouse_mapping(\"CLICK\") end)\r\n```\r\nAnd a popup is brought up with `close=click`, and `drag=true` (and it's underlying window has `focusable = false, mouse = win_mouse_cb,`). But `win_mouse_cb` is never invoked for `<LeftMouse>`, `<LeftDrag>`, `<LeftRelease>` event because the mapping consumes the event.\r\n\r\nSo, the answer is yes, it is needed for the popup API.\r\n\r\nCould you point out where in the code the mouse event is queued as a key and/or turned into a mapping?\r\n\r\n(Maybe more important, is it also needed to have a `nvim_open_win` `mouse` API you can reason about?)\r\n\r\nAn actual example of this is seen with [Splice9](https://github.com/errael/splice9). All actions have keyboard shortcuts, but the mouse can click on commands displayed in the `HUD` (heads up display). There is use of popups in several situations, a non-modal popup typically has click to close.\r\n\r\nAs seen in `Splice9`, also note that a clickable command is highlighted when the mouse rolls over it.\r\n\r\n![HUD-only-partial](https://github.com/user-attachments/assets/4e048df0-9272-4164-9e5b-813354d833d4)\r\n",
            "created_at": "2024-10-07T20:16:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2397809551",
            "id": 2397809551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O66uP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2397809551/reactions"
            },
            "updated_at": "2024-10-07T20:16:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2397809551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > The mapping events should not be generated if the event is going to window's mouse handler.\r\n> \r\n> This can be complicated to achieve, and may require extra restrictions on the callback. \r\n\r\nCould you elaborate on the \"extra restrictions\"?\r\n\r\n",
            "created_at": "2024-10-07T20:17:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2397811503",
            "id": 2397811503,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O67Mv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2397811503/reactions"
            },
            "updated_at": "2024-10-07T20:17:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2397811503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > > The mapping events should not be generated if the event is going to window's mouse handler.\r\n> > \r\n> > \r\n> > This can be complicated to achieve, and may require extra restrictions on the callback. Is it needed for a part of the popup API?\r\n> \r\n> If the main app has\r\n> \r\n> ```\r\n> vim.keymap.set({'n', 'i'}, '<LeftMouse>', function() mouse_mapping(\"CLICK\") end)\r\n> ```\r\n> \r\n> And a popup is brought up with `close=click`, and `drag=true` (and it's underlying window has `focusable = false, mouse = win_mouse_cb,`). But `win_mouse_cb` is never invoked for `<LeftMouse>`, `<LeftDrag>`, `<LeftRelease>` event because the mapping consumes the event.\r\n> \r\n> So, the answer is yes, it is needed for the popup API.\r\n\r\nThat doesn't explain why the mapping shouldn't consume the event. Does the popup API work like that?\r\n\r\n> Could you point out where in the code the mouse event is queued as a key and/or turned into a mapping?\r\n\r\nUsually, it's `nvim_input` or `nvim_input_mouse` invoked from `state_enter() -> input_get() -> inbuf_poll() -> loop_poll_events() -> loop_uv_run() -> uv_run() -> receive_msgpack() -> parse_msgpack() -> handle_request() -> request_event()` that queue the mouse event as a key. But when Nvim is busy, `loop_poll_events()` can be called by an `os_breakcheck()`.\r\n\r\nMappings are applied in `vgetorpeek() -> handle_mapping()`, which is usually called from `state_enter() -> vpeekc()` or `state_enter() -> safe_vgetc() -> vgetc()`.\r\n\r\nMouse event handling is invoked from `state_enter() -> normal_execute() -> nv_mouse() -> do_mouse()` or `state_enter() -> insert_execute() -> insert_handle_key() -> ins_mouse() -> do_mouse()`.\r\n\r\n> Could you elaborate on the \"extra restrictions\"?\r\n\r\nDepends on the implementation, which doesn't exist yet and may or may not be achievable.",
            "created_at": "2024-10-08T01:16:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2398389886",
            "id": 2398389886,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O9IZ-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2398389886/reactions"
            },
            "updated_at": "2024-10-08T01:18:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2398389886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> That doesn't explain why the mapping shouldn't consume the event. Does the popup API work like that?\r\n\r\nOops, my bad, the app `splice9` uses a buffer only mapping for the HUD. After adjusting my test... If the focus is not in the HUD, as is typical, then when the popup is clicked, even if the clicked popup spot is over the HUD, the popup closes as expected. But if the focus is in the HUD, then clicking the popup (no matter what's under the mouse under the popup) does not close the popup, and it does seem the event is consumed.\r\n\r\nNow that I've got a better idea of what's going on, I have some more things to look at.\r\n\r\nHmm, and I'll have to run some tests around `mousemoveevent` and `<MouseMove>` mapping. Since vim's popup's `mousemoved = \"any\"` works even with the `<MouseMove>` globally mapped. I see vim's `mouse.c::do_mouse()` has `popup_handle_mouse_moved()`. Probably part of some special casing.\r\n\r\nI haven't tried a modal popup, which depends on the popup callback `filter` that looks at all the keystrokes.\r\n\r\n`filter` is probably the biggest issue after the mouse.\r\n\r\nIs there a way to get, or approximate, that?\r\n\r\n-----\r\n\r\nThanks for the tour of mouse input and mapping (I probably should have set a brkpt). But now that I realize that mappings have priority over popup mouse interactions, hopefully I won't want to take a look.\r\n\r\nBTW, using `get_special_key_name(c, 0)`, instead of NULL, when doing\r\n```\r\n  Object res = nlua_call_ref(wp->w_config.mouse_cb, get_special_key_name(c, 0),\r\n                             (Array)ARRAY_DICT_INIT, kRetNilBool, NULL, &err);\r\n```\r\nis convenient for dbg printing the event instead of a hex value:)\r\n",
            "created_at": "2024-10-08T04:21:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2398796001",
            "id": 2398796001,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6O-rjh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2398796001/reactions"
            },
            "updated_at": "2024-10-08T08:57:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2398796001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "For the popup option `mousemoved = \"any\"`. In `vim` there is a side channel to inform the popup code that the mouse has moved.\r\n\r\nIn `neovim`, as things are now, the popup code saves the current `&mousemoveevent` and turns it on. When the last popup with `mousemoved = \"any\"` closes, `&mousemoveevent` is restored. Saving, using, and restoring `<MouseMove>` mapping is also needed. Depending on how `filter = callback` works in `neovim`, it might be possible to avoid changing the mapping.\r\n\r\nThe same idea should work for the other `mousemoved` options.\r\n\r\nIn my app the idea is doing a modal dialog/alert; popup a message, close the popup if there is any user action. There are two parts to this\r\n- `mousemoved = \"any\"`\r\n- `filter = FilterCloseAnyKey` which does `popup_close(wid)`\r\n\r\nNote that the filter catches mouse events that come in for mapping; so a mouse event may close the popup either as `mousemoved = \"any\"` or by the filter.\r\n\r\n-----\r\n\r\nAbout `mousemoved = \"any\"` in vim. Here's how things play out depending on how things are configured. There's an interesting interaction, see (5) (6) below.\r\n\r\n```vim\r\npopup_wid = popup_create(['simple', '=stuf='], {\r\n    mousemoved: \"any\",\r\n    #A# filter: FilterCloseAnyKey,\r\n})\r\n#B# &mousemoveevent = true\r\n#C# nnoremap <special> <MouseMove>   <ScriptCmd>MM()<CR>\r\n```\r\n1. only `mousemoved: \"any\"`\r\n   move the mouse, popup closes because of the `\"any\"`\r\n2. Include `#B# &mousemoveevent = true`\r\n   move the mouse, popup closes because of the `\"any\"`\r\n3. add `<MouseMove>` mapping. Include `#B#` and `#C#`, \r\n   move the mouse, popup **doesn't** close\r\n   mapped <MouseMove> events are delivered, the \"any\" trigger doesn't fire\r\n4. add `<MouseMove>` mapping. Include `#A#`, `#B#` and `#C#`, \r\n   move the mouse, popup closes because of `FilterCloseAnyKey`, not by \"any\"\r\n   the mouse event is delivered as a key\r\n\r\n5. add `<MouseMove>` mapping without `mousemoved: \"any\"`; without `#B# &mousemoveevent = true`\r\n   no mapping events occur as expected\r\n6. add `<MouseMove>` mapping; add `mousemoved: \"any\"`\r\n   surprisingly, the mapping events occur; while popup is active with `mousemoved: \"any\"` it is as though `&mousemoveevent = true`. The popup doesn't close.\r\n",
            "created_at": "2024-10-09T01:44:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2401107537",
            "id": 2401107537,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6PHf5R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2401107537/reactions"
            },
            "updated_at": "2024-10-09T01:44:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2401107537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "(Off Topic) @zeertzjq I see `vim.on_key()`, which, at first glance, is probably the way to implement `popup filter`. But unlike a `popup filter` there seems to be no way to consume the key or otherwise prevent normal processing.",
            "created_at": "2024-10-09T19:02:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2403164012",
            "id": 2403164012,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6PPV9s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403164012/reactions"
            },
            "updated_at": "2024-10-09T19:02:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403164012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I modified the code so that drag/release events are sent to the callback for the window that received the previous click. However, there is a problem: When the window that received the previous click cannot be found, it's not clear what the behavior should be. It's also hard to decide the arguments for the callback.\r\n\r\nI'm also starting to doubt whether the callback is needed at all, as after #30741 is implemented, `vim.on_key()` along with `mouse = true` can kind of already achieve what the callback does. I may move the `mouse = true` and `mouse = false` part to a separate PR soon (#30844), as there is not as much indecision regarding those.",
            "created_at": "2024-10-17T10:00:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2419095045",
            "id": 2419095045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6QMHYF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2419095045/reactions"
            },
            "updated_at": "2024-10-17T12:31:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2419095045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I modified the code so that drag/release events are sent to the callback for\r\n> the window that received the previous click. However, there is a problem: When\r\n> the window that received the previous click cannot be found, it's not clear\r\n> what the behavior should be. \r\n\r\nMy inclination is to throw away the events associated with a closed window.\r\nOtherwise there's drag/release events sent to a window that never received a\r\nbutton press event. Good defensive programming should avoid issues, but still\r\nseems strange.\r\n\r\n> It's also hard to decide the arguments for the callback.\r\n\r\nThe event name and doing `getmousepos()` satisfied my requirements for popup\r\nhandling. And passing a string with `nlua_call_ref()` required no effort...\r\n\r\nAs a related example, I put together a table so I could print/log the params\r\nfrom `vim.on_key()` It looks like\r\n```\r\nmev_map = {\r\n    [\"\\128\\253\\047\"] = \"<MiddleMouse>\",\r\n    [\"\\128\\253\\048\"] = \"<MiddleDrag>\",\r\n    ...\r\n}\r\n```\r\nand doing `mev_map[key] or key` to get something printable/decipherable.\r\n\r\nI guess it comes down to what/how to expose to the lua code. Passing in the\r\npieces `is_click`, `is_drag`, `is_scroll`, `button` seems to complicate things,\r\nbut then I hadn't considered scroll, maybe the details are needed for\r\ncompleteness. But it seems like what you want is `<LeftDrag>`, `<RightRelease>`,\r\nand these would have to be reconstructed by the lua code from the pieces.\r\n\r\n> I'm also starting to doubt whether the callback is needed at all, as after\r\n> #30741 is implemented, `vim.on_key()` along with `mouse = true` can kind of\r\n> already achieve what the callback does.\r\n\r\nI haven't tried out this latest PR and using it in combination with\r\n`vim.on_key()`. Before looking, I'm wondering about resolving interactions;\r\nThe key events are global and the mouse events are window. If there's multiple\r\nfloating windows, and multiple on_key handlers. All the handlers get all the\r\nevents; it's not clear to me how a given on_key handler knows which window the\r\nevent is associated with. The floating windows might be from different plugins.\r\n\r\nI can't say for sure there's a problem that can't be handled, but...\r\n\r\nThe mouse window callback seems to get the information to where it's needed\r\nwithout a lot of extra work.\r\n\r\n> I may move the `mouse = true` and `mouse = false` part to a separate PR soon\r\n> (#30844), as there is not as much indecision regarding those.\r\n\r\nA note on popup and `vim.on_key()` handling. The popup API about a key filter\r\nsays give the keys to the windows in zindex order and stop if the key is\r\ndiscarded. The popup code has a `vim.on_key()` handler for each popup that has a\r\nfilter (simpler code). But considering the zindex ordering and discard behavior\r\nwith the popup spec, I'll probably change it to have a single `vim.on_key()`\r\nhandler for popups and do the zindex ordering and short circuit in the popup\r\ncode. Relates to the semantics of how things work.\r\n",
            "created_at": "2024-10-18T01:06:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2421018736",
            "id": 2421018736,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6QTdBw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2421018736/reactions"
            },
            "updated_at": "2024-10-18T01:06:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2421018736",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My inclination is to throw away the events associated with a closed window.\r\nOtherwise there's drag/release events sent to a window that never received a\r\nbutton press event.\r\n\r\nI also thought so. Updated the PR.",
            "created_at": "2024-10-18T01:17:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2421029233",
            "id": 2421029233,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6QTflx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2421029233/reactions"
            },
            "updated_at": "2024-10-18T01:17:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2421029233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Using the updated/latest PR, slightly modified to provide the mouse event to the callback\r\n```diff\r\ndiff --git a/src/nvim/mouse.c b/src/nvim/mouse.c\r\n--- a/src/nvim/mouse.c\r\n+++ b/src/nvim/mouse.c\r\n@@ -235,1 +235,1 @@\r\n-static bool handle_mouse_cb(bool is_click, bool is_drag, bool is_scroll, int button)\r\n+static bool handle_mouse_cb(bool is_click, bool is_drag, bool is_scroll, int button, int c)\r\n@@ -258,2 +258,2 @@\r\n-  Object res = nlua_call_ref(wp->w_config.mouse_cb, NULL, (Array)ARRAY_DICT_INIT,\r\n-                             kRetNilBool, NULL, &err);\r\n+  Object res = nlua_call_ref(wp->w_config.mouse_cb, get_special_key_name(c, 0),\r\n+                             (Array)ARRAY_DICT_INIT, kRetNilBool, NULL, &err);\r\n@@ -417,1 +417,1 @@\r\n-  if (!handle_mouse_cb(is_click, is_drag, false, which_button)) {\r\n+  if (!handle_mouse_cb(is_click, is_drag, false, which_button, c)) {\r\n@@ -1113,1 +1113,1 @@\r\n-  if (!handle_mouse_cb(false, false, true, dir)) {\r\n+  if (!handle_mouse_cb(false, false, true, dir, 0)) {\r\n@@ -1626,1 +1626,1 @@\r\n-  if (!handle_mouse_cb(false, false, true, cap->arg)) {\r\n+  if (!handle_mouse_cb(false, false, true, cap->arg, 0)) {\r\n```\r\n\r\n\r\nI think of `neovim` as a window manager when it comes to delivering events to floating windows. Using `ubuntu` with `gnome`, when a button goes down in a window, and the mouse moves outside the window, the events continue to go to the original window; the one where the first click occurred. While outside the window, click the other button, toggle between buttons (while always keeping at least one button down). Events continue to go to the first window.\r\n\r\nI'm guessing that other window managers handle events in the same way. Using this common model in `neovim` seems good.\r\n\r\nNo matter what model is used, the following shows how this PR starts sending drag events to the wrong window.\r\n\r\nThe trace below was generated by\r\n1. source the lua script below; see 3 floating windows\r\n2. left click in top window\r\n3. drag into the 2nd window\r\n4. right click while still holding down the left button\r\n5. more drag\r\n6. release right\r\n7. more drag\r\n8. release left\r\n9. Enter `:mess` to see the trace\r\nObserve that the click in step 4 is delivered to the wrong callback.\r\nObserve that all the subsequent `<LeftDrag>` events go to the wrong callback.\r\n\r\n```\r\n                | window callback that gets the event.\r\n                V\r\nMOUSE WINCB 31 1002 <LeftMouse>: 0x0, line 9, col 50, wid 1002, winrow 3, wincol 20                 \r\nMOUSE WINCB 32 1002 <LeftDrag>: 0x0, line 10, col 50, wid 1002, winrow 4, wincol 20                 \r\n...\r\nMOUSE WINCB 37 1002 <LeftDrag>: 0x0, line 12, col 51, wid 1003, winrow 2, wincol 17                 \r\nMOUSE WINCB 38 1003 <RightMouse>: 0x0, line 12, col 51, wid 1003, winrow 2, wincol 17               \r\nMOUSE WINCB 39 1003 <LeftDrag>: 0x0, line 12, col 52, wid 1003, winrow 2, wincol 18                 \r\n...\r\nMOUSE WINCB 50 1003 <LeftDrag>: 0x0, line 16, col 58, wid 1004, winrow 2, wincol 20                 \r\nMOUSE WINCB 51 1003 <RightRelease>: 0x0, line 16, col 58, wid 1004, winrow 2, wincol 20             \r\nMOUSE WINCB 52 1003 <LeftDrag>: 0x0, line 16, col 57, wid 1004, winrow 2, wincol 19                 \r\n...\r\nMOUSE WINCB 58 1003 <LeftDrag>: 0x0, line 16, col 51, wid 1004, winrow 2, wincol 13                 \r\nMOUSE WINCB 59 1003 <LeftRelease>: 0x0, line 16, col 51, wid 1004, winrow 2, wincol 13              \r\n```\r\n\r\n\r\n```lua\r\nlocal count_mouse = 0\r\nlocal function get_mp(tag)\r\n    count_mouse = count_mouse + 1\r\n    local mp = vim.fn.getmousepos()\r\n    local mod = vim.fn.getcharmod()\r\n    vim.print(string.format(\"MOUSE %s: 0x%x, line %d, col %d, wid %d, winrow %d, wincol %d\",\r\n              tag, mod, mp.screenrow, mp.screencol, mp.winid, mp.winrow, mp.wincol))\r\n    return mp\r\nend\r\n\r\nlocal function create_mouse_cb(wid)\r\n    return function(name)\r\n        get_mp(string.format(\"WINCB %d %d %s\", count_mouse, wid, name))\r\n        return false\r\n    end\r\nend\r\n\r\nlocal xpos = 30\r\nlocal ypos = 6\r\nlocal function Pop1Any()\r\n    local bnr = vim.api.nvim_create_buf(false, true)\r\n    assert(bnr, \"Failed to create buffer\")\r\n\r\n    vim.api.nvim_set_option_value(\"bufhidden\", \"wipe\", {buf = bnr})\r\n    vim.api.nvim_set_option_value(\"modifiable\", true, {buf = bnr})\r\n    local popup_wid = vim.api.nvim_open_win(bnr, false, {\r\n        relative = \"editor\",\r\n        style = \"minimal\",\r\n        width = 30,\r\n        height = 4,\r\n        focusable = false,\r\n        col = xpos,\r\n        row = ypos,\r\n    })\r\n    vim.api.nvim_buf_set_lines(bnr, 0, -1, true, {'simple', '=' .. tostring(popup_wid) .. '='})\r\n    vim.api.nvim_win_set_config(popup_wid, {mouse = create_mouse_cb(popup_wid)})\r\n    xpos = xpos + 4\r\n    ypos = ypos + 4\r\nend\r\n\r\nPop1Any()\r\nPop1Any()\r\nPop1Any()\r\n```\r\n",
            "created_at": "2024-10-18T21:26:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2423255089",
            "id": 2423255089,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6Qb_Ax",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2423255089/reactions"
            },
            "updated_at": "2024-10-18T21:26:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2423255089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's also hard to decide the arguments for the callback.\r\n\r\nIncluding at least the **event** and the target **win_id** are useful. The target win_id allows one callback to be used for multiple windows in some circumstances.",
            "created_at": "2024-10-19T00:31:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2423405247",
            "id": 2423405247,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6Qcjq_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2423405247/reactions"
            },
            "updated_at": "2024-10-19T00:31:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2423405247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've run a few more tests. Here's one on `ubuntu`/`gnome`. In a `gnome-terminal` running `neovim` do LeftClick; drag out of `neovim` window; RightClick (Left still down) and see popup in `neovim`; RightRelease; drag mouse; do RightClick/RightRelease, see popup in different location; keep the right button down; move the mouse around (still outside of `neovim` window) and LeftClick; observe that the cursor in the `neovim` window moves around.\r\n\r\nWith the following added at the beginning of `handle_mouse_cb()` the mouse events are locked to the window where the first click occurs. The key to this is detecting a click when before there are no mouse buttons down, what the code calls a `fresh_click`.\r\n\r\n```diff\r\ndiff --git a/src/nvim/mouse.c b/src/nvim/mouse.c\r\n--- a/src/nvim/mouse.c\r\n+++ b/src/nvim/mouse.c\r\n@@ -241,0 +242,18 @@\r\n+  // Only tracking three mouse buttons.\r\n+  static int buttons_down = 0;\r\n+  if (button <= MOUSE_RIGHT && !is_drag) {\r\n+    if (is_click) {\r\n+      buttons_down |= (1 << button);\r\n+    } else {\r\n+      buttons_down &= ~(1 << button);\r\n+    }\r\n+  }\r\n+  int n_buttons = 0;\r\n+  for (int mask = 1; mask <= (1 << MOUSE_RIGHT); mask <<= 1) {\r\n+    if (buttons_down & mask) {\r\n+      ++n_buttons;\r\n+    }\r\n+  }\r\n+  bool fresh_click = is_click && n_buttons == 1 && button <= MOUSE_RIGHT;\r\n+  DLOG(\"%s: n_buttons %d, fresh_click %d\", get_special_key_name(c, 0), n_buttons, fresh_click);\r\n+\r\n@@ -243,1 +261,1 @@\r\n-  if (!is_click && !is_scroll && button != MOUSE_RELEASE) {  // drag or release\r\n+  if (!fresh_click && !is_scroll && button != MOUSE_RELEASE) {  // drag or release\r\n@@ -249,1 +267,1 @@\r\n-    if (is_click) {\r\n+    if (fresh_click) {\r\n```\r\n\r\nBut the bad news is that the popup code needs something similar to find fresh clicks. If there were a \"release left no more buttons pressed\" event, then that would simplify things a lot. In popup handling, might use `Ctrl-C` to reset mouse state (a just in case to satisfy my paranoia about lost events); this implies that always need an on_key handler active to look for `Ctrl-C`, sigh.\r\n\r\nI'm beginning to wonder if `mouse=boolean` and have a stream of events might be OK. It puts a burden on the plugin, but it's beginning to look like that burden is there anyway. I haven't tried anything based on using on_key. The importance of `mouse=true` is that the window shows up in getmousepos(). I haven't looked at what \"default mouse handling\" does with a window other than letting `getmousepos()` notice the window. Maybe `mouse=true` only affects the window if it is also focusable?\r\n\r\nBut using `vim.on_key()` seems flawed. IIUC, some mouse events could be lost; if that's true then it becomes impossible to know the mouse state (maybe I'm wrong about events getting lost). Maybe the event stream is best through `mouse=function`. Need that `Ctrl-C`.\r\n\r\nAn additional observation (which does seem reasonable behavior) is that if LeftRelease (while holding the right button down) then it forgets about a drag (not drag events when the LeftClick again, but about the thing being dragged). But the mouse is still locked to the original window, but no more dragging until after both buttons are released. (I'm not 100% sure of that, but that seems like what's happening).\r\n",
            "created_at": "2024-10-20T01:46:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2424390102",
            "id": 2424390102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6QgUHW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424390102/reactions"
            },
            "updated_at": "2024-10-20T06:51:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424390102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@zeertzjq It looks like there were a couple update a few hours ago. Any functional changes?",
            "created_at": "2024-10-20T17:18:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2425135207",
            "id": 2425135207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6QjKBn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425135207/reactions"
            },
            "updated_at": "2024-10-20T17:18:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425135207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > It's also hard to decide the arguments for the callback.\r\n> \r\n> Including at least the **event** and the target **win_id** are useful.\r\n\r\nIf the args are not obvious, it's usually a good idea for event handlers to just have an `ev: dict` arg that can be expanded in the future.",
            "created_at": "2024-10-20T17:54:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2425152607",
            "id": 2425152607,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6QjORf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425152607/reactions"
            },
            "updated_at": "2024-10-20T17:54:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425152607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @zeertzjq It looks like there were a couple update a few hours ago. Any functional changes?\r\n\r\nNo, it's a rebase on #30844",
            "created_at": "2024-10-20T22:37:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2425264535",
            "id": 2425264535,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6QjpmX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425264535/reactions"
            },
            "updated_at": "2024-10-20T22:37:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425264535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > @zeertzjq It looks like there were a couple update a few hours ago. Any functional changes?\r\n> \r\n> No, it's a rebase on #30844\r\n\r\nPerfect.\r\n\r\nI put a flag in the popup code to switch between `mouse=true` and `mouse=callback`.",
            "created_at": "2024-10-20T22:49:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/30542#issuecomment-2425270423",
            "id": 2425270423,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
            "node_id": "IC_kwDOAPphoM6QjrCX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425270423/reactions"
            },
            "updated_at": "2024-10-20T22:49:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425270423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30542/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30542/commits",
    "created_at": "2024-09-27T12:17:56Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30542.diff",
    "draft": true,
    "head": {
        "label": "zeertzjq:win-mouseevent",
        "ref": "win-mouseevent",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/zeertzjq/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/zeertzjq/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/zeertzjq/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/zeertzjq/neovim/branches{/branch}",
            "clone_url": "https://github.com/zeertzjq/neovim.git",
            "collaborators_url": "https://api.github.com/repos/zeertzjq/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/zeertzjq/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/zeertzjq/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/zeertzjq/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/zeertzjq/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/zeertzjq/neovim/contributors",
            "created_at": "2021-09-27T02:22:45Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/zeertzjq/neovim/deployments",
            "description": null,
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/zeertzjq/neovim/downloads",
            "events_url": "https://api.github.com/repos/zeertzjq/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/zeertzjq/neovim/forks",
            "full_name": "zeertzjq/neovim",
            "git_commits_url": "https://api.github.com/repos/zeertzjq/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/zeertzjq/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/zeertzjq/neovim/git/tags{/sha}",
            "git_url": "git://github.com/zeertzjq/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "",
            "hooks_url": "https://api.github.com/repos/zeertzjq/neovim/hooks",
            "html_url": "https://github.com/zeertzjq/neovim",
            "id": 410715915,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/zeertzjq/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/zeertzjq/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/zeertzjq/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/zeertzjq/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/zeertzjq/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/zeertzjq/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/zeertzjq/neovim/merges",
            "milestones_url": "https://api.github.com/repos/zeertzjq/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGHsHCw",
            "notifications_url": "https://api.github.com/repos/zeertzjq/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/zeertzjq/neovim/pulls{/number}",
            "pushed_at": "2024-10-22T01:05:18Z",
            "releases_url": "https://api.github.com/repos/zeertzjq/neovim/releases{/id}",
            "size": 283156,
            "ssh_url": "git@github.com:zeertzjq/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/zeertzjq/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/zeertzjq/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/zeertzjq/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/zeertzjq/neovim/subscription",
            "svn_url": "https://github.com/zeertzjq/neovim",
            "tags_url": "https://api.github.com/repos/zeertzjq/neovim/tags",
            "teams_url": "https://api.github.com/repos/zeertzjq/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/zeertzjq/neovim/git/trees{/sha}",
            "updated_at": "2023-02-18T11:19:39Z",
            "url": "https://api.github.com/repos/zeertzjq/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30542",
    "id": 2095714995,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30542",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 646043375,
            "name": "mouse",
            "node_id": "MDU6TGFiZWw2NDYwNDMzNzU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mouse"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows, popups, hover",
            "id": 3234818716,
            "name": "floatwin",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/floatwin"
        }
    ],
    "locked": false,
    "merge_commit_sha": "3927b985c6dac40868d0b0f44caff4ceaccf2ba1",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM586hKz",
    "number": 30542,
    "patch_url": "https://github.com/neovim/neovim/pull/30542.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30542/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ae4d5b83f4e7a1787c0ab3c49f1526c20e6d4d04",
    "title": "feat(float): support callback for mouse event",
    "updated_at": "2024-10-20T22:49:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30542",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    }
}