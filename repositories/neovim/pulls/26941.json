{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26941/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26941/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26941"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26941"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26941/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26941"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/06cadcce37e574b20fbf848cbf7e78b9ab8ab2ce"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5142,
            "forks_count": 5142,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1740,
            "open_issues_count": 1740,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-16T01:33:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247954,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72793,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-16T01:52:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72793,
            "watchers_count": 72793,
            "web_commit_signoff_required": false
        },
        "sha": "73e1942abe7a96d63ce3749af4187f2cdff87e69",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": null,
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26941#discussion_r1451520634"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26941"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451520634"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe pull this out of the function to the top level? Would make it easier to change later on.",
            "commit_id": "06cadcce37e574b20fbf848cbf7e78b9ab8ab2ce",
            "created_at": "2024-01-13T13:43:21Z",
            "diff_hunk": "@@ -0,0 +1,125 @@\n+local M = {}\n+\n+--- @param prog string\n+--- @param module string\n+--- @return integer, string\n+local function import_module(prog, module)\n+  local program = [[\n+import sys, importlib.util;\n+sys.path = [p for p in sys.path if p != \"\"];\n+sys.stdout.write(str(sys.version_info[0]) + \".\" + str(sys.version_info[1]));]]\n+\n+  program = program\n+    .. string.format('sys.exit(2 * int(importlib.util.find_spec(\"%s\") is None))', module)\n+\n+  local out = vim.system({ prog, '-W', 'ignore', '-c', program }):wait()\n+  return out.code, assert(out.stdout)\n+end\n+\n+local function get_python_candidates()\n+  return {\n+    'python3',\n+    'python3.12',\n+    'python3.11',\n+    'python3.10',\n+    'python3.9',\n+    'python3.8',\n+    'python3.7',\n+    'python',\n+  }\n+end\n+\n+--- @param prog string\n+--- @param module string\n+--- @param major_version integer\n+--- @return integer, string\n+local function check_for_module(prog, module, major_version)\n+  local prog_path = vim.fn.exepath(prog)\n+  if prog_path == '' then\n+    return 0, prog .. ' not found in search path or not executable.'\n+  end\n+\n+  local min_version = '3.7'",
            "html_url": "https://github.com/neovim/neovim/pull/26941#discussion_r1451520634",
            "id": 1451520634,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WhHJ6",
            "original_commit_id": "8445c3dc3e8a090f8b994efd7ad2db50ef252b7c",
            "original_line": 42,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/lua/vim/provider/python.lua",
            "position": null,
            "pull_request_review_id": 1820019666,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26941",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451520634/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-13T13:43:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451520634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26941#discussion_r1451520759"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26941"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451520759"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not a static table? (Also at top level, before any functions.)\r\n\r\nOr maybe we can combine this somehow with the `min_version` variable? (E.g., define `max_version` and then use `vim.version` to check for valid candidates.)",
            "commit_id": "06cadcce37e574b20fbf848cbf7e78b9ab8ab2ce",
            "created_at": "2024-01-13T13:43:45Z",
            "diff_hunk": "@@ -0,0 +1,125 @@\n+local M = {}\n+\n+--- @param prog string\n+--- @param module string\n+--- @return integer, string\n+local function import_module(prog, module)\n+  local program = [[\n+import sys, importlib.util;\n+sys.path = [p for p in sys.path if p != \"\"];\n+sys.stdout.write(str(sys.version_info[0]) + \".\" + str(sys.version_info[1]));]]\n+\n+  program = program\n+    .. string.format('sys.exit(2 * int(importlib.util.find_spec(\"%s\") is None))', module)\n+\n+  local out = vim.system({ prog, '-W', 'ignore', '-c', program }):wait()\n+  return out.code, assert(out.stdout)\n+end\n+\n+local function get_python_candidates()\n+  return {\n+    'python3',\n+    'python3.12',\n+    'python3.11',\n+    'python3.10',\n+    'python3.9',\n+    'python3.8',\n+    'python3.7',\n+    'python',\n+  }\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/26941#discussion_r1451520759",
            "id": 1451520759,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WhHL3",
            "original_commit_id": "8445c3dc3e8a090f8b994efd7ad2db50ef252b7c",
            "original_line": 30,
            "original_position": 30,
            "original_start_line": 19,
            "path": "runtime/lua/vim/provider/python.lua",
            "position": null,
            "pull_request_review_id": 1820019707,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26941",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451520759/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T13:47:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451520759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26941#discussion_r1451521408"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26941"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451521408"
                }
            },
            "author_association": "MEMBER",
            "body": "Similarly, such a \"constant\" could be defined in top level (and the check can use `vim.version`).",
            "commit_id": "06cadcce37e574b20fbf848cbf7e78b9ab8ab2ce",
            "created_at": "2024-01-13T13:45:58Z",
            "diff_hunk": "@@ -0,0 +1,125 @@\n+local M = {}\n+\n+--- @param prog string\n+--- @param module string\n+--- @return integer, string\n+local function import_module(prog, module)\n+  local program = [[\n+import sys, importlib.util;\n+sys.path = [p for p in sys.path if p != \"\"];\n+sys.stdout.write(str(sys.version_info[0]) + \".\" + str(sys.version_info[1]));]]\n+\n+  program = program\n+    .. string.format('sys.exit(2 * int(importlib.util.find_spec(\"%s\") is None))', module)\n+\n+  local out = vim.system({ prog, '-W', 'ignore', '-c', program }):wait()\n+  return out.code, assert(out.stdout)\n+end\n+\n+local function get_python_candidates()\n+  return {\n+    'python3',\n+    'python3.12',\n+    'python3.11',\n+    'python3.10',\n+    'python3.9',\n+    'python3.8',\n+    'python3.7',\n+    'python',\n+  }\n+end\n+\n+--- @param prog string\n+--- @param module string\n+--- @param major_version integer\n+--- @return integer, string\n+local function check_for_module(prog, module, major_version)\n+  local prog_path = vim.fn.exepath(prog)\n+  if prog_path == '' then\n+    return 0, prog .. ' not found in search path or not executable.'\n+  end\n+\n+  local min_version = '3.7'\n+\n+  --   Try to load module, and output Python version.\n+  --   Exit codes:\n+  --     0  module can be loaded.\n+  --     2  module cannot be loaded.\n+  --     Otherwise something else went wrong (e.g. 1 or 127).\n+  local prog_exitcode, prog_version = import_module(prog, module)\n+  if prog_exitcode == 2 or prog_exitcode == 0 then\n+    -- Check version only for expected return codes.\n+    if not vim.startswith(prog_version, tostring(major_version)) then\n+      return 0,\n+        string.format(\n+          '%s is Python %s and cannot provide Python %s.',\n+          prog_path,\n+          prog_version,\n+          major_version\n+        )\n+    elseif\n+      vim.startswith(prog_version, tostring(major_version))\n+      and vim.version.lt(prog_version, min_version)\n+    then\n+      return 0,\n+        string.format(\n+          '%s is Python %s and cannot provide Python >= %s.',\n+          prog_path,\n+          prog_version,\n+          min_version\n+        )\n+    end\n+  end\n+\n+  if prog_exitcode == 2 then\n+    return 0, string.format('%s does not have the \"%s\" module.', prog_path, module)\n+  elseif prog_exitcode == 127 then\n+    -- This can happen with pyenv's shims.\n+    return 0, string.format('%s does not exist: %s', prog_path, prog_version)\n+  elseif prog_exitcode ~= 0 then\n+    return 0,\n+      string.format(\n+        'Checking %s caused an unknown error. (%s, output: %s) Report this at https://github.com/neovim/neovim',\n+        prog_path,\n+        prog_exitcode,\n+        prog_version\n+      )\n+  end\n+\n+  return 1, ''\n+end\n+\n+--- @param module string\n+--- @param major_version integer\n+--- @return string[]\n+function M.detect_by_module(module, major_version)\n+  if major_version ~= 3 then",
            "html_url": "https://github.com/neovim/neovim/pull/26941#discussion_r1451521408",
            "id": 1451521408,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WhHWA",
            "original_commit_id": "8445c3dc3e8a090f8b994efd7ad2db50ef252b7c",
            "original_line": 96,
            "original_position": 96,
            "original_start_line": null,
            "path": "runtime/lua/vim/provider/python.lua",
            "position": null,
            "pull_request_review_id": 1820019938,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26941",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451521408/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-13T13:47:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451521408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26941#discussion_r1451522249"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26941"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451522249"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not use `vim.version` for the whole check (and for the one above)?",
            "commit_id": "06cadcce37e574b20fbf848cbf7e78b9ab8ab2ce",
            "created_at": "2024-01-13T13:48:31Z",
            "diff_hunk": "@@ -0,0 +1,125 @@\n+local M = {}\n+\n+--- @param prog string\n+--- @param module string\n+--- @return integer, string\n+local function import_module(prog, module)\n+  local program = [[\n+import sys, importlib.util;\n+sys.path = [p for p in sys.path if p != \"\"];\n+sys.stdout.write(str(sys.version_info[0]) + \".\" + str(sys.version_info[1]));]]\n+\n+  program = program\n+    .. string.format('sys.exit(2 * int(importlib.util.find_spec(\"%s\") is None))', module)\n+\n+  local out = vim.system({ prog, '-W', 'ignore', '-c', program }):wait()\n+  return out.code, assert(out.stdout)\n+end\n+\n+local function get_python_candidates()\n+  return {\n+    'python3',\n+    'python3.12',\n+    'python3.11',\n+    'python3.10',\n+    'python3.9',\n+    'python3.8',\n+    'python3.7',\n+    'python',\n+  }\n+end\n+\n+--- @param prog string\n+--- @param module string\n+--- @param major_version integer\n+--- @return integer, string\n+local function check_for_module(prog, module, major_version)\n+  local prog_path = vim.fn.exepath(prog)\n+  if prog_path == '' then\n+    return 0, prog .. ' not found in search path or not executable.'\n+  end\n+\n+  local min_version = '3.7'\n+\n+  --   Try to load module, and output Python version.\n+  --   Exit codes:\n+  --     0  module can be loaded.\n+  --     2  module cannot be loaded.\n+  --     Otherwise something else went wrong (e.g. 1 or 127).\n+  local prog_exitcode, prog_version = import_module(prog, module)\n+  if prog_exitcode == 2 or prog_exitcode == 0 then\n+    -- Check version only for expected return codes.\n+    if not vim.startswith(prog_version, tostring(major_version)) then\n+      return 0,\n+        string.format(\n+          '%s is Python %s and cannot provide Python %s.',\n+          prog_path,\n+          prog_version,\n+          major_version\n+        )\n+    elseif\n+      vim.startswith(prog_version, tostring(major_version))\n+      and vim.version.lt(prog_version, min_version)",
            "html_url": "https://github.com/neovim/neovim/pull/26941#discussion_r1451522249",
            "id": 1451522249,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WhHjJ",
            "original_commit_id": "8445c3dc3e8a090f8b994efd7ad2db50ef252b7c",
            "original_line": 62,
            "original_position": 62,
            "original_start_line": 61,
            "path": "runtime/lua/vim/provider/python.lua",
            "position": null,
            "pull_request_review_id": 1820020226,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26941",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451522249/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T13:48:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451522249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26941/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26941/commits",
    "created_at": "2024-01-07T13:56:14Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26941.diff",
    "draft": true,
    "head": {
        "label": "dundargoc:refactor/provider/python",
        "ref": "refactor/provider/python",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dundargoc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dundargoc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dundargoc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dundargoc/neovim/branches{/branch}",
            "clone_url": "https://github.com/dundargoc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dundargoc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dundargoc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dundargoc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dundargoc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dundargoc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dundargoc/neovim/contributors",
            "created_at": "2021-06-20T10:14:48Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dundargoc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dundargoc/neovim/downloads",
            "events_url": "https://api.github.com/repos/dundargoc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dundargoc/neovim/forks",
            "full_name": "dundargoc/neovim",
            "git_commits_url": "https://api.github.com/repos/dundargoc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dundargoc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dundargoc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dundargoc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dundargoc/neovim/hooks",
            "html_url": "https://github.com/dundargoc/neovim",
            "id": 378614899,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dundargoc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dundargoc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dundargoc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dundargoc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dundargoc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/dundargoc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dundargoc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dundargoc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzg2MTQ4OTk=",
            "notifications_url": "https://api.github.com/repos/dundargoc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dundargoc/neovim/pulls{/number}",
            "pushed_at": "2024-01-16T00:32:29Z",
            "releases_url": "https://api.github.com/repos/dundargoc/neovim/releases{/id}",
            "size": 244597,
            "ssh_url": "git@github.com:dundargoc/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/dundargoc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dundargoc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dundargoc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dundargoc/neovim/subscription",
            "svn_url": "https://github.com/dundargoc/neovim",
            "tags_url": "https://api.github.com/repos/dundargoc/neovim/tags",
            "teams_url": "https://api.github.com/repos/dundargoc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dundargoc/neovim/git/trees{/sha}",
            "updated_at": "2023-07-31T17:43:26Z",
            "url": "https://api.github.com/repos/dundargoc/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "06cadcce37e574b20fbf848cbf7e78b9ab8ab2ce",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
            "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
            "followers_url": "https://api.github.com/users/dundargoc/followers",
            "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dundargoc",
            "id": 33953936,
            "login": "dundargoc",
            "node_id": "MDQ6VXNlcjMzOTUzOTM2",
            "organizations_url": "https://api.github.com/users/dundargoc/orgs",
            "received_events_url": "https://api.github.com/users/dundargoc/received_events",
            "repos_url": "https://api.github.com/users/dundargoc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dundargoc"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26941",
    "id": 1667754905,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26941",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 144672485,
            "name": "provider",
            "node_id": "MDU6TGFiZWwxNDQ2NzI0ODU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/provider"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b618d3ec8225a139b795617bcf60b1d04c32b678",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5jZ-uZ",
    "number": 26941,
    "patch_url": "https://github.com/neovim/neovim/pull/26941.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26941/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/06cadcce37e574b20fbf848cbf7e78b9ab8ab2ce",
    "title": "refactor: rewrite python provider in lua",
    "updated_at": "2024-01-16T00:32:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26941",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
        "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/dundargoc/followers",
        "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dundargoc",
        "id": 33953936,
        "login": "dundargoc",
        "node_id": "MDQ6VXNlcjMzOTUzOTM2",
        "organizations_url": "https://api.github.com/users/dundargoc/orgs",
        "received_events_url": "https://api.github.com/users/dundargoc/received_events",
        "repos_url": "https://api.github.com/users/dundargoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dundargoc"
    }
}