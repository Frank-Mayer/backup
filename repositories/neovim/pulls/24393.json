{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24393/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24393/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/24393"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24393"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24393/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/01ea1dd999faf685aaa4844c9b88615382e7befe"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4814,
            "forks_count": 4814,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1663,
            "open_issues_count": 1663,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-08-17T00:45:44Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247477,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 68525,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-08-17T01:40:08Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 68525,
            "watchers_count": 68525,
            "web_commit_signoff_required": false
        },
        "sha": "e928161bde262c238f79bc0fd84e60178ff6a321",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "I hope my C isn't awful :sweat_smile: \r\n\r\nMy only concern is that the error message for me doesn't show the caret (^) indicator of where exactly an error might be (maybe because it's on a newline below it?)\r\n\r\n~I was also unsure about convention for allocations failing (hence the comments...)~ Linter warned me about using xstr(n)dup",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1268102181"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1268102181"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  char *formatted_message = xmalloc(message_length);\r\n```",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-07-19T13:46:16Z",
            "diff_hunk": "@@ -1541,22 +1541,95 @@ int tslua_parse_query(lua_State *L)\n   return 1;\n }\n \n-static const char *query_err_string(TSQueryError err)\n+static const char *query_err_to_string(TSQueryError error_type, size_t row, size_t column,\n+                                       const char *message)\n {\n-  switch (err) {\n+  const char *msg = \"\";\n+  switch (error_type) {\n   case TSQueryErrorSyntax:\n-    return \"invalid syntax\";\n+    msg = \"Invalid syntax:\\n\";\n+    break;\n   case TSQueryErrorNodeType:\n-    return \"invalid node type\";\n+    msg = \"Invalid node type \";\n+    break;\n   case TSQueryErrorField:\n-    return \"invalid field\";\n+    msg = \"Invalid field name \";\n+    break;\n   case TSQueryErrorCapture:\n-    return \"invalid capture\";\n+    msg = \"Invalid capture name \";\n+    break;\n   case TSQueryErrorStructure:\n-    return \"invalid structure\";\n+    msg = \"Impossible pattern:\\n\";\n+    break;\n   default:\n-    return \"error\";\n+    msg = \"error\";\n+    break;\n+  }\n+\n+  size_t message_length = strlen(msg) + strlen(message) + 20;\n+  char *formatted_message = (char *)xmalloc(message_length);",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1268102181",
            "id": 1268102181,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LlbQl",
            "original_commit_id": "82f67f4ef201d315cf95239295c404f0a53c47ae",
            "original_line": 1570,
            "original_position": 49,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": null,
            "pull_request_review_id": 1537140564,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1268102181/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-19T13:46:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1268102181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1296203558"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296203558"
                }
            },
            "author_association": "MEMBER",
            "body": "You don't need to initialize with a string here since the `switch` has a default case\r\n\r\n```suggestion\r\n  const char *msg;\r\n```",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-08-16T17:07:03Z",
            "diff_hunk": "@@ -1549,22 +1549,105 @@ int tslua_parse_query(lua_State *L)\n   return 1;\n }\n \n-static const char *query_err_string(TSQueryError err)\n+static const char *query_err_to_string(TSQueryError error_type, size_t row, size_t column,\n+                                       const char *message)\n {\n-  switch (err) {\n+  const char *msg = \"\";",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1296203558",
            "id": 1296203558,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5NQn8m",
            "original_commit_id": "6b49d3c80dbce3f7c8fc761ae27e7d3255766a66",
            "original_line": 1555,
            "original_position": 20,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": null,
            "pull_request_review_id": 1581078275,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296203558/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-16T17:09:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296203558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1296276403"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296276403"
                }
            },
            "author_association": "MEMBER",
            "body": "40? Just a bit of extra characters?",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-08-16T18:17:49Z",
            "diff_hunk": "@@ -1549,22 +1549,105 @@ int tslua_parse_query(lua_State *L)\n   return 1;\n }\n \n-static const char *query_err_string(TSQueryError err)\n+static const char *query_err_to_string(TSQueryError error_type, size_t row, size_t column,\n+                                       const char *message)\n {\n-  switch (err) {\n+  const char *msg;\n+  switch (error_type) {\n   case TSQueryErrorSyntax:\n-    return \"invalid syntax\";\n+    msg = \"Invalid syntax:\\n\";\n+    break;\n   case TSQueryErrorNodeType:\n-    return \"invalid node type\";\n+    msg = \"Invalid node type \";\n+    break;\n   case TSQueryErrorField:\n-    return \"invalid field\";\n+    msg = \"Invalid field name \";\n+    break;\n   case TSQueryErrorCapture:\n-    return \"invalid capture\";\n+    msg = \"Invalid capture name \";\n+    break;\n   case TSQueryErrorStructure:\n-    return \"invalid structure\";\n+    msg = \"Impossible pattern:\\n\";\n+    break;\n+  default:\n+    msg = \"error\";\n+    break;\n+  }\n+\n+  size_t message_length = strlen(msg) + strlen(message) + 40;",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1296276403",
            "id": 1296276403,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5NQ5uz",
            "original_commit_id": "f6d3b0954a2e6f30a7622bebb26acc1ff2242ccb",
            "original_line": 1577,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": null,
            "pull_request_review_id": 1581185080,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296276403/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-16T18:18:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296276403",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1296336569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296336569"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hm 20 proved not to be enough though",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-08-16T19:23:50Z",
            "diff_hunk": "@@ -1549,22 +1549,105 @@ int tslua_parse_query(lua_State *L)\n   return 1;\n }\n \n-static const char *query_err_string(TSQueryError err)\n+static const char *query_err_to_string(TSQueryError error_type, size_t row, size_t column,\n+                                       const char *message)\n {\n-  switch (err) {\n+  const char *msg;\n+  switch (error_type) {\n   case TSQueryErrorSyntax:\n-    return \"invalid syntax\";\n+    msg = \"Invalid syntax:\\n\";\n+    break;\n   case TSQueryErrorNodeType:\n-    return \"invalid node type\";\n+    msg = \"Invalid node type \";\n+    break;\n   case TSQueryErrorField:\n-    return \"invalid field\";\n+    msg = \"Invalid field name \";\n+    break;\n   case TSQueryErrorCapture:\n-    return \"invalid capture\";\n+    msg = \"Invalid capture name \";\n+    break;\n   case TSQueryErrorStructure:\n-    return \"invalid structure\";\n+    msg = \"Impossible pattern:\\n\";\n+    break;\n+  default:\n+    msg = \"error\";\n+    break;\n+  }\n+\n+  size_t message_length = strlen(msg) + strlen(message) + 40;",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1296336569",
            "id": 1296336569,
            "in_reply_to_id": 1296276403,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5NRIa5",
            "original_commit_id": "f6d3b0954a2e6f30a7622bebb26acc1ff2242ccb",
            "original_line": 1577,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": null,
            "pull_request_review_id": 1581278524,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296336569/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-16T19:23:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296336569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1296344809"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296344809"
                }
            },
            "author_association": "MEMBER",
            "body": "If you don't know the number then just give it a big one. IOSIZE should do.",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-08-16T19:33:41Z",
            "diff_hunk": "@@ -1549,22 +1549,105 @@ int tslua_parse_query(lua_State *L)\n   return 1;\n }\n \n-static const char *query_err_string(TSQueryError err)\n+static const char *query_err_to_string(TSQueryError error_type, size_t row, size_t column,\n+                                       const char *message)\n {\n-  switch (err) {\n+  const char *msg;\n+  switch (error_type) {\n   case TSQueryErrorSyntax:\n-    return \"invalid syntax\";\n+    msg = \"Invalid syntax:\\n\";\n+    break;\n   case TSQueryErrorNodeType:\n-    return \"invalid node type\";\n+    msg = \"Invalid node type \";\n+    break;\n   case TSQueryErrorField:\n-    return \"invalid field\";\n+    msg = \"Invalid field name \";\n+    break;\n   case TSQueryErrorCapture:\n-    return \"invalid capture\";\n+    msg = \"Invalid capture name \";\n+    break;\n   case TSQueryErrorStructure:\n-    return \"invalid structure\";\n+    msg = \"Impossible pattern:\\n\";\n+    break;\n+  default:\n+    msg = \"error\";\n+    break;\n+  }\n+\n+  size_t message_length = strlen(msg) + strlen(message) + 40;",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1296344809",
            "id": 1296344809,
            "in_reply_to_id": 1296276403,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5NRKbp",
            "original_commit_id": "f6d3b0954a2e6f30a7622bebb26acc1ff2242ccb",
            "original_line": 1577,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": null,
            "pull_request_review_id": 1581291346,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296344809/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-16T19:33:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296344809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1296347569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296347569"
                }
            },
            "author_association": "MEMBER",
            "body": "My comment was more about giving 40 a name, not about the specific value. A named constant would help to see what it is doing.",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-08-16T19:36:57Z",
            "diff_hunk": "@@ -1549,22 +1549,105 @@ int tslua_parse_query(lua_State *L)\n   return 1;\n }\n \n-static const char *query_err_string(TSQueryError err)\n+static const char *query_err_to_string(TSQueryError error_type, size_t row, size_t column,\n+                                       const char *message)\n {\n-  switch (err) {\n+  const char *msg;\n+  switch (error_type) {\n   case TSQueryErrorSyntax:\n-    return \"invalid syntax\";\n+    msg = \"Invalid syntax:\\n\";\n+    break;\n   case TSQueryErrorNodeType:\n-    return \"invalid node type\";\n+    msg = \"Invalid node type \";\n+    break;\n   case TSQueryErrorField:\n-    return \"invalid field\";\n+    msg = \"Invalid field name \";\n+    break;\n   case TSQueryErrorCapture:\n-    return \"invalid capture\";\n+    msg = \"Invalid capture name \";\n+    break;\n   case TSQueryErrorStructure:\n-    return \"invalid structure\";\n+    msg = \"Impossible pattern:\\n\";\n+    break;\n+  default:\n+    msg = \"error\";\n+    break;\n+  }\n+\n+  size_t message_length = strlen(msg) + strlen(message) + 40;",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1296347569",
            "id": 1296347569,
            "in_reply_to_id": 1296276403,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5NRLGx",
            "original_commit_id": "f6d3b0954a2e6f30a7622bebb26acc1ff2242ccb",
            "original_line": 1577,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": null,
            "pull_request_review_id": 1581296843,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296347569/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-16T19:37:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296347569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1296351737"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296351737"
                }
            },
            "author_association": "MEMBER",
            "body": "For error strings we typically use the same constant as we don't need to optimise for memory along an error path.",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-08-16T19:40:33Z",
            "diff_hunk": "@@ -1549,22 +1549,105 @@ int tslua_parse_query(lua_State *L)\n   return 1;\n }\n \n-static const char *query_err_string(TSQueryError err)\n+static const char *query_err_to_string(TSQueryError error_type, size_t row, size_t column,\n+                                       const char *message)\n {\n-  switch (err) {\n+  const char *msg;\n+  switch (error_type) {\n   case TSQueryErrorSyntax:\n-    return \"invalid syntax\";\n+    msg = \"Invalid syntax:\\n\";\n+    break;\n   case TSQueryErrorNodeType:\n-    return \"invalid node type\";\n+    msg = \"Invalid node type \";\n+    break;\n   case TSQueryErrorField:\n-    return \"invalid field\";\n+    msg = \"Invalid field name \";\n+    break;\n   case TSQueryErrorCapture:\n-    return \"invalid capture\";\n+    msg = \"Invalid capture name \";\n+    break;\n   case TSQueryErrorStructure:\n-    return \"invalid structure\";\n+    msg = \"Impossible pattern:\\n\";\n+    break;\n+  default:\n+    msg = \"error\";\n+    break;\n+  }\n+\n+  size_t message_length = strlen(msg) + strlen(message) + 40;",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1296351737",
            "id": 1296351737,
            "in_reply_to_id": 1296276403,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5NRMH5",
            "original_commit_id": "f6d3b0954a2e6f30a7622bebb26acc1ff2242ccb",
            "original_line": 1577,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": null,
            "pull_request_review_id": 1581302102,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296351737/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-16T19:40:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296351737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1296361232"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296361232"
                }
            },
            "author_association": "MEMBER",
            "body": "you used `xstrndup` below",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-08-16T19:51:30Z",
            "diff_hunk": "@@ -1549,22 +1549,104 @@ int tslua_parse_query(lua_State *L)\n   return 1;\n }\n \n-static const char *query_err_string(TSQueryError err)\n+static const char *query_err_to_string(TSQueryError error_type, size_t row, size_t column,\n+                                       const char *message)\n {\n-  switch (err) {\n+  const char *msg;\n+  switch (error_type) {\n   case TSQueryErrorSyntax:\n-    return \"invalid syntax\";\n+    msg = \"Invalid syntax:\\n\";\n+    break;\n   case TSQueryErrorNodeType:\n-    return \"invalid node type\";\n+    msg = \"Invalid node type \";\n+    break;\n   case TSQueryErrorField:\n-    return \"invalid field\";\n+    msg = \"Invalid field name \";\n+    break;\n   case TSQueryErrorCapture:\n-    return \"invalid capture\";\n+    msg = \"Invalid capture name \";\n+    break;\n   case TSQueryErrorStructure:\n-    return \"invalid structure\";\n+    msg = \"Impossible pattern:\\n\";\n+    break;\n+  default:\n+    msg = \"error\";\n+    break;\n+  }\n+\n+  char *formatted_message = xmalloc(IOSIZE);\n+  switch (error_type) {\n+  case TSQueryErrorNodeType:\n+  case TSQueryErrorField:\n+  case TSQueryErrorCapture:\n+    snprintf(formatted_message, IOSIZE, \"Query error at %zu:%zu. %s\\\"%s\\\"\\n\", row + 1,\n+             column + 1, msg, message);\n+    break;\n   default:\n-    return \"error\";\n+    snprintf(formatted_message, IOSIZE, \"Query error at %zu:%zu. %s%s\\n\", row + 1,\n+             column + 1, msg, message);\n+    break;\n   }\n+  return formatted_message;\n+}\n+\n+static const char *query_err_string(const char *src, uint32_t error_offset, TSQueryError error_type)\n+{\n+  size_t line_start = 0;\n+  size_t row = 0;\n+  char *line_containing_error = NULL;\n+  size_t line_length;\n+\n+  const char *end_str;\n+  const char *src_tmp = src;\n+  while ((end_str = strchr(src_tmp, '\\n')) != NULL) {\n+    line_length = (size_t)(end_str - src_tmp) + 1;\n+    size_t line_end = line_start + line_length;\n+    if (line_end > error_offset) {\n+      line_containing_error = strndup(src_tmp, line_length);",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1296361232",
            "id": 1296361232,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5NROcQ",
            "original_commit_id": "a9f72d6492fae9ba3612d8afe7ab863288f658ce",
            "original_line": 1606,
            "original_position": 77,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": null,
            "pull_request_review_id": 1581316733,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296361232/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-16T19:51:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296361232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24393#discussion_r1296364737"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24393"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296364737"
                }
            },
            "author_association": "MEMBER",
            "body": "Could we in a follow-up PR forward a table to Lua to account for possible pre-processing of the query source? Lua could subtract lines that come from `; inherit` or forward to a different file in case the error is caused by a `inherit` directive?\r\n\r\nAnyways not directly related to this PR... Great work! ",
            "commit_id": "01ea1dd999faf685aaa4844c9b88615382e7befe",
            "created_at": "2023-08-16T19:55:32Z",
            "diff_hunk": "@@ -1538,8 +1538,8 @@ int tslua_parse_query(lua_State *L)\n   TSQuery *query = ts_query_new(lang, src, (uint32_t)len, &error_offset, &error_type);\n \n   if (!query) {\n-    return luaL_error(L, \"query: %s at position %d for language %s\",\n-                      query_err_string(error_type), (int)error_offset, lang_name);\n+    return luaL_error(L, \"%s\",\n+                      query_err_string(src, error_offset, error_type));",
            "html_url": "https://github.com/neovim/neovim/pull/24393#discussion_r1296364737",
            "id": 1296364737,
            "line": 1542,
            "node_id": "PRRC_kwDOAPphoM5NRPTB",
            "original_commit_id": "a9f72d6492fae9ba3612d8afe7ab863288f658ce",
            "original_line": 1542,
            "original_position": 7,
            "original_start_line": null,
            "path": "src/nvim/lua/treesitter.c",
            "position": 7,
            "pull_request_review_id": 1581322169,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296364737/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-16T19:55:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1296364737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Can you show a screenshot of (or copy&paste) the new error message?",
            "created_at": "2023-07-19T12:07:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1641964361",
            "id": 1641964361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h3mNJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1641964361/reactions"
            },
            "updated_at": "2023-07-19T12:07:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1641964361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is it hard to write tests for this? There are many cases. And tests would make it obvious what the messages will look like (I'm curious about why newline is used in some cases but not others). `helpers.pcall_err()` will be useful.\r\n\r\nSee [test/functional/example_spec.lua](https://github.com/neovim/neovim/blob/master/test/functional/example_spec.lua) for example. You can [run the test](https://github.com/neovim/neovim/blob/master/test/README.md#running-tests) like this:\r\n\r\n    TEST_FILE=test/functional/example_spec.lua make functionaltest",
            "created_at": "2023-07-19T13:47:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642118675",
            "id": 1642118675,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h4L4T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642118675/reactions"
            },
            "updated_at": "2023-07-19T13:47:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642118675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We should also add these errors to `messages` somehow. The current virtual text is virtually unreadable.\r\n\r\nA simpler alternative is to replace the end-of-line virtual text by a virtual line, either above -- if possible -- or below the first (visible?) line.\r\n\r\nWe should also consider upstreaming the query healthcheck from nvim-treesitter.",
            "created_at": "2023-07-19T14:35:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642210186",
            "id": 1642210186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h4iOK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642210186/reactions"
            },
            "updated_at": "2023-07-19T14:35:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642210186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The virtual_text errors are just a consequence of the queries running inside decoration provider callbacks.\r\n\r\nWe need to revive #19814 so errors are just printed normally, but in a way to not completly clobber nvim since the errors are triggered on every line.",
            "created_at": "2023-07-19T14:44:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642228585",
            "id": 1642228585,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h4mtp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642228585/reactions"
            },
            "updated_at": "2023-07-19T14:44:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642228585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To be clear, those aren't blockers for this PR , right?",
            "created_at": "2023-07-19T14:48:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642235544",
            "id": 1642235544,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h4oaY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642235544/reactions"
            },
            "updated_at": "2023-07-19T14:48:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642235544",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, but a _useful_ way of exposing these errors is sorely needed. Upstreaming the checkhealth is probably the simplest (just a simple `pcall` of `vim.treesitter.query.get` of all queries in runtimepath and either print \"all queries OK\" or just surface the error suffices).\r\n\r\nBut this change is of course a big improvement already and will be helpful for `nvim-treesitter` (as soon as that is updated to account to the new multiline error message).",
            "created_at": "2023-07-19T14:56:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642248302",
            "id": 1642248302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h4rhu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642248302/reactions"
            },
            "updated_at": "2023-07-19T14:56:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642248302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Here's how the new error looks, by the way:\r\n```\r\nE5108: Error executing lua /usr/local/share/nvim/runtime/lua/vim/treesitter/query.lua:273: Query error at 3:2. Invalid node type dentifier)\r\n```\r\n\r\nSo suggestions: \r\n\r\n1. add quotes around the node type to make it clear what the verbatim node is;\r\n2. there seems to be an off-by-one error, since the opening paren is missing but the closing paren is shown (the full -- deliberately wrong -- node is `(dentifier)`).",
            "created_at": "2023-07-19T14:58:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642252183",
            "id": 1642252183,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h4seX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642252183/reactions"
            },
            "updated_at": "2023-07-19T15:01:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642252183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> there seems to be an off-by-one error, since the opening paren is missing but the closing paren is shown.\r\n\r\nis the `dentifier` perhaps also another off-by-one error? or just copy paste error?",
            "created_at": "2023-07-19T15:00:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642254972",
            "id": 1642254972,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h4tJ8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642254972/reactions"
            },
            "updated_at": "2023-07-19T15:04:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642254972",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Here's how the new error looks, by the way:\r\n> \r\n> ```\r\n> E5108: Error executing lua /usr/local/share/nvim/runtime/lua/vim/treesitter/query.lua:273: Query error at 3:2. Invalid node type dentifier)\r\n> ```\r\n> \r\n> So suggestions:\r\n> \r\n> 1. add quotes around the node type to make it clear what the verbatim node is;\r\n> 2. there seems to be an off-by-one error, since the opening paren is missing but the closing paren is shown (the full -- deliberately wrong -- node is `(dentifier)`).\r\n\r\nThink that was from 20 extra bytes not being enough to hold the msg, 40 should be fine\r\n\r\nI'll see if I can add tests but I might need some help there..\r\n\r\nHere's what it looks like for me now (node quoted w/ extra room)\r\n![image](https://github.com/neovim/neovim/assets/29718261/e5226673-54b4-4b5f-aa13-0a39f138de1c)\r\n",
            "created_at": "2023-07-19T19:44:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642659763",
            "id": 1642659763,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h6P-z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642659763/reactions"
            },
            "updated_at": "2023-07-19T19:44:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642659763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> (I'm curious about why newline is used in some cases but not others).\r\n\r\nThose are for specific recognizable nodes/fields/captures that are impossible, of which they are displayed right after then. The others don't have that",
            "created_at": "2023-07-19T19:46:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642661215",
            "id": 1642661215,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h6QVf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642661215/reactions"
            },
            "updated_at": "2023-07-19T19:46:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642661215",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Test-wise I drafted this in test/functional/treesitter/highlight_spec.lua, but I have no clue how to check the error message beyond that.\r\n\r\n```lua\r\ndescribe('treesitter query error messages', function() \r\n  local screen\r\n\r\n  before_each(function()\r\n    screen = Screen.new(40, 6)\r\n    screen:attach()\r\n    screen:set_default_attr_ids {\r\n      [1] = {bold = true, foreground = Screen.colors.Blue1};\r\n      [2] = {foreground = Screen.colors.Blue1};\r\n      [3] = {bold = true, foreground = Screen.colors.SeaGreen4};\r\n      [4] = {bold = true, foreground = Screen.colors.Brown};\r\n      [5] = {foreground = Screen.colors.Magenta};\r\n      [6] = {foreground = Screen.colors.Red};\r\n      [7] = {bold = true, foreground = Screen.colors.SlateBlue};\r\n      [8] = {foreground = Screen.colors.Grey100, background = Screen.colors.Red};\r\n      [9] = {foreground = Screen.colors.Magenta, background = Screen.colors.Red};\r\n      [10] = {foreground = Screen.colors.Red, background = Screen.colors.Red};\r\n      [11] = {foreground = Screen.colors.Cyan4};\r\n    }\r\n\r\n    local hl_simple_query_c = [[\r\n      (dentifier) @variable\r\n    ]]\r\n    exec_lua([[ hl_query = ... ]], hl_simple_query_c)\r\n    command [[ hi link @error ErrorMsg ]]\r\n    command [[ hi link @warning WarningMsg ]]\r\n  end)\r\n\r\n\r\n  insert[[\r\n    int a = 0;\r\n  ]]\r\n\r\n  exec_lua [[\r\n    vim.bo.filetype = 'c'\r\n    vim.treesitter.start()\r\n  ]]\r\nend)\r\n```",
            "created_at": "2023-07-19T20:03:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1642680919",
            "id": 1642680919,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5h6VJX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642680919/reactions"
            },
            "updated_at": "2023-07-19T20:03:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642680919",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wouldn't bother with a screen test and just use `exec_lua` with `pcall` and avoid using the highlighter. Look at `parser_spec.lua` on how to create a raw parser.",
            "created_at": "2023-08-16T14:31:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1680731155",
            "id": 1680731155,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5kLewT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680731155/reactions"
            },
            "updated_at": "2023-08-16T14:32:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680731155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Oh yeah, that's much better. Now all that's left is fixing multiline errors getting cut off (and so do quotes at the end of the string..?)",
            "created_at": "2023-08-16T17:05:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/24393#issuecomment-1680969386",
            "id": 1680969386,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
            "node_id": "IC_kwDOAPphoM5kMY6q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680969386/reactions"
            },
            "updated_at": "2023-08-16T17:05:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680969386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24393/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/24393/commits",
    "created_at": "2023-07-19T09:17:29Z",
    "diff_url": "https://github.com/neovim/neovim/pull/24393.diff",
    "draft": false,
    "head": {
        "label": "amaanq:query-error-msg",
        "ref": "query-error-msg",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/amaanq/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/amaanq/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/amaanq/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/amaanq/neovim/branches{/branch}",
            "clone_url": "https://github.com/amaanq/neovim.git",
            "collaborators_url": "https://api.github.com/repos/amaanq/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/amaanq/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/amaanq/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/amaanq/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/amaanq/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/amaanq/neovim/contributors",
            "created_at": "2023-01-10T08:27:55Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/amaanq/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/amaanq/neovim/downloads",
            "events_url": "https://api.github.com/repos/amaanq/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/amaanq/neovim/forks",
            "full_name": "amaanq/neovim",
            "git_commits_url": "https://api.github.com/repos/amaanq/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/amaanq/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/amaanq/neovim/git/tags{/sha}",
            "git_url": "git://github.com/amaanq/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/amaanq/neovim/hooks",
            "html_url": "https://github.com/amaanq/neovim",
            "id": 587216474,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/amaanq/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/amaanq/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/amaanq/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/amaanq/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/amaanq/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/amaanq/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/amaanq/neovim/merges",
            "milestones_url": "https://api.github.com/repos/amaanq/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIwA2Wg",
            "notifications_url": "https://api.github.com/repos/amaanq/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/amaanq/neovim/pulls{/number}",
            "pushed_at": "2023-08-16T19:56:23Z",
            "releases_url": "https://api.github.com/repos/amaanq/neovim/releases{/id}",
            "size": 242250,
            "ssh_url": "git@github.com:amaanq/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/amaanq/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/amaanq/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/amaanq/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/amaanq/neovim/subscription",
            "svn_url": "https://github.com/amaanq/neovim",
            "tags_url": "https://api.github.com/repos/amaanq/neovim/tags",
            "teams_url": "https://api.github.com/repos/amaanq/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/amaanq/neovim/git/trees{/sha}",
            "updated_at": "2023-01-10T08:30:35Z",
            "url": "https://api.github.com/repos/amaanq/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "01ea1dd999faf685aaa4844c9b88615382e7befe",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
            "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
            "followers_url": "https://api.github.com/users/amaanq/followers",
            "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
            "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/amaanq",
            "id": 29718261,
            "login": "amaanq",
            "node_id": "MDQ6VXNlcjI5NzE4MjYx",
            "organizations_url": "https://api.github.com/users/amaanq/orgs",
            "received_events_url": "https://api.github.com/users/amaanq/received_events",
            "repos_url": "https://api.github.com/users/amaanq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/amaanq"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/24393",
    "id": 1440661102,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24393",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "ab85eb4bb4b43d850817d9d478a92836097ab2c2",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 108,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 142,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-08-16T14:53:58Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5V3r5u",
    "number": 24393,
    "patch_url": "https://github.com/neovim/neovim/pull/24393.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/24393/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/01ea1dd999faf685aaa4844c9b88615382e7befe",
    "title": "feat(treesitter): improve query error message",
    "updated_at": "2023-08-16T19:56:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/24393",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
        "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
        "followers_url": "https://api.github.com/users/amaanq/followers",
        "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
        "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/amaanq",
        "id": 29718261,
        "login": "amaanq",
        "node_id": "MDQ6VXNlcjI5NzE4MjYx",
        "organizations_url": "https://api.github.com/users/amaanq/orgs",
        "received_events_url": "https://api.github.com/users/amaanq/received_events",
        "repos_url": "https://api.github.com/users/amaanq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/amaanq"
    }
}