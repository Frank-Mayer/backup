{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27443/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27443/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27443"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27443"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27443/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27443"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8f33e40212747d6cd3277a7ace3abdcec917afa8"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5201,
            "forks_count": 5201,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1728,
            "open_issues_count": 1728,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-02-12T23:38:13Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 252813,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 73720,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-02-13T01:34:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 73720,
            "watchers_count": 73720,
            "web_commit_signoff_required": false
        },
        "sha": "0185152802d4a84258a9a04c1d86a7e27d37d721",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Previously the LSP-Client object contained some fields that are also\nin the client config, but for a lot of other fields, the config was used\ndirectly making the two objects vaguely entangled with either not having\na clear role.\n\nNow the config object is treated purely as config (read-only) from the\nclient, and any fields the client needs from the config are now copied\nin as additional fields.\n\nThis means:\n- the config object is no longet normalised and is left as the user\n  provided it.\n- the client only reads the config on creation of the client and all\n  other implementations now read the clients version of the fields.\n\nIn addition, internal support for multiple callbacks has been added to\nthe client so the client tracking logic (done in lua.lsp) can be done\nmore robustly instead of wrapping the user callbacks which may error.\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27443#discussion_r1486446623"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27443"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486446623"
                }
            },
            "author_association": "MEMBER",
            "body": "I think settings might need to be a reference too, otherwise I suspect it could break configuration plugins.\r\nCurrently they can mutate the settings and call `client.notify('workspace/didChangeConfiguration')` to notify the server of a change. That depends on the `workspace_configuration` handler returning the same settings.\r\n\r\n",
            "commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "created_at": "2024-02-12T16:26:40Z",
            "diff_hunk": "@@ -227,51 +271,105 @@ local function process_client_config(config)\n     ),\n     'flags.debounce_text_changes must be a number with the debounce time in milliseconds'\n   )\n+end\n+\n+--- @param trace string\n+--- @return 'off'|'messages'|'verbose'\n+local function get_trace(trace)\n+  local valid_traces = {\n+    off = 'off',\n+    messages = 'messages',\n+    verbose = 'verbose',\n+  }\n+  return trace and valid_traces[trace] or 'off'\n+end\n \n-  if not config.name and type(config.cmd) == 'table' then\n-    config.name = config.cmd[1] and vim.fs.basename(config.cmd[1]) or nil\n+--- @generic T\n+--- @param t T\n+--- @return T\n+local function copy(t)\n+  return vim.deepcopy(t, false)\n+end\n+\n+--- @param id integer\n+--- @param config lsp.ClientConfig\n+--- @return string\n+local function get_name(id, config)\n+  local name = config.name\n+  if name then\n+    return name\n+  end\n+\n+  if type(config.cmd) == 'table' and config.cmd[1] then\n+    return assert(vim.fs.basename(config.cmd[1]))\n   end\n \n-  config.offset_encoding = validate_encoding(config.offset_encoding)\n-  config.flags = config.flags or {}\n-  config.settings = config.settings or {}\n-  config.handlers = config.handlers or {}\n+  return tostring(id)\n+end\n \n-  -- By default, get_language_id just returns the exact filetype it is passed.\n-  --    It is possible to pass in something that will calculate a different filetype,\n-  --    to be sent by the client.\n-  config.get_language_id = config.get_language_id or function(_, filetype)\n-    return filetype\n+--- @param workspace_folders lsp.WorkspaceFolder[]?\n+--- @param root_dir string?\n+--- @return lsp.WorkspaceFolder[]?\n+local function get_workspace_folders(workspace_folders, root_dir)\n+  if workspace_folders then\n+    return copy(workspace_folders)\n+  end\n+  if root_dir then\n+    return {\n+      {\n+        uri = vim.uri_from_fname(root_dir),\n+        name = string.format('%s', root_dir),\n+      },\n+    }\n   end\n+end\n \n-  config.capabilities = config.capabilities or lsp.protocol.make_client_capabilities()\n-  config.commands = config.commands or {}\n+--- @generic T\n+--- @param x elem_or_list<T>?\n+--- @return T[]\n+local function ensure_list(x)\n+  if type(x) == 'table' then\n+    return x\n+  end\n+  return { x }\n end\n \n --- @package\n --- @param config lsp.ClientConfig\n --- @return lsp.Client?\n-function Client.start(config)\n-  process_client_config(config)\n+function Client.create(config)\n+  validate_config(config)\n \n   client_index = client_index + 1\n   local id = client_index\n-\n-  local name = config.name or tostring(id)\n+  local name = get_name(id, config)\n \n   --- @class lsp.Client\n   local self = {\n     id = id,\n     config = config,\n-    handlers = config.handlers,\n-    offset_encoding = config.offset_encoding,\n+    handlers = copy(config.handlers or {}),\n+    offset_encoding = validate_encoding(config.offset_encoding),\n     name = name,\n     _log_prefix = string.format('LSP[%s]', name),\n     requests = {},\n     attached_buffers = {},\n     server_capabilities = {},\n-    dynamic_capabilities = vim.lsp._dynamic.new(id),\n-    commands = config.commands, -- Remove in Nvim 0.11\n+    dynamic_capabilities = lsp._dynamic.new(id),\n+    commands = copy(config.commands or {}),\n+    settings = copy(config.settings or {}),",
            "html_url": "https://github.com/neovim/neovim/pull/27443#discussion_r1486446623",
            "id": 1486446623,
            "line": 360,
            "node_id": "PRRC_kwDOAPphoM5YmWAf",
            "original_commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "original_line": 360,
            "original_position": 264,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 264,
            "pull_request_review_id": 1875662425,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27443",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486446623/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-12T16:28:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486446623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27443#discussion_r1486592438"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27443"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486592438"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      • {config} (table): Reference of the table that was passed by the user\r\n```",
            "commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "created_at": "2024-02-12T18:20:06Z",
            "diff_hunk": "@@ -763,19 +763,27 @@ client()                                                      *vim.lsp.client*\n         before text is sent to the server.\n       • {handlers} (table): The handlers used by the client as described in\n         |lsp-handler|.\n+      • {commands} (table): Table of command name to function which is called\n+        if any LSP action (code action, code lenses, ...) triggers the\n+        command. Client commands take precedence over the global command\n+        registry.\n       • {requests} (table): The current pending requests in flight to the\n         server. Entries are key-value pairs with the key being the request ID\n         while the value is a table with `type`, `bufnr`, and `method`\n         key-value pairs. `type` is either \"pending\" for an active request, or\n         \"cancel\" for a cancel request. It will be \"complete\" ephemerally while\n         executing |LspRequest| autocmds when replies are received from the\n         server.\n-      • {config} (table): copy of the table that was passed by the user to\n-        |vim.lsp.start_client()|.\n+      • {config} (table): reference of the table that was passed by the user",
            "html_url": "https://github.com/neovim/neovim/pull/27443#discussion_r1486592438",
            "id": 1486592438,
            "line": 777,
            "node_id": "PRRC_kwDOAPphoM5Ym5m2",
            "original_commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "original_line": 777,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 17,
            "pull_request_review_id": 1875901210,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27443",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486592438/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-12T18:27:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486592438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27443#discussion_r1486593186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27443"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486593186"
                }
            },
            "author_association": "MEMBER",
            "body": "Could we have a more specific type for `config`?",
            "commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "created_at": "2024-02-12T18:20:29Z",
            "diff_hunk": "@@ -763,19 +763,27 @@ client()                                                      *vim.lsp.client*\n         before text is sent to the server.\n       • {handlers} (table): The handlers used by the client as described in\n         |lsp-handler|.\n+      • {commands} (table): Table of command name to function which is called\n+        if any LSP action (code action, code lenses, ...) triggers the\n+        command. Client commands take precedence over the global command\n+        registry.\n       • {requests} (table): The current pending requests in flight to the\n         server. Entries are key-value pairs with the key being the request ID\n         while the value is a table with `type`, `bufnr`, and `method`\n         key-value pairs. `type` is either \"pending\" for an active request, or\n         \"cancel\" for a cancel request. It will be \"complete\" ephemerally while\n         executing |LspRequest| autocmds when replies are received from the\n         server.\n-      • {config} (table): copy of the table that was passed by the user to\n-        |vim.lsp.start_client()|.\n+      • {config} (table): reference of the table that was passed by the user",
            "html_url": "https://github.com/neovim/neovim/pull/27443#discussion_r1486593186",
            "id": 1486593186,
            "line": 777,
            "node_id": "PRRC_kwDOAPphoM5Ym5yi",
            "original_commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "original_line": 777,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 17,
            "pull_request_review_id": 1875901210,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27443",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486593186/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-12T18:27:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486593186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27443#discussion_r1486595281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27443"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486595281"
                }
            },
            "author_association": "MEMBER",
            "body": "An even nicer refactor would be making this a function and the offset an outer variable that's incremented by the utility function ;)",
            "commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "created_at": "2024-02-12T18:22:09Z",
            "diff_hunk": "@@ -143,6 +143,8 @@ local function for_each_buffer_client(bufnr, fn, restrict_client_ids)\n   end\n end\n \n+local client_errors_offset = table.maxn(lsp.rpc.client_errors)",
            "html_url": "https://github.com/neovim/neovim/pull/27443#discussion_r1486595281",
            "id": 1486595281,
            "line": 146,
            "node_id": "PRRC_kwDOAPphoM5Ym6TR",
            "original_commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "original_line": 146,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 4,
            "pull_request_review_id": 1875901210,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27443",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486595281/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-12T18:27:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486595281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27443#discussion_r1486598141"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27443"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486598141"
                }
            },
            "author_association": "MEMBER",
            "body": "Could we use `package` instead of `private` here to avoid the `diagnostic invisible` annotations?",
            "commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "created_at": "2024-02-12T18:25:04Z",
            "diff_hunk": "@@ -122,6 +149,12 @@ local validate = vim.validate\n --- Useful for buffer-local setup.\n --- @field on_attach fun(bufnr: integer)\n ---\n+--- @field private _before_init_cb? vim.lsp.client.before_init_cb\n+--- @field private _on_attach_cbs vim.lsp.client.on_attach_cb[]\n+--- @field private _on_init_cbs vim.lsp.client.on_init_cb[]",
            "html_url": "https://github.com/neovim/neovim/pull/27443#discussion_r1486598141",
            "id": 1486598141,
            "line": 154,
            "node_id": "PRRC_kwDOAPphoM5Ym6_9",
            "original_commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "original_line": 154,
            "original_position": 105,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 105,
            "pull_request_review_id": 1875901210,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27443",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486598141/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-12T18:27:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486598141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27443#discussion_r1486611838"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27443"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486611838"
                }
            },
            "author_association": "MEMBER",
            "body": "Strangely `package` has different semantics on non-methods and you still get diagnostics.",
            "commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "created_at": "2024-02-12T18:39:02Z",
            "diff_hunk": "@@ -122,6 +149,12 @@ local validate = vim.validate\n --- Useful for buffer-local setup.\n --- @field on_attach fun(bufnr: integer)\n ---\n+--- @field private _before_init_cb? vim.lsp.client.before_init_cb\n+--- @field private _on_attach_cbs vim.lsp.client.on_attach_cb[]\n+--- @field private _on_init_cbs vim.lsp.client.on_init_cb[]",
            "html_url": "https://github.com/neovim/neovim/pull/27443#discussion_r1486611838",
            "id": 1486611838,
            "in_reply_to_id": 1486598141,
            "line": 154,
            "node_id": "PRRC_kwDOAPphoM5Ym-V-",
            "original_commit_id": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
            "original_line": 154,
            "original_position": 105,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/client.lua",
            "position": 105,
            "pull_request_review_id": 1875934799,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27443",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486611838/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-12T18:39:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1486611838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27443/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27443/commits",
    "created_at": "2024-02-12T14:47:13Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27443.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:lspconfig",
        "ref": "lspconfig",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-02-12T14:51:29Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 247566,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8f33e40212747d6cd3277a7ace3abdcec917afa8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27443",
    "id": 1722082336,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27443",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "5af8f19620456fe7edbaed6b6573e4b14344a42a",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5mpOQg",
    "number": 27443,
    "patch_url": "https://github.com/neovim/neovim/pull/27443.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
            "events_url": "https://api.github.com/users/folke/events{/privacy}",
            "followers_url": "https://api.github.com/users/folke/followers",
            "following_url": "https://api.github.com/users/folke/following{/other_user}",
            "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/folke",
            "id": 292349,
            "login": "folke",
            "node_id": "MDQ6VXNlcjI5MjM0OQ==",
            "organizations_url": "https://api.github.com/users/folke/orgs",
            "received_events_url": "https://api.github.com/users/folke/received_events",
            "repos_url": "https://api.github.com/users/folke/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/folke"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27443/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8f33e40212747d6cd3277a7ace3abdcec917afa8",
    "title": "refactor(lsp): resolve the config-client entanglement",
    "updated_at": "2024-02-12T18:39:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27443",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}