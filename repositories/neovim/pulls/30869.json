{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30869/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30869/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30869"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30869"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30869/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30869"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/3678b44d6336097cbda3bac6229523f2e88f2684"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5657,
            "forks_count": 5657,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1801,
            "open_issues_count": 1801,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-10-22T01:05:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 290505,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 82684,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-10-22T02:10:43Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 82684,
            "watchers_count": 82684,
            "web_commit_signoff_required": false
        },
        "sha": "86832dcd1922eee37acc26310f72aa70def1514b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "# Problem\r\n\r\nCurrently, to calculate the final syntax highlighting for a given column in a line, `decor_redraw_col()` has to iterate through all `DecorRange`s, and combine their highlighting. This causes performance problems with long lines, since syntax highlighting uses ephemeral extmarks to specify highlighting ranges, and all extmarks are added before drawing a line and have to be iterated, even though most of them are very far away from the current column.\r\n\r\nAdditionally, since `DecorRange` have to be sorted by priority and insertion order, inserting a new `DecorRange` requires moving other `DecorRange`s around, which can also cause performance issues since `DecorRange` is quite big.  Also, `decor_redraw_col()` removes `DecorRange`s that end before the current column, which means all `DecorRange`s are moved to a different place in the list on every call.\r\n\r\n# Solution\r\n\r\nThis PR makes it so that `DecorRange`s don't have to be moved around when adding/deleting them. This is achieved with a second list that stores indices into the first list. Insertion order is stored in a field in `DecorRange`. \r\n \r\nThe indices list is divided into 2 parts. The first part stores indices to currently active ranges (which start before the current position and end after it). The second part stores indices to future ranges (which start after the current position).\r\n\r\nThe second part of the array is sorted by position instead of priority+insertion order. This makes it possible to only check a few `DecorRange`s on each column when making the ranges active. The first part is still sorted by priority+insertion order.\r\n\r\nLast, the space from a removed `DecorRange` is used to store an index to the next removed `DecorRange` in the list, so nothing has to move when removing a range from the middle of the array. New ranges are added in the holes from previously removed ranges.\r\n\r\n# Results\r\n\r\nThe measurements were done with `nvim-treesitter` highlighting:\r\n\r\n|Time, ms|Before|After|\r\n|-|-|-|\r\n|Redraw|411|1|\r\n|Adding extmarks|41|41|\r\n|Total|452|42|\r\n\r\nFile used for measurements:\r\n\r\n<details>\r\n\r\n<summary>file.json</summary>\r\n\r\n```json\r\n{\"a\":{\"a\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"b\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"c\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"d\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"e\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"f\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}}},\"b\":{\"a\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"b\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"c\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"d\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"e\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"f\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}}},\"c\":{\"a\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"b\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"c\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"d\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"e\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"f\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}}},\"d\":{\"a\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"b\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"c\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"d\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"e\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"f\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}}},\"e\":{\"a\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"b\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"c\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"d\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"e\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"f\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}}},\"f\":{\"a\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"b\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"c\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"d\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"e\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}},\"f\":{\"a\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"b\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"c\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"d\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"e\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}},\"f\":{\"a\":{},\"b\":{},\"c\":{},\"d\":{},\"e\":{},\"f\":{}}}}}\r\n```\r\n\r\n</details>\r\n\r\nCommand used to measure the total time:\r\n```lua\r\n=(function() local a = vim.uv.hrtime(); vim.cmd('redraw!'); local b = vim.uv.hrtime(); return (b - a) / 1000000 end)()\r\n```\r\n\r\n\"Adding marks\" row is the time taken by [`on_line_impl()`](https://github.com/neovim/neovim/blob/4833a63929a83c11379036ead33913711134015b/runtime/lua/vim/treesitter/highlighter.lua#L293) in highlighter.lua.\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30869#discussion_r1807541473"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30869"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1807541473"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n# include \"decoration.h.inline.generated.h\"\r\n#endif\r\n\r\ninline int decor_redraw_col(win_T *wp, int col, int win_col, bool hidden, DecorState *state)\r\n  FUNC_ATTR_ALWAYS_INLINE\r\n```",
            "commit_id": "3678b44d6336097cbda3bac6229523f2e88f2684",
            "created_at": "2024-10-20T00:33:31Z",
            "diff_hunk": "@@ -76,11 +91,22 @@ typedef struct {\n   bool running_decor_provider;\n } DecorState;\n \n-EXTERN DecorState decor_state INIT( = { 0 });\n+EXTERN DecorState decor_state INIT( = { .free_slot_i = -1 });\n // TODO(bfredl): These should maybe be per-buffer, so that all resources\n // associated with a buffer can be freed when the buffer is unloaded.\n EXTERN kvec_t(DecorSignHighlight) decor_items INIT( = KV_INITIAL_VALUE);\n \n #ifdef INCLUDE_GENERATED_DECLARATIONS\n # include \"decoration.h.generated.h\"\n #endif\n+\n+inline int decor_redraw_col(win_T *wp, int col, int win_col, bool hidden, DecorState *state)\n+  REAL_FATTR_ALWAYS_INLINE;\n+\n+inline int decor_redraw_col(win_T *wp, int col, int win_col, bool hidden, DecorState *state)",
            "html_url": "https://github.com/neovim/neovim/pull/30869#discussion_r1807541473",
            "id": 1807541473,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5rvOTh",
            "original_commit_id": "0cb0b3134084c8d3e38a793124726d877d72bac3",
            "original_line": 106,
            "original_position": 63,
            "original_start_line": 101,
            "path": "src/nvim/decoration.h",
            "position": null,
            "pull_request_review_id": 2379857074,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30869",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1807541473/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-20T00:33:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1807541473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30869#discussion_r1807560258"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30869"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1807560258"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  /// start after the current position and are sorted by starting position.\r\n```",
            "commit_id": "3678b44d6336097cbda3bac6229523f2e88f2684",
            "created_at": "2024-10-20T01:39:20Z",
            "diff_hunk": "@@ -57,9 +58,23 @@ typedef struct {\n   int draw_col;\n } DecorRange;\n \n+typedef union {\n+  DecorRange range;\n+  int next_free_i;\n+} DecorRangeSlot;\n+\n typedef struct {\n   MarkTreeIter itr[1];\n-  kvec_t(DecorRange) active;\n+  kvec_t(DecorRangeSlot) slots;\n+  kvec_t(int) ranges_i;\n+  /// Indices in [0; current_end) range of `ranges_i` point to ranges that start before the\n+  /// current position and are sorted by priority and order of insertion.\n+  int current_end;\n+  /// Indices in [future_begin, kv_size(ranges_i)) range of `ranges_i` point to ranges that\n+  /// Start after the current position and are sorted by starting position.",
            "html_url": "https://github.com/neovim/neovim/pull/30869#discussion_r1807560258",
            "id": 1807560258,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5rvS5C",
            "original_commit_id": "0cb0b3134084c8d3e38a793124726d877d72bac3",
            "original_line": 74,
            "original_position": 39,
            "original_start_line": null,
            "path": "src/nvim/decoration.h",
            "position": null,
            "pull_request_review_id": 2379899474,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30869",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1807560258/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-20T01:39:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1807560258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30869#discussion_r1808026288"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30869"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1808026288"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I made the function `static inline` because otherwise \"decoration.h.inline.generated.h\" is empty and linking fails with unresolved symbol error.",
            "commit_id": "3678b44d6336097cbda3bac6229523f2e88f2684",
            "created_at": "2024-10-21T02:27:51Z",
            "diff_hunk": "@@ -76,11 +91,22 @@ typedef struct {\n   bool running_decor_provider;\n } DecorState;\n \n-EXTERN DecorState decor_state INIT( = { 0 });\n+EXTERN DecorState decor_state INIT( = { .free_slot_i = -1 });\n // TODO(bfredl): These should maybe be per-buffer, so that all resources\n // associated with a buffer can be freed when the buffer is unloaded.\n EXTERN kvec_t(DecorSignHighlight) decor_items INIT( = KV_INITIAL_VALUE);\n \n #ifdef INCLUDE_GENERATED_DECLARATIONS\n # include \"decoration.h.generated.h\"\n #endif\n+\n+inline int decor_redraw_col(win_T *wp, int col, int win_col, bool hidden, DecorState *state)\n+  REAL_FATTR_ALWAYS_INLINE;\n+\n+inline int decor_redraw_col(win_T *wp, int col, int win_col, bool hidden, DecorState *state)",
            "html_url": "https://github.com/neovim/neovim/pull/30869#discussion_r1808026288",
            "id": 1808026288,
            "in_reply_to_id": 1807541473,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5rxEqw",
            "original_commit_id": "0cb0b3134084c8d3e38a793124726d877d72bac3",
            "original_line": 106,
            "original_position": 63,
            "original_start_line": 101,
            "path": "src/nvim/decoration.h",
            "position": null,
            "pull_request_review_id": 2380783191,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30869",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1808026288/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-21T02:27:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1808026288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "`draw_virt_text()` and `handle_inline_virtual_text()` now iterate only through active ranges. They don't check the range position to know if it's active, but they check for `draw_col` being a value other than -10, and it seems that all inactive ranges have `draw_col` == -10 and it is set to a different value only when the range becomes active:\r\nhttps://github.com/neovim/neovim/blob/4833a63929a83c11379036ead33913711134015b/src/nvim/decoration.c#L661-L664  ",
            "created_at": "2024-10-19T23:12:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/30869#issuecomment-2424279789",
            "id": 2424279789,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30869",
            "node_id": "IC_kwDOAPphoM6Qf5Lt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424279789/reactions"
            },
            "updated_at": "2024-10-19T23:12:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424279789",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The `test / ubuntu asan clang oldtest (pull_request)` failed likely because I took address of the first element of an empty array:\r\n```c\r\n#define kv_A(v, i) ((v).items[(i)])\r\n...\r\nDecorRangeSlot *const slots = &kv_A(state->slots, 0);\r\n```\r\n\r\nCan I directly access the `items` of the `kvect_t` structs?",
            "created_at": "2024-10-19T23:18:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/30869#issuecomment-2424281404",
            "id": 2424281404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30869",
            "node_id": "IC_kwDOAPphoM6Qf5k8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424281404/reactions"
            },
            "updated_at": "2024-10-19T23:20:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424281404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The `test / ubuntu asan clang oldtest (pull_request)` failed likely because I took address of the first element of an empty array:\r\n> \r\n> ```c\r\n> #define kv_A(v, i) ((v).items[(i)])\r\n> ...\r\n> DecorRangeSlot *const slots = &kv_A(state->slots, 0);\r\n> ```\r\n> \r\n> Can I directly access the `items` of the `kvect_t` structs?\r\n\r\n`items` of empty `kvec_t` is `NULL`",
            "created_at": "2024-10-19T23:31:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/30869#issuecomment-2424286465",
            "id": 2424286465,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30869",
            "node_id": "IC_kwDOAPphoM6Qf60B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424286465/reactions"
            },
            "updated_at": "2024-10-19T23:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424286465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > The `test / ubuntu asan clang oldtest (pull_request)` failed likely because I took address of the first element of an empty array:\r\n> > ```c\r\n> > #define kv_A(v, i) ((v).items[(i)])\r\n> > ...\r\n> > DecorRangeSlot *const slots = &kv_A(state->slots, 0);\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > Can I directly access the `items` of the `kvect_t` structs?\r\n> \r\n> `items` of empty `kvec_t` is `NULL`\r\n\r\nYes, but it reads nothing from the array if it is empty. \r\n\r\nI use the pointer to elements instead of accessing the elements through `kv_A()` all the time but getting the pointer through `&kv_A(state->slots, 0)` triggers asan.",
            "created_at": "2024-10-19T23:31:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/30869#issuecomment-2424286663",
            "id": 2424286663,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30869",
            "node_id": "IC_kwDOAPphoM6Qf63H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424286663/reactions"
            },
            "updated_at": "2024-10-19T23:35:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424286663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, but ASAN doesn't allow you to use `[0]` on a NULL pointer. You can assign `->items` to the pointer directly instead.",
            "created_at": "2024-10-19T23:35:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/30869#issuecomment-2424289496",
            "id": 2424289496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30869",
            "node_id": "IC_kwDOAPphoM6Qf7jY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424289496/reactions"
            },
            "updated_at": "2024-10-19T23:35:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2424289496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If you have benchmark code available, you may want to add it somewhere in `test/benchmark/`.\r\n\r\nPlease add a sentence in `:help news-features`, there is currently a lonely \"Performance\" section there :) Something like `Reduced redraw time by 400x when ...` is something users love to see.",
            "created_at": "2024-10-20T22:41:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/30869#issuecomment-2425266718",
            "id": 2425266718,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30869",
            "node_id": "IC_kwDOAPphoM6QjqIe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425266718/reactions"
            },
            "updated_at": "2024-10-20T22:42:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425266718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I added the benchmarks and news.\r\n\r\n![image](https://github.com/user-attachments/assets/eaf7ffc3-3fae-4c71-9032-882fd25fc314)\r\n![image](https://github.com/user-attachments/assets/91d214f3-a312-4d41-b57b-1e9856bcb48a)\r\n\r\nBenchmarks stress-test the code (decor ranges intersect and are out of order). ",
            "created_at": "2024-10-21T02:26:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/30869#issuecomment-2425427862",
            "id": 2425427862,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30869",
            "node_id": "IC_kwDOAPphoM6QkReW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425427862/reactions"
            },
            "updated_at": "2024-10-21T02:40:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2425427862",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30869/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30869/commits",
    "created_at": "2024-10-19T23:01:02Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30869.diff",
    "draft": false,
    "head": {
        "label": "vanaigr:decor_long_lines_perf",
        "ref": "decor_long_lines_perf",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/vanaigr/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/vanaigr/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/vanaigr/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/vanaigr/neovim/branches{/branch}",
            "clone_url": "https://github.com/vanaigr/neovim.git",
            "collaborators_url": "https://api.github.com/repos/vanaigr/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/vanaigr/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/vanaigr/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/vanaigr/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/vanaigr/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/vanaigr/neovim/contributors",
            "created_at": "2023-12-05T22:08:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/vanaigr/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/vanaigr/neovim/downloads",
            "events_url": "https://api.github.com/repos/vanaigr/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/vanaigr/neovim/forks",
            "full_name": "vanaigr/neovim",
            "git_commits_url": "https://api.github.com/repos/vanaigr/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/vanaigr/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/vanaigr/neovim/git/tags{/sha}",
            "git_url": "git://github.com/vanaigr/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/vanaigr/neovim/hooks",
            "html_url": "https://github.com/vanaigr/neovim",
            "id": 727936921,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/vanaigr/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/vanaigr/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/vanaigr/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/vanaigr/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/vanaigr/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/vanaigr/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/vanaigr/neovim/merges",
            "milestones_url": "https://api.github.com/repos/vanaigr/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK2NvmQ",
            "notifications_url": "https://api.github.com/repos/vanaigr/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/vanaigr/neovim/pulls{/number}",
            "pushed_at": "2024-10-21T05:27:32Z",
            "releases_url": "https://api.github.com/repos/vanaigr/neovim/releases{/id}",
            "size": 282861,
            "ssh_url": "git@github.com:vanaigr/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/vanaigr/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/vanaigr/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/vanaigr/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/vanaigr/neovim/subscription",
            "svn_url": "https://github.com/vanaigr/neovim",
            "tags_url": "https://api.github.com/repos/vanaigr/neovim/tags",
            "teams_url": "https://api.github.com/repos/vanaigr/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/vanaigr/neovim/git/trees{/sha}",
            "updated_at": "2024-10-21T01:20:19Z",
            "url": "https://api.github.com/repos/vanaigr/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "3678b44d6336097cbda3bac6229523f2e88f2684",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
            "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
            "followers_url": "https://api.github.com/users/vanaigr/followers",
            "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/vanaigr",
            "id": 65824523,
            "login": "vanaigr",
            "node_id": "MDQ6VXNlcjY1ODI0NTIz",
            "organizations_url": "https://api.github.com/users/vanaigr/orgs",
            "received_events_url": "https://api.github.com/users/vanaigr/received_events",
            "repos_url": "https://api.github.com/users/vanaigr/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/vanaigr",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30869",
    "id": 2133978386,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30869",
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "marks, extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "marks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/marks"
        }
    ],
    "locked": false,
    "merge_commit_sha": "f4ce494c091de6104b10f5e8764c2fc165c33503",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5_Me0S",
    "number": 30869,
    "patch_url": "https://github.com/neovim/neovim/pull/30869.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30869/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/3678b44d6336097cbda3bac6229523f2e88f2684",
    "title": "perf(decor): improve performance for long lines",
    "updated_at": "2024-10-21T08:26:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30869",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
        "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vanaigr/followers",
        "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vanaigr",
        "id": 65824523,
        "login": "vanaigr",
        "node_id": "MDQ6VXNlcjY1ODI0NTIz",
        "organizations_url": "https://api.github.com/users/vanaigr/orgs",
        "received_events_url": "https://api.github.com/users/vanaigr/received_events",
        "repos_url": "https://api.github.com/users/vanaigr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vanaigr",
        "user_view_type": "public"
    }
}