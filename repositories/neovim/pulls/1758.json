{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/1758/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1758/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/1758"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/1758"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1758/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/1758"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/86cbeeb6c01933d481dde4ef04dd5b273f874578"
        }
    },
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        }
    ],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5214,
            "forks_count": 5214,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1707,
            "open_issues_count": 1707,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-01T16:10:43Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 264055,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 75685,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-02T01:12:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 75685,
            "watchers_count": 75685,
            "web_commit_signoff_required": false
        },
        "sha": "925c153f86908a601a19d0142d8c601cf35df88a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": null,
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1758#discussion_r22341402"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341402"
                }
            },
            "author_association": "MEMBER",
            "body": "We migrated away from gettimeofday in https://github.com/neovim/neovim/pull/975. We provide `os_hrtime()` instead:\n\nhttps://github.com/aktau/neovim/commit/fb5a786bdb5b7b52b9c36b3eb8b6d2cc002aa8f3#diff-1a32cc1056b083197e9462b926958276R3954\n",
            "commit_id": "86cbeeb6c01933d481dde4ef04dd5b273f874578",
            "created_at": "2014-12-30T08:10:48Z",
            "diff_hunk": "@@ -563,6 +567,34 @@ Array vim_get_api_info(uint64_t channel_id)\n   return rv;\n }\n \n+/// RPC Clients need a way to find out whether a connected neovim instance is\n+/// the same as before (so that eg. Buffer IDs can be reused), or whether it's\n+/// a different one.\n+///\n+/// Returns a string that uniquely identifies this instance.\n+String vim_get_instance_id(void)\n+{\n+  static char result[65] = { 0 };\n+  struct timeval tv;\n+\n+  if (! result[0]) {\n+\tgettimeofday(&tv, NULL);",
            "html_url": "https://github.com/neovim/neovim/pull/1758#discussion_r22341402",
            "id": 22341402,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzQxNDAy",
            "original_commit_id": "b0f0d3b40c9de9aec07463ebd5b47e71c9aeb300",
            "original_line": null,
            "original_position": 36,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341402/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2018-08-23T20:39:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1758#discussion_r22341534"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341534"
                }
            },
            "author_association": "NONE",
            "body": "Okay, thanks for the feedback.\n\nShould I use `\"%LX\"` or `\"%\" PRIx64` (from `stdint.h`) as format code?\n",
            "commit_id": "86cbeeb6c01933d481dde4ef04dd5b273f874578",
            "created_at": "2014-12-30T08:17:53Z",
            "diff_hunk": "@@ -563,6 +567,34 @@ Array vim_get_api_info(uint64_t channel_id)\n   return rv;\n }\n \n+/// RPC Clients need a way to find out whether a connected neovim instance is\n+/// the same as before (so that eg. Buffer IDs can be reused), or whether it's\n+/// a different one.\n+///\n+/// Returns a string that uniquely identifies this instance.\n+String vim_get_instance_id(void)\n+{\n+  static char result[65] = { 0 };\n+  struct timeval tv;\n+\n+  if (! result[0]) {\n+\tgettimeofday(&tv, NULL);",
            "html_url": "https://github.com/neovim/neovim/pull/1758#discussion_r22341534",
            "id": 22341534,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzQxNTM0",
            "original_commit_id": "b0f0d3b40c9de9aec07463ebd5b47e71c9aeb300",
            "original_line": null,
            "original_position": 36,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341534/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2018-08-23T20:39:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341534",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1758#discussion_r22341578"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341578"
                }
            },
            "author_association": "MEMBER",
            "body": "PRIx64\n",
            "commit_id": "86cbeeb6c01933d481dde4ef04dd5b273f874578",
            "created_at": "2014-12-30T08:21:24Z",
            "diff_hunk": "@@ -563,6 +567,34 @@ Array vim_get_api_info(uint64_t channel_id)\n   return rv;\n }\n \n+/// RPC Clients need a way to find out whether a connected neovim instance is\n+/// the same as before (so that eg. Buffer IDs can be reused), or whether it's\n+/// a different one.\n+///\n+/// Returns a string that uniquely identifies this instance.\n+String vim_get_instance_id(void)\n+{\n+  static char result[65] = { 0 };\n+  struct timeval tv;\n+\n+  if (! result[0]) {\n+\tgettimeofday(&tv, NULL);",
            "html_url": "https://github.com/neovim/neovim/pull/1758#discussion_r22341578",
            "id": 22341578,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzQxNTc4",
            "original_commit_id": "b0f0d3b40c9de9aec07463ebd5b47e71c9aeb300",
            "original_line": null,
            "original_position": 36,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341578/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2018-08-23T20:39:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/22341578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1758#discussion_r30766375"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/30766375"
                }
            },
            "author_association": "MEMBER",
            "body": "This should use `os_get_pid()`\n",
            "commit_id": "86cbeeb6c01933d481dde4ef04dd5b273f874578",
            "created_at": "2015-05-21T01:32:22Z",
            "diff_hunk": "@@ -568,6 +570,32 @@ Array vim_get_api_info(uint64_t channel_id)\n   return rv;\n }\n \n+/// RPC Clients need a way to find out whether a connected neovim instance is\n+/// the same as before (so that eg. Buffer IDs can be reused), or whether it's\n+/// a different one.\n+///\n+/// Returns a string that uniquely identifies this instance.\n+String vim_get_instance_id(void)\n+{\n+  static char result[65] = { 0 };\n+\n+  if (!result[0]) {\n+    /* TODO: add the hostname, or use a UUID instead? */\n+    snprintf(result, sizeof(result)-1, \"%\" PRIx64 \".%d.%X\",\n+        os_hrtime(), getpid(), rand()); // NOLINT(runtime/threadsafe_fn)",
            "html_url": "https://github.com/neovim/neovim/pull/1758#discussion_r30766375",
            "id": 30766375,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzY2Mzc1",
            "original_commit_id": "2eab9d39d39e9f2eb5e88320872a5a8f8a95960a",
            "original_line": null,
            "original_position": 25,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/30766375/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2018-08-23T20:39:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/30766375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1758#discussion_r210193825"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/210193825"
                }
            },
            "author_association": "MEMBER",
            "body": "rename to `nvim_get_instance_id` to comply with `:help dev-api` guidelines.\r\n\r\nAlso mark it as \"async\" and note the API level where it was introduced:\r\n\r\n```c\r\nString nvim_get_instance_id(void)\r\n  FUNC_API_SINCE(5) FUNC_API_ASYNC\r\n```",
            "commit_id": "86cbeeb6c01933d481dde4ef04dd5b273f874578",
            "created_at": "2018-08-15T07:49:59Z",
            "diff_hunk": "@@ -805,6 +807,32 @@ Array nvim_get_api_info(uint64_t channel_id)\n   return rv;\n }\n \n+/// RPC Clients need a way to find out whether a connected neovim instance is\n+/// the same as before (so that eg. Buffer IDs can be reused), or whether it's\n+/// a different one.\n+///\n+/// Returns a string that uniquely identifies this instance.\n+String vim_get_instance_id(void)",
            "html_url": "https://github.com/neovim/neovim/pull/1758#discussion_r210193825",
            "id": 210193825,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5MzgyNQ==",
            "original_commit_id": "0280ba42a6ebb2d55d9fb03f490e7e73e0d6344e",
            "original_line": 815,
            "original_position": 18,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": 146356739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/210193825/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2018-08-23T20:39:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/210193825",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/1758#discussion_r210194676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/1758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/210194676"
                }
            },
            "author_association": "MEMBER",
            "body": "FWIW, `os_get_hostname` works on Windows now. But I think we probably don't need it, it's better to keep this instance-id defined by elements that are not controlled by the user.",
            "commit_id": "86cbeeb6c01933d481dde4ef04dd5b273f874578",
            "created_at": "2018-08-15T07:54:22Z",
            "diff_hunk": "@@ -805,6 +807,32 @@ Array nvim_get_api_info(uint64_t channel_id)\n   return rv;\n }\n \n+/// RPC Clients need a way to find out whether a connected neovim instance is\n+/// the same as before (so that eg. Buffer IDs can be reused), or whether it's\n+/// a different one.\n+///\n+/// Returns a string that uniquely identifies this instance.\n+String vim_get_instance_id(void)\n+{\n+  static char result[65] = { 0 };\n+\n+  if (!result[0]) {\n+    /* TODO: add the hostname, or use a UUID instead? */",
            "html_url": "https://github.com/neovim/neovim/pull/1758#discussion_r210194676",
            "id": 210194676,
            "line": 1008,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5NDY3Ng==",
            "original_commit_id": "0280ba42a6ebb2d55d9fb03f490e7e73e0d6344e",
            "original_line": 1008,
            "original_position": 23,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": 24,
            "pull_request_review_id": 146357731,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/1758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/210194676/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2018-08-23T20:39:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/210194676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Seems useful. Are you aware of ~~https://github.com/neovim/neovim/pull/1302/~~ #2331 which is related? That PR keeps a list of all sever addresses, which possibly may provide the unique id you are looking for in this PR. I am not sure if it is possible for a server to switch to a new address (thus confusing clients for your purposes here), but I assume it would be rare.\r\n",
            "created_at": "2014-12-30T08:16:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68338125",
            "id": 68338125,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzM4MTI1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68338125/reactions"
            },
            "updated_at": "2018-08-15T08:01:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68338125",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Seems useful. Are you aware of\n> https://github.com/neovim/neovim/pull/1302/files which is not yet\n> merged, but related? That PR keeps a list of all sever addresses,\n> No, I wasn't.\n> \n> which possibly may provide the unique id you are looking for in this\n> PR. I am not sure if it is possible for a server to switch to a new\n> address (thus confusing clients for your purposes here), but I assume\n> it would be rare.\n> Hmmm, I'm not sure that using any kind of server address is really \n> useful.\n\nIf I connect once via TCP and once via a UNIX socket, I should still be \nable to find out that both \"instances\" are really the same, right?\n",
            "created_at": "2014-12-30T08:20:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68338308",
            "id": 68338308,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzM4MzA4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68338308/reactions"
            },
            "updated_at": "2014-12-30T08:20:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68338308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If I connect once via TCP and once via a UNIX socket, I should still be able to find out that both \"instances\" are really the same, right?\n\nYes.\n",
            "created_at": "2014-12-30T08:22:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68338373",
            "id": 68338373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzM4Mzcz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68338373/reactions"
            },
            "updated_at": "2014-12-30T08:22:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68338373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here's a new version, using `PRIx64` and `os_hrtime()`.\n",
            "created_at": "2014-12-30T08:24:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68338487",
            "id": 68338487,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzM4NDg3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68338487/reactions"
            },
            "updated_at": "2014-12-30T08:24:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68338487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Cheers, two cents\n\nWe cant generically use the msgpack type STR in all returned values yet - because we cannot guarantee the encoding of the strings (e.g previously in #1130). We can and should use STR in cases we are sure the returned string uses &encoding - but we don't have many of those. In a nutshell this is a fundamental problem (I'm generalising, in some cases it is a feature) with Vim.\n\nAs for the `vim_get_instance_id` function, do we really need to do this in C? Or inside Neovim? This seems like a problem the client can solve on its own. The connecting client could place a _canary value_ inside a global variable using `set_var` or use `vim_eval` to do something similar to the function above.\n",
            "created_at": "2014-12-30T09:15:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68340990",
            "id": 68340990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzQwOTkw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68340990/reactions"
            },
            "updated_at": "2018-08-15T08:02:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68340990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "> We cant generically use the msgpack type STR in all returned values yet - because we cannot guarantee the encoding of the strings (e.g previously in #1130)\n\nHmmm, the cases I looked at were error messages from NVIM ... these are fairly safe, but I see your point.\n\nSo, the encoding (including `binary` or so) has to be known on the other side - which should be possible, as reading a \"line\" from a buffer can be associated to the buffer's encoding, right?\n\n> As for the vim_get_instance_id function, do we really need to do this in C? Or inside Neovim? This seems like a problem the client can solve on its own. The connecting client could place a canary value inside a global variable using set_var or use vim_eval to do something similar to the function above.\n\nYes, such a thing is possible too, of course. But would you _want_ _to_ have each RPC client use its own global variable for that? Isn't it much cleaner to provide a single, globally useful, version of that?\n",
            "created_at": "2014-12-30T09:22:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68341286",
            "id": 68341286,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzQxMjg2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68341286/reactions"
            },
            "updated_at": "2018-08-15T08:03:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68341286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "NONE",
            "body": "I hope to have fixed the CI whitespace remarks...\n",
            "created_at": "2014-12-30T09:27:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68341520",
            "id": 68341520,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzQxNTIw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68341520/reactions"
            },
            "updated_at": "2018-08-15T08:03:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68341520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So, the encoding (including binary or so) has to be known on the other side - which should be possible, as reading a \"line\" from a buffer can be associated to the buffer's encoding, right?\n\nUnfortunately no. The buffer expected encoding may be utf8, but the data might actually be any binary sequence - the same is also true for buffer names and lots of other strings inside Vim. E.g. if the error message uses the file name, what is the encoding? I think the one exception to this is the UI where invalid sequences are replaced with (?) or an hex code. \n\nYou can easilly test this by using `set_var` with an invalid string value (e.g. 0xfffe is invalid utf8) and then calling `get_var`.\n\n> Yes, such a thing is possible too, of course. But would you want to have each RPC client use its own global variable for that?\n\nTrue, but it feels like a corner case that only some clients will use.\n\nI still think it could be done in VimL as `sha256(localtime().getpid())`. I know I'm missing the random number, but reliable random number generation is a problem on its own. As you pointed out in the comment an UUID would be ideal.\n\nSidenote: Wont the unseeded `rand()` produce the same value every time? The only place in Neovim where `srand` is called is in `sha2_seed` which seems unused ATM (and can probably be removed #839).\n",
            "created_at": "2014-12-30T10:01:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68343516",
            "id": 68343516,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzQzNTE2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68343516/reactions"
            },
            "updated_at": "2014-12-30T10:01:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68343516",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As for the vim_get_instance_id function, do we really need to do this in C? Or inside Neovim? This seems like a problem the client can solve on its own. The connecting client could place a canary value inside a global variable using set_var or use vim_eval to do something similar to the function above.\n\nThat might cause a race condition where client A and B connect to the same nvim instance, A and B check the variable and see that it does not exist, then A and B both try to set it. I think `get_instance_id` is a much cleaner solution.\n",
            "created_at": "2014-12-31T18:45:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68461151",
            "id": 68461151,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDYxMTUx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68461151/reactions"
            },
            "updated_at": "2014-12-31T18:45:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68461151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "NONE",
            "body": "New version, fixed the comment line length and removed the bad chunk (misaligned ).\n",
            "created_at": "2015-01-01T10:13:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-68483660",
            "id": 68483660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDgzNjYw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68483660/reactions"
            },
            "updated_at": "2015-01-01T10:13:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68483660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The build failed because of a lint warning:\n\n```\n/home/travis/build/neovim/neovim/src/nvim/api/vim.c:580:  Consider using rand_r(...) instead of rand(...) for improved thread safety.  [runtime/threadsafe_fn] [2]\n```\n",
            "created_at": "2015-01-08T15:31:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69195268",
            "id": 69195268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTk1MjY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69195268/reactions"
            },
            "updated_at": "2018-08-15T08:04:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69195268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "See [sha256.c](https://github.com/neovim/neovim/blob/master/src/nvim/sha256.c#L369-L373) for an example of using rand_r.\n",
            "created_at": "2015-01-08T15:35:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69195875",
            "id": 69195875,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTk1ODc1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69195875/reactions"
            },
            "updated_at": "2015-01-08T15:35:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69195875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "I saw the lint warnings from Jenkins already.\n\nBut, IMO, having to do a _new_ random state that's either\n- seeded more insecurely (like here from `os_hrtime`), or\n- securely but wasteful (from `/dev/[u]random`, wasting precious entropy)\n\nis a bad idea. Why not simply re-use the one already existing random state? IIUC neovim is single-threaded anyway, so I believe that the warning should be disabled; and even if neovim was multithreaded, the worst thing that would happen is that the exact sequence of random number isn't reproducible anymore, which would only matter for very few tests, if any. (And these could, and should, run `srand()` just before calling the function to be tested.)\n\nSo yeah, I can fix that to remove the warning - but I think it's the warning that should go, not `rand()`.\n",
            "created_at": "2015-01-08T15:59:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69200094",
            "id": 69200094,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjAwMDk0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69200094/reactions"
            },
            "updated_at": "2015-01-08T15:59:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69200094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I did not think security was a goal of this feature. Why would it need to be secure?\n",
            "created_at": "2015-01-08T16:16:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69202918",
            "id": 69202918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjAyOTE4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69202918/reactions"
            },
            "updated_at": "2018-08-15T08:04:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69202918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "FWIW, if you want to suppress the warning, you can add a comment [like this](https://github.com/fwalch/neovim/blob/53151896ed0bab01bc38b993a8cdd5ef5e878dfd/src/nvim/os/users.c#L55).\n\n_Edit:_ Noticed that `rand_r` is deprecated in POSIX 2008. From http://pubs.opengroup.org/onlinepubs/9699919799/functions/rand.html:\n\n> The  [drand48](http://pubs.opengroup.org/onlinepubs/9699919799/functions/drand48.html) function provides a much more elaborate random number generator.\n> \n> The limitations on the amount of state that can be carried between one function call and another mean the rand_r() function can never be implemented in a way which satisfies all of the requirements on a pseudo-random number generator. Therefore this function should be avoided whenever non-trivial requirements (including safety) have to be fulfilled.\n",
            "created_at": "2015-01-08T16:37:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69206535",
            "id": 69206535,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjA2NTM1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69206535/reactions"
            },
            "updated_at": "2015-01-08T17:16:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69206535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@phmarek I agree, that lint is a bit too pedantic - basically thread safety for the sake of it, and rand_r does not ensure thread safety, only that it is reentrant. Besides while rand_r is POSIX it does exist in Windows (rand() is thread safe there).\n\nI would either ignore the warning, or wrap calls to rand_r in a new function os_rand() that keeps the seedp state.\n",
            "created_at": "2015-01-08T17:10:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69212292",
            "id": 69212292,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjEyMjky",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69212292/reactions"
            },
            "updated_at": "2015-01-08T17:10:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69212292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Good points. We should probably have os_rand anyways....\n",
            "created_at": "2015-01-08T18:11:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69222222",
            "id": 69222222,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjIyMjIy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69222222/reactions"
            },
            "updated_at": "2015-01-08T18:11:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69222222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@fwalch see above, `rand_r()` is deprecated - so the lint warning should be disabled, and the code as-is is okay, right?\n\nWill push with lint comment, though.\n",
            "created_at": "2015-01-08T18:13:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69222568",
            "id": 69222568,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjIyNTY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69222568/reactions"
            },
            "updated_at": "2015-01-08T18:13:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69222568",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Maybe even modify the lint script? If `rand_r` is deprecated, the script shouldn't encourage its use.\n",
            "created_at": "2015-01-09T08:03:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-69304390",
            "id": 69304390,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzA0Mzkw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69304390/reactions"
            },
            "updated_at": "2015-01-09T08:03:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/69304390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, how about merging? the `rand_r` hint is bad, so no problem remains, right?\n",
            "created_at": "2015-02-03T14:31:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72659454",
            "id": 72659454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjU5NDU0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72659454/reactions"
            },
            "updated_at": "2015-02-03T14:31:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72659454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What about the str encoding?\n",
            "created_at": "2015-02-03T15:18:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72667975",
            "id": 72667975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjY3OTc1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72667975/reactions"
            },
            "updated_at": "2015-02-03T15:18:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72667975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ah yes, right. Forgot about that one.\nStill, sending error messages as byte-stream just because a filename (or other part) might not be valid UTF-8 sounds wrong to me.\nHow about just sending a format string (eg. `The file %(filename)s couldn't be read: error %(errno)d, %(errstring)s.` and a _list_ of arguments?\n\nA bytes stream can _never_ be displayed directly; this error message can, after \"simple\" sanitizing the argument array.\n",
            "created_at": "2015-02-03T15:27:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72669744",
            "id": 72669744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjY5NzQ0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72669744/reactions"
            },
            "updated_at": "2015-02-03T15:27:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72669744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "NONE",
            "body": "And, BTW, this would allowing to localize the error message in the plugin (which might run in a different process, on a different system, in a different locale), which is nice too.\n",
            "created_at": "2015-02-03T15:28:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72669908",
            "id": 72669908,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjY5OTA4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72669908/reactions"
            },
            "updated_at": "2015-02-03T15:28:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72669908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Now that I look at it where msgpack_rpc_error being used?\n",
            "created_at": "2015-02-03T15:35:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72671244",
            "id": 72671244,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjcxMjQ0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72671244/reactions"
            },
            "updated_at": "2015-02-03T15:35:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72671244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In any case `msgpack_rpc_from_string()` as STR is probably out.\n\n> Still, sending error messages as byte-stream just because a filename (or other part) might not be valid UTF-8 sounds wrong to me.\n\nIn principle I agree. Problem is, what is the encoding for the message? If the message is part of the Neovim C code, it is probably in utf8 - but what if the user changed &encoding to something else? Then we would need 3 \"string\" types\n- Binary (BIN)\n- UTF8 (for Strings from source)\n- String(&encoding)\n",
            "created_at": "2015-02-03T15:47:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72673781",
            "id": 72673781,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjczNzgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72673781/reactions"
            },
            "updated_at": "2015-02-03T15:47:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72673781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "No. I'd define the RPC layer to be UTF-8 (error messages) resp. binary where needed.\n\nIt would be really nice if `nvim` determines whether any given piece of user data (file \"lines\", filenames, etc.) is a valid UTF8 sequence, and then decides on strings|binary.\n\nNote: only check whether it's _valid_ UTF8; UTF8 sequences are always valid latin-1, too... so while we cannot know the correct encoding anyway (filenames on disk can have been stored as utf8, latin-15, or anything else), so the only thing to check for IMO is the promise \"string type always contains valid utf8\".\n\nThat's practical, convinient (most of the time), and easy to implement.\n",
            "created_at": "2015-02-04T07:37:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72803748",
            "id": 72803748,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyODAzNzQ4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72803748/reactions"
            },
            "updated_at": "2015-02-04T07:37:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72803748",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "NONE",
            "body": "To summarize: Always sending binary data just because the locale, encoding, and data _might_ not match is too inconvinient for the RPC user... \"binary\" might need some checks and conversions to be printable, and eg. for the error messages it's simply not needed.\n",
            "created_at": "2015-02-04T07:39:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72803983",
            "id": 72803983,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyODAzOTgz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72803983/reactions"
            },
            "updated_at": "2015-02-04T07:39:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72803983",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> No. I'd define the RPC layer to be UTF-8 (error messages) resp. binary where needed.\n\nI'm not disagreeing with you here. In fact this is how the python-client behaves for Python3, because function names and errors must be unicode in Python3. And they must because &encoding is only available afterwards. My lisf of action points for the error message case would be\n1. `msgpack_rpc_from_string` is currently used for both cases (error messages, map key names, Vim strings, etc) might as well leave that function unchanged for now - i.e. the majority of the cases are still BIN\n2. `msgpack_rpc_error` is not used as far as I can tell, msgpack_rpc_from_string is being used for the error message (in _serialize_response) - delete the function?\n3. If we were to change the type for the error msg `msgpack_serialize_response()` is probably the best spot\n4. like you said we can coerce (how?) a string into being utf8 printable (as part of 3.)\n\nSlightly related: it is not clear from the msgpack-rpc spec if method names are STR or BIN - by looking at the python implementation they accept either (and so does Neovim) but when sending a request we serialize as BIN - I would have to think a bit further about this case, because the method name can come from rpcrequest(i.e. &encoding is in effect) but who knows what is on the remote end.\n\n> It would be really nice if nvim determines whether any given piece of user data (file \"lines\", filenames, etc.) is a valid UTF8 sequence, and then decides on strings|binary.\n\nIt would, but I would definitely leave that for a different PR. At least for the GUI I (where data is already coerced into being printable) I think this is essential.\n\nslight ping @tarruda\n",
            "created_at": "2015-02-04T10:27:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72832184",
            "id": 72832184,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyODMyMTg0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72832184/reactions"
            },
            "updated_at": "2015-02-04T10:27:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72832184",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> No. I'd define the RPC layer to be UTF-8 (error messages) resp. binary where needed.\n> \n> It would be really nice if nvim determines whether any given piece of user data (file \"lines\", filenames, etc.) is a valid UTF8 sequence, and then decides on strings|binary.\n> \n> Note: only check whether it's valid UTF8; UTF8 sequences are always valid latin-1, too... so while we cannot know the correct encoding anyway (filenames on disk can have been stored as utf8, latin-15, or anything else), so the only thing to check for IMO is the promise \"string type always contains valid utf8\".\n> \n> That's practical, convinient (most of the time), and easy to implement.\n\nIn msgpack the \"string type\" is merely advisory, there's absolutely no difference from the binary type except that it is claiming the contents to be utf-8, which we simply cannot do without parsing the contents ourselves.\n\n> To summarize: Always sending binary data just because the locale, encoding, and data might not match is too inconvinient for the RPC user... \"binary\" might need some checks and conversions to be printable, and eg. for the error messages it's simply not needed.\n\nSo your suggestion is to add a permanent overhead of scanning all returned strings to check if they are valid utf-8 just to make things a little simpler for RPC clients need to print strings? That doesn't seem very wise to me. \n\nRemember that the only advantage of annotating strings with the utf-8 type is that the client msgpack deserializer _may_ perform automatic decoding into the platform unicode type. The most flexible approach is the current one: return raw binary strings and let clients handle failed decoding.\n\nThe only exception is error messages and method names in the metadata object, those are always utf-8 so we can safely change their type.\n",
            "created_at": "2015-02-04T18:35:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-72911224",
            "id": 72911224,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTExMjI0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72911224/reactions"
            },
            "updated_at": "2015-02-04T18:35:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/72911224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "NONE",
            "body": "> In msgpack the \"string type\" is merely advisory, there's absolutely no\n> difference from the binary type except that it is claiming the\n> contents to be utf-8, which we simply cannot do without parsing the\n> contents ourselves.\n> Things we _know_ are UTF8 should be sent that way - like error message \n> templates, these can even be _defined_ to be always UTF8.\n> Why should the clients have to find out which encoding an error message \n> is in?\n> \n> > To summarize: Always sending binary data just because the locale,\n> > encoding, and data might not match is too inconvinient for the RPC user...\n> > \"binary\" might need some checks and conversions to be printable, and eg.\n> > for the error messages it's simply not needed.\n> > So your suggestion is to add a permanent overhead of scanning all\n> > returned strings to check if they are valid utf-8 just to make things\n> > a little simpler for RPC clients need to print strings? That doesn't\n> > seem very wise to me.\n> > No - not permanent scanning. Once, at most.\n> > Eg. filenames, buffer names, etc. can be checked once - and are fine \n> > then.\n\nWhy should we burden _all_ consumers with something that can be done \n_once_?\n\n> Remember that the only advantage of annotating strings with the utf-8\n> type is that the client msgpack deserializer _may_ perform automatic\n> decoding into the platform unicode type.\n> Yeah, that's a good reason to mark as string, right?\n> \n> The most flexible approach is\n> the current one: return raw binary strings and let clients handle\n> failed decoding.\n> That's the easiest one for the sender side - pushing some data, and \n> letting\n> the consumer figure it out.\n> \n> The only exception is error messages and method names in the metadata\n> object, those are always utf-8 so we can safely change their type.\n> Right, that's one improvement at least.\n",
            "created_at": "2015-02-05T09:38:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-73018667",
            "id": 73018667,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczMDE4NjY3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/73018667/reactions"
            },
            "updated_at": "2018-08-15T08:06:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/73018667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> No - not permanent scanning. Once, at most.\n> Eg. filenames, buffer names, etc. can be checked once - and are fine\n> then.\n\nIf you can figure a clean way to do it and integrate with the rest of msgpack-rpc API infrastructure and automatic API handler generation, then fine by me.\n\n> No - not permanent scanning. Once, at most.\n> Eg. filenames, buffer names, etc. can be checked once - and are fine\n> then.\n> \n> Why should we burden _all_ consumers with something that can be done\n> _once_?\n\nBecause its not a burden, it doesn't matter if strings are marked as utf-8 or not, they will have to be decoded by the client. The only difference is that marking as utf-8 the msgpack deserializer will try to do it before delivering to the client.\n\n> Yeah, that's a good reason to mark as string, right?\n\nNot good enough reason, its not like client developers will be implementing utf-8 decoding themselves, see how its done in python:\n\n``` python\n# with automatic decoding by the msgpack-deserializer\nline = vim.current.line\n# without automatic decoding\nline = vim.current.line.decode('utf-8')\n```\n\nI recommend you to see the python client, string decoding is implemented in a modularized way that is transparent to the library users.\n\n> That's the easiest one for the sender side - pushing some data, and\n> letting\n> the consumer figure it out.\n\nIf its easier then feel free to send a PR for review\n",
            "created_at": "2015-02-05T10:19:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-73023841",
            "id": 73023841,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczMDIzODQx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/73023841/reactions"
            },
            "updated_at": "2015-02-05T10:19:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/73023841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "At any rate @phmarek the 2 commits here are not related, we can focus on the ID commit if you separate it.\n",
            "created_at": "2015-02-05T19:05:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-73105777",
            "id": 73105777,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczMTA1Nzc3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/73105777/reactions"
            },
            "updated_at": "2015-02-05T19:05:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/73105777",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Oh sorry, I've got distracted quite a bit.\nYes, of course I can do a new pull request... I thought that you'd just cherry-pick the one commit.\n",
            "created_at": "2015-02-26T06:19:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-76128201",
            "id": 76128201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2MTI4MjAx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76128201/reactions"
            },
            "updated_at": "2015-02-26T06:19:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/76128201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This needs a basic test as well.\n",
            "created_at": "2015-05-21T01:36:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-104090727",
            "id": 104090727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDA5MDcyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/104090727/reactions"
            },
            "updated_at": "2015-05-21T01:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/104090727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@phmarek are you considering reviving this PR?",
            "created_at": "2018-08-14T22:24:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-413035610",
            "id": 413035610,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzAzNTYxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/413035610/reactions"
            },
            "updated_at": "2018-08-14T22:24:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/413035610",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7495?v=4",
                "events_url": "https://api.github.com/users/josephholsten/events{/privacy}",
                "followers_url": "https://api.github.com/users/josephholsten/followers",
                "following_url": "https://api.github.com/users/josephholsten/following{/other_user}",
                "gists_url": "https://api.github.com/users/josephholsten/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/josephholsten",
                "id": 7495,
                "login": "josephholsten",
                "node_id": "MDQ6VXNlcjc0OTU=",
                "organizations_url": "https://api.github.com/users/josephholsten/orgs",
                "received_events_url": "https://api.github.com/users/josephholsten/received_events",
                "repos_url": "https://api.github.com/users/josephholsten/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/josephholsten/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/josephholsten/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/josephholsten"
            }
        },
        {
            "author_association": "NONE",
            "body": "Well, is there some other way to achieve that?\n\nIf not, my local repo still has that patch - rebased it all the time...\nI just thought that it's not wanted upstream?!\n",
            "created_at": "2018-08-15T07:43:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-413120087",
            "id": 413120087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzEyMDA4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/413120087/reactions"
            },
            "updated_at": "2018-08-15T07:43:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/413120087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@phmarek This was in the 0.3.3 milestone which means it's scheduled for inclusion. But I just bumped it to 0.3.2, it's simple enough. Can you write a test and give your thoughts on the remaining comments?\r\n\r\nThe old discussion about STR vs BIN is obsolete, returning `String` is fine. \r\n\r\nFinal call to @neovim/core for comments. Is `nvim_get_instance_id` a reasonable name?\r\n\r\nPerhaps this should also be a field in the API metadata?\r\n\r\n**Edit:** vscode uses the MAC address (fallback to UUID):\r\nhttps://github.com/microsoft/vscode/pull/77033/files",
            "created_at": "2018-08-15T08:09:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-413125393",
            "id": 413125393,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzEyNTM5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/413125393/reactions"
            },
            "updated_at": "2020-08-14T05:50:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/413125393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "How about that?",
            "created_at": "2018-08-23T20:40:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-415563761",
            "id": 415563761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTU2Mzc2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/415563761/reactions"
            },
            "updated_at": "2018-08-23T20:40:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/415563761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "why can't we use MVIM_LISTEN_ADDRESS to identify an instance instead ?",
            "created_at": "2020-01-13T19:15:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-573824303",
            "id": 573824303,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzgyNDMwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/573824303/reactions"
            },
            "updated_at": "2020-01-13T19:15:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/573824303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/886074?v=4",
                "events_url": "https://api.github.com/users/teto/events{/privacy}",
                "followers_url": "https://api.github.com/users/teto/followers",
                "following_url": "https://api.github.com/users/teto/following{/other_user}",
                "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teto",
                "id": 886074,
                "login": "teto",
                "node_id": "MDQ6VXNlcjg4NjA3NA==",
                "organizations_url": "https://api.github.com/users/teto/orgs",
                "received_events_url": "https://api.github.com/users/teto/received_events",
                "repos_url": "https://api.github.com/users/teto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teto"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "- Related: https://github.com/neovim/neovim/pull/18561\r\n- https://github.com/neovim/neovim/pull/8519 also flirts with the concept of an instance name/id. But it's not globally unique/stable.\r\n\r\n",
            "created_at": "2022-06-26T12:51:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/1758#issuecomment-1166523308",
            "id": 1166523308,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
            "node_id": "IC_kwDOAPphoM5Fh7us",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1166523308/reactions"
            },
            "updated_at": "2022-06-26T12:51:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1166523308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/1758/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/1758/commits",
    "created_at": "2014-12-30T07:36:55Z",
    "diff_url": "https://github.com/neovim/neovim/pull/1758.diff",
    "draft": false,
    "head": {
        "label": "phmarek:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/phmarek/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/phmarek/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/phmarek/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/phmarek/neovim/branches{/branch}",
            "clone_url": "https://github.com/phmarek/neovim.git",
            "collaborators_url": "https://api.github.com/repos/phmarek/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/phmarek/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/phmarek/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/phmarek/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/phmarek/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/phmarek/neovim/contributors",
            "created_at": "2014-12-30T07:20:00Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/phmarek/neovim/deployments",
            "description": "vim out of the box",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/phmarek/neovim/downloads",
            "events_url": "https://api.github.com/repos/phmarek/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/phmarek/neovim/forks",
            "full_name": "phmarek/neovim",
            "git_commits_url": "https://api.github.com/repos/phmarek/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/phmarek/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/phmarek/neovim/git/tags{/sha}",
            "git_url": "git://github.com/phmarek/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://neovim.org/",
            "hooks_url": "https://api.github.com/repos/phmarek/neovim/hooks",
            "html_url": "https://github.com/phmarek/neovim",
            "id": 28621651,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/phmarek/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/phmarek/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/phmarek/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/phmarek/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/phmarek/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/phmarek/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/phmarek/neovim/merges",
            "milestones_url": "https://api.github.com/repos/phmarek/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyODYyMTY1MQ==",
            "notifications_url": "https://api.github.com/repos/phmarek/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
                "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
                "followers_url": "https://api.github.com/users/phmarek/followers",
                "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
                "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phmarek",
                "id": 496570,
                "login": "phmarek",
                "node_id": "MDQ6VXNlcjQ5NjU3MA==",
                "organizations_url": "https://api.github.com/users/phmarek/orgs",
                "received_events_url": "https://api.github.com/users/phmarek/received_events",
                "repos_url": "https://api.github.com/users/phmarek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phmarek"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/phmarek/neovim/pulls{/number}",
            "pushed_at": "2018-08-23T20:39:18Z",
            "releases_url": "https://api.github.com/repos/phmarek/neovim/releases{/id}",
            "size": 73099,
            "ssh_url": "git@github.com:phmarek/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/phmarek/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/phmarek/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/phmarek/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/phmarek/neovim/subscription",
            "svn_url": "https://github.com/phmarek/neovim",
            "tags_url": "https://api.github.com/repos/phmarek/neovim/tags",
            "teams_url": "https://api.github.com/repos/phmarek/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/phmarek/neovim/git/trees{/sha}",
            "updated_at": "2018-08-23T20:41:33Z",
            "url": "https://api.github.com/repos/phmarek/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "86cbeeb6c01933d481dde4ef04dd5b273f874578",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
            "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
            "followers_url": "https://api.github.com/users/phmarek/followers",
            "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
            "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/phmarek",
            "id": 496570,
            "login": "phmarek",
            "node_id": "MDQ6VXNlcjQ5NjU3MA==",
            "organizations_url": "https://api.github.com/users/phmarek/orgs",
            "received_events_url": "https://api.github.com/users/phmarek/received_events",
            "repos_url": "https://api.github.com/users/phmarek/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/phmarek"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/1758",
    "id": 26676204,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1758",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "locked": false,
    "merge_commit_sha": "af5006240bbf449df1825b509a6c8f67fa9361db",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 601,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 515,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-04-01T02:46:11Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjY2NzYyMDQ=",
    "number": 1758,
    "patch_url": "https://github.com/neovim/neovim/pull/1758.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/1758/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/86cbeeb6c01933d481dde4ef04dd5b273f874578",
    "title": "API: nvim_get_instance_id",
    "updated_at": "2024-03-30T13:00:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/1758",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/496570?v=4",
        "events_url": "https://api.github.com/users/phmarek/events{/privacy}",
        "followers_url": "https://api.github.com/users/phmarek/followers",
        "following_url": "https://api.github.com/users/phmarek/following{/other_user}",
        "gists_url": "https://api.github.com/users/phmarek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/phmarek",
        "id": 496570,
        "login": "phmarek",
        "node_id": "MDQ6VXNlcjQ5NjU3MA==",
        "organizations_url": "https://api.github.com/users/phmarek/orgs",
        "received_events_url": "https://api.github.com/users/phmarek/received_events",
        "repos_url": "https://api.github.com/users/phmarek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/phmarek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phmarek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/phmarek"
    }
}