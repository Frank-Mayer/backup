{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20801/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20801/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/20801"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20801"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20801/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/798b8de6d05ddc7d6be5b2367f9f7a4083174d4e"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5259,
            "forks_count": 5259,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1730,
            "open_issues_count": 1730,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-02-20T01:37:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 253965,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 74120,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-02-20T01:31:12Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 74120,
            "watchers_count": 74120,
            "web_commit_signoff_required": false
        },
        "sha": "f2b30b4d62b97da6ae1b4dd7c4e5730fc5bc95f7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Added a libuv fswatch watcher for autoread. The watcher starts watching the current buffer when it is opened in neovim via autocommands. If the watched buffer changes outside neovim, it either automatically reloads the file or notifies the user about the change depending upon the value of the option autoread.\r\n\r\n**NOTE:** This will change the behavior of autoread.\r\n\r\nCreated a new PR since the original one was too far behind master, and there had been a lot of changes to neovim since that PR was last updated.\r\n\r\nFor more info check: https://github.com/neovim/neovim/issues/12605\r\nAnd: https://github.com/neovim/neovim/pull/12593",
    "closed_at": "2024-02-15T13:32:26Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1008277792"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1008277792"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: \r\n```suggestion\r\nlocal M = {}\r\n```",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2022-10-28T17:05:26Z",
            "diff_hunk": "@@ -0,0 +1,165 @@\n+-- Create a file watcher, each watcher is identified by the buffer number of the file it is watching.\n+\n+local uv = vim.loop\n+\n+local Watcher = {}",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1008277792",
            "id": 1008277792,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48GRkg",
            "original_commit_id": "add600fa26ecffaecda934e19f7dbff4748dafe8",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/autoread.lua",
            "position": null,
            "pull_request_review_id": 1160377309,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1008277792/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-10-28T17:05:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1008277792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1008278382"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1008278382"
                }
            },
            "author_association": "MEMBER",
            "body": "is this a public module or should it be prefixed with underscore?\r\n\r\n perhaps it should be named `watch.lua`, then `watch.start()` and `watch.stop()` ?",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2022-10-28T17:06:12Z",
            "diff_hunk": "@@ -0,0 +1,165 @@\n+-- Create a file watcher, each watcher is identified by the buffer number of the file it is watching.",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1008278382",
            "id": 1008278382,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48GRtu",
            "original_commit_id": "add600fa26ecffaecda934e19f7dbff4748dafe8",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/lua/vim/autoread.lua",
            "position": null,
            "pull_request_review_id": 1160378159,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1008278382/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-10-28T17:09:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1008278382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1026723342"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1026723342"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yep, watch works too. I've named it `_watch.lua` for now. Although I think a lot of interesting things can be built on top of this, I am not so sure if it is good enough to be made public just yet. ",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2022-11-18T17:49:56Z",
            "diff_hunk": "@@ -0,0 +1,165 @@\n+-- Create a file watcher, each watcher is identified by the buffer number of the file it is watching.",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1026723342",
            "id": 1026723342,
            "in_reply_to_id": 1008278382,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM49Mo4O",
            "original_commit_id": "add600fa26ecffaecda934e19f7dbff4748dafe8",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/lua/vim/autoread.lua",
            "position": null,
            "pull_request_review_id": 1186542083,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1026723342/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-18T17:49:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1026723342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29245744?v=4",
                "events_url": "https://api.github.com/users/BK1603/events{/privacy}",
                "followers_url": "https://api.github.com/users/BK1603/followers",
                "following_url": "https://api.github.com/users/BK1603/following{/other_user}",
                "gists_url": "https://api.github.com/users/BK1603/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BK1603",
                "id": 29245744,
                "login": "BK1603",
                "node_id": "MDQ6VXNlcjI5MjQ1NzQ0",
                "organizations_url": "https://api.github.com/users/BK1603/orgs",
                "received_events_url": "https://api.github.com/users/BK1603/received_events",
                "repos_url": "https://api.github.com/users/BK1603/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BK1603/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BK1603/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BK1603"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1027102233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102233"
                }
            },
            "author_association": "MEMBER",
            "body": "Prefer `vim.bo[bufnr].buflisted` or `vim.api.nvim_get_optin_value('buflisted', {buffer=bufnr})`",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2022-11-19T14:55:35Z",
            "diff_hunk": "@@ -0,0 +1,170 @@\n+-- Create a file watcher, each watcher is identified by the buffer number of the file it is watching.\n+\n+local uv = vim.loop\n+\n+local M = {}\n+M.__index = M\n+local WatcherList = {}\n+\n+-- Checks if a buffer should have a M attached to it.\n+local function buf_isvalid(bufnr)\n+  if bufnr == nil or not vim.api.nvim_buf_is_valid(bufnr) then\n+    return false\n+  end\n+\n+  local buflisted = vim.api.nvim_buf_get_option(bufnr, 'buflisted')",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1027102233",
            "id": 1027102233,
            "line": 15,
            "node_id": "PRRC_kwDOAPphoM49OFYZ",
            "original_commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "original_line": 15,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/_watch.lua",
            "position": 15,
            "pull_request_review_id": 1187082341,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102233/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-19T14:55:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1027102353"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102353"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      vim.cmd.checktime(watcher.bufnr)\r\n```",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2022-11-19T14:56:22Z",
            "diff_hunk": "@@ -0,0 +1,170 @@\n+-- Create a file watcher, each watcher is identified by the buffer number of the file it is watching.\n+\n+local uv = vim.loop\n+\n+local M = {}\n+M.__index = M\n+local WatcherList = {}\n+\n+-- Checks if a buffer should have a M attached to it.\n+local function buf_isvalid(bufnr)\n+  if bufnr == nil or not vim.api.nvim_buf_is_valid(bufnr) then\n+    return false\n+  end\n+\n+  local buflisted = vim.api.nvim_buf_get_option(bufnr, 'buflisted')\n+  local buftype = vim.api.nvim_buf_get_option(bufnr, 'buftype')\n+\n+  return buflisted or buftype == '' or buftype == 'acwrite'\n+end\n+\n+-- Checks for pending notifications and reacts if notifications are pending.\n+local function handle_pending_notifications()\n+  for _, watcher in pairs(WatcherList) do\n+    if watcher.pending_notifs and buf_isvalid(watcher.bufnr) then\n+      vim.api.nvim_command(string.format('checktime %d', watcher.bufnr))",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1027102353",
            "id": 1027102353,
            "line": 25,
            "node_id": "PRRC_kwDOAPphoM49OFaR",
            "original_commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "original_line": 25,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/_watch.lua",
            "position": 25,
            "pull_request_review_id": 1187082417,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102353/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-19T14:56:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102353",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1027102535"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102535"
                }
            },
            "author_association": "MEMBER",
            "body": "We should implement this in Lua.",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2022-11-19T14:58:06Z",
            "diff_hunk": "@@ -0,0 +1,7 @@\n+\" autocommands for starting filesystem based file watcher\n+\n+augroup autoread\n+    autocmd!\n+    au BufRead,BufWritePost,FileWritePost,FileAppendPost * call v:lua.vim._watch.start(expand(\"<abuf>\"))\n+    au BufDelete,BufUnload,BufWritePre,FileWritePre,FileAppendPre * call v:lua.vim._watch.stop(expand(\"<abuf>\"))\n+augroup END",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1027102535",
            "id": 1027102535,
            "line": 7,
            "node_id": "PRRC_kwDOAPphoM49OFdH",
            "original_commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "original_line": 7,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/plugin/autoread.vim",
            "position": 7,
            "pull_request_review_id": 1187082555,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102535/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-19T14:58:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1027102535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1063109902"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1063109902"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@BK1603 Do you foresee this eventually evolving into something more general-purpose to use for things beyond autoread?\r\n\r\nI'd be interested in leveraging something like this to drive LSP `workspace/didChangeWatchedFiles` notifications in #21293. Right now that PR tightly couples the LSP and file watching details, so a slightly higher-level file watching interface that this might provide would help clean that up a lot.\r\n\r\nI totally understand those kinds of changes are out of scope for this particular PR, but just a heads-up that I might be proposing some changes here after this PR lands.",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2023-01-06T05:09:10Z",
            "diff_hunk": "@@ -0,0 +1,170 @@\n+-- Create a file watcher, each watcher is identified by the buffer number of the file it is watching.",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1063109902",
            "id": 1063109902,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM4_XcUO",
            "original_commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/lua/vim/_watch.lua",
            "position": 1,
            "pull_request_review_id": 1238387469,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1063109902/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-06T05:09:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1063109902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1097598134"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1097598134"
                }
            },
            "author_association": "NONE",
            "body": "@nojnhuh As a user who once tried very hard to make Neovim work with Unity, I very much appreciate your linked PR! Thank you!",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2023-02-06T16:09:23Z",
            "diff_hunk": "@@ -0,0 +1,170 @@\n+-- Create a file watcher, each watcher is identified by the buffer number of the file it is watching.",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1097598134",
            "id": 1097598134,
            "in_reply_to_id": 1063109902,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM5BbAS2",
            "original_commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/lua/vim/_watch.lua",
            "position": 1,
            "pull_request_review_id": 1285525014,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1097598134/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-02-06T16:09:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1097598134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1111334088"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1111334088"
                }
            },
            "author_association": "NONE",
            "body": "Out of curiousity, why is `M = {}` ubiquitous in the codebase?",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2023-02-19T22:30:11Z",
            "diff_hunk": "@@ -0,0 +1,165 @@\n+-- Create a file watcher, each watcher is identified by the buffer number of the file it is watching.\n+\n+local uv = vim.loop\n+\n+local Watcher = {}",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1111334088",
            "id": 1111334088,
            "in_reply_to_id": 1008277792,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5CPZzI",
            "original_commit_id": "add600fa26ecffaecda934e19f7dbff4748dafe8",
            "original_line": 5,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/autoread.lua",
            "position": null,
            "pull_request_review_id": 1304888949,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1111334088/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-02-19T22:30:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1111334088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67451164?v=4",
                "events_url": "https://api.github.com/users/sekerez/events{/privacy}",
                "followers_url": "https://api.github.com/users/sekerez/followers",
                "following_url": "https://api.github.com/users/sekerez/following{/other_user}",
                "gists_url": "https://api.github.com/users/sekerez/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sekerez",
                "id": 67451164,
                "login": "sekerez",
                "node_id": "MDQ6VXNlcjY3NDUxMTY0",
                "organizations_url": "https://api.github.com/users/sekerez/orgs",
                "received_events_url": "https://api.github.com/users/sekerez/received_events",
                "repos_url": "https://api.github.com/users/sekerez/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sekerez/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sekerez/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sekerez"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1111377995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1111377995"
                }
            },
            "author_association": "NONE",
            "body": "If `start` and `stop` took in a number rather than a string, I think something like the following could work:\r\n```lua\r\n-- autocommands for starting filesystem based file watcher\r\nlocal watcher_callback = function(handler)\r\n  return function() handler(tonumber(vim.fn.expand(\"<abuf>\"))) end\r\nend\r\n\r\nlocal watchgroup = vim.api.nvim_create_augroup(\"watchgroup\", { clear = true })\r\nvim.api.nvim_create_autocmd({\r\n  \"BufRead\", \"BufWritePost\", \"FileWritePost\", \"FileAppendPost\"\r\n}, {\r\n  pattern = \"*\",\r\n  group = watchgroup,\r\n  callback = watcher_callback(vim._watch.start)\r\n})\r\nvim.api.nvim_create_autocmd({\r\n  \"BufDelete\", \"BufUnload\", \"BufWritePre\", \"FileWritePre\", \"FileAppendPre\"\r\n}, {\r\n  pattern = \"*\",\r\n  group = watchgroup,\r\n  callback = watcher_callback(vim._watch.stop)\r\n})\r\n```",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2023-02-20T01:43:29Z",
            "diff_hunk": "@@ -0,0 +1,7 @@\n+\" autocommands for starting filesystem based file watcher\n+\n+augroup autoread\n+    autocmd!\n+    au BufRead,BufWritePost,FileWritePost,FileAppendPost * call v:lua.vim._watch.start(expand(\"<abuf>\"))\n+    au BufDelete,BufUnload,BufWritePre,FileWritePre,FileAppendPre * call v:lua.vim._watch.stop(expand(\"<abuf>\"))\n+augroup END",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1111377995",
            "id": 1111377995,
            "in_reply_to_id": 1027102535,
            "line": 7,
            "node_id": "PRRC_kwDOAPphoM5CPkhL",
            "original_commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "original_line": 7,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/plugin/autoread.vim",
            "position": 7,
            "pull_request_review_id": 1304949876,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1111377995/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-02-20T01:43:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1111377995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67451164?v=4",
                "events_url": "https://api.github.com/users/sekerez/events{/privacy}",
                "followers_url": "https://api.github.com/users/sekerez/followers",
                "following_url": "https://api.github.com/users/sekerez/following{/other_user}",
                "gists_url": "https://api.github.com/users/sekerez/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sekerez",
                "id": 67451164,
                "login": "sekerez",
                "node_id": "MDQ6VXNlcjY3NDUxMTY0",
                "organizations_url": "https://api.github.com/users/sekerez/orgs",
                "received_events_url": "https://api.github.com/users/sekerez/received_events",
                "repos_url": "https://api.github.com/users/sekerez/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sekerez/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sekerez/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sekerez"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20801#discussion_r1115598221"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20801"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1115598221"
                }
            },
            "author_association": "MEMBER",
            "body": "Setting the 'autoread' option should enable the behavior. How that is done (by sourcing autoread.vim or whatever) is an implementation detail.\r\n\r\nNeed tests for:\r\n\r\n- If the buffer was modified in Nvim, do we overwrite the changes or do we prompt?\r\n- If we load changes from disk, test that it's undo-able. `u` should restore the previous state.\r\n- If `:setlocal noautoread` is set on a buffer, the fswatcher should be disposed.",
            "commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "created_at": "2023-02-23T12:22:01Z",
            "diff_hunk": "@@ -0,0 +1,59 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local Screen = require('test.functional.ui.screen')\n+local lfs = require('lfs')\n+local clear = helpers.clear\n+local feed_command = helpers.feed_command\n+local iswin = helpers.iswin\n+\n+if iswin() then return end\n+\n+describe('autoread libuv', function()\n+  local f1 = 'xtest-foo'\n+  local screen\n+\n+  before_each(function()\n+    clear()\n+    screen = Screen.new(42, 5)\n+    screen:attach()\n+    feed_command('runtime plugin/autoread.vim')",
            "html_url": "https://github.com/neovim/neovim/pull/20801#discussion_r1115598221",
            "id": 1115598221,
            "line": 18,
            "node_id": "PRRC_kwDOAPphoM5Cfq2N",
            "original_commit_id": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
            "original_line": 18,
            "original_position": 18,
            "original_start_line": null,
            "path": "test/functional/options/autoread_spec.lua",
            "position": 18,
            "pull_request_review_id": 1311157991,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1115598221/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-02-23T14:10:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1115598221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "In `watch.lua`, isn't it a problem that the WatcherList is shared and mutated across events in the libuv event loop? As the documentation states, the library[ isn't thread-safe](http://docs.libuv.org/en/v1.x/design.html), and libuv core does offer utilities such as [mutexes](http://docs.libuv.org/en/v1.x/threading.html) that could make this safe. Am I missing something?",
            "created_at": "2023-02-20T01:41:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/20801#issuecomment-1436180421",
            "id": 1436180421,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20801",
            "node_id": "IC_kwDOAPphoM5Vml_F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1436180421/reactions"
            },
            "updated_at": "2023-02-20T09:13:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1436180421",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/67451164?v=4",
                "events_url": "https://api.github.com/users/sekerez/events{/privacy}",
                "followers_url": "https://api.github.com/users/sekerez/followers",
                "following_url": "https://api.github.com/users/sekerez/following{/other_user}",
                "gists_url": "https://api.github.com/users/sekerez/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sekerez",
                "id": 67451164,
                "login": "sekerez",
                "node_id": "MDQ6VXNlcjY3NDUxMTY0",
                "organizations_url": "https://api.github.com/users/sekerez/orgs",
                "received_events_url": "https://api.github.com/users/sekerez/received_events",
                "repos_url": "https://api.github.com/users/sekerez/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sekerez/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sekerez/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sekerez"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In `watch.lua`, isn't it a problem that the WatcherList is shared and mutated across events in the libuv event loop? As the documentation states, the library[ isn't thread-safe](http://docs.libuv.org/en/v1.x/design.html), and libuv core does offer utilities such as [mutexes](http://docs.libuv.org/en/v1.x/threading.html) that could make this safe. Am I missing something?\r\n\r\nEvents happen on the same thread. There's no use of multiple threads in this PR.",
            "created_at": "2023-02-20T09:13:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/20801#issuecomment-1436596422",
            "id": 1436596422,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20801",
            "node_id": "IC_kwDOAPphoM5VoLjG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1436596422/reactions"
            },
            "updated_at": "2023-02-20T09:13:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1436596422",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/22405 introduced an alternative `_watch.lua` implementation. Need to merge it with the one here, or replace one with the other.",
            "created_at": "2023-03-05T14:31:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/20801#issuecomment-1455108481",
            "id": 1455108481,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20801",
            "node_id": "IC_kwDOAPphoM5WuzGB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1455108481/reactions"
            },
            "updated_at": "2023-03-05T14:31:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1455108481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The LSP filewatch module `runtime/lua/vim/lsp/_watchfiles.lua` is quite robust now, see https://github.com/neovim/neovim/pull/27347 . So the next step is to think about exposing it as a public interface.",
            "created_at": "2024-02-15T13:32:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/20801#issuecomment-1946104654",
            "id": 1946104654,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20801",
            "node_id": "IC_kwDOAPphoM5z_zNO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 3,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1946104654/reactions"
            },
            "updated_at": "2024-02-15T13:32:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1946104654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20801/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/20801/commits",
    "created_at": "2022-10-25T18:42:41Z",
    "diff_url": "https://github.com/neovim/neovim/pull/20801.diff",
    "draft": false,
    "head": {
        "label": "BK1603:libuv_autoread",
        "ref": "libuv_autoread",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/BK1603/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/BK1603/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/BK1603/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/BK1603/neovim/branches{/branch}",
            "clone_url": "https://github.com/BK1603/neovim.git",
            "collaborators_url": "https://api.github.com/repos/BK1603/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/BK1603/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/BK1603/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/BK1603/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/BK1603/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/BK1603/neovim/contributors",
            "created_at": "2020-01-31T08:50:18Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/BK1603/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/BK1603/neovim/downloads",
            "events_url": "https://api.github.com/repos/BK1603/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/BK1603/neovim/forks",
            "full_name": "BK1603/neovim",
            "git_commits_url": "https://api.github.com/repos/BK1603/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/BK1603/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/BK1603/neovim/git/tags{/sha}",
            "git_url": "git://github.com/BK1603/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/BK1603/neovim/hooks",
            "html_url": "https://github.com/BK1603/neovim",
            "id": 237392279,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/BK1603/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/BK1603/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/BK1603/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/BK1603/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/BK1603/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/BK1603/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/BK1603/neovim/merges",
            "milestones_url": "https://api.github.com/repos/BK1603/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMzczOTIyNzk=",
            "notifications_url": "https://api.github.com/repos/BK1603/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29245744?v=4",
                "events_url": "https://api.github.com/users/BK1603/events{/privacy}",
                "followers_url": "https://api.github.com/users/BK1603/followers",
                "following_url": "https://api.github.com/users/BK1603/following{/other_user}",
                "gists_url": "https://api.github.com/users/BK1603/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BK1603",
                "id": 29245744,
                "login": "BK1603",
                "node_id": "MDQ6VXNlcjI5MjQ1NzQ0",
                "organizations_url": "https://api.github.com/users/BK1603/orgs",
                "received_events_url": "https://api.github.com/users/BK1603/received_events",
                "repos_url": "https://api.github.com/users/BK1603/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BK1603/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BK1603/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BK1603"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/BK1603/neovim/pulls{/number}",
            "pushed_at": "2022-11-19T03:51:16Z",
            "releases_url": "https://api.github.com/repos/BK1603/neovim/releases{/id}",
            "size": 210690,
            "ssh_url": "git@github.com:BK1603/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/BK1603/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/BK1603/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/BK1603/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/BK1603/neovim/subscription",
            "svn_url": "https://github.com/BK1603/neovim",
            "tags_url": "https://api.github.com/repos/BK1603/neovim/tags",
            "teams_url": "https://api.github.com/repos/BK1603/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/BK1603/neovim/git/trees{/sha}",
            "updated_at": "2020-07-19T17:39:53Z",
            "url": "https://api.github.com/repos/BK1603/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29245744?v=4",
            "events_url": "https://api.github.com/users/BK1603/events{/privacy}",
            "followers_url": "https://api.github.com/users/BK1603/followers",
            "following_url": "https://api.github.com/users/BK1603/following{/other_user}",
            "gists_url": "https://api.github.com/users/BK1603/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/BK1603",
            "id": 29245744,
            "login": "BK1603",
            "node_id": "MDQ6VXNlcjI5MjQ1NzQ0",
            "organizations_url": "https://api.github.com/users/BK1603/orgs",
            "received_events_url": "https://api.github.com/users/BK1603/received_events",
            "repos_url": "https://api.github.com/users/BK1603/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/BK1603/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BK1603/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/BK1603"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/20801",
    "id": 1099307153,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20801",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "locked": false,
    "merge_commit_sha": "2aa8c7fb5a2dc07c04a8cc7bc3352e66ae82c886",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5BhhiR",
    "number": 20801,
    "patch_url": "https://github.com/neovim/neovim/pull/20801.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/20801/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/798b8de6d05ddc7d6be5b2367f9f7a4083174d4e",
    "title": "Libuv autoread / fs watcher",
    "updated_at": "2024-02-15T13:32:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/20801",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29245744?v=4",
        "events_url": "https://api.github.com/users/BK1603/events{/privacy}",
        "followers_url": "https://api.github.com/users/BK1603/followers",
        "following_url": "https://api.github.com/users/BK1603/following{/other_user}",
        "gists_url": "https://api.github.com/users/BK1603/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/BK1603",
        "id": 29245744,
        "login": "BK1603",
        "node_id": "MDQ6VXNlcjI5MjQ1NzQ0",
        "organizations_url": "https://api.github.com/users/BK1603/orgs",
        "received_events_url": "https://api.github.com/users/BK1603/received_events",
        "repos_url": "https://api.github.com/users/BK1603/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/BK1603/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BK1603/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/BK1603"
    }
}