{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/17099/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17099/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/17099"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/17099"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17099/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/8701a6ba046ab81192e07bfec644595e87525fe9"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4790,
            "forks_count": 4790,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1643,
            "open_issues_count": 1643,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-08-02T00:12:39Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248191,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 67927,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-08-02T01:36:05Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 67927,
            "watchers_count": 67927,
            "web_commit_signoff_required": false
        },
        "sha": "778541067a2f0ec3ef4bc1b07def646323e852a9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "See #17060.\r\n\r\nThis changes the `match` returned by `iter_matches` to be a map from `capture_id` to **list** of nodes instead of map from `capture_id` to **single** node, which is closer to the representation treesitter uses. The previous API could not represent matches where there were multiple nodes for a single capture.\r\n\r\nThe representation treesitter uses itself is a list of `capture_id, node` pairs. I think my implementation is a good compromise between that and compatability with existing code / usability, since it makes it more convenient to query the nodes for a specific capture.\r\n\r\nAlso this way I did not have to change a  lot of the code interacting with `iter_matches` and could instead change `get_node_text` to allow list of nodes. So `vim.treesitter.query.get_node_text(match[capture_id])` still behaves as before.\r\n\r\nThere is also some interaction with predicates and directives, as they also receive a `match` table as input.\r\n\r\nAlso regarding predicates and directives, at the moment the documentation says to set `metadata[capture_id]` to set metadata for a specific node. This will also not work with captures consisting of multiple nodes.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r785553936"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/785553936"
                }
            },
            "author_association": "MEMBER",
            "body": "not sure if I'm sure what is going on here but it does _not_ seem like an improvement over existing behavior. if it is a unfortunate side-effect of actually useful behavior, I'll expect a test to be added for the latter as well.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-16T23:46:47Z",
            "diff_hunk": "@@ -186,12 +187,18 @@ void ui_refresh(void)\n       { \"type\", \"primitive_type\", 8, 2, 8, 6 },\n       { \"keyword\", \"for\", 9, 2, 9, 5 },\n       { \"type\", \"primitive_type\", 9, 7, 9, 13 },\n+      -- captured multiple times, see https://github.com/tree-sitter/tree-sitter/issues/1591\n+      { \"funccall\", \"expression_statement\", 11, 4, 11, 34 },",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r785553936",
            "id": 785553936,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4u0poQ",
            "original_commit_id": "72e15f28b70fca0d2866626b10ef8917335b52c7",
            "original_line": 191,
            "original_position": 13,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": null,
            "pull_request_review_id": 853786136,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785553936/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-16T23:46:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785553936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r785563458"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/785563458"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sry, probably wasn't to smart to add that specific test case. It's a bug in treesitter I actually spent quite a while tracking down, but it only happens with very complex queries. The bug of course doesn't come up when only one node for each capture is emitted. I'll add a better test case.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-17T00:05:36Z",
            "diff_hunk": "@@ -186,12 +187,18 @@ void ui_refresh(void)\n       { \"type\", \"primitive_type\", 8, 2, 8, 6 },\n       { \"keyword\", \"for\", 9, 2, 9, 5 },\n       { \"type\", \"primitive_type\", 9, 7, 9, 13 },\n+      -- captured multiple times, see https://github.com/tree-sitter/tree-sitter/issues/1591\n+      { \"funccall\", \"expression_statement\", 11, 4, 11, 34 },",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r785563458",
            "id": 785563458,
            "in_reply_to_id": 785553936,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4u0r9C",
            "original_commit_id": "72e15f28b70fca0d2866626b10ef8917335b52c7",
            "original_line": 191,
            "original_position": 13,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": null,
            "pull_request_review_id": 853788528,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785563458/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-17T00:05:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785563458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r785564091"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/785564091"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "For example this doesn't happen when the `@funccall` pattern is the only one. The issue I linked is the one I opened in the treesitter repo because of my findings.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-17T00:06:53Z",
            "diff_hunk": "@@ -186,12 +187,18 @@ void ui_refresh(void)\n       { \"type\", \"primitive_type\", 8, 2, 8, 6 },\n       { \"keyword\", \"for\", 9, 2, 9, 5 },\n       { \"type\", \"primitive_type\", 9, 7, 9, 13 },\n+      -- captured multiple times, see https://github.com/tree-sitter/tree-sitter/issues/1591\n+      { \"funccall\", \"expression_statement\", 11, 4, 11, 34 },",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r785564091",
            "id": 785564091,
            "in_reply_to_id": 785553936,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4u0sG7",
            "original_commit_id": "72e15f28b70fca0d2866626b10ef8917335b52c7",
            "original_line": 191,
            "original_position": 13,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": null,
            "pull_request_review_id": 853788725,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785564091/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-17T00:06:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785564091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r785663034"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/785663034"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't see any quantifier here?\nIt looks like you are not testing what you want... ",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-17T06:21:46Z",
            "diff_hunk": "@@ -223,7 +225,59 @@ void ui_refresh(void)\n       { 1, { { \"minfunc\", \"identifier\", 11, 12, 11, 15 }, { \"min_id\", \"identifier\", 11, 27, 11, 32 } } },\n       { 4, { { \"fieldarg\", \"identifier\", 12, 17, 12, 19 } } },\n       { 1, { { \"minfunc\", \"identifier\", 12, 13, 12, 16 }, { \"min_id\", \"identifier\", 12, 29, 12, 35 } } },\n-      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } }\n+      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } },\n+    }, res)\n+  end)\n+\n+  it('support query and iter by capture for quantifiers', function()\n+    insert(test_text)\n+\n+    local res = exec_lua([[\n+      cquery = vim.treesitter.parse_query(\"c\", ...)\n+      parser = vim.treesitter.get_parser(0, \"c\")\n+      tree = parser:parse()[1]\n+      res = {}\n+      for cid, node in cquery:iter_captures(tree:root(), 0, 7, 14) do\n+        -- can't transmit node over RPC. just check the name and range\n+        table.insert(res, {cquery.captures[cid], node:type(), node:range()})\n+      end\n+      return res\n+    ]], '(expression_statement (assignment_expression (call_expression)))+ @funccall')",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r785663034",
            "id": 785663034,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM4u1EQ6",
            "original_commit_id": "ed1e143589b0041028147e3beff78c071914074c",
            "original_line": 266,
            "original_position": 35,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": 35,
            "pull_request_review_id": 853916871,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785663034/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-17T06:22:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785663034",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r785663317"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/785663317"
                }
            },
            "author_association": "MEMBER",
            "body": "Here again, I don't see any quantifier. ",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-17T06:22:30Z",
            "diff_hunk": "@@ -223,7 +225,59 @@ void ui_refresh(void)\n       { 1, { { \"minfunc\", \"identifier\", 11, 12, 11, 15 }, { \"min_id\", \"identifier\", 11, 27, 11, 32 } } },\n       { 4, { { \"fieldarg\", \"identifier\", 12, 17, 12, 19 } } },\n       { 1, { { \"minfunc\", \"identifier\", 12, 13, 12, 16 }, { \"min_id\", \"identifier\", 12, 29, 12, 35 } } },\n-      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } }\n+      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } },\n+    }, res)\n+  end)\n+\n+  it('support query and iter by capture for quantifiers', function()\n+    insert(test_text)\n+\n+    local res = exec_lua([[\n+      cquery = vim.treesitter.parse_query(\"c\", ...)\n+      parser = vim.treesitter.get_parser(0, \"c\")\n+      tree = parser:parse()[1]\n+      res = {}\n+      for cid, node in cquery:iter_captures(tree:root(), 0, 7, 14) do\n+        -- can't transmit node over RPC. just check the name and range\n+        table.insert(res, {cquery.captures[cid], node:type(), node:range()})\n+      end\n+      return res\n+    ]], '(expression_statement (assignment_expression (call_expression)))+ @funccall')\n+\n+    eq({\n+      { \"funccall\", \"expression_statement\", 11, 4, 11, 34 },\n+      { \"funccall\", \"expression_statement\", 12, 4, 12, 37 },\n+      { \"funccall\", \"expression_statement\", 13, 4, 13, 34 },\n+    }, res)\n+  end)\n+\n+  it('support query and iter by match for quantifiers', function()\n+    insert(test_text)\n+\n+    local res = exec_lua([[\n+      cquery = vim.treesitter.parse_query(\"c\", ...)\n+      parser = vim.treesitter.get_parser(0, \"c\")\n+      tree = parser:parse()[1]\n+      res = {}\n+      for pattern, match in cquery:iter_matches(tree:root(), 0, 7, 14) do\n+        -- can't transmit node over RPC. just check the name and range\n+        local mrepr = {}\n+        for cid, nodes in pairs(match) do\n+          for _, node in ipairs(nodes) do\n+            table.insert(mrepr, {cquery.captures[cid], node:type(), node:range()})\n+          end\n+        end\n+        table.insert(res, {pattern, mrepr})\n+      end\n+      return res\n+    ]], '(expression_statement (assignment_expression (call_expression)))+ @funccall')",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r785663317",
            "id": 785663317,
            "line": 294,
            "node_id": "PRRC_kwDOAPphoM4u1EVV",
            "original_commit_id": "ed1e143589b0041028147e3beff78c071914074c",
            "original_line": 294,
            "original_position": 63,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": 63,
            "pull_request_review_id": 853916871,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785663317/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-17T06:22:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785663317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r785676529"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/785676529"
                }
            },
            "author_association": "MEMBER",
            "body": "`+`?",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-17T06:47:31Z",
            "diff_hunk": "@@ -223,7 +225,59 @@ void ui_refresh(void)\n       { 1, { { \"minfunc\", \"identifier\", 11, 12, 11, 15 }, { \"min_id\", \"identifier\", 11, 27, 11, 32 } } },\n       { 4, { { \"fieldarg\", \"identifier\", 12, 17, 12, 19 } } },\n       { 1, { { \"minfunc\", \"identifier\", 12, 13, 12, 16 }, { \"min_id\", \"identifier\", 12, 29, 12, 35 } } },\n-      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } }\n+      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } },\n+    }, res)\n+  end)\n+\n+  it('support query and iter by capture for quantifiers', function()\n+    insert(test_text)\n+\n+    local res = exec_lua([[\n+      cquery = vim.treesitter.parse_query(\"c\", ...)\n+      parser = vim.treesitter.get_parser(0, \"c\")\n+      tree = parser:parse()[1]\n+      res = {}\n+      for cid, node in cquery:iter_captures(tree:root(), 0, 7, 14) do\n+        -- can't transmit node over RPC. just check the name and range\n+        table.insert(res, {cquery.captures[cid], node:type(), node:range()})\n+      end\n+      return res\n+    ]], '(expression_statement (assignment_expression (call_expression)))+ @funccall')",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r785676529",
            "id": 785676529,
            "in_reply_to_id": 785663034,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM4u1Hjx",
            "original_commit_id": "ed1e143589b0041028147e3beff78c071914074c",
            "original_line": 266,
            "original_position": 35,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": 35,
            "pull_request_review_id": 853933510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785676529/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-17T06:47:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785676529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r785832694"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/785832694"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yes the `+` is a quantifier",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-17T10:34:46Z",
            "diff_hunk": "@@ -223,7 +225,59 @@ void ui_refresh(void)\n       { 1, { { \"minfunc\", \"identifier\", 11, 12, 11, 15 }, { \"min_id\", \"identifier\", 11, 27, 11, 32 } } },\n       { 4, { { \"fieldarg\", \"identifier\", 12, 17, 12, 19 } } },\n       { 1, { { \"minfunc\", \"identifier\", 12, 13, 12, 16 }, { \"min_id\", \"identifier\", 12, 29, 12, 35 } } },\n-      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } }\n+      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } },\n+    }, res)\n+  end)\n+\n+  it('support query and iter by capture for quantifiers', function()\n+    insert(test_text)\n+\n+    local res = exec_lua([[\n+      cquery = vim.treesitter.parse_query(\"c\", ...)\n+      parser = vim.treesitter.get_parser(0, \"c\")\n+      tree = parser:parse()[1]\n+      res = {}\n+      for cid, node in cquery:iter_captures(tree:root(), 0, 7, 14) do\n+        -- can't transmit node over RPC. just check the name and range\n+        table.insert(res, {cquery.captures[cid], node:type(), node:range()})\n+      end\n+      return res\n+    ]], '(expression_statement (assignment_expression (call_expression)))+ @funccall')",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r785832694",
            "id": 785832694,
            "in_reply_to_id": 785663034,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM4u1tr2",
            "original_commit_id": "ed1e143589b0041028147e3beff78c071914074c",
            "original_line": 266,
            "original_position": 35,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": 35,
            "pull_request_review_id": 854202376,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785832694/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-17T10:34:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/785832694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r786181100"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/786181100"
                }
            },
            "author_association": "MEMBER",
            "body": "But this way you are not testing what you want to I think.\nThe quantifiers in tree-sitter check for adjacent nodes repeated from what I can remember. ",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-17T17:08:32Z",
            "diff_hunk": "@@ -223,7 +225,59 @@ void ui_refresh(void)\n       { 1, { { \"minfunc\", \"identifier\", 11, 12, 11, 15 }, { \"min_id\", \"identifier\", 11, 27, 11, 32 } } },\n       { 4, { { \"fieldarg\", \"identifier\", 12, 17, 12, 19 } } },\n       { 1, { { \"minfunc\", \"identifier\", 12, 13, 12, 16 }, { \"min_id\", \"identifier\", 12, 29, 12, 35 } } },\n-      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } }\n+      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } },\n+    }, res)\n+  end)\n+\n+  it('support query and iter by capture for quantifiers', function()\n+    insert(test_text)\n+\n+    local res = exec_lua([[\n+      cquery = vim.treesitter.parse_query(\"c\", ...)\n+      parser = vim.treesitter.get_parser(0, \"c\")\n+      tree = parser:parse()[1]\n+      res = {}\n+      for cid, node in cquery:iter_captures(tree:root(), 0, 7, 14) do\n+        -- can't transmit node over RPC. just check the name and range\n+        table.insert(res, {cquery.captures[cid], node:type(), node:range()})\n+      end\n+      return res\n+    ]], '(expression_statement (assignment_expression (call_expression)))+ @funccall')",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r786181100",
            "id": 786181100,
            "in_reply_to_id": 785663034,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM4u3Cvs",
            "original_commit_id": "ed1e143589b0041028147e3beff78c071914074c",
            "original_line": 266,
            "original_position": 35,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": 35,
            "pull_request_review_id": 854648312,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/786181100/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-17T17:08:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/786181100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r786254588"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/786254588"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure I understand what you mean. To me what you are describing is exactly what the test is showing. The query is maybe a bit complicated, so let's pretend it instead is `(expression_statement)+ @funccall`, which has the same result (I should maybe change it to that). I'm then trying to capture the three adjacent assignments\r\n```c\r\nwidth = MIN(ui->width, width);\r\nheight = MIN(ui->height, height);\r\nfoo = BAR(ui->bazaar, bazaar);\r\n```\r\nThat would result in three `expression_statement` nodes being output, which is exactly what we see.\r\n\r\nAlso maybe it's better to look at the `iter_matches` example and not the `iter_captures` example, since the output of that didn't actually change. I just put the test there to check that it didn't break. For `iter_matches` I have checked that the test does not pass without the changes of this PR and that the expected result is in line with what tree-sitter itself i.e. the `tree-sitter` cli tool says.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-01-17T19:31:44Z",
            "diff_hunk": "@@ -223,7 +225,59 @@ void ui_refresh(void)\n       { 1, { { \"minfunc\", \"identifier\", 11, 12, 11, 15 }, { \"min_id\", \"identifier\", 11, 27, 11, 32 } } },\n       { 4, { { \"fieldarg\", \"identifier\", 12, 17, 12, 19 } } },\n       { 1, { { \"minfunc\", \"identifier\", 12, 13, 12, 16 }, { \"min_id\", \"identifier\", 12, 29, 12, 35 } } },\n-      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } }\n+      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } },\n+    }, res)\n+  end)\n+\n+  it('support query and iter by capture for quantifiers', function()\n+    insert(test_text)\n+\n+    local res = exec_lua([[\n+      cquery = vim.treesitter.parse_query(\"c\", ...)\n+      parser = vim.treesitter.get_parser(0, \"c\")\n+      tree = parser:parse()[1]\n+      res = {}\n+      for cid, node in cquery:iter_captures(tree:root(), 0, 7, 14) do\n+        -- can't transmit node over RPC. just check the name and range\n+        table.insert(res, {cquery.captures[cid], node:type(), node:range()})\n+      end\n+      return res\n+    ]], '(expression_statement (assignment_expression (call_expression)))+ @funccall')",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r786254588",
            "id": 786254588,
            "in_reply_to_id": 785663034,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM4u3Ur8",
            "original_commit_id": "ed1e143589b0041028147e3beff78c071914074c",
            "original_line": 266,
            "original_position": 35,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": 35,
            "pull_request_review_id": 854735259,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/786254588/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-17T19:31:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/786254588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r896532817"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/896532817"
                }
            },
            "author_association": "MEMBER",
            "body": "What is a return value/type when a list of nodes is passed? List of strings or a single string?",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-14T08:31:39Z",
            "diff_hunk": "@@ -429,10 +429,10 @@ add_predicate({name}, {handler}, {force})                    *add_predicate()*\n                                be (match, pattern, bufnr, predicate)\n \n get_node_text({node}, {source})                              *get_node_text()*\n-                Gets the text corresponding to a given node\n+                Gets the text corresponding to a given node or a list of nodes\n \n                 Parameters: ~\n-                    {node}    the node\n+                    {node}    the node or list of nodes",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r896532817",
            "id": 896532817,
            "line": 435,
            "node_id": "PRRC_kwDOAPphoM41cAFR",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 435,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": 9,
            "pull_request_review_id": 1005452349,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896532817/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-14T08:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896532817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r896535009"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/896535009"
                }
            },
            "author_association": "MEMBER",
            "body": "Is `list_extend` right here? Can't we have `ranges[#ranges+1] = node:range()`?",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-14T08:33:41Z",
            "diff_hunk": "@@ -340,7 +340,9 @@ function LanguageTree:_get_injections()\n \n         -- Allow for captured nodes to be used\n         if type(content) == 'number' then\n-          content = { match[content]:range() }\n+          for _, node in ipairs(match[content]) do\n+            vim.list_extend(ranges, { node:range() })",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r896535009",
            "id": 896535009,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41cAnh",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 344,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1005452349,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896535009/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-14T08:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896535009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r896536925"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/896536925"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't these conditions be in reverse order? You can't check an index is present without knowing the variable is a table first.\r\n\r\n```suggestion\r\n  if type(node) == 'table' and node['start'] == nil then\r\n```",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-14T08:35:31Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r896536925",
            "id": 896536925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41cBFd",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 188,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1005452349,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896536925/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-14T08:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896536925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r896538592"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/896538592"
                }
            },
            "author_association": "MEMBER",
            "body": "string concatenation in Lua is horribly slow. A better idiom is to populate a table first and then call `table.concat`.\r\n\r\nHowever, it may be better to change the signature of this to return a list of strings?",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-14T08:37:10Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then\n+    local text = ''\n+    for _, node1 in ipairs(node) do\n+      text = text .. M.get_node_text(node1, source)",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r896538592",
            "id": 896538592,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41cBfg",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 191,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1005452349,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896538592/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-14T08:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896538592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r896554415"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/896554415"
                }
            },
            "author_association": "MEMBER",
            "body": "Probably worth adding a TODO here to change the metadata format to accommodate multiple nodes.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-14T08:52:20Z",
            "diff_hunk": "@@ -328,24 +336,25 @@ local directive_handlers = {\n   -- Example: (#offset! @_node 0 1 0 -1)\n   ['offset!'] = function(match, _, _, pred, metadata)\n     local capture_id = pred[2]\n-    local offset_node = match[capture_id]\n-    local range = { offset_node:range() }\n-    local start_row_offset = pred[3] or 0\n-    local start_col_offset = pred[4] or 0\n-    local end_row_offset = pred[5] or 0\n-    local end_col_offset = pred[6] or 0\n-\n-    range[1] = range[1] + start_row_offset\n-    range[2] = range[2] + start_col_offset\n-    range[3] = range[3] + end_row_offset\n-    range[4] = range[4] + end_col_offset\n-\n-    -- If this produces an invalid range, we just skip it.\n-    if range[1] < range[3] or (range[1] == range[3] and range[2] <= range[4]) then\n-      if not metadata[capture_id] then\n-        metadata[capture_id] = {}\n+    for _, offset_node in ipairs(match[capture_id]) do",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r896554415",
            "id": 896554415,
            "line": 339,
            "node_id": "PRRC_kwDOAPphoM41cFWv",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 339,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": 42,
            "pull_request_review_id": 1005452349,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896554415/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-14T08:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896554415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r896599007"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/896599007"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I implemented it this way, so `get_node_text(match[capture_id])`, which works with the old behavior, still gives the same result for queries that only have one node per capture. A lot of code I saw uses `iter_matches` in that way, so maybe it would make sense to keep compatibility in this way?",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-14T09:34:38Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then\n+    local text = ''\n+    for _, node1 in ipairs(node) do\n+      text = text .. M.get_node_text(node1, source)",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r896599007",
            "id": 896599007,
            "in_reply_to_id": 896538592,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41cQPf",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 191,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1005547552,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896599007/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-14T09:34:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896599007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r896599635"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/896599635"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I meant the return type of course. The `table.concat` solution would definitely be an improvement.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-14T09:35:18Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then\n+    local text = ''\n+    for _, node1 in ipairs(node) do\n+      text = text .. M.get_node_text(node1, source)",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r896599635",
            "id": 896599635,
            "in_reply_to_id": 896538592,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41cQZT",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 191,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1005548478,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896599635/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-14T09:35:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896599635",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r896602079"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/896602079"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This seemed weird to me as well, but I trusted the old implementation here, which was to add `content` with `list_extend` a few lines down. Test also pass, but I'll have a look at this again.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-14T09:37:46Z",
            "diff_hunk": "@@ -340,7 +340,9 @@ function LanguageTree:_get_injections()\n \n         -- Allow for captured nodes to be used\n         if type(content) == 'number' then\n-          content = { match[content]:range() }\n+          for _, node in ipairs(match[content]) do\n+            vim.list_extend(ranges, { node:range() })",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r896602079",
            "id": 896602079,
            "in_reply_to_id": 896535009,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41cQ_f",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 344,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1005552000,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896602079/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-14T09:37:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/896602079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r897660193"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/897660193"
                }
            },
            "author_association": "MEMBER",
            "body": "List extend here is mandatory because `node:range()` retunrs multiple values instead of a table.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-15T08:00:17Z",
            "diff_hunk": "@@ -340,7 +340,9 @@ function LanguageTree:_get_injections()\n \n         -- Allow for captured nodes to be used\n         if type(content) == 'number' then\n-          content = { match[content]:range() }\n+          for _, node in ipairs(match[content]) do\n+            vim.list_extend(ranges, { node:range() })",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r897660193",
            "id": 897660193,
            "in_reply_to_id": 896535009,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41gTUh",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 344,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1007038436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/897660193/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-15T08:00:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/897660193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r897660840"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/897660840"
                }
            },
            "author_association": "MEMBER",
            "body": "Even better:\r\n```suggestion\r\n  if  type(node) == 'table' and not node.start then\r\n```",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-15T08:00:57Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r897660840",
            "id": 897660840,
            "in_reply_to_id": 896536925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41gTeo",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 188,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1007039295,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/897660840/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-15T08:00:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/897660840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r897673653"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/897673653"
                }
            },
            "author_association": "MEMBER",
            "body": "So then why not `ranges[#ranges+1] = {node:range()}`?\r\n\r\nIsn't `ranges` a list of ranges (a.k.a a list of integer lists)? `vim.list_extend` will just make ranges a list of integers?",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-15T08:13:57Z",
            "diff_hunk": "@@ -340,7 +340,9 @@ function LanguageTree:_get_injections()\n \n         -- Allow for captured nodes to be used\n         if type(content) == 'number' then\n-          content = { match[content]:range() }\n+          for _, node in ipairs(match[content]) do\n+            vim.list_extend(ranges, { node:range() })",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r897673653",
            "id": 897673653,
            "in_reply_to_id": 896535009,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41gWm1",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 344,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1007057780,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/897673653/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-15T08:13:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/897673653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r897675582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/897675582"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure. When passing a single node which isn't a list, a single string should be returned.\r\n\r\nI'm just contemplating whether if a list is given as the input, then a list is returned? Should remain compat and doesn't remove information.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-15T08:15:57Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then\n+    local text = ''\n+    for _, node1 in ipairs(node) do\n+      text = text .. M.get_node_text(node1, source)",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r897675582",
            "id": 897675582,
            "in_reply_to_id": 896538592,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41gXE-",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 191,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1007060741,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/897675582/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-15T08:15:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/897675582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r906050566"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906050566"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "You were indeed right, it should be a insert and not an extend. The previous implementation is just a bit weird because it resulted in `ranges` being a single range, even though it should have been a table of ranges (of length 1). So the previous implementation should have been `{ { match[content]:range() } }`. I think it only worked in this case because of some leniency further down.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-24T13:13:29Z",
            "diff_hunk": "@@ -340,7 +340,9 @@ function LanguageTree:_get_injections()\n \n         -- Allow for captured nodes to be used\n         if type(content) == 'number' then\n-          content = { match[content]:range() }\n+          for _, node in ipairs(match[content]) do\n+            vim.list_extend(ranges, { node:range() })",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r906050566",
            "id": 906050566,
            "in_reply_to_id": 896535009,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM42ATwG",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 344,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1018461700,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906050566/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-24T13:13:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906050566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r906062286"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906062286"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm thinking of this specific use case `get_node_text(match[capture_id])`, which I saw in quite a bit of code, e.g. most of the currently implemented query predicates.\r\n\r\nIf `get_node_text` were to return a list of strings, the type of that expression would change to \"list of string\". If a single string is returned, then the type of that expression stays \"string\" (even though the type of `match[capture_id]` changed).\r\n\r\nIf someone needs the additional information that a list of string has, they will probably want to iterate over that list next, in which case it would be easier (and faster, as this doesn't build the extra table) to just iterate over the list of nodes and then call `get_node_text` in the loop.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-24T13:25:44Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then\n+    local text = ''\n+    for _, node1 in ipairs(node) do\n+      text = text .. M.get_node_text(node1, source)",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r906062286",
            "id": 906062286,
            "in_reply_to_id": 896538592,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM42AWnO",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 191,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1018479208,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906062286/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-24T13:25:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906062286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r906063565"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906063565"
                }
            },
            "author_association": "MEMBER",
            "body": "related: https://github.com/neovim/neovim/pull/18232",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-24T13:27:13Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then\n+    local text = ''\n+    for _, node1 in ipairs(node) do\n+      text = text .. M.get_node_text(node1, source)",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r906063565",
            "id": 906063565,
            "in_reply_to_id": 896538592,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM42AW7N",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 191,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1018481185,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906063565/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-24T13:27:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906063565",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r906073653"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906073653"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I hope this was cleared up?",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-06-24T13:38:45Z",
            "diff_hunk": "@@ -223,7 +225,59 @@ void ui_refresh(void)\n       { 1, { { \"minfunc\", \"identifier\", 11, 12, 11, 15 }, { \"min_id\", \"identifier\", 11, 27, 11, 32 } } },\n       { 4, { { \"fieldarg\", \"identifier\", 12, 17, 12, 19 } } },\n       { 1, { { \"minfunc\", \"identifier\", 12, 13, 12, 16 }, { \"min_id\", \"identifier\", 12, 29, 12, 35 } } },\n-      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } }\n+      { 4, { { \"fieldarg\", \"identifier\", 13, 14, 13, 16 } } },\n+    }, res)\n+  end)\n+\n+  it('support query and iter by capture for quantifiers', function()\n+    insert(test_text)\n+\n+    local res = exec_lua([[\n+      cquery = vim.treesitter.parse_query(\"c\", ...)\n+      parser = vim.treesitter.get_parser(0, \"c\")\n+      tree = parser:parse()[1]\n+      res = {}\n+      for cid, node in cquery:iter_captures(tree:root(), 0, 7, 14) do\n+        -- can't transmit node over RPC. just check the name and range\n+        table.insert(res, {cquery.captures[cid], node:type(), node:range()})\n+      end\n+      return res\n+    ]], '(expression_statement (assignment_expression (call_expression)))+ @funccall')",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r906073653",
            "id": 906073653,
            "in_reply_to_id": 785663034,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM42AZY1",
            "original_commit_id": "ed1e143589b0041028147e3beff78c071914074c",
            "original_line": 266,
            "original_position": 35,
            "original_start_line": null,
            "path": "test/functional/treesitter/parser_spec.lua",
            "position": 35,
            "pull_request_review_id": 1018496117,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906073653/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-24T13:38:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906073653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r919804669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/919804669"
                }
            },
            "author_association": "MEMBER",
            "body": "@MDeiml That is a valid point. We should be much more strict about using (EmmyLua) type annotations. \r\n\r\nAlso relevant: https://github.com/neovim/neovim/pull/18232#issuecomment-1107800511",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-07-13T08:34:51Z",
            "diff_hunk": "@@ -429,10 +429,10 @@ add_predicate({name}, {handler}, {force})                    *add_predicate()*\n                                be (match, pattern, bufnr, predicate)\n \n get_node_text({node}, {source})                              *get_node_text()*\n-                Gets the text corresponding to a given node\n+                Gets the text corresponding to a given node or a list of nodes\n \n                 Parameters: ~\n-                    {node}    the node\n+                    {node}    the node or list of nodes",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r919804669",
            "id": 919804669,
            "in_reply_to_id": 896532817,
            "line": 435,
            "node_id": "PRRC_kwDOAPphoM420xr9",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 435,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": 9,
            "pull_request_review_id": 1036978477,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/919804669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-07-13T08:34:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/919804669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r919810527"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/919810527"
                }
            },
            "author_association": "MEMBER",
            "body": "> Sure. When passing a single node which isn't a list, a single string should be returned.\r\n> \r\n> I'm just contemplating whether if a list is given as the input, then a list is returned? Should remain compat and doesn't remove information.\r\n\r\nI disagree; return types should be static. Either we need two functions, or (as an uneasy compromise)  add an `opts` table that controls the behavior.",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-07-13T08:40:37Z",
            "diff_hunk": "@@ -179,11 +179,19 @@ function M.parse_query(lang, query)\n   end\n end\n \n---- Gets the text corresponding to a given node\n+--- Gets the text corresponding to a given node or a list of nodes\n ---\n----@param node the node\n+---@param node the node or list of nodes\n ---@param source The buffer or string from which the node is extracted\n function M.get_node_text(node, source)\n+  -- If node is a list of nodes then return their concatenated text\n+  if node['start'] == nil and type(node) == 'table' then\n+    local text = ''\n+    for _, node1 in ipairs(node) do\n+      text = text .. M.get_node_text(node1, source)",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r919810527",
            "id": 919810527,
            "in_reply_to_id": 896538592,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM420zHf",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 191,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1036986512,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/919810527/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-07-13T08:40:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/919810527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r919831632"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/919831632"
                }
            },
            "author_association": "MEMBER",
            "body": "Tbh, thinking about it, do we even need this change? What's the reason for allowing this function to accept a node list as opposed to just running a map function on the node list?",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-07-13T09:01:39Z",
            "diff_hunk": "@@ -429,10 +429,10 @@ add_predicate({name}, {handler}, {force})                    *add_predicate()*\n                                be (match, pattern, bufnr, predicate)\n \n get_node_text({node}, {source})                              *get_node_text()*\n-                Gets the text corresponding to a given node\n+                Gets the text corresponding to a given node or a list of nodes\n \n                 Parameters: ~\n-                    {node}    the node\n+                    {node}    the node or list of nodes",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r919831632",
            "id": 919831632,
            "in_reply_to_id": 896532817,
            "line": 435,
            "node_id": "PRRC_kwDOAPphoM4204RQ",
            "original_commit_id": "591b5f875ab357d47c38e8d96a17678ff16a59e0",
            "original_line": 435,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": 9,
            "pull_request_review_id": 1037015710,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/919831632/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-07-13T09:01:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/919831632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17099#discussion_r919834060"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17099"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/919834060"
                }
            },
            "author_association": "MEMBER",
            "body": "If there are multiple nodes then range gets overwritten on each iteration.\r\n\r\nIf only 1 node is supported in this code then simply do:\r\n\r\n```lua\r\nlocal offset_nodes = match[capture_id]\r\nassert(#offset_nodes == 1, \"offset! only supports captures of a single node\")\r\nlocal offset_node = offset_node[1]\r\n```",
            "commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "created_at": "2022-07-13T09:04:05Z",
            "diff_hunk": "@@ -328,24 +336,26 @@ local directive_handlers = {\n   -- Example: (#offset! @_node 0 1 0 -1)\n   ['offset!'] = function(match, _, _, pred, metadata)\n     local capture_id = pred[2]\n-    local offset_node = match[capture_id]\n-    local range = { offset_node:range() }\n-    local start_row_offset = pred[3] or 0\n-    local start_col_offset = pred[4] or 0\n-    local end_row_offset = pred[5] or 0\n-    local end_col_offset = pred[6] or 0\n-\n-    range[1] = range[1] + start_row_offset\n-    range[2] = range[2] + start_col_offset\n-    range[3] = range[3] + end_row_offset\n-    range[4] = range[4] + end_col_offset\n-\n-    -- If this produces an invalid range, we just skip it.\n-    if range[1] < range[3] or (range[1] == range[3] and range[2] <= range[4]) then\n-      if not metadata[capture_id] then\n-        metadata[capture_id] = {}\n+    for _, offset_node in ipairs(match[capture_id]) do\n+      local range = { offset_node:range() }\n+      local start_row_offset = pred[3] or 0\n+      local start_col_offset = pred[4] or 0\n+      local end_row_offset = pred[5] or 0\n+      local end_col_offset = pred[6] or 0\n+\n+      range[1] = range[1] + start_row_offset\n+      range[2] = range[2] + start_col_offset\n+      range[3] = range[3] + end_row_offset\n+      range[4] = range[4] + end_col_offset\n+\n+      -- If this produces an invalid range, we just skip it.\n+      if range[1] < range[3] or (range[1] == range[3] and range[2] <= range[4]) then\n+        if not metadata[capture_id] then\n+          metadata[capture_id] = {}\n+        end\n+        -- TODO: change metadata[capture_id] to support multiple nodes per capture\n+        metadata[capture_id].range = range",
            "html_url": "https://github.com/neovim/neovim/pull/17099#discussion_r919834060",
            "id": 919834060,
            "line": 357,
            "node_id": "PRRC_kwDOAPphoM42043M",
            "original_commit_id": "8701a6ba046ab81192e07bfec644595e87525fe9",
            "original_line": 357,
            "original_position": 60,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": 60,
            "pull_request_review_id": 1037018973,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/919834060/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-07-13T09:09:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/919834060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Wouldn't i be possible to keep the current API? The iterator could yield the same capture_id multiple times but with different nodes.",
            "created_at": "2022-01-16T22:49:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1013968726",
            "id": 1013968726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM48b-9W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013968726/reactions"
            },
            "updated_at": "2022-01-16T22:49:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013968726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sadly no. I'm not talking about the return value of `iter_matches` which is an iterator over `pattern_id, match` pairs. I'm talking about the `match` part of these pairs which is a table, not an iterator, so it can only have one entry for each capture. We could of course turn it into an iterator.",
            "created_at": "2022-01-16T23:16:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1013973882",
            "id": 1013973882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM48cAN6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013973882/reactions"
            },
            "updated_at": "2022-01-16T23:16:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013973882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@MDeiml maybe we could fix `@combined` in the context of this PR and make it behave like in https://github.com/tree-sitter/tree-sitter/blob/3ff5c19403ccb8e6139a048b3257302a8da6139e/docs/section-4-syntax-highlighting.md#L363-L365\r\n\r\nI think we misunderstood what `combined` should mean in the tree-sitter context and assumed combined parser ranges while for tree-sitter it means exclude child nodes from the parent language. E.g. a language injected with combined in a JS template string would exclude interpolation regions\r\n  \r\nhttps://github.com/nvim-treesitter/nvim-treesitter/issues/1111#issuecomment-1046089904\r\n\r\nThe old \"combined\" was merely a workaround for what you did in this PR that you can also have `( )+ @html`",
            "created_at": "2022-02-19T19:43:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1046090803",
            "id": 1046090803,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM4-WhQz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1046090803/reactions"
            },
            "updated_at": "2022-02-19T19:43:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1046090803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@Hrle97 has created patch from @steelsojka old PR that would exclude children from the parent language which is the actual meaning of \"combined\" in upstream tree-sitter. We could either try to emulate the behavior of upstream or use different names for the captures to avoid confusion on what \"combined\" should mean https://github.com/nvim-treesitter/nvim-treesitter/issues/1111#issuecomment-1046230971",
            "created_at": "2022-02-20T12:58:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1046232328",
            "id": 1046232328,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM4-XD0I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1046232328/reactions"
            },
            "updated_at": "2022-02-20T12:58:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1046232328",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "You are right that chidren should be excluded. I wasn't aware there was a tree-sitter documentation for this. So there should definitely be some kind of `@include-children` predicate, which would also be very usefull.\r\n\r\nBut I'm not sure I understand what you are suggesting the behavior of `@combined` should be. Should it just be the opposite of `@include-children`? My interpretation of the tree-sitter docs is the one that is currently implemented.\r\n\r\nWhat would that mean relating to this PR? I don't think it actually interacts with the injection logic too much, but I guess the changes I am proposing solve similar problems. I think my changes are still relevant as `iter_matches` should mirror what the tree-sitter API is doing.",
            "created_at": "2022-02-23T10:40:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1048649669",
            "id": 1048649669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM4-gR_F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1048649669/reactions"
            },
            "updated_at": "2022-02-23T10:40:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1048649669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(Please don't merge master into PR branches! You should instead rebase your branch.)",
            "created_at": "2022-06-12T10:54:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1153127918",
            "id": 1153127918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5Eu1Xu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153127918/reactions"
            },
            "updated_at": "2022-06-12T10:54:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153127918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Oh sry, fixed it.",
            "created_at": "2022-06-12T14:11:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1153183044",
            "id": 1153183044,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5EvC1E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153183044/reactions"
            },
            "updated_at": "2022-06-12T14:11:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153183044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the `Query:iter_matches()` API is already in stable neovim, so the way this is implemented now is a breaking change. Is a breaking change okay in this case because (if I understand correctly) the bug cannot be solved without changing the API? Or is there some preferred solution like creating a `Query:iter_matches_all_captures()` and keeping the old method?",
            "created_at": "2022-06-12T14:38:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1153191416",
            "id": 1153191416,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5EvE34",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153191416/reactions"
            },
            "updated_at": "2022-06-12T14:38:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153191416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The Lua API doesn't come with a strict contract like the `nvim_*` Neovim API (and treesitter support is explicitly declared as \"experimental\"), so it's not completely out of the question. The question is \r\n1. _how_ breaking this is (does it just change behavior in some edge cases, or will plugins using it suddenly error),\r\n2. and whether relying on the old behavior is still reasonable?",
            "created_at": "2022-06-12T14:43:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1153192719",
            "id": 1153192719,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5EvFMP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153192719/reactions"
            },
            "updated_at": "2022-06-12T14:43:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153192719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "1. Pretty much every plugin that uses `Query:iter_matches()` directly will error, since the output type changed.\r\n2. Relying on the old behavior is sometimes reasonable as it works fine with queries that don't use quantifiers.",
            "created_at": "2022-06-12T14:59:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1153197248",
            "id": 1153197248,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5EvGTA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153197248/reactions"
            },
            "updated_at": "2022-06-12T14:59:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153197248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, that is quite breaking... Can we make the new behavior optional by adding a `{opts}` table with, say, `output_list = true` (default `false`)? \r\n\r\n(Adding new API functions is something we try to avoid unless needed.)",
            "created_at": "2022-06-12T15:02:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1153197900",
            "id": 1153197900,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5EvGdM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153197900/reactions"
            },
            "updated_at": "2022-06-12T15:03:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153197900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What would be the preferred solution for directives / predicates? They also obtain the same `match` object, but for those there is no easy way to \"opt-in\" to the new API.",
            "created_at": "2022-06-12T15:37:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1153207863",
            "id": 1153207863,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5EvI43",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153207863/reactions"
            },
            "updated_at": "2022-06-12T15:37:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153207863",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, I'll have to defer on that to people with more experience with those (@lewis6991 ?)\r\n\r\nIt might make sense then to rip the band-aid off quickly, but remember that plugins like nvim-treesitter need to support the current release as well, so we need to make it as easy as possible to deal with both interfaces (e.g., via a compatibility shim).",
            "created_at": "2022-06-12T16:14:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1153222445",
            "id": 1153222445,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5EvMct",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153222445/reactions"
            },
            "updated_at": "2022-06-12T16:14:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1153222445",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think a breaking change wouldn't that bad. In nvim-treesitter we would probably switch to a shim until the next release. If you think it could avoid some pain you could have that distinction also with an additional Lua layer to produce the new behavior just on `all_captures = true` which could require less refactoring. It's a bit strange that you're converting the old usage to the new for `not all_captures`. I think for most usages this will results in packing the thing into a table and immediately unpacking it.",
            "created_at": "2022-06-13T21:55:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1154478134",
            "id": 1154478134,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5Ez_A2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154478134/reactions"
            },
            "updated_at": "2022-06-13T21:55:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154478134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think that this breaking change is a good thing.\r\nThe problem here is that the current implementaion, which is now the current API too, is actually broken, and that the _only_ way to make it work is through this API change (which is breaking).\r\n\r\nMy opinion on this is that, even if this breaks the current API, the fact that it is broken means that any change to fix it is good.\r\n\r\nPlus TS integration is actually experimental.\r\nI also think that nvim-treesitter can add a new banner saying that we only support neovim 0.7, as a kind reminder, TS is experimental, and anything rellying on it should be as experimental.",
            "created_at": "2022-06-14T08:22:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1154870751",
            "id": 1154870751,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5E1e3f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154870751/reactions"
            },
            "updated_at": "2022-06-14T08:22:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154870751",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "OK, then let's rip that band-aid off :)",
            "created_at": "2022-06-14T08:24:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1154872421",
            "id": 1154872421,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5E1fRl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154872421/reactions"
            },
            "updated_at": "2022-06-14T08:24:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154872421",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@vigoux but I wonder whether then all_captures should then be the only option to make people think that for the same match there might be multiple arrangements. `all_captures = false` with triple loop does not make sense to me. You could also just `continue` to get the false behavior`",
            "created_at": "2022-06-14T09:07:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1154918940",
            "id": 1154918940,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5E1qoc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154918940/reactions"
            },
            "updated_at": "2022-06-14T09:17:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154918940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Probably not an issue, but can we still check whether there is any perf-delta due to this change? There will be more matches and also more table creations for `nodes`. Does highlight need the `all_captures = true` or `false` behavior? ",
            "created_at": "2022-06-14T09:19:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1154932655",
            "id": 1154932655,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5E1t-v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154932655/reactions"
            },
            "updated_at": "2022-06-14T09:20:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154932655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is just guessing, but performance for queries that don't have quantifiers should be similar, with the extra overhead of creating a table with one element.\r\n\r\nHighlight needs the `all_captures = true` behaviour, otherwise something like `(comment)+ @comment` would only highlight the first capture.",
            "created_at": "2022-06-14T09:29:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1154943483",
            "id": 1154943483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5E1wn7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154943483/reactions"
            },
            "updated_at": "2022-06-14T09:29:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154943483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Will there be only one match for `(comment)+ @comment` with multiple nodes or every combination of `(comment)+` that fits the description one or more node?",
            "created_at": "2022-06-14T09:38:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1154953618",
            "id": 1154953618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5E1zGS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154953618/reactions"
            },
            "updated_at": "2022-06-14T09:38:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1154953618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There will only be one match with multiple nodes.",
            "created_at": "2022-06-14T10:25:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1155001181",
            "id": 1155001181,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5E1-td",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1155001181/reactions"
            },
            "updated_at": "2022-06-14T10:25:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1155001181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "(I removed the commit for defaulting to the old behavior, as we decided to \"rip the band-aid off\")",
            "created_at": "2022-06-24T13:38:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1165584849",
            "id": 1165584849,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5FeWnR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1165584849/reactions"
            },
            "updated_at": "2022-06-24T13:38:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1165584849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@MDeiml What is the status here? Is this ready for review, or is there something left to be done (e.g., tests)?\r\n\r\n@neovim/treesitter ",
            "created_at": "2022-07-13T07:55:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1182891012",
            "id": 1182891012,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5GgXwE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182891012/reactions"
            },
            "updated_at": "2022-07-13T07:55:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182891012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This should be ready for review",
            "created_at": "2022-07-13T08:23:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1182919883",
            "id": 1182919883,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5GgezL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182919883/reactions"
            },
            "updated_at": "2022-07-13T08:23:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182919883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Lint disagrees :D",
            "created_at": "2022-07-13T08:30:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1182927835",
            "id": 1182927835,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5Gggvb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182927835/reactions"
            },
            "updated_at": "2022-07-18T13:05:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182927835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There was a trailing whitespace, but lintcfull and lintstylua don't seem to be related to my changes...",
            "created_at": "2022-07-13T08:35:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1182934388",
            "id": 1182934388,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5GgiV0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182934388/reactions"
            },
            "updated_at": "2022-07-18T13:05:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182934388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Then you need to rebase on master to shut them up ;)",
            "created_at": "2022-07-13T08:37:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1182935494",
            "id": 1182935494,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5GginG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182935494/reactions"
            },
            "updated_at": "2022-07-18T13:05:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182935494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Protip: run `stylua runtime/` before committing. (But no need to do that now; let's wait for actual review.)",
            "created_at": "2022-07-13T08:45:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1182944073",
            "id": 1182944073,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5GgktJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182944073/reactions"
            },
            "updated_at": "2022-07-13T08:45:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182944073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "But you could take a look at https://github.com/neovim/neovim/pull/18232 whether any of those upstreamed functions would be useful here. I'd also like to combine the `get_node_text` refactor (to homogenize with nvim-treesitter) in this PR, if you are up for it.",
            "created_at": "2022-07-13T08:52:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1182951348",
            "id": 1182951348,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5Ggme0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182951348/reactions"
            },
            "updated_at": "2022-07-13T08:53:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182951348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Combining `get_node_text` sounds good. But I don't think any other function from the utils are relevant here.",
            "created_at": "2022-07-13T08:59:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1182957606",
            "id": 1182957606,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5GgoAm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182957606/reactions"
            },
            "updated_at": "2022-07-13T08:59:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1182957606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "After looking a bit into tree-sitter code, we should be able to determine dinamycally wether a given capture is quantified or not using `ts_query_capture_quantifier_for_id()`.\r\n\r\nI will try to implement a minimal working version of this ASAP.",
            "created_at": "2022-07-28T09:54:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1197924438",
            "id": 1197924438,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5HZuBW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1197924438/reactions"
            },
            "updated_at": "2022-07-28T09:54:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1197924438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That sounds a lot better in terms of backwards compatability. Good idea",
            "created_at": "2022-07-29T07:32:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1198970117",
            "id": 1198970117,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5HdtUF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1198970117/reactions"
            },
            "updated_at": "2022-07-29T07:32:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1198970117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Any progress on this? The inability to iterate over multiple matched captures causes problems with [nvim-ts-rainbow2](https://gitlab.com/HiPhish/nvim-ts-rainbow2) if I want to skip over certain elements.\r\n\r\nAs an example, I want to highlight the angle brackets and the name of the tag in HTML, but not other tree nodes like attributes. Here is what the query looks like:\r\n\r\n```\r\n(element\r\n  (start_tag\r\n    (\"<\" (tag_name) \">\") @opening)\r\n  (end_tag\r\n    (\"</\" (tag_name) \">\") @closing)) @container\r\n```\r\n\r\nHowever, only the first element of the sequence (either `\"<\"` or `\"</\"`) gets matched.",
            "created_at": "2023-03-19T23:02:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1475427071",
            "id": 1475427071,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5X8Tr_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1475427071/reactions"
            },
            "updated_at": "2023-03-19T23:02:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1475427071",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
                "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
                "followers_url": "https://api.github.com/users/HiPhish/followers",
                "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
                "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HiPhish",
                "id": 4954650,
                "login": "HiPhish",
                "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
                "organizations_url": "https://api.github.com/users/HiPhish/orgs",
                "received_events_url": "https://api.github.com/users/HiPhish/received_events",
                "repos_url": "https://api.github.com/users/HiPhish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HiPhish"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "No progress. I don't remember where I left of too :)\r\n\r\nI think the implementation is mainly done and there is some discussion about the concrete API changes. As soon as I have the time I'll rebase to the current master and then we can see where this needs to go.",
            "created_at": "2023-03-20T18:18:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1476724368",
            "id": 1476724368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5YBQaQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 3,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1476724368/reactions"
            },
            "updated_at": "2023-03-20T18:18:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1476724368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "NONE",
            "body": "Any progress on this? ",
            "created_at": "2023-06-10T11:52:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1585632212",
            "id": 1585632212,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5egtPU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1585632212/reactions"
            },
            "updated_at": "2023-06-10T11:59:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1585632212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/63151578?v=4",
                "events_url": "https://api.github.com/users/Ddystopia/events{/privacy}",
                "followers_url": "https://api.github.com/users/Ddystopia/followers",
                "following_url": "https://api.github.com/users/Ddystopia/following{/other_user}",
                "gists_url": "https://api.github.com/users/Ddystopia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Ddystopia",
                "id": 63151578,
                "login": "Ddystopia",
                "node_id": "MDQ6VXNlcjYzMTUxNTc4",
                "organizations_url": "https://api.github.com/users/Ddystopia/orgs",
                "received_events_url": "https://api.github.com/users/Ddystopia/received_events",
                "repos_url": "https://api.github.com/users/Ddystopia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Ddystopia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Ddystopia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Ddystopia"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What would it need to get this merged? I don't really use neovim anymore, but I'd still like to finish up what I started, and it seems like this is still a welcome change? Of course I would also be open to hand this off.\r\n\r\nAs far as I can see everything is implemented. I need to do a rebase and the general opinion here seems to be, that the signature of `get_node_text` should not be changed at best, which shouldn't be to hard to implement. Anything else?",
            "created_at": "2023-07-30T10:42:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1657105006",
            "id": 1657105006,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5ixWpu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1657105006/reactions"
            },
            "updated_at": "2023-07-30T10:42:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1657105006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can take this over.",
            "created_at": "2023-07-30T10:47:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1657106045",
            "id": 1657106045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5ixW59",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1657106045/reactions"
            },
            "updated_at": "2023-07-30T10:47:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1657106045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The change is still welcome (sorry for letting this languish!) \r\n\r\nMaybe the best way forward is to rebase and open a new PR (a lot has changed in the languagetree and query code since it was opened) with a new description of the change (ideally in \"Problem--Solution\" format, including a \"before--after\" comparison of the API) so we can take a fresh look at it.\r\n\r\nAlso, we have `vim.iter` now :)",
            "created_at": "2023-07-30T10:50:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1657106615",
            "id": 1657106615,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5ixXC3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1657106615/reactions"
            },
            "updated_at": "2023-07-30T10:53:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1657106615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't know about the specifics of this particular change, but it sounds related to my issue of `(comment)+ @fold` not working right in fold.scm, as discussed in https://github.com/nvim-treesitter/nvim-treesitter/issues/5184. I'm still keen to see a solution to that issue; so if my vote counts I definitely say \"keep going\" :)",
            "created_at": "2023-08-01T22:08:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/17099#issuecomment-1661164451",
            "id": 1661164451,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
            "node_id": "IC_kwDOAPphoM5jA1uj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1661164451/reactions"
            },
            "updated_at": "2023-08-01T22:08:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1661164451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/350941?v=4",
                "events_url": "https://api.github.com/users/leonerd/events{/privacy}",
                "followers_url": "https://api.github.com/users/leonerd/followers",
                "following_url": "https://api.github.com/users/leonerd/following{/other_user}",
                "gists_url": "https://api.github.com/users/leonerd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leonerd",
                "id": 350941,
                "login": "leonerd",
                "node_id": "MDQ6VXNlcjM1MDk0MQ==",
                "organizations_url": "https://api.github.com/users/leonerd/orgs",
                "received_events_url": "https://api.github.com/users/leonerd/received_events",
                "repos_url": "https://api.github.com/users/leonerd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leonerd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leonerd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leonerd"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17099/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/17099/commits",
    "created_at": "2022-01-15T11:10:21Z",
    "diff_url": "https://github.com/neovim/neovim/pull/17099.diff",
    "draft": false,
    "head": {
        "label": "MDeiml:iter-matches-multiple-captures",
        "ref": "iter-matches-multiple-captures",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/MDeiml/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/MDeiml/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/MDeiml/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/MDeiml/neovim/branches{/branch}",
            "clone_url": "https://github.com/MDeiml/neovim.git",
            "collaborators_url": "https://api.github.com/repos/MDeiml/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/MDeiml/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/MDeiml/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/MDeiml/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/MDeiml/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/MDeiml/neovim/contributors",
            "created_at": "2022-01-11T15:42:20Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/MDeiml/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/MDeiml/neovim/downloads",
            "events_url": "https://api.github.com/repos/MDeiml/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/MDeiml/neovim/forks",
            "full_name": "MDeiml/neovim",
            "git_commits_url": "https://api.github.com/repos/MDeiml/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/MDeiml/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/MDeiml/neovim/git/tags{/sha}",
            "git_url": "git://github.com/MDeiml/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/MDeiml/neovim/hooks",
            "html_url": "https://github.com/MDeiml/neovim",
            "id": 446881894,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/MDeiml/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/MDeiml/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/MDeiml/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/MDeiml/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/MDeiml/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/MDeiml/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/MDeiml/neovim/merges",
            "milestones_url": "https://api.github.com/repos/MDeiml/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGqLgZg",
            "notifications_url": "https://api.github.com/repos/MDeiml/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
                "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
                "followers_url": "https://api.github.com/users/MDeiml/followers",
                "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
                "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MDeiml",
                "id": 10165741,
                "login": "MDeiml",
                "node_id": "MDQ6VXNlcjEwMTY1NzQx",
                "organizations_url": "https://api.github.com/users/MDeiml/orgs",
                "received_events_url": "https://api.github.com/users/MDeiml/received_events",
                "repos_url": "https://api.github.com/users/MDeiml/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MDeiml"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/MDeiml/neovim/pulls{/number}",
            "pushed_at": "2023-03-11T11:56:33Z",
            "releases_url": "https://api.github.com/repos/MDeiml/neovim/releases{/id}",
            "size": 232060,
            "ssh_url": "git@github.com:MDeiml/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/MDeiml/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/MDeiml/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/MDeiml/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/MDeiml/neovim/subscription",
            "svn_url": "https://github.com/MDeiml/neovim",
            "tags_url": "https://api.github.com/repos/MDeiml/neovim/tags",
            "teams_url": "https://api.github.com/repos/MDeiml/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/MDeiml/neovim/git/trees{/sha}",
            "updated_at": "2023-01-31T19:26:50Z",
            "url": "https://api.github.com/repos/MDeiml/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "8701a6ba046ab81192e07bfec644595e87525fe9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
            "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
            "followers_url": "https://api.github.com/users/MDeiml/followers",
            "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
            "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MDeiml",
            "id": 10165741,
            "login": "MDeiml",
            "node_id": "MDQ6VXNlcjEwMTY1NzQx",
            "organizations_url": "https://api.github.com/users/MDeiml/orgs",
            "received_events_url": "https://api.github.com/users/MDeiml/received_events",
            "repos_url": "https://api.github.com/users/MDeiml/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MDeiml"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/17099",
    "id": 823608831,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17099",
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "For PRs that propose significant changes to some part of the architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "8aa6ee5f8e11452a8ba512aec1356bd747feae7d",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 100,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 139,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-08-01T14:36:59Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM4xF0X_",
    "number": 17099,
    "patch_url": "https://github.com/neovim/neovim/pull/17099.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/9699804?v=4",
            "events_url": "https://api.github.com/users/muniter/events{/privacy}",
            "followers_url": "https://api.github.com/users/muniter/followers",
            "following_url": "https://api.github.com/users/muniter/following{/other_user}",
            "gists_url": "https://api.github.com/users/muniter/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/muniter",
            "id": 9699804,
            "login": "muniter",
            "node_id": "MDQ6VXNlcjk2OTk4MDQ=",
            "organizations_url": "https://api.github.com/users/muniter/orgs",
            "received_events_url": "https://api.github.com/users/muniter/received_events",
            "repos_url": "https://api.github.com/users/muniter/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/muniter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/muniter/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/muniter"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
            "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
            "followers_url": "https://api.github.com/users/vigoux/followers",
            "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
            "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/vigoux",
            "id": 39092278,
            "login": "vigoux",
            "node_id": "MDQ6VXNlcjM5MDkyMjc4",
            "organizations_url": "https://api.github.com/users/vigoux/orgs",
            "received_events_url": "https://api.github.com/users/vigoux/received_events",
            "repos_url": "https://api.github.com/users/vigoux/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/vigoux"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/17099/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/8701a6ba046ab81192e07bfec644595e87525fe9",
    "title": "Change api for Query:iter_matches()",
    "updated_at": "2023-08-01T22:08:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/17099",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10165741?v=4",
        "events_url": "https://api.github.com/users/MDeiml/events{/privacy}",
        "followers_url": "https://api.github.com/users/MDeiml/followers",
        "following_url": "https://api.github.com/users/MDeiml/following{/other_user}",
        "gists_url": "https://api.github.com/users/MDeiml/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MDeiml",
        "id": 10165741,
        "login": "MDeiml",
        "node_id": "MDQ6VXNlcjEwMTY1NzQx",
        "organizations_url": "https://api.github.com/users/MDeiml/orgs",
        "received_events_url": "https://api.github.com/users/MDeiml/received_events",
        "repos_url": "https://api.github.com/users/MDeiml/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MDeiml/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MDeiml/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MDeiml"
    }
}