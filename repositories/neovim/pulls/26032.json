{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26032/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26032/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26032"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26032"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26032/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a146bbe2c573875b180afee4f70821df1e5c7d69"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4983,
            "forks_count": 4983,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1688,
            "open_issues_count": 1688,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-17T01:59:41Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 239093,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70942,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-17T01:19:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70942,
            "watchers_count": 70942,
            "web_commit_signoff_required": false
        },
        "sha": "d718a3e27aa3a13b7a712c4a4f97ea5580b93d15",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This would solve #26031.\r\n\r\nThis PR is functional, but (since this is my first PR to the project), I would like to receive feedback regarding things like:\r\n\r\n- ~Should I check possibly nil values, if yes, which is the appropiate way to show this erros to the user (is using `error` preffered over something like `vim.notify` using the error log level?).~\r\n- Suggestions for naming the new function (maybe also renaming `vim.lsp.rpc.connect` to something regarding tcp?)\r\n- ~The policy regarding lua typings (is a specific type like `fun(dispatchers: Dispatchers): StartServer?` prefered over a general one like `function`? Is it the oposit way because of how docs are generated?) (as fas as I can tell, neither [CONTRIBUTING.MD](https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#lua-docstrings) nor [:help dev-doc-lua](https://neovim.io/doc/user/develop.html#dev-lua-doc) talk about this).~\r\n- I'm using `vim.schedule` on the `write` transport as a workaround because, on my tests using Powershell Editor Services, Neovim sended the initialization requets before the pipe connection was stablished. ~I think that, ideally, `public_client(client)` should be returned from inside the callback on `pipe:connect`, but I'm not sure if I'm using the previously existing functions in an unexpected way. (Since I'm using `vim.schedule` here, I also had to add it to the test)~\r\n\r\nEdit:\r\n~I'm also not sure about how to test if the method received is `initialize` because of the `vim.schedule` thing :/~\r\n~Turns out that busted [supports async tests](https://lunarmodules.github.io/busted/#async-tests)~\r\nNevermind, it looks like async test [aren't supported currently](https://github.com/lunarmodules/busted/issues/724)",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391723865"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391723865"
                }
            },
            "author_association": "MEMBER",
            "body": "Since these types are globally scoped, we should \"namespace\" them (e.g. `vim.rpc.Dispatchers`).",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T21:26:37Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391723865",
            "id": 1391723865,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9AVZ",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 611,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391723865/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391723865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391724398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391724398"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- Create a LSP RPC client factory that connects via named pipes (windows)\r\n```",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T21:27:16Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391724398",
            "id": 1391724398,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9Adu",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 624,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391724398/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391724398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391726336"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391726336"
                }
            },
            "author_association": "MEMBER",
            "body": "Feels a bit odd to have a \"plural\" type like `Dispatchers`. I find more intuitive to have a singular `vim.rpc.Dispatcher` type and make this parameter a table of those.",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T21:29:40Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391726336",
            "id": 1391726336,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9A8A",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 629,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391726336/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391726336",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391727245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727245"
                }
            },
            "author_association": "MEMBER",
            "body": "In line with my comment about `function` versus `fun`, consider using the latter to include parameter and return types. ",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T21:30:47Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391727245",
            "id": 1391727245,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9BKN",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 614,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727245/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391727770"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727770"
                }
            },
            "author_association": "MEMBER",
            "body": "Since this is part of the public API, consider adding descriptions to the parameters/return values.",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T21:31:25Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391727770",
            "id": 1391727770,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9BSa",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 629,
            "original_position": 31,
            "original_start_line": 628,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727770/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391730820"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391730820"
                }
            },
            "author_association": "MEMBER",
            "body": "Error reporting would be nice, or at least log it to the LSP log file.",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T21:34:26Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe = uv.new_pipe(false)\n+    if not pipe then\n+      -- TODO: should an error be reported to the user?",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391730820",
            "id": 1391730820,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9CCE",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 635,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391730820/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391730820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391731616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391731616"
                }
            },
            "author_association": "MEMBER",
            "body": "Should we handle the case where `closing` is `true`? (Might not be possible in theory but wild things happen).",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T21:35:28Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe = uv.new_pipe(false)\n+    if not pipe then\n+      -- TODO: should an error be reported to the user?\n+      return\n+    end\n+    local closing = false\n+    local transport = {\n+      write = vim.schedule_wrap(function(msg)\n+        pipe:write(msg)\n+      end),\n+      is_closing = function()\n+        return closing\n+      end,\n+      terminate = function()\n+        if not closing then",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391731616",
            "id": 1391731616,
            "line": 703,
            "node_id": "PRRC_kwDOAPphoM5S9COg",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 647,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 388,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391731616/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391731616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391775523"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391775523"
                }
            },
            "author_association": "NONE",
            "body": "I took these types from the [private dispatchers](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp.lua#L1139-L1259) that are passed to this function by `vim.lsp.start_client`. Not all of them share the same signature, so this type can't be an array of `vim.lsp.rpc.Distpacher`, what do you suggest for this case? ",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T22:33:37Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391775523",
            "id": 1391775523,
            "in_reply_to_id": 1391726336,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9M8j",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 629,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728394097,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391775523/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T23:15:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391775523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391797029"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391797029"
                }
            },
            "author_association": "NONE",
            "body": "It looks like this is [only used to shutdown](https://github.com/TheLeoP/neovim/blob/0590f4d7c885889a721767d75ee60b7cb382f42d/runtime/lua/vim/lsp.lua#L1650-L1659) a LS. Should an error be log if `closing` is true? After a quick overview of [the spec](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#shutdown), I'm not sure about what would be the correct behaviour.",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-13T23:06:45Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe = uv.new_pipe(false)\n+    if not pipe then\n+      -- TODO: should an error be reported to the user?\n+      return\n+    end\n+    local closing = false\n+    local transport = {\n+      write = vim.schedule_wrap(function(msg)\n+        pipe:write(msg)\n+      end),\n+      is_closing = function()\n+        return closing\n+      end,\n+      terminate = function()\n+        if not closing then",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391797029",
            "id": 1391797029,
            "in_reply_to_id": 1391731616,
            "line": 703,
            "node_id": "PRRC_kwDOAPphoM5S9SMl",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 647,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 388,
            "pull_request_review_id": 1728425494,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391797029/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T23:06:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391797029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394258026"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394258026"
                }
            },
            "author_association": "MEMBER",
            "body": "If closing is already true then everything is fine. We don't need to turn a double-close into an error case.",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-15T14:12:55Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe = uv.new_pipe(false)\n+    if not pipe then\n+      -- TODO: should an error be reported to the user?\n+      return\n+    end\n+    local closing = false\n+    local transport = {\n+      write = vim.schedule_wrap(function(msg)\n+        pipe:write(msg)\n+      end),\n+      is_closing = function()\n+        return closing\n+      end,\n+      terminate = function()\n+        if not closing then",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394258026",
            "id": 1394258026,
            "in_reply_to_id": 1391731616,
            "line": 703,
            "node_id": "PRRC_kwDOAPphoM5TGrBq",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 647,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 388,
            "pull_request_review_id": 1732125568,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394258026/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:12:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394258026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394259744"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394259744"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@class vim.lsp.rpc.Client\r\n```\r\n\r\nOr\r\n\r\n```suggestion\r\n---@class vim.lsp.rpc.RPCClient\r\n```\r\n\r\nIt's not starting a server, the `fun:...` would be that. This object is the client part wrapping a socket/uv-handle for the communication with the server.",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-15T14:14:17Z",
            "diff_hunk": "@@ -608,6 +619,83 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>)\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.PrivateDispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+-- TODO: better name\n+---@class vim.lsp.rpc.StartServer",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394259744",
            "id": 1394259744,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TGrcg",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 633,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394259744/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:29:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394259744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394265041"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394265041"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@field request fun(method: string, params: table?, callback: fun(err?: lsp.ResponseError, result: any), notify_reply_callback:function?)\r\n```\r\n\r\nIt's usually just `callback`:\r\n\r\n```\r\n↪  rg callback **/*.lua | wc -l\r\n569\r\n```\r\n\r\n\r\n```\r\n↪  rg callbackfun **/*.lua | wc -l\r\n0\r\n```\r\n",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-15T14:18:20Z",
            "diff_hunk": "@@ -608,6 +619,83 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>)\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.PrivateDispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+-- TODO: better name\n+---@class vim.lsp.rpc.StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394265041",
            "id": 1394265041,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TGsvR",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 634,
            "original_position": 45,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394265041/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:28:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394265041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394268387"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394268387"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd tend to wrap `uv.new_pipe(false)` into an `assert` - that will result in an error with trace for users.\r\nThere is no good way to recover from this and logging it would make it harder for users to figure out what went wrong.\r\n\r\nThen the return type could also change to non-nullable.",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-15T14:20:50Z",
            "diff_hunk": "@@ -608,6 +619,83 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>)\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.PrivateDispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+-- TODO: better name\n+---@class vim.lsp.rpc.StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing fun(): boolean\n+---@field terminate fun(): nil\n+\n+--- Create a LSP RPC client factory that connects via named pipes (Windows)\n+--- or unix domain sockets (Unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path string file path of the domain socket (Unix) or name of the named pipe (Windows) to connect to\n+---@return fun(dispatchers: vim.lsp.rpc.PrivateDispatchers): vim.lsp.rpc.StartServer? #function intended to be passed to |vim.lsp.rpc.start_client| or |vim.lsp.start| on the field cmd\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe, err_msg, err_name = uv.new_pipe(false)\n+    if not pipe then\n+      local _ = log.error()\n+        and log.error(\n+          'pipe with name %s could not be opened. Error: %s. Reason: %s',\n+          pipe_path,\n+          err_name,\n+          err_msg\n+        )\n+      return\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394268387",
            "id": 1394268387,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TGtjj",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 658,
            "original_position": 69,
            "original_start_line": 648,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394268387/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-15T14:28:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394268387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394273021"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394273021"
                }
            },
            "author_association": "MEMBER",
            "body": "Could use something like:\r\n\r\n```\r\nlocal tmpfile_new = helpers.tmpname()\r\nos.remove(tmpfile_new)\r\n```\r\n\r\nSee https://github.com/neovim/neovim/blob/d92dd2a0c05148154c353f0e7cd2099b2427308a/test/helpers.lua#L371-L396\r\nIt handles some more cases\r\n",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-15T14:24:18Z",
            "diff_hunk": "@@ -3861,6 +3861,39 @@ describe('LSP', function()\n       ]]\n       eq(result.method, \"initialize\")\n     end)\n+    it('can connect to lsp server via rpc.domain_socket_connect', function()\n+      async()\n+      exec_lua [[\n+        local uv = vim.uv\n+        local SOCK = jit.os == \"Windows\" and \"\\\\\\\\.\\\\\\\\pipe\\\\pipe.test\" or \"/tmp/pipe.test\"",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394273021",
            "id": 1394273021,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TGur9",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 3868,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394273021/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:28:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394273021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394275858"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394275858"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe something like:\r\n\r\n```suggestion\r\nfunction M.connect_to_pipe(pipe_path)\r\n```\r\n\r\nMerging it into `connect` could also be an option, if we change the args to `opts` and distinguish based on the keys. With a `type(opts) == \"table\"` check we could even make it backward compatible (if it is a string, it's a host name)\r\n\r\ncc @justinmk do you have inputs on this? ",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-15T14:26:18Z",
            "diff_hunk": "@@ -608,6 +619,83 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>)\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.PrivateDispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+-- TODO: better name\n+---@class vim.lsp.rpc.StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing fun(): boolean\n+---@field terminate fun(): nil\n+\n+--- Create a LSP RPC client factory that connects via named pipes (Windows)\n+--- or unix domain sockets (Unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path string file path of the domain socket (Unix) or name of the named pipe (Windows) to connect to\n+---@return fun(dispatchers: vim.lsp.rpc.PrivateDispatchers): vim.lsp.rpc.StartServer? #function intended to be passed to |vim.lsp.rpc.start_client| or |vim.lsp.start| on the field cmd\n+function M.domain_socket_connect(pipe_path)",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394275858",
            "id": 1394275858,
            "line": 689,
            "node_id": "PRRC_kwDOAPphoM5TGvYS",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 645,
            "original_position": 56,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 374,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394275858/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:28:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394275858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394475724"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394475724"
                }
            },
            "author_association": "NONE",
            "body": "Thanks. Do you know if there is something similar for named pipes on Windows? Because they aren't file paths. Or would it be ok to leave the hardcoded pipe name for windows?",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-15T16:43:13Z",
            "diff_hunk": "@@ -3861,6 +3861,39 @@ describe('LSP', function()\n       ]]\n       eq(result.method, \"initialize\")\n     end)\n+    it('can connect to lsp server via rpc.domain_socket_connect', function()\n+      async()\n+      exec_lua [[\n+        local uv = vim.uv\n+        local SOCK = jit.os == \"Windows\" and \"\\\\\\\\.\\\\\\\\pipe\\\\pipe.test\" or \"/tmp/pipe.test\"",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394475724",
            "id": 1394475724,
            "in_reply_to_id": 1394273021,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5THgLM",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 3868,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1732467053,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394475724/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T16:43:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394475724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394491269"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394491269"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not aware of anything like that. I guess it's okay to leave it hardcoded.\r\nIt's also possible that you'll have to delete the file after calling tmpname to ensure it doesn't exist - to only use it as a means to claim the path in an appropriate location",
            "commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "created_at": "2023-11-15T16:55:55Z",
            "diff_hunk": "@@ -3861,6 +3861,39 @@ describe('LSP', function()\n       ]]\n       eq(result.method, \"initialize\")\n     end)\n+    it('can connect to lsp server via rpc.domain_socket_connect', function()\n+      async()\n+      exec_lua [[\n+        local uv = vim.uv\n+        local SOCK = jit.os == \"Windows\" and \"\\\\\\\\.\\\\\\\\pipe\\\\pipe.test\" or \"/tmp/pipe.test\"",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394491269",
            "id": 1394491269,
            "in_reply_to_id": 1394273021,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5THj-F",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 3868,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1732491378,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394491269/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T16:55:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394491269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> The policy regarding lua typings (is a specific type like `fun(dispatchers: Dispatchers): StartServer?` prefered over a general one like `function`?\r\n\r\nThere's nothing written in stone about it, but _personally_ I believe that the more accurate the type annotations, the better (and so I prefer `fun(param: paramType): returnType`).",
            "created_at": "2023-11-13T21:25:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1809151727",
            "id": 1809151727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5r1Xbv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809151727/reactions"
            },
            "updated_at": "2023-11-13T21:25:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809151727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The doc generation becomes kinda goofy when using `fun(param: paramType): returnType` though because it has not been written to handle that case.",
            "created_at": "2023-11-13T21:33:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1809162519",
            "id": 1809162519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5r1aEX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809162519/reactions"
            },
            "updated_at": "2023-11-13T21:33:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809162519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26032/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26032/commits",
    "created_at": "2023-11-13T18:05:38Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26032.diff",
    "draft": false,
    "head": {
        "label": "TheLeoP:pipes_support",
        "ref": "pipes_support",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/TheLeoP/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/TheLeoP/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/TheLeoP/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/TheLeoP/neovim/branches{/branch}",
            "clone_url": "https://github.com/TheLeoP/neovim.git",
            "collaborators_url": "https://api.github.com/repos/TheLeoP/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/TheLeoP/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/TheLeoP/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/TheLeoP/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/TheLeoP/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/TheLeoP/neovim/contributors",
            "created_at": "2023-11-13T17:10:56Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/TheLeoP/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/TheLeoP/neovim/downloads",
            "events_url": "https://api.github.com/repos/TheLeoP/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/TheLeoP/neovim/forks",
            "full_name": "TheLeoP/neovim",
            "git_commits_url": "https://api.github.com/repos/TheLeoP/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/TheLeoP/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/TheLeoP/neovim/git/tags{/sha}",
            "git_url": "git://github.com/TheLeoP/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/TheLeoP/neovim/hooks",
            "html_url": "https://github.com/TheLeoP/neovim",
            "id": 718239443,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/TheLeoP/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/TheLeoP/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/TheLeoP/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/TheLeoP/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/TheLeoP/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/TheLeoP/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/TheLeoP/neovim/merges",
            "milestones_url": "https://api.github.com/repos/TheLeoP/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKs920w",
            "notifications_url": "https://api.github.com/repos/TheLeoP/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/TheLeoP/neovim/pulls{/number}",
            "pushed_at": "2023-11-16T20:49:43Z",
            "releases_url": "https://api.github.com/repos/TheLeoP/neovim/releases{/id}",
            "size": 233287,
            "ssh_url": "git@github.com:TheLeoP/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/TheLeoP/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/TheLeoP/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/TheLeoP/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/TheLeoP/neovim/subscription",
            "svn_url": "https://github.com/TheLeoP/neovim",
            "tags_url": "https://api.github.com/repos/TheLeoP/neovim/tags",
            "teams_url": "https://api.github.com/repos/TheLeoP/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/TheLeoP/neovim/git/trees{/sha}",
            "updated_at": "2023-11-13T17:10:56Z",
            "url": "https://api.github.com/repos/TheLeoP/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a146bbe2c573875b180afee4f70821df1e5c7d69",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
            "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
            "followers_url": "https://api.github.com/users/TheLeoP/followers",
            "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/TheLeoP",
            "id": 53507599,
            "login": "TheLeoP",
            "node_id": "MDQ6VXNlcjUzNTA3NTk5",
            "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
            "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
            "repos_url": "https://api.github.com/users/TheLeoP/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/TheLeoP"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26032",
    "id": 1599338540,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "779ead9c2eb60154831282fea705aa9090299321",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5fU_gs",
    "number": 26032,
    "patch_url": "https://github.com/neovim/neovim/pull/26032.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
            "events_url": "https://api.github.com/users/folke/events{/privacy}",
            "followers_url": "https://api.github.com/users/folke/followers",
            "following_url": "https://api.github.com/users/folke/following{/other_user}",
            "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/folke",
            "id": 292349,
            "login": "folke",
            "node_id": "MDQ6VXNlcjI5MjM0OQ==",
            "organizations_url": "https://api.github.com/users/folke/orgs",
            "received_events_url": "https://api.github.com/users/folke/received_events",
            "repos_url": "https://api.github.com/users/folke/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/folke"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26032/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a146bbe2c573875b180afee4f70821df1e5c7d69",
    "title": "feat(lsp): support connect via named pipes/unix domain sockets",
    "updated_at": "2023-11-16T21:07:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
        "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
        "followers_url": "https://api.github.com/users/TheLeoP/followers",
        "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
        "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TheLeoP",
        "id": 53507599,
        "login": "TheLeoP",
        "node_id": "MDQ6VXNlcjUzNTA3NTk5",
        "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
        "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
        "repos_url": "https://api.github.com/users/TheLeoP/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TheLeoP"
    }
}