{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26032/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26032/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26032"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26032"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26032/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5121,
            "forks_count": 5121,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1744,
            "open_issues_count": 1744,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-09T01:46:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248837,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72546,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-09T01:49:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72546,
            "watchers_count": 72546,
            "web_commit_signoff_required": false
        },
        "sha": "4ee656e4f35766bef4e27c5afbfa8e3d8d74a76c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This would solve #26031.\r\n\r\nThis PR is functional, but (since this is my first PR to the project), I would like to receive feedback regarding things like:\r\n\r\n- ~Should I check possibly nil values, if yes, which is the appropiate way to show this erros to the user (is using `error` preffered over something like `vim.notify` using the error log level?).~\r\n- Suggestions for naming the new function (maybe also renaming `vim.lsp.rpc.connect` to something regarding tcp?)\r\n- ~The policy regarding lua typings (is a specific type like `fun(dispatchers: Dispatchers): StartServer?` prefered over a general one like `function`? Is it the oposit way because of how docs are generated?) (as fas as I can tell, neither [CONTRIBUTING.MD](https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#lua-docstrings) nor [:help dev-doc-lua](https://neovim.io/doc/user/develop.html#dev-lua-doc) talk about this).~\r\n- I'm using `vim.schedule` on the `write` transport as a workaround because, on my tests using Powershell Editor Services, Neovim sended the initialization requets before the pipe connection was stablished. ~I think that, ideally, `public_client(client)` should be returned from inside the callback on `pipe:connect`, but I'm not sure if I'm using the previously existing functions in an unexpected way. (Since I'm using `vim.schedule` here, I also had to add it to the test)~\r\n\r\nEdit:\r\n~I'm also not sure about how to test if the method received is `initialize` because of the `vim.schedule` thing :/~\r\n~Turns out that busted [supports async tests](https://lunarmodules.github.io/busted/#async-tests)~\r\nNevermind, it looks like async test [aren't supported currently](https://github.com/lunarmodules/busted/issues/724)",
    "closed_at": "2024-01-02T09:08:36Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391723865"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391723865"
                }
            },
            "author_association": "MEMBER",
            "body": "Since these types are globally scoped, we should \"namespace\" them (e.g. `vim.rpc.Dispatchers`).",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T21:26:37Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391723865",
            "id": 1391723865,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9AVZ",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 611,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391723865/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391723865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391724398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391724398"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- Create a LSP RPC client factory that connects via named pipes (windows)\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T21:27:16Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391724398",
            "id": 1391724398,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9Adu",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 624,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391724398/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391724398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391726336"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391726336"
                }
            },
            "author_association": "MEMBER",
            "body": "Feels a bit odd to have a \"plural\" type like `Dispatchers`. I find more intuitive to have a singular `vim.rpc.Dispatcher` type and make this parameter a table of those.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T21:29:40Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391726336",
            "id": 1391726336,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9A8A",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 629,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391726336/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391726336",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391727245"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727245"
                }
            },
            "author_association": "MEMBER",
            "body": "In line with my comment about `function` versus `fun`, consider using the latter to include parameter and return types. ",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T21:30:47Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391727245",
            "id": 1391727245,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9BKN",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 614,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727245/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391727770"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727770"
                }
            },
            "author_association": "MEMBER",
            "body": "Since this is part of the public API, consider adding descriptions to the parameters/return values.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T21:31:25Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391727770",
            "id": 1391727770,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9BSa",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 629,
            "original_position": 31,
            "original_start_line": 628,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727770/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391727770",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391730820"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391730820"
                }
            },
            "author_association": "MEMBER",
            "body": "Error reporting would be nice, or at least log it to the LSP log file.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T21:34:26Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe = uv.new_pipe(false)\n+    if not pipe then\n+      -- TODO: should an error be reported to the user?",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391730820",
            "id": 1391730820,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9CCE",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 635,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391730820/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391730820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391731616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391731616"
                }
            },
            "author_association": "MEMBER",
            "body": "Should we handle the case where `closing` is `true`? (Might not be possible in theory but wild things happen).",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T21:35:28Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe = uv.new_pipe(false)\n+    if not pipe then\n+      -- TODO: should an error be reported to the user?\n+      return\n+    end\n+    local closing = false\n+    local transport = {\n+      write = vim.schedule_wrap(function(msg)\n+        pipe:write(msg)\n+      end),\n+      is_closing = function()\n+        return closing\n+      end,\n+      terminate = function()\n+        if not closing then",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391731616",
            "id": 1391731616,
            "line": 723,
            "node_id": "PRRC_kwDOAPphoM5S9COg",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 723,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 403,
            "pull_request_review_id": 1728313436,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391731616/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T21:35:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391731616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391775523"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391775523"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I took these types from the [private dispatchers](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp.lua#L1139-L1259) that are passed to this function by `vim.lsp.start_client`. Not all of them share the same signature, so this type can't be an array of `vim.lsp.rpc.Distpacher`, what do you suggest for this case? ",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T22:33:37Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391775523",
            "id": 1391775523,
            "in_reply_to_id": 1391726336,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9M8j",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 629,
            "original_position": 31,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1728394097,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391775523/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T23:15:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391775523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1391797029"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391797029"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It looks like this is [only used to shutdown](https://github.com/TheLeoP/neovim/blob/0590f4d7c885889a721767d75ee60b7cb382f42d/runtime/lua/vim/lsp.lua#L1650-L1659) a LS. Should an error be log if `closing` is true? After a quick overview of [the spec](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#shutdown), I'm not sure about what would be the correct behaviour.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-13T23:06:45Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe = uv.new_pipe(false)\n+    if not pipe then\n+      -- TODO: should an error be reported to the user?\n+      return\n+    end\n+    local closing = false\n+    local transport = {\n+      write = vim.schedule_wrap(function(msg)\n+        pipe:write(msg)\n+      end),\n+      is_closing = function()\n+        return closing\n+      end,\n+      terminate = function()\n+        if not closing then",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1391797029",
            "id": 1391797029,
            "in_reply_to_id": 1391731616,
            "line": 723,
            "node_id": "PRRC_kwDOAPphoM5S9SMl",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 723,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 403,
            "pull_request_review_id": 1728425494,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391797029/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T23:06:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391797029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394258026"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394258026"
                }
            },
            "author_association": "MEMBER",
            "body": "If closing is already true then everything is fine. We don't need to turn a double-close into an error case.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-15T14:12:55Z",
            "diff_hunk": "@@ -608,6 +608,73 @@ function M.connect(host, port)\n   end\n end\n \n+---@class Dispatchers\n+---@field notification function\n+---@field server_request function\n+---@field on_exit function\n+---@field on_error function\n+\n+-- TODO: better name\n+---@class StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing function\n+---@field terminate function\n+\n+--- Create a LSP RPC client factory that connects via named pipes (window)\n+--- or unix domain sockets (unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path  string\n+---@return fun(dispatchers: Dispatchers): StartServer?\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe = uv.new_pipe(false)\n+    if not pipe then\n+      -- TODO: should an error be reported to the user?\n+      return\n+    end\n+    local closing = false\n+    local transport = {\n+      write = vim.schedule_wrap(function(msg)\n+        pipe:write(msg)\n+      end),\n+      is_closing = function()\n+        return closing\n+      end,\n+      terminate = function()\n+        if not closing then",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394258026",
            "id": 1394258026,
            "in_reply_to_id": 1391731616,
            "line": 723,
            "node_id": "PRRC_kwDOAPphoM5TGrBq",
            "original_commit_id": "0590f4d7c885889a721767d75ee60b7cb382f42d",
            "original_line": 723,
            "original_position": 49,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 403,
            "pull_request_review_id": 1732125568,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394258026/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:12:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394258026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394259744"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394259744"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@class vim.lsp.rpc.Client\r\n```\r\n\r\nOr\r\n\r\n```suggestion\r\n---@class vim.lsp.rpc.RPCClient\r\n```\r\n\r\nIt's not starting a server, the `fun:...` would be that. This object is the client part wrapping a socket/uv-handle for the communication with the server.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-15T14:14:17Z",
            "diff_hunk": "@@ -608,6 +619,83 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>)\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.PrivateDispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+-- TODO: better name\n+---@class vim.lsp.rpc.StartServer",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394259744",
            "id": 1394259744,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TGrcg",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 633,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394259744/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:29:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394259744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394265041"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394265041"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@field request fun(method: string, params: table?, callback: fun(err?: lsp.ResponseError, result: any), notify_reply_callback:function?)\r\n```\r\n\r\nIt's usually just `callback`:\r\n\r\n```\r\n↪  rg callback **/*.lua | wc -l\r\n569\r\n```\r\n\r\n\r\n```\r\n↪  rg callbackfun **/*.lua | wc -l\r\n0\r\n```\r\n",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-15T14:18:20Z",
            "diff_hunk": "@@ -608,6 +619,83 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>)\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.PrivateDispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+-- TODO: better name\n+---@class vim.lsp.rpc.StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394265041",
            "id": 1394265041,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TGsvR",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 634,
            "original_position": 45,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394265041/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:28:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394265041",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394268387"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394268387"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd tend to wrap `uv.new_pipe(false)` into an `assert` - that will result in an error with trace for users.\r\nThere is no good way to recover from this and logging it would make it harder for users to figure out what went wrong.\r\n\r\nThen the return type could also change to non-nullable.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-15T14:20:50Z",
            "diff_hunk": "@@ -608,6 +619,83 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>)\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.PrivateDispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+-- TODO: better name\n+---@class vim.lsp.rpc.StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing fun(): boolean\n+---@field terminate fun(): nil\n+\n+--- Create a LSP RPC client factory that connects via named pipes (Windows)\n+--- or unix domain sockets (Unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path string file path of the domain socket (Unix) or name of the named pipe (Windows) to connect to\n+---@return fun(dispatchers: vim.lsp.rpc.PrivateDispatchers): vim.lsp.rpc.StartServer? #function intended to be passed to |vim.lsp.rpc.start_client| or |vim.lsp.start| on the field cmd\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe, err_msg, err_name = uv.new_pipe(false)\n+    if not pipe then\n+      local _ = log.error()\n+        and log.error(\n+          'pipe with name %s could not be opened. Error: %s. Reason: %s',\n+          pipe_path,\n+          err_name,\n+          err_msg\n+        )\n+      return\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394268387",
            "id": 1394268387,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TGtjj",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 658,
            "original_position": 69,
            "original_start_line": 648,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394268387/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-15T14:28:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394268387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394273021"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394273021"
                }
            },
            "author_association": "MEMBER",
            "body": "Could use something like:\r\n\r\n```\r\nlocal tmpfile_new = helpers.tmpname()\r\nos.remove(tmpfile_new)\r\n```\r\n\r\nSee https://github.com/neovim/neovim/blob/d92dd2a0c05148154c353f0e7cd2099b2427308a/test/helpers.lua#L371-L396\r\nIt handles some more cases\r\n",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-15T14:24:18Z",
            "diff_hunk": "@@ -3861,6 +3861,39 @@ describe('LSP', function()\n       ]]\n       eq(result.method, \"initialize\")\n     end)\n+    it('can connect to lsp server via rpc.domain_socket_connect', function()\n+      async()\n+      exec_lua [[\n+        local uv = vim.uv\n+        local SOCK = jit.os == \"Windows\" and \"\\\\\\\\.\\\\\\\\pipe\\\\pipe.test\" or \"/tmp/pipe.test\"",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394273021",
            "id": 1394273021,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TGur9",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 3868,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394273021/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:28:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394273021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394275858"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394275858"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe something like:\r\n\r\n```suggestion\r\nfunction M.connect_to_pipe(pipe_path)\r\n```\r\n\r\nMerging it into `connect` could also be an option, if we change the args to `opts` and distinguish based on the keys. With a `type(opts) == \"table\"` check we could even make it backward compatible (if it is a string, it's a host name)\r\n\r\ncc @justinmk do you have inputs on this? ",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-15T14:26:18Z",
            "diff_hunk": "@@ -608,6 +619,83 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>)\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.PrivateDispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+-- TODO: better name\n+---@class vim.lsp.rpc.StartServer\n+---@field request fun(method: string, params: table?, callbackfun: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing fun(): boolean\n+---@field terminate fun(): nil\n+\n+--- Create a LSP RPC client factory that connects via named pipes (Windows)\n+--- or unix domain sockets (Unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path string file path of the domain socket (Unix) or name of the named pipe (Windows) to connect to\n+---@return fun(dispatchers: vim.lsp.rpc.PrivateDispatchers): vim.lsp.rpc.StartServer? #function intended to be passed to |vim.lsp.rpc.start_client| or |vim.lsp.start| on the field cmd\n+function M.domain_socket_connect(pipe_path)",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394275858",
            "id": 1394275858,
            "line": 709,
            "node_id": "PRRC_kwDOAPphoM5TGvYS",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 709,
            "original_position": 56,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 389,
            "pull_request_review_id": 1732128508,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394275858/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T14:28:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394275858",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394475724"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394475724"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks. Do you know if there is something similar for named pipes on Windows? Because they aren't file paths. Or would it be ok to leave the hardcoded pipe name for windows?",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-15T16:43:13Z",
            "diff_hunk": "@@ -3861,6 +3861,39 @@ describe('LSP', function()\n       ]]\n       eq(result.method, \"initialize\")\n     end)\n+    it('can connect to lsp server via rpc.domain_socket_connect', function()\n+      async()\n+      exec_lua [[\n+        local uv = vim.uv\n+        local SOCK = jit.os == \"Windows\" and \"\\\\\\\\.\\\\\\\\pipe\\\\pipe.test\" or \"/tmp/pipe.test\"",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394475724",
            "id": 1394475724,
            "in_reply_to_id": 1394273021,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5THgLM",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 3868,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1732467053,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394475724/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T16:43:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394475724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1394491269"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394491269"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not aware of anything like that. I guess it's okay to leave it hardcoded.\r\nIt's also possible that you'll have to delete the file after calling tmpname to ensure it doesn't exist - to only use it as a means to claim the path in an appropriate location",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-15T16:55:55Z",
            "diff_hunk": "@@ -3861,6 +3861,39 @@ describe('LSP', function()\n       ]]\n       eq(result.method, \"initialize\")\n     end)\n+    it('can connect to lsp server via rpc.domain_socket_connect', function()\n+      async()\n+      exec_lua [[\n+        local uv = vim.uv\n+        local SOCK = jit.os == \"Windows\" and \"\\\\\\\\.\\\\\\\\pipe\\\\pipe.test\" or \"/tmp/pipe.test\"",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1394491269",
            "id": 1394491269,
            "in_reply_to_id": 1394273021,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5THj-F",
            "original_commit_id": "112e13b37cecbc3126b6afe4b46edb97bcc6028a",
            "original_line": 3868,
            "original_position": 8,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1732491378,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394491269/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-15T16:55:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1394491269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1403633352"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403633352"
                }
            },
            "author_association": "MEMBER",
            "body": "In other places `params` is of type `table?`. Is there a reason why we chose `any` here?",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-23T17:40:02Z",
            "diff_hunk": "@@ -262,15 +286,18 @@ function Client:encode_and_send(payload)\n   if self.transport.is_closing() then\n     return false\n   end\n-  local encoded = vim.json.encode(payload)\n+  local encoded = assert(\n+    vim.json.encode(payload),\n+    string.format(\"Couldn't encode payload '%s'\", vim.inspect(payload))\n+  )\n   self.transport.write(format_message_with_content_length(encoded))\n   return true\n end\n \n ---@private\n --- Sends a notification to the LSP server.\n ---@param method (string) The invoked LSP method\n----@param params (any): Parameters for the invoked LSP method\n+---@param params (any) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1403633352",
            "id": 1403633352,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tqb7I",
            "original_commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "original_line": 317,
            "original_position": 193,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1746858089,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403633352/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-23T17:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403633352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1403635029"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403635029"
                }
            },
            "author_association": "MEMBER",
            "body": "Thought this was a boolean or nil.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-23T17:42:55Z",
            "diff_hunk": "@@ -608,23 +664,96 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>):nil, vim.lsp.rpc.RpcError?\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.Dispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+---@class vim.lsp.rpc.PublicRpcClient\n+---@field request fun(method: string, params: table?, callback: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing fun(): boolean\n+---@field terminate fun(): nil\n+\n+--- Create a LSP RPC client factory that connects via named pipes (Windows)\n+--- or unix domain sockets (Unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path string file path of the domain socket (Unix) or name of the named pipe (Windows) to connect to\n+---@return fun(dispatchers: vim.lsp.rpc.Dispatchers): vim.lsp.rpc.PublicRpcClient #function intended to be passed to |vim.lsp.rpc.start_client| or |vim.lsp.start| on the field cmd\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe =\n+      assert(uv.new_pipe(false), string.format('pipe with name %s could not be opened.', pipe_path))\n+    local closing = false\n+    local transport = {\n+      write = vim.schedule_wrap(function(msg)\n+        pipe:write(msg)\n+      end),\n+      is_closing = function()\n+        return closing\n+      end,\n+      terminate = function()\n+        if not closing then\n+          closing = true\n+          pipe:shutdown()\n+          pipe:close()\n+          dispatchers.on_exit(0, 0)\n+        end\n+      end,\n+    }\n+    local client = new_client(dispatchers, transport)\n+    pipe:connect(pipe_path, function(err)\n+      if err then\n+        vim.schedule(function()\n+          vim.notify(\n+            string.format('Could not connect to :%s, reason: %s', pipe_path, vim.inspect(err)),\n+            vim.log.levels.WARN\n+          )\n+        end)\n+        return\n+      end\n+      local handle_body = function(body)\n+        client:handle_body(body)\n+      end\n+      pipe:read_start(M.create_read_loop(handle_body, transport.terminate, function(read_err)\n+        client:on_error(M.client_errors.READ_ERROR, read_err)\n+      end))\n+    end)\n+\n+    return public_client(client)\n+  end\n+end\n+\n+---@class vim.lsp.rpc.ExtraSpawnParams\n+---@field cwd? string Working directory for the LSP server process\n+---@field detached? boolean Detach the LSP server process from the current process\n+---@field env? table<string,string> Additional environment variables for LSP server process. See |vim.system|\n+\n --- Starts an LSP server process and create an LSP RPC client object to\n --- interact with it. Communication with the spawned process happens via stdio. For\n --- communication via TCP, spawn a process manually and use |vim.lsp.rpc.connect()|\n ---\n ---@param cmd (string) Command to start the LSP server.\n----@param cmd_args (table) List of additional string arguments to pass to {cmd}.\n----@param dispatchers table|nil Dispatchers for LSP message types. Valid\n+---@param cmd_args (string[]) List of additional string arguments to pass to {cmd}.\n+---@param dispatchers vim.lsp.rpc.Dispatchers? Dispatchers for LSP message types. Valid\n ---dispatcher names are:\n --- - `\"notification\"`\n --- - `\"server_request\"`\n --- - `\"on_error\"`\n --- - `\"on_exit\"`\n----@param extra_spawn_params table|nil Additional context for the LSP\n+---@param extra_spawn_params vim.lsp.rpc.ExtraSpawnParams? Additional context for the LSP\n --- server process. May contain:\n --- - {cwd} (string) Working directory for the LSP server process\n+--- - {detached} (boolean) Detach the LSP server process from the current process",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1403635029",
            "id": 1403635029,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TqcVV",
            "original_commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "original_line": 754,
            "original_position": 442,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1746858089,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403635029/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-23T17:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403635029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1403635362"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403635362"
                }
            },
            "author_association": "MEMBER",
            "body": "Might be a good idea to mention what `detached` defaults to when `nil`.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-23T17:43:32Z",
            "diff_hunk": "@@ -608,23 +664,96 @@ function M.connect(host, port)\n   end\n end\n \n+---@alias vim.lsp.rpc.Dispatcher fun(method: string, params: table<string, any>):nil, vim.lsp.rpc.RpcError?\n+---@alias vim.lsp.rpc.on_error fun(code: integer, ...: any)\n+---@alias vim.lsp.rpc.on_exit fun(code: integer, signal: integer)\n+\n+---@class vim.lsp.rpc.Dispatchers\n+---@field notification vim.lsp.rpc.Dispatcher\n+---@field server_request vim.lsp.rpc.Dispatcher\n+---@field on_exit vim.lsp.rpc.on_error\n+---@field on_error vim.lsp.rpc.on_exit\n+\n+---@class vim.lsp.rpc.PublicRpcClient\n+---@field request fun(method: string, params: table?, callback: fun(err: lsp.ResponseError | nil, result: any), notify_reply_callback:function?)\n+---@field notify fun(method: string, params: any)\n+---@field is_closing fun(): boolean\n+---@field terminate fun(): nil\n+\n+--- Create a LSP RPC client factory that connects via named pipes (Windows)\n+--- or unix domain sockets (Unix) to the given pipe_path (file path on\n+--- Unix and name on Windows)\n+---\n+---@param pipe_path string file path of the domain socket (Unix) or name of the named pipe (Windows) to connect to\n+---@return fun(dispatchers: vim.lsp.rpc.Dispatchers): vim.lsp.rpc.PublicRpcClient #function intended to be passed to |vim.lsp.rpc.start_client| or |vim.lsp.start| on the field cmd\n+function M.domain_socket_connect(pipe_path)\n+  return function(dispatchers)\n+    dispatchers = merge_dispatchers(dispatchers)\n+    local pipe =\n+      assert(uv.new_pipe(false), string.format('pipe with name %s could not be opened.', pipe_path))\n+    local closing = false\n+    local transport = {\n+      write = vim.schedule_wrap(function(msg)\n+        pipe:write(msg)\n+      end),\n+      is_closing = function()\n+        return closing\n+      end,\n+      terminate = function()\n+        if not closing then\n+          closing = true\n+          pipe:shutdown()\n+          pipe:close()\n+          dispatchers.on_exit(0, 0)\n+        end\n+      end,\n+    }\n+    local client = new_client(dispatchers, transport)\n+    pipe:connect(pipe_path, function(err)\n+      if err then\n+        vim.schedule(function()\n+          vim.notify(\n+            string.format('Could not connect to :%s, reason: %s', pipe_path, vim.inspect(err)),\n+            vim.log.levels.WARN\n+          )\n+        end)\n+        return\n+      end\n+      local handle_body = function(body)\n+        client:handle_body(body)\n+      end\n+      pipe:read_start(M.create_read_loop(handle_body, transport.terminate, function(read_err)\n+        client:on_error(M.client_errors.READ_ERROR, read_err)\n+      end))\n+    end)\n+\n+    return public_client(client)\n+  end\n+end\n+\n+---@class vim.lsp.rpc.ExtraSpawnParams\n+---@field cwd? string Working directory for the LSP server process\n+---@field detached? boolean Detach the LSP server process from the current process",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1403635362",
            "id": 1403635362,
            "line": 756,
            "node_id": "PRRC_kwDOAPphoM5Tqcai",
            "original_commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "original_line": 756,
            "original_position": 421,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 436,
            "pull_request_review_id": 1746858089,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403635362/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-23T17:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403635362",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1404424730"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404424730"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This seems to have been changed on #21753 because `vim.json.encode` receives `any` as a parameter. Should other usages of `params` be updated?",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-24T14:42:03Z",
            "diff_hunk": "@@ -262,15 +286,18 @@ function Client:encode_and_send(payload)\n   if self.transport.is_closing() then\n     return false\n   end\n-  local encoded = vim.json.encode(payload)\n+  local encoded = assert(\n+    vim.json.encode(payload),\n+    string.format(\"Couldn't encode payload '%s'\", vim.inspect(payload))\n+  )\n   self.transport.write(format_message_with_content_length(encoded))\n   return true\n end\n \n ---@private\n --- Sends a notification to the LSP server.\n ---@param method (string) The invoked LSP method\n----@param params (any): Parameters for the invoked LSP method\n+---@param params (any) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1404424730",
            "id": 1404424730,
            "in_reply_to_id": 1403633352,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TtdIa",
            "original_commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "original_line": 317,
            "original_position": 193,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1748063225,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404424730/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-24T14:42:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404424730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1404477802"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404477802"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    unix domain sockets (Unix) via |vim.lsp.rpc.domain_socket_connect()|.\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-24T15:40:19Z",
            "diff_hunk": "@@ -147,6 +147,8 @@ The following new APIs and features were added.\n     capabilities and static `server_capabilities`.\n   • Added a new `anchor_bias` option to |lsp-handlers| to aid in positioning of\n     floating windows.\n+  • Added support for connecting to servers using named pipes (Windows) or\n+    unix domain sockets (Unix) via |vim.lsp.rpc.domain_socket_connect()|",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1404477802",
            "id": 1404477802,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TtqFq",
            "original_commit_id": "7ea639a26a5d860a03f7b3938610338b7cc5ccfa",
            "original_line": 151,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1748145428,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404477802/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-24T15:40:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404477802",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1404479199"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404479199"
                }
            },
            "author_association": "MEMBER",
            "body": "And you actually need to add a doc entry for that function (you need to generate to docs via `./scripts/gen_vimdoc.py`).",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-24T15:42:08Z",
            "diff_hunk": "@@ -147,6 +147,8 @@ The following new APIs and features were added.\n     capabilities and static `server_capabilities`.\n   • Added a new `anchor_bias` option to |lsp-handlers| to aid in positioning of\n     floating windows.\n+  • Added support for connecting to servers using named pipes (Windows) or\n+    unix domain sockets (Unix) via |vim.lsp.rpc.domain_socket_connect()|",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1404479199",
            "id": 1404479199,
            "in_reply_to_id": 1404477802,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Ttqbf",
            "original_commit_id": "7ea639a26a5d860a03f7b3938610338b7cc5ccfa",
            "original_line": 151,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1748147579,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404479199/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-24T15:42:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404479199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1404571091"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404571091"
                }
            },
            "author_association": "MEMBER",
            "body": "I see. Neh, leave it as it. Don't want to add noisy changes to this PR.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-11-24T18:02:46Z",
            "diff_hunk": "@@ -262,15 +286,18 @@ function Client:encode_and_send(payload)\n   if self.transport.is_closing() then\n     return false\n   end\n-  local encoded = vim.json.encode(payload)\n+  local encoded = assert(\n+    vim.json.encode(payload),\n+    string.format(\"Couldn't encode payload '%s'\", vim.inspect(payload))\n+  )\n   self.transport.write(format_message_with_content_length(encoded))\n   return true\n end\n \n ---@private\n --- Sends a notification to the LSP server.\n ---@param method (string) The invoked LSP method\n----@param params (any): Parameters for the invoked LSP method\n+---@param params (any) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1404571091",
            "id": 1404571091,
            "in_reply_to_id": 1403633352,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TuA3T",
            "original_commit_id": "a146bbe2c573875b180afee4f70821df1e5c7d69",
            "original_line": 317,
            "original_position": 193,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1748290744,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404571091/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-24T18:02:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404571091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435479593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479593"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@param params (table|nil) Parameters for the invoked LSP method\r\n```\r\n\r\nAnd for other many places: see https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#lua-docstrings",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:02:44Z",
            "diff_hunk": "@@ -317,10 +339,10 @@ end\n --- Sends a request to the LSP server and runs {callback} upon response.\n ---\n ---@param method (string) The invoked LSP method\n----@param params (table|nil) Parameters for the invoked LSP method\n----@param callback fun(err: lsp.ResponseError|nil, result: any) Callback to invoke\n----@param notify_reply_callback (function|nil) Callback to invoke as soon as a request is no longer pending\n----@return boolean success, integer|nil request_id true, request_id if request could be sent, `false` if not\n+---@param params (table?) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435479593",
            "id": 1435479593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj64p",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 342,
            "original_position": 185,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479593/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435479907"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479907"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@return (string) The formatted error message\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:03:53Z",
            "diff_hunk": "@@ -149,7 +160,7 @@ M.client_errors = vim.tbl_add_reverse_lookup(M.client_errors)\n --- Constructs an error message from an LSP error object.\n ---\n ---@param err (table) The error object\n----@returns (string) The formatted error message\n+---@return (string) #The formatted error message",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435479907",
            "id": 1435479907,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj69j",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 163,
            "original_position": 55,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479907/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479907",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435479992"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479992"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@return string string containing encoded message and `Content-Length` attribute\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:04:10Z",
            "diff_hunk": "@@ -16,7 +16,7 @@ end\n --- Embeds the given string into a table and correctly computes `Content-Length`.\n ---\n ---@param encoded_message (string)\n----@return string containing encoded message and `Content-Length` attribute\n+---@return string #string containing encoded message and `Content-Length` attribute",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435479992",
            "id": 1435479992,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj6-4",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 19,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479992/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435479992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480146"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480146"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        vim.lsp.rpc.PublicRpcClient|nil Client RPC object, with these methods:\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:04:52Z",
            "diff_hunk": "@@ -2143,23 +2161,26 @@ start({cmd}, {cmd_args}, {dispatchers}, {extra_spawn_params})\n \n     Parameters: ~\n       • {cmd}                 (string) Command to start the LSP server.\n-      • {cmd_args}            (table) List of additional string arguments to\n-                              pass to {cmd}.\n-      • {dispatchers}         (table|nil) Dispatchers for LSP message types.\n-                              Valid dispatcher names are:\n+      • {cmd_args}            (string[]) List of additional string arguments\n+                              to pass to {cmd}.\n+      • {dispatchers}         vim.lsp.rpc.Dispatchers ? Dispatchers for LSP message types. Valid\n+                              dispatcher names are:\n                               • `\"notification\"`\n                               • `\"server_request\"`\n                               • `\"on_error\"`\n                               • `\"on_exit\"`\n-      • {extra_spawn_params}  (table|nil) Additional context for the LSP\n-                              server process. May contain:\n+      • {extra_spawn_params}  vim.lsp.rpc.ExtraSpawnParams ? Additional context for the LSP server process.\n+                              May contain:\n                               • {cwd} (string) Working directory for the LSP\n                                 server process\n-                              • {env} (table) Additional environment variables\n-                                for LSP server process\n+                              • {detached} (boolean?) Detach the LSP server\n+                                process from the current process. Defaults to\n+                                false on Windows and true otherwise.\n+                              • {env} (table?) Additional environment\n+                                variables for LSP server process\n \n     Return: ~\n-        RpcClientPublic|nil Client RPC object, with these methods:\n+        vim.lsp.rpc.PublicRpcClient ?|nil #Client RPC object, with these methods:",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480146",
            "id": 1435480146,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj7BS",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2183,
            "original_position": 115,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480146/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480183"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480183"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      • {dispatchers}         vim.lsp.rpc.Dispatchers? Dispatchers for LSP message types. Valid\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:05:02Z",
            "diff_hunk": "@@ -2143,23 +2161,26 @@ start({cmd}, {cmd_args}, {dispatchers}, {extra_spawn_params})\n \n     Parameters: ~\n       • {cmd}                 (string) Command to start the LSP server.\n-      • {cmd_args}            (table) List of additional string arguments to\n-                              pass to {cmd}.\n-      • {dispatchers}         (table|nil) Dispatchers for LSP message types.\n-                              Valid dispatcher names are:\n+      • {cmd_args}            (string[]) List of additional string arguments\n+                              to pass to {cmd}.\n+      • {dispatchers}         vim.lsp.rpc.Dispatchers ? Dispatchers for LSP message types. Valid",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480183",
            "id": 1435480183,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj7B3",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2166,
            "original_position": 93,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480183/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480239"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480239"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      • {extra_spawn_params}  vim.lsp.rpc.ExtraSpawnParams? Additional context for the LSP server process.\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:05:16Z",
            "diff_hunk": "@@ -2143,23 +2161,26 @@ start({cmd}, {cmd_args}, {dispatchers}, {extra_spawn_params})\n \n     Parameters: ~\n       • {cmd}                 (string) Command to start the LSP server.\n-      • {cmd_args}            (table) List of additional string arguments to\n-                              pass to {cmd}.\n-      • {dispatchers}         (table|nil) Dispatchers for LSP message types.\n-                              Valid dispatcher names are:\n+      • {cmd_args}            (string[]) List of additional string arguments\n+                              to pass to {cmd}.\n+      • {dispatchers}         vim.lsp.rpc.Dispatchers ? Dispatchers for LSP message types. Valid\n+                              dispatcher names are:\n                               • `\"notification\"`\n                               • `\"server_request\"`\n                               • `\"on_error\"`\n                               • `\"on_exit\"`\n-      • {extra_spawn_params}  (table|nil) Additional context for the LSP\n-                              server process. May contain:\n+      • {extra_spawn_params}  vim.lsp.rpc.ExtraSpawnParams ? Additional context for the LSP server process.",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480239",
            "id": 1435480239,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj7Cv",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2172,
            "original_position": 101,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480239/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480239",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480310"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480310"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        (string) The formatted error message\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:05:31Z",
            "diff_hunk": "@@ -2095,14 +2110,14 @@ format_rpc_error({err})                       *vim.lsp.rpc.format_rpc_error()*\n       • {err}  (table) The error object\n \n     Return: ~\n-        (string) The formatted error message\n+        (string) #The formatted error message",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480310",
            "id": 1435480310,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj7D2",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2113,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480310/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480937"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480937"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@field code integer RPC error code defined by JSON RPC, see `vim.lsp.protocol.ErrorCodes`\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:08:09Z",
            "diff_hunk": "@@ -176,11 +187,17 @@ function M.format_rpc_error(err)\n   return table.concat(message_parts, ' ')\n end\n \n+---@class vim.lsp.rpc.RpcError\n+---@field code integer RPC error code defined by JSON RPC",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435480937",
            "id": 1435480937,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj7Np",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 191,
            "original_position": 64,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480937/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435480937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435481450"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435481450"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  ---@param params (table|nil) Parameters for the invoked LSP method\r\n```",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:10:08Z",
            "diff_hunk": "@@ -540,17 +585,17 @@ local function public_client(client)\n   --- Sends a request to the LSP server and runs {callback} upon response.\n   ---\n   ---@param method (string) The invoked LSP method\n-  ---@param params (table|nil) Parameters for the invoked LSP method\n+  ---@param params (table?) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435481450",
            "id": 1435481450,
            "line": 601,
            "node_id": "PRRC_kwDOAPphoM5Vj7Vq",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 601,
            "original_position": 266,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 332,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435481450/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435481450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435481511"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435481511"
                }
            },
            "author_association": "MEMBER",
            "body": "(+ many other places below)",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:10:23Z",
            "diff_hunk": "@@ -540,17 +585,17 @@ local function public_client(client)\n   --- Sends a request to the LSP server and runs {callback} upon response.\n   ---\n   ---@param method (string) The invoked LSP method\n-  ---@param params (table|nil) Parameters for the invoked LSP method\n+  ---@param params (table?) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435481511",
            "id": 1435481511,
            "in_reply_to_id": 1435481450,
            "line": 601,
            "node_id": "PRRC_kwDOAPphoM5Vj7Wn",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 601,
            "original_position": 266,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": 332,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435481511/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435481511",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435493336"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435493336"
                }
            },
            "author_association": "MEMBER",
            "body": "Also many other places where unnecessary `#` are placed.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T05:55:31Z",
            "diff_hunk": "@@ -2095,14 +2110,14 @@ format_rpc_error({err})                       *vim.lsp.rpc.format_rpc_error()*\n       • {err}  (table) The error object\n \n     Return: ~\n-        (string) The formatted error message\n+        (string) #The formatted error message",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435493336",
            "id": 1435493336,
            "in_reply_to_id": 1435480310,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj-PY",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2113,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795399583,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435493336/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T05:57:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435493336",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435496625"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435496625"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The `#` is needed here (see [luals annotations documentation](https://github.com/LuaLS/lua-language-server/wiki/Annotations#return)) because return is expecting a name for the returned value and the `#` stops it from treating `The` as that name",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:08:54Z",
            "diff_hunk": "@@ -149,7 +160,7 @@ M.client_errors = vim.tbl_add_reverse_lookup(M.client_errors)\n --- Constructs an error message from an LSP error object.\n ---\n ---@param err (table) The error object\n----@returns (string) The formatted error message\n+---@return (string) #The formatted error message",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435496625",
            "id": 1435496625,
            "in_reply_to_id": 1435479907,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj_Cx",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 163,
            "original_position": 55,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795404000,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435496625/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:08:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435496625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435496986"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435496986"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I thought that using this syntax [for optional values](https://github.com/LuaLS/lua-language-server/wiki/Annotations#param) was preffered over the old `|nil`. Is it not?",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:10:06Z",
            "diff_hunk": "@@ -317,10 +339,10 @@ end\n --- Sends a request to the LSP server and runs {callback} upon response.\n ---\n ---@param method (string) The invoked LSP method\n----@param params (table|nil) Parameters for the invoked LSP method\n----@param callback fun(err: lsp.ResponseError|nil, result: any) Callback to invoke\n----@param notify_reply_callback (function|nil) Callback to invoke as soon as a request is no longer pending\n----@return boolean success, integer|nil request_id true, request_id if request could be sent, `false` if not\n+---@param params (table?) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435496986",
            "id": 1435496986,
            "in_reply_to_id": 1435479593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj_Ia",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 342,
            "original_position": 185,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795404085,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435496986/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:10:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435496986",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435497373"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435497373"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is the autogenerated text by `scripts/gen_vimdoc.py`, I don't think I can simply change it like that",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:11:41Z",
            "diff_hunk": "@@ -2143,23 +2161,26 @@ start({cmd}, {cmd_args}, {dispatchers}, {extra_spawn_params})\n \n     Parameters: ~\n       • {cmd}                 (string) Command to start the LSP server.\n-      • {cmd_args}            (table) List of additional string arguments to\n-                              pass to {cmd}.\n-      • {dispatchers}         (table|nil) Dispatchers for LSP message types.\n-                              Valid dispatcher names are:\n+      • {cmd_args}            (string[]) List of additional string arguments\n+                              to pass to {cmd}.\n+      • {dispatchers}         vim.lsp.rpc.Dispatchers ? Dispatchers for LSP message types. Valid",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435497373",
            "id": 1435497373,
            "in_reply_to_id": 1435480183,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj_Od",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2166,
            "original_position": 93,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795404197,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435497373/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:11:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435497373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435497758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435497758"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I had a similar comment earlier, but I deleted it since there is no help tag for `vim.lsp.protocol.ErrorCodes`. Is it ok to include it?",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:13:16Z",
            "diff_hunk": "@@ -176,11 +187,17 @@ function M.format_rpc_error(err)\n   return table.concat(message_parts, ' ')\n end\n \n+---@class vim.lsp.rpc.RpcError\n+---@field code integer RPC error code defined by JSON RPC",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435497758",
            "id": 1435497758,
            "in_reply_to_id": 1435480937,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vj_Ue",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 191,
            "original_position": 64,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795404298,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435497758/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:13:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435497758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435503713"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435503713"
                }
            },
            "author_association": "MEMBER",
            "body": "Throughout neovim codebase, `table|nil` is used instead of `table?` But if you meant an optional parameter, it should be `@param params? table` (without nil).",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:39:12Z",
            "diff_hunk": "@@ -317,10 +339,10 @@ end\n --- Sends a request to the LSP server and runs {callback} upon response.\n ---\n ---@param method (string) The invoked LSP method\n----@param params (table|nil) Parameters for the invoked LSP method\n----@param callback fun(err: lsp.ResponseError|nil, result: any) Callback to invoke\n----@param notify_reply_callback (function|nil) Callback to invoke as soon as a request is no longer pending\n----@return boolean success, integer|nil request_id true, request_id if request could be sent, `false` if not\n+---@param params (table?) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435503713",
            "id": 1435503713,
            "in_reply_to_id": 1435479593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkAxh",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 342,
            "original_position": 185,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795406003,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435503713/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:39:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435503713",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435505130"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505130"
                }
            },
            "author_association": "MEMBER",
            "body": "Right, we don't have such a helptag (`|...|`), but as a reference to lua expression would be fine.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:44:57Z",
            "diff_hunk": "@@ -176,11 +187,17 @@ function M.format_rpc_error(err)\n   return table.concat(message_parts, ' ')\n end\n \n+---@class vim.lsp.rpc.RpcError\n+---@field code integer RPC error code defined by JSON RPC",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435505130",
            "id": 1435505130,
            "in_reply_to_id": 1435480937,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkBHq",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 191,
            "original_position": 64,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795406415,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505130/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:44:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435505180"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505180"
                }
            },
            "author_association": "MEMBER",
            "body": "I see. then please never mind.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:45:09Z",
            "diff_hunk": "@@ -2143,23 +2161,26 @@ start({cmd}, {cmd_args}, {dispatchers}, {extra_spawn_params})\n \n     Parameters: ~\n       • {cmd}                 (string) Command to start the LSP server.\n-      • {cmd_args}            (table) List of additional string arguments to\n-                              pass to {cmd}.\n-      • {dispatchers}         (table|nil) Dispatchers for LSP message types.\n-                              Valid dispatcher names are:\n+      • {cmd_args}            (string[]) List of additional string arguments\n+                              to pass to {cmd}.\n+      • {dispatchers}         vim.lsp.rpc.Dispatchers ? Dispatchers for LSP message types. Valid",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435505180",
            "id": 1435505180,
            "in_reply_to_id": 1435480183,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkBIc",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2166,
            "original_position": 93,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795406430,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505180/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:45:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435505313"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505313"
                }
            },
            "author_association": "MEMBER",
            "body": "Then we can do something like `@return string The formatted error message`. Here `string` is a valid lua return type.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:45:51Z",
            "diff_hunk": "@@ -149,7 +160,7 @@ M.client_errors = vim.tbl_add_reverse_lookup(M.client_errors)\n --- Constructs an error message from an LSP error object.\n ---\n ---@param err (table) The error object\n----@returns (string) The formatted error message\n+---@return (string) #The formatted error message",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435505313",
            "id": 1435505313,
            "in_reply_to_id": 1435479907,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkBKh",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 163,
            "original_position": 55,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795406484,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505313/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:45:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435505313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435508379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435508379"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The problem is not the type, but the fact that there is no name for the returned value. To omit the `#`, it should be something like `---@return string error_msg The error message returned`",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T06:59:16Z",
            "diff_hunk": "@@ -149,7 +160,7 @@ M.client_errors = vim.tbl_add_reverse_lookup(M.client_errors)\n --- Constructs an error message from an LSP error object.\n ---\n ---@param err (table) The error object\n----@returns (string) The formatted error message\n+---@return (string) #The formatted error message",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435508379",
            "id": 1435508379,
            "in_reply_to_id": 1435479907,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkB6b",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 163,
            "original_position": 55,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795407602,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435508379/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T06:59:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435508379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435565285"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435565285"
                }
            },
            "author_association": "MEMBER",
            "body": "> Throughout neovim codebase, table|nil is used instead of table?\r\n\r\nRemember that Neovim's codebase is vast and written over years. Guidance can change without wanting to add churn by rewriting all old code. Nevertheless, new(ly touched) code should follow current guidance (`:h develop`; I don't think we've explicitly formalized this specific aspect -- @lewis6991 @mfussenegger @gpanders @MariaSolOs ?).\r\n\r\nIn this specific case `@param params? table` is indeed correct (no parens!)",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T10:46:45Z",
            "diff_hunk": "@@ -317,10 +339,10 @@ end\n --- Sends a request to the LSP server and runs {callback} upon response.\n ---\n ---@param method (string) The invoked LSP method\n----@param params (table|nil) Parameters for the invoked LSP method\n----@param callback fun(err: lsp.ResponseError|nil, result: any) Callback to invoke\n----@param notify_reply_callback (function|nil) Callback to invoke as soon as a request is no longer pending\n----@return boolean success, integer|nil request_id true, request_id if request could be sent, `false` if not\n+---@param params (table?) Parameters for the invoked LSP method",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435565285",
            "id": 1435565285,
            "in_reply_to_id": 1435479593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkPzl",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 342,
            "original_position": 185,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795426101,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435565285/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T10:47:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435565285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435573126"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573126"
                }
            },
            "author_association": "MEMBER",
            "body": "The `#` is fine; the parens are not (they are added by the `gen_vimdoc` script in the docs).",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T11:20:49Z",
            "diff_hunk": "@@ -149,7 +160,7 @@ M.client_errors = vim.tbl_add_reverse_lookup(M.client_errors)\n --- Constructs an error message from an LSP error object.\n ---\n ---@param err (table) The error object\n----@returns (string) The formatted error message\n+---@return (string) #The formatted error message",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435573126",
            "id": 1435573126,
            "in_reply_to_id": 1435479907,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkRuG",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 163,
            "original_position": 55,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795428607,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573126/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T11:20:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435573278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573278"
                }
            },
            "author_association": "MEMBER",
            "body": "`@return string # encoded message and `Content-Length` attribute`",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T11:21:23Z",
            "diff_hunk": "@@ -16,7 +16,7 @@ end\n --- Embeds the given string into a table and correctly computes `Content-Length`.\n ---\n ---@param encoded_message (string)\n----@return string containing encoded message and `Content-Length` attribute\n+---@return string #string containing encoded message and `Content-Length` attribute",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435573278",
            "id": 1435573278,
            "in_reply_to_id": 1435479992,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkRwe",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 19,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795428649,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573278/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T11:21:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435573425"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573425"
                }
            },
            "author_association": "MEMBER",
            "body": "those are generated. (I, too, often fall for the fact that the generated docs are first in the list of files and make my comments there...)",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T11:22:04Z",
            "diff_hunk": "@@ -2143,23 +2161,26 @@ start({cmd}, {cmd_args}, {dispatchers}, {extra_spawn_params})\n \n     Parameters: ~\n       • {cmd}                 (string) Command to start the LSP server.\n-      • {cmd_args}            (table) List of additional string arguments to\n-                              pass to {cmd}.\n-      • {dispatchers}         (table|nil) Dispatchers for LSP message types.\n-                              Valid dispatcher names are:\n+      • {cmd_args}            (string[]) List of additional string arguments\n+                              to pass to {cmd}.\n+      • {dispatchers}         vim.lsp.rpc.Dispatchers ? Dispatchers for LSP message types. Valid\n+                              dispatcher names are:\n                               • `\"notification\"`\n                               • `\"server_request\"`\n                               • `\"on_error\"`\n                               • `\"on_exit\"`\n-      • {extra_spawn_params}  (table|nil) Additional context for the LSP\n-                              server process. May contain:\n+      • {extra_spawn_params}  vim.lsp.rpc.ExtraSpawnParams ? Additional context for the LSP server process.\n+                              May contain:\n                               • {cwd} (string) Working directory for the LSP\n                                 server process\n-                              • {env} (table) Additional environment variables\n-                                for LSP server process\n+                              • {detached} (boolean?) Detach the LSP server\n+                                process from the current process. Defaults to\n+                                false on Windows and true otherwise.\n+                              • {env} (table?) Additional environment\n+                                variables for LSP server process\n \n     Return: ~\n-        RpcClientPublic|nil Client RPC object, with these methods:\n+        vim.lsp.rpc.PublicRpcClient ?|nil #Client RPC object, with these methods:",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435573425",
            "id": 1435573425,
            "in_reply_to_id": 1435480146,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkRyx",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2183,
            "original_position": 115,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795428704,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573425/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T11:22:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573425",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435573553"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573553"
                }
            },
            "author_association": "MEMBER",
            "body": "Worth investing if the original docs can be tweaked, though, to avoid that.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T11:22:33Z",
            "diff_hunk": "@@ -2143,23 +2161,26 @@ start({cmd}, {cmd_args}, {dispatchers}, {extra_spawn_params})\n \n     Parameters: ~\n       • {cmd}                 (string) Command to start the LSP server.\n-      • {cmd_args}            (table) List of additional string arguments to\n-                              pass to {cmd}.\n-      • {dispatchers}         (table|nil) Dispatchers for LSP message types.\n-                              Valid dispatcher names are:\n+      • {cmd_args}            (string[]) List of additional string arguments\n+                              to pass to {cmd}.\n+      • {dispatchers}         vim.lsp.rpc.Dispatchers ? Dispatchers for LSP message types. Valid\n+                              dispatcher names are:\n                               • `\"notification\"`\n                               • `\"server_request\"`\n                               • `\"on_error\"`\n                               • `\"on_exit\"`\n-      • {extra_spawn_params}  (table|nil) Additional context for the LSP\n-                              server process. May contain:\n+      • {extra_spawn_params}  vim.lsp.rpc.ExtraSpawnParams ? Additional context for the LSP server process.\n+                              May contain:\n                               • {cwd} (string) Working directory for the LSP\n                                 server process\n-                              • {env} (table) Additional environment variables\n-                                for LSP server process\n+                              • {detached} (boolean?) Detach the LSP server\n+                                process from the current process. Defaults to\n+                                false on Windows and true otherwise.\n+                              • {env} (table?) Additional environment\n+                                variables for LSP server process\n \n     Return: ~\n-        RpcClientPublic|nil Client RPC object, with these methods:\n+        vim.lsp.rpc.PublicRpcClient ?|nil #Client RPC object, with these methods:",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435573553",
            "id": 1435573553,
            "in_reply_to_id": 1435480146,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkR0x",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 2183,
            "original_position": 115,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1795428749,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573553/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T11:22:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435573553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1435578691"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435578691"
                }
            },
            "author_association": "MEMBER",
            "body": "Since `rpc` is in the name this can be called `vim.lsp.rpc.Client`. Alternatively you could drop `.rpc`.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-23T11:43:43Z",
            "diff_hunk": "@@ -268,14 +287,14 @@ function M.create_read_loop(handle_body, on_no_chunk, on_error)\n   end\n end\n \n----@class RpcClient\n+---@class vim.lsp.rpc.RpcClient\n ---@field message_index integer\n----@field message_callbacks table<integer,function>\n----@field notify_reply_callbacks table<integer,function>\n----@field transport table\n----@field dispatchers table\n+---@field message_callbacks table<integer, function> dict of message_id to callback\n+---@field notify_reply_callbacks table<integer, function> dict of message_id to callback\n+---@field transport vim.lsp.rpc.Transport\n+---@field dispatchers vim.lsp.rpc.Dispatchers\n \n----@class RpcClient\n+---@class vim.lsp.rpc.RpcClient",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1435578691",
            "id": 1435578691,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VkTFD",
            "original_commit_id": "16d1aaac567aed697a9ad35f5378b34151fbfd9e",
            "original_line": 297,
            "original_position": 152,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1795430233,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435578691/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-23T11:43:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1435578691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26032#discussion_r1436218391"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26032"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436218391"
                }
            },
            "author_association": "MEMBER",
            "body": "@TheLeoP you are right, `#` is needed to document a \"unnamed\" return value. But the problem is that, although it's not the scope of this PR, neovim is not currently strictly following the syntax of lua-ls annotations; so the generated vimhelp doc contains weird string (it's a problem of `gen_vimdoc`). We would need a more systematic fix to make luadoc conforming to lua-ls annotations, but in my opinion it'd be good to make the generated documentation doesn't contain weird characters.",
            "commit_id": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
            "created_at": "2023-12-26T03:37:05Z",
            "diff_hunk": "@@ -149,7 +160,7 @@ M.client_errors = vim.tbl_add_reverse_lookup(M.client_errors)\n --- Constructs an error message from an LSP error object.\n ---\n ---@param err (table) The error object\n----@returns (string) The formatted error message\n+---@return (string) #The formatted error message",
            "html_url": "https://github.com/neovim/neovim/pull/26032#discussion_r1436218391",
            "id": 1436218391,
            "in_reply_to_id": 1435479907,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VmvQX",
            "original_commit_id": "9335b2fd3a69ff741c5b1a524f2227b691575663",
            "original_line": 163,
            "original_position": 55,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/rpc.lua",
            "position": null,
            "pull_request_review_id": 1796025778,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436218391/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-26T03:37:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436218391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> The policy regarding lua typings (is a specific type like `fun(dispatchers: Dispatchers): StartServer?` prefered over a general one like `function`?\r\n\r\nThere's nothing written in stone about it, but _personally_ I believe that the more accurate the type annotations, the better (and so I prefer `fun(param: paramType): returnType`).",
            "created_at": "2023-11-13T21:25:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1809151727",
            "id": 1809151727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5r1Xbv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809151727/reactions"
            },
            "updated_at": "2023-11-13T21:25:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809151727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The doc generation becomes kinda goofy when using `fun(param: paramType): returnType` though because it has not been written to handle that case.",
            "created_at": "2023-11-13T21:33:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1809162519",
            "id": 1809162519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5r1aEX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809162519/reactions"
            },
            "updated_at": "2023-11-13T21:33:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1809162519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@TheLeoP could you also add an entry to the news.txt?\r\n\r\n@MariaSolOs Do you have any other inputs on this? Otherwise I'd go ahead and merge this. We can still follow up with renaming the method before it get's released.",
            "created_at": "2023-11-23T16:33:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1824700891",
            "id": 1824700891,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5swrnb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824700891/reactions"
            },
            "updated_at": "2023-11-23T16:33:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824700891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @MariaSolOs Do you have any other inputs on this? Otherwise I'd go ahead and merge this. We can still follow up with renaming the method before it get's released.\r\n\r\nLeft some minor comments but it LGTM.",
            "created_at": "2023-11-23T17:44:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1824772440",
            "id": 1824772440,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5sw9FY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 3,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824772440/reactions"
            },
            "updated_at": "2023-11-23T17:44:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824772440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is the entry on news.txt ok?",
            "created_at": "2023-11-24T15:38:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1825834758",
            "id": 1825834758,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5s1AcG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1825834758/reactions"
            },
            "updated_at": "2023-11-24T15:38:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1825834758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@TheLeoP it looks like some of the test failures are introduced by this PR. Could you take a look? ",
            "created_at": "2023-12-08T16:32:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1847490231",
            "id": 1847490231,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5uHna3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1847490231/reactions"
            },
            "updated_at": "2023-12-08T16:32:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1847490231",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger Sorry, I hadn't realized. I'll look into it.",
            "created_at": "2023-12-08T21:55:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1847890911",
            "id": 1847890911,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5uJJPf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1847890911/reactions"
            },
            "updated_at": "2023-12-08T21:55:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1847890911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@TheLeoP sorry I haven't realized that you had fixed the test failures. Could you resolve the conflicts and then ping me, I'll then merge the PR",
            "created_at": "2023-12-22T11:16:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1867564528",
            "id": 1867564528,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5vUMXw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1867564528/reactions"
            },
            "updated_at": "2023-12-22T11:16:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1867564528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger done :3. The current failling test may have something to do with the fact that I rebased in top of master? Because I dind't touch any c code in this PR",
            "created_at": "2023-12-23T05:45:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1868214378",
            "id": 1868214378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5vWrBq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868214378/reactions"
            },
            "updated_at": "2023-12-23T05:45:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868214378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This looks like a great feature. I've left some minor style suggestion comments. You'll also need to fix linting errors as checked by CI.\r\n\r\nThe link problem is because I used a commit message that is not valid for the CI. Is it possible to squash all the commits into a single commit when merging to handle this? I'm not very well versed with git, so I didn't know of other ways of modifying past commit messages.\r\n\r\n@wookayin ",
            "created_at": "2023-12-23T06:14:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1868218979",
            "id": 1868218979,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5vWsJj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868218979/reactions"
            },
            "updated_at": "2023-12-23T06:15:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868218979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is it possible to squash all the commits into a single commit when merging to handle this? I'm not very well versed with git, so I didn't know of other ways of modifying past commit messages.\r\n\r\nYou can squash the commits into one using [\"interactive rebase\"](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History). And then push-force.\r\n\r\nhttps://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#pull-requests-prs",
            "created_at": "2023-12-23T06:51:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1868223959",
            "id": 1868223959,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5vWtXX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868223959/reactions"
            },
            "updated_at": "2023-12-23T06:51:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868223959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "But we can also squash-merge if the PR should just be a single commit.",
            "created_at": "2023-12-23T11:23:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1868273146",
            "id": 1868273146,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5vW5X6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868273146/reactions"
            },
            "updated_at": "2023-12-23T11:23:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868273146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think it's ok for this PR to be a single `feature` commit, but I could also manually squash commits if it's necessary. Is there something else that should be adressed?",
            "created_at": "2023-12-23T14:45:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1868308529",
            "id": 1868308529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5vXCAx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868308529/reactions"
            },
            "updated_at": "2023-12-23T14:45:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868308529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The generated vimdoc still contains some [mess and incorrect formatting](https://github.com/neovim/neovim/pull/26032#discussion_r1436218391) due to the LuaCATS-vimdoc incompatibility, but this something `gen_vimdoc` is responsible for so let's clean up that as a future work. Anyway nice feature!",
            "created_at": "2024-01-02T13:27:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/26032#issuecomment-1874025140",
            "id": 1874025140,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
            "node_id": "IC_kwDOAPphoM5vs1q0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874025140/reactions"
            },
            "updated_at": "2024-01-02T13:27:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874025140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26032/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26032/commits",
    "created_at": "2023-11-13T18:05:38Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26032.diff",
    "draft": false,
    "head": {
        "label": "TheLeoP:pipes_support",
        "ref": "pipes_support",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/TheLeoP/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/TheLeoP/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/TheLeoP/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/TheLeoP/neovim/branches{/branch}",
            "clone_url": "https://github.com/TheLeoP/neovim.git",
            "collaborators_url": "https://api.github.com/repos/TheLeoP/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/TheLeoP/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/TheLeoP/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/TheLeoP/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/TheLeoP/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/TheLeoP/neovim/contributors",
            "created_at": "2023-11-13T17:10:56Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/TheLeoP/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/TheLeoP/neovim/downloads",
            "events_url": "https://api.github.com/repos/TheLeoP/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/TheLeoP/neovim/forks",
            "full_name": "TheLeoP/neovim",
            "git_commits_url": "https://api.github.com/repos/TheLeoP/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/TheLeoP/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/TheLeoP/neovim/git/tags{/sha}",
            "git_url": "git://github.com/TheLeoP/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/TheLeoP/neovim/hooks",
            "html_url": "https://github.com/TheLeoP/neovim",
            "id": 718239443,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/TheLeoP/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/TheLeoP/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/TheLeoP/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/TheLeoP/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/TheLeoP/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/TheLeoP/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/TheLeoP/neovim/merges",
            "milestones_url": "https://api.github.com/repos/TheLeoP/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKs920w",
            "notifications_url": "https://api.github.com/repos/TheLeoP/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/TheLeoP/neovim/pulls{/number}",
            "pushed_at": "2024-01-02T08:51:15Z",
            "releases_url": "https://api.github.com/repos/TheLeoP/neovim/releases{/id}",
            "size": 242214,
            "ssh_url": "git@github.com:TheLeoP/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/TheLeoP/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/TheLeoP/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/TheLeoP/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/TheLeoP/neovim/subscription",
            "svn_url": "https://github.com/TheLeoP/neovim",
            "tags_url": "https://api.github.com/repos/TheLeoP/neovim/tags",
            "teams_url": "https://api.github.com/repos/TheLeoP/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/TheLeoP/neovim/git/trees{/sha}",
            "updated_at": "2023-11-13T17:10:56Z",
            "url": "https://api.github.com/repos/TheLeoP/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
            "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
            "followers_url": "https://api.github.com/users/TheLeoP/followers",
            "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/TheLeoP",
            "id": 53507599,
            "login": "TheLeoP",
            "node_id": "MDQ6VXNlcjUzNTA3NTk5",
            "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
            "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
            "repos_url": "https://api.github.com/users/TheLeoP/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/TheLeoP"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26032",
    "id": 1599338540,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26032",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "3f788e73b34521f093846d362bf51e68bc9a3827",
    "merged_at": "2024-01-02T09:08:36Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5fU_gs",
    "number": 26032,
    "patch_url": "https://github.com/neovim/neovim/pull/26032.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26032/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/07b4471ff81ac6d8bac90ba5ea04157a1bcc1fc6",
    "title": "feat(lsp): support connect via named pipes/unix domain sockets",
    "updated_at": "2024-01-02T13:27:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26032",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
        "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
        "followers_url": "https://api.github.com/users/TheLeoP/followers",
        "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
        "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TheLeoP",
        "id": 53507599,
        "login": "TheLeoP",
        "node_id": "MDQ6VXNlcjUzNTA3NTk5",
        "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
        "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
        "repos_url": "https://api.github.com/users/TheLeoP/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TheLeoP"
    }
}