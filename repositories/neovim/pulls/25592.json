{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25592/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25592/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25592"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25592"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25592/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25592"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2b45a00607f96bfe98e4e48742031cf4619177b3"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4920,
            "forks_count": 4920,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1662,
            "open_issues_count": 1662,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-10-14T01:47:11Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 249328,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70106,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-10-14T01:17:12Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70106,
            "watchers_count": 70106,
            "web_commit_signoff_required": false
        },
        "sha": "c4f8be464c99090dabc6376222830dffe0bf5b12",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "WIP/playing around",
    "closed_at": null,
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "For context:\r\n\r\n(Neo)Vim uses\r\n1. `gettext` for translated messages;\r\n2. `libintl` for getting locales;\r\n3. a single `HAVE_WORKING_LIBINTL` ifdef for both;\r\n4. available `gettext` as a proxy for a working `libintl` (as the latter is a dependency of the former).\r\n\r\nThis is a problem since\r\n1. `gettext` is optional (if you don't want translations) but\r\n2. `libintl` is not (no locale information -> no encoding information -> inability to allocate message strings correctly).\r\n\r\nSo the goal is to disentangle the two by\r\n1. making `libintl` a hard runtime dependency;\r\n2. making sure our CMake scripts can find the system `libintl` (yes, even on macOS);\r\n3. removing the guards around the functions requiring `libintl`;\r\n4. replacing the `LIBINTL` guard for the translation functions by a `GETTEXT` guard.",
            "created_at": "2023-10-11T13:21:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1757689815",
            "id": 1757689815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5oxDfX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1757689815/reactions"
            },
            "updated_at": "2023-10-11T13:21:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1757689815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm quite confused by what you wrote @clason, so just trying to clarify it here.\r\n\r\nMy understanding is that libintl = gettext, with \"libintl\" being the header/library name of gettext. I think under glibc (both gettext and glibc are GNU projects) comes with libintl automatically so you don't have to install gettext separately, but on macOS you *do* have to install gettext (e.g. `brew install gettext`) in order to get libintl. If you mandate its existence all your users will have to install gettext, as you won't find a libintl.h and libintl.dylib on macOS otherwise (\"user\" here could mean developer or end-user depending if you statically or dynamically link against gettext).\r\n\r\n> `libintl` is not (no locale information -> no encoding information -> inability to allocate message strings correctly).\r\n\r\nIsn't that done by `setlocale()` instead? That is not part of `libintl`. I believe it's part of standard libc.",
            "created_at": "2023-10-13T06:01:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1760935250",
            "id": 1760935250,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o9b1S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1760935250/reactions"
            },
            "updated_at": "2023-10-13T06:05:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1760935250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1217449?v=4",
                "events_url": "https://api.github.com/users/ychin/events{/privacy}",
                "followers_url": "https://api.github.com/users/ychin/followers",
                "following_url": "https://api.github.com/users/ychin/following{/other_user}",
                "gists_url": "https://api.github.com/users/ychin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ychin",
                "id": 1217449,
                "login": "ychin",
                "node_id": "MDQ6VXNlcjEyMTc0NDk=",
                "organizations_url": "https://api.github.com/users/ychin/orgs",
                "received_events_url": "https://api.github.com/users/ychin/received_events",
                "repos_url": "https://api.github.com/users/ychin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ychin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ychin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ychin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I take personal responsibility for any wrong information here lol. I'm still confused on how all of is connected which was the reason for why I created the PR.\n\nIt seems that libintl is the library to gettext (aka libcurl to curl), although the terminology is thrown all over the place in neovim codebase.\n\nMy confusion likely stemmed from the fact that gettext (the cli program) is completely optional to create the translations while libintl/gettext library is \"semi-optional\" (i.e. some code is guarded with HAVE_WORKING_LIBINTL).\n\nI don't think anyone knows how this works on mac lol. Part of the PR is to explore how we can simplify this.\n\nIdeally I'd like a solution where we remove the HAVE_WORKING_LIBINTL hack by making the useful parts mandatory and remove the rest. How this will look I don't know at the moment.",
            "created_at": "2023-10-13T09:39:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761222353",
            "id": 1761222353,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o-h7R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761222353/reactions"
            },
            "updated_at": "2023-10-13T09:39:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761222353",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think anyone knows how this works on mac lol.\r\n\r\nWeirdly. The header is part of the system, but the library itself is not and must be installed with `gettext`. On some Linux platforms, `libintl` is instead part of `glibc`.\r\n\r\nIn any case, the point here is to be clear what is required and for what -- even if `libintl` is distributed with `gettext` on some(!) platforms, it's still `libintl` that we need, not all of `gettext`.\r\n\r\n> Ideally I'd like a solution where we remove the HAVE_WORKING_LIBINTL hack by making the useful parts mandatory and remove the rest. How this will look I don't know at the moment.\r\n\r\nSomething like https://github.com/neovim/neovim/pull/25602, I would say.",
            "created_at": "2023-10-13T09:43:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761227376",
            "id": 1761227376,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o-jJw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761227376/reactions"
            },
            "updated_at": "2023-10-13T10:10:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761227376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My understanding is that libintl = gettext, with \"libintl\" being the header/library name of gettext. I think under glibc (both gettext and glibc are GNU projects) comes with libintl automatically so you don't have to install gettext separately\r\n\r\nThis directly contradicts \"libintl == gettext\", though, doesn't it?\r\n\r\n> Isn't that done by setlocale() instead? That is not part of libintl. I believe it's part of standard libc.\r\n\r\nThen it shouldn't be behind a `HAVE_WORKING_LIBINTL` guard. That's exactly my point. (If _nothing_ important turns out to need `libintl`, we don't have to make it required, of course. But the jury is still out on that.)",
            "created_at": "2023-10-13T10:13:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761267067",
            "id": 1761267067,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o-s17",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761267067/reactions"
            },
            "updated_at": "2023-10-13T10:13:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761267067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "yes, I made https://github.com/neovim/neovim/pull/25602 partially as a support for the ongoing discussion. The parts moved outside the #ifdefs in that PR is the code which should be kept regardless (it only depends on `setlocale()` which is mandatory on all platforms we support ). \r\n\r\nThen the remaining code inside should ideally not be ifdef:ed either, but that depends on if we want/are able to to require always have a working libintl, i e the _runtime_ component of gettext, regardless of how it is distributed. (Or in a hypothetical scenario where translation support would be dropped, that remaining code would be deleted.)",
            "created_at": "2023-10-13T10:21:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761277059",
            "id": 1761277059,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o-vSD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761277059/reactions"
            },
            "updated_at": "2023-10-13T10:21:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761277059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This directly contradicts \"libintl == gettext\", though, doesn't it?\r\n\r\nI think the other comment about libcurl vs curl is a good comparison. libintl is the runtime/library component of gettext. GNU just decided to include it as part of glibc, but have the command-line tools (in the `gettext` package) available separately. So it depends on what you mean by \"gettext\" in your sentence. Seems like it specifically refers to the \"gettext package in GNU/Linux\" here).\r\n\r\n> Then the remaining code inside should ideally not be ifdef:ed either, but that depends on if we want/are able to to require always have a working libintl, i e the runtime component of gettext, regardless of how it is distributed. (Or in a hypothetical scenario where translation support would be dropped, that remaining code would be deleted.)\r\n\r\nVim (not Neovim as I'm not familiar enough with Neovim) still has \"gettext\" as an optional component as can be checked by the \"+gettext\" feature. That feature actually refers to libintl, as the end user won't really care about the gettext CLI tools (which are only used for building the translation files when building).\r\n\r\nFWIW for MacVim, the binaries that we ship link against gettext's libintl statically since on macOS it's not bundled and I don't want users to have to install gettext (seems like none of the macOS software uses it and the system Vim does not have \"+gettext\" enabled). It's actually quite annoying to do because I need to build gettext locally in CI as the Homebrew gettext is not designed to be deployable to older macOS and not binary compatible with older macOS versions. So for example, if you suddenly mandate gettext, that's fine, but think about all the downstream distributions of Neovim like the Neovim GUIs with pre-built binaries. There are complexities to distributing backwards compatible binaries (without requiring users install gettext separately) that they would need to take into account. Last time I checked (I think I checked Neovide and VimR for… competitive analysis) I think they don't currently support gettext but I could be wrong.\r\n\r\nFor building locally though, if you mandate libintl, the user will have to install gettext (probably through Homebrew).\r\n\r\nOne aspect you may want to keep in mind is also that not all Linux is GNU/Linux. Alpine Linux ships with MUSL instead of glibc and I *think* (I don't actually use Alpine so I don't know) you need to install a separate musl-libintl dependency for it to work.\r\n\r\nI have no idea how gettext works on Windows.\r\n\r\nEither way, libintl is only used for translating message texts (Edit: it does affect shortcut keys like pressing \"L\" for reloading a file because that doesn't make sense in say French). It depends if you want to consider localized messages as a core requirement as I know Neovim prefers fewer optional settings.",
            "created_at": "2023-10-13T11:03:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761328741",
            "id": 1761328741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o-75l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761328741/reactions"
            },
            "updated_at": "2023-10-13T11:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761328741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1217449?v=4",
                "events_url": "https://api.github.com/users/ychin/events{/privacy}",
                "followers_url": "https://api.github.com/users/ychin/followers",
                "following_url": "https://api.github.com/users/ychin/following{/other_user}",
                "gists_url": "https://api.github.com/users/ychin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ychin",
                "id": 1217449,
                "login": "ychin",
                "node_id": "MDQ6VXNlcjEyMTc0NDk=",
                "organizations_url": "https://api.github.com/users/ychin/orgs",
                "received_events_url": "https://api.github.com/users/ychin/received_events",
                "repos_url": "https://api.github.com/users/ychin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ychin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ychin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ychin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "But Neovim does not have optional compile time features like Vim. That is the whole point here. \n\nAnd Neovim GUIs are very different from Gvim, they don't use static binaries (VimR is a bit different, but this uses a forked libnvim, not a stock Neovim). ",
            "created_at": "2023-10-13T11:20:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761348608",
            "id": 1761348608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o_AwA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761348608/reactions"
            },
            "updated_at": "2023-10-13T11:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761348608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sure, but at compile time CMake is still looking for libintl.h and deciding to build with or without it right? Unless I'm misunderstand the context here.",
            "created_at": "2023-10-13T11:22:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761351514",
            "id": 1761351514,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o_Bda",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761351514/reactions"
            },
            "updated_at": "2023-10-13T11:22:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761351514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1217449?v=4",
                "events_url": "https://api.github.com/users/ychin/events{/privacy}",
                "followers_url": "https://api.github.com/users/ychin/followers",
                "following_url": "https://api.github.com/users/ychin/following{/other_user}",
                "gists_url": "https://api.github.com/users/ychin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ychin",
                "id": 1217449,
                "login": "ychin",
                "node_id": "MDQ6VXNlcjEyMTc0NDk=",
                "organizations_url": "https://api.github.com/users/ychin/orgs",
                "received_events_url": "https://api.github.com/users/ychin/received_events",
                "repos_url": "https://api.github.com/users/ychin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ychin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ychin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ychin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, and this is precisely what this is about: deciding whether and how to change that. ",
            "created_at": "2023-10-13T11:37:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761370359",
            "id": 1761370359,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o_GD3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761370359/reactions"
            },
            "updated_at": "2023-10-13T11:37:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761370359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We already bundle gettext for windows, I'm wondering if we should start doing it for mac too (and maybe even linux) to avoid these problems.",
            "created_at": "2023-10-13T11:38:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761371740",
            "id": 1761371740,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o_GZc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761371740/reactions"
            },
            "updated_at": "2023-10-13T11:38:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761371740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We already bundle gettext for windows, I'm wondering if we should start doing it for mac too (and maybe even linux) to avoid these problems.\r\n\r\nYes, that would be one possible outcome of this, if we decide a to make libgettext a runtime requirement.",
            "created_at": "2023-10-13T11:52:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761390169",
            "id": 1761390169,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o_K5Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761390169/reactions"
            },
            "updated_at": "2023-10-13T11:52:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761390169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> And Neovim GUIs are very different from Gvim, they don't use static binaries (VimR is a bit different, but this uses a forked libnvim, not a stock Neovim).\r\n\r\nRight. I forgot Neovide etc just assumes an existing Neovim exists. VimR is the one that I look at the most but it's the odd one out in terms of configuration.\r\n\r\nHonestly if you are only concerned about end-user dependency (compared to people who want to build Neovim locally), as I mentioned you can just link against gettext statically by linking against libintl.a on macOS, instead of the dynamic lib libintl.dylib. This will work without needing to bundle anything, and the resulting distribution size will be smaller as well because Vim only uses a very small portion of the library. gettext is LGPL, but I think it's kosher since Neovim is open-source anyway and a user can grab the source code and rebuild Neovim themselves to satisfy the software freedom requirement.\r\n\r\nMost people install Neovim via Homebrew anyway, and Homebrew already lists gettext as a dependency and therefore Homebrew Neovim has translations working.\r\n\r\nOn GNU/Linux you shouldn't need to bundle anything because glibc already supports it. It will be more complicated for MUSL.",
            "created_at": "2023-10-13T13:05:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761489651",
            "id": 1761489651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o_jLz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761489651/reactions"
            },
            "updated_at": "2023-10-13T13:07:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761489651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1217449?v=4",
                "events_url": "https://api.github.com/users/ychin/events{/privacy}",
                "followers_url": "https://api.github.com/users/ychin/followers",
                "following_url": "https://api.github.com/users/ychin/following{/other_user}",
                "gists_url": "https://api.github.com/users/ychin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ychin",
                "id": 1217449,
                "login": "ychin",
                "node_id": "MDQ6VXNlcjEyMTc0NDk=",
                "organizations_url": "https://api.github.com/users/ychin/orgs",
                "received_events_url": "https://api.github.com/users/ychin/received_events",
                "repos_url": "https://api.github.com/users/ychin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ychin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ychin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ychin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Again, this is not at all about how we build with the code we have (which we know how to do, thank you very much), but about _changing_ the code to minimize reliance on a(n optional) dependency (by getting rid of the `ifdef` spaghetti we inherited from Vim). The first step here is finding out what (and where) exactly in the code we use it, and whether we can and want to do without it.",
            "created_at": "2023-10-13T13:18:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761507116",
            "id": 1761507116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o_ncs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761507116/reactions"
            },
            "updated_at": "2023-10-13T13:19:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761507116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I see, that's fair enough. I was just curious about all these when I saw the issue.",
            "created_at": "2023-10-13T13:32:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/25592#issuecomment-1761526992",
            "id": 1761526992,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
            "node_id": "IC_kwDOAPphoM5o_sTQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761526992/reactions"
            },
            "updated_at": "2023-10-13T13:32:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1761526992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1217449?v=4",
                "events_url": "https://api.github.com/users/ychin/events{/privacy}",
                "followers_url": "https://api.github.com/users/ychin/followers",
                "following_url": "https://api.github.com/users/ychin/following{/other_user}",
                "gists_url": "https://api.github.com/users/ychin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ychin",
                "id": 1217449,
                "login": "ychin",
                "node_id": "MDQ6VXNlcjEyMTc0NDk=",
                "organizations_url": "https://api.github.com/users/ychin/orgs",
                "received_events_url": "https://api.github.com/users/ychin/received_events",
                "repos_url": "https://api.github.com/users/ychin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ychin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ychin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ychin"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25592/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25592/commits",
    "created_at": "2023-10-10T22:35:01Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25592.diff",
    "draft": true,
    "head": {
        "label": "dundargoc:build/gettext",
        "ref": "build/gettext",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dundargoc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dundargoc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dundargoc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dundargoc/neovim/branches{/branch}",
            "clone_url": "https://github.com/dundargoc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dundargoc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dundargoc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dundargoc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dundargoc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dundargoc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dundargoc/neovim/contributors",
            "created_at": "2021-06-20T10:14:48Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dundargoc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dundargoc/neovim/downloads",
            "events_url": "https://api.github.com/repos/dundargoc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dundargoc/neovim/forks",
            "full_name": "dundargoc/neovim",
            "git_commits_url": "https://api.github.com/repos/dundargoc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dundargoc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dundargoc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dundargoc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dundargoc/neovim/hooks",
            "html_url": "https://github.com/dundargoc/neovim",
            "id": 378614899,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dundargoc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dundargoc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dundargoc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dundargoc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dundargoc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/dundargoc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dundargoc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dundargoc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzg2MTQ4OTk=",
            "notifications_url": "https://api.github.com/repos/dundargoc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dundargoc/neovim/pulls{/number}",
            "pushed_at": "2023-10-13T19:06:16Z",
            "releases_url": "https://api.github.com/repos/dundargoc/neovim/releases{/id}",
            "size": 247165,
            "ssh_url": "git@github.com:dundargoc/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/dundargoc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dundargoc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dundargoc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dundargoc/neovim/subscription",
            "svn_url": "https://github.com/dundargoc/neovim",
            "tags_url": "https://api.github.com/repos/dundargoc/neovim/tags",
            "teams_url": "https://api.github.com/repos/dundargoc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dundargoc/neovim/git/trees{/sha}",
            "updated_at": "2023-07-31T17:43:26Z",
            "url": "https://api.github.com/repos/dundargoc/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "2b45a00607f96bfe98e4e48742031cf4619177b3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
            "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
            "followers_url": "https://api.github.com/users/dundargoc/followers",
            "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dundargoc",
            "id": 33953936,
            "login": "dundargoc",
            "node_id": "MDQ6VXNlcjMzOTUzOTM2",
            "organizations_url": "https://api.github.com/users/dundargoc/orgs",
            "received_events_url": "https://api.github.com/users/dundargoc/received_events",
            "repos_url": "https://api.github.com/users/dundargoc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dundargoc"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25592",
    "id": 1550883558,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25592",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "spellcheck",
            "id": 1953742452,
            "name": "spell",
            "node_id": "MDU6TGFiZWwxOTUzNzQyNDUy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/spell"
        }
    ],
    "locked": false,
    "merge_commit_sha": "743f05e6971fdc5d4ed4402ddc6dd44c159123ef",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5ccJrm",
    "number": 25592,
    "patch_url": "https://github.com/neovim/neovim/pull/25592.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25592/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2b45a00607f96bfe98e4e48742031cf4619177b3",
    "title": "build: delete gettext",
    "updated_at": "2023-10-13T13:32:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25592",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
        "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/dundargoc/followers",
        "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dundargoc",
        "id": 33953936,
        "login": "dundargoc",
        "node_id": "MDQ6VXNlcjMzOTUzOTM2",
        "organizations_url": "https://api.github.com/users/dundargoc/orgs",
        "received_events_url": "https://api.github.com/users/dundargoc/received_events",
        "repos_url": "https://api.github.com/users/dundargoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dundargoc"
    }
}