{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/23500/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23500/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/23500"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/23500"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23500/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/5efd76cee3b4abe244b8de87495d3650aeb65549"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4791,
            "forks_count": 4791,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1648,
            "open_issues_count": 1648,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-08-01T12:17:00Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247672,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 67911,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-08-01T11:58:40Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 67911,
            "watchers_count": 67911,
            "web_commit_signoff_required": false
        },
        "sha": "a217675a67233ca2032cd668e919858d2aed92e7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This PR updates the file watcher used for LSP `workspace/didChangeWatchedFiles` to only poll files whose paths match at least one watcher from the LSP registration.\r\n\r\nFixes #23291",
    "closed_at": "2023-06-14T10:40:12Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1186646175"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646175"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    local matches = vim.iter(opts.include_patterns):any(function(pattern)\r\n        return path:match(pattern) )\r\n```",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-05-06T06:16:51Z",
            "diff_hunk": "@@ -97,6 +97,29 @@ local function poll_internal(path, opts, callback, watches)\n   watches = watches or {\n     is_dir = true,\n   }\n+  watches.cancel = function()\n+    if watches.children then\n+      for _, w in pairs(watches.children) do\n+        w.cancel()\n+      end\n+    end\n+    if watches.handle then\n+      stop(watches.handle)\n+    end\n+  end\n+\n+  if not watches.is_dir and opts.include_patterns then\n+    local matches = false\n+    for _, pattern in ipairs(opts.include_patterns) do",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1186646175",
            "id": 1186646175,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Gusif",
            "original_commit_id": "cf24850b0de7a33187ab017d0439a621221f2892",
            "original_line": 113,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/_watch.lua",
            "position": null,
            "pull_request_review_id": 1415719114,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646175/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-06T06:20:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646175",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1186646566"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646566"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        include_patterns[#include_patterns + 1] =  p\r\n```",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-05-06T06:19:57Z",
            "diff_hunk": "@@ -264,15 +264,27 @@ function M.register(reg, ctx)\n     end\n   end\n \n-  local watching = {}\n-  for _, w in ipairs(watch_regs) do\n-    if not watching[w.base_dir] then\n-      watching[w.base_dir] = true\n-      table.insert(\n-        cancels[client_id][reg.id],\n-        M._watchfunc(w.base_dir, { uvflags = { recursive = true } }, callback(w.base_dir))\n-      )\n+  for base_dir, watches in pairs(watch_regs) do\n+    local include_patterns = {}\n+    for _, w in ipairs(watches) do\n+      for _, p in ipairs(w.pattern) do\n+        table.insert(include_patterns, p)",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1186646566",
            "id": 1186646566,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Gusom",
            "original_commit_id": "cf24850b0de7a33187ab017d0439a621221f2892",
            "original_line": 271,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": null,
            "pull_request_review_id": 1415719114,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646566/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-06T06:20:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1186646607"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646607"
                }
            },
            "author_association": "MEMBER",
            "body": "maybe there can also use `vim.iter` syntax suger make it simply.",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-05-06T06:20:26Z",
            "diff_hunk": "@@ -264,15 +264,27 @@ function M.register(reg, ctx)\n     end\n   end\n \n-  local watching = {}\n-  for _, w in ipairs(watch_regs) do\n-    if not watching[w.base_dir] then\n-      watching[w.base_dir] = true\n-      table.insert(\n-        cancels[client_id][reg.id],\n-        M._watchfunc(w.base_dir, { uvflags = { recursive = true } }, callback(w.base_dir))\n-      )\n+  for base_dir, watches in pairs(watch_regs) do\n+    local include_patterns = {}\n+    for _, w in ipairs(watches) do",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1186646607",
            "id": 1186646607,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GuspP",
            "original_commit_id": "cf24850b0de7a33187ab017d0439a621221f2892",
            "original_line": 269,
            "original_position": 40,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": null,
            "pull_request_review_id": 1415719114,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646607/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-06T06:20:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186646607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1186712854"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186712854"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Out of curiosity, what's the difference between these two? There are a number of places that call `table.insert` like this so I'm wondering if those should be updated too.",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-05-06T15:39:44Z",
            "diff_hunk": "@@ -264,15 +264,27 @@ function M.register(reg, ctx)\n     end\n   end\n \n-  local watching = {}\n-  for _, w in ipairs(watch_regs) do\n-    if not watching[w.base_dir] then\n-      watching[w.base_dir] = true\n-      table.insert(\n-        cancels[client_id][reg.id],\n-        M._watchfunc(w.base_dir, { uvflags = { recursive = true } }, callback(w.base_dir))\n-      )\n+  for base_dir, watches in pairs(watch_regs) do\n+    local include_patterns = {}\n+    for _, w in ipairs(watches) do\n+      for _, p in ipairs(w.pattern) do\n+        table.insert(include_patterns, p)",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1186712854",
            "id": 1186712854,
            "in_reply_to_id": 1186646566,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Gu80W",
            "original_commit_id": "cf24850b0de7a33187ab017d0439a621221f2892",
            "original_line": 271,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": null,
            "pull_request_review_id": 1415790154,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186712854/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-06T15:39:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186712854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1186733399"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186733399"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@glepnir I took a look through `vim.iter` but couldn't come up with anything that seemed to make this much simpler. Did you have an idea of what this could possibly look like?",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-05-06T18:50:01Z",
            "diff_hunk": "@@ -264,15 +264,27 @@ function M.register(reg, ctx)\n     end\n   end\n \n-  local watching = {}\n-  for _, w in ipairs(watch_regs) do\n-    if not watching[w.base_dir] then\n-      watching[w.base_dir] = true\n-      table.insert(\n-        cancels[client_id][reg.id],\n-        M._watchfunc(w.base_dir, { uvflags = { recursive = true } }, callback(w.base_dir))\n-      )\n+  for base_dir, watches in pairs(watch_regs) do\n+    local include_patterns = {}\n+    for _, w in ipairs(watches) do",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1186733399",
            "id": 1186733399,
            "in_reply_to_id": 1186646607,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GvB1X",
            "original_commit_id": "cf24850b0de7a33187ab017d0439a621221f2892",
            "original_line": 269,
            "original_position": 40,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": null,
            "pull_request_review_id": 1415808101,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186733399/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-06T18:50:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186733399",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1186766154"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186766154"
                }
            },
            "author_association": "MEMBER",
            "body": "inline expression fast than `table.insert` in luajit when you do it in a for loop",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-05-07T01:10:20Z",
            "diff_hunk": "@@ -264,15 +264,27 @@ function M.register(reg, ctx)\n     end\n   end\n \n-  local watching = {}\n-  for _, w in ipairs(watch_regs) do\n-    if not watching[w.base_dir] then\n-      watching[w.base_dir] = true\n-      table.insert(\n-        cancels[client_id][reg.id],\n-        M._watchfunc(w.base_dir, { uvflags = { recursive = true } }, callback(w.base_dir))\n-      )\n+  for base_dir, watches in pairs(watch_regs) do\n+    local include_patterns = {}\n+    for _, w in ipairs(watches) do\n+      for _, p in ipairs(w.pattern) do\n+        table.insert(include_patterns, p)",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1186766154",
            "id": 1186766154,
            "in_reply_to_id": 1186646566,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GvJ1K",
            "original_commit_id": "cf24850b0de7a33187ab017d0439a621221f2892",
            "original_line": 271,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": null,
            "pull_request_review_id": 1415833070,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186766154/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-07T01:12:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186766154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1186766281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186766281"
                }
            },
            "author_association": "MEMBER",
            "body": "if backport to 0.9 .ignore this :)",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-05-07T01:11:40Z",
            "diff_hunk": "@@ -264,15 +264,27 @@ function M.register(reg, ctx)\n     end\n   end\n \n-  local watching = {}\n-  for _, w in ipairs(watch_regs) do\n-    if not watching[w.base_dir] then\n-      watching[w.base_dir] = true\n-      table.insert(\n-        cancels[client_id][reg.id],\n-        M._watchfunc(w.base_dir, { uvflags = { recursive = true } }, callback(w.base_dir))\n-      )\n+  for base_dir, watches in pairs(watch_regs) do\n+    local include_patterns = {}\n+    for _, w in ipairs(watches) do",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1186766281",
            "id": 1186766281,
            "in_reply_to_id": 1186646607,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GvJ3J",
            "original_commit_id": "cf24850b0de7a33187ab017d0439a621221f2892",
            "original_line": 269,
            "original_position": 40,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": null,
            "pull_request_review_id": 1415833134,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186766281/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-07T01:11:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1186766281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1222310377"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1222310377"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@folke I wonder if exposing a variable like this would make it possible to exclude additional patterns per language, like `target` for rust.",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-06-08T00:24:53Z",
            "diff_hunk": "@@ -107,6 +107,13 @@ local to_lsp_change_type = {\n   [watch.FileChangeType.Deleted] = protocol.FileChangeType.Deleted,\n }\n \n+--- Default excludes the same as VSCode's `files.watcherExclude` setting.\n+--- https://github.com/microsoft/vscode/blob/eef30e7165e19b33daa1e15e92fa34ff4a5df0d3/src/vs/workbench/contrib/files/browser/files.contribution.ts#L261\n+---@type Lpeg pattern\n+M._poll_exclude_pattern = parse('**/.git/{objects,subtree-cache}/**')",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1222310377",
            "id": 1222310377,
            "line": 113,
            "node_id": "PRRC_kwDOAPphoM5I2vnp",
            "original_commit_id": "37faf4f55b67d1070a3d5ac26693da6ed2526542",
            "original_line": 113,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": 16,
            "pull_request_review_id": 1468775067,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1222310377/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-08T00:24:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1222310377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23500#discussion_r1222532204"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1222532204"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it's okay to expose this while keeping it private for us to be able to quickly test out stuff, but if we realize that this is useful to customize more often and before this starts popping up as recommendation to uers we should instead add a new setting for the client.",
            "commit_id": "5efd76cee3b4abe244b8de87495d3650aeb65549",
            "created_at": "2023-06-08T06:48:32Z",
            "diff_hunk": "@@ -107,6 +107,13 @@ local to_lsp_change_type = {\n   [watch.FileChangeType.Deleted] = protocol.FileChangeType.Deleted,\n }\n \n+--- Default excludes the same as VSCode's `files.watcherExclude` setting.\n+--- https://github.com/microsoft/vscode/blob/eef30e7165e19b33daa1e15e92fa34ff4a5df0d3/src/vs/workbench/contrib/files/browser/files.contribution.ts#L261\n+---@type Lpeg pattern\n+M._poll_exclude_pattern = parse('**/.git/{objects,subtree-cache}/**')",
            "html_url": "https://github.com/neovim/neovim/pull/23500#discussion_r1222532204",
            "id": 1222532204,
            "in_reply_to_id": 1222310377,
            "line": 113,
            "node_id": "PRRC_kwDOAPphoM5I3lxs",
            "original_commit_id": "37faf4f55b67d1070a3d5ac26693da6ed2526542",
            "original_line": 113,
            "original_position": 16,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": 16,
            "pull_request_review_id": 1469119613,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1222532204/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-08T06:48:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1222532204",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason Since I'll update this to use `vim.iter` which doesn't exist in 0.9, should I open a separate PR to the release branch manually that doesn't use `vim.iter`? Or can I amend the automated backport PR?",
            "created_at": "2023-05-06T15:32:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1537165890",
            "id": 1537165890,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5bn0pC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537165890/reactions"
            },
            "updated_at": "2023-05-06T15:32:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537165890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If you plan to use `vim.iter`, we can't backport; I'll remove the label. (I just thought \"free performance, yay!\" is a reason to backport.)",
            "created_at": "2023-05-06T15:40:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1537167596",
            "id": 1537167596,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5bn1Ds",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537167596/reactions"
            },
            "updated_at": "2023-05-06T15:40:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537167596",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "But what you can do is keep the `vim.iter` changes in a separate commit so we can cherry-pick just the first one -- if you think this is worth it. I consider a significant editing performance regression like in the linked issue a bug that should be fixed in production as soon as possible.",
            "created_at": "2023-05-06T15:42:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1537168097",
            "id": 1537168097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5bn1Lh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537168097/reactions"
            },
            "updated_at": "2023-05-06T15:42:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537168097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sounds good. This PR currently should work with 0.9 so I'll make sure to keep any incompatible changes in a different commit.",
            "created_at": "2023-05-06T15:44:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1537168491",
            "id": 1537168491,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5bn1Rr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537168491/reactions"
            },
            "updated_at": "2023-05-06T15:44:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537168491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I consider a significant editing performance regression like in the linked issue a bug that should be fixed in production as soon as possible.\r\n\r\nJust as fyi: It's not enabled by default on 0.9 in part due to the performance issues. ",
            "created_at": "2023-05-06T16:56:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1537181272",
            "id": 1537181272,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5bn4ZY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537181272/reactions"
            },
            "updated_at": "2023-05-06T16:56:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537181272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, I missed that. Then we don't need to backport, at all.",
            "created_at": "2023-05-06T17:04:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1537182877",
            "id": 1537182877,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5bn4yd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537182877/reactions"
            },
            "updated_at": "2023-05-06T17:04:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537182877",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think this change might still be valuable to backport for those users who choose to enable the feature in 0.9.",
            "created_at": "2023-05-06T18:49:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1537201217",
            "id": 1537201217,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5bn9RB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537201217/reactions"
            },
            "updated_at": "2023-05-06T18:49:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537201217",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Pushed one tiny change from @glepnir's feedback. I think I'll hold off on adding any `vim.iter` for now since it seems like making this easier to backport is worth it.",
            "created_at": "2023-05-07T03:39:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1537280429",
            "id": 1537280429,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5boQmt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537280429/reactions"
            },
            "updated_at": "2023-05-07T03:39:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537280429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just tried this and it again causes a significant editor freeze when the language server starts & registers the watches\r\n\r\nI wonder if we can off-load some of the file watching into a dedicated thread. I didn't follow how usable `uv.new_thread()` nowadays\r\n",
            "created_at": "2023-05-09T16:11:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1540475854",
            "id": 1540475854,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5b0cvO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1540475854/reactions"
            },
            "updated_at": "2023-05-09T16:11:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1540475854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "ACK, I'll take a look.\r\n\r\nI also saw #23375 does something interesting where it looks like it does all its work on the main thread but chunks it up in a way that doesn't lock up everything else until it finishes. That approach seems like it might work here? That wouldn't make it complete any faster but would at least not freeze up the editor.",
            "created_at": "2023-05-10T01:07:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1541106233",
            "id": 1541106233,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5b22o5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1541106233/reactions"
            },
            "updated_at": "2023-05-10T01:07:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1541106233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That approach seems like it might work here? \r\n\r\nyes that might also be worth exploring, but I'd tend to first do some profiling to see where the hotspots are and if there are some other options.\r\n\r\nAnother thing to look into is if we can avoid scheduling onto the main thread to begin with, given that the uv polling happens in the uv loop. E.g. is it safe to remove stuff like:\r\n\r\nhttps://github.com/neovim/neovim/blob/4e5061dba765df2a74ac4a8182f6e7fe21da125d/runtime/lua/vim/_watch.lua#L108",
            "created_at": "2023-05-10T11:45:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1542059676",
            "id": 1542059676,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5b6fac",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1542059676/reactions"
            },
            "updated_at": "2023-05-10T11:45:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1542059676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> can avoid scheduling onto the main thread to begin with\r\n\r\nlibuv callbacks still run on the main thread so avoiding `vim.schedule` won't get you much (if anything).",
            "created_at": "2023-05-10T12:56:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1542163221",
            "id": 1542163221,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5b64sV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1542163221/reactions"
            },
            "updated_at": "2023-05-10T12:56:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1542163221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm running into this exact problem. Neovim is taking pretty much 100% cpu all the time in one of my projects.\r\n\r\nIt's a nodejs project that has 71000 files (node_modules etc).\r\n\r\nWhat I don't get is why `fs_new_event` is **NOT** being used on linux?\r\n\r\nhttps://github.com/neovim/neovim/blob/3ae62c470634e30c55d822c452af135fee50ddd5/runtime/lua/vim/lsp/_watchfiles.lua#L169\r\n\r\nOn Linux, all 71000 files are being polled instead. If I change the function to use watch, CPU usage drops to 1%.\r\n\r\nIn my case, the lsp actually asks to watch 1 file. The current implementation changes this to monitor recursively all the files in my project and then uses the one file as a pattern to match for changes.\r\n",
            "created_at": "2023-05-19T05:57:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554049319",
            "id": 1554049319,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5coOkn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554049319/reactions"
            },
            "updated_at": "2023-05-19T05:57:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554049319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\r\n> What I don't get is why fs_new_event is NOT being used on linux?\r\n\r\nSee https://github.com/neovim/neovim/pull/22405#issuecomment-1445204284\r\n\r\n\r\n> In my case, the lsp actually asks to watch 1 file. \r\n\r\n\r\nCan you share the `registerCapability` payload sent by the server?\r\n",
            "created_at": "2023-05-19T06:16:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554063708",
            "id": 1554063708,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5coSFc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554063708/reactions"
            },
            "updated_at": "2023-05-19T06:16:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554063708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I still wouldn't use polling on linux. That literally kills performance.\r\n\r\nI have two registrations:\r\n\r\n```lua\r\n{\r\n        id = \"rome_did_change_workspace_settings\",\r\n        method = \"workspace/didChangeWatchedFiles\",\r\n        registerOptions = {\r\n          watchers = { {\r\n              globPattern = \"/home/folke/projects/nova/rome.json\",\r\n              kind = 7\r\n            } }\r\n        }\r\n      }\r\n```\r\n\r\n```lua\r\n{\r\n        id = \"51859b96-121a-4eae-9c2a-dc44527dd4bb\",\r\n        method = \"workspace/didChangeWatchedFiles\",\r\n        registerOptions = {\r\n          watchers = { {\r\n              globPattern = \"**/{tailwind,tailwind.config,tailwind.*.config,tailwind.config.*}.{js,cjs,ts,mjs}\"\r\n            }, {\r\n              globPattern = \"**/{package-lock.json,yarn.lock,pnpm-lock.yaml}\"\r\n            }, {\r\n              globPattern = \"**/*.{css,scss,sass,less,pcss}\"\r\n            } }\r\n        }\r\n      }\r\n```\r\n\r\nThe Rome one also scans all the files.\r\n\r\nWe should really never use polling.\r\n",
            "created_at": "2023-05-19T06:19:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554066431",
            "id": 1554066431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5coSv_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554066431/reactions"
            },
            "updated_at": "2023-05-19T06:19:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554066431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We should really never use polling.\r\n\r\nYou are welcome to make a PR that uses watch + addresses the problems outlined in the comment",
            "created_at": "2023-05-19T06:33:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554076671",
            "id": 1554076671,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5coVP_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554076671/reactions"
            },
            "updated_at": "2023-05-19T06:33:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554076671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That comment you linked to is about a potential wrong watched file event that could be generated when a subdirectory gets deleted.\r\n\r\nIt's not critical at all if in some cases a wrong event would be sent to the lsp server. This is due to a bug in libuv, so it will eventually be fixed there.\r\n\r\nThe work-around makes Neovim unusable for pretty much anyone that is working on a javascript project due to `node_modules`.\r\n\r\nIt would be much better to always use `fs_new_event` and just be aware that in the case of deleting a sub-directory, a wrong event might be sent to the lsp server.\r\n\r\nMaking Neovim use 100% cpu, to work around a bug in libuv doesn't feel like a proper fix for that issue.",
            "created_at": "2023-05-19T07:59:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554192821",
            "id": 1554192821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5coxm1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554192821/reactions"
            },
            "updated_at": "2023-05-19T07:59:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554192821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Really, just try for yourself. Clone a js project, have an lsp attached that uses the watcher and watch Neovim explode.",
            "created_at": "2023-05-19T08:00:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554194338",
            "id": 1554194338,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5cox-i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554194338/reactions"
            },
            "updated_at": "2023-05-19T08:00:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554194338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Before this gets any more acrimonious, can we please just disable this by default until the rough edges (both here and in libuv) are sanded off?",
            "created_at": "2023-05-19T08:02:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554196729",
            "id": 1554196729,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5coyj5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554196729/reactions"
            },
            "updated_at": "2023-05-19T08:02:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554196729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Fwiw this is unusable for me on a python project so +1 for disabling by default ",
            "created_at": "2023-05-19T08:08:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554204569",
            "id": 1554204569,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5co0eZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554204569/reactions"
            },
            "updated_at": "2023-05-19T08:08:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554204569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@lewis6991 \r\n\r\n```lua\r\nrequire(\"vim.lsp._watchfiles\")._watchfunc = require(\"vim._watch\").watch\r\n```\r\n\r\nCPU **110%** => **1%**",
            "created_at": "2023-05-19T08:09:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554206149",
            "id": 1554206149,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5co03F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554206149/reactions"
            },
            "updated_at": "2023-05-19T08:11:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554206149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @lewis6991\r\n> \r\n> ```lua\r\n> require(\"vim.lsp._watchfiles\")._watchfunc = require(\"vim._watch\").watch\r\n> ```\r\n> \r\n> CPU **110%** => **1%**\r\n\r\nThis also breaks the functionality as it's not recursive on linux. \r\n\r\nTo recap:\r\n\r\n- We know there are performance issues. Part of the motivation to turn it on in _nightly_ was to get more feedback about them. Information that is particularly helpful:  Which Language server, `registerCapability` payload & rough outline of the folder structure/project size\r\n- There is an easy workaround: Turn off the functionality\r\n- The plan is to either improve the performance before 0.10 or turn it off again.\r\n\r\nI'd appreciate it if we kept the discussion on a constructive level.",
            "created_at": "2023-05-19T08:24:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554223241",
            "id": 1554223241,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5co5CJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554223241/reactions"
            },
            "updated_at": "2023-05-19T08:24:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554223241",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * There is an easy workaround: Turn off the functionality\r\n\r\nCurrently, this can't be disabled with some lsp servers that mis-behave.\r\n\r\nLsp servers like tailwindcss and rome register the capability even when dynamic registration is not enabled for watch files, so there should at least be an additional check in the `client/registerCapability` handler that dynamic registration is enabled.",
            "created_at": "2023-05-19T08:38:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554237951",
            "id": 1554237951,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5co8n_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554237951/reactions"
            },
            "updated_at": "2023-05-19T08:38:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554237951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wasn't aware that recursive  `fs_new_event` doesn't work on linux.\r\n\r\nAs an alternative approach, couldn't we just only trigger changes based on files changed within Neovim?\r\n\r\nOr at least make that configurable? `watcher = \"edits\" | \"watch\" | \"poll\"` or something like that.\r\nThe default for linux could be `edits`, and `watch` for other OS that supports it.\r\n \r\nSo with a `FileWritePost` autocmd, checking if the file matches any of the watchers and send an event only then.\r\n\r\n## Pros:\r\n\r\n- super fast\r\n- easy to implement\r\n- covers most use-cases\r\n\r\n## Cons:\r\n\r\n- when having multiple Neovim instances in the same directory, changes will only be sent from where the change was made\r\n- changes made to those files outside of Neovim will not be triggered.",
            "created_at": "2023-05-19T08:51:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554252168",
            "id": 1554252168,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5cpAGI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554252168/reactions"
            },
            "updated_at": "2023-05-19T09:00:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554252168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Currently, this can't be disabled with some lsp servers that mis-behave.\r\n> Lsp servers like tailwindcss and rome register the capability even when dynamic registration is not enabled for watch files, so there should at least be an additional check in the client/registerCapability handler that dynamic registration is enabled.\r\n\r\nI think that's a spec violation that should probably be fixed in those servers.\r\nThat said, I think I'd be okay with adding an additional check in the client.\r\n\r\n\r\n> As an alternative approach, couldn't we just only trigger changes based on files changed within Neovim?\r\n\r\n\r\nChanges that you make to files in Neovim are directly communicated to the server anyways. (Via `didChange`, based on `on_lines` of `nvim_buf_attach`). I think there would be little reason for a language server to rely on registerd file watchers for files the user is editing directly.\r\n\r\nThe main value proposition of `didChangeWatchedFiles` is that it works for changes made outside of Neovim. E.g. if you switch branches via git. Or to notice changes not related to a file, but e.g. if you create a directory.\r\nIf we take that away, I don't think there's anything left the functionality would provide. I'm not sure what you refer to with \"covers most use-cases\" ?\r\n\r\n\r\n\r\n@nojnhuh maybe we should bring back the default ignores (git, node_modules, etc) that you had in your initial PR. That would be a low hanging fruit.\r\n",
            "created_at": "2023-05-19T09:19:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554285508",
            "id": 1554285508,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5cpIPE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554285508/reactions"
            },
            "updated_at": "2023-05-19T09:20:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554285508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That explains a lot. Then at least for the lsp servers I'm using the watcher is indeed not really useful. tailwind watches src files and rome watches their config file. I only make changes to those files from within Neovim.\r\n\r\nThe default ignore would most likely fix my performance issues as well indeed.",
            "created_at": "2023-05-19T09:23:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1554289992",
            "id": 1554289992,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5cpJVI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554289992/reactions"
            },
            "updated_at": "2023-05-19T09:23:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554289992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I just opened #23689 to address the erroneous registrations by servers when the capability isn't set.\r\n\r\nI'll plan to add the default list of ignored file patterns to this PR since that's closely related. I still have some digging to do to figure out how to do this without the stuttering @mfussenegger was seeing at startup. I see the same behavior in my normal use case.",
            "created_at": "2023-05-20T02:33:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1555433146",
            "id": 1555433146,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ctga6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555433146/reactions"
            },
            "updated_at": "2023-05-20T02:33:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555433146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@nojnhuh just to be clear: are you planning on making changes to _this_ PR, or can this be merged (and backported) already?",
            "created_at": "2023-05-22T08:52:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1556813342",
            "id": 1556813342,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5cyxYe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1556813342/reactions"
            },
            "updated_at": "2023-05-22T08:52:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1556813342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, yes there are changes I'm planning to make for this PR yet. I've been making decent progress but it still needs some work.",
            "created_at": "2023-05-22T13:57:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1557269793",
            "id": 1557269793,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5c0g0h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1557269793/reactions"
            },
            "updated_at": "2023-05-22T13:57:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1557269793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another relevant issue: https://github.com/neovim/neovim/issues/23725#issuecomment-1561531718\r\n\r\n`target` dircetory for rust projects",
            "created_at": "2023-05-24T19:50:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1561841423",
            "id": 1561841423,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5dF88P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1561841423/reactions"
            },
            "updated_at": "2023-05-24T19:50:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1561841423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Update on this: I recently learned about LPeg and figured that might be a good way to parse and match glob patterns. I don't expect matching an LPeg pattern to be much faster than matching a Lua pattern, but since LPeg natively supports alternatives (match \"this\" or \"that\"), then we can output a single LPeg pattern from a glob instead of a number of Lua patterns. My very unscientific testing shows this to be quite a bit faster at startup with the rest of the changes in this PR. Since those changes are mostly orthogonal to these though, I elected to open that here in a separate PR: #23788. I can definitely close that and make those changes here too if that would be easier to keep track of.",
            "created_at": "2023-05-27T22:29:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1565714727",
            "id": 1565714727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5dUukn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565714727/reactions"
            },
            "updated_at": "2023-05-27T22:29:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565714727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I just pushed the changes to make this use LPeg to match both files to include and to exclude from polling. My rough testing shows this drops idle CPU usage way down for extreme cases like the one described in #23291 and even starts up a bit faster there.\r\n\r\nThe Go repo I tend to work on most doesn't have too many unwatched files and this change makes polling start a bit more slowly (~30ms -> ~100ms), but not enough to impact usability for me. If startup becomes unusably slow for larger repos where it wasn't already, we might need to start looking for ways to chunk up the work or offload to a separate coroutine/thread. ",
            "created_at": "2023-06-08T00:23:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1581693402",
            "id": 1581693402,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5eRrna",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1581693402/reactions"
            },
            "updated_at": "2023-06-08T00:23:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1581693402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Unfortunately this doesn't fix my issues and I still get the error:\r\n\r\n```\r\nError executing vim.schedule lua callback: ...sers/lewrus01/external/neovim/runtime/lua/vim/_watch.lua:132: ELOOP\r\nstack traceback:\r\n        [C]: in function 'assert'\r\n        ...sers/lewrus01/external/neovim/runtime/lua/vim/_watch.lua:132: in function ''\r\n        vim/_editor.lua: in function <vim/_editor.lua:0>\r\n```",
            "created_at": "2023-06-08T13:15:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1582563824",
            "id": 1582563824,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5eVAHw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1582563824/reactions"
            },
            "updated_at": "2023-06-08T13:15:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1582563824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@lewis6991 Is that an error you're not also seeing on master? If it's related to symlinks like the libuv docs suggest, I'd be a bit surprised if these changes were causing that. If you can put together an example repro that would be appreciated.",
            "created_at": "2023-06-09T04:21:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1583955072",
            "id": 1583955072,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5eaTyA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1583955072/reactions"
            },
            "updated_at": "2023-06-09T04:21:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1583955072",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes it's on master too. This is with a python project with pyright. This is also running on a VM that doesn't have a huge amount of resources and has slow storage.",
            "created_at": "2023-06-09T07:08:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1584083563",
            "id": 1584083563,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5eazJr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584083563/reactions"
            },
            "updated_at": "2023-06-09T07:08:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584083563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Here's a rough repo.\r\n\r\nIt doesn't necessarily error, but it does create thousands of poll objects and cause lots of lag on startup.\r\n\r\n## Files\r\n\r\n`requirements.txt`:\r\n```\r\nattrs==22.2.0\r\ncertifi==2022.12.7\r\nchardet==5.1.0\r\ncharset-normalizer==2.1.1\r\nidna==3.4\r\nimportlib-resources==5.10.2\r\njsonschema==4.17.3\r\npathspec==0.11.0\r\npkgutil_resolve_name==1.3.10\r\npyrsistent==0.19.3\r\npython-dateutil==2.8.2\r\npytz==2022.7\r\nPyYAML==6.0\r\nrequests==2.28.2\r\nsix==1.16.0\r\nurllib3==1.26.14\r\nyamllint==1.29.0\r\nzipp==3.11.0\r\n```\r\n\r\n`test.py`:\r\n[EMPTY] add newlines so the lagginess can be observed when moving the cursor.\r\n\r\n`pyproject.toml`:\r\n```toml\r\n[tool.pyright]\r\nvenvPath = \".venv\"\r\nvenv = \"top\"\r\npythonVersion = \"3.11\"\r\n```\r\n\r\n`Makefile`:\r\n```make\r\n\r\nPIP_OPTS := --ignore-installed --require-virtualenv --compile\r\n\r\n.venv/top: requirements.txt\r\n\trm -rf $@\r\n\tpython3 -m venv $@\r\n\t$@/bin/python -m pip install $(PIP_OPTS) --upgrade pip wheel\r\n\t$@/bin/python -m pip install $(PIP_OPTS) --requirement $^\r\n\ttouch $@\r\n\r\n```\r\n\r\n`min.lua`:\r\n```lua\r\nvim.opt.runtimepath:append(<PATH TO nvim-lspconfig>)\r\nrequire'lspconfig'.pyright.setup{}\r\n```\r\n\r\n## Steps\r\n\r\n1. Create all the files above in an empty directory\r\n2. `make .venv/top`\r\n3. `nvim --clean -u min.lua test.py`\r\n\r\nThe above launches 10000 poll handles. For other virtualenvs I use this can be much more.\r\n\r\nThe problem is that every file in `.venv` is being watched. Regardless of whether it is used or not.\r\n\r\nI think the following exclude just isn't sufficient for general use:\r\n\r\n```lua\r\nM._poll_exclude_pattern = parse('**/.git/{objects,subtree-cache}/**')\r\n  + parse('**/node_modules/*/**')\r\n  + parse('**/.hg/store/**')\r\n```",
            "created_at": "2023-06-09T12:32:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1584501705",
            "id": 1584501705,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ecZPJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584501705/reactions"
            },
            "updated_at": "2023-06-09T12:41:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584501705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just a data point, but these are the registration objects coming from pyright:\r\n\r\n```\r\n{\r\n  id = \"61acfbe9-e21b-4a1d-9676-6446bbe4d243\",\r\n  method = \"workspace/didChangeWatchedFiles\",\r\n  registerOptions = {\r\n    watchers = { {\r\n        globPattern = \"**/pyrightconfig.json\",\r\n        kind = 7\r\n      }, {\r\n        globPattern = \"**\",\r\n        kind = 7\r\n      } }\r\n  }\r\n}\r\n{\r\n  id = \"c4e0f625-8a06-433f-93bc-b764e6df8c6f\",\r\n  method = \"workspace/didChangeWatchedFiles\",\r\n  registerOptions = {\r\n    watchers = { {\r\n        globPattern = \"**/pyrightconfig.json\",\r\n        kind = 7\r\n      }, {\r\n        globPattern = \"**\",\r\n        kind = 7\r\n      } }\r\n  }\r\n}\r\n{\r\n  id = \"42720588-6689-4996-b9f7-4578fe8a0da1\",\r\n  method = \"workspace/didChangeWatchedFiles\",\r\n  registerOptions = {\r\n    watchers = { {\r\n        globPattern = \"**/pyrightconfig.json\",\r\n        kind = 7\r\n      }, {\r\n        globPattern = \"**\",\r\n        kind = 7\r\n      } }\r\n  }\r\n}\r\n\r\n```",
            "created_at": "2023-06-09T13:13:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1584557247",
            "id": 1584557247,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ecmy_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584557247/reactions"
            },
            "updated_at": "2023-06-09T13:13:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584557247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I took a look and do see stuttering in this scenario.\r\n\r\n> The above launches 10000 poll handles. For other virtualenvs I use this can be much more.\r\n>\r\n> The problem is that every file in .venv is being watched. Regardless of whether it is used or not.\r\n\r\nI'm not sure there's an obvious fix for this. pyright asks for every file in every directory to be watched, so for large projects that will necessarily turn into a lot of polling handles being created. Even if I try moving the venv outside the project directory, pyright asks to watch it anyway:\r\n\r\n```\r\n[\"workspace/didChangeWatchedFiles\"] = { {\r\n          id = \"e766283c-9069-41a5-b928-68a7a6246a28\",\r\n          method = \"workspace/didChangeWatchedFiles\",\r\n          registerOptions = {\r\n            watchers = { {\r\n                globPattern = \"**/pyrightconfig.json\",\r\n                kind = 7\r\n              }, {\r\n                globPattern = \"**\",\r\n                kind = 7\r\n              }, {\r\n                globPattern = {\r\n                  baseUri = \"file:///home/jon/.venv/top/lib/python3.10/site-packages\",\r\n                  pattern = \"**\"\r\n                },\r\n                kind = 7\r\n              }, {\r\n                globPattern = {\r\n                  baseUri = \"file:///home/jon/.venv/top/lib64/python3.10/site-packages\",\r\n                  pattern = \"**\"\r\n                },\r\n                kind = 7\r\n              } }\r\n          }\r\n        } }\r\n```\r\n\r\nIf there's an obvious optimization here to more narrowly specify what should be watched, then it should be pyright handling that in the registration IMO.\r\n\r\n> I think the following exclude just isn't sufficient for general use:\r\n\r\nI envision the default as being a starting point that is meant to be generally applicable that plugins and users can augment with more language- or project-specific patterns to ignore. If this turns into a client setting like @mfussenegger mentioned, then it will probably be easier to integrate right into lspconfig.",
            "created_at": "2023-06-11T03:10:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1585986913",
            "id": 1585986913,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5eiD1h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1585986913/reactions"
            },
            "updated_at": "2023-06-11T03:10:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1585986913",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> pyright asks for every file in every directory to be watched, so for large projects that will necessarily turn into a lot of polling handles being created. Even if I try moving the venv outside the project directory, pyright asks to watch it anyway:\r\n\r\nyikes, that is a disaster. \r\n\r\n> If there's an obvious optimization here to more narrowly specify what should be watched, then it should be pyright handling that in the registration IMO.\r\n\r\nAgreed. But we at least need \"visibility\" for troubleshooting. Too-many file watchers can be a huge source of problems and frustrated, confused users (which leads to vague bug reports and arduous troubleshooting back-and-forth). \r\n\r\n1. At minimum (this PR) can we show a warning if the file watcher count exceeds, say, 1000?\r\n2. Ideally we would also warn in `:checkhealth`\r\n    - That implies something like a `vim.lsp.inspect()` that reports information about file watcher count (and other things such as info about all the random caches in the various vim.lsp modules)",
            "created_at": "2023-06-11T21:18:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1586340333",
            "id": 1586340333,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ejaHt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586340333/reactions"
            },
            "updated_at": "2023-06-11T21:19:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586340333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just an idea... but can we implement directory watchers using a single poll object?\r\n\r\nIf `foo/bar/baz/file` is modified, that should cause a modification to `foo`, `bar` and `baz` as `mtime` should get updated. Therefore if we need to watch `foo/**` we can place a single poll object on `foo` and when that triggers, we just need to scan `foo` (via `fs_stat`) to figure out which files actually changed.\r\n\r\nThe scanning can also be done asynchronously across several event loop iterations so it doesn't block the editor.\r\n\r\nThis is what I do in Gitsigns which watches the `.git` directory.",
            "created_at": "2023-06-12T09:33:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1586960386",
            "id": 1586960386,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5elxgC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586960386/reactions"
            },
            "updated_at": "2023-06-12T09:34:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1586960386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@lewis6991 if I understood you right, this PR now doesn't regress the behavior for you compared to master, right?\r\n\r\nIf so, could we get this in and iterate further from there? I have the impression that this is already an improvement over what we got in master and your suggestions (which are good), can be built on top. They don't conceptually conflict with the changes here if I understood things right?",
            "created_at": "2023-06-13T18:15:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1589807598",
            "id": 1589807598,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ewonu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1589807598/reactions"
            },
            "updated_at": "2023-06-13T18:15:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1589807598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It is an improvement, but I'm also sensing we need to significantly rewrite large parts of this (not build on top) to get to an acceptable level of performance.\r\n\r\n10000 watchers on a simple python project is just crazy.",
            "created_at": "2023-06-13T18:17:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1589809492",
            "id": 1589809492,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ewpFU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1589809492/reactions"
            },
            "updated_at": "2023-06-14T10:45:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1589809492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> , but I'm also sensing we need to significantly rewrite large parts of this\r\n\r\nMaybe, but I think at least the concept of ignoring well-known stuff like `.git/objects` could stay, even if the change detection gets optimized. So I'd go ahead and merge this if there are no objections. \r\n\r\n> 10000 watchers on a simple python project is just crazy.\r\n\r\nAgreed\r\n\r\n",
            "created_at": "2023-06-13T18:26:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1589822168",
            "id": 1589822168,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ewsLY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1589822168/reactions"
            },
            "updated_at": "2023-06-13T18:26:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1589822168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok makes sense.",
            "created_at": "2023-06-13T18:30:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1589826046",
            "id": 1589826046,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ewtH-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1589826046/reactions"
            },
            "updated_at": "2023-06-13T18:30:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1589826046",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "\n> If `foo/bar/baz/file` is modified, that should cause a modification to `foo`, `bar` and `baz` as `mtime` should get updated. Therefore if we need to watch `foo/**` we can place a single poll object on `foo` and when that triggers, we just need to scan `foo` (via `fs_stat`) to figure out which files actually changed.\n\nI am afraid that it is git specific behavior. And I couldn't find any documentation for it. Normally directory `mtime` on directory gets updated only when you change it, I.e. you add, remove or rename its child. `mtime` changes are not recursive normally.  That would be major performance issue.\n\nI think the proper way to implement recursive file watching is through recursive inotify. Yeah, it is racy, but it shouldn't matter if neovim emits duplicate event. And if duplicate events are an issue, implementing debounce will solve it and improve performance for other platforms also.\n\nIn case neovim is not afraid to introduce new dependency, it is possible to use `inotify-tools` which ships c library which already solved this pain point. I don't know how easy it is to integrate it into uv loop.\n",
            "created_at": "2023-06-22T06:58:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1602107527",
            "id": 1602107527,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ffjiH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1602107527/reactions"
            },
            "updated_at": "2023-06-22T06:58:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1602107527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13090277?v=4",
                "events_url": "https://api.github.com/users/vlada-dudr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vlada-dudr/followers",
                "following_url": "https://api.github.com/users/vlada-dudr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vlada-dudr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vlada-dudr",
                "id": 13090277,
                "login": "vlada-dudr",
                "node_id": "MDQ6VXNlcjEzMDkwMjc3",
                "organizations_url": "https://api.github.com/users/vlada-dudr/orgs",
                "received_events_url": "https://api.github.com/users/vlada-dudr/received_events",
                "repos_url": "https://api.github.com/users/vlada-dudr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vlada-dudr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vlada-dudr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vlada-dudr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> it is possible to use `inotify-tools` which ships c library which already solved this pain point. I don't know how easy it is to integrate it into uv loop\r\n\r\nIs that cross-platform? Is there any hope (pending issue/PR) of libuv addressing this itself?",
            "created_at": "2023-06-22T07:26:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1602145221",
            "id": 1602145221,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5ffsvF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1602145221/reactions"
            },
            "updated_at": "2023-06-22T07:26:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1602145221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Is that cross-platform?\r\n\r\nInotify is itself linux sperecific api, so no. Windows and MacOS handle it well already.  I don't know how much support Neovim gives to BSD and other platforms. \r\n\r\n> Is there any hope (pending issue/PR) of libuv addressing this itself?\r\n\r\nThere are few rejected ones. Libuv seems to not want implement recursive watches themselves.\r\n\r\n\r\n\r\n",
            "created_at": "2023-06-23T21:38:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1605009793",
            "id": 1605009793,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5fqoGB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1605009793/reactions"
            },
            "updated_at": "2023-06-23T22:57:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1605009793",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13090277?v=4",
                "events_url": "https://api.github.com/users/vlada-dudr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vlada-dudr/followers",
                "following_url": "https://api.github.com/users/vlada-dudr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vlada-dudr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vlada-dudr",
                "id": 13090277,
                "login": "vlada-dudr",
                "node_id": "MDQ6VXNlcjEzMDkwMjc3",
                "organizations_url": "https://api.github.com/users/vlada-dudr/orgs",
                "received_events_url": "https://api.github.com/users/vlada-dudr/received_events",
                "repos_url": "https://api.github.com/users/vlada-dudr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vlada-dudr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vlada-dudr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vlada-dudr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/emcrisostomo/fswatch might be our best bet. It's a LibUV like library for file watching and uses:\r\n\r\n- inotify on linux\r\n- FSEvents on MacOS\r\n- kqueue on BSD\r\n- Windows' monitor\r\n- Polling on anything else\r\n\r\nWe can either add it as a build dep or make it an optional runtime dep and fallback to our current implementation when it is not available.",
            "created_at": "2023-07-12T16:23:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1632846953",
            "id": 1632846953,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5hU0Rp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1632846953/reactions"
            },
            "updated_at": "2023-07-12T16:25:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1632846953",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "Please consider backporting this into upcoming 0.9.2 release.",
            "created_at": "2023-07-28T21:06:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/23500#issuecomment-1656335541",
            "id": 1656335541,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
            "node_id": "IC_kwDOAPphoM5iuay1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656335541/reactions"
            },
            "updated_at": "2023-07-28T21:06:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656335541",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27911493?v=4",
                "events_url": "https://api.github.com/users/mortezadadgar/events{/privacy}",
                "followers_url": "https://api.github.com/users/mortezadadgar/followers",
                "following_url": "https://api.github.com/users/mortezadadgar/following{/other_user}",
                "gists_url": "https://api.github.com/users/mortezadadgar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mortezadadgar",
                "id": 27911493,
                "login": "mortezadadgar",
                "node_id": "MDQ6VXNlcjI3OTExNDkz",
                "organizations_url": "https://api.github.com/users/mortezadadgar/orgs",
                "received_events_url": "https://api.github.com/users/mortezadadgar/received_events",
                "repos_url": "https://api.github.com/users/mortezadadgar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mortezadadgar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mortezadadgar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mortezadadgar"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23500/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/23500/commits",
    "created_at": "2023-05-06T05:32:46Z",
    "diff_url": "https://github.com/neovim/neovim/pull/23500.diff",
    "draft": false,
    "head": {
        "label": "nojnhuh:watchfiles-perf",
        "ref": "watchfiles-perf",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/nojnhuh/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/nojnhuh/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/nojnhuh/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/nojnhuh/neovim/branches{/branch}",
            "clone_url": "https://github.com/nojnhuh/neovim.git",
            "collaborators_url": "https://api.github.com/repos/nojnhuh/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/nojnhuh/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/nojnhuh/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/nojnhuh/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/nojnhuh/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/nojnhuh/neovim/contributors",
            "created_at": "2022-11-25T04:19:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/nojnhuh/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/nojnhuh/neovim/downloads",
            "events_url": "https://api.github.com/repos/nojnhuh/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/nojnhuh/neovim/forks",
            "full_name": "nojnhuh/neovim",
            "git_commits_url": "https://api.github.com/repos/nojnhuh/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/nojnhuh/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/nojnhuh/neovim/git/tags{/sha}",
            "git_url": "git://github.com/nojnhuh/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/nojnhuh/neovim/hooks",
            "html_url": "https://github.com/nojnhuh/neovim",
            "id": 570391012,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/nojnhuh/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/nojnhuh/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/nojnhuh/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/nojnhuh/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/nojnhuh/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/nojnhuh/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/nojnhuh/neovim/merges",
            "milestones_url": "https://api.github.com/repos/nojnhuh/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIf955A",
            "notifications_url": "https://api.github.com/repos/nojnhuh/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/nojnhuh/neovim/pulls{/number}",
            "pushed_at": "2023-06-22T02:12:54Z",
            "releases_url": "https://api.github.com/repos/nojnhuh/neovim/releases{/id}",
            "size": 238105,
            "ssh_url": "git@github.com:nojnhuh/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/nojnhuh/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/nojnhuh/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/nojnhuh/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/nojnhuh/neovim/subscription",
            "svn_url": "https://github.com/nojnhuh/neovim",
            "tags_url": "https://api.github.com/repos/nojnhuh/neovim/tags",
            "teams_url": "https://api.github.com/repos/nojnhuh/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/nojnhuh/neovim/git/trees{/sha}",
            "updated_at": "2023-01-31T21:09:04Z",
            "url": "https://api.github.com/repos/nojnhuh/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "5efd76cee3b4abe244b8de87495d3650aeb65549",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
            "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
            "followers_url": "https://api.github.com/users/nojnhuh/followers",
            "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
            "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/nojnhuh",
            "id": 16093815,
            "login": "nojnhuh",
            "node_id": "MDQ6VXNlcjE2MDkzODE1",
            "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
            "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
            "repos_url": "https://api.github.com/users/nojnhuh/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/nojnhuh"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/23500",
    "id": 1340628136,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23500",
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "79a5b89d66db74560e751561542064674e980146",
    "merged_at": "2023-06-14T10:40:12Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5P6Fyo",
    "number": 23500,
    "patch_url": "https://github.com/neovim/neovim/pull/23500.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/23500/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/5efd76cee3b4abe244b8de87495d3650aeb65549",
    "title": "perf(lsp): reduce polling handles for workspace/didChangeWatchedFiles",
    "updated_at": "2023-07-28T21:06:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/23500",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
        "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
        "followers_url": "https://api.github.com/users/nojnhuh/followers",
        "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
        "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nojnhuh",
        "id": 16093815,
        "login": "nojnhuh",
        "node_id": "MDQ6VXNlcjE2MDkzODE1",
        "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
        "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
        "repos_url": "https://api.github.com/users/nojnhuh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nojnhuh"
    }
}