{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/8963/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/8963/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/8963"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/8963"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/8963/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d5450b96901892625aeffd679c54acbce90f1759"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5132,
            "forks_count": 5132,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1727,
            "open_issues_count": 1727,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-03-11T23:50:40Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 260739,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 74877,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-03-12T01:41:51Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 74877,
            "watchers_count": 74877,
            "web_commit_signoff_required": false
        },
        "sha": "89d7e24891c2281e301c232c4ad882b135c11bde",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "I've been trying to write a Node remote plugin and it's super frustrating because sometimes the remote host logs errors to `$NVIM_NODE_LOG_FILE`, but some runtime errors aren't caught and cause the node process to die, and the traceback isn't visible anywhere.\r\n\r\nThis PR modifies the call to `rpcstart()` so that if `$NVIM_<HOST>_LOG_FILE` is set, the remote host provider will attempt to write all of the process' stderr to `$NVIM_<HOST>_LOG_FILE` as well.",
    "closed_at": "2024-03-11T07:18:57Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r215709743"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/215709743"
                }
            },
            "author_association": "MEMBER",
            "body": "you will need to set `self.stderr` to `a:data` in this function, to make the existing message on early crash still work.",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-09-06T17:22:19Z",
            "diff_hunk": "@@ -19,3 +33,15 @@ function! provider#Poll(argv, orig_name, log_env) abort\n   endtry\n   throw remote#host#LoadErrorForHost(a:orig_name, a:log_env)\n endfunction\n+\n+\" Attempts to append the lines in 'data' to file at 'log_path'\n+\"\n+\" returns true if the file was written to successfully\n+function! s:WriteLines(orig_name, log_path, job, data, event)",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r215709743",
            "id": 215709743,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTcwOTc0Mw==",
            "original_commit_id": "9e02a647e32f634b81d20e5dbbac5c11cecd6795",
            "original_line": 40,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/autoload/provider.vim",
            "position": null,
            "pull_request_review_id": 153036324,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/215709743/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/215709743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r215767011"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/215767011"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm actually somewhat concerned about how we're turning on capturing of stderr and never garbage collecting it. Once startup has been successful, the only thing the stderr stream is doing is leaking memory.\r\n\r\nI'll try to rework the code a little so that we get the same message on crash but don't leak memory afterward.",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-09-06T20:30:32Z",
            "diff_hunk": "@@ -19,3 +33,15 @@ function! provider#Poll(argv, orig_name, log_env) abort\n   endtry\n   throw remote#host#LoadErrorForHost(a:orig_name, a:log_env)\n endfunction\n+\n+\" Attempts to append the lines in 'data' to file at 'log_path'\n+\"\n+\" returns true if the file was written to successfully\n+function! s:WriteLines(orig_name, log_path, job, data, event)",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r215767011",
            "id": 215767011,
            "in_reply_to_id": 215709743,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc2NzAxMQ==",
            "original_commit_id": "9e02a647e32f634b81d20e5dbbac5c11cecd6795",
            "original_line": 40,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/autoload/provider.vim",
            "position": null,
            "pull_request_review_id": 153107640,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/215767011/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/215767011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r215772850"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/215772850"
                }
            },
            "author_association": "MEMBER",
            "body": "Hosts are not supposed to write to stderr after startup is successful, rather there is methods for the host to send messages over the API, so there should not be any memory leak going on continuously, only a message getting saved and immediately discarded on a non-startup crash (\"garbage collection\" already happens by then). Rather than disabling stderr collection after startup (which could be done just by adding `chanclose(job, 'stderr')` ), it might be useful to show the stderr also at a later crash (or at least stash it in `:messages` with no immediate display if it is too jarring)",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-09-06T20:47:51Z",
            "diff_hunk": "@@ -19,3 +33,15 @@ function! provider#Poll(argv, orig_name, log_env) abort\n   endtry\n   throw remote#host#LoadErrorForHost(a:orig_name, a:log_env)\n endfunction\n+\n+\" Attempts to append the lines in 'data' to file at 'log_path'\n+\"\n+\" returns true if the file was written to successfully\n+function! s:WriteLines(orig_name, log_path, job, data, event)",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r215772850",
            "id": 215772850,
            "in_reply_to_id": 215709743,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc3Mjg1MA==",
            "original_commit_id": "9e02a647e32f634b81d20e5dbbac5c11cecd6795",
            "original_line": 40,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/autoload/provider.vim",
            "position": null,
            "pull_request_review_id": 153114870,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/215772850/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/215772850",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r243109883"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/243109883"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think we use array parameters anywhere. They can be misleading. Better to just use a pointer.",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-12-19T23:16:39Z",
            "diff_hunk": "@@ -32,6 +32,25 @@ static uv_mutex_t mutex;\n # include <execinfo.h>\n #endif\n \n+#define LOCAL_TIME_STRING_LEN 20\n+\n+void get_local_time_string(char out[LOCAL_TIME_STRING_LEN])",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r243109883",
            "id": 243109883,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzEwOTg4Mw==",
            "original_commit_id": "339b97f81899530d1d232f0c855295decbd81ab0",
            "original_line": 37,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/log.c",
            "position": null,
            "pull_request_review_id": 186791968,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243109883/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243109883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r243109952"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/243109952"
                }
            },
            "author_association": "MEMBER",
            "body": "we have `strequal()` FWIW",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-12-19T23:17:03Z",
            "diff_hunk": "@@ -137,6 +163,94 @@ bool logmsg(int log_level, const char *context, const char *func_name,\n   return ret;\n }\n \n+/// Log an array of lines to $NVIM_LOG_FILE. The only failure condition is that\n+/// the log file can't be opened. Any other errors are written to the log file.\n+bool do_log_array(char *log_level, Array lines, Dictionary opt)\n+{\n+  bool success = true;\n+\n+  log_lock();\n+\n+  FILE *log_file = open_log_file();\n+\n+  if (log_file == NULL) {\n+    success = false;\n+    goto unlock;\n+  }\n+\n+  // get the current time\n+  char date_time[LOCAL_TIME_STRING_LEN];\n+  get_local_time_string(date_time);\n+\n+  // make an err_prefix for error lines that already contains the date and error\n+  // level. We make it a generous size because we'll populate it with opt[who]\n+  // further down and we can't know how big that will be.\n+  size_t error_max = 1000;\n+  char *err_prefix = malloc(sizeof(char) * error_max);\n+  snprintf(err_prefix, error_max, \"%s %s nvim_log():\",\n+           date_time, log_levels[ERROR_LOG_LEVEL]);\n+\n+  // extract char *who\n+  char *who = \"\";\n+  for (size_t i = 0; i < opt.size; i++) {\n+    String k = opt.items[i].key;\n+    Object v = opt.items[i].value;\n+    if (strequal(\"who\", k.data)) {\n+      if (v.type == kObjectTypeString) {\n+        size_t who_len = v.data.string.size + 3;\n+        who = malloc(who_len);\n+        snprintf(who, who_len, \"[%s]\", v.data.string.data);\n+\n+        // also rewrite our err_prefix to include *who\n+        snprintf(err_prefix, error_max, \"%s %s %s nvim_log():\",\n+                date_time, log_levels[ERROR_LOG_LEVEL], who);\n+      } else {\n+        fprintf(log_file, \"%s opt[who] must be a string\\n\", err_prefix);\n+      }\n+    } else {\n+      fprintf(log_file, \"%s unexpected key: opt[%s]\\n\", err_prefix, k.data);\n+    }\n+  }\n+\n+  // work out whether the provided log level is valid; if not, use 'ERROR'\n+  char *log_level_str;\n+  bool log_level_valid = false;\n+\n+  if (log_level != NULL) {\n+      log_level_valid = (0 == strcmp(log_level, \"ERROR\")\n+                         || 0 == strcmp(log_level, \"WARN\")\n+                         || 0 == strcmp(log_level, \"INFO\")\n+                         || 0 == strcmp(log_level, \"DEBUG\"));",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r243109952",
            "id": 243109952,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzEwOTk1Mg==",
            "original_commit_id": "339b97f81899530d1d232f0c855295decbd81ab0",
            "original_line": 223,
            "original_position": 101,
            "original_start_line": null,
            "path": "src/nvim/log.c",
            "position": null,
            "pull_request_review_id": 186792054,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243109952/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243109952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r243111234"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/243111234"
                }
            },
            "author_association": "MEMBER",
            "body": "Would it make more sense to have a function that converts Array/Dictionary to a formatted `char *`, rather than having a log-specific function that does that?\r\n\r\nI think we have something like that already, see `channel_create_event`:\r\n\r\n```c\r\n  (void)object_to_vim(DICTIONARY_OBJ(info), &tv, NULL);                                                                                                     \r\n  char *str = encode_tv2json(&tv, NULL);\r\n```\r\n\r\n`object_to_vim` converts any API object (Array, Dictionary, ...). Then we use `encode_tv2json` as a convenient way to get a fancy string representation.\r\n\r\nAlternatively there is `encode_vim_to_string` (see `encode_tv2string` for usage).",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-12-19T23:23:44Z",
            "diff_hunk": "@@ -137,6 +163,94 @@ bool logmsg(int log_level, const char *context, const char *func_name,\n   return ret;\n }\n \n+/// Log an array of lines to $NVIM_LOG_FILE. The only failure condition is that\n+/// the log file can't be opened. Any other errors are written to the log file.\n+bool do_log_array(char *log_level, Array lines, Dictionary opt)",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r243111234",
            "id": 243111234,
            "line": 169,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzExMTIzNA==",
            "original_commit_id": "339b97f81899530d1d232f0c855295decbd81ab0",
            "original_line": 168,
            "original_position": 46,
            "original_start_line": null,
            "path": "src/nvim/log.c",
            "position": 47,
            "pull_request_review_id": 186793613,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243111234/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243111234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r243120603"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/243120603"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hey that should be `data`, not `lines` :-S",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-12-20T00:14:56Z",
            "diff_hunk": "@@ -3,19 +3,46 @@\n \" Start the provider and perform a 'poll' request\n \"\n \" Returns a valid channel on success\n-function! provider#Poll(argv, orig_name, log_env) abort\n-  let job = {'rpc': v:true, 'stderr_buffered': v:true}\n+function! provider#Poll(argv, long_name, log_env) abort\n+  let job = {'rpc': v:true}\n+\n+  \" Jobs are exptected to log errors etc using nvim_log() via the rpc api;\n+  \" we're just writing stderr to the log file as a courtesy to users who are\n+  \" trying to debug broken providers. Therefore we we log the events at\n+  \" \"WARNING\" level because anything coming via stderr indicates a problem\n+  \" with the provider.\n+  let job['on_stderr'] = function('s:LogEvent', [printf('%s:stderr', a:long_name), 'WARNING'])\n+\n   try\n+    \" attempt to start the provider\n+    call s:Log('INFO', printf('Starting %s: %s', a:long_name, a:argv))\n     let channel_id = jobstart(a:argv, job)\n-    if channel_id > 0 && rpcrequest(channel_id, 'poll') ==# 'ok'\n+\n+    if channel_id <= 0\n+      throw printf('jobstart() returned %d', channel_id)\n+    endif\n+\n+    \" check that the the provider is responding\n+    if rpcrequest(channel_id, 'poll') ==# 'ok'\n+      call s:Log('INFO', a:long_name . ' is alive')\n       return channel_id\n     endif\n   catch\n+    let err = printf('Failed starting %s: %s',  a:long_name, v:exception)\n     echomsg v:throwpoint\n-    echomsg v:exception\n-    for row in get(job, 'stderr', [])\n-      echomsg row\n-    endfor\n+    echomsg err\n+    call s:Log('ERROR', err)\n   endtry\n-  throw remote#host#LoadErrorForHost(a:orig_name, a:log_env)\n+\n+  throw printf('Failed to load %s. Startup errors should be recorded in $NVIM_LOG_FILE'\n+        \\ .', or possibly %s if you are using an older neovim client library.',\n+        \\ a:long_name, a:log_env)\n+endfunction\n+\n+function! s:Log(log_level, msg)\n+  call nvim_log(a:log_level, [a:msg], {'who': 'provider.vim'})\n+endfun\n+\n+function! s:LogEvent(who, log_level, job, data, event)\n+  call nvim_log(a:log_level, lines, {'who': who})",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r243120603",
            "id": 243120603,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzEyMDYwMw==",
            "original_commit_id": "339b97f81899530d1d232f0c855295decbd81ab0",
            "original_line": 47,
            "original_position": 53,
            "original_start_line": null,
            "path": "runtime/autoload/provider.vim",
            "position": null,
            "pull_request_review_id": 186804982,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243120603/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243120603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r243120745"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/243120745"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "And even `a:data` + `a:who` for consistency.",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-12-20T00:15:46Z",
            "diff_hunk": "@@ -3,19 +3,46 @@\n \" Start the provider and perform a 'poll' request\n \"\n \" Returns a valid channel on success\n-function! provider#Poll(argv, orig_name, log_env) abort\n-  let job = {'rpc': v:true, 'stderr_buffered': v:true}\n+function! provider#Poll(argv, long_name, log_env) abort\n+  let job = {'rpc': v:true}\n+\n+  \" Jobs are exptected to log errors etc using nvim_log() via the rpc api;\n+  \" we're just writing stderr to the log file as a courtesy to users who are\n+  \" trying to debug broken providers. Therefore we we log the events at\n+  \" \"WARNING\" level because anything coming via stderr indicates a problem\n+  \" with the provider.\n+  let job['on_stderr'] = function('s:LogEvent', [printf('%s:stderr', a:long_name), 'WARNING'])\n+\n   try\n+    \" attempt to start the provider\n+    call s:Log('INFO', printf('Starting %s: %s', a:long_name, a:argv))\n     let channel_id = jobstart(a:argv, job)\n-    if channel_id > 0 && rpcrequest(channel_id, 'poll') ==# 'ok'\n+\n+    if channel_id <= 0\n+      throw printf('jobstart() returned %d', channel_id)\n+    endif\n+\n+    \" check that the the provider is responding\n+    if rpcrequest(channel_id, 'poll') ==# 'ok'\n+      call s:Log('INFO', a:long_name . ' is alive')\n       return channel_id\n     endif\n   catch\n+    let err = printf('Failed starting %s: %s',  a:long_name, v:exception)\n     echomsg v:throwpoint\n-    echomsg v:exception\n-    for row in get(job, 'stderr', [])\n-      echomsg row\n-    endfor\n+    echomsg err\n+    call s:Log('ERROR', err)\n   endtry\n-  throw remote#host#LoadErrorForHost(a:orig_name, a:log_env)\n+\n+  throw printf('Failed to load %s. Startup errors should be recorded in $NVIM_LOG_FILE'\n+        \\ .', or possibly %s if you are using an older neovim client library.',\n+        \\ a:long_name, a:log_env)\n+endfunction\n+\n+function! s:Log(log_level, msg)\n+  call nvim_log(a:log_level, [a:msg], {'who': 'provider.vim'})\n+endfun\n+\n+function! s:LogEvent(who, log_level, job, data, event)\n+  call nvim_log(a:log_level, lines, {'who': who})",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r243120745",
            "id": 243120745,
            "in_reply_to_id": 243120603,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzEyMDc0NQ==",
            "original_commit_id": "339b97f81899530d1d232f0c855295decbd81ab0",
            "original_line": 47,
            "original_position": 53,
            "original_start_line": null,
            "path": "runtime/autoload/provider.vim",
            "position": null,
            "pull_request_review_id": 186805156,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243120745/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243120745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r243128489"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/243128489"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The 3 options I considered were:\r\n\r\n**A)** Create an array of `char *` with pointers into the VimL Array and pass that along to a generic array logging function in `vim.c`.\r\n\r\nThis is nice in that `log.c` doesn't need to know anything about VimL types, but then you have to send the error messages through in a 2nd call to the generic logging function, which introduces a race condition where another process may write to the log file in between any error lines and log lines. You can solve that by doing the locking/unlocking of the log file inside the `nvim_log()` API function and doing two consecutive calls to the generic logging function, but now you have a generic log function which relies on the caller to do the locking/unlocking, which feels untidy/unsafe.\r\n\r\n**B)** Accept that we're going to have to lock/unlock the inside the `nvim_log()` API function, but instead of allocating potentially huge `char *` arrays up front, just iterate over the VimL array and call a generic line logging function once for each line.\r\n\r\nI like that this solution avoids allocating the entire `char *` array up front, but don't like that it results in an extra function call for every single log line. This would mean regenerating the timestamp for every single line, or else you have to outsource *that* to the `nvim_log()` API function as well.\r\n\r\n**C)** Just make a function in `log.c` that takes a VimL array.\r\n\r\nThis is a bit untidy in that `log.c` needs to start understanding VimL types, but it means that the locking, unlocking and timestamp generation stay within `log.c`, _and_ you don't have to allocate the `char *` array at all, _and_ the execution overhead of each log line is just the call to `fprintf()`.\r\n\r\n---\r\n\r\nThe ability to handle unexpectedly huge data sets efficiently has always been one of the big selling points of Vim, so as much as possible I wanted this `nvim_log()` method to also cope well with unexpected huge log arrays, even though it's unlikely any client will ever send through anything more than maybe a 1000-line stack trace. That's why I picked option **C** above.\r\n\r\nThoughts?",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-12-20T01:04:52Z",
            "diff_hunk": "@@ -137,6 +163,94 @@ bool logmsg(int log_level, const char *context, const char *func_name,\n   return ret;\n }\n \n+/// Log an array of lines to $NVIM_LOG_FILE. The only failure condition is that\n+/// the log file can't be opened. Any other errors are written to the log file.\n+bool do_log_array(char *log_level, Array lines, Dictionary opt)",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r243128489",
            "id": 243128489,
            "in_reply_to_id": 243111234,
            "line": 169,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzEyODQ4OQ==",
            "original_commit_id": "339b97f81899530d1d232f0c855295decbd81ab0",
            "original_line": 168,
            "original_position": 46,
            "original_start_line": null,
            "path": "src/nvim/log.c",
            "position": 47,
            "pull_request_review_id": 186814398,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243128489/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243128489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r243130185"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/243130185"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was trying to avoid having `get_local_time_string()` allocate a `char[]` that needs to be freed by the caller. Is that what you had in mind? Or would you have the caller allocate the `char[]` and pass the length as a 2nd argument? (I don't have enough C experience to know what the \"normal\" approach would be here, I'm assuming it's one of those two?)",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-12-20T01:16:24Z",
            "diff_hunk": "@@ -32,6 +32,25 @@ static uv_mutex_t mutex;\n # include <execinfo.h>\n #endif\n \n+#define LOCAL_TIME_STRING_LEN 20\n+\n+void get_local_time_string(char out[LOCAL_TIME_STRING_LEN])",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r243130185",
            "id": 243130185,
            "in_reply_to_id": 243109883,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzEzMDE4NQ==",
            "original_commit_id": "339b97f81899530d1d232f0c855295decbd81ab0",
            "original_line": 37,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/log.c",
            "position": null,
            "pull_request_review_id": 186816524,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243130185/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243130185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/8963#discussion_r243148433"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/8963"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/243148433"
                }
            },
            "author_association": "MEMBER",
            "body": "While it's valid C syntax to declare the function as you did, it just gets collapsed down to a pointer.  Nothing enforces the length.\r\n\r\n> I was trying to avoid having `get_local_time_string()` allocate a `char[]` that needs to be freed by the caller. Is that what you had in mind? Or would you have the caller allocate the `char[]` and pass the length as a 2nd argument?\r\n\r\nIt has to be one of the two. :) As long as it's clearly documented, either should be fine.  However, I would probably go with the latter.  Just make sure lengths are properly accounted for in `strftime()` and the fallback (`strlcpy()` or `strncpy()`).",
            "commit_id": "d5450b96901892625aeffd679c54acbce90f1759",
            "created_at": "2018-12-20T03:39:14Z",
            "diff_hunk": "@@ -32,6 +32,25 @@ static uv_mutex_t mutex;\n # include <execinfo.h>\n #endif\n \n+#define LOCAL_TIME_STRING_LEN 20\n+\n+void get_local_time_string(char out[LOCAL_TIME_STRING_LEN])",
            "html_url": "https://github.com/neovim/neovim/pull/8963#discussion_r243148433",
            "id": 243148433,
            "in_reply_to_id": 243109883,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MzE0ODQzMw==",
            "original_commit_id": "339b97f81899530d1d232f0c855295decbd81ab0",
            "original_line": 37,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/log.c",
            "position": null,
            "pull_request_review_id": 186839142,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243148433/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-01-16T02:19:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/243148433",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "a basic test would be good, if not too much trouble. We're growing a lot of code in there that doesn't get exercised..",
            "created_at": "2018-09-06T17:05:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-419169529",
            "id": 419169529,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE2OTUyOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/419169529/reactions"
            },
            "updated_at": "2018-09-06T17:06:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/419169529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've run into some challenges trying to implement this feature for the Python remote plugin hosts. The python-client has been \"cleverly\" designed such that instead of logging to `$NVIM_PYTHON_LOG_FILE`, it logs to a suffixed filename such as `$NVIM_PYTHON_LOG_FILE.\"_py3_rplugin\"`. This means if I want `provider.vim` to write stderr to the same suffixed file, I need to duplicate the logic from python-client which generates the suffix, _and_ try to rework the remote/host/provider plugins such that they have enough context to figure out which suffix to mention in the startup error message. In fact, I'll need to duplicate the log-splitting logic _just_ so I can modify the startup error message such that it doesn't mislead users about where to find the python logs.\r\n\r\nPersonally I'm strongly in favour of getting rid of the log-suffixing logic from python-client and having all of the python hosts just write to `$NVIM_PYTHON_LOG_FILE`. That extra complexity is going to leach out into the provider code, and it's not even nice for our users anyway. I wasted a great deal of time using `:split $NVIM_PYTHON_LOG_FILE` to reload the log file and wondering why nothing was being logged before I stumbled across the suffixed file by accident. We could easily just prefix the log entries with the python version and type of host and users can `tail -f $NVIM_PYTHON_LOG_FILE | grep <whichever>` in the unlikely even they're getting too much noise from a python host they don't care about.\r\n\r\nIf we really must have separate files for each of the python hosts, then we should have 4 different variables for them so that our software is at least putting the logs where the user asked.\r\n\r\n---\r\n\r\nIn summary, the options are:\r\n\r\n1) Get rid of the log-suffixing logic from python-client and instead just put a prefix on the log entries.\r\n\r\n2) Re-implement the log-suffixing logic in the remote host / provider plugins so that stderr is always logged to the same file that python-client is logging to.\r\n\r\n3) Use 4 separate $NVIM_PYTHON<VERSION>_<KIND>_LOG_FILE` variables for the various python hosts.",
            "created_at": "2018-09-23T20:57:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-423847340",
            "id": 423847340,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg0NzM0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423847340/reactions"
            },
            "updated_at": "2018-09-23T20:57:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423847340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The python-client has been \"cleverly\" designed such that instead of logging to \r\n\r\nIt was \"cleverly\" designed so the log file won't get overwritten by multiple versions of the python host, which would happen when one debugs in a realistic environment.\r\n\r\nWhy should neovim itself write anything at all to `$NVIM_PYTHON_LOG_FILE`? The file is meant for the python host to write to. Why can't the autoload provider just write to nvim's own log file?",
            "created_at": "2018-09-23T21:07:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-423848015",
            "id": 423848015,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg0ODAxNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423848015/reactions"
            },
            "updated_at": "2018-09-23T21:07:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423848015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In my mind, host-specific log files are deprecated in general. I'd prefer if all logging (except severe cases) fan-into the `nvim` API and everything goes to `$NVIM_LOG_FILE` or whatever sink `nvim` decides to write to. Currently this idea is vaporware in https://github.com/neovim/neovim/pull/7062 but if it makes sense for the friction described here, perhaps it won't take long to do a basic implementation.",
            "created_at": "2018-09-23T21:15:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-423848487",
            "id": 423848487,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg0ODQ4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423848487/reactions"
            },
            "updated_at": "2018-09-23T21:15:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423848487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk I guess we also could do this by having the python host \"logging\" to stderr, which will use the same code path for non-severe and severe (host language crash) log messages. Then whatever decision how to distinguish the different hosts could be done on the nvim side only I guess. ",
            "created_at": "2018-09-23T21:19:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-423848775",
            "id": 423848775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg0ODc3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423848775/reactions"
            },
            "updated_at": "2018-09-23T21:20:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423848775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Writing absolutely everything to `$NVIM_LOG_FILE` sounds like the better solution to me as well, so that users will always know where to look for errors and tracebacks. If there's no objections, I'll add an `nvim_log()` API function (as per #7062) to this PR and push all the host stderr streams through it.",
            "created_at": "2018-09-23T21:51:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-423850645",
            "id": 423850645,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzg1MDY0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423850645/reactions"
            },
            "updated_at": "2018-09-23T21:51:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/423850645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry for the delay guys, I had to rebuild an actual kitchen in the middle of all that.\r\n\r\nI've removed the original 2 commits and replaced them with a bunch of new ones that do two things:\r\n\r\n* Add an `nvim_log()` api function\r\n* Modify `provider.vim` to send all stderr to `nvim_log()` (and also log a few more things at INFO level).",
            "created_at": "2018-11-13T22:04:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-438455737",
            "id": 438455737,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQ1NTczNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/438455737/reactions"
            },
            "updated_at": "2018-11-13T22:04:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/438455737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This looks pretty good, but is somewhat risky. WIill merge after 0.3.2 release.",
            "created_at": "2018-12-19T23:37:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-448790776",
            "id": 448790776,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODc5MDc3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/448790776/reactions"
            },
            "updated_at": "2018-12-19T23:37:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/448790776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "#12503",
            "created_at": "2024-03-11T07:18:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/8963#issuecomment-1987766984",
            "id": 1987766984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
            "node_id": "IC_kwDOAPphoM52eurI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1987766984/reactions"
            },
            "updated_at": "2024-03-11T07:18:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1987766984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/8963/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/8963/commits",
    "created_at": "2018-09-06T06:30:07Z",
    "diff_url": "https://github.com/neovim/neovim/pull/8963.diff",
    "draft": false,
    "head": {
        "label": "phodge:rplugin-does-logging",
        "ref": "rplugin-does-logging",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/phodge/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/phodge/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/phodge/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/phodge/neovim/branches{/branch}",
            "clone_url": "https://github.com/phodge/neovim.git",
            "collaborators_url": "https://api.github.com/repos/phodge/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/phodge/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/phodge/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/phodge/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/phodge/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/phodge/neovim/contributors",
            "created_at": "2016-07-08T08:00:11Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/phodge/neovim/deployments",
            "description": "Vim-fork focused on extensibility and agility.",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/phodge/neovim/downloads",
            "events_url": "https://api.github.com/repos/phodge/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/phodge/neovim/forks",
            "full_name": "phodge/neovim",
            "git_commits_url": "https://api.github.com/repos/phodge/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/phodge/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/phodge/neovim/git/tags{/sha}",
            "git_url": "git://github.com/phodge/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://salt.bountysource.com/teams/neovim",
            "hooks_url": "https://api.github.com/repos/phodge/neovim/hooks",
            "html_url": "https://github.com/phodge/neovim",
            "id": 62870120,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/phodge/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/phodge/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/phodge/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/phodge/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/phodge/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/phodge/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/phodge/neovim/merges",
            "milestones_url": "https://api.github.com/repos/phodge/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnk2Mjg3MDEyMA==",
            "notifications_url": "https://api.github.com/repos/phodge/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
                "events_url": "https://api.github.com/users/phodge/events{/privacy}",
                "followers_url": "https://api.github.com/users/phodge/followers",
                "following_url": "https://api.github.com/users/phodge/following{/other_user}",
                "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/phodge",
                "id": 3629785,
                "login": "phodge",
                "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
                "organizations_url": "https://api.github.com/users/phodge/orgs",
                "received_events_url": "https://api.github.com/users/phodge/received_events",
                "repos_url": "https://api.github.com/users/phodge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/phodge"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/phodge/neovim/pulls{/number}",
            "pushed_at": "2022-01-20T09:47:07Z",
            "releases_url": "https://api.github.com/repos/phodge/neovim/releases{/id}",
            "size": 78839,
            "ssh_url": "git@github.com:phodge/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/phodge/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/phodge/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/phodge/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/phodge/neovim/subscription",
            "svn_url": "https://github.com/phodge/neovim",
            "tags_url": "https://api.github.com/repos/phodge/neovim/tags",
            "teams_url": "https://api.github.com/repos/phodge/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/phodge/neovim/git/trees{/sha}",
            "updated_at": "2018-06-24T20:51:43Z",
            "url": "https://api.github.com/repos/phodge/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d5450b96901892625aeffd679c54acbce90f1759",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
            "events_url": "https://api.github.com/users/phodge/events{/privacy}",
            "followers_url": "https://api.github.com/users/phodge/followers",
            "following_url": "https://api.github.com/users/phodge/following{/other_user}",
            "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/phodge",
            "id": 3629785,
            "login": "phodge",
            "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
            "organizations_url": "https://api.github.com/users/phodge/orgs",
            "received_events_url": "https://api.github.com/users/phodge/received_events",
            "repos_url": "https://api.github.com/users/phodge/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/phodge"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/8963",
    "id": 213508242,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8963",
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "",
            "id": 392811090,
            "name": "revisit-at-release",
            "node_id": "MDU6TGFiZWwzOTI4MTEwOTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/revisit-at-release"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1548913774,
            "name": "logging",
            "node_id": "MDU6TGFiZWwxNTQ4OTEzNzc0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/logging"
        }
    ],
    "locked": false,
    "merge_commit_sha": "99cb78701f582dedf6a7b5100b81d8439584425a",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 308,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-04-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 126,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-03-11T07:27:48Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzNTA4MjQy",
    "number": 8963,
    "patch_url": "https://github.com/neovim/neovim/pull/8963.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/8963/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d5450b96901892625aeffd679c54acbce90f1759",
    "title": "Remote host stderr should also append to $NVIM_LOG_FILE",
    "updated_at": "2024-03-11T07:18:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/8963",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3629785?v=4",
        "events_url": "https://api.github.com/users/phodge/events{/privacy}",
        "followers_url": "https://api.github.com/users/phodge/followers",
        "following_url": "https://api.github.com/users/phodge/following{/other_user}",
        "gists_url": "https://api.github.com/users/phodge/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/phodge",
        "id": 3629785,
        "login": "phodge",
        "node_id": "MDQ6VXNlcjM2Mjk3ODU=",
        "organizations_url": "https://api.github.com/users/phodge/orgs",
        "received_events_url": "https://api.github.com/users/phodge/received_events",
        "repos_url": "https://api.github.com/users/phodge/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/phodge/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phodge/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/phodge"
    }
}