{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30993/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30993/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30993"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30993"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30993/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30993"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/23e9ad56f8e3ef8551bad60d5b42bdef48f40192"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5688,
            "forks_count": 5688,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1831,
            "open_issues_count": 1831,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-11-04T23:26:33Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 292457,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 83048,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-11-05T01:27:55Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 83048,
            "watchers_count": 83048,
            "web_commit_signoff_required": false
        },
        "sha": "05d9e6a9e850ee797a4a018e72156dd62831a4b6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: There are three separate functions for printing the `:set` command for an setting an option to a file descriptor. These functions are used when creating the session file for an option. Having a function for each type increase code duplication and also makes it harder to add logic for new option types.\n\nSolution: Replace `put_set(num|bool|string)` with a single `put_set` function which works for all option types, this reduces code duplication and also makes it trivial to add support for more option types in the future.\n",
    "closed_at": "2024-11-01T22:44:56Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30993#discussion_r1822438815"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30993"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822438815"
                }
            },
            "author_association": "MEMBER",
            "body": "Where did this check go?",
            "commit_id": "23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
            "created_at": "2024-10-30T11:39:36Z",
            "diff_hunk": "@@ -4368,35 +4368,8 @@ int makeset(FILE *fd, int opt_flags, int local_only)\n             cmd = \"setlocal\";\n           }\n \n-          if (option_has_type(opt_idx, kOptValTypeBoolean)) {\n-            if (put_setbool(fd, cmd, opt->fullname, *(int *)varp) == FAIL) {\n-              return FAIL;\n-            }\n-          } else if (option_has_type(opt_idx, kOptValTypeNumber)) {\n-            if (put_setnum(fd, cmd, opt->fullname, (OptInt *)varp) == FAIL) {\n-              return FAIL;\n-            }\n-          } else {    // string\n-            bool do_endif = false;\n-\n-            // Don't set 'syntax' and 'filetype' again if the value is\n-            // already right, avoids reloading the syntax file.\n-            if (opt->indir == PV_SYN || opt->indir == PV_FT) {\n-              if (fprintf(fd, \"if &%s != '%s'\", opt->fullname,\n-                          *(char **)(varp)) < 0",
            "html_url": "https://github.com/neovim/neovim/pull/30993#discussion_r1822438815",
            "id": 1822438815,
            "line": 4386,
            "node_id": "PRRC_kwDOAPphoM5soDWf",
            "original_commit_id": "8d0691602e6bb0e4ce11b060334ee422a6ff77fe",
            "original_line": 4386,
            "original_position": 19,
            "original_start_line": 4382,
            "path": "src/nvim/option.c",
            "position": 26,
            "pull_request_review_id": 2404553163,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30993",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822438815/reactions"
            },
            "side": "LEFT",
            "start_line": 4382,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-10-30T11:39:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822438815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30993#discussion_r1822448938"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30993"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822448938"
                }
            },
            "author_association": "MEMBER",
            "body": "@echasnovski How necessary is this check? Removing it removes a fair amount of complexity, and tests seem to pass just fine without it. Seems like it's just for performance? If so, unless keeping that check is _really_ worth the added complexity, I'm in favor of removing it.",
            "commit_id": "23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
            "created_at": "2024-10-30T11:45:10Z",
            "diff_hunk": "@@ -4368,35 +4368,8 @@ int makeset(FILE *fd, int opt_flags, int local_only)\n             cmd = \"setlocal\";\n           }\n \n-          if (option_has_type(opt_idx, kOptValTypeBoolean)) {\n-            if (put_setbool(fd, cmd, opt->fullname, *(int *)varp) == FAIL) {\n-              return FAIL;\n-            }\n-          } else if (option_has_type(opt_idx, kOptValTypeNumber)) {\n-            if (put_setnum(fd, cmd, opt->fullname, (OptInt *)varp) == FAIL) {\n-              return FAIL;\n-            }\n-          } else {    // string\n-            bool do_endif = false;\n-\n-            // Don't set 'syntax' and 'filetype' again if the value is\n-            // already right, avoids reloading the syntax file.\n-            if (opt->indir == PV_SYN || opt->indir == PV_FT) {\n-              if (fprintf(fd, \"if &%s != '%s'\", opt->fullname,\n-                          *(char **)(varp)) < 0",
            "html_url": "https://github.com/neovim/neovim/pull/30993#discussion_r1822448938",
            "id": 1822448938,
            "in_reply_to_id": 1822438815,
            "line": 4386,
            "node_id": "PRRC_kwDOAPphoM5soF0q",
            "original_commit_id": "8d0691602e6bb0e4ce11b060334ee422a6ff77fe",
            "original_line": 4386,
            "original_position": 19,
            "original_start_line": 4382,
            "path": "src/nvim/option.c",
            "position": 26,
            "pull_request_review_id": 2404569169,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30993",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822448938/reactions"
            },
            "side": "LEFT",
            "start_line": 4382,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-10-30T11:48:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822448938",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30993#discussion_r1822458437"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30993"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822458437"
                }
            },
            "author_association": "MEMBER",
            "body": "I'll add it back for now",
            "commit_id": "23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
            "created_at": "2024-10-30T11:51:52Z",
            "diff_hunk": "@@ -4368,35 +4368,8 @@ int makeset(FILE *fd, int opt_flags, int local_only)\n             cmd = \"setlocal\";\n           }\n \n-          if (option_has_type(opt_idx, kOptValTypeBoolean)) {\n-            if (put_setbool(fd, cmd, opt->fullname, *(int *)varp) == FAIL) {\n-              return FAIL;\n-            }\n-          } else if (option_has_type(opt_idx, kOptValTypeNumber)) {\n-            if (put_setnum(fd, cmd, opt->fullname, (OptInt *)varp) == FAIL) {\n-              return FAIL;\n-            }\n-          } else {    // string\n-            bool do_endif = false;\n-\n-            // Don't set 'syntax' and 'filetype' again if the value is\n-            // already right, avoids reloading the syntax file.\n-            if (opt->indir == PV_SYN || opt->indir == PV_FT) {\n-              if (fprintf(fd, \"if &%s != '%s'\", opt->fullname,\n-                          *(char **)(varp)) < 0",
            "html_url": "https://github.com/neovim/neovim/pull/30993#discussion_r1822458437",
            "id": 1822458437,
            "in_reply_to_id": 1822438815,
            "line": 4386,
            "node_id": "PRRC_kwDOAPphoM5soIJF",
            "original_commit_id": "8d0691602e6bb0e4ce11b060334ee422a6ff77fe",
            "original_line": 4386,
            "original_position": 19,
            "original_start_line": 4382,
            "path": "src/nvim/option.c",
            "position": 26,
            "pull_request_review_id": 2404586656,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30993",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822458437/reactions"
            },
            "side": "LEFT",
            "start_line": 4382,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-10-30T11:51:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822458437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30993#discussion_r1822548792"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30993"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822548792"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is there now a blank line between `OptInt wc` and `wc_use_keyname(varp, &wc)`?",
            "commit_id": "23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
            "created_at": "2024-10-30T12:46:27Z",
            "diff_hunk": "@@ -4409,110 +4398,133 @@ int makeset(FILE *fd, int opt_flags, int local_only)\n /// 'sessionoptions' or 'viewoptions' contains \"folds\" but not \"options\".\n int makefoldset(FILE *fd)\n {\n-  if (put_setstring(fd, \"setlocal\", \"fdm\", &curwin->w_p_fdm, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fde\", &curwin->w_p_fde, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fmr\", &curwin->w_p_fmr, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fdi\", &curwin->w_p_fdi, 0) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fdl\", &curwin->w_p_fdl) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fml\", &curwin->w_p_fml) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fdn\", &curwin->w_p_fdn) == FAIL\n-      || put_setbool(fd, \"setlocal\", \"fen\", curwin->w_p_fen) == FAIL) {\n+  if (put_set(fd, \"setlocal\", kOptFoldmethod, &curwin->w_p_fdm) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldexpr, &curwin->w_p_fde) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldmarker, &curwin->w_p_fmr) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldignore, &curwin->w_p_fdi) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldlevel, &curwin->w_p_fdl) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldminlines, &curwin->w_p_fml) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldnestmax, &curwin->w_p_fdn) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldenable, &curwin->w_p_fen) == FAIL) {\n     return FAIL;\n   }\n \n   return OK;\n }\n \n-static int put_setstring(FILE *fd, char *cmd, char *name, char **valuep, uint64_t flags)\n+/// Print the \":set\" command to set a single option to file.\n+///\n+/// @param  fd       File descriptor.\n+/// @param  cmd      Command name.\n+/// @param  opt_idx  Option index in options[] table.\n+/// @param  varp     Pointer to option variable.\n+///\n+/// @return FAIL on error, OK otherwise.\n+static int put_set(FILE *fd, char *cmd, OptIndex opt_idx, void *varp)\n {\n-  if (fprintf(fd, \"%s %s=\", cmd, name) < 0) {\n-    return FAIL;\n+  OptVal value = optval_from_varp(opt_idx, varp);\n+  vimoption_T *opt = &options[opt_idx];\n+  char *name = opt->fullname;\n+  uint64_t flags = opt->flags;\n+\n+  if ((opt->indir & PV_BOTH) && varp != opt->var\n+      && optval_equal(value, get_option_unset_value(opt_idx))) {\n+    // Processing unset local value of global-local option. Do nothing.\n+    return OK;\n+  }\n+\n+  switch (value.type) {\n+  case kOptValTypeNil:\n+    abort();\n+  case kOptValTypeBoolean: {\n+    assert(value.data.boolean != kNone);\n+    bool value_bool = TRISTATE_TO_BOOL(value.data.boolean, false);\n+\n+    if (fprintf(fd, \"%s %s%s\", cmd, value_bool ? \"\" : \"no\", name) < 0) {\n+      return FAIL;\n+    }\n+    break;\n+  }\n+  case kOptValTypeNumber: {\n+    if (fprintf(fd, \"%s %s=\", cmd, name) < 0) {\n+      return FAIL;\n+    }\n+\n+    OptInt value_num = value.data.number;\n+    OptInt wc;\n+",
            "html_url": "https://github.com/neovim/neovim/pull/30993#discussion_r1822548792",
            "id": 1822548792,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5soeM4",
            "original_commit_id": "c2b8d7deb9426a574ecac4a32ad941cdbb82242e",
            "original_line": 4454,
            "original_position": 119,
            "original_start_line": 4454,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2404755689,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30993",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822548792/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-30T12:46:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822548792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30993#discussion_r1822629535"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30993"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822629535"
                }
            },
            "author_association": "MEMBER",
            "body": "Was just a stylistic choice to make it easier to read for myself. Will remove it since it's problematic",
            "commit_id": "23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
            "created_at": "2024-10-30T13:26:42Z",
            "diff_hunk": "@@ -4409,110 +4398,133 @@ int makeset(FILE *fd, int opt_flags, int local_only)\n /// 'sessionoptions' or 'viewoptions' contains \"folds\" but not \"options\".\n int makefoldset(FILE *fd)\n {\n-  if (put_setstring(fd, \"setlocal\", \"fdm\", &curwin->w_p_fdm, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fde\", &curwin->w_p_fde, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fmr\", &curwin->w_p_fmr, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fdi\", &curwin->w_p_fdi, 0) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fdl\", &curwin->w_p_fdl) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fml\", &curwin->w_p_fml) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fdn\", &curwin->w_p_fdn) == FAIL\n-      || put_setbool(fd, \"setlocal\", \"fen\", curwin->w_p_fen) == FAIL) {\n+  if (put_set(fd, \"setlocal\", kOptFoldmethod, &curwin->w_p_fdm) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldexpr, &curwin->w_p_fde) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldmarker, &curwin->w_p_fmr) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldignore, &curwin->w_p_fdi) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldlevel, &curwin->w_p_fdl) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldminlines, &curwin->w_p_fml) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldnestmax, &curwin->w_p_fdn) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldenable, &curwin->w_p_fen) == FAIL) {\n     return FAIL;\n   }\n \n   return OK;\n }\n \n-static int put_setstring(FILE *fd, char *cmd, char *name, char **valuep, uint64_t flags)\n+/// Print the \":set\" command to set a single option to file.\n+///\n+/// @param  fd       File descriptor.\n+/// @param  cmd      Command name.\n+/// @param  opt_idx  Option index in options[] table.\n+/// @param  varp     Pointer to option variable.\n+///\n+/// @return FAIL on error, OK otherwise.\n+static int put_set(FILE *fd, char *cmd, OptIndex opt_idx, void *varp)\n {\n-  if (fprintf(fd, \"%s %s=\", cmd, name) < 0) {\n-    return FAIL;\n+  OptVal value = optval_from_varp(opt_idx, varp);\n+  vimoption_T *opt = &options[opt_idx];\n+  char *name = opt->fullname;\n+  uint64_t flags = opt->flags;\n+\n+  if ((opt->indir & PV_BOTH) && varp != opt->var\n+      && optval_equal(value, get_option_unset_value(opt_idx))) {\n+    // Processing unset local value of global-local option. Do nothing.\n+    return OK;\n+  }\n+\n+  switch (value.type) {\n+  case kOptValTypeNil:\n+    abort();\n+  case kOptValTypeBoolean: {\n+    assert(value.data.boolean != kNone);\n+    bool value_bool = TRISTATE_TO_BOOL(value.data.boolean, false);\n+\n+    if (fprintf(fd, \"%s %s%s\", cmd, value_bool ? \"\" : \"no\", name) < 0) {\n+      return FAIL;\n+    }\n+    break;\n+  }\n+  case kOptValTypeNumber: {\n+    if (fprintf(fd, \"%s %s=\", cmd, name) < 0) {\n+      return FAIL;\n+    }\n+\n+    OptInt value_num = value.data.number;\n+    OptInt wc;\n+",
            "html_url": "https://github.com/neovim/neovim/pull/30993#discussion_r1822629535",
            "id": 1822629535,
            "in_reply_to_id": 1822548792,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sox6f",
            "original_commit_id": "c2b8d7deb9426a574ecac4a32ad941cdbb82242e",
            "original_line": 4454,
            "original_position": 119,
            "original_start_line": 4454,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2404903420,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30993",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822629535/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-30T13:26:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822629535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30993#discussion_r1822675252"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30993"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822675252"
                }
            },
            "author_association": "MEMBER",
            "body": "Then it's inconsistent with the boolean and string branches. Actually, I was suggesting moving the blank line before the `OptInt wc`.",
            "commit_id": "23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
            "created_at": "2024-10-30T13:46:24Z",
            "diff_hunk": "@@ -4409,110 +4398,133 @@ int makeset(FILE *fd, int opt_flags, int local_only)\n /// 'sessionoptions' or 'viewoptions' contains \"folds\" but not \"options\".\n int makefoldset(FILE *fd)\n {\n-  if (put_setstring(fd, \"setlocal\", \"fdm\", &curwin->w_p_fdm, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fde\", &curwin->w_p_fde, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fmr\", &curwin->w_p_fmr, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fdi\", &curwin->w_p_fdi, 0) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fdl\", &curwin->w_p_fdl) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fml\", &curwin->w_p_fml) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fdn\", &curwin->w_p_fdn) == FAIL\n-      || put_setbool(fd, \"setlocal\", \"fen\", curwin->w_p_fen) == FAIL) {\n+  if (put_set(fd, \"setlocal\", kOptFoldmethod, &curwin->w_p_fdm) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldexpr, &curwin->w_p_fde) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldmarker, &curwin->w_p_fmr) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldignore, &curwin->w_p_fdi) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldlevel, &curwin->w_p_fdl) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldminlines, &curwin->w_p_fml) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldnestmax, &curwin->w_p_fdn) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldenable, &curwin->w_p_fen) == FAIL) {\n     return FAIL;\n   }\n \n   return OK;\n }\n \n-static int put_setstring(FILE *fd, char *cmd, char *name, char **valuep, uint64_t flags)\n+/// Print the \":set\" command to set a single option to file.\n+///\n+/// @param  fd       File descriptor.\n+/// @param  cmd      Command name.\n+/// @param  opt_idx  Option index in options[] table.\n+/// @param  varp     Pointer to option variable.\n+///\n+/// @return FAIL on error, OK otherwise.\n+static int put_set(FILE *fd, char *cmd, OptIndex opt_idx, void *varp)\n {\n-  if (fprintf(fd, \"%s %s=\", cmd, name) < 0) {\n-    return FAIL;\n+  OptVal value = optval_from_varp(opt_idx, varp);\n+  vimoption_T *opt = &options[opt_idx];\n+  char *name = opt->fullname;\n+  uint64_t flags = opt->flags;\n+\n+  if ((opt->indir & PV_BOTH) && varp != opt->var\n+      && optval_equal(value, get_option_unset_value(opt_idx))) {\n+    // Processing unset local value of global-local option. Do nothing.\n+    return OK;\n+  }\n+\n+  switch (value.type) {\n+  case kOptValTypeNil:\n+    abort();\n+  case kOptValTypeBoolean: {\n+    assert(value.data.boolean != kNone);\n+    bool value_bool = TRISTATE_TO_BOOL(value.data.boolean, false);\n+\n+    if (fprintf(fd, \"%s %s%s\", cmd, value_bool ? \"\" : \"no\", name) < 0) {\n+      return FAIL;\n+    }\n+    break;\n+  }\n+  case kOptValTypeNumber: {\n+    if (fprintf(fd, \"%s %s=\", cmd, name) < 0) {\n+      return FAIL;\n+    }\n+\n+    OptInt value_num = value.data.number;\n+    OptInt wc;\n+",
            "html_url": "https://github.com/neovim/neovim/pull/30993#discussion_r1822675252",
            "id": 1822675252,
            "in_reply_to_id": 1822548792,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5so9E0",
            "original_commit_id": "c2b8d7deb9426a574ecac4a32ad941cdbb82242e",
            "original_line": 4454,
            "original_position": 119,
            "original_start_line": 4454,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2404981881,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30993",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822675252/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-30T13:46:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822675252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30993#discussion_r1822748060"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30993"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822748060"
                }
            },
            "author_association": "MEMBER",
            "body": "Should be good now",
            "commit_id": "23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
            "created_at": "2024-10-30T14:22:54Z",
            "diff_hunk": "@@ -4409,110 +4398,133 @@ int makeset(FILE *fd, int opt_flags, int local_only)\n /// 'sessionoptions' or 'viewoptions' contains \"folds\" but not \"options\".\n int makefoldset(FILE *fd)\n {\n-  if (put_setstring(fd, \"setlocal\", \"fdm\", &curwin->w_p_fdm, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fde\", &curwin->w_p_fde, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fmr\", &curwin->w_p_fmr, 0) == FAIL\n-      || put_setstring(fd, \"setlocal\", \"fdi\", &curwin->w_p_fdi, 0) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fdl\", &curwin->w_p_fdl) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fml\", &curwin->w_p_fml) == FAIL\n-      || put_setnum(fd, \"setlocal\", \"fdn\", &curwin->w_p_fdn) == FAIL\n-      || put_setbool(fd, \"setlocal\", \"fen\", curwin->w_p_fen) == FAIL) {\n+  if (put_set(fd, \"setlocal\", kOptFoldmethod, &curwin->w_p_fdm) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldexpr, &curwin->w_p_fde) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldmarker, &curwin->w_p_fmr) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldignore, &curwin->w_p_fdi) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldlevel, &curwin->w_p_fdl) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldminlines, &curwin->w_p_fml) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldnestmax, &curwin->w_p_fdn) == FAIL\n+      || put_set(fd, \"setlocal\", kOptFoldenable, &curwin->w_p_fen) == FAIL) {\n     return FAIL;\n   }\n \n   return OK;\n }\n \n-static int put_setstring(FILE *fd, char *cmd, char *name, char **valuep, uint64_t flags)\n+/// Print the \":set\" command to set a single option to file.\n+///\n+/// @param  fd       File descriptor.\n+/// @param  cmd      Command name.\n+/// @param  opt_idx  Option index in options[] table.\n+/// @param  varp     Pointer to option variable.\n+///\n+/// @return FAIL on error, OK otherwise.\n+static int put_set(FILE *fd, char *cmd, OptIndex opt_idx, void *varp)\n {\n-  if (fprintf(fd, \"%s %s=\", cmd, name) < 0) {\n-    return FAIL;\n+  OptVal value = optval_from_varp(opt_idx, varp);\n+  vimoption_T *opt = &options[opt_idx];\n+  char *name = opt->fullname;\n+  uint64_t flags = opt->flags;\n+\n+  if ((opt->indir & PV_BOTH) && varp != opt->var\n+      && optval_equal(value, get_option_unset_value(opt_idx))) {\n+    // Processing unset local value of global-local option. Do nothing.\n+    return OK;\n+  }\n+\n+  switch (value.type) {\n+  case kOptValTypeNil:\n+    abort();\n+  case kOptValTypeBoolean: {\n+    assert(value.data.boolean != kNone);\n+    bool value_bool = TRISTATE_TO_BOOL(value.data.boolean, false);\n+\n+    if (fprintf(fd, \"%s %s%s\", cmd, value_bool ? \"\" : \"no\", name) < 0) {\n+      return FAIL;\n+    }\n+    break;\n+  }\n+  case kOptValTypeNumber: {\n+    if (fprintf(fd, \"%s %s=\", cmd, name) < 0) {\n+      return FAIL;\n+    }\n+\n+    OptInt value_num = value.data.number;\n+    OptInt wc;\n+",
            "html_url": "https://github.com/neovim/neovim/pull/30993#discussion_r1822748060",
            "id": 1822748060,
            "in_reply_to_id": 1822548792,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5spO2c",
            "original_commit_id": "c2b8d7deb9426a574ecac4a32ad941cdbb82242e",
            "original_line": 4454,
            "original_position": 119,
            "original_start_line": 4454,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2405110945,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30993",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822748060/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-30T14:22:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822748060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30993/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30993/commits",
    "created_at": "2024-10-30T11:19:09Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30993.diff",
    "draft": false,
    "head": {
        "label": "famiu:refactor/options/put_set",
        "ref": "refactor/options/put_set",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/famiu/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/famiu/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/famiu/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/famiu/neovim/branches{/branch}",
            "clone_url": "https://github.com/famiu/neovim.git",
            "collaborators_url": "https://api.github.com/repos/famiu/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/famiu/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/famiu/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/famiu/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/famiu/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/famiu/neovim/contributors",
            "created_at": "2021-10-11T04:58:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/famiu/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/famiu/neovim/downloads",
            "events_url": "https://api.github.com/repos/famiu/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/famiu/neovim/forks",
            "full_name": "famiu/neovim",
            "git_commits_url": "https://api.github.com/repos/famiu/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/famiu/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/famiu/neovim/git/tags{/sha}",
            "git_url": "git://github.com/famiu/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/famiu/neovim/hooks",
            "html_url": "https://github.com/famiu/neovim",
            "id": 415783665,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/famiu/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/famiu/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/famiu/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/famiu/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/famiu/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/famiu/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/famiu/neovim/merges",
            "milestones_url": "https://api.github.com/repos/famiu/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGMha8Q",
            "notifications_url": "https://api.github.com/repos/famiu/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/famiu/neovim/pulls{/number}",
            "pushed_at": "2024-11-05T02:16:18Z",
            "releases_url": "https://api.github.com/repos/famiu/neovim/releases{/id}",
            "size": 287273,
            "ssh_url": "git@github.com:famiu/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/famiu/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/famiu/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/famiu/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/famiu/neovim/subscription",
            "svn_url": "https://github.com/famiu/neovim",
            "tags_url": "https://api.github.com/repos/famiu/neovim/tags",
            "teams_url": "https://api.github.com/repos/famiu/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/famiu/neovim/git/trees{/sha}",
            "updated_at": "2024-11-04T13:44:05Z",
            "url": "https://api.github.com/repos/famiu/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
            "events_url": "https://api.github.com/users/famiu/events{/privacy}",
            "followers_url": "https://api.github.com/users/famiu/followers",
            "following_url": "https://api.github.com/users/famiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/famiu",
            "id": 29580810,
            "login": "famiu",
            "node_id": "MDQ6VXNlcjI5NTgwODEw",
            "organizations_url": "https://api.github.com/users/famiu/orgs",
            "received_events_url": "https://api.github.com/users/famiu/received_events",
            "repos_url": "https://api.github.com/users/famiu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/famiu",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30993",
    "id": 2153660938,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30993",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "locked": false,
    "merge_commit_sha": "ec0c53b3da5484f1068e476a477d3f96a0a1a811",
    "merged_at": "2024-11-01T22:44:56Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6AXkIK",
    "number": 30993,
    "patch_url": "https://github.com/neovim/neovim/pull/30993.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30993/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/23e9ad56f8e3ef8551bad60d5b42bdef48f40192",
    "title": "refactor(options): unify `put_set(num|bool|string)`",
    "updated_at": "2024-11-02T09:16:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30993",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
        "events_url": "https://api.github.com/users/famiu/events{/privacy}",
        "followers_url": "https://api.github.com/users/famiu/followers",
        "following_url": "https://api.github.com/users/famiu/following{/other_user}",
        "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/famiu",
        "id": 29580810,
        "login": "famiu",
        "node_id": "MDQ6VXNlcjI5NTgwODEw",
        "organizations_url": "https://api.github.com/users/famiu/orgs",
        "received_events_url": "https://api.github.com/users/famiu/received_events",
        "repos_url": "https://api.github.com/users/famiu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/famiu",
        "user_view_type": "public"
    }
}