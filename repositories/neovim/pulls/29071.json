{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29071/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29071/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/29071"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29071"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29071/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29071"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/17334d267d2b690f21e308ff59e2bbffac658528"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5429,
            "forks_count": 5429,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1739,
            "open_issues_count": 1739,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-06-03T22:07:20Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 272034,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 78772,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-06-03T23:33:38Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 78772,
            "watchers_count": 78772,
            "web_commit_signoff_required": false
        },
        "sha": "efa45832ea02e777ce3f5556ef3cd959c164ec24",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "First commit:\r\n\r\nThe `complete()` mechanism matches completion candidates against\r\nthe typed text, so strict pre-filtering isn't necessary.\r\n\r\nThis is a first step towards supporting postfix snippets (like\r\n`items@insert` in luals)\r\n\r\n---\r\n\r\nSecond commit:\r\n\r\nChanges the approach on how `word` is inferred and enables support for postfix snippets\r\n\r\nThere are two goals here:\r\n\r\n1. The `word` should match what the user started typing, so that vim.fn.complete() doesn't\r\n   filter it away, preventing snippet expansion\r\n\r\n   For example, if they type `items@ins`, luals returns `table.insert(items, $0)` as\r\n   `textEdit.newText` and `insert` as label.\r\n   There would be no prefix match if `textEdit.newText` is used as `word`\r\n\r\n2. If users do not expand a snippet, but continue typing, they should see a somewhat reasonable\r\n   `word` getting inserted.\r\n\r\n   For example in:\r\n\r\n       insertText: \"testSuites ${1:Env}\"\r\n       label: \"testSuites\"\r\n\r\n   `testSuites` should have priority as `word`, as long as the full snippet gets expanded on accept (`<c-y>`)\r\n",
    "closed_at": "2024-05-30T07:24:24Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29071#discussion_r1618053104"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1618053104"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't this just be `item.textEdit.newText`? If I'm reading the specs correctly `textEdit` has priority over `insertText`.",
            "commit_id": "17334d267d2b690f21e308ff59e2bbffac658528",
            "created_at": "2024-05-29T01:22:05Z",
            "diff_hunk": "@@ -129,18 +129,33 @@ end\n --- @param item lsp.CompletionItem\n --- @return string\n local function get_completion_word(item)\n-  if item.textEdit ~= nil and item.textEdit.newText ~= nil and item.textEdit.newText ~= '' then\n-    if item.insertTextFormat == protocol.InsertTextFormat.PlainText then\n-      return item.textEdit.newText\n-    else\n-      return parse_snippet(item.textEdit.newText)\n-    end\n-  elseif item.insertText ~= nil and item.insertText ~= '' then\n-    if item.insertTextFormat == protocol.InsertTextFormat.PlainText then\n-      return item.insertText\n-    else\n+  if item.insertTextFormat == protocol.InsertTextFormat.Snippet then\n+    if item.textEdit then\n+      -- Use label instead of text if text has different starting characters.\n+      -- label is used as abbr (=displayed), but word is used for filtering\n+      -- This is required for things like postfix completion.\n+      -- E.g. in lua:\n+      --\n+      --    local f = {}\n+      --    f@|\n+      --      ▲\n+      --      └─ cursor\n+      --\n+      --    item.textEdit.newText: table.insert(f, $0)\n+      --    label: insert\n+      --\n+      -- Typing `i` would remove the candidate because newText starts with `t`.\n+      local text = item.insertText or item.textEdit.newText",
            "html_url": "https://github.com/neovim/neovim/pull/29071#discussion_r1618053104",
            "id": 1618053104,
            "line": 148,
            "node_id": "PRRC_kwDOAPphoM5gcYfw",
            "original_commit_id": "17334d267d2b690f21e308ff59e2bbffac658528",
            "original_line": 148,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": 30,
            "pull_request_review_id": 2084081825,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29071",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1618053104/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-29T01:24:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1618053104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29071#discussion_r1619092033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619092033"
                }
            },
            "author_association": "MEMBER",
            "body": "`item.textEdit.newText` still gets used if the snippet is accepted. The `insertText` is used because it looks as if this is the better choice for the `word` (which will get prefix matched by `complete()`)\r\n\r\nFor example, in jdtls you get snippet candidates to implement methods from a base class or interface.\r\n\r\nSay you have an `AstVisitor` class with various `visitXY` methods, and you implement one.\r\nIf you type `visit|` you'll get completion candidates for all the various methods, where an individual item can look like this:\r\n\r\n```\r\n  detail: Override method in 'AstVisitor'\r\n  filterText: @Override\\npublic Symbol visitAssignment(Assignment<?> node, ExpressionAnalysisContext context) {\\n    ${0:// TODO Auto-generated method stub\\n    return super.visitAssignment(node, context);}\\n}\r\n  insertText: visitAssignment\r\n  insertTextFormat: 2\r\n  kind: 2\r\n  label: visitAssignment(Assignment<?> node, ExpressionAnalysisContext context) : Symbol\r\n  sortText: 999999163\r\n  textEdit: table: 0x7a70f453e628\r\n    newText: @Override\\npublic Symbol visitAssignment(Assignment<?> node, ExpressionAnalysisContext context) {\\n    ${0:// TODO Auto-generated method stub\\n    return super.visitAssignment(node, context);}\\n}\r\n    range: table: 0x7a70f47f5bf8\r\n      end: table: 0x7a70f47f5c40\r\n        character: 12\r\n        line: 457\r\n      start: table: 0x7a70f40a3be0\r\n        character: 8\r\n        line: 457\r\n  textEditText: @Override\\npublic Symbol visitAssignment(Assignment<?> node, ExpressionAnalysisContext context) {\\n    ${0:// TODO Auto-generated method stub\\n    return super.visitAssignment(node, context);}\\n}\r\n```\r\n\r\nUsing `textEdit.newText` as word would mean that the entry would disappear, because `visit|` doesn't share the prefix with `@Override...`\r\n\r\nGranted, this might be over-fitting towards how `jdtls` represents things and I expect that we'll get issues about other language servers. But I'm fairly confident that we can keep tweaking these heuristics until we get a good experience cross languages. E.g. another option is to choose whatever has a prefix match (and is the shortest).\r\n",
            "commit_id": "17334d267d2b690f21e308ff59e2bbffac658528",
            "created_at": "2024-05-29T15:28:12Z",
            "diff_hunk": "@@ -129,18 +129,33 @@ end\n --- @param item lsp.CompletionItem\n --- @return string\n local function get_completion_word(item)\n-  if item.textEdit ~= nil and item.textEdit.newText ~= nil and item.textEdit.newText ~= '' then\n-    if item.insertTextFormat == protocol.InsertTextFormat.PlainText then\n-      return item.textEdit.newText\n-    else\n-      return parse_snippet(item.textEdit.newText)\n-    end\n-  elseif item.insertText ~= nil and item.insertText ~= '' then\n-    if item.insertTextFormat == protocol.InsertTextFormat.PlainText then\n-      return item.insertText\n-    else\n+  if item.insertTextFormat == protocol.InsertTextFormat.Snippet then\n+    if item.textEdit then\n+      -- Use label instead of text if text has different starting characters.\n+      -- label is used as abbr (=displayed), but word is used for filtering\n+      -- This is required for things like postfix completion.\n+      -- E.g. in lua:\n+      --\n+      --    local f = {}\n+      --    f@|\n+      --      ▲\n+      --      └─ cursor\n+      --\n+      --    item.textEdit.newText: table.insert(f, $0)\n+      --    label: insert\n+      --\n+      -- Typing `i` would remove the candidate because newText starts with `t`.\n+      local text = item.insertText or item.textEdit.newText",
            "html_url": "https://github.com/neovim/neovim/pull/29071#discussion_r1619092033",
            "id": 1619092033,
            "in_reply_to_id": 1618053104,
            "line": 148,
            "node_id": "PRRC_kwDOAPphoM5ggWJB",
            "original_commit_id": "17334d267d2b690f21e308ff59e2bbffac658528",
            "original_line": 148,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": 30,
            "pull_request_review_id": 2085751636,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29071",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619092033/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-29T15:28:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619092033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29071#discussion_r1619100423"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619100423"
                }
            },
            "author_association": "MEMBER",
            "body": "Another option would be to set `equal = 1` in the items for `complete()`, then it would no longer apply the prefix match and not discard the snippets. The downside is that if you don't expand the snippet, you get a less useful `word` added. For example it wouldn't handle newlines well.\r\n\r\nIt would also mean that we'd have to do manual re-filtering after each character - which means either also invoking a new request, or cache the entries in the `Context`.",
            "commit_id": "17334d267d2b690f21e308ff59e2bbffac658528",
            "created_at": "2024-05-29T15:33:59Z",
            "diff_hunk": "@@ -129,18 +129,33 @@ end\n --- @param item lsp.CompletionItem\n --- @return string\n local function get_completion_word(item)\n-  if item.textEdit ~= nil and item.textEdit.newText ~= nil and item.textEdit.newText ~= '' then\n-    if item.insertTextFormat == protocol.InsertTextFormat.PlainText then\n-      return item.textEdit.newText\n-    else\n-      return parse_snippet(item.textEdit.newText)\n-    end\n-  elseif item.insertText ~= nil and item.insertText ~= '' then\n-    if item.insertTextFormat == protocol.InsertTextFormat.PlainText then\n-      return item.insertText\n-    else\n+  if item.insertTextFormat == protocol.InsertTextFormat.Snippet then\n+    if item.textEdit then\n+      -- Use label instead of text if text has different starting characters.\n+      -- label is used as abbr (=displayed), but word is used for filtering\n+      -- This is required for things like postfix completion.\n+      -- E.g. in lua:\n+      --\n+      --    local f = {}\n+      --    f@|\n+      --      ▲\n+      --      └─ cursor\n+      --\n+      --    item.textEdit.newText: table.insert(f, $0)\n+      --    label: insert\n+      --\n+      -- Typing `i` would remove the candidate because newText starts with `t`.\n+      local text = item.insertText or item.textEdit.newText",
            "html_url": "https://github.com/neovim/neovim/pull/29071#discussion_r1619100423",
            "id": 1619100423,
            "in_reply_to_id": 1618053104,
            "line": 148,
            "node_id": "PRRC_kwDOAPphoM5ggYMH",
            "original_commit_id": "17334d267d2b690f21e308ff59e2bbffac658528",
            "original_line": 148,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": 30,
            "pull_request_review_id": 2085765274,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29071",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619100423/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-29T15:54:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619100423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29071#discussion_r1619909379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29071"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619909379"
                }
            },
            "author_association": "MEMBER",
            "body": "That sounds reasonable, I'm okay with the current approach then.\r\n\r\n> Another option would be to set equal = 1 in the items for complete()\r\n\r\nDoesn't that affect fuzzy matching?",
            "commit_id": "17334d267d2b690f21e308ff59e2bbffac658528",
            "created_at": "2024-05-30T05:05:23Z",
            "diff_hunk": "@@ -129,18 +129,33 @@ end\n --- @param item lsp.CompletionItem\n --- @return string\n local function get_completion_word(item)\n-  if item.textEdit ~= nil and item.textEdit.newText ~= nil and item.textEdit.newText ~= '' then\n-    if item.insertTextFormat == protocol.InsertTextFormat.PlainText then\n-      return item.textEdit.newText\n-    else\n-      return parse_snippet(item.textEdit.newText)\n-    end\n-  elseif item.insertText ~= nil and item.insertText ~= '' then\n-    if item.insertTextFormat == protocol.InsertTextFormat.PlainText then\n-      return item.insertText\n-    else\n+  if item.insertTextFormat == protocol.InsertTextFormat.Snippet then\n+    if item.textEdit then\n+      -- Use label instead of text if text has different starting characters.\n+      -- label is used as abbr (=displayed), but word is used for filtering\n+      -- This is required for things like postfix completion.\n+      -- E.g. in lua:\n+      --\n+      --    local f = {}\n+      --    f@|\n+      --      ▲\n+      --      └─ cursor\n+      --\n+      --    item.textEdit.newText: table.insert(f, $0)\n+      --    label: insert\n+      --\n+      -- Typing `i` would remove the candidate because newText starts with `t`.\n+      local text = item.insertText or item.textEdit.newText",
            "html_url": "https://github.com/neovim/neovim/pull/29071#discussion_r1619909379",
            "id": 1619909379,
            "in_reply_to_id": 1618053104,
            "line": 148,
            "node_id": "PRRC_kwDOAPphoM5gjdsD",
            "original_commit_id": "17334d267d2b690f21e308ff59e2bbffac658528",
            "original_line": 148,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/completion.lua",
            "position": 30,
            "pull_request_review_id": 2087234898,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29071",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619909379/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-30T05:05:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1619909379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "As discussed offline, I believe we want to put fuzzy matching behind a completion option.",
            "created_at": "2024-05-30T05:05:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/29071#issuecomment-2138688884",
            "id": 2138688884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29071",
            "node_id": "IC_kwDOAPphoM5_ec10",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2138688884/reactions"
            },
            "updated_at": "2024-05-30T05:05:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2138688884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29071/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/29071/commits",
    "created_at": "2024-05-28T19:42:27Z",
    "diff_url": "https://github.com/neovim/neovim/pull/29071.diff",
    "draft": false,
    "head": {
        "label": "mfussenegger:lsp-completion-match",
        "ref": "lsp-completion-match",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/mfussenegger/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/mfussenegger/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/mfussenegger/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/mfussenegger/neovim/branches{/branch}",
            "clone_url": "https://github.com/mfussenegger/neovim.git",
            "collaborators_url": "https://api.github.com/repos/mfussenegger/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/mfussenegger/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/mfussenegger/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/mfussenegger/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/mfussenegger/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/mfussenegger/neovim/contributors",
            "created_at": "2020-01-25T15:44:28Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/mfussenegger/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/mfussenegger/neovim/downloads",
            "events_url": "https://api.github.com/repos/mfussenegger/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/mfussenegger/neovim/forks",
            "full_name": "mfussenegger/neovim",
            "git_commits_url": "https://api.github.com/repos/mfussenegger/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/mfussenegger/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/mfussenegger/neovim/git/tags{/sha}",
            "git_url": "git://github.com/mfussenegger/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/mfussenegger/neovim/hooks",
            "html_url": "https://github.com/mfussenegger/neovim",
            "id": 236190222,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/mfussenegger/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/mfussenegger/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/mfussenegger/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/mfussenegger/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/mfussenegger/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/mfussenegger/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/mfussenegger/neovim/merges",
            "milestones_url": "https://api.github.com/repos/mfussenegger/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMzYxOTAyMjI=",
            "notifications_url": "https://api.github.com/repos/mfussenegger/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/mfussenegger/neovim/pulls{/number}",
            "pushed_at": "2024-06-03T20:24:46Z",
            "releases_url": "https://api.github.com/repos/mfussenegger/neovim/releases{/id}",
            "size": 267252,
            "ssh_url": "git@github.com:mfussenegger/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/mfussenegger/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/mfussenegger/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/mfussenegger/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/mfussenegger/neovim/subscription",
            "svn_url": "https://github.com/mfussenegger/neovim",
            "tags_url": "https://api.github.com/repos/mfussenegger/neovim/tags",
            "teams_url": "https://api.github.com/repos/mfussenegger/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/mfussenegger/neovim/git/trees{/sha}",
            "updated_at": "2024-01-03T04:13:43Z",
            "url": "https://api.github.com/repos/mfussenegger/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "17334d267d2b690f21e308ff59e2bbffac658528",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/29071",
    "id": 1892541021,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29071",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b2bad0ac91ddb9b33c3547b6fd4f7278794818d9",
    "merged_at": "2024-05-30T07:24:24Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5wzeJd",
    "number": 29071,
    "patch_url": "https://github.com/neovim/neovim/pull/29071.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/29071/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/17334d267d2b690f21e308ff59e2bbffac658528",
    "title": "feat(lsp): support postfix snippet completion; use fuzzy match on filterText ",
    "updated_at": "2024-05-30T07:24:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/29071",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger"
    }
}