{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28977/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28977/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28977"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28977"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28977/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2786e3f981c52f102dfe864627c99d9b8fe6393f"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5414,
            "forks_count": 5414,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1725,
            "open_issues_count": 1725,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-27T22:51:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 271477,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 78533,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-28T01:40:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 78533,
            "watchers_count": 78533,
            "web_commit_signoff_required": false
        },
        "sha": "206f8f24a2470f961cfe7e7c177443c0f199231c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "For many small/simple functions (like those found in shared.lua), the runtime of vim.validate can far exceed the runtime of the function itself. Add an \"overload\" to vim.validate that uses a simple assertion pattern, rather than parsing a full \"validation spec\".\r\n\r\nRef: https://github.com/neovim/neovim/issues/28921\r\n\r\nUsing a modified version of the script in the linked issue, the runtime performance compared to `vim.validate` is as follows:\r\n\r\n```\r\n$ VIMRUNTIME=runtime build/bin/nvim --headless -l scratch/test.lua\r\nvim.validate (old): 10000000 times took 1.24831 seconds\r\nno validation: 10000000 times took 0.0033800000000002 seconds\r\nvim.validate (new): 10000000 times took 0.003174 seconds\r\n```\r\n\r\nThe `vim.validate (new)` test case is this PR. We can see that this is just as fast as not using any validation at all (within measurement noise).",
    "closed_at": "2024-05-27T13:08:23Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1613750354"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613750354"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe worth including the actual value in addition to the types? \r\n(But might require trimming if it's too long, not sure if worth it)",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-24T16:36:31Z",
            "diff_hunk": "@@ -10,6 +10,21 @@\n ---@diagnostic disable-next-line: lowercase-global\n vim = vim or {}\n \n+--- Assert that a value has the expected type.\n+---\n+--- @generic T\n+--- @param v T\n+--- @param expected string Expected type\n+local function expecttype(v, expected)\n+  local actual = type(v)\n+\n+  -- Use an if statement with error() instead of assert() to avoid calling string.format if we don't\n+  -- need it.\n+  if actual ~= expected then\n+    error(('expected %s, got %s'):format(expected, actual))",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1613750354",
            "id": 1613750354,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gL-BS",
            "original_commit_id": "8b656c1f2f9808e901b5e43e17594a5fed3698c7",
            "original_line": 24,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2077398930,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613750354/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-24T16:42:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613750354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1613751543"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613751543"
                }
            },
            "author_association": "MEMBER",
            "body": "Reference: https://chrisfls.github.io/luajit-wiki/Numerical-Computing-Performance-Guide/\r\n\r\n> * Do not intersperse expensive or uncompiled operations.\r\n>   - E.g. avoid assert(type(x) == \"number\", \"x is a \"..mytype(x)\")\r\n>     *  The problem is not the assert() or the condition (basically free). The problem is the string concatenation, which has to be executed every time, even if the assertion never fails!",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-24T16:37:36Z",
            "diff_hunk": "@@ -10,6 +10,21 @@\n ---@diagnostic disable-next-line: lowercase-global\n vim = vim or {}\n \n+--- Assert that a value has the expected type.\n+---\n+--- @generic T\n+--- @param v T\n+--- @param expected string Expected type\n+local function expecttype(v, expected)\n+  local actual = type(v)\n+\n+  -- Use an if statement with error() instead of assert() to avoid calling string.format if we don't\n+  -- need it.",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1613751543",
            "id": 1613751543,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gL-T3",
            "original_commit_id": "46bbcef664cdcfe92c5e459fc36dc8dd898b0996",
            "original_line": 22,
            "original_position": 13,
            "original_start_line": 21,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2077401272,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613751543/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-24T16:37:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613751543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1613756571"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613756571"
                }
            },
            "author_association": "MEMBER",
            "body": "6b83da4f7403a73674d6f35381ac9101e0368688",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-24T16:41:46Z",
            "diff_hunk": "@@ -10,6 +10,21 @@\n ---@diagnostic disable-next-line: lowercase-global\n vim = vim or {}\n \n+--- Assert that a value has the expected type.\n+---\n+--- @generic T\n+--- @param v T\n+--- @param expected string Expected type\n+local function expecttype(v, expected)\n+  local actual = type(v)\n+\n+  -- Use an if statement with error() instead of assert() to avoid calling string.format if we don't\n+  -- need it.\n+  if actual ~= expected then\n+    error(('expected %s, got %s'):format(expected, actual))",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1613756571",
            "id": 1613756571,
            "in_reply_to_id": 1613750354,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gL_ib",
            "original_commit_id": "8b656c1f2f9808e901b5e43e17594a5fed3698c7",
            "original_line": 24,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2077409229,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613756571/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-24T16:41:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613756571",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1613756937"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613756937"
                }
            },
            "author_association": "MEMBER",
            "body": "For `nil` this shows `\"expected string, got nil (nil)\"` which is a little weird, but probably not weird enough to add a special case?",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-24T16:42:09Z",
            "diff_hunk": "@@ -10,6 +10,21 @@\n ---@diagnostic disable-next-line: lowercase-global\n vim = vim or {}\n \n+--- Assert that a value has the expected type.\n+---\n+--- @generic T\n+--- @param v T\n+--- @param expected string Expected type\n+local function expecttype(v, expected)\n+  local actual = type(v)\n+\n+  -- Use an if statement with error() instead of assert() to avoid calling string.format if we don't\n+  -- need it.\n+  if actual ~= expected then\n+    error(('expected %s, got %s'):format(expected, actual))",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1613756937",
            "id": 1613756937,
            "in_reply_to_id": 1613750354,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gL_oJ",
            "original_commit_id": "8b656c1f2f9808e901b5e43e17594a5fed3698c7",
            "original_line": 24,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2077409816,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613756937/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-24T16:42:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613756937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1613860459"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613860459"
                }
            },
            "author_association": "MEMBER",
            "body": "I *think* `generic` is only needed if you need to reuse the same type twice. The following is maybe easier:\r\n\r\n```suggestion\r\n--- @param v any Value to check\r\n```",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-24T18:24:06Z",
            "diff_hunk": "@@ -10,6 +10,21 @@\n ---@diagnostic disable-next-line: lowercase-global\n vim = vim or {}\n \n+--- Assert that a value has the expected type.\n+---\n+--- @generic T\n+--- @param v T Value to check",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1613860459",
            "id": 1613860459,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gMY5r",
            "original_commit_id": "ecf076297f46e1841581e7f9b1fd814b1947cb7c",
            "original_line": 16,
            "original_position": 7,
            "original_start_line": 15,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2077586556,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613860459/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-24T18:24:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1613860459",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1614546156"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614546156"
                }
            },
            "author_association": "MEMBER",
            "body": "Since this is the \"fast path\" (and the fail state), I'd agree it's not worth adding complexity to pretty this up.",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-25T10:30:10Z",
            "diff_hunk": "@@ -10,6 +10,21 @@\n ---@diagnostic disable-next-line: lowercase-global\n vim = vim or {}\n \n+--- Assert that a value has the expected type.\n+---\n+--- @generic T\n+--- @param v T\n+--- @param expected string Expected type\n+local function expecttype(v, expected)\n+  local actual = type(v)\n+\n+  -- Use an if statement with error() instead of assert() to avoid calling string.format if we don't\n+  -- need it.\n+  if actual ~= expected then\n+    error(('expected %s, got %s'):format(expected, actual))",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1614546156",
            "id": 1614546156,
            "in_reply_to_id": 1613750354,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gPATs",
            "original_commit_id": "8b656c1f2f9808e901b5e43e17594a5fed3698c7",
            "original_line": 24,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2078905282,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614546156/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-25T10:30:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614546156",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1614546350"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614546350"
                }
            },
            "author_association": "MEMBER",
            "body": "Put the reference in the comment? (May linkrot though.)",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-25T10:30:32Z",
            "diff_hunk": "@@ -10,6 +10,21 @@\n ---@diagnostic disable-next-line: lowercase-global\n vim = vim or {}\n \n+--- Assert that a value has the expected type.\n+---\n+--- @generic T\n+--- @param v T\n+--- @param expected string Expected type\n+local function expecttype(v, expected)\n+  local actual = type(v)\n+\n+  -- Use an if statement with error() instead of assert() to avoid calling string.format if we don't\n+  -- need it.",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1614546350",
            "id": 1614546350,
            "in_reply_to_id": 1613751543,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gPAWu",
            "original_commit_id": "46bbcef664cdcfe92c5e459fc36dc8dd898b0996",
            "original_line": 22,
            "original_position": 13,
            "original_start_line": 21,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2078905353,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614546350/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-25T10:30:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614546350",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1614630807"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614630807"
                }
            },
            "author_association": "MEMBER",
            "body": "this could be an overload on `vim.validate`. so for the \"fast path\", one can call `vim.validate(val: any, type: string)` instead of the kwargs form.",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-25T12:24:56Z",
            "diff_hunk": "@@ -214,7 +228,7 @@ end\n ---@param t table<T, any> (table) Table\n ---@return T[] : List of keys\n function vim.tbl_keys(t)\n-  vim.validate({ t = { t, 't' } })\n+  expecttype(t, 'table')",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1614630807",
            "id": 1614630807,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gPU-X",
            "original_commit_id": "0e828b23957b287f72375c173682c30a85479a2f",
            "original_line": 231,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2078959593,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614630807/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-25T12:24:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614630807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1614631811"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614631811"
                }
            },
            "author_association": "MEMBER",
            "body": "since the string concatenation is guarded by a condition, is there any reason we can't mention the arg name in the message?\r\n```suggestion\r\n    matches('s: expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))\r\n```",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-25T12:26:50Z",
            "diff_hunk": "@@ -226,11 +226,8 @@ describe('lua stdlib', function()\n     eq(false, fn.luaeval('vim.startswith(\"123\", \"2\")'))\n     eq(false, fn.luaeval('vim.startswith(\"123\", \"1234\")'))\n \n-    matches(\n-      'prefix: expected string, got nil',\n-      pcall_err(exec_lua, 'return vim.startswith(\"123\", nil)')\n-    )\n-    matches('s: expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))\n+    matches('expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(\"123\", nil)'))\n+    matches('expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1614631811",
            "id": 1614631811,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gPVOD",
            "original_commit_id": "0e828b23957b287f72375c173682c30a85479a2f",
            "original_line": 230,
            "original_position": 10,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": null,
            "pull_request_review_id": 2078959938,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614631811/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-25T12:26:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614631811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1614673857"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614673857"
                }
            },
            "author_association": "MEMBER",
            "body": "No reason other than we would have to pass the argument name and the argument itself to the function (an extra arg). Could be a bit tedious. vim.validate already does this though so it’s probably fine",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-25T13:38:14Z",
            "diff_hunk": "@@ -226,11 +226,8 @@ describe('lua stdlib', function()\n     eq(false, fn.luaeval('vim.startswith(\"123\", \"2\")'))\n     eq(false, fn.luaeval('vim.startswith(\"123\", \"1234\")'))\n \n-    matches(\n-      'prefix: expected string, got nil',\n-      pcall_err(exec_lua, 'return vim.startswith(\"123\", nil)')\n-    )\n-    matches('s: expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))\n+    matches('expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(\"123\", nil)'))\n+    matches('expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1614673857",
            "id": 1614673857,
            "in_reply_to_id": 1614631811,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gPffB",
            "original_commit_id": "0e828b23957b287f72375c173682c30a85479a2f",
            "original_line": 230,
            "original_position": 10,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": null,
            "pull_request_review_id": 2079000091,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614673857/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-25T13:38:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614673857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1614788647"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614788647"
                }
            },
            "author_association": "MEMBER",
            "body": "As long as it's still fast, this bit of tedium seems worth it for the UX improvement.",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-25T17:33:01Z",
            "diff_hunk": "@@ -226,11 +226,8 @@ describe('lua stdlib', function()\n     eq(false, fn.luaeval('vim.startswith(\"123\", \"2\")'))\n     eq(false, fn.luaeval('vim.startswith(\"123\", \"1234\")'))\n \n-    matches(\n-      'prefix: expected string, got nil',\n-      pcall_err(exec_lua, 'return vim.startswith(\"123\", nil)')\n-    )\n-    matches('s: expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))\n+    matches('expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(\"123\", nil)'))\n+    matches('expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1614788647",
            "id": 1614788647,
            "in_reply_to_id": 1614631811,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gP7gn",
            "original_commit_id": "0e828b23957b287f72375c173682c30a85479a2f",
            "original_line": 230,
            "original_position": 10,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": null,
            "pull_request_review_id": 2079091894,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614788647/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-25T17:33:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614788647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1614819639"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614819639"
                }
            },
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/28977/commits/8b88d99b2198cba251eb9b28717da523f7fb411f\r\n\r\nWasn't sure how to handle docs, I'll delegate that to you :) Also not sure the best way to handle type annotations for this. I added an `@overload` which seems to work?",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-25T19:09:08Z",
            "diff_hunk": "@@ -214,7 +228,7 @@ end\n ---@param t table<T, any> (table) Table\n ---@return T[] : List of keys\n function vim.tbl_keys(t)\n-  vim.validate({ t = { t, 't' } })\n+  expecttype(t, 'table')",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1614819639",
            "id": 1614819639,
            "in_reply_to_id": 1614630807,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gQDE3",
            "original_commit_id": "0e828b23957b287f72375c173682c30a85479a2f",
            "original_line": 231,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2079122133,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614819639/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-25T19:09:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614819639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1614819746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614819746"
                }
            },
            "author_association": "MEMBER",
            "body": "Done here https://github.com/neovim/neovim/commit/8b88d99b2198cba251eb9b28717da523f7fb411f",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-25T19:09:20Z",
            "diff_hunk": "@@ -226,11 +226,8 @@ describe('lua stdlib', function()\n     eq(false, fn.luaeval('vim.startswith(\"123\", \"2\")'))\n     eq(false, fn.luaeval('vim.startswith(\"123\", \"1234\")'))\n \n-    matches(\n-      'prefix: expected string, got nil',\n-      pcall_err(exec_lua, 'return vim.startswith(\"123\", nil)')\n-    )\n-    matches('s: expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))\n+    matches('expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(\"123\", nil)'))\n+    matches('expected string, got nil', pcall_err(exec_lua, 'return vim.startswith(nil, \"123\")'))",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1614819746",
            "id": 1614819746,
            "in_reply_to_id": 1614631811,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gQDGi",
            "original_commit_id": "0e828b23957b287f72375c173682c30a85479a2f",
            "original_line": 230,
            "original_position": 10,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": null,
            "pull_request_review_id": 2079122397,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614819746/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-25T19:09:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1614819746",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615008722"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615008722"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    1. vim.validate(name: str, value: any, type: string, optional?: boolean)\r\n```\r\nor\r\n```suggestion\r\n    1. vim.validate(name: str, value: any, type: string[, optional: boolean])\r\n```",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-26T02:59:06Z",
            "diff_hunk": "@@ -2366,10 +2366,29 @@ vim.trim({s})                                                     *vim.trim()*\n       • https://www.lua.org/pil/20.2.html\n \n vim.validate({opt})                                           *vim.validate()*\n-    Validates a parameter specification (types and values). Specs are\n-    evaluated in alphanumeric order, until the first failure.\n+    Validate function arguments.\n \n-    Usage example: >lua\n+    This function has two valid forms:\n+    1. vim.validate(name: str, value: any, type: string, optional: bool)",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615008722",
            "id": 1615008722,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gQxPS",
            "original_commit_id": "8b88d99b2198cba251eb9b28717da523f7fb411f",
            "original_line": 2372,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2079348694,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615008722/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-26T03:04:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615008722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615009174"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615009174"
                }
            },
            "author_association": "MEMBER",
            "body": "Would we want to mention that it won't work with \"callable\" because this path does not use `vim.is_callable`?",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-26T03:03:37Z",
            "diff_hunk": "@@ -2366,10 +2366,29 @@ vim.trim({s})                                                     *vim.trim()*\n       • https://www.lua.org/pil/20.2.html\n \n vim.validate({opt})                                           *vim.validate()*\n-    Validates a parameter specification (types and values). Specs are\n-    evaluated in alphanumeric order, until the first failure.\n+    Validate function arguments.\n \n-    Usage example: >lua\n+    This function has two valid forms:\n+    1. vim.validate(name: str, value: any, type: string, optional: bool)\n+    2. vim.validate(spec: table)\n+\n+    Form 1 validates that argument {name} with value {value} has the type\n+    {type}. If {optional} is true, then {value} may be null. This form should\n+    be preferred for simple cases.",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615009174",
            "id": 1615009174,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gQxWW",
            "original_commit_id": "8b88d99b2198cba251eb9b28717da523f7fb411f",
            "original_line": 2377,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2079348694,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615009174/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-26T03:04:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615009174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615214293"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615214293"
                }
            },
            "author_association": "MEMBER",
            "body": "Mentioned in https://github.com/neovim/neovim/pull/28977/commits/d5d7079557607d124b1d51d90b2e851c1c35104c",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-26T14:26:08Z",
            "diff_hunk": "@@ -2366,10 +2366,29 @@ vim.trim({s})                                                     *vim.trim()*\n       • https://www.lua.org/pil/20.2.html\n \n vim.validate({opt})                                           *vim.validate()*\n-    Validates a parameter specification (types and values). Specs are\n-    evaluated in alphanumeric order, until the first failure.\n+    Validate function arguments.\n \n-    Usage example: >lua\n+    This function has two valid forms:\n+    1. vim.validate(name: str, value: any, type: string, optional: bool)\n+    2. vim.validate(spec: table)\n+\n+    Form 1 validates that argument {name} with value {value} has the type\n+    {type}. If {optional} is true, then {value} may be null. This form should\n+    be preferred for simple cases.",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615214293",
            "id": 1615214293,
            "in_reply_to_id": 1615009174,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gRjbV",
            "original_commit_id": "8b88d99b2198cba251eb9b28717da523f7fb411f",
            "original_line": 2377,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2079643321,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615214293/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-26T14:26:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615214293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615214307"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615214307"
                }
            },
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/28977/commits/d5d7079557607d124b1d51d90b2e851c1c35104c",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-26T14:26:11Z",
            "diff_hunk": "@@ -2366,10 +2366,29 @@ vim.trim({s})                                                     *vim.trim()*\n       • https://www.lua.org/pil/20.2.html\n \n vim.validate({opt})                                           *vim.validate()*\n-    Validates a parameter specification (types and values). Specs are\n-    evaluated in alphanumeric order, until the first failure.\n+    Validate function arguments.\n \n-    Usage example: >lua\n+    This function has two valid forms:\n+    1. vim.validate(name: str, value: any, type: string, optional: bool)",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615214307",
            "id": 1615214307,
            "in_reply_to_id": 1615008722,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gRjbj",
            "original_commit_id": "8b88d99b2198cba251eb9b28717da523f7fb411f",
            "original_line": 2372,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2079643326,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615214307/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-26T14:26:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615214307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615215361"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615215361"
                }
            },
            "author_association": "MEMBER",
            "body": "(and slightly reworded in https://github.com/neovim/neovim/pull/28977/commits/717d170ae0dc753cbb5fac18be0e535c7489d5ae)",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-26T14:32:34Z",
            "diff_hunk": "@@ -2366,10 +2366,29 @@ vim.trim({s})                                                     *vim.trim()*\n       • https://www.lua.org/pil/20.2.html\n \n vim.validate({opt})                                           *vim.validate()*\n-    Validates a parameter specification (types and values). Specs are\n-    evaluated in alphanumeric order, until the first failure.\n+    Validate function arguments.\n \n-    Usage example: >lua\n+    This function has two valid forms:\n+    1. vim.validate(name: str, value: any, type: string, optional: bool)\n+    2. vim.validate(spec: table)\n+\n+    Form 1 validates that argument {name} with value {value} has the type\n+    {type}. If {optional} is true, then {value} may be null. This form should\n+    be preferred for simple cases.",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615215361",
            "id": 1615215361,
            "in_reply_to_id": 1615009174,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gRjsB",
            "original_commit_id": "8b88d99b2198cba251eb9b28717da523f7fb411f",
            "original_line": 2377,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2079644408,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615215361/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-26T14:32:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615215361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615267879"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615267879"
                }
            },
            "author_association": "MEMBER",
            "body": "should we hint that form 1 is faster?\r\n```suggestion\r\n    true, then {value} may be nil. Performance is comparable to assert().\r\n```",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-26T17:11:49Z",
            "diff_hunk": "@@ -2366,7 +2366,26 @@ vim.trim({s})                                                     *vim.trim()*\n       • https://www.lua.org/pil/20.2.html\n \n vim.validate({opt})                                           *vim.validate()*\n-    Validates a parameter specification (types and values). Specs are\n+    Validate function arguments.\n+\n+    This function has two valid forms:\n+    1. vim.validate(name: str, value: any, type: string, optional?: bool)\n+    2. vim.validate(spec: table)\n+\n+    Form 1 validates that argument {name} with value {value} has the type\n+    {type}. {type} must be a value returned by |lua-type()|. If {optional} is\n+    true, then {value} may be null. This form should be preferred for simple\n+    cases.",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615267879",
            "id": 1615267879,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gRwgn",
            "original_commit_id": "c8f31a7184c3096fc96570db571c8aac617f29bc",
            "original_line": 2378,
            "original_position": 14,
            "original_start_line": 2377,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2079758018,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615267879/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-26T17:11:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615267879",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615268414"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615268414"
                }
            },
            "author_association": "MEMBER",
            "body": "is there a reason not to inline `expecttype` ? the extra name (and docs) feels like needless indirection",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-26T17:12:49Z",
            "diff_hunk": "@@ -930,7 +972,15 @@ do\n   ---               only if the argument is valid. Can optionally return an additional\n   ---               informative error message as the second returned value.\n   ---             - msg: (optional) error string if validation fails\n-  function vim.validate(opt)\n+  --- @overload fun(name: string, val: any, expected: string, optional?: boolean)\n+  function vim.validate(opt, ...)\n+    if select('#', ...) >= 2 then\n+      -- Overloaded signature for fast/simple cases\n+      local name = opt --[[@as string]]\n+      local v, expected, optional = ... ---@type string, string, boolean?\n+      return expecttype(name, v, expected, optional)",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615268414",
            "id": 1615268414,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gRwo-",
            "original_commit_id": "c8f31a7184c3096fc96570db571c8aac617f29bc",
            "original_line": 981,
            "original_position": 161,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2079758138,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615268414/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-26T17:14:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615268414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615397406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615397406"
                }
            },
            "author_association": "MEMBER",
            "body": "c9e0debe156fa0551d53c45f66d60d1ca3546400",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-27T02:02:20Z",
            "diff_hunk": "@@ -930,7 +972,15 @@ do\n   ---               only if the argument is valid. Can optionally return an additional\n   ---               informative error message as the second returned value.\n   ---             - msg: (optional) error string if validation fails\n-  function vim.validate(opt)\n+  --- @overload fun(name: string, val: any, expected: string, optional?: boolean)\n+  function vim.validate(opt, ...)\n+    if select('#', ...) >= 2 then\n+      -- Overloaded signature for fast/simple cases\n+      local name = opt --[[@as string]]\n+      local v, expected, optional = ... ---@type string, string, boolean?\n+      return expecttype(name, v, expected, optional)",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615397406",
            "id": 1615397406,
            "in_reply_to_id": 1615268414,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gSQIe",
            "original_commit_id": "c8f31a7184c3096fc96570db571c8aac617f29bc",
            "original_line": 981,
            "original_position": 161,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 2079877562,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615397406/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-27T02:02:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615397406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28977#discussion_r1615397444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28977"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615397444"
                }
            },
            "author_association": "MEMBER",
            "body": "feec3da5dcc742ba42a552c3549ccaf02f569ba8",
            "commit_id": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
            "created_at": "2024-05-27T02:02:25Z",
            "diff_hunk": "@@ -2366,7 +2366,26 @@ vim.trim({s})                                                     *vim.trim()*\n       • https://www.lua.org/pil/20.2.html\n \n vim.validate({opt})                                           *vim.validate()*\n-    Validates a parameter specification (types and values). Specs are\n+    Validate function arguments.\n+\n+    This function has two valid forms:\n+    1. vim.validate(name: str, value: any, type: string, optional?: bool)\n+    2. vim.validate(spec: table)\n+\n+    Form 1 validates that argument {name} with value {value} has the type\n+    {type}. {type} must be a value returned by |lua-type()|. If {optional} is\n+    true, then {value} may be null. This form should be preferred for simple\n+    cases.",
            "html_url": "https://github.com/neovim/neovim/pull/28977#discussion_r1615397444",
            "id": 1615397444,
            "in_reply_to_id": 1615267879,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5gSQJE",
            "original_commit_id": "c8f31a7184c3096fc96570db571c8aac617f29bc",
            "original_line": 2378,
            "original_position": 14,
            "original_start_line": 2377,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2079877618,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615397444/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-27T02:02:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1615397444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Are there other functions where this would make sense (possibly in a follow-up), e.g., in `editor.lua`, `fs.lua` (`vim.fs.normalize` instead of `_fast = true`), `lsp/*` (`Client:request` or `resolve_bufnr`) or `treesitter/*` (`language.register` for some reason is fairly slow in nvim-treesitter startup)?",
            "created_at": "2024-05-25T11:37:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/28977#issuecomment-2131225898",
            "id": 2131225898,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28977",
            "node_id": "IC_kwDOAPphoM5_B-0q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2131225898/reactions"
            },
            "updated_at": "2024-05-25T11:39:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2131225898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28977/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28977/commits",
    "created_at": "2024-05-24T16:31:51Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28977.diff",
    "draft": false,
    "head": {
        "label": "gpanders:push-onsttspssutm",
        "ref": "push-onsttspssutm",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-05-27T13:08:26Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 264337,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "2786e3f981c52f102dfe864627c99d9b8fe6393f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28977",
    "id": 1887211296,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28977",
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 6664957181,
            "name": "ci:skip-news",
            "node_id": "LA_kwDOAPphoM8AAAABjUMs_Q",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:skip-news"
        }
    ],
    "locked": false,
    "merge_commit_sha": "48251134ee59a3e2f0aeb89608fa820c21b25d4f",
    "merged_at": "2024-05-27T13:08:23Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5wfI8g",
    "number": 28977,
    "patch_url": "https://github.com/neovim/neovim/pull/28977.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28977/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2786e3f981c52f102dfe864627c99d9b8fe6393f",
    "title": "perf: add fast path to vim.validate",
    "updated_at": "2024-05-27T13:08:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28977",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}