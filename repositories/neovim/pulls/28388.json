{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28388/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28388/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28388"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28388"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28388/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b3d4c8c542577dc8c95080ee4ff227292ad3f13a"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5277,
            "forks_count": 5277,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1705,
            "open_issues_count": 1705,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-23T00:28:51Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 267079,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 76421,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-23T01:19:16Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 76421,
            "watchers_count": 76421,
            "web_commit_signoff_required": false
        },
        "sha": "13ebfafc958c6feb4d908eed913c6dc3c6f05b4e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Implement https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_prepareTypeHierarchy",
    "closed_at": "2024-04-20T13:40:01Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1568939322"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568939322"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```\r\n\r\nLooks like a copy error?",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-17T14:24:26Z",
            "diff_hunk": "@@ -209,6 +209,9 @@ The following new APIs and features were added.\n     https://microsoft.github.io/language-server-protocol/specification/#textDocument_inlayHint\n   • Implemented pull diagnostic textDocument/diagnostic: |vim.lsp.diagnostic.on_diagnostic()|\n     https://microsoft.github.io/language-server-protocol/specification/#textDocument_diagnostic\n+  • Implemented LSP type hierarchy: |vim.lsp.buf.supertypes()| and |vim.lsp.buf.subtypes()|\n+  • |vim.lsp.status()| consumes the last progress messages as a string.",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1568939322",
            "id": 1568939322,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dhB06",
            "original_commit_id": "de8360ccd8131542c25339802a143ab4c86c0b21",
            "original_line": 213,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2006205501,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568939322/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-17T14:30:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568939322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1568941125"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568941125"
                }
            },
            "author_association": "MEMBER",
            "body": "This could use `vim.ui.select` instead. It's slightly easier to use and provides a more consistent interface for users, as the other lsp operations also use it. ",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-17T14:25:25Z",
            "diff_hunk": "@@ -495,6 +495,69 @@ function M.outgoing_calls()\n   call_hierarchy(ms.callHierarchy_outgoingCalls)\n end\n \n+--- @param type_hierarchy_items lsp.TypeHierarchyItem[]?\n+local function pick_type_hierarchy_item(type_hierarchy_items)\n+  if not type_hierarchy_items then\n+    return\n+  end\n+  if #type_hierarchy_items == 1 then\n+    return type_hierarchy_items[1]\n+  end\n+  local items = {}\n+  for i, item in pairs(type_hierarchy_items) do\n+    local entry = item.detail or item.name\n+    table.insert(items, string.format('%d. %s', i, entry))\n+  end\n+  local choice = vim.fn.inputlist(items)",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1568941125",
            "id": 1568941125,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dhCRF",
            "original_commit_id": "de8360ccd8131542c25339802a143ab4c86c0b21",
            "original_line": 511,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": null,
            "pull_request_review_id": 2006205501,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568941125/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-17T14:30:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568941125",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1568944832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568944832"
                }
            },
            "author_association": "MEMBER",
            "body": "For proper multi-client handling this should use `buf_request_all`. The results from the servers can be merged/appended.\r\n\r\nAs it is right now, it could result in multiple prompts to select an item, and then the quickfix list would be populated once for each client/server.\r\n",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-17T14:27:34Z",
            "diff_hunk": "@@ -495,6 +495,69 @@ function M.outgoing_calls()\n   call_hierarchy(ms.callHierarchy_outgoingCalls)\n end\n \n+--- @param type_hierarchy_items lsp.TypeHierarchyItem[]?\n+local function pick_type_hierarchy_item(type_hierarchy_items)\n+  if not type_hierarchy_items then\n+    return\n+  end\n+  if #type_hierarchy_items == 1 then\n+    return type_hierarchy_items[1]\n+  end\n+  local items = {}\n+  for i, item in pairs(type_hierarchy_items) do\n+    local entry = item.detail or item.name\n+    table.insert(items, string.format('%d. %s', i, entry))\n+  end\n+  local choice = vim.fn.inputlist(items)\n+  if choice < 1 or choice > #items then\n+    return\n+  end\n+  return choice\n+end\n+\n+--- @param method string\n+local function type_hierarchy(method)\n+  local params = util.make_position_params()\n+  --- @param result lsp.TypeHierarchyItem[]?\n+  request(ms.textDocument_prepareTypeHierarchy, params, function(err, result, ctx)",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1568944832",
            "id": 1568944832,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dhDLA",
            "original_commit_id": "de8360ccd8131542c25339802a143ab4c86c0b21",
            "original_line": 522,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": null,
            "pull_request_review_id": 2006205501,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568944832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-17T14:30:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568944832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1568947529"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568947529"
                }
            },
            "author_association": "MEMBER",
            "body": "This needs to consider the offset encoding of the client/server, and convert the (likey UTF-16) offset into byte offsets. You can search for `offset_encoding` to see how this translation is done in other places. ",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-17T14:29:14Z",
            "diff_hunk": "@@ -565,6 +565,35 @@ M[ms.callHierarchy_incomingCalls] = make_call_hierarchy_handler('from')\n --- @see # https://microsoft.github.io/language-server-protocol/specifications/specification-current/#callHierarchy_outgoingCalls\n M[ms.callHierarchy_outgoingCalls] = make_call_hierarchy_handler('to')\n \n+--- @private\n+---\n+--- Displays type hierarchy in the quickfix window.\n+local function make_type_hierarchy_handler()\n+  --- @param result lsp.TypeHierarchyItem[]\n+  return function(_, result)\n+    if not result then\n+      return\n+    end\n+    local items = {}\n+    for _, type_hierarchy_item in pairs(result) do\n+      table.insert(items, {\n+        filename = assert(vim.uri_to_fname(type_hierarchy_item.uri)),\n+        text = type_hierarchy_item.name,\n+        lnum = type_hierarchy_item.range.start.line + 1,\n+        col = type_hierarchy_item.range.start.character + 1,",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1568947529",
            "id": 1568947529,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dhD1J",
            "original_commit_id": "de8360ccd8131542c25339802a143ab4c86c0b21",
            "original_line": 583,
            "original_position": 19,
            "original_start_line": 582,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": null,
            "pull_request_review_id": 2006205501,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568947529/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-17T14:30:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1568947529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1570411610"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570411610"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    local merged_results = {}\r\n    for client_id, client_result in pairs(results) do\r\n      if client_result.error then\r\n        vim.notify(client_result.error.message, vim.log.levels.WARN)\r\n      elseif client_result.result then\r\n        for _, item in pairs(client_result.result) do\r\n          table.insert(merged_results, {client_id, item})\r\n        end\r\n      end\r\n    end\r\n    return merged_results\r\n  end\r\n\r\n  local bufnr = api.nvim_get_current_buf()\r\n  local params = util.make_position_params()\r\n  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\r\n  vim.lsp.buf_request_all(bufnr, ms.textDocument_prepareTypeHierarchy, params, function(results)\r\n    local merged_results = merge_results(results)\r\n    if #merged_results == 0 then\r\n      vim.notify('No items resolved', vim.log.levels.INFO)\r\n      return\r\n    end\r\n\r\n    if #merged_results == 1 then\r\n      local item = merged_results[1]\r\n      local client = vim.lsp.get_client_by_id(item[1])\r\n      client.request(method, { item = item[2] }, nil, bufnr)\r\n    else\r\n      local opts = {\r\n        prompt = 'Select a type hierarchy item:',\r\n        kind = 'typehierarchy',\r\n        format_item = function(item)\r\n          return item[2].name\r\n        end\r\n      }\r\n\r\n      vim.ui.select(merged_results, opts, function(item)\r\n        local client = vim.lsp.get_client_by_id(item[1])\r\n        client.request(method, { item = item[2] }, nil, bufnr)\r\n      end)\r\n    end\r\n  end)\r\n```\r\n\r\nSuggestions are untested, but they try to address a couple of things:\r\n\r\n- Only one notification if there are no merged results (instead of 1 per client without results)\r\n- bufnr is frozen, so that buffer switches don't impact the context of the async functions\r\n- Includes client-id in the merged results, to be able to use the right client for the follow up request. Otherwise the follow up request is sent to all clients, and some of them wouldn't be able to handle the item. It would also then trigger the handler many times, instead of just once - causing the quickfix list to get populated and overriden for each client\r\n- Adds `format_item` to the ui.select opts. Not sure if `name` is sufficient. Maybe including `detail` if available makes it easier to select the right option?\r\n- Removes the `handler` lookup. The default behavior is to look for handlers in the client, followed by the global lookup.\r\n",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-18T10:02:26Z",
            "diff_hunk": "@@ -495,6 +495,62 @@ function M.outgoing_calls()\n   call_hierarchy(ms.callHierarchy_outgoingCalls)\n end\n \n+--- @param method string\n+local function type_hierarchy(method)\n+  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\n+  local function merge_results(results)\n+    local merged_results = {}\n+    for _, client_result in pairs(results) do\n+      if client_result.error then\n+        vim.notify(client_result.error.message, vim.log.levels.WARN)\n+      elseif not client_result.result then\n+        vim.notify('No item resolved', vim.log.levels.WARN)\n+      else\n+        for _, item in pairs(client_result.result) do\n+          table.insert(merged_results, item)\n+        end\n+      end\n+    end\n+    return merged_results\n+  end\n+\n+  local params = util.make_position_params()\n+  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\n+  vim.lsp.buf_request_all(0, ms.textDocument_prepareTypeHierarchy, params, function(results)\n+    local merged_results = merge_results(results)\n+    if #merged_results == 0 then\n+      return\n+    end\n+\n+    local handler = vim.lsp.handlers[method]\n+    if #merged_results == 1 then\n+      --- @type lsp.TypeHierarchyItem\n+      request(method, { item = merged_results[1] }, handler)\n+    else\n+      vim.ui.select(merged_results, {\n+        prompt = 'Select a type hierarchy item:',\n+        kind = 'typehierarchy',\n+      }, function(item)\n+        request(method, { item = item }, handler)\n+      end)\n+    end\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1570411610",
            "id": 1570411610,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dmpRa",
            "original_commit_id": "c95f279c647d87d7f290d1ea537938850e11e356",
            "original_line": 565,
            "original_position": 43,
            "original_start_line": 502,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": null,
            "pull_request_review_id": 2008417024,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570411610/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-18T10:06:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570411610",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1570413157"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570413157"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- multiple items, the user can pick one using |vim.ui.select()|.\r\n```",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-18T10:03:31Z",
            "diff_hunk": "@@ -495,6 +495,62 @@ function M.outgoing_calls()\n   call_hierarchy(ms.callHierarchy_outgoingCalls)\n end\n \n+--- @param method string\n+local function type_hierarchy(method)\n+  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\n+  local function merge_results(results)\n+    local merged_results = {}\n+    for _, client_result in pairs(results) do\n+      if client_result.error then\n+        vim.notify(client_result.error.message, vim.log.levels.WARN)\n+      elseif not client_result.result then\n+        vim.notify('No item resolved', vim.log.levels.WARN)\n+      else\n+        for _, item in pairs(client_result.result) do\n+          table.insert(merged_results, item)\n+        end\n+      end\n+    end\n+    return merged_results\n+  end\n+\n+  local params = util.make_position_params()\n+  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\n+  vim.lsp.buf_request_all(0, ms.textDocument_prepareTypeHierarchy, params, function(results)\n+    local merged_results = merge_results(results)\n+    if #merged_results == 0 then\n+      return\n+    end\n+\n+    local handler = vim.lsp.handlers[method]\n+    if #merged_results == 1 then\n+      --- @type lsp.TypeHierarchyItem\n+      request(method, { item = merged_results[1] }, handler)\n+    else\n+      vim.ui.select(merged_results, {\n+        prompt = 'Select a type hierarchy item:',\n+        kind = 'typehierarchy',\n+      }, function(item)\n+        request(method, { item = item }, handler)\n+      end)\n+    end\n+  end)\n+end\n+\n+--- Lists all the subtypes of the symbol under the\n+--- cursor in the |quickfix| window. If the symbol can resolve to\n+--- multiple items, the user can pick one in the |inputlist()|.",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1570413157",
            "id": 1570413157,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dmppl",
            "original_commit_id": "c95f279c647d87d7f290d1ea537938850e11e356",
            "original_line": 542,
            "original_position": 48,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": null,
            "pull_request_review_id": 2008417024,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570413157/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-18T10:05:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570413157",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1570413405"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570413405"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- multiple items, the user can pick one in the |vim.ui.select()|.\r\n```",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-18T10:03:42Z",
            "diff_hunk": "@@ -495,6 +495,62 @@ function M.outgoing_calls()\n   call_hierarchy(ms.callHierarchy_outgoingCalls)\n end\n \n+--- @param method string\n+local function type_hierarchy(method)\n+  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\n+  local function merge_results(results)\n+    local merged_results = {}\n+    for _, client_result in pairs(results) do\n+      if client_result.error then\n+        vim.notify(client_result.error.message, vim.log.levels.WARN)\n+      elseif not client_result.result then\n+        vim.notify('No item resolved', vim.log.levels.WARN)\n+      else\n+        for _, item in pairs(client_result.result) do\n+          table.insert(merged_results, item)\n+        end\n+      end\n+    end\n+    return merged_results\n+  end\n+\n+  local params = util.make_position_params()\n+  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\n+  vim.lsp.buf_request_all(0, ms.textDocument_prepareTypeHierarchy, params, function(results)\n+    local merged_results = merge_results(results)\n+    if #merged_results == 0 then\n+      return\n+    end\n+\n+    local handler = vim.lsp.handlers[method]\n+    if #merged_results == 1 then\n+      --- @type lsp.TypeHierarchyItem\n+      request(method, { item = merged_results[1] }, handler)\n+    else\n+      vim.ui.select(merged_results, {\n+        prompt = 'Select a type hierarchy item:',\n+        kind = 'typehierarchy',\n+      }, function(item)\n+        request(method, { item = item }, handler)\n+      end)\n+    end\n+  end)\n+end\n+\n+--- Lists all the subtypes of the symbol under the\n+--- cursor in the |quickfix| window. If the symbol can resolve to\n+--- multiple items, the user can pick one in the |inputlist()|.\n+function M.subtypes()\n+  type_hierarchy(ms.typeHierarchy_subtypes)\n+end\n+\n+--- Lists all the supertypes of the symbol under the\n+--- cursor in the |quickfix| window. If the symbol can resolve to\n+--- multiple items, the user can pick one in the |inputlist()|.",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1570413405",
            "id": 1570413405,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dmptd",
            "original_commit_id": "c95f279c647d87d7f290d1ea537938850e11e356",
            "original_line": 549,
            "original_position": 55,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": null,
            "pull_request_review_id": 2008417024,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570413405/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-18T10:05:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1570413405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1571105008"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1571105008"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit, but just to remain consistent with the documentation above:\r\n\r\n```suggestion\r\n--- multiple items, the user can pick one using |vim.ui.select()|.\r\n```",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-18T17:05:24Z",
            "diff_hunk": "@@ -495,6 +495,90 @@ function M.outgoing_calls()\n   call_hierarchy(ms.callHierarchy_outgoingCalls)\n end\n \n+--- @param method string\n+local function type_hierarchy(method)\n+  --- Merge results from multiple clients into a single table. Client-ID is preserved.\n+  ---\n+  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\n+  local function merge_results(results)\n+    local merged_results = {}\n+    for client_id, client_result in pairs(results) do\n+      if client_result.error then\n+        vim.notify(client_result.error.message, vim.log.levels.WARN)\n+      elseif client_result.result then\n+        for _, item in pairs(client_result.result) do\n+          table.insert(merged_results, { client_id, item })\n+        end\n+      end\n+    end\n+    return merged_results\n+  end\n+\n+  local bufnr = api.nvim_get_current_buf()\n+  local params = util.make_position_params()\n+  --- @param results table<integer, {error: lsp.ResponseError, result: lsp.TypeHierarchyItem[]?}>\n+  vim.lsp.buf_request_all(bufnr, ms.textDocument_prepareTypeHierarchy, params, function(results)\n+    local merged_results = merge_results(results)\n+    if #merged_results == 0 then\n+      vim.notify('No items resolved', vim.log.levels.INFO)\n+      return\n+    end\n+\n+    if #merged_results == 1 then\n+      --- @type {integer, lsp.TypeHierarchyItem}\n+      local item = merged_results[1]\n+      local client = vim.lsp.get_client_by_id(item[1])\n+      if client then\n+        --- @type lsp.TypeHierarchyItem\n+        client.request(method, { item = item[2] }, nil, bufnr)\n+      else\n+        vim.notify(\n+          string.format('Client with id=%d disappeared during call hierarchy request', item[1]),\n+          vim.log.levels.WARN\n+        )\n+      end\n+    else\n+      local opts = {\n+        prompt = 'Select a type hierarchy item:',\n+        kind = 'typehierarchy',\n+        format_item = function(item)\n+          if not item[2].detail or #item[2].detail == 0 then\n+            return item[2].name\n+          end\n+          return string.format('%s %s', item[2].name, item[2].detail)\n+        end,\n+      }\n+\n+      vim.ui.select(merged_results, opts, function(item)\n+        local client = vim.lsp.get_client_by_id(item[1])\n+        if client then\n+          --- @type lsp.TypeHierarchyItem\n+          client.request(method, { item = item[2] }, nil, bufnr)\n+        else\n+          vim.notify(\n+            string.format('Client with id=%d disappeared during call hierarchy request', item[1]),\n+            vim.log.levels.WARN\n+          )\n+        end\n+      end)\n+    end\n+  end)\n+end\n+\n+--- Lists all the subtypes of the symbol under the\n+--- cursor in the |quickfix| window. If the symbol can resolve to\n+--- multiple items, the user can pick one using |vim.ui.select()|.\n+function M.subtypes()\n+  type_hierarchy(ms.typeHierarchy_subtypes)\n+end\n+\n+--- Lists all the supertypes of the symbol under the\n+--- cursor in the |quickfix| window. If the symbol can resolve to\n+--- multiple items, the user can pick one in the |vim.ui.select()|.",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1571105008",
            "id": 1571105008,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dpSjw",
            "original_commit_id": "838e99eb2703039221a51d52ca55a7899c47bee6",
            "original_line": 577,
            "original_position": 83,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": null,
            "pull_request_review_id": 2009446442,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1571105008/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-18T17:06:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1571105008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28388#discussion_r1571105618"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28388"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1571105618"
                }
            },
            "author_association": "MEMBER",
            "body": "No need to mark local functions as `private` (they are already scoped to the module).",
            "commit_id": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
            "created_at": "2024-04-18T17:05:59Z",
            "diff_hunk": "@@ -565,6 +565,47 @@ M[ms.callHierarchy_incomingCalls] = make_call_hierarchy_handler('from')\n --- @see # https://microsoft.github.io/language-server-protocol/specifications/specification-current/#callHierarchy_outgoingCalls\n M[ms.callHierarchy_outgoingCalls] = make_call_hierarchy_handler('to')\n \n+--- @private",
            "html_url": "https://github.com/neovim/neovim/pull/28388#discussion_r1571105618",
            "id": 1571105618,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5dpStS",
            "original_commit_id": "838e99eb2703039221a51d52ca55a7899c47bee6",
            "original_line": 568,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": null,
            "pull_request_review_id": 2009446442,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1571105618/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-18T17:06:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1571105618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have not implemented finding all sub/super types recursively. Here is a screenshot for `:lua vim.lsp.buf.supertypes()`\r\n![image](https://github.com/neovim/neovim/assets/40995042/284e1cb4-786e-4539-8d65-598c2299dbde)\r\n",
            "created_at": "2024-04-17T13:54:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/28388#issuecomment-2061322325",
            "id": 2061322325,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28388",
            "node_id": "IC_kwDOAPphoM563UhV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061322325/reactions"
            },
            "updated_at": "2024-04-17T14:10:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061322325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40995042?v=4",
                "events_url": "https://api.github.com/users/jiangyinzuo/events{/privacy}",
                "followers_url": "https://api.github.com/users/jiangyinzuo/followers",
                "following_url": "https://api.github.com/users/jiangyinzuo/following{/other_user}",
                "gists_url": "https://api.github.com/users/jiangyinzuo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jiangyinzuo",
                "id": 40995042,
                "login": "jiangyinzuo",
                "node_id": "MDQ6VXNlcjQwOTk1MDQy",
                "organizations_url": "https://api.github.com/users/jiangyinzuo/orgs",
                "received_events_url": "https://api.github.com/users/jiangyinzuo/received_events",
                "repos_url": "https://api.github.com/users/jiangyinzuo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jiangyinzuo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jiangyinzuo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jiangyinzuo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Left a few comments, but otherwise this look good to me.\r\n\r\nIn the first commit https://github.com/neovim/neovim/commit/dc279a6df5c1b300805224589639e223093711bd , I borrowed some code from `vim.lsp.buf.outgoing_calls` . Maybe we need another PR to refactor the following code.\r\n\r\nhttps://github.com/neovim/neovim/blob/e1ca7a7bfc954fae6991fc86d5da1a4eda864903/runtime/lua/vim/lsp/buf.lua#L456-L460\r\n\r\nhttps://github.com/neovim/neovim/blob/e1ca7a7bfc954fae6991fc86d5da1a4eda864903/runtime/lua/vim/lsp/buf.lua#L443-L448\r\n\r\nhttps://github.com/neovim/neovim/blob/e1ca7a7bfc954fae6991fc86d5da1a4eda864903/runtime/lua/vim/lsp/handlers.lua#L538-L560",
            "created_at": "2024-04-18T09:55:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/28388#issuecomment-2063483173",
            "id": 2063483173,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28388",
            "node_id": "IC_kwDOAPphoM56_kEl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2063483173/reactions"
            },
            "updated_at": "2024-04-18T09:55:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2063483173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40995042?v=4",
                "events_url": "https://api.github.com/users/jiangyinzuo/events{/privacy}",
                "followers_url": "https://api.github.com/users/jiangyinzuo/followers",
                "following_url": "https://api.github.com/users/jiangyinzuo/following{/other_user}",
                "gists_url": "https://api.github.com/users/jiangyinzuo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jiangyinzuo",
                "id": 40995042,
                "login": "jiangyinzuo",
                "node_id": "MDQ6VXNlcjQwOTk1MDQy",
                "organizations_url": "https://api.github.com/users/jiangyinzuo/orgs",
                "received_events_url": "https://api.github.com/users/jiangyinzuo/received_events",
                "repos_url": "https://api.github.com/users/jiangyinzuo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jiangyinzuo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jiangyinzuo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jiangyinzuo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Thanks for addressing my comments. I left a couple more suggestions.\r\n> \r\n> Should be good to merge after they're addressed.\r\n\r\nclangd does not returns `detail` field, but jdtls does. I have added `detail` field to the quickfix `text`.\r\nIn the following screenshot, `mylist` is the `detail` that jdtls returns.\r\n![image](https://github.com/neovim/neovim/assets/40995042/47f5ee7b-db2b-4008-8988-019455355224)",
            "created_at": "2024-04-18T13:39:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/28388#issuecomment-2063894181",
            "id": 2063894181,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28388",
            "node_id": "IC_kwDOAPphoM57BIal",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2063894181/reactions"
            },
            "updated_at": "2024-04-18T13:39:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2063894181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40995042?v=4",
                "events_url": "https://api.github.com/users/jiangyinzuo/events{/privacy}",
                "followers_url": "https://api.github.com/users/jiangyinzuo/followers",
                "following_url": "https://api.github.com/users/jiangyinzuo/following{/other_user}",
                "gists_url": "https://api.github.com/users/jiangyinzuo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jiangyinzuo",
                "id": 40995042,
                "login": "jiangyinzuo",
                "node_id": "MDQ6VXNlcjQwOTk1MDQy",
                "organizations_url": "https://api.github.com/users/jiangyinzuo/orgs",
                "received_events_url": "https://api.github.com/users/jiangyinzuo/received_events",
                "repos_url": "https://api.github.com/users/jiangyinzuo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jiangyinzuo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jiangyinzuo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jiangyinzuo"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28388/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28388/commits",
    "created_at": "2024-04-17T13:51:01Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28388.diff",
    "draft": false,
    "head": {
        "label": "jiangyinzuo:feat/lsp-buf-type-hierarchy",
        "ref": "feat/lsp-buf-type-hierarchy",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/jiangyinzuo/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/jiangyinzuo/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/jiangyinzuo/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/jiangyinzuo/neovim/branches{/branch}",
            "clone_url": "https://github.com/jiangyinzuo/neovim.git",
            "collaborators_url": "https://api.github.com/repos/jiangyinzuo/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/jiangyinzuo/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/jiangyinzuo/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/jiangyinzuo/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/jiangyinzuo/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/jiangyinzuo/neovim/contributors",
            "created_at": "2024-04-06T02:02:34Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/jiangyinzuo/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/jiangyinzuo/neovim/downloads",
            "events_url": "https://api.github.com/repos/jiangyinzuo/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/jiangyinzuo/neovim/forks",
            "full_name": "jiangyinzuo/neovim",
            "git_commits_url": "https://api.github.com/repos/jiangyinzuo/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/jiangyinzuo/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/jiangyinzuo/neovim/git/tags{/sha}",
            "git_url": "git://github.com/jiangyinzuo/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/jiangyinzuo/neovim/hooks",
            "html_url": "https://github.com/jiangyinzuo/neovim",
            "id": 782772119,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/jiangyinzuo/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/jiangyinzuo/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/jiangyinzuo/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/jiangyinzuo/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/jiangyinzuo/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/jiangyinzuo/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/jiangyinzuo/neovim/merges",
            "milestones_url": "https://api.github.com/repos/jiangyinzuo/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOLqgnlw",
            "notifications_url": "https://api.github.com/repos/jiangyinzuo/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/40995042?v=4",
                "events_url": "https://api.github.com/users/jiangyinzuo/events{/privacy}",
                "followers_url": "https://api.github.com/users/jiangyinzuo/followers",
                "following_url": "https://api.github.com/users/jiangyinzuo/following{/other_user}",
                "gists_url": "https://api.github.com/users/jiangyinzuo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jiangyinzuo",
                "id": 40995042,
                "login": "jiangyinzuo",
                "node_id": "MDQ6VXNlcjQwOTk1MDQy",
                "organizations_url": "https://api.github.com/users/jiangyinzuo/orgs",
                "received_events_url": "https://api.github.com/users/jiangyinzuo/received_events",
                "repos_url": "https://api.github.com/users/jiangyinzuo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jiangyinzuo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jiangyinzuo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jiangyinzuo"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/jiangyinzuo/neovim/pulls{/number}",
            "pushed_at": "2024-04-21T08:32:03Z",
            "releases_url": "https://api.github.com/repos/jiangyinzuo/neovim/releases{/id}",
            "size": 258495,
            "ssh_url": "git@github.com:jiangyinzuo/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/jiangyinzuo/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/jiangyinzuo/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/jiangyinzuo/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/jiangyinzuo/neovim/subscription",
            "svn_url": "https://github.com/jiangyinzuo/neovim",
            "tags_url": "https://api.github.com/repos/jiangyinzuo/neovim/tags",
            "teams_url": "https://api.github.com/repos/jiangyinzuo/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/jiangyinzuo/neovim/git/trees{/sha}",
            "updated_at": "2024-04-21T08:32:08Z",
            "url": "https://api.github.com/repos/jiangyinzuo/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/40995042?v=4",
            "events_url": "https://api.github.com/users/jiangyinzuo/events{/privacy}",
            "followers_url": "https://api.github.com/users/jiangyinzuo/followers",
            "following_url": "https://api.github.com/users/jiangyinzuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiangyinzuo/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/jiangyinzuo",
            "id": 40995042,
            "login": "jiangyinzuo",
            "node_id": "MDQ6VXNlcjQwOTk1MDQy",
            "organizations_url": "https://api.github.com/users/jiangyinzuo/orgs",
            "received_events_url": "https://api.github.com/users/jiangyinzuo/received_events",
            "repos_url": "https://api.github.com/users/jiangyinzuo/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/jiangyinzuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiangyinzuo/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/jiangyinzuo"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28388",
    "id": 1827484906,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28388",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "f190f758ac58d9cc955368e047b070e0a2261033",
    "merged_at": "2024-04-20T13:40:01Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5s7TTq",
    "number": 28388,
    "patch_url": "https://github.com/neovim/neovim/pull/28388.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28388/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b3d4c8c542577dc8c95080ee4ff227292ad3f13a",
    "title": "feat(lsp): add vim.lsp.buf.subtypes(), vim.lsp.buf.supertypes()",
    "updated_at": "2024-04-20T13:40:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28388",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/40995042?v=4",
        "events_url": "https://api.github.com/users/jiangyinzuo/events{/privacy}",
        "followers_url": "https://api.github.com/users/jiangyinzuo/followers",
        "following_url": "https://api.github.com/users/jiangyinzuo/following{/other_user}",
        "gists_url": "https://api.github.com/users/jiangyinzuo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jiangyinzuo",
        "id": 40995042,
        "login": "jiangyinzuo",
        "node_id": "MDQ6VXNlcjQwOTk1MDQy",
        "organizations_url": "https://api.github.com/users/jiangyinzuo/orgs",
        "received_events_url": "https://api.github.com/users/jiangyinzuo/received_events",
        "repos_url": "https://api.github.com/users/jiangyinzuo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jiangyinzuo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jiangyinzuo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jiangyinzuo"
    }
}