{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30029/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30029/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30029"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30029"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30029/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30029"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/0e98a9a31ae9a51d1f02d2b3d5d1911107ded958"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": {
        "commit_message": "test: support upvalues in exec_lua",
        "commit_title": "Merge pull request #30029 from lewis6991/testupval",
        "enabled_by": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        },
        "merge_method": "rebase"
    },
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5602,
            "forks_count": 5602,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1781,
            "open_issues_count": 1781,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-09-23T23:14:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 286529,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 81930,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-09-24T02:10:57Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 81930,
            "watchers_count": 81930,
            "web_commit_signoff_required": false
        },
        "sha": "a19e89022d8b72ee92bb974100b497f1c79b7765",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": null,
    "closed_at": "2024-09-21T15:04:10Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30029#discussion_r1716711542"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30029"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1716711542"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n    ['userdata'] = true,\r\n```",
            "commit_id": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
            "created_at": "2024-08-14T10:48:46Z",
            "diff_hunk": "@@ -835,19 +835,126 @@ function M.exec_capture(code)\n   return M.api.nvim_exec2(code, { output = true }).output\n end\n \n---- @param code string|function\n---- @return any\n+--- @param f function\n+--- @return table<string,any>\n+local function get_upvalues(f)\n+  local i = 1\n+  local upvalues = {} --- @type table<string,any>\n+  while true do\n+    local n, v = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    upvalues[n] = v\n+    i = i + 1\n+  end\n+  return upvalues\n+end\n+\n+--- @param f function\n+--- @param upvalues table<string,any>\n+local function set_upvalues(f, upvalues)\n+  local i = 1\n+  while true do\n+    local n = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    if upvalues[n] then\n+      debug.setupvalue(f, i, upvalues[n])\n+    end\n+    i = i + 1\n+  end\n+end\n+\n+--- @param upvalues table<string,any>\n+--- @param bytecode string\n+--- @param ... any[]\n+--- @return table<string,any>\n+--- @return any[]\n+local exec_lua_handler = string.dump(function(upvalues, bytecode, ...)\n+  local f = assert(loadstring(bytecode))\n+\n+  -- Copy in upvalues\n+  local i = 1\n+  while true do\n+    local n = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    local u = upvalues[n]\n+    if u then\n+      debug.setupvalue(f, i, u)\n+    end\n+    i = i + 1\n+  end\n+\n+  local ret = { f(...) }\n+\n+  -- Copy out upvalues\n+  i = 1\n+  while true do\n+    local n, v = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    upvalues[n] = v\n+    i = i + 1\n+  end\n+\n+  local invalid_types = {\n+    ['thread'] = true,\n+    ['function'] = true,\n+    ['userdaya'] = true,",
            "html_url": "https://github.com/neovim/neovim/pull/30029#discussion_r1716711542",
            "id": 1716711542,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5mUvB2",
            "original_commit_id": "41bae74b68379dbf0bf6843cdf3305c469727c9e",
            "original_line": 908,
            "original_position": 76,
            "original_start_line": null,
            "path": "test/functional/testnvim.lua",
            "position": null,
            "pull_request_review_id": 2237804681,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30029",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1716711542/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-14T10:48:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1716711542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30029#discussion_r1723272497"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30029"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723272497"
                }
            },
            "author_association": "MEMBER",
            "body": "Can you say a bit about what's going on here? `buf0` was renamed in some places, but not others.",
            "commit_id": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
            "created_at": "2024-08-20T12:59:53Z",
            "diff_hunk": "@@ -282,19 +282,19 @@ describe('lua buffer event callbacks: on_lines', function()\n   end)\n \n   it('does not SEGFAULT when accessing window buffer info in on_detach #14998', function()\n-    local code = [[\n+    local code = function()\n       local buf = vim.api.nvim_create_buf(false, false)\n \n-      vim.cmd\"split\"\n+      vim.cmd 'split'\n       vim.api.nvim_win_set_buf(0, buf)\n \n       vim.api.nvim_buf_attach(buf, false, {\n-        on_detach = function(_, buf)\n+        on_detach = function(_, buf0)",
            "html_url": "https://github.com/neovim/neovim/pull/30029#discussion_r1723272497",
            "id": 1723272497,
            "line": 292,
            "node_id": "PRRC_kwDOAPphoM5mtw0x",
            "original_commit_id": "421a84dfe2163dd849f71a6bab7ae3eea4664c67",
            "original_line": 292,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/lua/buffer_updates_spec.lua",
            "position": 14,
            "pull_request_review_id": 2247928680,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30029",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723272497/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-20T12:59:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723272497",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30029#discussion_r1723274692"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30029"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723274692"
                }
            },
            "author_association": "MEMBER",
            "body": "To prevent shadowing. Required by CI for luacheck.",
            "commit_id": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
            "created_at": "2024-08-20T13:01:23Z",
            "diff_hunk": "@@ -282,19 +282,19 @@ describe('lua buffer event callbacks: on_lines', function()\n   end)\n \n   it('does not SEGFAULT when accessing window buffer info in on_detach #14998', function()\n-    local code = [[\n+    local code = function()\n       local buf = vim.api.nvim_create_buf(false, false)\n \n-      vim.cmd\"split\"\n+      vim.cmd 'split'\n       vim.api.nvim_win_set_buf(0, buf)\n \n       vim.api.nvim_buf_attach(buf, false, {\n-        on_detach = function(_, buf)\n+        on_detach = function(_, buf0)",
            "html_url": "https://github.com/neovim/neovim/pull/30029#discussion_r1723274692",
            "id": 1723274692,
            "in_reply_to_id": 1723272497,
            "line": 292,
            "node_id": "PRRC_kwDOAPphoM5mtxXE",
            "original_commit_id": "421a84dfe2163dd849f71a6bab7ae3eea4664c67",
            "original_line": 292,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/lua/buffer_updates_spec.lua",
            "position": 14,
            "pull_request_review_id": 2247932250,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30029",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723274692/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-20T13:01:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723274692",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30029#discussion_r1723339647"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30029"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723339647"
                }
            },
            "author_association": "MEMBER",
            "body": "Another advantage of non-string `exec_lua` is that stylua can format it.\r\n",
            "commit_id": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
            "created_at": "2024-08-20T13:41:58Z",
            "diff_hunk": "@@ -152,7 +152,12 @@ describe('vim.filetype', function()\n       xml = { formatexpr = 'xmlformat#Format()' },\n     } do\n       for option, value in pairs(opts) do\n-        eq(value, exec_lua([[ return vim.filetype.get_option(...) ]], ft, option))\n+        eq(\n+          value,\n+          exec_lua(function()\n+            return vim.filetype.get_option(ft, option)",
            "html_url": "https://github.com/neovim/neovim/pull/30029#discussion_r1723339647",
            "id": 1723339647,
            "line": 158,
            "node_id": "PRRC_kwDOAPphoM5muBN_",
            "original_commit_id": "421a84dfe2163dd849f71a6bab7ae3eea4664c67",
            "original_line": 158,
            "original_position": 37,
            "original_start_line": null,
            "path": "test/functional/lua/filetype_spec.lua",
            "position": 37,
            "pull_request_review_id": 2248044005,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30029",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723339647/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-20T13:41:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723339647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30029#discussion_r1723350118"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30029"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723350118"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: store everything in a single `_G.__test_exec_lua` object?\r\n\r\n```suggestion\r\n      _G.__test_exec_lua = {\r\n        get_upvalues = loadstring((select(1,...))),\r\n        set_upvalues = loadstring((select(2,...))),\r\n        handler = loadstring((select(3,...))),\r\n      }\r\n```",
            "commit_id": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
            "created_at": "2024-08-20T13:48:02Z",
            "diff_hunk": "@@ -835,19 +835,156 @@ function M.exec_capture(code)\n   return M.api.nvim_exec2(code, { output = true }).output\n end\n \n+--- @param f function\n+--- @return table<string,any>\n+local function get_upvalues(f)\n+  local i = 1\n+  local upvalues = {} --- @type table<string,any>\n+  while true do\n+    local n, v = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    upvalues[n] = v\n+    i = i + 1\n+  end\n+  return upvalues\n+end\n+\n+--- @param f function\n+--- @param upvalues table<string,any>\n+local function set_upvalues(f, upvalues)\n+  local i = 1\n+  while true do\n+    local n = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    if upvalues[n] then\n+      debug.setupvalue(f, i, upvalues[n])\n+    end\n+    i = i + 1\n+  end\n+end\n+\n+--- @type fun(f: function): table<string,any>\n+_G.__get_upvalues = nil\n+\n+--- @type fun(f: function, upvalues: table<string,any>)\n+_G.__set_upvalues = nil\n+\n+--- @param bytecode string\n+--- @param upvalues table<string,any>\n+--- @param ... any[]\n+--- @return any[] result\n+--- @return table<string,any> upvalues\n+local function exec_lua_handler(bytecode, upvalues, ...)\n+  local f = assert(loadstring(bytecode))\n+  _G.__set_upvalues(f, upvalues)\n+  local ret = { f(...) } --- @type any[]\n+  local new_upvalues = _G.__get_upvalues(f)\n+\n+  do -- Check return value types for better error messages\n+    local invalid_types = {\n+      ['thread'] = true,\n+      ['function'] = true,\n+      ['userdata'] = true,\n+    }\n+\n+    for k, v in pairs(ret) do\n+      if invalid_types[type(v)] then\n+        error(\n+          string.format(\n+            \"Return index %d with value '%s' of type '%s' cannot be serialized over RPC\",\n+            k,\n+            tostring(v),\n+            type(v)\n+          )\n+        )\n+      end\n+    end\n+  end\n+\n+  return ret, new_upvalues\n+end\n+\n+--- Execute Lua code in the wrapped Nvim session.\n+---\n+--- When `code` is passed as a function, it is converted into Lua byte code.\n+---\n+--- Direct upvalues are copied over, however upvalues contained\n+--- within nested functions are not. Upvalues are also copied back when `code`\n+--- finishes executing. See `:help lua-upvalue`.\n+---\n+--- Only types which can be serialized can be transferred over, e.g:\n+--- `table`, `number`, `boolean`, `string`.\n+---\n+--- `code` runs with a different environment and thus will have a different global\n+--- environment. See `:help lua-environments`.\n+---\n+--- Example:\n+--- ```lua\n+--- local upvalue1 = 'upvalue1'\n+--- exec_lua(function(a, b, c)\n+---   print(upvalue1, a, b, c)\n+---   (function()\n+---     print(upvalue2)\n+---   end)()\n+--- end, 'a', 'b', 'c'\n+--- ```\n+--- Prints:\n+--- ```\n+--- upvalue1 a b c\n+--- nil\n+--- ```\n+---\n+--- Not supported:\n+--- ```lua\n+--- local a = vim.uv.new_timer()\n+--- exec_lua(function()\n+---   print(a) -- Error: a is of type 'userdata' which cannot be serialized.\n+--- end)\n+--- ```\n --- @param code string|function\n+--- @param ... any[]\n --- @return any\n function M.exec_lua(code, ...)\n-  if type(code) == 'function' then\n-    return M.api.nvim_exec_lua(\n+  if type(code) == 'string' then\n+    return M.api.nvim_exec_lua(code, { ... })\n+  end\n+\n+  assert(session)\n+\n+  if not session.exec_lua_setup then\n+    M.api.nvim_exec_lua(\n       [[\n-      local code = ...\n-      return loadstring(code)(select(2, ...))\n+      _G.__get_upvalues = loadstring((select(1,...)))\n+      _G.__set_upvalues = loadstring((select(2,...)))\n+      _G.__exec_lua_handler = loadstring((select(3,...)))",
            "html_url": "https://github.com/neovim/neovim/pull/30029#discussion_r1723350118",
            "id": 1723350118,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5muDxm",
            "original_commit_id": "421a84dfe2163dd849f71a6bab7ae3eea4664c67",
            "original_line": 965,
            "original_position": 133,
            "original_start_line": 961,
            "path": "test/functional/testnvim.lua",
            "position": null,
            "pull_request_review_id": 2248062579,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30029",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723350118/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-08-20T13:48:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1723350118",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30029#discussion_r1769529942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30029"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769529942"
                }
            },
            "author_association": "MEMBER",
            "body": "done",
            "commit_id": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
            "created_at": "2024-09-21T10:34:33Z",
            "diff_hunk": "@@ -835,19 +835,156 @@ function M.exec_capture(code)\n   return M.api.nvim_exec2(code, { output = true }).output\n end\n \n+--- @param f function\n+--- @return table<string,any>\n+local function get_upvalues(f)\n+  local i = 1\n+  local upvalues = {} --- @type table<string,any>\n+  while true do\n+    local n, v = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    upvalues[n] = v\n+    i = i + 1\n+  end\n+  return upvalues\n+end\n+\n+--- @param f function\n+--- @param upvalues table<string,any>\n+local function set_upvalues(f, upvalues)\n+  local i = 1\n+  while true do\n+    local n = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    if upvalues[n] then\n+      debug.setupvalue(f, i, upvalues[n])\n+    end\n+    i = i + 1\n+  end\n+end\n+\n+--- @type fun(f: function): table<string,any>\n+_G.__get_upvalues = nil\n+\n+--- @type fun(f: function, upvalues: table<string,any>)\n+_G.__set_upvalues = nil\n+\n+--- @param bytecode string\n+--- @param upvalues table<string,any>\n+--- @param ... any[]\n+--- @return any[] result\n+--- @return table<string,any> upvalues\n+local function exec_lua_handler(bytecode, upvalues, ...)\n+  local f = assert(loadstring(bytecode))\n+  _G.__set_upvalues(f, upvalues)\n+  local ret = { f(...) } --- @type any[]\n+  local new_upvalues = _G.__get_upvalues(f)\n+\n+  do -- Check return value types for better error messages\n+    local invalid_types = {\n+      ['thread'] = true,\n+      ['function'] = true,\n+      ['userdata'] = true,\n+    }\n+\n+    for k, v in pairs(ret) do\n+      if invalid_types[type(v)] then\n+        error(\n+          string.format(\n+            \"Return index %d with value '%s' of type '%s' cannot be serialized over RPC\",\n+            k,\n+            tostring(v),\n+            type(v)\n+          )\n+        )\n+      end\n+    end\n+  end\n+\n+  return ret, new_upvalues\n+end\n+\n+--- Execute Lua code in the wrapped Nvim session.\n+---\n+--- When `code` is passed as a function, it is converted into Lua byte code.\n+---\n+--- Direct upvalues are copied over, however upvalues contained\n+--- within nested functions are not. Upvalues are also copied back when `code`\n+--- finishes executing. See `:help lua-upvalue`.\n+---\n+--- Only types which can be serialized can be transferred over, e.g:\n+--- `table`, `number`, `boolean`, `string`.\n+---\n+--- `code` runs with a different environment and thus will have a different global\n+--- environment. See `:help lua-environments`.\n+---\n+--- Example:\n+--- ```lua\n+--- local upvalue1 = 'upvalue1'\n+--- exec_lua(function(a, b, c)\n+---   print(upvalue1, a, b, c)\n+---   (function()\n+---     print(upvalue2)\n+---   end)()\n+--- end, 'a', 'b', 'c'\n+--- ```\n+--- Prints:\n+--- ```\n+--- upvalue1 a b c\n+--- nil\n+--- ```\n+---\n+--- Not supported:\n+--- ```lua\n+--- local a = vim.uv.new_timer()\n+--- exec_lua(function()\n+---   print(a) -- Error: a is of type 'userdata' which cannot be serialized.\n+--- end)\n+--- ```\n --- @param code string|function\n+--- @param ... any[]\n --- @return any\n function M.exec_lua(code, ...)\n-  if type(code) == 'function' then\n-    return M.api.nvim_exec_lua(\n+  if type(code) == 'string' then\n+    return M.api.nvim_exec_lua(code, { ... })\n+  end\n+\n+  assert(session)\n+\n+  if not session.exec_lua_setup then\n+    M.api.nvim_exec_lua(\n       [[\n-      local code = ...\n-      return loadstring(code)(select(2, ...))\n+      _G.__get_upvalues = loadstring((select(1,...)))\n+      _G.__set_upvalues = loadstring((select(2,...)))\n+      _G.__exec_lua_handler = loadstring((select(3,...)))",
            "html_url": "https://github.com/neovim/neovim/pull/30029#discussion_r1769529942",
            "id": 1769529942,
            "in_reply_to_id": 1723350118,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5peOJW",
            "original_commit_id": "421a84dfe2163dd849f71a6bab7ae3eea4664c67",
            "original_line": 965,
            "original_position": 133,
            "original_start_line": 961,
            "path": "test/functional/testnvim.lua",
            "position": null,
            "pull_request_review_id": 2319708913,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30029",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769529942/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-21T10:34:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769529942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30029#discussion_r1770605440"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30029"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770605440"
                }
            },
            "author_association": "MEMBER",
            "body": "Not used anymore?",
            "commit_id": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
            "created_at": "2024-09-22T18:06:36Z",
            "diff_hunk": "@@ -837,19 +837,171 @@ function M.exec_capture(code)\n   return M.api.nvim_exec2(code, { output = true }).output\n end\n \n+--- @param f function\n+--- @return table<string,any>\n+local function get_upvalues(f)\n+  local i = 1\n+  local upvalues = {} --- @type table<string,any>\n+  while true do\n+    local n, v = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    upvalues[n] = v\n+    i = i + 1\n+  end\n+  return upvalues\n+end\n+\n+--- @param f function\n+--- @param upvalues table<string,any>\n+local function set_upvalues(f, upvalues)\n+  local i = 1\n+  while true do\n+    local n = debug.getupvalue(f, i)\n+    if not n then\n+      break\n+    end\n+    if upvalues[n] then\n+      debug.setupvalue(f, i, upvalues[n])\n+    end\n+    i = i + 1\n+  end\n+end\n+\n+--- @type fun(f: function): table<string,any>\n+_G.__get_upvalues = nil\n+\n+--- @type fun(f: function, upvalues: table<string,any>)\n+_G.__set_upvalues = nil",
            "html_url": "https://github.com/neovim/neovim/pull/30029#discussion_r1770605440",
            "id": 1770605440,
            "line": 876,
            "node_id": "PRRC_kwDOAPphoM5piUuA",
            "original_commit_id": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
            "original_line": 876,
            "original_position": 40,
            "original_start_line": 872,
            "path": "test/functional/testnvim.lua",
            "position": 40,
            "pull_request_review_id": 2320898142,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30029",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770605440/reactions"
            },
            "side": "RIGHT",
            "start_line": 872,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-22T18:06:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770605440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Even though I was hesitant about this, it's clear now that it gains 3+ improvements to clarity and robustness. Thanks for seeing it through @lewis6991 ",
            "created_at": "2024-09-22T17:52:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/30029#issuecomment-2366894021",
            "id": 2366894021,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30029",
            "node_id": "IC_kwDOAPphoM6NE-_F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366894021/reactions"
            },
            "updated_at": "2024-09-22T17:52:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366894021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30029/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30029/commits",
    "created_at": "2024-08-12T13:38:10Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30029.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:testupval",
        "ref": "testupval",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-09-22T14:05:26Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 277197,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30029",
    "id": 2015106864,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30029",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 110418643,
            "name": "test",
            "node_id": "MDU6TGFiZWwxMTA0MTg2NDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/test"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e5c174421df3872df0dd3a676609d1e74dfef6a9",
    "merged_at": "2024-09-21T15:04:10Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM54HBcw",
    "number": 30029,
    "patch_url": "https://github.com/neovim/neovim/pull/30029.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30029/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/0e98a9a31ae9a51d1f02d2b3d5d1911107ded958",
    "title": "test: support upvalues in exec_lua",
    "updated_at": "2024-09-22T18:06:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30029",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}