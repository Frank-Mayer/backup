{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27131/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27131/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27131"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27131"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27131/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/022f956350f4fe4c42346739c507b75a7866dfb3"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5174,
            "forks_count": 5174,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1735,
            "open_issues_count": 1735,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-30T00:09:25Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 251558,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 73268,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-30T01:30:36Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 73268,
            "watchers_count": 73268,
            "web_commit_signoff_required": false
        },
        "sha": "47cd532bf15d81c913e2c29b4c9a14c3654f85d2",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "The \"priority\" field of extmarks has been used to set priority of highlights between different subsystems. For example, extmarks from treesitter highlights might have priority 100 while extmarks from LSP semantic highlighting might have priority 105.\r\n\r\nHowever, there is no way to enforce priority of extmarks _within_ a single subsystem. For instance, if all treesitter highlights are meant to have priority 100 (relative to highlights from other subsystems), we cannot use the priority field to sort how individual extmarks within treesitter are displayed.\r\n\r\nToday this is handled by the order in which extmarks are defined such that an extmark defined later implicitly has higher priority than an extmark defined earlier. However, there are scenarios where we cannot depend on the ordering of extmarks: extmarks may need to be set in one order, but displayed in a different order.\r\n\r\nTo support this use case we add a \"_subpriority\" field which only has any effect when the \"priority\" between two extmarks is identical. This is not intended to be exposed so it is undocumented and prefixed with an underscore.\r\n\r\n---\r\n\r\nThis change is in preparation for handling the Tree-sitter changes required to support URLs after https://github.com/neovim/neovim/pull/27109 is merged. Consider a query of the form:\r\n\r\n    (inline_link\r\n      (link_text) @text.reference\r\n      (link_destination) @text.uri\r\n      (#set! @text.reference \"url\" @text.uri))\r\n\r\nThis pattern is \"self-referential\", i.e. it references a capture within itself. This does not work today because the Tree-sitter highlighter uses `iter_captures` instead of `iter_matches`. Switching to `iter_matches` is not straightforward, however, because the capture indices are not necessarily returned from `iter_matches` in the order they are defined in the query file. We can use the pattern index as the \"subpriority\" field to enforce that patterns defined later in the query file (i.e. that have a larger pattern index) have priority over patterns defined earlier in the query file, even if the extmarks themselves are set out of order. See https://github.com/neovim/neovim/pull/27132.\r\n",
    "closed_at": "2024-01-29T03:13:58Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27131#discussion_r1462013827"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462013827"
                }
            },
            "author_association": "MEMBER",
            "body": "I would keep this internal only for now unless you feel there is a strong need to expose this.",
            "commit_id": "022f956350f4fe4c42346739c507b75a7866dfb3",
            "created_at": "2024-01-22T15:17:29Z",
            "diff_hunk": "@@ -2753,6 +2753,8 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                   • priority: a priority value for the highlight group or sign\n                     attribute. For example treesitter highlighting uses a\n                     value of 100.\n+                  • subpriority: a priority value to determine tiebreaks",
            "html_url": "https://github.com/neovim/neovim/pull/27131#discussion_r1462013827",
            "id": 1462013827,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XJI-D",
            "original_commit_id": "befcda408130ce5c1ab32b260fe38b5b603df3d2",
            "original_line": 2756,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1836719476,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462013827/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-22T15:18:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462013827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27131#discussion_r1462019725"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462019725"
                }
            },
            "author_association": "MEMBER",
            "body": "I think there could be value in exposing it even to plugin authors. I can imagine a plugin that wants to use a fixed `priority` (or that can be set by the user) to make the plugin's highlight priority relative to e.g. treesitter or LSP, but may also want to enforce individual extmark priorities within the plugin.\r\n\r\nI wouldn't be opposed to adding some scary text like \"Most users should not need to set this\" or \"(Advanced)\" or something though.",
            "commit_id": "022f956350f4fe4c42346739c507b75a7866dfb3",
            "created_at": "2024-01-22T15:21:43Z",
            "diff_hunk": "@@ -2753,6 +2753,8 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                   • priority: a priority value for the highlight group or sign\n                     attribute. For example treesitter highlighting uses a\n                     value of 100.\n+                  • subpriority: a priority value to determine tiebreaks",
            "html_url": "https://github.com/neovim/neovim/pull/27131#discussion_r1462019725",
            "id": 1462019725,
            "in_reply_to_id": 1462013827,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XJKaN",
            "original_commit_id": "befcda408130ce5c1ab32b260fe38b5b603df3d2",
            "original_line": 2756,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1836728951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462019725/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-22T15:21:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462019725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27131#discussion_r1462020354"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462020354"
                }
            },
            "author_association": "MEMBER",
            "body": "And we can omit it from `news.txt` as well so that it's not highlighted.",
            "commit_id": "022f956350f4fe4c42346739c507b75a7866dfb3",
            "created_at": "2024-01-22T15:22:11Z",
            "diff_hunk": "@@ -2753,6 +2753,8 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                   • priority: a priority value for the highlight group or sign\n                     attribute. For example treesitter highlighting uses a\n                     value of 100.\n+                  • subpriority: a priority value to determine tiebreaks",
            "html_url": "https://github.com/neovim/neovim/pull/27131#discussion_r1462020354",
            "id": 1462020354,
            "in_reply_to_id": 1462013827,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XJKkC",
            "original_commit_id": "befcda408130ce5c1ab32b260fe38b5b603df3d2",
            "original_line": 2756,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1836729988,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462020354/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-22T15:22:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462020354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27131#discussion_r1462033082"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462033082"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok, I'll let it be your call.\n\nI am one to be (overly) conservative when it comes to adding API surface area so I would personally prefer we wait for a concrete request first instead of exposing this early for potential use cases. It's a decent use case though so the cost/benefit is probably justified with either decision.\n\n",
            "commit_id": "022f956350f4fe4c42346739c507b75a7866dfb3",
            "created_at": "2024-01-22T15:31:08Z",
            "diff_hunk": "@@ -2753,6 +2753,8 @@ nvim_buf_set_extmark({buffer}, {ns_id}, {line}, {col}, {*opts})\n                   • priority: a priority value for the highlight group or sign\n                     attribute. For example treesitter highlighting uses a\n                     value of 100.\n+                  • subpriority: a priority value to determine tiebreaks",
            "html_url": "https://github.com/neovim/neovim/pull/27131#discussion_r1462033082",
            "id": 1462033082,
            "in_reply_to_id": 1462013827,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XJNq6",
            "original_commit_id": "befcda408130ce5c1ab32b260fe38b5b603df3d2",
            "original_line": 2756,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/api.txt",
            "position": null,
            "pull_request_review_id": 1836750299,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462033082/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-22T15:31:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462033082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27131#discussion_r1462311786"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462311786"
                }
            },
            "author_association": "MEMBER",
            "body": "Added an argument to set `subpriority` so that we only need to add a new field to `DecorRange`. Alternatively we could add `subpriority` fields to both `DecorVirtText` and `DecorSignHighlight` and leave the signatures of `decor_range_add_virt` and `decor_range_add_sh` unchanged.",
            "commit_id": "022f956350f4fe4c42346739c507b75a7866dfb3",
            "created_at": "2024-01-22T19:27:42Z",
            "diff_hunk": "@@ -520,7 +524,7 @@ static void decor_range_insert(DecorState *state, DecorRange range)\n }\n \n void decor_range_add_virt(DecorState *state, int start_row, int start_col, int end_row, int end_col,\n-                          DecorVirtText *vt, bool owned)\n+                          DecorVirtText *vt, bool owned, DecorPriority subpriority)",
            "html_url": "https://github.com/neovim/neovim/pull/27131#discussion_r1462311786",
            "id": 1462311786,
            "line": 486,
            "node_id": "PRRC_kwDOAPphoM5XKRtq",
            "original_commit_id": "a2c2e0550868f2ffacf52d3cb29b21015a48f269",
            "original_line": 486,
            "original_position": 40,
            "original_start_line": null,
            "path": "src/nvim/decoration.c",
            "position": 40,
            "pull_request_review_id": 1837208310,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462311786/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-22T19:27:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462311786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27131#discussion_r1462313193"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462313193"
                }
            },
            "author_association": "MEMBER",
            "body": "If I understand the decor code correctly (very likely that I do not) then this code path is only taken for non-ephemeral marks, in which case subpriorites are unused/ignored, so we just pass the default value.",
            "commit_id": "022f956350f4fe4c42346739c507b75a7866dfb3",
            "created_at": "2024-01-22T19:29:05Z",
            "diff_hunk": "@@ -490,18 +490,21 @@ static void decor_range_add_from_inline(DecorState *state, int start_row, int st\n   if (decor.ext) {\n     DecorVirtText *vt = decor.data.ext.vt;\n     while (vt) {\n-      decor_range_add_virt(state, start_row, start_col, end_row, end_col, vt, owned);\n+      decor_range_add_virt(state, start_row, start_col, end_row, end_col, vt, owned,\n+                           DECOR_PRIORITY_BASE);",
            "html_url": "https://github.com/neovim/neovim/pull/27131#discussion_r1462313193",
            "id": 1462313193,
            "line": 453,
            "node_id": "PRRC_kwDOAPphoM5XKSDp",
            "original_commit_id": "a2c2e0550868f2ffacf52d3cb29b21015a48f269",
            "original_line": 453,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/decoration.c",
            "position": 6,
            "pull_request_review_id": 1837212030,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462313193/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-22T19:29:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1462313193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27131#discussion_r1469004952"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469004952"
                }
            },
            "author_association": "MEMBER",
            "body": "something like this ?\r\n\r\n```suggestion\r\n  it('supports subpriorities (order of definitions in a query file)', function()\r\n```",
            "commit_id": "022f956350f4fe4c42346739c507b75a7866dfb3",
            "created_at": "2024-01-29T02:01:12Z",
            "diff_hunk": "@@ -697,6 +697,47 @@ describe('decorations providers', function()\n \n     helpers.assert_alive()\n   end)\n+\n+  it('supports subpriorities', function()",
            "html_url": "https://github.com/neovim/neovim/pull/27131#discussion_r1469004952",
            "id": 1469004952,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XjzyY",
            "original_commit_id": "df17b8a59c40b7a0de6d5d85eb09c87bdcd0843f",
            "original_line": 701,
            "original_position": 14,
            "original_start_line": null,
            "path": "test/functional/ui/decorations_spec.lua",
            "position": null,
            "pull_request_review_id": 1847719982,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469004952/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-29T02:01:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469004952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27131#discussion_r1469005977"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27131"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469005977"
                }
            },
            "author_association": "MEMBER",
            "body": "can we also add another line here with @gpanders insight:\r\n\r\n    /// ...reflects the order of patterns/captures in the query file. ",
            "commit_id": "022f956350f4fe4c42346739c507b75a7866dfb3",
            "created_at": "2024-01-29T02:03:39Z",
            "diff_hunk": "@@ -48,6 +48,7 @@ typedef struct {\n   int attr_id;  ///< cached lookup of inl.hl_id if it was a highlight\n   bool owned;   ///< ephemeral decoration, free memory immediately\n   DecorPriority priority;\n+  DecorPriority subpriority;  ///< Secondary priority value used for ordering (#27131)",
            "html_url": "https://github.com/neovim/neovim/pull/27131#discussion_r1469005977",
            "id": 1469005977,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Xj0CZ",
            "original_commit_id": "df17b8a59c40b7a0de6d5d85eb09c87bdcd0843f",
            "original_line": 51,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/decoration.h",
            "position": null,
            "pull_request_review_id": 1847721245,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469005977/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-29T02:03:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469005977",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This will help resolve the case of LSP semantic tokens having similar priorities so highlights are randomized. Ty so much :heart: ",
            "created_at": "2024-01-22T15:16:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904220556",
            "id": 1904220556,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgBmM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904220556/reactions"
            },
            "updated_at": "2024-01-22T15:16:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904220556",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is an _immense_ amount of unwanted Rube Goldberg-style complexity to just avoid the breaking but obviously needed solution: just increase the scale of the present default values, i e from 100 to 1000 or whatever is needed to have enough room within each subsystem, in case 100 is not enough. \r\n\r\nThis will \"break\" users config, but 0.10 will be a good time to do so as we are breaking around everything else around colors (i e how thinks \"look\") anyway. ",
            "created_at": "2024-01-22T15:26:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904241148",
            "id": 1904241148,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgGn8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904241148/reactions"
            },
            "updated_at": "2024-01-22T15:26:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904241148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think @gpanders makes a decent argument for having 2 separate priorities. The first level could be exposed by plugins, and the second level is then just relative to the first.\n\nHowever if we keep this internal then we don't need to adjust the base priorities and risk breaking anything.\n\n> just increase the scale of the present default values, i e from 100 to 1000 or whatever is needed to have enough room within each subsystem, in case 100 is not enough.\n\n1000 is _probably_ enough so I think we would need an extra magnitude (10000) for good measure.",
            "created_at": "2024-01-22T15:33:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904256528",
            "id": 1904256528,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgKYQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904256528/reactions"
            },
            "updated_at": "2024-01-22T15:37:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904256528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure, but that can be handled by math in lua code. priorities are integers, you can do math on them. The lua level code doesn't need this kind of c machinery as a \"permission\", it can just do the math itself. ",
            "created_at": "2024-01-22T15:43:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904276954",
            "id": 1904276954,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgPXa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904276954/reactions"
            },
            "updated_at": "2024-01-22T15:43:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904276954",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure I totally get that. I was just hoping for a solution that doesn't break anything but it's not a big deal since 0.10 breaks lots of TS stuff anyway (like you said).\n\nIf we need to reserve ~10000 priorities just for treesitter then we probably need to change `priority` from a `short int` (~64k values) to something like `uint32_t`.",
            "created_at": "2024-01-22T15:48:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904286295",
            "id": 1904286295,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgRpX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904286295/reactions"
            },
            "updated_at": "2024-01-22T15:48:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904286295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't see any justification for increasing the priority space from 16-bit to 32-bit at _this_ point. The root issue is that we are not making _good use_ of those existing 16-bits. I'd first  come up with a good proposal for using the 16 bits as good as possible for 0.10. If this turns out to be insufficient we can increase to 32-bit in 0.11. ",
            "created_at": "2024-01-22T15:52:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904295050",
            "id": 1904295050,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgTyK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904295050/reactions"
            },
            "updated_at": "2024-01-22T15:52:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904295050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> For instance, if all treesitter highlights are meant to have priority 100 (relative to highlights from other subsystems), we cannot use the priority field to sort how individual extmarks within treesitter are displayed.\r\n\r\nThat is not correct, for the record; we use different priorities (in the range [90,120]) to prioritize, e.g., injected highlights over codeblock highlights. I'm not averse to changing this to a subpriority strategy, but note that this would be a(nother) breaking change for nvim-treesitter. Annoying, but could be included in the 1.0 break **iff* this change was made before 0.10.",
            "created_at": "2024-01-22T16:12:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904335780",
            "id": 1904335780,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgduk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904335780/reactions"
            },
            "updated_at": "2024-01-22T16:14:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904335780",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">That is not correct, for the record; we use different priorities (in the range [90,120]) to prioritize, e.g., injected highlights over codeblock highlights. I'm not averse to changing this to a subpriority strategy, but note that this would be a(nother) breaking change for nvim-treesitter. Annoying, but could be included in the 1.0 break *iff this change was made before 0.10.\r\n\r\nIt would not be a breaking change for nvim-treesitter. All this does is make explicit what treesitter is _already_ doing: using the order of captures defined in the query to order extmark highlights.\r\n\r\nIf this change _were_ implemented it would require exactly zero changes from nvim-treesitter or plugins.",
            "created_at": "2024-01-22T16:24:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904358457",
            "id": 1904358457,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgjQ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904358457/reactions"
            },
            "updated_at": "2024-01-22T16:24:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904358457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I understood your proposal as replacing the current system with a two-tiered system, so internal priorities should now be implemented using subpriorities instead of global priorities, and on a different scale. If I misunderstood, my argument doesn't apply of course.\r\n\r\nAlso, the current system allows users to override the global priorities, e.g., to make (individual) treesitter highlights have higher priority than LSP semantic highlights. I feel this is a valuable possibility to preserve.",
            "created_at": "2024-01-22T16:27:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904364869",
            "id": 1904364869,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgk1F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904364869/reactions"
            },
            "updated_at": "2024-01-22T16:27:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904364869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">I understood your proposal as replacing the current system with a two-tiered system, so internal priorities should now be implemented using subpriorities instead of global priorities, and on a different scale. If I misunderstood, my argument doesn't apply of course.\r\n\r\nNo it's not meant to replace the current system, this design is fully backward compatible and is almost entirely an implementation detail (which is why @lewis6991 suggested not even exposing the option at all).\r\n\r\n> Also, the current system allows users to override the global priorities, e.g., to make (individual) treesitter highlights have higher priority than LSP semantic highlights. I feel this is a valuable possibility to preserve.\r\n\r\n100% agree, this PR would not change anything about that.\r\n\r\nIn any case the current approach is DoA, so it's a moot point. Alternatives now are:\r\n\r\n1. Expanding the priority \"range\" so that each subsystem has can use individual priorities within that range (e.g. treesitter can be allocated 9000 to 20000 or something). This is a breaking change and also seems like it would be difficult to manage, as it becomes very difficult for any given user to know what priority to choose within that range.\r\n2. Only modify the highlighter code so that extmarks are applied in the order of the pattern within the query. This is not a breaking change and has no user-facing impact at all, so is my preference (if we can figure it out).",
            "created_at": "2024-01-22T16:37:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904382223",
            "id": 1904382223,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgpEP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904382223/reactions"
            },
            "updated_at": "2024-01-22T16:37:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904382223",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This is a breaking change and also seems like it would be difficult to manage, as it becomes very difficult for any given user to know what priority to choose within that range.\r\n\r\nBut the user doesn't need to \"manage\" anything. as clason pointed out, the defined ranges are just constraint for the _default_ priorities of core and shipped runtime (and nvim-treesitter, which is our TS runtime away from runtime..). The user can just pick whatever existing thing from any subsystem, if they want their special TS highlight to be prioritized just above LSP feature X with priority 9000, they can just set priority 9001.",
            "created_at": "2024-01-22T16:47:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904400988",
            "id": 1904400988,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgtpc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904400988/reactions"
            },
            "updated_at": "2024-01-22T16:48:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904400988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For the record, if this is kept internal, I agree it's not breaking and I have no objections. (This was just my -- needlessly circuitous -- way of arguing for that.)\r\n\r\n> Expanding the priority \"range\" so that each subsystem has can use individual priorities within that range (e.g. treesitter can be allocated 9000 to 20000 or something).\r\n\r\nThat's pretty much how it actually is by convention: treesitter has 90-120; LSP has 125 and up, users have 200 and up (see `:h vim.highlight.priorities`).\r\n\r\nChanging the numbers by inflating the scale would be the breaking change (for nvim-treesitter, which has to support stable and nightly currently).\r\n\r\n> Only modify the highlighter code so that extmarks are applied in the order of the pattern within the query. This is not a breaking change and has no user-facing impact at all, so is my preference (if we can figure it out).\r\n\r\nThat would be ideal, yes.\r\n",
            "created_at": "2024-01-22T16:49:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904404788",
            "id": 1904404788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xguk0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904404788/reactions"
            },
            "updated_at": "2024-01-22T16:53:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904404788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim.highlight.priorities.*` is a thing, so anything downstream that relies on these is less likely to experience any breakage.\r\n\r\n> as it becomes very difficult for any given user to know what priority to choose within that range.\r\n\r\nThis is very true. For treesitter we will need to define subpriorty levels. e.g:\r\n\r\n- base highlights `base -> base + 1000`\r\n- spell `base + 1000 -> base + 2000`\r\n- injections `base + 2000 -> base + 3000`\r\n- anything else?",
            "created_at": "2024-01-22T16:49:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904405621",
            "id": 1904405621,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xgux1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904405621/reactions"
            },
            "updated_at": "2024-01-22T16:50:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904405621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "After some further discussion on Matrix we've decided that we can support this for ephemeral marks only, without increasing the \"priority space\" for other extmarks. In addition the `subpriority` field is intentionally not exposed, so it is undocumented and uses a `_` prefix. For now this should only be used by Neovim internal code (e.g. treesitter, semantic tokens) and not by plugins (if/when a compelling use case for third party plugins appears this decision could be revisited).",
            "created_at": "2024-01-22T19:31:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904668843",
            "id": 1904668843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xhvCr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904668843/reactions"
            },
            "updated_at": "2024-01-22T19:31:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904668843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just to note semantic tokens don't (and can't?) use ephemeral marks since they rely on the edit adjustments applied to regular marks.\n\nFor semantic tokens to use ephemeral marks, the subsystem would need to accurately track buffer changes to adjust existing marks.",
            "created_at": "2024-01-22T19:34:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1904674287",
            "id": 1904674287,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xhwXv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904674287/reactions"
            },
            "updated_at": "2024-01-22T19:34:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904674287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In addition the `subpriority` field is intentionally not exposed, so it is undocumented and uses a `_` prefix.\r\n\r\nWell, it needs to be documented internally though, so we can maintain it :) Maybe we need a `runtime/doc/dev_screen.txt` file?\r\n\r\nThough ideally we could avoid this extra complication entirely.\r\n\r\n> there is no way to enforce priority of extmarks within a single subsystem. For instance, if all treesitter highlights are meant to have priority 100 (relative to highlights from other subsystems), we cannot use the priority field to sort how individual extmarks within treesitter are displayed.\r\n\r\nSo why can't the treesitter highlights choose priorities other than 100? \r\n\r\nAnd what is the worse case if we _don'_ have a subpriority--a highlight looks slightly wrong...?",
            "created_at": "2024-01-23T21:32:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1906954046",
            "id": 1906954046,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xqc8-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906954046/reactions"
            },
            "updated_at": "2024-01-23T21:38:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906954046",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">And what is the worse case if we don' have a subpriority--a highlight looks slightly wrong...?\r\n\r\nIt violates the (thus far, implicit) property that the order in which patterns/captures are defined in a query file defines their relative priority (i.e. a capture defined later in a query file or in a user query that extends a builtin query takes priority over captures defined earlier in the query file).\r\n\r\nEDIT: For what it's worth [I've changed my mind](https://github.com/neovim/neovim/pull/27131#issuecomment-1904382223) and would be fine with dropping the subpriority concept and just expanding the priority space as discussed above.",
            "created_at": "2024-01-23T22:54:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1907054588",
            "id": 1907054588,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5xq1f8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1907054588/reactions"
            },
            "updated_at": "2024-01-23T22:57:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1907054588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm fine with the latest version were we just add `DecorPriority subpriority` to `DecorRange` but not change the core extmark datastructures. The wording in the code should be updated to reflect what this is about: it is an alternative to needing to sort the highlight items in the on_line callback in lua code, and instead let the c code in nvim take care of it (which earlier the c code in tree-sitter did, when we used iter_captures only, not iter_maches).\r\n\r\nSo the headline is it takes precedence over the implicit order of nvim_buf_set_extmark calls, _not_ that it \"breaks ties\" between priorities. \r\n\r\nMy comments about a revised default priority levels are still valid in _general_ (to be done in 0.10, or 0.11, or never), but they no longer related to (the latest state of) this PR.",
            "created_at": "2024-01-25T19:43:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/27131#issuecomment-1910870587",
            "id": 1910870587,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
            "node_id": "IC_kwDOAPphoM5x5ZI7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1910870587/reactions"
            },
            "updated_at": "2024-01-25T19:43:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1910870587",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27131/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27131/commits",
    "created_at": "2024-01-22T15:11:09Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27131.diff",
    "draft": false,
    "head": {
        "label": "gpanders:extmark-subpriority",
        "ref": "extmark-subpriority",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-01-29T03:14:56Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 246430,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "022f956350f4fe4c42346739c507b75a7866dfb3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27131",
    "id": 1690025904,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27131",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "extmarks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/extmarks"
        }
    ],
    "locked": false,
    "merge_commit_sha": "15e77a56b711102fdc123e15b3f37d49bc0b1df1",
    "merged_at": "2024-01-29T03:13:58Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 266,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 135,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-01-29T07:22:06Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5ku7-w",
    "number": 27131,
    "patch_url": "https://github.com/neovim/neovim/pull/27131.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27131/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/022f956350f4fe4c42346739c507b75a7866dfb3",
    "title": "feat(extmarks): subpriorities (relative to declaration order)",
    "updated_at": "2024-01-29T05:11:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27131",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}