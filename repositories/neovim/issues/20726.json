{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Neovim version (nvim -v)\r\n\r\nNVIM v0.8.0\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nnot using vim\r\n\r\n### Operating system/version\r\n\r\nVoid Linux kernel 5.10.147\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.10.1\r\n\r\n### $TERM environment variable\r\n\r\nscreen-256color\r\n\r\n### Installation\r\n\r\nVoid Linux xbps package manager\r\n\r\n### How to reproduce the issue\r\n\r\nI am able to consistently get neovim to hang at 100% CPU when using [fzf-lua](https://github.com/ibhagwan/fzf-lua), opening any interface and quickly pressing `<C-c>`.\r\n> Note that to rerproduce this consistently [this commit](https://github.com/ibhagwan/fzf-lua/commit/c90a88b354ae12736760f623000d91b438b04234) which maps `<C-c>` to `<Esc>` in termal mode, needs to be reverted or you can test with the [`trace` branch](https://github.com/ibhagwan/fzf-lua/tree/trace) which also contains trace logging to file.\r\n\r\nWhat happens behind the scenes is fzf-lua opening a new window and running `termopen` with the fzf command and then waits for the job's `on_exit` callback.\r\n\r\nWhile stuck I ran  `strace -s 99 -ffp <pid> ` on the neovim pid and it seems to be polling a no longer existing thread (not sure about that, but in the below pid `27433` no longer exists), the loop below continues endlessly:\r\n```\r\n[pid 27433] <... epoll_wait resumed>[{events=EPOLLIN, data={u32=18, u64=18}}], 1024, -1) = 1\r\n[pid 27432] <... write resumed>)        = 8\r\n[pid 27433] read(18, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 1024) = 8\r\n[pid 27432] epoll_wait(9,  <unfinished ...>\r\n[pid 27433] epoll_wait(15,  <unfinished ...>\r\n[pid 27432] <... epoll_wait resumed>[], 1024, 0) = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] write(32, \"\\3\", 1)          = 1\r\n[pid 27432] write(18, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 8 <unfinished ...>\r\n[pid 27433] <... epoll_wait resumed>[{events=EPOLLIN, data={u32=18, u64=18}}], 1024, -1) = 1\r\n[pid 27432] <... write resumed>)        = 8\r\n[pid 27433] read(18, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 1024) = 8\r\n[pid 27432] epoll_wait(9,  <unfinished ...>\r\n[pid 27433] epoll_wait(15,  <unfinished ...>\r\n[pid 27432] <... epoll_wait resumed>[], 1024, 0) = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] write(32, \"\\3\", 1)          = 1\r\n[pid 27432] write(18, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 8 <unfinished ...>\r\n```\r\n\r\nIn an effort to understand where this issue comes from I added trace logging to my plugin from the moment the `termopen` succeeds until `on_exit` is called, you can enable logging to file (only with the [`trace` branch](https://github.com/ibhagwan/fzf-lua/tree/trace)) with:\r\n```lua\r\nrequire'fzf-lua'.setup({ debug_tracelog = \"~/neovim.log\" })\r\n```\r\n\r\nWith the above setup the file gets overwritten each time the fzf-lua interface is open, the results indicate neovim is stuck in an endless loop calling the `vim._on_key(char)` function within the runtime `runtime/lua/vim/_editor.lua:560`, relevant part of the log right before it gets stuck:\r\n```\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:102 nil\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:79 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:81 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:82 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:83 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:85 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:104 nil\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/gitsigns.nvim/lua/gitsigns/manager.lua:449 nil\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/gitsigns.nvim/lua/gitsigns/manager.lua:450 nil\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/gitsigns.nvim/lua/gitsigns/manager.lua:451 nil\r\n2022-10-18T13:26:32 @/usr/share/nvim/runtime/lua/vim/treesitter/highlighter.lua:258 nil\r\n2022-10-18T13:26:32 @/usr/share/nvim/runtime/lua/vim/treesitter/highlighter.lua:259 nil\r\n2022-10-18T13:26:32 @/usr/share/nvim/runtime/lua/vim/treesitter/highlighter.lua:260 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:562 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:563 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:572 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:581 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:562 nil  <= last line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:563 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:572 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:581 nil  <= last line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:562 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:563 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:572 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:581 nil  <= last line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:562 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:563 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:572 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:581 nil  <= last line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n```\r\n\r\nI think this might be related to neovim not yet interrupting lua code as explained in #6800?\r\n\r\n@famiu, @ZyX-I, @justinmk, if my analysis is correct, do you have any idea why this happens? What part of the code causes this? Any workarounds I can apply before #19096 is merged (aside from remapping `<C-c>`)?\r\n\r\n\r\n### Expected behavior\r\n\r\nNeovim should be able to handle `<C-c>`.\r\n\r\n### Actual behavior\r\n\r\nNeovim will occasionally become unresponsive when pressing `<C-c>`.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "https://github.com/vim-airline/vim-airline/issues/2588 I can reproduce this freezing behavior with `vim-airline`\r\n\r\nhere is a reproduction repo: https://github.com/vhoyer-bug-reproductions/airline-freeze-on-C-c",
            "created_at": "2022-10-21T17:44:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1287261948",
            "id": 1287261948,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5Mug78",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1287261948/reactions"
            },
            "updated_at": "2022-10-21T17:44:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1287261948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11022464?v=4",
                "events_url": "https://api.github.com/users/vhoyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhoyer/followers",
                "following_url": "https://api.github.com/users/vhoyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhoyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhoyer",
                "id": 11022464,
                "login": "vhoyer",
                "node_id": "MDQ6VXNlcjExMDIyNDY0",
                "organizations_url": "https://api.github.com/users/vhoyer/orgs",
                "received_events_url": "https://api.github.com/users/vhoyer/received_events",
                "repos_url": "https://api.github.com/users/vhoyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhoyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhoyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhoyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "also this is happening with `NVIM v0.7.2`",
            "created_at": "2022-10-21T17:45:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1287263321",
            "id": 1287263321,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5MuhRZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1287263321/reactions"
            },
            "updated_at": "2022-10-21T17:45:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1287263321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11022464?v=4",
                "events_url": "https://api.github.com/users/vhoyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhoyer/followers",
                "following_url": "https://api.github.com/users/vhoyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhoyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhoyer",
                "id": 11022464,
                "login": "vhoyer",
                "node_id": "MDQ6VXNlcjExMDIyNDY0",
                "organizations_url": "https://api.github.com/users/vhoyer/orgs",
                "received_events_url": "https://api.github.com/users/vhoyer/received_events",
                "repos_url": "https://api.github.com/users/vhoyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhoyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhoyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhoyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "btw, vim-airline doesn't use lua, so I don't know if the labels are correctly applied, or maybe it's a different problem with the same behavior, should I open a new issue?",
            "created_at": "2022-10-24T14:28:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1289123945",
            "id": 1289123945,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5M1nhp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1289123945/reactions"
            },
            "updated_at": "2022-10-24T14:28:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1289123945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11022464?v=4",
                "events_url": "https://api.github.com/users/vhoyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhoyer/followers",
                "following_url": "https://api.github.com/users/vhoyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhoyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhoyer",
                "id": 11022464,
                "login": "vhoyer",
                "node_id": "MDQ6VXNlcjExMDIyNDY0",
                "organizations_url": "https://api.github.com/users/vhoyer/orgs",
                "received_events_url": "https://api.github.com/users/vhoyer/received_events",
                "repos_url": "https://api.github.com/users/vhoyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhoyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhoyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhoyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not sure if this is the same bug or not, but it sounds similar, and I believe I found fairly minimal steps to reproduce:\r\n\r\n1. Open neovim with `nvim -u NONE`\r\n2. Open a terminal\r\n3. Source a file with the following contents:\r\n\r\n```lua\r\nlocal vim = assert(vim)\r\nlocal loop = vim.loop\r\n\r\nlocal i = 0\r\n\r\nlocal function do_cmd()\r\n  i = i + 1\r\n  print (\"spawn: \" .. i)\r\n  loop.spawn('echo', {\r\n    args = {'hi'}\r\n  }, function () end)\r\nend\r\n\r\nlocal function start_polling()\r\n  vim.defer_fn(function ()\r\n    local j = 0\r\n    while j < 100 do\r\n      do_cmd()\r\n      j = j + 1\r\n    end\r\n    start_polling()\r\n  end, 100)\r\nend\r\n\r\nstart_polling()\r\n```\r\n4. In the terminal (in INSERT mode) hold Ctrl-C. (In otherwords just send a bunch of Ctrl-C's to the terminal. For reference I have my keyboard rate set to `xset r rate 300 100`, so it repeats pretty fast).\r\n\r\nAfter several seconds the terminal should hang and Neovim will lock up at 100% CPU. \r\n\r\nObviously this example is pretty contrived, but the freeze happens often enough on my dev workflow to be annoying. (I have a plugin that periodically polls information by launching a bunch of commands). It appears to be a race conditions where if Ctrl-C is pressed at the exact wrong time during the job life cycle, it get's stuck in a loop.\r\n\r\nPoking around in GDB indicates that Neovim thinks it's getting a constant stream of Ctrl-C's, so it appears that maybe `got_int` is not being cleared somewhere. Using gdb to manually `set got_int = 0` will break the loop.\r\n\r\nTo further add to the mystery, I replicated this on 3 different machines (All Linux-based, Arch and Debian), however, I could not get the bug to replicate on a Gentoo server I run. All versions of Neovim were built from source though, so it seems strange to have different behavior. Maybe the server hardware is beefy enough that it masks the issue.\r\n\r\nI was also able to replicate this issue on the packaged release of Neovim in Arch linux:\r\n\r\n```\r\n$ /usr/bin/nvim --version\r\n\r\nNVIM v0.8.2\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\nCompiled by builduser\r\n\r\nFeatures: +acl +iconv +tui\r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```\r\n",
            "created_at": "2023-01-30T20:40:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1409303471",
            "id": 1409303471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5UAEOv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1409303471/reactions"
            },
            "updated_at": "2023-01-30T20:41:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1409303471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3434593?v=4",
                "events_url": "https://api.github.com/users/jrahm/events{/privacy}",
                "followers_url": "https://api.github.com/users/jrahm/followers",
                "following_url": "https://api.github.com/users/jrahm/following{/other_user}",
                "gists_url": "https://api.github.com/users/jrahm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jrahm",
                "id": 3434593,
                "login": "jrahm",
                "node_id": "MDQ6VXNlcjM0MzQ1OTM=",
                "organizations_url": "https://api.github.com/users/jrahm/orgs",
                "received_events_url": "https://api.github.com/users/jrahm/received_events",
                "repos_url": "https://api.github.com/users/jrahm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jrahm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jrahm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jrahm"
            }
        },
        {
            "author_association": "NONE",
            "body": "In my computer, i'm getting a similar situation, when NeoVim attached to Omnisharp, the process hangs on 100% but i can use even hanging one of four cores. But, when i try exit from Neovim, the process stops to respond. \r\n\r\n\r\n\r\n\r\nTo finish the process, i need execute `kill` command.\r\n![image](https://github.com/neovim/neovim/assets/4335700/f9e9f409-088d-4166-ba0f-efee3b9a60ed)\r\n![image](https://github.com/neovim/neovim/assets/4335700/8c6216cc-d04b-46ef-b093-a8f1d8e4671c)\r\n![image](https://github.com/neovim/neovim/assets/4335700/0bf278ae-32bd-4002-8ba7-a02badbb5143)\r\n\r\nThe `strace` outputs an interrupt log:\r\n```bash\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n\r\n```\r\n",
            "created_at": "2023-05-19T21:07:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1555251383",
            "id": 1555251383,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5cs0C3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555251383/reactions"
            },
            "updated_at": "2023-06-04T01:07:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555251383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4335700?v=4",
                "events_url": "https://api.github.com/users/AugustoDeveloper/events{/privacy}",
                "followers_url": "https://api.github.com/users/AugustoDeveloper/followers",
                "following_url": "https://api.github.com/users/AugustoDeveloper/following{/other_user}",
                "gists_url": "https://api.github.com/users/AugustoDeveloper/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AugustoDeveloper",
                "id": 4335700,
                "login": "AugustoDeveloper",
                "node_id": "MDQ6VXNlcjQzMzU3MDA=",
                "organizations_url": "https://api.github.com/users/AugustoDeveloper/orgs",
                "received_events_url": "https://api.github.com/users/AugustoDeveloper/received_events",
                "repos_url": "https://api.github.com/users/AugustoDeveloper/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AugustoDeveloper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AugustoDeveloper/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AugustoDeveloper"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have been consistently running into this issue for months, the way I frequently run into it is by pressing C-c when there is a terminal buffer outputting a lot of text to the screen (e.g. from the output of a `tail -f`. I was able to reproduce the same EPOLLIN loop when attaching strace to the process.",
            "created_at": "2023-05-26T18:40:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1564784373",
            "id": 1564784373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5dRLb1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1564784373/reactions"
            },
            "updated_at": "2023-06-04T01:08:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1564784373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6548135?v=4",
                "events_url": "https://api.github.com/users/Kraust/events{/privacy}",
                "followers_url": "https://api.github.com/users/Kraust/followers",
                "following_url": "https://api.github.com/users/Kraust/following{/other_user}",
                "gists_url": "https://api.github.com/users/Kraust/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Kraust",
                "id": 6548135,
                "login": "Kraust",
                "node_id": "MDQ6VXNlcjY1NDgxMzU=",
                "organizations_url": "https://api.github.com/users/Kraust/orgs",
                "received_events_url": "https://api.github.com/users/Kraust/received_events",
                "repos_url": "https://api.github.com/users/Kraust/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Kraust/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Kraust/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Kraust"
            }
        },
        {
            "author_association": "NONE",
            "body": "Same issue here, nvim keeps reading `^C` and the whole process use 100% cpu and high memory usage until i killed it. The terminal emulator also use 100% cpu.\r\n\r\nstrace \r\n\r\n```\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3203)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3201)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3199)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3197)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3195)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3193)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3191)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3189)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, ^C[], 1024, 0)              = 0\r\nstrace: Process 1497024 detached\r\n\r\n```",
            "created_at": "2023-05-31T04:16:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1569471851",
            "id": 1569471851,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5djD1r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1569471851/reactions"
            },
            "updated_at": "2023-06-04T01:08:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1569471851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3339663?v=4",
                "events_url": "https://api.github.com/users/dispensable/events{/privacy}",
                "followers_url": "https://api.github.com/users/dispensable/followers",
                "following_url": "https://api.github.com/users/dispensable/following{/other_user}",
                "gists_url": "https://api.github.com/users/dispensable/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dispensable",
                "id": 3339663,
                "login": "dispensable",
                "node_id": "MDQ6VXNlcjMzMzk2NjM=",
                "organizations_url": "https://api.github.com/users/dispensable/orgs",
                "received_events_url": "https://api.github.com/users/dispensable/received_events",
                "repos_url": "https://api.github.com/users/dispensable/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dispensable/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dispensable/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dispensable"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We have clear repro steps given above. So I've hidden redundant comments (though the hints are appreciated).",
            "created_at": "2023-06-04T01:08:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1575304294",
            "id": 1575304294,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5d5Txm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1575304294/reactions"
            },
            "updated_at": "2023-06-04T01:08:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1575304294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@ibhagwan: Is it possible to mitigate this in fzf-lua somehow? I appear to trigger this condition 100% of the time just by running FzfLua and previewing certain files (not all files exhibit this behaviour though). This is triggered without interruption attempts `<C-c>` but results are very similar to what others report, which makes me believe it's same/related.\r\n\r\n```\r\n$ strace -s 99 -ffp  1816172\r\n... (opening preview) ...\r\n[{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33[I\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\261nvim_ui_set_focus\\221\\303\", 22) = 22\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33OB\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\252nvim_input\\221\\246<Down>\", 21) = 21\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=20, u64=20}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(20, \"\\223\\2\\246redraw\\334\\0\\5\\334\\0\\2\\251grid_line\\224\\1\\n \\334\\0\\37\\222\\241 \\315\\1\\202\\222\\241 \\315\\1\\r\\223\\243\\342\\200\\202\\315\\1\\r\\2\\222\\243\\357\\203\\266\\315\\1\\207\\222\\243\\342\\200\\202\\315\\1\\r\\221\\241c\\221\\241o\\221\\241n\\221\\241s\\221\\241o\\221\\241l\\221\\241e\\221\\241_\\221\\241l\\221\\241i\"..., 65536) = 514\r\n[pid 1816172] write(26, \"\\33[11;33H\\33(B\\33[m\\33[38;2;88;110;117m\\33[48;5;236m \\33(B\\33[m\\33[38;2;88;110;117m\\33[48;2;253;246;227m \\342\\200\\202\\342\\200\\202\\33(B\\33[\"..., 452) = 452\r\n[pid 1816172] epoll_pwait(19, [], 1024, 0, NULL, 8) = 0\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=20, u64=20}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(20, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\30\\251grid_line\\224\\1\\4\\314\\270\\334\\0\\1\\223\\243\\342\\224\\200\\315\\1\\r\\n\\224\\1\\5\\315\\1\\0\\334\\0\\1\\222\\243\\342\\224\\202\\315\\1\\r\\224\\1\\6\\315\\1\\0\\334\\0\\1\\222\\243\\342\\224\\202\\315\\1\\r\\224\\1\\7\\315\\1\\0\\334\\0\\1\\222\\243\\342\\224\\202\\315\\1\\r\\224\\1\\10\\315\\1\\0\"..., 65536) = 426\r\n[pid 1816172] write(26, \"\\33[5;185H\\33(B\\33[m\\33[38;2;88;110;117m\\33[48;2;253;246;227m\\342\\224\\200\\33[5;186H\\342\\224\\200\\33[5;187H\\342\\224\\200\\33[5;188H\\342\\224\\200\\33[5;189H\\342\\224\\200\\33\"..., 420) = 420\r\n[pid 1816172] epoll_pwait(19, [], 1024, 0, NULL, 8) = 0\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33[O\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\261nvim_ui_set_focus\\221\\302\", 22) = 22\r\n[pid 1816172] epoll_pwait(11, ^[[B\r\n[{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33[I\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\261nvim_ui_set_focus\\221\\303\", 22) = 22\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33OB\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\252nvim_input\\221\\246<Down>\", 21) = 21\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33OA\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\252nvim_input\\221\\244<Up>\", 19) = 19\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33OA\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\252nvim_input\\221\\244<Up>\", 19) = 19\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33[O\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\261nvim_ui_set_focus\\221\\302\", 22) = 22\r\n[pid 1816172] epoll_pwait(11, \r\n```",
            "created_at": "2023-09-21T13:03:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1729523668",
            "id": 1729523668,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5nFm_U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729523668/reactions"
            },
            "updated_at": "2023-09-22T07:29:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729523668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13489144?v=4",
                "events_url": "https://api.github.com/users/xbreak/events{/privacy}",
                "followers_url": "https://api.github.com/users/xbreak/followers",
                "following_url": "https://api.github.com/users/xbreak/following{/other_user}",
                "gists_url": "https://api.github.com/users/xbreak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xbreak",
                "id": 13489144,
                "login": "xbreak",
                "node_id": "MDQ6VXNlcjEzNDg5MTQ0",
                "organizations_url": "https://api.github.com/users/xbreak/orgs",
                "received_events_url": "https://api.github.com/users/xbreak/received_events",
                "repos_url": "https://api.github.com/users/xbreak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xbreak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xbreak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xbreak"
            }
        },
        {
            "author_association": "NONE",
            "body": "i was able to not trigger this bug every day by adding this in my alacritty config:\r\n```\r\nkey_bindings:\r\n  - { key: C, mods: Control,      mode: Alt,  action: None  } # fix neovim freezes\r\n  - { key: C, mods: Alt|Control,  mode: ~Alt, chars: \"\\x03\" }\r\n```\r\nit basically disables C-c in every tui and maps C-A-c to C-c instead. \r\n",
            "created_at": "2023-09-21T13:16:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1729565974",
            "id": 1729565974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5nFxUW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729565974/reactions"
            },
            "updated_at": "2023-09-29T07:53:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729565974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15798381?v=4",
                "events_url": "https://api.github.com/users/Hippo0o/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hippo0o/followers",
                "following_url": "https://api.github.com/users/Hippo0o/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hippo0o/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hippo0o",
                "id": 15798381,
                "login": "Hippo0o",
                "node_id": "MDQ6VXNlcjE1Nzk4Mzgx",
                "organizations_url": "https://api.github.com/users/Hippo0o/orgs",
                "received_events_url": "https://api.github.com/users/Hippo0o/received_events",
                "repos_url": "https://api.github.com/users/Hippo0o/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hippo0o/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hippo0o/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hippo0o"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've had the issue of `^c` intermittently hosing terminal mode when a command writes a lot of data to std{out,err}.\r\n```\r\n:split +term\r\n~  base64 < /dev/urandom\r\n^c\r\n```\r\n\r\nWhile debugging this I noticed the following the logs\r\n```\r\nline 1: ^Ireturn luaeval(printf('require\"nvim-treesitter.fold\".get_fold_indic(%d)', v:lnum))\r\nnvim_treesitter#foldexpr returning #0\r\n\r\ncalling nvim_treesitter#foldexpr()\r\n```\r\nI had the following settings.\r\n```\r\nset foldmethod=expr\r\nset foldexpr=nvim_treesitter#foldexpr()\r\n```\r\nSo I added this autocmd as a workaround.\r\n```\r\nautocmd TermOpen * set foldexpr&\r\n```\r\n\r\nThis smells like a race condition that is exacerbated by the foldmethod, but I haven't been able to reproduce since modifying the foldexpr.   ",
            "created_at": "2023-10-11T21:08:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1758543766",
            "id": 1758543766,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5o0T-W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758543766/reactions"
            },
            "updated_at": "2023-10-11T21:12:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758543766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Poking around in GDB indicates that Neovim thinks it's getting a constant stream of Ctrl-C's, so it appears that maybe got_int is not being cleared somewhere. Using gdb to manually set got_int = 0 will break the loop.\r\n\r\nI'll also point out that I saw the same thing as @jrahm listed above.  I spent a while stepping through with GDB before I stumbled upon the workaround in my previous comment.\r\n\r\n",
            "created_at": "2023-10-11T21:12:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1758550439",
            "id": 1758550439,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5o0Vmn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758550439/reactions"
            },
            "updated_at": "2023-10-11T21:12:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758550439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20726/comments",
    "created_at": "2022-10-18T20:40:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20726/events",
    "html_url": "https://github.com/neovim/neovim/issues/20726",
    "id": 1413818046,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 396626349,
            "name": "input",
            "node_id": "MDU6TGFiZWwzOTY2MjYzNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/input"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20726/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5URSa-",
    "number": 20726,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20726/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20726/timeline",
    "title": "neovim hang at 100% CPU when interrupted with <C-c>",
    "updated_at": "2023-10-11T21:12:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20726",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/59988195?v=4",
        "events_url": "https://api.github.com/users/ibhagwan/events{/privacy}",
        "followers_url": "https://api.github.com/users/ibhagwan/followers",
        "following_url": "https://api.github.com/users/ibhagwan/following{/other_user}",
        "gists_url": "https://api.github.com/users/ibhagwan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ibhagwan",
        "id": 59988195,
        "login": "ibhagwan",
        "node_id": "MDQ6VXNlcjU5OTg4MTk1",
        "organizations_url": "https://api.github.com/users/ibhagwan/orgs",
        "received_events_url": "https://api.github.com/users/ibhagwan/received_events",
        "repos_url": "https://api.github.com/users/ibhagwan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ibhagwan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ibhagwan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ibhagwan"
    }
}