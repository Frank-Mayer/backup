{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Neovim version (nvim -v)\r\n\r\nNVIM v0.8.0\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nnot using vim\r\n\r\n### Operating system/version\r\n\r\nVoid Linux kernel 5.10.147\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.10.1\r\n\r\n### $TERM environment variable\r\n\r\nscreen-256color\r\n\r\n### Installation\r\n\r\nVoid Linux xbps package manager\r\n\r\n### How to reproduce the issue\r\n\r\nI am able to consistently get neovim to hang at 100% CPU when using [fzf-lua](https://github.com/ibhagwan/fzf-lua), opening any interface and quickly pressing `<C-c>`.\r\n> Note that to rerproduce this consistently [this commit](https://github.com/ibhagwan/fzf-lua/commit/c90a88b354ae12736760f623000d91b438b04234) which maps `<C-c>` to `<Esc>` in termal mode, needs to be reverted or you can test with the [`trace` branch](https://github.com/ibhagwan/fzf-lua/tree/trace) which also contains trace logging to file.\r\n\r\nWhat happens behind the scenes is fzf-lua opening a new window and running `termopen` with the fzf command and then waits for the job's `on_exit` callback.\r\n\r\nWhile stuck I ran  `strace -s 99 -ffp <pid> ` on the neovim pid and it seems to be polling a no longer existing thread (not sure about that, but in the below pid `27433` no longer exists), the loop below continues endlessly:\r\n```\r\n[pid 27433] <... epoll_wait resumed>[{events=EPOLLIN, data={u32=18, u64=18}}], 1024, -1) = 1\r\n[pid 27432] <... write resumed>)        = 8\r\n[pid 27433] read(18, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 1024) = 8\r\n[pid 27432] epoll_wait(9,  <unfinished ...>\r\n[pid 27433] epoll_wait(15,  <unfinished ...>\r\n[pid 27432] <... epoll_wait resumed>[], 1024, 0) = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] write(32, \"\\3\", 1)          = 1\r\n[pid 27432] write(18, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 8 <unfinished ...>\r\n[pid 27433] <... epoll_wait resumed>[{events=EPOLLIN, data={u32=18, u64=18}}], 1024, -1) = 1\r\n[pid 27432] <... write resumed>)        = 8\r\n[pid 27433] read(18, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 1024) = 8\r\n[pid 27432] epoll_wait(9,  <unfinished ...>\r\n[pid 27433] epoll_wait(15,  <unfinished ...>\r\n[pid 27432] <... epoll_wait resumed>[], 1024, 0) = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] epoll_wait(9, [], 1024, 0)  = 0\r\n[pid 27432] write(32, \"\\3\", 1)          = 1\r\n[pid 27432] write(18, \"\\1\\0\\0\\0\\0\\0\\0\\0\", 8 <unfinished ...>\r\n```\r\n\r\nIn an effort to understand where this issue comes from I added trace logging to my plugin from the moment the `termopen` succeeds until `on_exit` is called, you can enable logging to file (only with the [`trace` branch](https://github.com/ibhagwan/fzf-lua/tree/trace)) with:\r\n```lua\r\nrequire'fzf-lua'.setup({ debug_tracelog = \"~/neovim.log\" })\r\n```\r\n\r\nWith the above setup the file gets overwritten each time the fzf-lua interface is open, the results indicate neovim is stuck in an endless loop calling the `vim._on_key(char)` function within the runtime `runtime/lua/vim/_editor.lua:560`, relevant part of the log right before it gets stuck:\r\n```\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:102 nil\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:79 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:81 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:82 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:83 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:85 finish\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/fzf-lua/lua/fzf-lua/fzf.lua:104 nil\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/gitsigns.nvim/lua/gitsigns/manager.lua:449 nil\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/gitsigns.nvim/lua/gitsigns/manager.lua:450 nil\r\n2022-10-18T13:26:32 @/home/bhagwan/.local/share/nvim/site/pack/packer/opt/gitsigns.nvim/lua/gitsigns/manager.lua:451 nil\r\n2022-10-18T13:26:32 @/usr/share/nvim/runtime/lua/vim/treesitter/highlighter.lua:258 nil\r\n2022-10-18T13:26:32 @/usr/share/nvim/runtime/lua/vim/treesitter/highlighter.lua:259 nil\r\n2022-10-18T13:26:32 @/usr/share/nvim/runtime/lua/vim/treesitter/highlighter.lua:260 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:562 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:563 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:572 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:581 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:562 nil  <= last line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:563 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:572 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:581 nil  <= last line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:562 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:563 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:572 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:581 nil  <= last line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:562 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:563 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:572 nil\r\n2022-10-18T13:26:32 @vim/_editor.lua:581 nil  <= last line of vim._on_key\r\n2022-10-18T13:26:32 @vim/_editor.lua:561 nil  <= first line of vim._on_key\r\n```\r\n\r\nI think this might be related to neovim not yet interrupting lua code as explained in #6800?\r\n\r\n@famiu, @ZyX-I, @justinmk, if my analysis is correct, do you have any idea why this happens? What part of the code causes this? Any workarounds I can apply before #19096 is merged (aside from remapping `<C-c>`)?\r\n\r\n\r\n### Expected behavior\r\n\r\nNeovim should be able to handle `<C-c>`.\r\n\r\n### Actual behavior\r\n\r\nNeovim will occasionally become unresponsive when pressing `<C-c>`.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "https://github.com/vim-airline/vim-airline/issues/2588 I can reproduce this freezing behavior with `vim-airline`\r\n\r\nhere is a reproduction repo: https://github.com/vhoyer-bug-reproductions/airline-freeze-on-C-c",
            "created_at": "2022-10-21T17:44:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1287261948",
            "id": 1287261948,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5Mug78",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1287261948/reactions"
            },
            "updated_at": "2022-10-21T17:44:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1287261948",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11022464?v=4",
                "events_url": "https://api.github.com/users/vhoyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhoyer/followers",
                "following_url": "https://api.github.com/users/vhoyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhoyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhoyer",
                "id": 11022464,
                "login": "vhoyer",
                "node_id": "MDQ6VXNlcjExMDIyNDY0",
                "organizations_url": "https://api.github.com/users/vhoyer/orgs",
                "received_events_url": "https://api.github.com/users/vhoyer/received_events",
                "repos_url": "https://api.github.com/users/vhoyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhoyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhoyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhoyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "also this is happening with `NVIM v0.7.2`",
            "created_at": "2022-10-21T17:45:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1287263321",
            "id": 1287263321,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5MuhRZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1287263321/reactions"
            },
            "updated_at": "2022-10-21T17:45:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1287263321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11022464?v=4",
                "events_url": "https://api.github.com/users/vhoyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhoyer/followers",
                "following_url": "https://api.github.com/users/vhoyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhoyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhoyer",
                "id": 11022464,
                "login": "vhoyer",
                "node_id": "MDQ6VXNlcjExMDIyNDY0",
                "organizations_url": "https://api.github.com/users/vhoyer/orgs",
                "received_events_url": "https://api.github.com/users/vhoyer/received_events",
                "repos_url": "https://api.github.com/users/vhoyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhoyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhoyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhoyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "btw, vim-airline doesn't use lua, so I don't know if the labels are correctly applied, or maybe it's a different problem with the same behavior, should I open a new issue?",
            "created_at": "2022-10-24T14:28:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1289123945",
            "id": 1289123945,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5M1nhp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1289123945/reactions"
            },
            "updated_at": "2022-10-24T14:28:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1289123945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11022464?v=4",
                "events_url": "https://api.github.com/users/vhoyer/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhoyer/followers",
                "following_url": "https://api.github.com/users/vhoyer/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhoyer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhoyer",
                "id": 11022464,
                "login": "vhoyer",
                "node_id": "MDQ6VXNlcjExMDIyNDY0",
                "organizations_url": "https://api.github.com/users/vhoyer/orgs",
                "received_events_url": "https://api.github.com/users/vhoyer/received_events",
                "repos_url": "https://api.github.com/users/vhoyer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhoyer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhoyer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhoyer"
            }
        },
        {
            "author_association": "NONE",
            "body": "Not sure if this is the same bug or not, but it sounds similar, and I believe I found fairly minimal steps to reproduce:\r\n\r\n1. Open neovim with `nvim -u NONE`\r\n2. Open a terminal\r\n3. Source a file with the following contents:\r\n\r\n```lua\r\nlocal vim = assert(vim)\r\nlocal loop = vim.loop\r\n\r\nlocal i = 0\r\n\r\nlocal function do_cmd()\r\n  i = i + 1\r\n  print (\"spawn: \" .. i)\r\n  loop.spawn('echo', {\r\n    args = {'hi'}\r\n  }, function () end)\r\nend\r\n\r\nlocal function start_polling()\r\n  vim.defer_fn(function ()\r\n    local j = 0\r\n    while j < 100 do\r\n      do_cmd()\r\n      j = j + 1\r\n    end\r\n    start_polling()\r\n  end, 100)\r\nend\r\n\r\nstart_polling()\r\n```\r\n4. In the terminal (in INSERT mode) hold Ctrl-C. (In otherwords just send a bunch of Ctrl-C's to the terminal. For reference I have my keyboard rate set to `xset r rate 300 100`, so it repeats pretty fast).\r\n\r\nAfter several seconds the terminal should hang and Neovim will lock up at 100% CPU. \r\n\r\nObviously this example is pretty contrived, but the freeze happens often enough on my dev workflow to be annoying. (I have a plugin that periodically polls information by launching a bunch of commands). It appears to be a race conditions where if Ctrl-C is pressed at the exact wrong time during the job life cycle, it get's stuck in a loop.\r\n\r\nPoking around in GDB indicates that Neovim thinks it's getting a constant stream of Ctrl-C's, so it appears that maybe `got_int` is not being cleared somewhere. Using gdb to manually `set got_int = 0` will break the loop.\r\n\r\nTo further add to the mystery, I replicated this on 3 different machines (All Linux-based, Arch and Debian), however, I could not get the bug to replicate on a Gentoo server I run. All versions of Neovim were built from source though, so it seems strange to have different behavior. Maybe the server hardware is beefy enough that it masks the issue.\r\n\r\nI was also able to replicate this issue on the packaged release of Neovim in Arch linux:\r\n\r\n```\r\n$ /usr/bin/nvim --version\r\n\r\nNVIM v0.8.2\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\nCompiled by builduser\r\n\r\nFeatures: +acl +iconv +tui\r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```\r\n",
            "created_at": "2023-01-30T20:40:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1409303471",
            "id": 1409303471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5UAEOv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1409303471/reactions"
            },
            "updated_at": "2023-01-30T20:41:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1409303471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3434593?v=4",
                "events_url": "https://api.github.com/users/jrahm/events{/privacy}",
                "followers_url": "https://api.github.com/users/jrahm/followers",
                "following_url": "https://api.github.com/users/jrahm/following{/other_user}",
                "gists_url": "https://api.github.com/users/jrahm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jrahm",
                "id": 3434593,
                "login": "jrahm",
                "node_id": "MDQ6VXNlcjM0MzQ1OTM=",
                "organizations_url": "https://api.github.com/users/jrahm/orgs",
                "received_events_url": "https://api.github.com/users/jrahm/received_events",
                "repos_url": "https://api.github.com/users/jrahm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jrahm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jrahm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jrahm"
            }
        },
        {
            "author_association": "NONE",
            "body": "In my computer, i'm getting a similar situation, when NeoVim attached to Omnisharp, the process hangs on 100% but i can use even hanging one of four cores. But, when i try exit from Neovim, the process stops to respond. \r\n\r\n\r\n\r\n\r\nTo finish the process, i need execute `kill` command.\r\n![image](https://github.com/neovim/neovim/assets/4335700/f9e9f409-088d-4166-ba0f-efee3b9a60ed)\r\n![image](https://github.com/neovim/neovim/assets/4335700/8c6216cc-d04b-46ef-b093-a8f1d8e4671c)\r\n![image](https://github.com/neovim/neovim/assets/4335700/0bf278ae-32bd-4002-8ba7-a02badbb5143)\r\n\r\nThe `strace` outputs an interrupt log:\r\n```bash\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n[pid 2573548] epoll_pwait(3, [{events=EPOLLIN, data={u32=4, u64=4}}], 1024, 369, NULL, 8) = 1\r\n\r\n```\r\n",
            "created_at": "2023-05-19T21:07:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1555251383",
            "id": 1555251383,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5cs0C3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555251383/reactions"
            },
            "updated_at": "2023-06-04T01:07:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555251383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4335700?v=4",
                "events_url": "https://api.github.com/users/AugustoDeveloper/events{/privacy}",
                "followers_url": "https://api.github.com/users/AugustoDeveloper/followers",
                "following_url": "https://api.github.com/users/AugustoDeveloper/following{/other_user}",
                "gists_url": "https://api.github.com/users/AugustoDeveloper/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AugustoDeveloper",
                "id": 4335700,
                "login": "AugustoDeveloper",
                "node_id": "MDQ6VXNlcjQzMzU3MDA=",
                "organizations_url": "https://api.github.com/users/AugustoDeveloper/orgs",
                "received_events_url": "https://api.github.com/users/AugustoDeveloper/received_events",
                "repos_url": "https://api.github.com/users/AugustoDeveloper/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AugustoDeveloper/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AugustoDeveloper/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AugustoDeveloper"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have been consistently running into this issue for months, the way I frequently run into it is by pressing C-c when there is a terminal buffer outputting a lot of text to the screen (e.g. from the output of a `tail -f`. I was able to reproduce the same EPOLLIN loop when attaching strace to the process.",
            "created_at": "2023-05-26T18:40:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1564784373",
            "id": 1564784373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5dRLb1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1564784373/reactions"
            },
            "updated_at": "2023-06-04T01:08:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1564784373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6548135?v=4",
                "events_url": "https://api.github.com/users/Kraust/events{/privacy}",
                "followers_url": "https://api.github.com/users/Kraust/followers",
                "following_url": "https://api.github.com/users/Kraust/following{/other_user}",
                "gists_url": "https://api.github.com/users/Kraust/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Kraust",
                "id": 6548135,
                "login": "Kraust",
                "node_id": "MDQ6VXNlcjY1NDgxMzU=",
                "organizations_url": "https://api.github.com/users/Kraust/orgs",
                "received_events_url": "https://api.github.com/users/Kraust/received_events",
                "repos_url": "https://api.github.com/users/Kraust/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Kraust/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Kraust/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Kraust"
            }
        },
        {
            "author_association": "NONE",
            "body": "Same issue here, nvim keeps reading `^C` and the whole process use 100% cpu and high memory usage until i killed it. The terminal emulator also use 100% cpu.\r\n\r\nstrace \r\n\r\n```\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3203)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3201)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3199)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3197)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3195)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3193)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3191)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nepoll_wait(9, [{events=EPOLLIN, data={u32=39, u64=39}}], 1024, 0) = 1\r\nread(39, \"^C\", 3189)                    = 2\r\nepoll_wait(9, [], 1024, 0)              = 0\r\nwrite(38, \"\\3\", 1)                      = 1\r\nwrite(14, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\2\\260grid_cursor_goto\"..., 47) = 47\r\nepoll_wait(9, ^C[], 1024, 0)              = 0\r\nstrace: Process 1497024 detached\r\n\r\n```",
            "created_at": "2023-05-31T04:16:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1569471851",
            "id": 1569471851,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5djD1r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1569471851/reactions"
            },
            "updated_at": "2023-06-04T01:08:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1569471851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3339663?v=4",
                "events_url": "https://api.github.com/users/dispensable/events{/privacy}",
                "followers_url": "https://api.github.com/users/dispensable/followers",
                "following_url": "https://api.github.com/users/dispensable/following{/other_user}",
                "gists_url": "https://api.github.com/users/dispensable/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dispensable",
                "id": 3339663,
                "login": "dispensable",
                "node_id": "MDQ6VXNlcjMzMzk2NjM=",
                "organizations_url": "https://api.github.com/users/dispensable/orgs",
                "received_events_url": "https://api.github.com/users/dispensable/received_events",
                "repos_url": "https://api.github.com/users/dispensable/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dispensable/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dispensable/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dispensable"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We have clear repro steps given above. So I've hidden redundant comments (though the hints are appreciated).",
            "created_at": "2023-06-04T01:08:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1575304294",
            "id": 1575304294,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5d5Txm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1575304294/reactions"
            },
            "updated_at": "2023-06-04T01:08:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1575304294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@ibhagwan: Is it possible to mitigate this in fzf-lua somehow? I appear to trigger this condition 100% of the time just by running FzfLua and previewing certain files (not all files exhibit this behaviour though). This is triggered without interruption attempts `<C-c>` but results are very similar to what others report, which makes me believe it's same/related.\r\n\r\n```\r\n$ strace -s 99 -ffp  1816172\r\n... (opening preview) ...\r\n[{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33[I\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\261nvim_ui_set_focus\\221\\303\", 22) = 22\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33OB\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\252nvim_input\\221\\246<Down>\", 21) = 21\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=20, u64=20}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(20, \"\\223\\2\\246redraw\\334\\0\\5\\334\\0\\2\\251grid_line\\224\\1\\n \\334\\0\\37\\222\\241 \\315\\1\\202\\222\\241 \\315\\1\\r\\223\\243\\342\\200\\202\\315\\1\\r\\2\\222\\243\\357\\203\\266\\315\\1\\207\\222\\243\\342\\200\\202\\315\\1\\r\\221\\241c\\221\\241o\\221\\241n\\221\\241s\\221\\241o\\221\\241l\\221\\241e\\221\\241_\\221\\241l\\221\\241i\"..., 65536) = 514\r\n[pid 1816172] write(26, \"\\33[11;33H\\33(B\\33[m\\33[38;2;88;110;117m\\33[48;5;236m \\33(B\\33[m\\33[38;2;88;110;117m\\33[48;2;253;246;227m \\342\\200\\202\\342\\200\\202\\33(B\\33[\"..., 452) = 452\r\n[pid 1816172] epoll_pwait(19, [], 1024, 0, NULL, 8) = 0\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=20, u64=20}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(20, \"\\223\\2\\246redraw\\334\\0\\2\\334\\0\\30\\251grid_line\\224\\1\\4\\314\\270\\334\\0\\1\\223\\243\\342\\224\\200\\315\\1\\r\\n\\224\\1\\5\\315\\1\\0\\334\\0\\1\\222\\243\\342\\224\\202\\315\\1\\r\\224\\1\\6\\315\\1\\0\\334\\0\\1\\222\\243\\342\\224\\202\\315\\1\\r\\224\\1\\7\\315\\1\\0\\334\\0\\1\\222\\243\\342\\224\\202\\315\\1\\r\\224\\1\\10\\315\\1\\0\"..., 65536) = 426\r\n[pid 1816172] write(26, \"\\33[5;185H\\33(B\\33[m\\33[38;2;88;110;117m\\33[48;2;253;246;227m\\342\\224\\200\\33[5;186H\\342\\224\\200\\33[5;187H\\342\\224\\200\\33[5;188H\\342\\224\\200\\33[5;189H\\342\\224\\200\\33\"..., 420) = 420\r\n[pid 1816172] epoll_pwait(19, [], 1024, 0, NULL, 8) = 0\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33[O\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\261nvim_ui_set_focus\\221\\302\", 22) = 22\r\n[pid 1816172] epoll_pwait(11, ^[[B\r\n[{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33[I\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\261nvim_ui_set_focus\\221\\303\", 22) = 22\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33OB\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\252nvim_input\\221\\246<Down>\", 21) = 21\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33OA\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\252nvim_input\\221\\244<Up>\", 19) = 19\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33OA\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\252nvim_input\\221\\244<Up>\", 19) = 19\r\n[pid 1816172] epoll_pwait(11, [{events=EPOLLIN, data={u32=0, u64=0}}], 1024, -1, NULL, 8) = 1\r\n[pid 1816172] read(0, \"\\33[O\", 4095)    = 3\r\n[pid 1816172] write(18, \"\\223\\2\\261nvim_ui_set_focus\\221\\302\", 22) = 22\r\n[pid 1816172] epoll_pwait(11, \r\n```",
            "created_at": "2023-09-21T13:03:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1729523668",
            "id": 1729523668,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5nFm_U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729523668/reactions"
            },
            "updated_at": "2023-09-22T07:29:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729523668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13489144?v=4",
                "events_url": "https://api.github.com/users/xbreak/events{/privacy}",
                "followers_url": "https://api.github.com/users/xbreak/followers",
                "following_url": "https://api.github.com/users/xbreak/following{/other_user}",
                "gists_url": "https://api.github.com/users/xbreak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/xbreak",
                "id": 13489144,
                "login": "xbreak",
                "node_id": "MDQ6VXNlcjEzNDg5MTQ0",
                "organizations_url": "https://api.github.com/users/xbreak/orgs",
                "received_events_url": "https://api.github.com/users/xbreak/received_events",
                "repos_url": "https://api.github.com/users/xbreak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/xbreak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xbreak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/xbreak"
            }
        },
        {
            "author_association": "NONE",
            "body": "i was able to not trigger this bug every day by adding this in my alacritty config:\r\n```\r\nkey_bindings:\r\n  - { key: C, mods: Control,      mode: Alt,  action: None  } # fix neovim freezes\r\n  - { key: C, mods: Alt|Control,  mode: ~Alt, chars: \"\\x03\" }\r\n```\r\nit basically disables C-c in every tui and maps C-A-c to C-c instead. \r\n",
            "created_at": "2023-09-21T13:16:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1729565974",
            "id": 1729565974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5nFxUW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729565974/reactions"
            },
            "updated_at": "2023-09-29T07:53:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729565974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15798381?v=4",
                "events_url": "https://api.github.com/users/Hippo0o/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hippo0o/followers",
                "following_url": "https://api.github.com/users/Hippo0o/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hippo0o/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hippo0o",
                "id": 15798381,
                "login": "Hippo0o",
                "node_id": "MDQ6VXNlcjE1Nzk4Mzgx",
                "organizations_url": "https://api.github.com/users/Hippo0o/orgs",
                "received_events_url": "https://api.github.com/users/Hippo0o/received_events",
                "repos_url": "https://api.github.com/users/Hippo0o/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hippo0o/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hippo0o/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hippo0o"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've had the issue of `^c` intermittently hosing terminal mode when a command writes a lot of data to std{out,err}.\r\n```\r\n:split +term\r\n~  base64 < /dev/urandom\r\n^c\r\n```\r\n\r\nWhile debugging this I noticed the following the logs\r\n```\r\nline 1: ^Ireturn luaeval(printf('require\"nvim-treesitter.fold\".get_fold_indic(%d)', v:lnum))\r\nnvim_treesitter#foldexpr returning #0\r\n\r\ncalling nvim_treesitter#foldexpr()\r\n```\r\nI had the following settings.\r\n```\r\nset foldmethod=expr\r\nset foldexpr=nvim_treesitter#foldexpr()\r\n```\r\nSo I added this autocmd as a workaround.\r\n```\r\nautocmd TermOpen * set foldexpr&\r\n```\r\n\r\nThis smells like a race condition that is exacerbated by the foldmethod, but I haven't been able to reproduce since modifying the foldexpr.   ",
            "created_at": "2023-10-11T21:08:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1758543766",
            "id": 1758543766,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5o0T-W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758543766/reactions"
            },
            "updated_at": "2023-10-11T21:12:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758543766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Poking around in GDB indicates that Neovim thinks it's getting a constant stream of Ctrl-C's, so it appears that maybe got_int is not being cleared somewhere. Using gdb to manually set got_int = 0 will break the loop.\r\n\r\nI'll also point out that I saw the same thing as @jrahm listed above.  I spent a while stepping through with GDB before I stumbled upon the workaround in my previous comment.\r\n\r\n",
            "created_at": "2023-10-11T21:12:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1758550439",
            "id": 1758550439,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5o0Vmn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758550439/reactions"
            },
            "updated_at": "2023-10-11T21:12:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758550439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mattpallissard That's a great finding! I can also confirm that setting `foldexpr=0` for the terminal window prevents neovim from freezing, very *consistently*. A great repro. I also used the `cat /dev/urandom | base64` example to flood terminal outputs.\r\n\r\nIn your workaround you globally `set foldexpr&`, but it'd be even better if one can set this locally to the terminal windows: `setlocal foldexpr&` or `setlocal foldexpr=0` so that `foldexpr` can work for other buffers. Or simply `setlocal foldmethod=manual` (for the terminal buffer) also works by disabling the execution of foldexpr, hence another workaround:\r\n\r\n```vim\r\n  autocmd TermOpen * setlocal foldmethod=manual\r\n```\r\n\r\nI've made a more refined and clean version of the repro with minimal dependencies based on @mattpallissard's observation:\r\n\r\n```lua\r\n-- Run with: nvim --clean -u repro.lua, and hit <Ctrl-C>\r\nvim.o.foldmethod = 'expr'\r\nvim.o.foldexpr = 'MyFold()'\r\n\r\nvim.cmd [[\r\n  function! MyFold() abort\r\n    \" Do some expensive(?) computation inside foldexpr, to increase the chance of neovim freezing\r\n    \" Note: this function gets called **VERY OFTEN**, every single time terminal draws with a new character\r\n    let i = 0 | while i <= 20 | let i += 1 | endwhile\r\n    return 0\r\n  endfunction\r\n]]\r\n\r\nvim.cmd [[ term base64 < /dev/urandom ]]\r\n-- vim.cmd [[ setlocal foldmethod=manual ]] -- a workaround to prevent hanging (#20726)\r\nvim.cmd [[ startinsert ]]\r\n```\r\n\r\n<details>\r\n<summary>Some additional notes regarding the above repro</summary>\r\n\r\nThe following (lua function instead of vimscript foldexpr function) doesn't result in hanging. So it's probably related to vimscript execution?\r\n```\r\nvim.o.foldexpr = 'v:lua.MyFold()'\r\nfunction _G.MyFold() return 0 end\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>The infinite loop happens here</summary>\r\n\r\nWith this repro and a bit of playing around with gdb, I also found that the infinite loop happens around:\r\n\r\n- [`safe_vgetc()`](https://github.com/neovim/neovim/blob/v0.9.4/src/nvim/state.c#L62) which always returns 3 (`CTRL-C`) (due to `got_int`, as already pointed out in the above comments), and\r\n- [`s->execute(s, key)`](https://github.com/neovim/neovim/blob/v0.9.4/src/nvim/state.c) (i.e., [`terminal_execute`](https://github.com/neovim/neovim/blob/v0.9.4/src/nvim/terminal.c#L562)) always return 1 (FAIL).\r\n\r\n</details>",
            "created_at": "2023-10-12T02:54:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1758832263",
            "id": 1758832263,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5o1aaH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758832263/reactions"
            },
            "updated_at": "2023-10-12T03:03:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758832263",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "I don't know the codebase well, but it seems like there are likely two problems\n\n1. There is a context switch, from terminal to foldexpr, where an interrupt handler does the wrong thing.\n\n2. The infinite loop after the interrupt is handled incorrectly.",
            "created_at": "2023-10-12T04:01:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1758875360",
            "id": 1758875360,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5o1k7g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758875360/reactions"
            },
            "updated_at": "2023-10-12T04:01:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1758875360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> While debugging this I noticed the following the logs\r\n> \r\n> ```\r\n> line 1: ^Ireturn luaeval(printf('require\"nvim-treesitter.fold\".get_fold_indic(%d)', v:lnum))\r\n> ```\r\n\r\n\r\nRelated?\r\n\r\n- https://github.com/neovim/neovim/issues/6800\r\n- https://github.com/neovim/neovim/issues/25608\r\n    - but this is specifically about `vim.treesitter.foldexpr`, not the nvim-treesitter foldexpr.",
            "created_at": "2023-10-12T13:24:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1759608135",
            "id": 1759608135,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5o4X1H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1759608135/reactions"
            },
            "updated_at": "2023-10-12T13:26:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1759608135",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm not sure if it's related or not, but I also have a `foldexpr` related issue. When I use a command like `yes` inside the nvim's built-in terminal, nvim just stucks.\r\n\r\nAfter executing `yes` command, I cannot do anything.(none of `<ESC>`, `<C-c>`, `<C-\\>`, `<C-\\><C-n>` works)\r\n\r\nTested with minimal.lua below, with `nvim --clean -u minimal.lua`. Nvim version 0.9.4 on Linux Mint 21.\r\n\r\n```lua\r\n-- minimal.lua\r\nfor name, url in pairs({\r\n    -- ADD PLUGINS _NECESSARY_ TO REPRODUCE THE ISSUE, e.g:\r\n    -- some_plugin = 'https://github.com/author/plugin.nvim'\r\n    ['nvim-treesitter'] = 'https://github.com/nvim-treesitter/nvim-treesitter',\r\n}) do\r\n    local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\r\n    if vim.fn.isdirectory(install_path) == 0 then\r\n        vim.fn.system({ 'git', 'clone', '--depth=1', url, install_path, })\r\n    end\r\n    vim.opt.runtimepath:append(install_path)\r\nend\r\n\r\nvim.opt.foldmethod = 'expr'\r\nvim.opt.foldexpr = 'nvim_treesitter#foldexpr()'\r\n```",
            "created_at": "2023-11-28T05:55:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-1829158758",
            "id": 1829158758,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5tBr9m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829158758/reactions"
            },
            "updated_at": "2023-11-28T05:55:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829158758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/91934407?v=4",
                "events_url": "https://api.github.com/users/chanha-park/events{/privacy}",
                "followers_url": "https://api.github.com/users/chanha-park/followers",
                "following_url": "https://api.github.com/users/chanha-park/following{/other_user}",
                "gists_url": "https://api.github.com/users/chanha-park/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/chanha-park",
                "id": 91934407,
                "login": "chanha-park",
                "node_id": "U_kgDOBXrOxw",
                "organizations_url": "https://api.github.com/users/chanha-park/orgs",
                "received_events_url": "https://api.github.com/users/chanha-park/received_events",
                "repos_url": "https://api.github.com/users/chanha-park/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/chanha-park/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chanha-park/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/chanha-park"
            }
        },
        {
            "author_association": "NONE",
            "body": "May or may not be related, while attempting to debug this issue I've been using `fzf-lua` and spamming FzfLua + `<C-c>`, done enough times I would sometimes be able to hang neovim. However, doing so with `gdb` attached I am unable to get to the `got_int` loop described by both @jrahm in https://github.com/neovim/neovim/issues/20726#issuecomment-1409303471 and @wookayin in https://github.com/neovim/neovim/issues/20726#issuecomment-1758832263 but I do see the below in the gdb console every single time I am able to hang neovim:\r\n> Few examples below, each depicting a would-be `got_int` hang?\r\n```\r\nThread 1 \"nvim\" received signal SIGPIPE, Broken pipe.\r\n0x00007fa66ba9d60f in __GI___libc_write (nbytes=4093, buf=0x557165339f40, fd=20) at ../sysdeps/unix/sysv/linux/write.c:26\r\n26\tin ../sysdeps/unix/sysv/linux/write.c\r\n\r\nThread 1 \"nvim\" received signal SIGPIPE, Broken pipe.\r\n0x00007fa66ba9d60f in __GI___libc_write (nbytes=2174, buf=0x55716533af50, fd=20) at ../sysdeps/unix/sysv/linux/write.c:26\r\n26\tin ../sysdeps/unix/sysv/linux/write.c\r\n\r\nThread 1 \"nvim\" received signal SIGPIPE, Broken pipe.\r\n0x00007fa66ba9d60f in __GI___libc_write (nbytes=164, buf=0x5571654bcf40, fd=21) at ../sysdeps/unix/sysv/linux/write.c:26\r\n26\tin ../sysdeps/unix/sysv/linux/write.c\r\n```\r\n\r\nIs it possible that somehow the combination of receing the `SIGPIPE` causes `got_int` to never get cleared and thus enter the infinite loop?\r\n\r\n@justinmk, is it possible this issue is not related to lua code interruption or folds?",
            "created_at": "2024-04-01T06:02:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2029216449",
            "id": 2029216449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM5482LB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2029216449/reactions"
            },
            "updated_at": "2024-04-01T06:14:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2029216449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59988195?v=4",
                "events_url": "https://api.github.com/users/ibhagwan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ibhagwan/followers",
                "following_url": "https://api.github.com/users/ibhagwan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ibhagwan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ibhagwan",
                "id": 59988195,
                "login": "ibhagwan",
                "node_id": "MDQ6VXNlcjU5OTg4MTk1",
                "organizations_url": "https://api.github.com/users/ibhagwan/orgs",
                "received_events_url": "https://api.github.com/users/ibhagwan/received_events",
                "repos_url": "https://api.github.com/users/ibhagwan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ibhagwan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ibhagwan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ibhagwan"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm having the same issue when using Neovim's builtin terminal, and pressing CTRL-C to terminate a program that runs within that terminal.\r\nfor example:\r\n1. open terminal within neovim\r\n2. run a waiting command such as `tail -f /dev/null`\r\n3. press CTRL-C while being in terminal mode\r\n4. neovim hangs\r\n\r\nthe thing is, it doesn't always happen. just from time to time\r\n\r\nThis makes terminal mode basically unusable for me\r\n\r\nedit: im using neovim v0.10.0",
            "created_at": "2024-06-17T10:46:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2173059035",
            "id": 2173059035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6Bhj_b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2173059035/reactions"
            },
            "updated_at": "2024-06-24T13:50:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2173059035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28672915?v=4",
                "events_url": "https://api.github.com/users/amitlevy21/events{/privacy}",
                "followers_url": "https://api.github.com/users/amitlevy21/followers",
                "following_url": "https://api.github.com/users/amitlevy21/following{/other_user}",
                "gists_url": "https://api.github.com/users/amitlevy21/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amitlevy21",
                "id": 28672915,
                "login": "amitlevy21",
                "node_id": "MDQ6VXNlcjI4NjcyOTE1",
                "organizations_url": "https://api.github.com/users/amitlevy21/orgs",
                "received_events_url": "https://api.github.com/users/amitlevy21/received_events",
                "repos_url": "https://api.github.com/users/amitlevy21/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amitlevy21/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amitlevy21/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amitlevy21"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@amitlevy21 does it happen with `nvim --clean` ? ",
            "created_at": "2024-06-17T20:40:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2174383829",
            "id": 2174383829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6BmnbV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174383829/reactions"
            },
            "updated_at": "2024-06-24T13:51:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174383829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk it does not. how can I pinpoint the root cause of this? I tried using `:profile` (which I understand is for performance but tried nonetheless)\r\nhowever, I could not find anything interesting there",
            "created_at": "2024-06-22T15:06:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2184068446",
            "id": 2184068446,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6CLj1e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2184068446/reactions"
            },
            "updated_at": "2024-06-24T13:51:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2184068446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28672915?v=4",
                "events_url": "https://api.github.com/users/amitlevy21/events{/privacy}",
                "followers_url": "https://api.github.com/users/amitlevy21/followers",
                "following_url": "https://api.github.com/users/amitlevy21/following{/other_user}",
                "gists_url": "https://api.github.com/users/amitlevy21/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amitlevy21",
                "id": 28672915,
                "login": "amitlevy21",
                "node_id": "MDQ6VXNlcjI4NjcyOTE1",
                "organizations_url": "https://api.github.com/users/amitlevy21/orgs",
                "received_events_url": "https://api.github.com/users/amitlevy21/received_events",
                "repos_url": "https://api.github.com/users/amitlevy21/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amitlevy21/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amitlevy21/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amitlevy21"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@amitlevy21 you could narrow it to a specific plugin (`:help bisect`). Then the next step would be to see if that plugin is creating autocmds or other handlers that happen on TextChanged or similarly-frequent events.",
            "created_at": "2024-06-24T13:50:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2186632039",
            "id": 2186632039,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6CVVtn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186632039/reactions"
            },
            "updated_at": "2024-06-24T13:50:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186632039",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @amitlevy21 does it happen with `nvim --clean` ?\r\n\r\nI can confirm this happens with `--clean`.  Whatever the issue is appears to happen during some sort of context switch between the reading the running process's stdout and however nvim writes to the screen.  It seems that in a certain code-path the signal isn't being handled properly.  That said, I don't know the codebase so that's all based on side-effects and observation.\r\n\r\n1. it's intermittent\r\n2. it's much more likely to happen when a lot of text is being displayed rapidly.\r\n\r\nedit: fastest way I've found to reproduce it is\r\n\r\n```\r\nbase64 < /dev/urandom &\r\n#hammer ^c repeatedly\r\n```\r\nedit edit: for clarity",
            "created_at": "2024-07-03T23:34:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2207512368",
            "id": 2207512368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6Dk_cw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2207512368/reactions"
            },
            "updated_at": "2024-07-03T23:43:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2207512368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        },
        {
            "author_association": "NONE",
            "body": "I should also mention that I cannot reproduce this in vim, it's only neovim and it usually takes 20-200 ^c's to reproduce.  I was deep into the 1000s before I stopped in vim.",
            "created_at": "2024-07-04T00:19:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2207627496",
            "id": 2207627496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6Dlbjo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2207627496/reactions"
            },
            "updated_at": "2024-07-04T00:19:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2207627496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        },
        {
            "author_association": "NONE",
            "body": "ok, so the typical term process tree looks like this\r\n\r\n```\r\nmatt      499618  499490  0 18:01 pts/24   00:00:00 ./build/bin/nvim --clean +term\r\nmatt      499620  499618  0 18:01 ?        00:00:00 ./build/bin/nvim --embed --clean +term\r\n```\r\n\r\nLooking at the backtraces, there are a few interesting things.\r\n\r\n1. even though the process is \"hung\" it's still using cpu as noted in the issue title AND it seems to still be accepting keyboard input.  Looking at the backtrace it looks like state_enter registered the keys k and j, which I hit _after_ I hung the process up with ^c.\r\n```\r\n#7  0x00005d29ebccccd6 in state_enter (s=0x7ffeb725ba20) at /home/matt/usr/src/misc/neovim/src/nvim/state.c:81\r\n        check_result = 1\r\n        key = -26365\r\n        count = 1\r\n        keyname = 0x5d29ebed9220 \"K_EVENT\"\r\n        execute_result = 1\r\n        __func__ = \"state_enter\"\r\n[snip]\r\n#13 0x00005d29ebcccd9f in state_enter (s=0x7ffeb725bc00) at /home/matt/usr/src/misc/neovim/src/nvim/state.c:104\r\n        check_result = 1\r\n        key = 97\r\n        count = 2\r\n        keyname = 0x5d29ebfb33c0 <string> \"<j>\"\r\n        execute_result = 1\r\n        __func__ = \"state_enter\"\r\n```\r\n\r\nIt also looks like both the parent and child were in the middle of inbuf_poll when things went awry.\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007df8d62c732d in __GI_epoll_pwait (epfd=3, events=0x7ffeb7258860, maxevents=1024, timeout=-1, set=0x0)\r\n    at ../sysdeps/unix/sysv/linux/epoll_pwait.c:40\r\n#1  0x00005d29ebe61dd2 in uv__io_poll (loop=0x5d29ebfb8ee0 <main_loop>, timeout=-1)\r\n    at /home/matt/usr/src/misc/neovim/.deps/build/src/libuv/src/unix/linux.c:1359\r\n#2  0x00005d29ebe45e3a in uv_run (loop=0x5d29ebfb8ee0 <main_loop>, mode=UV_RUN_ONCE)\r\n    at /home/matt/usr/src/misc/neovim/.deps/build/src/libuv/src/unix/core.c:447\r\n#3  0x00005d29ebade417 in loop_uv_run (loop=0x5d29ebfb8ee0 <main_loop>, ms=-1)\r\n    at /home/matt/usr/src/misc/neovim/src/nvim/event/loop.c:62\r\n#4  0x00005d29ebade473 in loop_poll_events (loop=0x5d29ebfb8ee0 <main_loop>, ms=-1)\r\n    at /home/matt/usr/src/misc/neovim/src/nvim/event/loop.c:83\r\n#5  0x00005d29ebc2a1c6 in inbuf_poll (ms=-1, events=0x5d2a0c7955a0)\r\n    at /home/matt/usr/src/misc/neovim/src/nvim/os/input.c:473\r\n#6  0x00005d29ebc29820 in os_inchar (buf=0x0, maxlen=0, ms=-1, tb_change_cnt=116, events=0x5d2a0c7955a0)\r\n    at /home/matt/usr/src/misc/neovim/src/nvim/os/input.c:150\r\n#7  0x00005d29ebccccd6 in state_enter (s=0x7ffeb725ba20) at /home/matt/usr/src/misc/neovim/src/nvim/state.c:81\r\n#8  0x00005d29ebcf2a21 in terminal_enter () at /home/matt/usr/src/misc/neovim/src/nvim/terminal.c:564\r\n#9  0x00005d29eba75e88 in edit (cmdchar=97, startln=false, count=1)\r\n    at /home/matt/usr/src/misc/neovim/src/nvim/edit.c:1268\r\n#10 0x00005d29ebbf80e4 in invoke_edit (cap=0x7ffeb725bc70, repl=0, cmd=97, startln=0)\r\n    at /home/matt/usr/src/misc/neovim/src/nvim/normal.c:6229\r\n#11 0x00005d29ebbf803c in nv_edit (cap=0x7ffeb725bc70) at /home/matt/usr/src/misc/neovim/src/nvim/normal.c:6201\r\n#12 0x00005d29ebbeca8c in normal_execute (state=0x7ffeb725bc00, key=97)\r\n    at /home/matt/usr/src/misc/neovim/src/nvim/normal.c:1229\r\n#13 0x00005d29ebcccd9f in state_enter (s=0x7ffeb725bc00) at /home/matt/usr/src/misc/neovim/src/nvim/state.c:104\r\n#14 0x00005d29ebbeace0 in normal_enter (cmdwin=false, noexmode=false)\r\n    at /home/matt/usr/src/misc/neovim/src/nvim/normal.c:518\r\n#15 0x00005d29ebb90c6f in main (argc=4, argv=0x7ffeb725bff8) at /home/matt/usr/src/misc/neovim/src/nvim/main.c:664\r\n```\r\n\r\nI can provide full backtraces if folks would like them.",
            "created_at": "2024-07-04T05:05:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2208125973",
            "id": 2208125973,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6DnVQV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2208125973/reactions"
            },
            "updated_at": "2024-07-04T05:05:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2208125973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also, to rule out system dependencies I tried a few different app images.\r\n\r\n```\r\nnvim.appimage2.2\r\nnvim.appimage3.0\r\nnvim.appimage3.1\r\nnvim.appimage3.4\r\nnvim.appimage4.2\r\nnvim.appimage10.0\r\n```\r\n\r\nI was able to reproduce this on every one except for v0.2.2.  \r\n\r\n(a note if someone else tries to reproduce this; it doesn't look like the older versions support `--clean` so I handed them `-u /dev/null`)",
            "created_at": "2024-07-04T05:07:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2208128085",
            "id": 2208128085,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6DnVxV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2208128085/reactions"
            },
            "updated_at": "2024-07-04T05:07:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2208128085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24529534?v=4",
                "events_url": "https://api.github.com/users/mattpallissard/events{/privacy}",
                "followers_url": "https://api.github.com/users/mattpallissard/followers",
                "following_url": "https://api.github.com/users/mattpallissard/following{/other_user}",
                "gists_url": "https://api.github.com/users/mattpallissard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mattpallissard",
                "id": 24529534,
                "login": "mattpallissard",
                "node_id": "MDQ6VXNlcjI0NTI5NTM0",
                "organizations_url": "https://api.github.com/users/mattpallissard/orgs",
                "received_events_url": "https://api.github.com/users/mattpallissard/received_events",
                "repos_url": "https://api.github.com/users/mattpallissard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mattpallissard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mattpallissard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mattpallissard"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yesterday, my neovim has freezed after <C-c>\r\nI haven't closed it, and today I looked at it, and I saw\r\n```\r\nMessages: table overflow\r\n```\r\n\r\nAfter I have pressed enter in this window, for a split second I have seen the lua stack trace, where there was something containing \"key\", but I haven't remembered anything else distinct.\r\nI'm not sure if it was the same error, but looks like the windows is not completely frozen at signal processing, but also evaluates some lua code?\r\n\r\nAfter a couple of hours, the same window unfreezed again, this time I was able to see the error message:\r\n\r\n```\r\nError executing vim.on_key Lua callback: vim/_editor.lua:0: Error executing 'on_key' with ns_ids '17'\r\n    Messages: table overflow\r\nstack traceback:\r\n    [C]: in function 'error'\r\n    vim/_editor.lua: in function <vim/_editor.lua:0>\r\n```\r\n\r\nIt is still consuming 100% of one core.",
            "created_at": "2024-07-19T12:31:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2239038108",
            "id": 2239038108,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6FdQKc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2239038108/reactions"
            },
            "updated_at": "2024-07-19T18:51:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2239038108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6235312?v=4",
                "events_url": "https://api.github.com/users/CertainLach/events{/privacy}",
                "followers_url": "https://api.github.com/users/CertainLach/followers",
                "following_url": "https://api.github.com/users/CertainLach/following{/other_user}",
                "gists_url": "https://api.github.com/users/CertainLach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/CertainLach",
                "id": 6235312,
                "login": "CertainLach",
                "node_id": "MDQ6VXNlcjYyMzUzMTI=",
                "organizations_url": "https://api.github.com/users/CertainLach/orgs",
                "received_events_url": "https://api.github.com/users/CertainLach/received_events",
                "repos_url": "https://api.github.com/users/CertainLach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/CertainLach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/CertainLach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/CertainLach"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Yesterday, my neovim has freezed after I haven't closed it, and today I looked at it, and I saw\r\n> \r\n> ```\r\n> Messages: table overflow\r\n> ```\r\n> \r\n> After I have pressed enter in this window, for a split second I have seen the lua stack trace, where there was something containing \"key\", but I haven't remembered anything else distinct. I'm not sure if it was the same error, but looks like the windows is not completely frozen at signal processing, but also evaluates some lua code?\r\n> \r\n> After a couple of hours, the same window unfreezed again, this time I was able to see the error message:\r\n> \r\n> ```\r\n> Error executing vim.on_key Lua callback: vim/_editor.lua:0: Error executing 'on_key' with ns_ids '17'\r\n>     Messages: table overflow\r\n> stack traceback:\r\n>     [C]: in function 'error'\r\n>     vim/_editor.lua: in function <vim/_editor.lua:0>\r\n> ```\r\n> \r\n> It is still consuming 100% of one core.\r\n\r\nGreat finds @CertainLach, this confirms my finding from the OP, the log generated by the lua debug hook shows it’s calling `on_key` in a loop.",
            "created_at": "2024-08-11T03:19:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2282370688",
            "id": 2282370688,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6ICjaA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282370688/reactions"
            },
            "updated_at": "2024-08-11T14:19:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282370688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59988195?v=4",
                "events_url": "https://api.github.com/users/ibhagwan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ibhagwan/followers",
                "following_url": "https://api.github.com/users/ibhagwan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ibhagwan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ibhagwan",
                "id": 59988195,
                "login": "ibhagwan",
                "node_id": "MDQ6VXNlcjU5OTg4MTk1",
                "organizations_url": "https://api.github.com/users/ibhagwan/orgs",
                "received_events_url": "https://api.github.com/users/ibhagwan/received_events",
                "repos_url": "https://api.github.com/users/ibhagwan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ibhagwan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ibhagwan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ibhagwan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> it’s calling `on_key` in a loop.\r\n\r\nDo you have a config or plugin that is setting an `on_key` callback? ",
            "created_at": "2024-08-11T14:19:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2282777222",
            "id": 2282777222,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6IEGqG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282777222/reactions"
            },
            "updated_at": "2024-08-11T14:19:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282777222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > it’s calling `on_key` in a loop.\r\n> \r\n> Do you have a config or plugin that is setting an `on_key` callback?\r\n\r\nNope, reading the code the lua `on_key` seems to be called (from the C code) regardless?",
            "created_at": "2024-08-11T14:33:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2282781567",
            "id": 2282781567,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6IEHt_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282781567/reactions"
            },
            "updated_at": "2024-08-11T14:33:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282781567",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59988195?v=4",
                "events_url": "https://api.github.com/users/ibhagwan/events{/privacy}",
                "followers_url": "https://api.github.com/users/ibhagwan/followers",
                "following_url": "https://api.github.com/users/ibhagwan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ibhagwan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ibhagwan",
                "id": 59988195,
                "login": "ibhagwan",
                "node_id": "MDQ6VXNlcjU5OTg4MTk1",
                "organizations_url": "https://api.github.com/users/ibhagwan/orgs",
                "received_events_url": "https://api.github.com/users/ibhagwan/received_events",
                "repos_url": "https://api.github.com/users/ibhagwan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ibhagwan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ibhagwan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ibhagwan"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Do you have a config or plugin that is setting an on_key callback?\r\n\r\nThe problem is not the contents of on_key callback, the problem is that this callback is being called indefinitely in a loop after C-c is pressed sometimes.",
            "created_at": "2024-08-11T14:37:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/20726#issuecomment-2282782551",
            "id": 2282782551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20726",
            "node_id": "IC_kwDOAPphoM6IEH9X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282782551/reactions"
            },
            "updated_at": "2024-08-11T14:37:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282782551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6235312?v=4",
                "events_url": "https://api.github.com/users/CertainLach/events{/privacy}",
                "followers_url": "https://api.github.com/users/CertainLach/followers",
                "following_url": "https://api.github.com/users/CertainLach/following{/other_user}",
                "gists_url": "https://api.github.com/users/CertainLach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/CertainLach",
                "id": 6235312,
                "login": "CertainLach",
                "node_id": "MDQ6VXNlcjYyMzUzMTI=",
                "organizations_url": "https://api.github.com/users/CertainLach/orgs",
                "received_events_url": "https://api.github.com/users/CertainLach/received_events",
                "repos_url": "https://api.github.com/users/CertainLach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/CertainLach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/CertainLach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/CertainLach"
            }
        }
    ],
    "comments": 30,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20726/comments",
    "created_at": "2022-10-18T20:40:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20726/events",
    "html_url": "https://github.com/neovim/neovim/issues/20726",
    "id": 1413818046,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 396626349,
            "name": "input",
            "node_id": "MDU6TGFiZWwzOTY2MjYzNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/input"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20726/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 39,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "",
        "due_on": "2024-10-31T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 51,
        "state": "open",
        "title": "0.11",
        "updated_at": "2024-08-11T15:32:20Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "I_kwDOAPphoM5URSa-",
    "number": 20726,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 10,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 10,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20726/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20726/timeline",
    "title": "on_key hang at 100% CPU when interrupted with <C-c>",
    "updated_at": "2024-08-11T15:32:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20726",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/59988195?v=4",
        "events_url": "https://api.github.com/users/ibhagwan/events{/privacy}",
        "followers_url": "https://api.github.com/users/ibhagwan/followers",
        "following_url": "https://api.github.com/users/ibhagwan/following{/other_user}",
        "gists_url": "https://api.github.com/users/ibhagwan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ibhagwan",
        "id": 59988195,
        "login": "ibhagwan",
        "node_id": "MDQ6VXNlcjU5OTg4MTk1",
        "organizations_url": "https://api.github.com/users/ibhagwan/orgs",
        "received_events_url": "https://api.github.com/users/ibhagwan/received_events",
        "repos_url": "https://api.github.com/users/ibhagwan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ibhagwan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ibhagwan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ibhagwan"
    }
}