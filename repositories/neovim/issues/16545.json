{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    ],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\n\n_No response_\n\n### Feature description\n\nThere is `vim.diagnostic.config` `opts.virtual_text.format` but it allows to format and display only one diagnostic. How about to add something like `opts.virtual_text.format_line` which would allow to format and display in virtual text all the diagnostics of the current line?\r\n\r\nCurrently it is possible via re-implementing `vim.diagnostic.handlers.virtual_text.show`, but I had to hack-export `private local function save_extmarks(namespace, bufnr)`\r\n![diagnostic_virtual_text](https://user-images.githubusercontent.com/35213999/144816888-64dd6706-bc14-48ae-8dfa-f8e6fe53a6dd.png)\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think finding out why (and if) `save_extmarks` and `restore_extmarks` are necessary and fixing the underlying issue there (and thus allowing us to remove those two functions) is the best solution here, as that then allows the underline and virtual text handlers to be fully overridable.",
            "created_at": "2021-12-07T17:50:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/16545#issuecomment-988144468",
            "id": 988144468,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16545",
            "node_id": "IC_kwDOAPphoM465eNU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/988144468/reactions"
            },
            "updated_at": "2021-12-07T17:50:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/988144468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@vatosarmat Could you share your implementation on how you got virtual text to right-align?\r\n\r\nI'm trying to get one of the following behaviors in Neovim\r\n\r\nRight align (@vatosarmat 's request)\r\n\r\n``` \r\nfoo text                         # virtual stuff\r\nbar                              # more blah\r\nmore text here                   # text here tt\r\n```\r\n\r\nOr even just \"starts at a certain column\"\r\n\r\n``` \r\nfoo text                         # virtual stuff\r\nbar                              # more blah\r\nmore text here                   # text here tt\r\nreally long text that exceeds column  # more text\r\n```\r\n\r\nI've been looking around for any way to do this via `vim.diagnostic.config()` but haven't found anything. So far I'm just setting the virtual text spacing very high while I wait to find a cleaner solution.",
            "created_at": "2023-04-10T03:42:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/16545#issuecomment-1501355259",
            "id": 1501355259,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16545",
            "node_id": "IC_kwDOAPphoM5ZfNz7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1501355259/reactions"
            },
            "updated_at": "2023-08-12T06:50:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1501355259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@gpanders (cc @justinmk @glepnir) what do you think of changing the API of `vim.diagnostic.config.virtual_text.format` to take an list of diagnostics instead? This would address this issue and it seems like it wouldn't require a lot from neovim's side [(given that `reformat_diagnostics` already receives all diagnostics)](https://github.com/neovim/neovim/blob/58a1ef8e6a93c615379f6fbe7234697bcdc42b3e/runtime/lua/vim/diagnostic.lua#L131). It does introduce a breaking change, but I find it reasonable for the virtual text handler to have all the diagnostic information available for the current line.",
            "created_at": "2023-08-12T03:18:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/16545#issuecomment-1675651203",
            "id": 1675651203,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16545",
            "node_id": "IC_kwDOAPphoM5j4GiD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675651203/reactions"
            },
            "updated_at": "2023-08-12T03:18:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1675651203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16545/comments",
    "created_at": "2021-12-06T09:20:47Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16545/events",
    "html_url": "https://github.com/neovim/neovim/issues/16545",
    "id": 1071914464,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16545/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM4_5B3g",
    "number": 16545,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16545/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16545/timeline",
    "title": "Allow to right align diagnostic virtual text and allow it to have all diagnostics of the current line instead of just one of them",
    "updated_at": "2023-08-12T06:50:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16545",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35213999?v=4",
        "events_url": "https://api.github.com/users/vatosarmat/events{/privacy}",
        "followers_url": "https://api.github.com/users/vatosarmat/followers",
        "following_url": "https://api.github.com/users/vatosarmat/following{/other_user}",
        "gists_url": "https://api.github.com/users/vatosarmat/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vatosarmat",
        "id": 35213999,
        "login": "vatosarmat",
        "node_id": "MDQ6VXNlcjM1MjEzOTk5",
        "organizations_url": "https://api.github.com/users/vatosarmat/orgs",
        "received_events_url": "https://api.github.com/users/vatosarmat/received_events",
        "repos_url": "https://api.github.com/users/vatosarmat/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vatosarmat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vatosarmat/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vatosarmat"
    }
}