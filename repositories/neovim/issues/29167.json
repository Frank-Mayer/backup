{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nThe neovim spell checker is very useful, but there doesn't seem to be any straightforward way to get all spelling mistakes in a buffer with Lua without iterating through them with `]s`. Ideally, there would be a function like `vim.fn.get_spelling_errors(bufnr)` that would return all errors in a buffer as a table (while preserving things like Treesitter context-dependence that are ignored by `vim.spell.check()`.\n\n### Expected behavior\n\nThe new feature would look like a function that returns the same result that would be provided by iterating through the buffer with `]s` and writing down each mistake found. This would solve the problem, and it would be useful because it would (probably) be faster than iterating through, would definitely be more elegant, and would be simpler to run in the background as it wouldn't require moving and then resetting the cursor. Something like:\r\n```lua\r\n{\r\n  {\r\n    word = \"tset\",\r\n    severity = \"bad\",\r\n    linenr = 20,\r\n    colnr = 10,\r\n  },\r\n  {\r\n    word = \"grey\",\r\n    severity = \"local\",\r\n    linenr = 15,\r\n    colnr = 5,\r\n  },\r\n}\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You can use `vim.spell.check` and pass in each line of the buffer manually. I don't think we need to provide a first class function for this.",
            "created_at": "2024-06-03T21:29:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146157354",
            "id": 2146157354,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_68Mq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146157354/reactions"
            },
            "updated_at": "2024-06-03T21:29:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146157354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for the reply. I was thinking it could be useful to have something that would integrate with things like Treesitter automatically (whereas `vim.spell.check` is strictly strings), but it might be too niche.",
            "created_at": "2024-06-03T21:33:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146163667",
            "id": 2146163667,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_69vT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146163667/reactions"
            },
            "updated_at": "2024-06-03T21:33:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146163667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66334356?v=4",
                "events_url": "https://api.github.com/users/ravibrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/ravibrock/followers",
                "following_url": "https://api.github.com/users/ravibrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/ravibrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ravibrock",
                "id": 66334356,
                "login": "ravibrock",
                "node_id": "MDQ6VXNlcjY2MzM0MzU2",
                "organizations_url": "https://api.github.com/users/ravibrock/orgs",
                "received_events_url": "https://api.github.com/users/ravibrock/received_events",
                "repos_url": "https://api.github.com/users/ravibrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ravibrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ravibrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ravibrock"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I guess the main point is that Neovim already exposes everything needed for this to be implemented so there isn't anything that can't be done via a custom function or plugin.",
            "created_at": "2024-06-03T21:50:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146186403",
            "id": 2146186403,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_7DSj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146186403/reactions"
            },
            "updated_at": "2024-06-03T21:50:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146186403",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "How does it expose something like \"get next spelling error\"? I went through the source code and it looks like `]s` is hardcoded in C--there isn't an API for getting the location of the next spelling error. I guess my suggestion is to expose whatever method(s) Neovim uses internally to jump to the next spelling error in such a way that they can be called directly in Lua, since presumably they exist in the C codebase (and, since they're implemented in C, are probably faster than comparable Lua implementations). But I'm not 100% sure how complicated that would be.",
            "created_at": "2024-06-03T22:40:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146246343",
            "id": 2146246343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_7R7H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146246343/reactions"
            },
            "updated_at": "2024-06-03T22:43:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146246343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66334356?v=4",
                "events_url": "https://api.github.com/users/ravibrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/ravibrock/followers",
                "following_url": "https://api.github.com/users/ravibrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/ravibrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ravibrock",
                "id": 66334356,
                "login": "ravibrock",
                "node_id": "MDQ6VXNlcjY2MzM0MzU2",
                "organizations_url": "https://api.github.com/users/ravibrock/orgs",
                "received_events_url": "https://api.github.com/users/ravibrock/received_events",
                "repos_url": "https://api.github.com/users/ravibrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ravibrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ravibrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ravibrock"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "- You can get the buffer text\n- You can iterate words using a pattern. \n- You can check if a certain position has a `@spell` capture\n- You can check the spelling of a string.\n\nIt isn't exactly the same as what the C codebase does, but I'm not sure it needs to be. And I'm not sure it's even feasible given how it is implemented in C. Last time I checked I remember being quite ad-hoc.\n\nWe can, if need be, improve the API for any one of these points.",
            "created_at": "2024-06-03T23:14:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146279194",
            "id": 2146279194,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_7Z8a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146279194/reactions"
            },
            "updated_at": "2024-06-03T23:14:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146279194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "That makes sense, thanks. I'll try to implement iteration through `@spell` groups tomorrow and see how it goes. If I can get that working it would probably be as close to an ideal solution as is necessary.",
            "created_at": "2024-06-04T04:32:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146585387",
            "id": 2146585387,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_8ksr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146585387/reactions"
            },
            "updated_at": "2024-06-04T04:32:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146585387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66334356?v=4",
                "events_url": "https://api.github.com/users/ravibrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/ravibrock/followers",
                "following_url": "https://api.github.com/users/ravibrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/ravibrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ravibrock",
                "id": 66334356,
                "login": "ravibrock",
                "node_id": "MDQ6VXNlcjY2MzM0MzU2",
                "organizations_url": "https://api.github.com/users/ravibrock/orgs",
                "received_events_url": "https://api.github.com/users/ravibrock/received_events",
                "repos_url": "https://api.github.com/users/ravibrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ravibrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ravibrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ravibrock"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You can use `vim.spell.check` and pass in each line of the buffer manually. I don't think we need to provide a first class function for this.\r\n\r\nWhy would we want to do the work again (and it does not scale at all, huge buffers with a lot of lines will require you to dump the entire contents as arrays of strings into the lua runtime, go through it line by line pass it to the function to in the end obtain information that is already known to vim... what ???? ) ? The spelling checks are already processed and obtained from vim in the buffer, there is no reason to do the same work again, simply to obtain the same information because there is no public api to do so. I think this is a flawed approach. This makes only sense if the user has not enabled spell checking for the buffer and wants to manually compute them and do something else. So both the vim.spell.check and a dedicated api to extract already processed spelling errros, have their applications ",
            "created_at": "2024-06-04T08:39:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146943513",
            "id": 2146943513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_98IZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146943513/reactions"
            },
            "updated_at": "2024-06-09T07:45:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146943513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Why would we want to do the work again ?\r\n\r\nNvim hasn't done the work yet. It only checks what is visible on screen and does it every screen refresh.\r\n\r\nIt's best to check the code before making assumptions about how things work.",
            "created_at": "2024-06-04T08:40:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146946033",
            "id": 2146946033,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_98vx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146946033/reactions"
            },
            "updated_at": "2024-06-09T07:45:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146946033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "It does some work for the visible part, so visible spelling errors are processed at least. What you probably mean to imply is that vim does not all about `all` the spelling errors at the moment the buffer is read. ",
            "created_at": "2024-06-04T08:48:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2146963361",
            "id": 2146963361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5_-A-h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146963361/reactions"
            },
            "updated_at": "2024-06-09T07:45:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146963361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15955811?v=4",
                "events_url": "https://api.github.com/users/asmodeus812/events{/privacy}",
                "followers_url": "https://api.github.com/users/asmodeus812/followers",
                "following_url": "https://api.github.com/users/asmodeus812/following{/other_user}",
                "gists_url": "https://api.github.com/users/asmodeus812/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/asmodeus812",
                "id": 15955811,
                "login": "asmodeus812",
                "node_id": "MDQ6VXNlcjE1OTU1ODEx",
                "organizations_url": "https://api.github.com/users/asmodeus812/orgs",
                "received_events_url": "https://api.github.com/users/asmodeus812/received_events",
                "repos_url": "https://api.github.com/users/asmodeus812/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/asmodeus812/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asmodeus812/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/asmodeus812"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It does some work for the visible part, so visible spelling errors are processed at least. \r\n\r\nYes which is usually a very small fraction of the buffer.\r\n\r\nAnd to repeat it does this **every single screen redraw** (not on reading the buffer) and the results are never cached, so it's not expensive to run and there is no problem doing this again in an interactive context for the whole buffer.",
            "created_at": "2024-06-04T11:12:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/29167#issuecomment-2147265264",
            "id": 2147265264,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29167",
            "node_id": "IC_kwDOAPphoM5__Krw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2147265264/reactions"
            },
            "updated_at": "2024-06-09T07:45:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2147265264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29167/comments",
    "created_at": "2024-06-03T15:31:52Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29167/events",
    "html_url": "https://github.com/neovim/neovim/issues/29167",
    "id": 2331462621,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is not fixed but can be circumvented until then",
            "id": 435850181,
            "name": "has:workaround",
            "node_id": "MDU6TGFiZWw0MzU4NTAxODE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:workaround"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "spellcheck",
            "id": 1953742452,
            "name": "spell",
            "node_id": "MDU6TGFiZWwxOTUzNzQyNDUy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/spell"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29167/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 222,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 257,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2024-06-10T00:27:15Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6K90vd",
    "number": 29167,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29167/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29167/timeline",
    "title": "Programmatic way of getting spelling errors",
    "updated_at": "2024-06-09T07:45:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29167",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/66334356?v=4",
        "events_url": "https://api.github.com/users/ravibrock/events{/privacy}",
        "followers_url": "https://api.github.com/users/ravibrock/followers",
        "following_url": "https://api.github.com/users/ravibrock/following{/other_user}",
        "gists_url": "https://api.github.com/users/ravibrock/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ravibrock",
        "id": 66334356,
        "login": "ravibrock",
        "node_id": "MDQ6VXNlcjY2MzM0MzU2",
        "organizations_url": "https://api.github.com/users/ravibrock/orgs",
        "received_events_url": "https://api.github.com/users/ravibrock/received_events",
        "repos_url": "https://api.github.com/users/ravibrock/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ravibrock/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ravibrock/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ravibrock"
    }
}