{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nsince v0.10.0, `[d` and `]d` are mapped to `vim.diagnostic.goto_next()` and `vim.diagnostic.goto_prev()`. The default behavior of `[d` and `]d` only moves the cursor to the diagnostics.\r\n\r\nExplicitly mapping `[d` and `]d`, `vim.keymap.set(\"n\", \"[d\", vim.diagnostic.goto_prev)`, moves the cursor AND opens the floating diagnostic window. \r\n\r\n### Steps to reproduce\r\n\r\nTested with and without explicit keymap:\r\n\r\nminimal.lua:\r\n\r\n```lua\r\nlocal root = vim.fn.fnamemodify(\"./.repro\", \":p\")\r\n\r\n-- set stdpaths to use .repro\r\nfor _, name in ipairs({ \"config\", \"data\", \"state\", \"cache\" }) do\r\n  vim.env[(\"XDG_%s_HOME\"):format(name:upper())] = root .. \"/\" .. name\r\nend\r\n\r\n-- bootstrap lazy\r\nlocal lazypath = root .. \"/plugins/lazy.nvim\"\r\nif not vim.loop.fs_stat(lazypath) then\r\n  vim.fn.system({ \"git\", \"clone\", \"--filter=blob:none\", \"https://github.com/folke/lazy.nvim.git\", lazypath })\r\nend\r\nvim.opt.runtimepath:prepend(lazypath)\r\n\r\nlocal plugins = {\r\n  {\r\n    \"neovim/nvim-lspconfig\",\r\n    event = { \"BufReadPost\", \"BufNewFile\" },\r\n    dependencies = {\r\n      {\r\n        \"williamboman/mason.nvim\",\r\n        opts = {\r\n          -- custom ensure_installed\r\n          ensure_installed = {\r\n            -- lua_ls\r\n            \"lua-language-server\",\r\n          },\r\n        },\r\n        config = function(_, opts)\r\n          require(\"mason\").setup(opts)\r\n          local mr = require(\"mason-registry\")\r\n          local function ensure_installed()\r\n            for _, tool in pairs(opts.ensure_installed) do\r\n              local p = mr.get_package(tool)\r\n              if not p:is_installed() then\r\n                p:install()\r\n              end\r\n            end\r\n          end\r\n\r\n          mr.refresh(ensure_installed)\r\n        end,\r\n      },\r\n    },\r\n    config = function()\r\n      require(\"lspconfig\").lua_ls.setup({})\r\n    end,\r\n  },\r\n}\r\nrequire(\"lazy\").setup(plugins, {\r\n  root = root .. \"/plugins\",\r\n})\r\n\r\n-- comment / uncomment the following keymaps\r\nvim.keymap.set(\"n\", \"[d\", vim.diagnostic.goto_prev)\r\nvim.keymap.set(\"n\", \"]d\", vim.diagnostic.goto_next)\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe default behavior open the floating diagnostic window.\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.10.0\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nnot available in vim\r\n\r\n### Operating system/version\r\n\r\nWSL ubuntu 22.04\r\n\r\n### Terminal name/version\r\n\r\nwindows terminal 1.21.1272.0\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nappimage",
    "closed_at": "2024-05-22T02:52:18Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "It is by design that floating window is disabled by default. See #16230.\r\n\r\n`]d` and `[d` are mapped to:\r\n\r\n```\r\nvim.diagnostic.goto_next({ float = false })\r\nvim.diagnostic.goto_prev({ float = false })\r\n```\r\nrespectively. You should use your own custom mapping if you wish floating window is also opened.",
            "created_at": "2024-05-22T02:52:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/28909#issuecomment-2123773710",
            "id": 2123773710,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28909",
            "node_id": "IC_kwDOAPphoM5-ljcO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2123773710/reactions"
            },
            "updated_at": "2024-05-22T02:53:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2123773710",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28909/comments",
    "created_at": "2024-05-22T02:39:38Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28909/events",
    "html_url": "https://github.com/neovim/neovim/issues/28909",
    "id": 2309451717,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "current behavior is by design, and change is not desired",
            "id": 77997479,
            "name": "closed:wontfix",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28909/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Jp2_F",
    "number": 28909,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28909/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28909/timeline",
    "title": "[d-default behaves differently from explicit mapping",
    "updated_at": "2024-05-22T02:53:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28909",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/61672396?v=4",
        "events_url": "https://api.github.com/users/xudyang1/events{/privacy}",
        "followers_url": "https://api.github.com/users/xudyang1/followers",
        "following_url": "https://api.github.com/users/xudyang1/following{/other_user}",
        "gists_url": "https://api.github.com/users/xudyang1/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/xudyang1",
        "id": 61672396,
        "login": "xudyang1",
        "node_id": "MDQ6VXNlcjYxNjcyMzk2",
        "organizations_url": "https://api.github.com/users/xudyang1/orgs",
        "received_events_url": "https://api.github.com/users/xudyang1/received_events",
        "repos_url": "https://api.github.com/users/xudyang1/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/xudyang1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xudyang1/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/xudyang1"
    }
}