{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Currently when completions are returned from the server Nvim doesn't take into account that there can be `additionalTextEdits` that are part of the `CompletionItem`. The can bee seen in the [spec](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_completion).\r\n\r\n### Steps to reproduce\r\n\r\nTrigger a completion that holds `additionalTextEdits`. For example, here is one from Metals:\r\n\r\n```json\r\n[Trace - 09:52:55 PM] Sending response 'textDocument/completion - (25)'. Processing request took 90ms\r\nResult: {\r\n  \"isIncomplete\": false,\r\n  \"items\": [\r\n    {\r\n      \"label\": \"test\",\r\n      \"kind\": 12,\r\n      \"detail\": \": String\",\r\n      \"preselect\": true,\r\n      \"sortText\": \"00000\",\r\n      \"filterText\": \"\\\"$test \",\r\n      \"insertTextFormat\": 1,\r\n      \"textEdit\": {\r\n        \"range\": {\r\n          \"start\": {\r\n            \"line\": 26,\r\n            \"character\": 12\r\n          },\r\n          \"end\": {\r\n            \"line\": 26,\r\n            \"character\": 16\r\n          }\r\n        },\r\n        \"newText\": \"test\"\r\n      },\r\n      \"additionalTextEdits\": [\r\n        {\r\n          \"range\": {\r\n            \"start\": {\r\n              \"line\": 26,\r\n              \"character\": 10\r\n            },\r\n            \"end\": {\r\n              \"line\": 26,\r\n              \"character\": 10\r\n            }\r\n          },\r\n          \"newText\": \"s\"\r\n        }\r\n      ],\r\n      \"data\": {\r\n        \"symbol\": \"example/Hello.test.\",\r\n        \"target\": \"file:/Users/ckipp/Documents/scala-workspace/metals-minimal-sbt/?id\\u003droot\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nCurrently the `textEdit` is applied, but the `additionalTextEdits` are not.\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Meanwhile, as a workaround you could add a custom `CompleteDone` event with something like this.\r\n\r\n\r\n```\r\nfunction M._CompleteDone()\r\n    local completed_item = api.nvim_get_vvar('completed_item')\r\n    if not completed_item or not completed_item.user_data then\r\n        return\r\n    end\r\n    local lnum, col = unpack(api.nvim_win_get_cursor(0))\r\n    local item = completed_item.user_data.nvim.lsp.completion_item\r\n    local bufnr = api.nvim_get_current_buf()\r\n    if item.additionalTextEdits then\r\n      -- Text edit in the same line would mess with the cursor position\r\n      local edits = vim.tbl_filter(\r\n        function(x) return x.range.start.line ~= (lnum - 1) end,\r\n        item.additionalTextEdits\r\n      )\r\n      vim.lsp.util.apply_text_edits(edits, bufnr)\r\n    end\r\n    ...\r\n\r\n```\r\n",
            "created_at": "2020-05-13T22:03:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/12310#issuecomment-628269290",
            "id": 628269290,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12310",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyODI2OTI5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/628269290/reactions"
            },
            "updated_at": "2020-05-14T07:24:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/628269290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "NONE",
            "body": "> function M._CompleteDone()\r\n>     local completed_item = api.nvim_get_vvar('completed_item')\r\n>     if not completed_item or not completed_item.user_data then\r\n>         return\r\n>     end\r\n>     local lnum, col = unpack(api.nvim_win_get_cursor(0))\r\n>     local item = completed_item.user_data.nvim.lsp.completion_item\r\n>     local bufnr = api.nvim_get_current_buf()\r\n>     if item.additionalTextEdits then\r\n>       -- Text edit in the same line would mess with the cursor position\r\n>       local edits = vim.tbl_filter(\r\n>         function(x) return x.range.start.line ~= (lnum - 1) end,\r\n>         item.additionalTextEdits\r\n>       )\r\n>       vim.lsp.util.apply_text_edits(edits, bufnr)\r\n>     end\r\n>     ...\r\n\r\nIs there a way to identify a snippet and expand it within this function?",
            "created_at": "2023-12-13T15:51:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/12310#issuecomment-1854188170",
            "id": 1854188170,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12310",
            "node_id": "IC_kwDOAPphoM5uhKqK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854188170/reactions"
            },
            "updated_at": "2023-12-13T15:51:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854188170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15314838?v=4",
                "events_url": "https://api.github.com/users/smartinellimarco/events{/privacy}",
                "followers_url": "https://api.github.com/users/smartinellimarco/followers",
                "following_url": "https://api.github.com/users/smartinellimarco/following{/other_user}",
                "gists_url": "https://api.github.com/users/smartinellimarco/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/smartinellimarco",
                "id": 15314838,
                "login": "smartinellimarco",
                "node_id": "MDQ6VXNlcjE1MzE0ODM4",
                "organizations_url": "https://api.github.com/users/smartinellimarco/orgs",
                "received_events_url": "https://api.github.com/users/smartinellimarco/received_events",
                "repos_url": "https://api.github.com/users/smartinellimarco/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/smartinellimarco/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/smartinellimarco/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/smartinellimarco"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Snippet expansion will be handled by Nvim itself.",
            "created_at": "2023-12-13T16:00:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/12310#issuecomment-1854203503",
            "id": 1854203503,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12310",
            "node_id": "IC_kwDOAPphoM5uhOZv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854203503/reactions"
            },
            "updated_at": "2023-12-13T16:00:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854203503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a way to identify a snippet and expand it within this function?\r\n\r\nYes. the `item` has a `insertTextFormat` property. You can compare it with vim.lsp.protocol.InsertTextFormat.Snippet.\r\n\r\nOn 0.10/nightly you could then use vim.snippet.expand, but it requires some more code - e.g. to clean up the already inserted word by the built-in completion handling. \r\n\r\nSee https://github.com/mfussenegger/nvim-lsp-compl/blob/5bde411019084ca30d6ccc194e289b12ffd38773/lua/lsp_compl.lua#L585-L688 for a more complete version.\r\n\r\nAnd as clason mentioned, that will eventually be built-in in some form. See also https://github.com/neovim/neovim/issues/25714 ",
            "created_at": "2023-12-13T16:03:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/12310#issuecomment-1854209602",
            "id": 1854209602,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12310",
            "node_id": "IC_kwDOAPphoM5uhP5C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854209602/reactions"
            },
            "updated_at": "2023-12-13T16:03:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854209602",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12310/comments",
    "created_at": "2020-05-13T20:04:37Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12310/events",
    "html_url": "https://github.com/neovim/neovim/issues/12310",
    "id": 617719473,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12310/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2MTc3MTk0NzM=",
    "number": 12310,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 4,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12310/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12310/timeline",
    "title": "LSP: Support for `additionalTextEdits` in `CompletionItem`",
    "updated_at": "2023-12-13T16:03:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12310",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13974112?v=4",
        "events_url": "https://api.github.com/users/ckipp01/events{/privacy}",
        "followers_url": "https://api.github.com/users/ckipp01/followers",
        "following_url": "https://api.github.com/users/ckipp01/following{/other_user}",
        "gists_url": "https://api.github.com/users/ckipp01/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ckipp01",
        "id": 13974112,
        "login": "ckipp01",
        "node_id": "MDQ6VXNlcjEzOTc0MTEy",
        "organizations_url": "https://api.github.com/users/ckipp01/orgs",
        "received_events_url": "https://api.github.com/users/ckipp01/received_events",
        "repos_url": "https://api.github.com/users/ckipp01/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ckipp01/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ckipp01/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ckipp01"
    }
}