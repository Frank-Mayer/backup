{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nHello neovim team, thanks so much for all your hard work!\r\n\r\nI lost a few hours trying to figure out why my lsp config wasn't being used. Turns out the init callback was throwing an error and neovim did not give any indication. \r\n\r\nI did some digging myself and found the problem. The `on_init` callback is called [here](https://github.com/neovim/neovim/blob/de9348978999aa78f8351b5f55930bb109e742f7/runtime/lua/vim/lsp.lua#L1441). There's a `pcall` and the error is ostensibly passed off to a handler via another `pcall`, but that handler doesn't seem to exist and the return value is dropped.\r\n\r\nUnfortunately, `pcall(nil)` doesn't throw and only returns `false, \"attempt to call a nil value\"`  so both errors are dropped and everyone is none the wiser. ðŸ˜± This is a good reminder that discarding the return of `pcall` is a _very bad_ idea. Too risky!\r\n\r\n\r\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\r\n\r\n```lua\r\nlocal pattern = 'lua'\r\nlocal cmd = {'lua-language-server'}\r\n-- Add files/folders here that indicate the root of a project\r\nlocal root_markers = {'.git', '.editorconfig'}\r\n-- Change to table with settings if required\r\nlocal settings = vim.empty_dict()\r\n\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = pattern,\r\n  callback = function(args)\r\n    local match = vim.fs.find(root_markers, { path = args.file, upward = true })[1]\r\n    local root_dir = match and vim.fn.fnamemodify(match, ':p:h') or nil\r\n    vim.lsp.start({\r\n      name = 'bugged-ls',\r\n      cmd = cmd,\r\n      root_dir = root_dir,\r\n      settings = settings,\r\n      on_init = function ()\r\n        print(\"INIT\")\r\n        error(\"whoops\")\r\n      end,\r\n      on_attach = function ()\r\n        print(\"ATTACH\")\r\n        error(\"my bad\")\r\n      end\r\n    })\r\n  end\r\n})\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nneovim should indicate somehow that an error has occurred during the callback. \r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1203+g0592fd5e-dirty\r\n\r\n### Language server name/version\r\n\r\nlua-language-server 3.7.1\r\n\r\n### Operating system/version\r\n\r\nUbuntu 20\r\n\r\n### Log file\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Falling back to `error()` or a `vim.notify()` if `handlers.on_error` doesn't exist seems reasonable. cc @mfussenegger.",
            "created_at": "2023-09-26T21:04:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/25375#issuecomment-1736300079",
            "id": 1736300079,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25375",
            "node_id": "IC_kwDOAPphoM5nfdYv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736300079/reactions"
            },
            "updated_at": "2023-09-26T21:04:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736300079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't understand why [this line](https://github.com/neovim/neovim/blob/de9348978999aa78f8351b5f55930bb109e742f7/runtime/lua/vim/lsp.lua#L1443) is even using `handlers`, since those are supposed to be indexed by LSP method names. Instead it should be using `config.on_error`.\r\n\r\nI think it would be a good idea to move the implementation of [`dispatch.on_error`](https://github.com/neovim/neovim/blob/de9348978999aa78f8351b5f55930bb109e742f7/runtime/lua/vim/lsp.lua#L1183-L1193) to a separate shared function and use it as the error handler that's used during initialization.",
            "created_at": "2023-09-27T01:09:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/25375#issuecomment-1736512925",
            "id": 1736512925,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25375",
            "node_id": "IC_kwDOAPphoM5ngRWd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736512925/reactions"
            },
            "updated_at": "2023-09-27T01:09:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736512925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "In addition, there a few more places where errors are silently suppressed:\r\n\r\n(on_init): https://github.com/neovim/neovim/blob/de9348978999aa78f8351b5f55930bb109e742f7/runtime/lua/vim/lsp.lua#L1440-L1445\r\n(on_attach):\r\nhttps://github.com/neovim/neovim/blob/de9348978999aa78f8351b5f55930bb109e742f7/runtime/lua/vim/lsp.lua#L1716-L1719\r\n\r\nbefore_init: https://github.com/neovim/neovim/blob/de9348978999aa78f8351b5f55930bb109e742f7/runtime/lua/vim/lsp.lua#L1394-L1395\r\non_exit: https://github.com/neovim/neovim/blob/de9348978999aa78f8351b5f55930bb109e742f7/runtime/lua/vim/lsp.lua#L1223\r\n\r\nWe could have default error handlers (like a xpcall) which can show more stacktrace information via `vim.notify`.",
            "created_at": "2023-09-27T01:42:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/25375#issuecomment-1736539224",
            "id": 1736539224,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25375",
            "node_id": "IC_kwDOAPphoM5ngXxY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736539224/reactions"
            },
            "updated_at": "2023-09-27T01:44:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736539224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@wookayin right, but do note that all the places you linked make use of handlers provided by `config`, and hence I think that if the user _really_ wants to catch/handle all errors, they can just provide them in the configuration. Hence I believe this issue is more about what a reasonable default error handler should be, since the default silent one doesn't seem appropriate (?).",
            "created_at": "2023-09-27T02:20:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/25375#issuecomment-1736568371",
            "id": 1736568371,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25375",
            "node_id": "IC_kwDOAPphoM5nge4z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736568371/reactions"
            },
            "updated_at": "2023-09-27T02:20:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736568371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "NONE",
            "body": "[Many examples](https://www.google.com/search?q=%22local+path+%3D+client.workspace_folders%5B1%5D.name%22&rlz=1C1RXQR_enUS939US939&oq=%22local+path+%3D+client.workspace_folders%5B1%5D.name%22&aqs=chrome..69i57j33i160l5j33i299l2.703j0j7&sourceid=chrome&ie=UTF-8) of recommended lsp configs I've found online, particular from `lsp-config`,  look something like this:\r\n\r\n```lua\r\nrequire('lspconfig')[\"...\"].setup {\r\n  on_init = function(client)\r\n    local path = client.workspace_folders[1].name\r\n    -- ...\r\n    -- merge settings into config and notify server\r\n  end\r\n}\r\n```\r\n\r\nBut `client.workspace_folders` is not defined if `root_dir` isn't defined! Indexing nil throws an error, which is promptly swallowed! People trying to set up neovim with their language servers will be copy-pasting these recommended configs and they're not going to work and they will have no idea why. It will work fine with more matured configs and the minimal repro template so you guys will be left totally confused why people keep saying it doesn't work. Then people will look to blame the language servers and waste their time. I can't speak for everyone, but neovim discarding errors from a user provided callback was the last thing I expected. \r\n\r\nHere is some of the relevant logic:\r\nhttps://github.com/neovim/neovim/blob/bfdec5b0e71991ebc0a8ad7c12d39f7a9cc56f07/runtime/lua/vim/lsp.lua#L1339-L1359\r\n\r\nhttps://github.com/neovim/neovim/blob/bfdec5b0e71991ebc0a8ad7c12d39f7a9cc56f07/runtime/lua/vim/lsp.lua#L1424\r\n\r\nIt doesn't seem like a default `workspace_folders` definition was intended. Neither it nor `root_dir` is checked in the [config validation](https://github.com/neovim/neovim/blob/a66b0fdfaa35715c832b98b8941cc5673505e0c2/runtime/lua/vim/lsp.lua#L260C27-L260C27). `lsp-config` defines `root_dir` on all of their default configs, which explains the assumption that `workspace_folders` is defined, but for some reason, it appears to go missing by the time the config reaches `start_client`. If I define `workspace_folders` in `setup`, that goes missing too. I assume this is happening on `lsp-config`'s end, but I went back several months of commits, and it seems to be the same story. I'm skeptical that this has gone unnoticed for so long so I feel like I am missing something, but I don't have time to dig any further right now.  \r\n",
            "created_at": "2023-09-27T19:11:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/25375#issuecomment-1737940043",
            "id": 1737940043,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25375",
            "node_id": "IC_kwDOAPphoM5nltxL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1737940043/reactions"
            },
            "updated_at": "2023-09-27T19:25:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1737940043",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2105352?v=4",
                "events_url": "https://api.github.com/users/A-Babin/events{/privacy}",
                "followers_url": "https://api.github.com/users/A-Babin/followers",
                "following_url": "https://api.github.com/users/A-Babin/following{/other_user}",
                "gists_url": "https://api.github.com/users/A-Babin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/A-Babin",
                "id": 2105352,
                "login": "A-Babin",
                "node_id": "MDQ6VXNlcjIxMDUzNTI=",
                "organizations_url": "https://api.github.com/users/A-Babin/orgs",
                "received_events_url": "https://api.github.com/users/A-Babin/received_events",
                "repos_url": "https://api.github.com/users/A-Babin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/A-Babin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/A-Babin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/A-Babin"
            }
        },
        {
            "author_association": "NONE",
            "body": "I reproduced the issue with the missing `root_dir`/`workspace_folders` on a new VM and minimal setup with `lsp-config`, confirming that this affects fresh installs. \r\n\r\nI found that `lsp-config` [does indeed](https://github.com/neovim/nvim-lspconfig/blob/68b23c06132cb1ef8d5690111c112388fbcf1c30/lua/lspconfig/manager.lua#L145-L157) remove `workspace_folders` and `root_dir` _in single file mode_.  That code was [committed](https://github.com/neovim/nvim-lspconfig/commit/204f08ea407e4b3b7ad272287e1821f47e52d4b3) a month ago, whereas they [previously](https://github.com/neovim/nvim-lspconfig/commit/204f08ea407e4b3b7ad272287e1821f47e52d4b3#diff-9e30880c16142e9d50a64563fd1260aa9f851b782dd74678163e151b93878568L302) provided a default `workspace_folders`. EDIT: I was wrong. It was [the same ](https://github.com/neovim/nvim-lspconfig/commit/204f08ea407e4b3b7ad272287e1821f47e52d4b3#diff-9e30880c16142e9d50a64563fd1260aa9f851b782dd74678163e151b93878568L341-L344)before. \r\n\r\nThat's clearly intentional so I see no real problem there. The issue at hand remains the discarding `pcall`s. I found some in `lsp-config` as well, also on user provided callbacks. \r\n\r\nCan anyone explain to what reasons people might have for doing this? It's equivalent to empty catch blocks in languages with try/catch. If you used it on something you wrote and you knew exactly what errors it might throw, I could understand, but on user code? Async? In a dynamic scripting language? Forget \"code smell\" -- that's sabotage.  I wouldn't even do it on my own throwaway code because I guarantee I'd forget and it'd eventually ruin my day.  ",
            "created_at": "2023-09-28T18:19:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/25375#issuecomment-1739804000",
            "id": 1739804000,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25375",
            "node_id": "IC_kwDOAPphoM5ns01g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1739804000/reactions"
            },
            "updated_at": "2023-09-28T19:55:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1739804000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2105352?v=4",
                "events_url": "https://api.github.com/users/A-Babin/events{/privacy}",
                "followers_url": "https://api.github.com/users/A-Babin/followers",
                "following_url": "https://api.github.com/users/A-Babin/following{/other_user}",
                "gists_url": "https://api.github.com/users/A-Babin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/A-Babin",
                "id": 2105352,
                "login": "A-Babin",
                "node_id": "MDQ6VXNlcjIxMDUzNTI=",
                "organizations_url": "https://api.github.com/users/A-Babin/orgs",
                "received_events_url": "https://api.github.com/users/A-Babin/received_events",
                "repos_url": "https://api.github.com/users/A-Babin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/A-Babin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/A-Babin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/A-Babin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@A-Babin IMO we should continue the specific issue you're describing on a new issue filed in [`nvim-lspconfig`](https://github.com/neovim/nvim-lspconfig), and leave this thread for better error handling during LSP initialization.\r\n\r\nI plan on preparing a PR for it soon.",
            "created_at": "2023-09-28T18:26:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/25375#issuecomment-1739813475",
            "id": 1739813475,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25375",
            "node_id": "IC_kwDOAPphoM5ns3Jj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1739813475/reactions"
            },
            "updated_at": "2023-09-28T18:26:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1739813475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "NONE",
            "body": "https://github.com/neovim/nvim-lspconfig/issues/2835\r\n\r\n@MariaSolOs Thank you for taking care of it. ",
            "created_at": "2023-09-28T20:40:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/25375#issuecomment-1739973812",
            "id": 1739973812,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25375",
            "node_id": "IC_kwDOAPphoM5nteS0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1739973812/reactions"
            },
            "updated_at": "2023-09-28T20:40:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1739973812",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2105352?v=4",
                "events_url": "https://api.github.com/users/A-Babin/events{/privacy}",
                "followers_url": "https://api.github.com/users/A-Babin/followers",
                "following_url": "https://api.github.com/users/A-Babin/following{/other_user}",
                "gists_url": "https://api.github.com/users/A-Babin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/A-Babin",
                "id": 2105352,
                "login": "A-Babin",
                "node_id": "MDQ6VXNlcjIxMDUzNTI=",
                "organizations_url": "https://api.github.com/users/A-Babin/orgs",
                "received_events_url": "https://api.github.com/users/A-Babin/received_events",
                "repos_url": "https://api.github.com/users/A-Babin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/A-Babin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/A-Babin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/A-Babin"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25375/comments",
    "created_at": "2023-09-26T20:24:51Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25375/events",
    "html_url": "https://github.com/neovim/neovim/issues/25375",
    "id": 1914246425,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25375/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5yGRUZ",
    "number": 25375,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25375/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25375/timeline",
    "title": "Errors in `on_init` and `on_attach` callbacks are not being reported to the user",
    "updated_at": "2023-09-28T20:40:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25375",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2105352?v=4",
        "events_url": "https://api.github.com/users/A-Babin/events{/privacy}",
        "followers_url": "https://api.github.com/users/A-Babin/followers",
        "following_url": "https://api.github.com/users/A-Babin/following{/other_user}",
        "gists_url": "https://api.github.com/users/A-Babin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/A-Babin",
        "id": 2105352,
        "login": "A-Babin",
        "node_id": "MDQ6VXNlcjIxMDUzNTI=",
        "organizations_url": "https://api.github.com/users/A-Babin/orgs",
        "received_events_url": "https://api.github.com/users/A-Babin/received_events",
        "repos_url": "https://api.github.com/users/A-Babin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/A-Babin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/A-Babin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/A-Babin"
    }
}