{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Currently the only command actually supporting `[range]` is `luado`, but documentation (copied from Vim) states that `:lua` and `:luafile` also should, by storing the range in `vim.firstline` and `vim.lastline`. In the current state other commands ignore range completely.\r\n\r\nRegarding the implementation I currently more like the idea of adding a metatable to `vim` “module” which will do the following two things:\r\n\r\n1. Make `vim` module read-only.\r\n2. Provide firstline and lastline.\r\n\r\nThis would protect vim module from accidental changes (and similar metatable is to be applied to `vim.types` and `vim.api`; “similar” = “read-only, but no `*line`”). It would still be not impossible to modify our tables, metatable can only protect from some accidental modifications.",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "# Status\r\n\r\n- [#27167](https://github.com/neovim/neovim/pull/27167) implements `:{range}lua` so that Lua snippets can be executed by selecting it.\r\n    - ~~So `vim.firstline`, `vim.lastline` don't make sense (and are out of scope) for `:lua`.~~.\r\n- `vim.firstline`, `vim.lastline` still would be useful for `:luado`, `:luafile`, and `:{range}lua {code}` (see [here](https://github.com/neovim/neovim/issues/27234#issuecomment-1920555978)).",
            "created_at": "2024-01-27T00:43:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-1912875841",
            "id": 1912875841,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM5yBCtB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1912875841/reactions"
            },
            "updated_at": "2024-02-08T20:41:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1912875841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Surprised there's not a way to do this in vimscript already.\r\n\r\nMy instinct would be to add something like `vim.fn.line('r0')` and `vim.fn.line('r$')`.",
            "created_at": "2024-09-04T10:13:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2328461635",
            "id": 2328461635,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6KyYFD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328461635/reactions"
            },
            "updated_at": "2024-09-04T10:13:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328461635",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Surprised there's not a way to do this in vimscript already.\r\n> \r\n> My instinct would be to add something like `vim.fn.line('r0')` and `vim.fn.line('r$')`.\r\n\r\nThis doesn't not make sense for Vim script as every line in a Vim script is an Ex command, so if `line()` is called in Vim script it's called in an Ex command. Instead there are `a:firstline` and `a:lastline` for user functions or `<line1>` and `<line2>` for user commands.",
            "created_at": "2024-09-04T14:38:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2329249721",
            "id": 2329249721,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6K1Ye5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329249721/reactions"
            },
            "updated_at": "2024-09-04T14:44:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329249721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This doesn't not make sense for Vim script as every line in a Vim script is an Ex command, so if line() is called in Vim script it's called in an Ex command.\r\n\r\n`vim.fn.line()` does not invoke any ex command.",
            "created_at": "2024-09-04T14:54:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2329287910",
            "id": 2329287910,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6K1hzm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329287910/reactions"
            },
            "updated_at": "2024-09-04T14:54:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329287910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > This doesn't not make sense for Vim script as every line in a Vim script is an Ex command, so if line() is called in Vim script it's called in an Ex command.\r\n> \r\n> `vim.fn.line()` does not invoke any ex command.\r\n\r\nYes, then what is the point of having to go through typval conversion for something that doesn't really apply to Vim script?",
            "created_at": "2024-09-04T15:00:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2329302879",
            "id": 2329302879,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6K1ldf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329302879/reactions"
            },
            "updated_at": "2024-09-04T15:00:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329302879",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Because it's a standard interface that people are familiar with and the typval conversion isn't really an issue with those kind of functions.\r\n\r\nI wouldn't be against adding `vim.line()` and `vim.getpos()` though.",
            "created_at": "2024-09-04T15:49:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2329427888",
            "id": 2329427888,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6K2D-w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329427888/reactions"
            },
            "updated_at": "2024-09-04T15:49:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329427888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just realised this is only for the `:lua` command which is quite a limited scope. Maybe we can just set `firstline` and `lastline` as locals to the code block. E.g. running a `:lua <code>` would be equivalent to:\r\n\r\n```lua\r\n:lua (function(firstline, lastline) <code> end)()\r\n```",
            "created_at": "2024-09-25T15:28:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2374419139",
            "id": 2374419139,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6NhsLD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374419139/reactions"
            },
            "updated_at": "2024-09-25T15:28:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374419139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> set `firstline` and `lastline` as locals to the code block\r\n\r\nWhat are the downsides of using the same `vim.firstline`/`vim.lastline` names? Advantage is that we avoid some unnecessary differences. The scope can still be limited to :lua.",
            "created_at": "2024-09-25T16:13:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2374530294",
            "id": 2374530294,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6NiHT2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374530294/reactions"
            },
            "updated_at": "2024-09-25T21:51:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374530294",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Advantage is that we avoid some unnecessary differences.\r\n\r\nWhat differences?\r\n\r\nDoing dynamic stuff in `vim.*` like this feels weird, and breaks the model that `vim.*` is an entry point into the API.\r\n\r\nAnd tbh, is this something we even need to do? And value of `:lua` is significantly reduced compared to the past. If someone really wants `firstline` and `lastline`, then can create a command via `nvim_create_user_command` and use that, and that will further give them all the invocation metadata available to ex commands.",
            "created_at": "2024-09-25T16:24:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2374552419",
            "id": 2374552419,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6NiMtj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374552419/reactions"
            },
            "updated_at": "2024-09-25T16:24:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374552419",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What differences?\r\n\r\nThe names\r\n\r\n> Doing dynamic stuff in `vim.*` like this feels weird\r\n\r\nAgreed, but it has a very limited scope as you mentioned.\r\n\r\n> value of `:lua` is significantly reduced compared to the past\r\n\r\nI use it all the time, it's a great way to run code from help files (and we should do that for more kinds of code). \r\n\r\n> create a command via `nvim_create_user_command` and use\r\n\r\nI haven't missed firstline/lastline much, but that might be because I am used to `:global`. But the idea is to have a Lua alternative to :global and substitute.\r\n\r\nThis is an easy feature to add and if it introduces new use-cases for using Lua interactively, that's good. Same reason we added `:=` and `:lua =`, even though those could be achieved with custom commands.",
            "created_at": "2024-09-25T16:45:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2374611547",
            "id": 2374611547,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6NibJb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374611547/reactions"
            },
            "updated_at": "2024-09-25T16:47:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374611547",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The names\n\nHmm you might have misunderstood my suggestion. I meant we literally set the local names `firstline` and `lastline` within the luachunk, not as positional arguments. They can be accessed as upvals and can only be accessed via that chunk.\n\nIf we add `vim.firstline` then every function within the call tree of the chunk can access it.",
            "created_at": "2024-09-25T16:55:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2374633344",
            "id": 2374633344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6NigeA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374633344/reactions"
            },
            "updated_at": "2024-09-25T16:56:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374633344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If we're changing stuff, instead of multiple magic local names, WDYT about a single `ev` magic local which may contain other fields? Also could help with code completion (`ev.<tab>`).",
            "created_at": "2024-09-25T22:11:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/7177#issuecomment-2375356903",
            "id": 2375356903,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7177",
            "node_id": "IC_kwDOAPphoM6NlRHn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2375356903/reactions"
            },
            "updated_at": "2024-09-25T22:11:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2375356903",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/7177/comments",
    "created_at": "2017-08-16T22:03:45Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/7177/events",
    "html_url": "https://github.com/neovim/neovim/issues/7177",
    "id": 250773566,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "compatibility with Vim or older Neovim",
            "id": 109899712,
            "name": "compatibility",
            "node_id": "MDU6TGFiZWwxMDk4OTk3MTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/compatibility"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, self-contained. Do NOT ask \"can I work on this\", just read CONTRIBUTING.md",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/7177/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 649,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 589,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-09-30T17:10:20Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUyNTA3NzM1NjY=",
    "number": 7177,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/7177/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/7177/timeline",
    "title": "Lua: vim.firstline, vim.lastline",
    "updated_at": "2024-09-25T22:11:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/7177",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
        "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
        "followers_url": "https://api.github.com/users/ZyX-I/followers",
        "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
        "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ZyX-I",
        "id": 322097,
        "login": "ZyX-I",
        "node_id": "MDQ6VXNlcjMyMjA5Nw==",
        "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
        "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
        "repos_url": "https://api.github.com/users/ZyX-I/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ZyX-I"
    }
}