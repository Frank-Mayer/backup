{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nAfter https://github.com/neovim/neovim/pull/22634 we now have an easy way to get an option for a filetype. This got me wishing for an opposite which may set a default option for a filetype.\r\n\r\nI have always found setting an option for a specific filetype a bit annoying. One would either have to create a separate file in `after/ftplugin/<ft>.lua,  or create an autocmd like:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n    pattern = \"<ft>\",\r\n    callback = function()\r\n        -- Options here\r\n    end,\r\n}\r\n```\r\n\r\nCreating a separate file just for one line is a bit annoying, and especially when setting options for multiple files. Setting one option for 10 filetypes results in 10 files only containing one line each.\r\n\r\nI don't find the second option using an autocmd on `FileType` much better in this case. While it removes the need for a lot of extra files, it will look very verbose.\n\n### Expected behavior\n\nI am proposing to add a new method on `vim.filetype` which serves the opposite purpose of `vim.filetype.get_option`.\r\n\r\nI propose the following API which takes inspiration from `vim.api.nvim_buf_set_option` and `vim.api.nvim_buf_get_option`\r\n```lua\r\n---@param ft string\r\n---@param name string\r\n---@value any\r\nfunction vim.filetype.set_option(ft, name, value)\r\n\r\n-- Setting commentstring in C\r\nvim.filetype.set_option(\"c\", \"commentstring\", \"// %s\")\r\n```\r\n\r\nAs one may want to set the same option on several filetypes, the first argument could be a table with filetypes like:\r\n\r\n```lua\r\n---@param ft string | string[]\r\n---@param name string\r\n---@value any\r\nfunction vim.filetype.set_option(ft, name, value)\r\n\r\n-- Setting commentstring in both C and C#\r\nvim.filetype.set_option({ \"c\", \"cs\" }, \"commentstring\", \"// %s\")\r\n```\r\n\r\nThis would remove the need to create a separate file just for setting a single option, or using autocmds which may be verbose when setting different options for multiple different filetypes",
    "closed_at": "2023-03-25T10:01:25Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I don't find the second option using an autocmd on FileType much better in this case. While it removes the need for a lot of extra files, it will look very verbose.\r\n\r\nWhile I understand the desire here, that is just not enough justification for adding a new API. The two existing methods are reasonable, effective, and above all battle tested. (And both natively support Lua, to boot.) The situation for get_option was fundamentally different as it implemented a functionality that was simply not possible before.\r\n\r\n(Your suggestion also omits a crucial point: how it would interact with existing methods that will have to stay supported.)",
            "created_at": "2023-03-23T19:48:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/22768#issuecomment-1481800899",
            "id": 1481800899,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22768",
            "node_id": "IC_kwDOAPphoM5YUnzD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1481800899/reactions"
            },
            "updated_at": "2023-03-23T19:50:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1481800899",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> While I understand the desire here, that is just not enough justification for adding a new API. The two existing methods are reasonable, effective, and above all battle tested. (And both natively support Lua, to boot.) \r\n\r\n(I say this while considering picking up the ticket and doing so myself) Would it be objectionable if said filetype method was fundamentally an alias for adding the autocmd? That both satisfies the request and keeps the functionality in the 'reasonable, effective, and above all battle tested' realm\r\n\r\nI like the suggestion myself from a design parity place; users understand that things like 'get' and 'set' come in pairs; it feels strange to have one and not it's complement",
            "created_at": "2023-03-23T21:58:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/22768#issuecomment-1481967963",
            "id": 1481967963,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22768",
            "node_id": "IC_kwDOAPphoM5YVQlb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1481967963/reactions"
            },
            "updated_at": "2023-03-23T21:59:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1481967963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6333434?v=4",
                "events_url": "https://api.github.com/users/to-json/events{/privacy}",
                "followers_url": "https://api.github.com/users/to-json/followers",
                "following_url": "https://api.github.com/users/to-json/following{/other_user}",
                "gists_url": "https://api.github.com/users/to-json/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/to-json",
                "id": 6333434,
                "login": "to-json",
                "node_id": "MDQ6VXNlcjYzMzM0MzQ=",
                "organizations_url": "https://api.github.com/users/to-json/orgs",
                "received_events_url": "https://api.github.com/users/to-json/received_events",
                "repos_url": "https://api.github.com/users/to-json/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/to-json/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/to-json/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/to-json",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  Would it be objectionable if said filetype method was fundamentally an alias for adding the autocmd?\r\n\r\nI would say so, yes. This would add API surface and documentation for very little gain.",
            "created_at": "2023-03-23T22:02:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/22768#issuecomment-1481972609",
            "id": 1481972609,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22768",
            "node_id": "IC_kwDOAPphoM5YVRuB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1481972609/reactions"
            },
            "updated_at": "2023-03-23T22:02:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1481972609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "You're a long standing contributor and I'm a newb so I trust your judgement, but please send a ping if it's decided that this is worth doing, I would enjoy to implement it \r\n\r\nunrelated: it's not exactly the place for it, but if you have a ticket that you'd aim a new contributor at, I'd take that too; I just derive too much value from nvim not to try to do something here, but i never hit edge cases myself in it",
            "created_at": "2023-03-23T22:10:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/22768#issuecomment-1481980587",
            "id": 1481980587,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22768",
            "node_id": "IC_kwDOAPphoM5YVTqr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1481980587/reactions"
            },
            "updated_at": "2023-03-23T22:10:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1481980587",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6333434?v=4",
                "events_url": "https://api.github.com/users/to-json/events{/privacy}",
                "followers_url": "https://api.github.com/users/to-json/followers",
                "following_url": "https://api.github.com/users/to-json/following{/other_user}",
                "gists_url": "https://api.github.com/users/to-json/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/to-json",
                "id": 6333434,
                "login": "to-json",
                "node_id": "MDQ6VXNlcjYzMzM0MzQ=",
                "organizations_url": "https://api.github.com/users/to-json/orgs",
                "received_events_url": "https://api.github.com/users/to-json/received_events",
                "repos_url": "https://api.github.com/users/to-json/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/to-json/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/to-json/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/to-json",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I know Vimscript is old fashioned and everyone wants to use Lua for everything now, but a benefit of it being a DSL is that these kinds of configurations do not suffer from the verbosity problem that Lua has:\r\n\r\n```vim\r\nautocmd FileType foo setlocal shiftwidth=4 expandtab commentstring=//%s\r\n```\r\n\r\nYou can set multiple options for a filetype with a single line. If multiple filetypes share options, you can combine the filetypes in the pattern. Vimscript was (literally) made for this. \r\n\r\nIMO adding a new API just to avoid using Vimscript is not sufficient justification. ",
            "created_at": "2023-03-24T01:27:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/22768#issuecomment-1482126706",
            "id": 1482126706,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22768",
            "node_id": "IC_kwDOAPphoM5YV3Vy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1482126706/reactions"
            },
            "updated_at": "2023-03-24T01:28:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1482126706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "And if you want to do it in Lua, why not just add it as a function to your config:\r\n\r\n```lua\r\nlocal function set_ft_option(ft, option, value)\r\n  vim.api.nvim_create_autocmd(\"FileType\", {\r\n    pattern = ft,\r\n    group = vim.api.nvim_create_augroup('FtOptions', {}),\r\n    desc = ('set option \"%s\" to \"%s\" for this filetype'):format(option, value),\r\n    callback = function()\r\n      vim.opt_local[option] = value\r\n    end\r\n  })\r\nend\r\n\r\n\r\nset_ft_option({'c', 'c++'}, 'commentstring', '# %s')\r\n```",
            "created_at": "2023-03-24T12:52:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/22768#issuecomment-1482750463",
            "id": 1482750463,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22768",
            "node_id": "IC_kwDOAPphoM5YYPn_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1482750463/reactions"
            },
            "updated_at": "2023-03-24T12:57:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1482750463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23235841?v=4",
                "events_url": "https://api.github.com/users/yochem/events{/privacy}",
                "followers_url": "https://api.github.com/users/yochem/followers",
                "following_url": "https://api.github.com/users/yochem/following{/other_user}",
                "gists_url": "https://api.github.com/users/yochem/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/yochem",
                "id": 23235841,
                "login": "yochem",
                "node_id": "MDQ6VXNlcjIzMjM1ODQx",
                "organizations_url": "https://api.github.com/users/yochem/orgs",
                "received_events_url": "https://api.github.com/users/yochem/received_events",
                "repos_url": "https://api.github.com/users/yochem/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/yochem/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/yochem/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/yochem",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If creating an event handler is too verbose, let's find a way to fix that rather than adding special-purpose functions. Related: https://github.com/neovim/neovim/issues/19156",
            "created_at": "2023-03-25T10:01:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/22768#issuecomment-1483783431",
            "id": 1483783431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22768",
            "node_id": "IC_kwDOAPphoM5YcL0H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1483783431/reactions"
            },
            "updated_at": "2023-03-25T10:01:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1483783431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/22768/comments",
    "created_at": "2023-03-23T19:43:00Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/22768/events",
    "html_url": "https://github.com/neovim/neovim/issues/22768",
    "id": 1638189242,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filetype detection, filetype.lua",
            "id": 3708202139,
            "name": "filetype",
            "node_id": "LA_kwDOAPphoM7dBqyb",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filetype"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/22768/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5hpMi6",
    "number": 22768,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/22768/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/22768/timeline",
    "title": "Add `vim.filetype.set_option`",
    "updated_at": "2024-11-14T00:22:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/22768",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5160701?v=4",
        "events_url": "https://api.github.com/users/seblj/events{/privacy}",
        "followers_url": "https://api.github.com/users/seblj/followers",
        "following_url": "https://api.github.com/users/seblj/following{/other_user}",
        "gists_url": "https://api.github.com/users/seblj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seblj",
        "id": 5160701,
        "login": "seblj",
        "node_id": "MDQ6VXNlcjUxNjA3MDE=",
        "organizations_url": "https://api.github.com/users/seblj/orgs",
        "received_events_url": "https://api.github.com/users/seblj/received_events",
        "repos_url": "https://api.github.com/users/seblj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seblj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seblj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seblj",
        "user_view_type": "public"
    }
}