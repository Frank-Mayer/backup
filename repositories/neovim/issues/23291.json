{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nNoticed this because I have some huge directories in one of my repos for testing, which probably isn't very common. Excluding files not in the patterns sent by the LSP server could possibly help. Rust-analyzer sends `root_dir/**/*.rs`, `root_dir/**/Cargo.toml`, `root_dir/**/Cargo.lock`.\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\nsteps:\r\n```sh\r\ncargo new repro --bin && cd repro\r\nmkdir test && printf '%s\\n' test/{0..60000} | xargs touch\r\nnvim -u init.lua src/main.rs\r\n```\r\n\r\ninit.lua:\r\n```lua\r\nlocal pattern = 'rust'\r\nlocal cmd = {'rust-analyzer'}\r\nlocal root_markers = {'Cargo.toml'}\r\nlocal settings = vim.empty_dict()\r\nlocal capabilities = vim.lsp.protocol.make_client_capabilities()\r\n-- uncommenting this solves the stutter\r\n--capabilities.workspace.didChangeWatchedFiles.dynamicRegistration = false\r\nvim.api.nvim_create_autocmd('FileType', {\r\n\tpattern = pattern,\r\n\tcallback = function(args)\r\n\t\tlocal match = vim.fs.find(root_markers, { path = args.file, upward = true })[1]\r\n\t\tlocal root_dir = match and vim.fn.fnamemodify(match, ':p:h') or nil\r\n\t\tvim.lsp.start({\r\n\t\t\tname = 'rust-analyzer',\r\n\t\t\tcmd = cmd,\r\n\t\t\troot_dir = root_dir,\r\n\t\t\tsettings = settings,\r\n\t\t\tcapabilities = capabilities,\r\n\t\t})\r\n\tend\r\n})\r\n```\r\n\n\n### Expected behavior\n\n_No response_\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0-dev-169+ge3f36377c\n\n### Language server name/version\n\nrust-analyzer 1.69.0 (84c898d 2023-04-16)\n\n### Operating system/version\n\narch linux\n\n### Log file\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I am also seeing the same issue with ccls server. The code base I work with huge and neovim is stuck for ever. \r\n\r\nAssigning capabilities.workspace.didChangeWatchedFiles.dynamicRegistration to false helped.",
            "created_at": "2023-04-26T09:23:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1523081719",
            "id": 1523081719,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5ayGH3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1523081719/reactions"
            },
            "updated_at": "2023-04-26T13:32:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1523081719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22386546?v=4",
                "events_url": "https://api.github.com/users/jbarik/events{/privacy}",
                "followers_url": "https://api.github.com/users/jbarik/followers",
                "following_url": "https://api.github.com/users/jbarik/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbarik/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jbarik",
                "id": 22386546,
                "login": "jbarik",
                "node_id": "MDQ6VXNlcjIyMzg2NTQ2",
                "organizations_url": "https://api.github.com/users/jbarik/orgs",
                "received_events_url": "https://api.github.com/users/jbarik/received_events",
                "repos_url": "https://api.github.com/users/jbarik/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jbarik/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbarik/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jbarik"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am currently observing similar issues. I was able to track it down to pyright freezing up on startup and afterwards in a somewhat large codebase.\r\nI bisected the issue down to this change https://github.com/neovim/neovim/pull/23190\r\n\r\nThe fix for me was in the LSP setups to do the following:\r\n```lua\r\nlocal lsp = require \"lspconfig\"\r\nlocal coq = require \"coq\"\r\n\r\nlocal coq_capabilities = coq.lsp_ensure_capabilities(vim.lsp.protocol.make_client_capabilities())\r\ncoq_capabilities.capabilities.workspace.didChangeWatchedFiles.dynamicRegistration = false\r\nlsp.pyright.setup(coq_capabilities)\r\n```\r\n\r\nIf you are not using `coq_nvim` then this might work for you:\r\n```lua\r\nlocal lsp = require \"lspconfig\"\r\nlocal coq = require \"coq\"\r\n\r\n\r\nlocal capabilities = vim.lsp.protocol.make_client_capabilities()\r\ncapabilities.workspace.didChangeWatchedFiles.dynamicRegistration = false\r\nlsp.pyright.setup(coq_capabilities)\r\n\r\n```",
            "created_at": "2023-04-26T11:13:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1523243069",
            "id": 1523243069,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5aytg9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1523243069/reactions"
            },
            "updated_at": "2023-04-26T13:32:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1523243069",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2808092?v=4",
                "events_url": "https://api.github.com/users/vkaracic/events{/privacy}",
                "followers_url": "https://api.github.com/users/vkaracic/followers",
                "following_url": "https://api.github.com/users/vkaracic/following{/other_user}",
                "gists_url": "https://api.github.com/users/vkaracic/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vkaracic",
                "id": 2808092,
                "login": "vkaracic",
                "node_id": "MDQ6VXNlcjI4MDgwOTI=",
                "organizations_url": "https://api.github.com/users/vkaracic/orgs",
                "received_events_url": "https://api.github.com/users/vkaracic/received_events",
                "repos_url": "https://api.github.com/users/vkaracic/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vkaracic/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vkaracic/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vkaracic"
            }
        },
        {
            "author_association": "NONE",
            "body": "This seems to be caused by Neovim using polling instead of inotify to monitor requested directories.",
            "created_at": "2023-05-03T13:56:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1533075584",
            "id": 1533075584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5bYOCA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1533075584/reactions"
            },
            "updated_at": "2023-05-03T13:56:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1533075584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13090277?v=4",
                "events_url": "https://api.github.com/users/vlada-dudr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vlada-dudr/followers",
                "following_url": "https://api.github.com/users/vlada-dudr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vlada-dudr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vlada-dudr",
                "id": 13090277,
                "login": "vlada-dudr",
                "node_id": "MDQ6VXNlcjEzMDkwMjc3",
                "organizations_url": "https://api.github.com/users/vlada-dudr/orgs",
                "received_events_url": "https://api.github.com/users/vlada-dudr/received_events",
                "repos_url": "https://api.github.com/users/vlada-dudr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vlada-dudr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vlada-dudr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vlada-dudr"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think there's always going to be some upper bound on project size where the file watcher will slow things down to the point it's worth disabling entirely. But of course we should make that upper bound as high as we can.\r\n\r\nFor context, the polling mechanism is used for Linux because inotify doesn't watch recursively, and libuv doesn't set up the inotify handles in a way that makes it practical (that I've found) to structure those recursively ourselves. Node.js `fs.watch` also uses libuv polling on Linux for recursive watches. I think the ideal scenario here would involve leveraging a yet-to-exist kernel-level recursive file watcher for Linux like libuv does already for macOS and Windows.\r\n\r\n@lucy You're right that filtering these files out would probably help. Right now all of that filtering is done in the LSP client after the poller is already set up, but some of that could be done earlier and lighten the load on libuv. For your example with a huge directory of files not watched by the LSP it would probably make a decent difference. I'll try that to see.\r\n\r\ncc @mfussenegger ",
            "created_at": "2023-05-06T01:38:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1536968751",
            "id": 1536968751,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5bnEgv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1536968751/reactions"
            },
            "updated_at": "2023-05-06T01:38:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1536968751",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I can repro with that example and see the same high CPU and stuttering. I threw in a dirty hack to skip creating a poller for all those files the LSP client should ignore anyway and that made things way better. I'll work on a proper fix.",
            "created_at": "2023-05-06T03:22:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1537031285",
            "id": 1537031285,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5bnTx1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537031285/reactions"
            },
            "updated_at": "2023-05-06T03:22:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1537031285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
                "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
                "followers_url": "https://api.github.com/users/nojnhuh/followers",
                "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
                "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nojnhuh",
                "id": 16093815,
                "login": "nojnhuh",
                "node_id": "MDQ6VXNlcjE2MDkzODE1",
                "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
                "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
                "repos_url": "https://api.github.com/users/nojnhuh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nojnhuh"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> would involve leveraging a yet-to-exist kernel-level recursive file watcher for Linux\r\n\r\nThere is a `fanotify` in recent kernels (most features in 5.1, but some only in 5.9). It can watch for events from the entire filesystem. libuv probably doesn't support it, so it doesn't help here. Maybe it will in the future.",
            "created_at": "2023-05-11T11:38:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1543837963",
            "id": 1543837963,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5cBRkL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543837963/reactions"
            },
            "updated_at": "2023-05-11T11:38:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543837963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1353637?v=4",
                "events_url": "https://api.github.com/users/stasjok/events{/privacy}",
                "followers_url": "https://api.github.com/users/stasjok/followers",
                "following_url": "https://api.github.com/users/stasjok/following{/other_user}",
                "gists_url": "https://api.github.com/users/stasjok/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stasjok",
                "id": 1353637,
                "login": "stasjok",
                "node_id": "MDQ6VXNlcjEzNTM2Mzc=",
                "organizations_url": "https://api.github.com/users/stasjok/orgs",
                "received_events_url": "https://api.github.com/users/stasjok/received_events",
                "repos_url": "https://api.github.com/users/stasjok/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stasjok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stasjok/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stasjok"
            }
        },
        {
            "author_association": "NONE",
            "body": "It won't help either. You need CAP_SYS_ADMIN to watch filesystem or mountpoint. As regular user you can at most get functionality equivalent to inotify - you still have to recurse all directories and set marks on them manually.",
            "created_at": "2023-05-11T12:40:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1543926029",
            "id": 1543926029,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5cBnEN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543926029/reactions"
            },
            "updated_at": "2023-05-11T12:40:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1543926029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13090277?v=4",
                "events_url": "https://api.github.com/users/vlada-dudr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vlada-dudr/followers",
                "following_url": "https://api.github.com/users/vlada-dudr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vlada-dudr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vlada-dudr",
                "id": 13090277,
                "login": "vlada-dudr",
                "node_id": "MDQ6VXNlcjEzMDkwMjc3",
                "organizations_url": "https://api.github.com/users/vlada-dudr/orgs",
                "received_events_url": "https://api.github.com/users/vlada-dudr/received_events",
                "repos_url": "https://api.github.com/users/vlada-dudr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vlada-dudr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vlada-dudr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vlada-dudr"
            }
        },
        {
            "author_association": "NONE",
            "body": "I just spent a few hours trying to figure out why my Neovim was taking up 30-40% of CPU while idle. I ended up finding out that it was caused by this poll watcher.\r\n\r\nFor now I have disabled it in my `init.lua` with:\r\n````lua\r\nrequire('vim.lsp._watchfiles')._watchfunc = function(_, _, _) return true end\r\n````\r\n\r\nHowever,  I'm wondering what I will miss without the watcher. As I understand it, it sends `changed` event to LS when a file is changed. Is this only for changes that happen outside of Neovim, or does it serve another purpose as well?",
            "created_at": "2023-05-24T09:13:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1560742827",
            "id": 1560742827,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5dBwur",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 3,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1560742827/reactions"
            },
            "updated_at": "2023-05-24T09:26:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1560742827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1702152?v=4",
                "events_url": "https://api.github.com/users/pbogut/events{/privacy}",
                "followers_url": "https://api.github.com/users/pbogut/followers",
                "following_url": "https://api.github.com/users/pbogut/following{/other_user}",
                "gists_url": "https://api.github.com/users/pbogut/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pbogut",
                "id": 1702152,
                "login": "pbogut",
                "node_id": "MDQ6VXNlcjE3MDIxNTI=",
                "organizations_url": "https://api.github.com/users/pbogut/orgs",
                "received_events_url": "https://api.github.com/users/pbogut/received_events",
                "repos_url": "https://api.github.com/users/pbogut/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pbogut/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pbogut/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pbogut"
            }
        },
        {
            "author_association": "NONE",
            "body": "You should rather disable the functionality all together. This functionality should basically reduce need for language servers to implement their own means to watch filesystem for changes and instead use editor implementation. So the way you did it your LS will miss any changes made outside of nvim.\n\nMay 24, 2023 11:13:43 Paweł Bogut ***@***.***>:\n\n> \n> I just spent few hours trying to figure out why my Neovim takes 30-40% of CPU while idle and ended up finding out that it is caused by this poll watcher.\n> \n> For now I disabled it in my *init.lua* with a:\n> \n> require('vim.lsp._watchfiles')._watchfunc = function(_, _, _) return true end\n> \n> But I'm wondering, what will I miss without watcher? As I understand it is sending *changed* event to LS when file is changed. Is it only for changes that happen outside Neovim? Or it serves other purpose as well?\n> \n> —\n> Reply to this email directly, view it on GitHub[https://github.com/neovim/neovim/issues/23291#issuecomment-1560742827], or unsubscribe[https://github.com/notifications/unsubscribe-auth/ADD33ZLJAESWSWSPMJ4AQ7DXHXGMNANCNFSM6AAAAAAXISZHDE].\n> You are receiving this because you commented.[Tracking image][https://github.com/notifications/beacon/ADD33ZIJUUZ6CWZ4OSDCK3LXHXGMNA5CNFSM6AAAAAAXISZHDGWGG33NNVSW45C7OR4XAZNMJFZXG5LFINXW23LFNZ2KUY3PNVWWK3TUL5UWJTS5A4F2W.gif]\n> \n",
            "created_at": "2023-05-24T09:58:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1560816223",
            "id": 1560816223,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5dCCpf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1560816223/reactions"
            },
            "updated_at": "2023-05-24T09:58:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1560816223",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13090277?v=4",
                "events_url": "https://api.github.com/users/vlada-dudr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vlada-dudr/followers",
                "following_url": "https://api.github.com/users/vlada-dudr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vlada-dudr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vlada-dudr",
                "id": 13090277,
                "login": "vlada-dudr",
                "node_id": "MDQ6VXNlcjEzMDkwMjc3",
                "organizations_url": "https://api.github.com/users/vlada-dudr/orgs",
                "received_events_url": "https://api.github.com/users/vlada-dudr/received_events",
                "repos_url": "https://api.github.com/users/vlada-dudr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vlada-dudr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vlada-dudr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vlada-dudr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Reopening this as we still want to do more performance improvements",
            "created_at": "2023-06-14T13:10:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1591180309",
            "id": 1591180309,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5e13wV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1591180309/reactions"
            },
            "updated_at": "2023-06-14T13:10:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1591180309",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm having this problem on a large codebase using latest neovim from git, neovim it at 100% CPU. Disabling the watcher gives me back my 0-1% CPU.\r\n\r\nCould this be fixed/improved/workaround with a slower refresh frequency of the pool? Look like it is `2s` now:\r\n\r\n```\r\nlocal default_poll_interval_ms = 2000\r\n```\r\n\r\nCould this be set as a parameter?\r\n\r\nMost of the time, external changes is something I manually trigger by doing a `git checkout` and I usually have some other task to do before going back to the editor. And by the way, my LSP usually take something like a minute or more to react to these file change (the time to validate / index everything again). So I have no problem with a few seconds delay.",
            "created_at": "2023-06-21T07:50:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1600357105",
            "id": 1600357105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5fY4Lx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600357105/reactions"
            },
            "updated_at": "2023-06-21T07:58:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600357105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9705357?v=4",
                "events_url": "https://api.github.com/users/guibou/events{/privacy}",
                "followers_url": "https://api.github.com/users/guibou/followers",
                "following_url": "https://api.github.com/users/guibou/following{/other_user}",
                "gists_url": "https://api.github.com/users/guibou/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/guibou",
                "id": 9705357,
                "login": "guibou",
                "node_id": "MDQ6VXNlcjk3MDUzNTc=",
                "organizations_url": "https://api.github.com/users/guibou/orgs",
                "received_events_url": "https://api.github.com/users/guibou/received_events",
                "repos_url": "https://api.github.com/users/guibou/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/guibou/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/guibou/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/guibou"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `local default_poll_interval_ms = 2000` Could this be set as a parameter?\r\n\r\nBefore adding random options we still have [other approaches](https://github.com/neovim/neovim/pull/23500#issuecomment-1586960386) to try.",
            "created_at": "2023-06-21T07:57:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1600369418",
            "id": 1600369418,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5fY7MK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600369418/reactions"
            },
            "updated_at": "2023-06-21T07:57:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600369418",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Copying comment from https://github.com/neovim/neovim/pull/23500#issuecomment-1632846953:\r\n\r\n---\r\n\r\n[emcrisostomo/fswatch](https://github.com/emcrisostomo/fswatch) might be our best bet. It's a LibUV like library for file watching and uses:\r\n\r\n- inotify on linux\r\n- FSEvents on MacOS\r\n- kqueue on BSD\r\n- Windows' monitor\r\n- Polling on anything else\r\n\r\nWe can either add it as a build dep or make it an optional runtime dep and fallback to our current implementation when it is not available.",
            "created_at": "2023-07-12T16:29:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1632855972",
            "id": 1632855972,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5hU2ek",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1632855972/reactions"
            },
            "updated_at": "2023-07-12T16:30:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1632855972",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> [emcrisostomo/fswatch](https://github.com/emcrisostomo/fswatch) might be our best bet. It's a LibUV like library for file watching and uses:\r\n\r\nAdded to the list at https://github.com/neovim/neovim/issues/1380#issuecomment-546667155 . Facebook's [watchman](https://github.com/facebook/watchman) still seems promising, it's used heavily in production there.",
            "created_at": "2023-07-16T00:08:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1636923114",
            "id": 1636923114,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5hkXbq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636923114/reactions"
            },
            "updated_at": "2023-07-16T00:14:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1636923114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, this seems like it's turning into a `g:clipboard` situation, where there could be a choice of backend.\r\n\r\nSo unless we add something like fswatch as a build dep, we may need to add a couple of implementations which are automatically selected at runtime; which is still probably simpler than the lpeg implementation we've already merged.",
            "created_at": "2023-07-19T11:39:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1641924828",
            "id": 1641924828,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5h3cjc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1641924828/reactions"
            },
            "updated_at": "2023-07-19T11:39:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1641924828",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah. The OS APIs are insufficient, and libuv hasn't yet provided a robust abstraction. But there are decent CLI tools. \r\n\r\nWe could start with a file-watcher abstraction that wraps CLI tools. And eventually we may implement a full-Lua clone of the best CLI tool, then users don't need to install anything. ",
            "created_at": "2023-07-19T13:23:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1642076327",
            "id": 1642076327,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5h4Bin",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642076327/reactions"
            },
            "updated_at": "2023-07-19T13:23:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642076327",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We should be able to experiment with this without touching core by just overriding `require('vim.lsp._watchfiles')._watchfunc`, and in theory, a prototype plugin could do all this.",
            "created_at": "2023-07-19T13:35:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1642098608",
            "id": 1642098608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5h4G-w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642098608/reactions"
            },
            "updated_at": "2023-07-19T13:40:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642098608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've been bitten by this also.\r\n\r\nConfirmed by disabling the watcher as detailed [here](https://github.com/neovim/neovim/issues/23291#issuecomment-1560742827).\r\n\r\nIn earlier debugging I straced one of the spinning `nvim --embed` PIDS and it ws doing a load of futex/epoll all the time...",
            "created_at": "2023-08-16T11:19:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/23291#issuecomment-1680419522",
            "id": 1680419522,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23291",
            "node_id": "IC_kwDOAPphoM5kKSrC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680419522/reactions"
            },
            "updated_at": "2023-08-16T11:19:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680419522",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/604955?v=4",
                "events_url": "https://api.github.com/users/vext01/events{/privacy}",
                "followers_url": "https://api.github.com/users/vext01/followers",
                "following_url": "https://api.github.com/users/vext01/following{/other_user}",
                "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vext01",
                "id": 604955,
                "login": "vext01",
                "node_id": "MDQ6VXNlcjYwNDk1NQ==",
                "organizations_url": "https://api.github.com/users/vext01/orgs",
                "received_events_url": "https://api.github.com/users/vext01/received_events",
                "repos_url": "https://api.github.com/users/vext01/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vext01/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vext01"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23291/comments",
    "created_at": "2023-04-23T15:08:34Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23291/events",
    "html_url": "https://github.com/neovim/neovim/issues/23291",
    "id": 1680059789,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23291/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5kI62N",
    "number": 23291,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 15,
        "-1": 0,
        "confused": 0,
        "eyes": 3,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 18,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23291/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23291/timeline",
    "title": "LSP: high cpu usage with huge number of files with `workspace/didChangeWatchedFiles` enabled",
    "updated_at": "2023-08-16T11:19:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23291",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1666345?v=4",
        "events_url": "https://api.github.com/users/lucy/events{/privacy}",
        "followers_url": "https://api.github.com/users/lucy/followers",
        "following_url": "https://api.github.com/users/lucy/following{/other_user}",
        "gists_url": "https://api.github.com/users/lucy/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lucy",
        "id": 1666345,
        "login": "lucy",
        "node_id": "MDQ6VXNlcjE2NjYzNDU=",
        "organizations_url": "https://api.github.com/users/lucy/orgs",
        "received_events_url": "https://api.github.com/users/lucy/received_events",
        "repos_url": "https://api.github.com/users/lucy/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lucy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lucy/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lucy"
    }
}