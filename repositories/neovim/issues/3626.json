{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "The value of `v:windowid` is not defined. In a terminal emulator, I can use the value of `$WINDOWID` instead, and @equalsraf has just implemented `$WINDOWID` on Neovim-Qt too (see: https://github.com/equalsraf/neovim-qt/issues/64). Perhaps the variable `v:windowid` is superfluous and can be deleted.\n\nThis issue is somewhat related with https://github.com/neovim/neovim/issues/2681\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "What if there are multiple external interfaces hooked up to an nvim master process, i.e., multiple window IDs? cc @equalsraf\n\nAlso, do you have a use-case in mind?\n",
            "created_at": "2015-11-08T03:23:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-154773368",
            "id": 154773368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDc3MzM2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/154773368/reactions"
            },
            "updated_at": "2015-11-08T03:23:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/154773368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If there are multiple external interfaces connected to an nvim master process, I think each interface should have its own `$WINDOWID`, but I don't have user cases in mind.\n\nUser cases for single Neovim instances are:\n- [Nvim-R](https://github.com/jalvesaq/Nvim-R): Send a line of code to R (have to raise R Console window to paste the text) and raise Neovim window again after the text was pasted.\n- [vimtex](https://github.com/lervag/vimtex) and [Nvim-R](https://github.com/jalvesaq/Nvim-R): SyncTeX backward jump, that is, do a command in the PDF viewer (double click, CTRL-click, etc, depending on the viewer) to send a message to the editor requesting to move the cursor to the line corresponding to the position in the PDF and to bring its own window to the foreground.\n",
            "created_at": "2015-11-08T10:39:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-154802640",
            "id": 154802640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDgwMjY0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/154802640/reactions"
            },
            "updated_at": "2015-11-08T10:39:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/154802640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/891655?v=4",
                "events_url": "https://api.github.com/users/jalvesaq/events{/privacy}",
                "followers_url": "https://api.github.com/users/jalvesaq/followers",
                "following_url": "https://api.github.com/users/jalvesaq/following{/other_user}",
                "gists_url": "https://api.github.com/users/jalvesaq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jalvesaq",
                "id": 891655,
                "login": "jalvesaq",
                "node_id": "MDQ6VXNlcjg5MTY1NQ==",
                "organizations_url": "https://api.github.com/users/jalvesaq/orgs",
                "received_events_url": "https://api.github.com/users/jalvesaq/received_events",
                "repos_url": "https://api.github.com/users/jalvesaq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jalvesaq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jalvesaq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jalvesaq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Any decision about this? In my opinion, we should not worry about multiple interfaces connected to a single neovim process. I think neovim should simply set either `v:windowid` or `$WINDOWID` in each interface and let the application or plugin to solve the problem of deciding which interface to activate.\n",
            "created_at": "2016-03-15T10:05:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-196750483",
            "id": 196750483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5Njc1MDQ4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196750483/reactions"
            },
            "updated_at": "2016-03-15T10:05:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196750483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/891655?v=4",
                "events_url": "https://api.github.com/users/jalvesaq/events{/privacy}",
                "followers_url": "https://api.github.com/users/jalvesaq/followers",
                "following_url": "https://api.github.com/users/jalvesaq/following{/other_user}",
                "gists_url": "https://api.github.com/users/jalvesaq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jalvesaq",
                "id": 891655,
                "login": "jalvesaq",
                "node_id": "MDQ6VXNlcjg5MTY1NQ==",
                "organizations_url": "https://api.github.com/users/jalvesaq/orgs",
                "received_events_url": "https://api.github.com/users/jalvesaq/received_events",
                "repos_url": "https://api.github.com/users/jalvesaq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jalvesaq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jalvesaq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jalvesaq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Any decision about this?\n\n@jalvesaq  Isn't this something for UIs to set? For TUI it is meaningless. So what action is needed from the core to close this issue?\n",
            "created_at": "2016-04-18T00:08:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-211135903",
            "id": 211135903,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTEzNTkwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/211135903/reactions"
            },
            "updated_at": "2016-04-18T00:08:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/211135903",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, I think the issue can be closed here. The problem should be fixed by Neovim-Qt and other interfaces.\n",
            "created_at": "2016-04-18T01:06:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-211144305",
            "id": 211144305,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTE0NDMwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/211144305/reactions"
            },
            "updated_at": "2016-04-18T01:06:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/211144305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/891655?v=4",
                "events_url": "https://api.github.com/users/jalvesaq/events{/privacy}",
                "followers_url": "https://api.github.com/users/jalvesaq/followers",
                "following_url": "https://api.github.com/users/jalvesaq/following{/other_user}",
                "gists_url": "https://api.github.com/users/jalvesaq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jalvesaq",
                "id": 891655,
                "login": "jalvesaq",
                "node_id": "MDQ6VXNlcjg5MTY1NQ==",
                "organizations_url": "https://api.github.com/users/jalvesaq/orgs",
                "received_events_url": "https://api.github.com/users/jalvesaq/received_events",
                "repos_url": "https://api.github.com/users/jalvesaq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jalvesaq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jalvesaq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jalvesaq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Re-opening this per https://github.com/equalsraf/neovim-qt/issues/64#issuecomment-211991880\n",
            "created_at": "2016-04-19T15:55:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-211992357",
            "id": 211992357,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTk5MjM1Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/211992357/reactions"
            },
            "updated_at": "2016-04-19T15:55:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/211992357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is it ok to just set v:windowid as readwrite (VV_RO_SBX more likely) or should we add some API for this.\n",
            "created_at": "2016-04-19T16:26:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212004455",
            "id": 212004455,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjAwNDQ1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212004455/reactions"
            },
            "updated_at": "2016-04-19T16:26:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212004455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is it ok to just set v:windowid as readwrite (VV_RO_SBX more likely)\n\nI think that's ok for now. It avoids proliferation of ad-hoc alternatives in the meantime.\n",
            "created_at": "2016-04-19T16:46:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212011608",
            "id": 212011608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjAxMTYwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212011608/reactions"
            },
            "updated_at": "2016-04-19T16:46:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212011608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Starting a PR, as a followup it occurs to me that:\n1. In Vim if +X11 is set then v:windowid is also set. In our case the TUI could set v:windowid to $WINDOWID\n2. Should we reset v:windowid=0 once all UIs are detached?\n3. realized there is an API `vim_get_vvar()` but none to set the value, is this intentional?\n",
            "created_at": "2016-04-19T17:29:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212027679",
            "id": 212027679,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjAyNzY3OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212027679/reactions"
            },
            "updated_at": "2016-04-19T17:29:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212027679",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In our case the TUI could set v:windowid to $WINDOWID\n\nSoon the tui will communicate exclusively over the API as well. We should have `ui_set_windowid` request (if we try to do something semantic like tracking focus between different frontends) or at least `vim_set_vvar` (there are other mutable ones like v:errors )\n",
            "created_at": "2016-04-19T19:22:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212076995",
            "id": 212076995,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjA3Njk5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212076995/reactions"
            },
            "updated_at": "2016-04-19T19:22:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212076995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We should have ui_set_windowid\n\n:+1: Though I will repeat my mantra \"there is no reason for UI to be a separate concept ~~(thus why not `vim_set_windowid`)\".~~\n",
            "created_at": "2016-04-19T19:33:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212081450",
            "id": 212081450,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjA4MTQ1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212081450/reactions"
            },
            "updated_at": "2018-09-16T21:38:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212081450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "well it is not more separate concept than \"api/buffer\" is a separate concept: a vim instance can have more than one ui connected, each which can have a different windowid (not that were going to use that info soonish, but it is good to be forward compatible), which `ui_set_windowid` indicates. The _implementation_ of the ui api is unneccesarily different, that is true, but #4432 (the first commit, I should break that out), will fix that. \n",
            "created_at": "2016-04-19T20:08:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212105519",
            "id": 212105519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjEwNTUxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212105519/reactions"
            },
            "updated_at": "2016-04-19T20:08:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212105519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> well it is not more separate concept than \"api/buffer\" is a separate concept\n\n:+1: I was conflating `ui_foo` with the division of \"UI events/clients and non-UI clients/clients\".\n\n> The implementation of the ui api is unneccesarily different, that is true, but #4432 (the first commit, I should break that out), will fix that.\n\n:+1: \n",
            "created_at": "2016-04-19T21:13:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212132791",
            "id": 212132791,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjEzMjc5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212132791/reactions"
            },
            "updated_at": "2018-09-16T21:39:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212132791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Merged https://github.com/neovim/neovim/pull/4608 to provide a modicum of support for legacy scripts. \r\n\r\n# Next steps\r\n\r\n- https://github.com/neovim/neovim/issues/3626#issuecomment-212027679 \r\n- https://github.com/neovim/neovim/issues/3626#issuecomment-212076995\r\n",
            "created_at": "2016-04-20T05:31:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212266261",
            "id": 212266261,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjI2NjI2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212266261/reactions"
            },
            "updated_at": "2018-09-16T21:41:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212266261",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Checking vim_set_vvar(), tried to implement it like this\n\n``` C\nObject vim_set_vvar(String name, Object value, Error *err)\n{\n  return dict_set_value(&vimvardict, name, value, false, err);\n}\n```\n\nbut getting an API error `Dictionary is locked`. Which seems to be locked on [startup](https://github.com/neovim/neovim/blob/master/src/nvim/eval.c#L477).\n\nTook a quick look over `set_var()` in eval.c which does not seem to check the global lock like `dict_set_value()` does, but also does [other things](https://github.com/neovim/neovim/blob/master/src/nvim/eval.c#L18076) like enforcing the correct type.for v: entries, but `set_var()` is a static function in eval.c and works for all vars not just v:.\n\n**Edit**: vim_set_var() (i.e. dict_set_value) does not trigger dict watchers set with dictwatcheradd, is this intentional? Found no reference to it i #3603\n",
            "created_at": "2016-04-20T08:56:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/3626#issuecomment-212337320",
            "id": 212337320,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3626",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjMzNzMyMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212337320/reactions"
            },
            "updated_at": "2016-04-20T09:33:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/212337320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        }
    ],
    "comments": 15,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/3626/comments",
    "created_at": "2015-11-08T01:21:40Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/3626/events",
    "html_url": "https://github.com/neovim/neovim/issues/3626",
    "id": 115703516,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "A discussion has run its course and a decision has to be made how to proceed",
            "id": 83851236,
            "name": "needs:decision",
            "node_id": "MDU6TGFiZWw4Mzg1MTIzNg==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:decision"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 103834742,
            "name": "gui",
            "node_id": "MDU6TGFiZWwxMDM4MzQ3NDI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "needs a clear design proposal",
            "id": 124510010,
            "name": "needs:design",
            "node_id": "MDU6TGFiZWwxMjQ1MTAwMTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:design"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/3626/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 601,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 515,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-04-01T02:46:11Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUxMTU3MDM1MTY=",
    "number": 3626,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/3626/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/3626/timeline",
    "title": "API for v:windowid or equivalent",
    "updated_at": "2024-03-30T13:07:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/3626",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/891655?v=4",
        "events_url": "https://api.github.com/users/jalvesaq/events{/privacy}",
        "followers_url": "https://api.github.com/users/jalvesaq/followers",
        "following_url": "https://api.github.com/users/jalvesaq/following{/other_user}",
        "gists_url": "https://api.github.com/users/jalvesaq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jalvesaq",
        "id": 891655,
        "login": "jalvesaq",
        "node_id": "MDQ6VXNlcjg5MTY1NQ==",
        "organizations_url": "https://api.github.com/users/jalvesaq/orgs",
        "received_events_url": "https://api.github.com/users/jalvesaq/received_events",
        "repos_url": "https://api.github.com/users/jalvesaq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jalvesaq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jalvesaq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jalvesaq"
    }
}