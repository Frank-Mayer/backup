{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "https://github.com/danmar/cppcheck\r\n\r\n```\r\ncppcheck --enable=all --force src/nvim\r\n```",
    "closed_at": "2024-07-11T11:35:04Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "A good start could be for someone to run it locally, configure it properly and provide a log with relevant errors :)",
            "created_at": "2021-07-24T08:55:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/15173#issuecomment-886023280",
            "id": 886023280,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15173",
            "node_id": "IC_kwDOAPphoM40z6Rw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886023280/reactions"
            },
            "updated_at": "2021-07-24T08:55:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/886023280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "**Run results with \"most obvious options\"**\r\n\r\nVia `cppcheck --enable=all --force --quiet --error-exitcode=1 src/nvim`,\r\n\r\nTime: (yes, 21 **minutes**)\r\n```\r\nreal\t1300.65s\r\nuser\t1294.36s\r\nsys\t2.38s\r\n```\r\nMachine: i5-4670k, 24gb (cppcheck ram usage was v. low though), SSD (disk access also didn't seem like a bottle neck).\r\n\r\nResults: [cppcheck.log (208kb) ](https://github.com/neovim/neovim/files/6954411/cppcheck.log)\r\n\r\n**About cppcheck options**\r\n\r\nwhere\r\n\r\n- `--enable=all` is all checks.\r\n- `--force` is see below.\r\n- `--quiet` is only print errors (successful run should just exit 0 afaict like a good ci tool)\r\n- `--error-exitcode=1` is exit with code 1 if errors detected\r\n\r\nList of possible checks, if all was too broad:\r\n\r\n```\r\n       --enable=<id>\r\n           Enable additional checks. The available ids are:\r\n\r\n           all\r\n               Enable all checks. It is recommended to only use --enable=all when the whole\r\n               program is scanned, because this enables unusedFunction.\r\n\r\n           warning\r\n               Enable warning messages\r\n\r\n           style\r\n               Enable all coding style checks. All messages with the severities 'style',\r\n               'performance' and 'portability' are enabled.\r\n\r\n           performance\r\n               Enable performance messages\r\n\r\n           portability\r\n               Enable portability messages\r\n\r\n           information\r\n               Enable information messages\r\n\r\n           unusedFunction\r\n               Check for unused functions. It is recommend to only enable this when the whole\r\n               program is scanned\r\n\r\n           missingInclude\r\n               Warn if there are missing includes. For detailed information use\r\n               --check-config\r\n```\r\n\r\n`--force`,\r\n\r\n```\r\n       -f, --force\r\n           Force checking of files that have a lot of configurations. Error is printed if\r\n           such a file is found so there is no reason to use this by default. If used\r\n           together with --max-configs=, the last option is the one that is effective.\r\n```\r\n\r\nNotable options:\r\n\r\n- `--std` for c89 through c11/++11 (default).\r\n- `--xml` can write to xml format if report needed to be munged (probably not, nothing else in CI is AFAIK).\r\n- Has options for job/threading. It pegged one of my cores at 100%, so probably would see improvements with threading but unsure how well that works in a ci env (how many cores, is it stable between runs).\r\n- Also `-D` and `-U`\r\n\r\n```\r\n       -D<id>\r\n           By default Cppcheck checks all configurations. Use -D to limit the checking. When\r\n           -D is used the checking is limited to the given configuration. Example: -DDEBUG=1\r\n           -D__cplusplus\r\n\r\n       -U<id>\r\n           By default Cppcheck checks all configurations. Use '-U' to explicitly hide certain\r\n           #ifdef <id> code paths from checking. Example: '-UDEBUG'\r\n```",
            "created_at": "2021-08-09T12:13:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/15173#issuecomment-895172696",
            "id": 895172696,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15173",
            "node_id": "IC_kwDOAPphoM41W0BY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895172696/reactions"
            },
            "updated_at": "2021-08-09T12:13:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895172696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/866010?v=4",
                "events_url": "https://api.github.com/users/rktjmp/events{/privacy}",
                "followers_url": "https://api.github.com/users/rktjmp/followers",
                "following_url": "https://api.github.com/users/rktjmp/following{/other_user}",
                "gists_url": "https://api.github.com/users/rktjmp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rktjmp",
                "id": 866010,
                "login": "rktjmp",
                "node_id": "MDQ6VXNlcjg2NjAxMA==",
                "organizations_url": "https://api.github.com/users/rktjmp/orgs",
                "received_events_url": "https://api.github.com/users/rktjmp/received_events",
                "repos_url": "https://api.github.com/users/rktjmp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rktjmp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rktjmp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rktjmp"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I would say, a 21 minute run time is unacceptable for CI.\r\n\r\nAnd at 208kb of results ~~(hard to get accurate \"error count\" since they are line broken)~~, actually it's probably 3 lines per error pretty reliably, it's probably \"non trivial\" to get the current build into a passing state.\r\n\r\n```\r\nwc -l cppcheck.log\r\n5057 cppcheck.log\r\n```\r\n\r\nDivide that by, you still have +1600 errors to fix.\r\n\r\nProbably better taken as a separate project/issues targeting subtrees first before trying to integrate. \r\n\r\n\r\n",
            "created_at": "2021-08-09T12:16:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/15173#issuecomment-895174401",
            "id": 895174401,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15173",
            "node_id": "IC_kwDOAPphoM41W0cB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895174401/reactions"
            },
            "updated_at": "2021-08-09T12:17:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895174401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/866010?v=4",
                "events_url": "https://api.github.com/users/rktjmp/events{/privacy}",
                "followers_url": "https://api.github.com/users/rktjmp/followers",
                "following_url": "https://api.github.com/users/rktjmp/following{/other_user}",
                "gists_url": "https://api.github.com/users/rktjmp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rktjmp",
                "id": 866010,
                "login": "rktjmp",
                "node_id": "MDQ6VXNlcjg2NjAxMA==",
                "organizations_url": "https://api.github.com/users/rktjmp/orgs",
                "received_events_url": "https://api.github.com/users/rktjmp/received_events",
                "repos_url": "https://api.github.com/users/rktjmp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rktjmp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rktjmp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rktjmp"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I would say, a 21 minute run time is unacceptable for CI.\r\n\r\nFor each pull request, absolutely. But I think if we were to use it then it'd make more sense to run it once per day like [PVS](https://neovim.io/doc/reports/pvs/PVS-studio.html.d/) or [clang analysis](https://neovim.io/doc/reports/clang/). Running clang analyzer also takes a long time, comparable to cppcheck if I had to guess, so I don't think it's outrageous by any measure.\r\n\r\n> And at 208kb of results ~(hard to get accurate \"error count\" since they are line broken)~, actually it's probably 3 lines per error pretty reliably, it's probably \"non trivial\" to get the current build into a passing state.\r\n\r\nFollowing the above point, if we run it on a schedule and generate a report then it won't become a problem.\r\n\r\nI think using `enable=all` or `enable=style` is overkill. I'd guess 90% of the warnings brought up for neovim is that variable scopes can be reduced. Which they should, but it can distract from the real potential issues it finds.",
            "created_at": "2021-08-09T13:32:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/15173#issuecomment-895226182",
            "id": 895226182,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15173",
            "node_id": "IC_kwDOAPphoM41XBFG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895226182/reactions"
            },
            "updated_at": "2021-08-09T13:32:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895226182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Running clang analyzer also takes a long time, comparable to cppcheck if I had to guess, so I don't think it's outrageous by any measure.\r\n\r\nJust as a data point, generating [all the reports](https://github.com/neovim/doc/runs/3277198215?check_suite_focus=true) takes ~17 minutes.  Clang's scan-build is ~10 minutes and PVS is ~5.",
            "created_at": "2021-08-10T01:32:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/15173#issuecomment-895661048",
            "id": 895661048,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15173",
            "node_id": "IC_kwDOAPphoM41YrP4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895661048/reactions"
            },
            "updated_at": "2021-08-10T01:43:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895661048",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I can look at integrating cppcheck into neovim/doc, but will need guidance on appropriate options (`--enable`, maybe `-U/D` flags).\r\n\r\nBtw: http://neovim.github.io/doc/ and http://neovim.io/doc/ both 404.",
            "created_at": "2021-08-10T06:21:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/15173#issuecomment-895761110",
            "id": 895761110,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15173",
            "node_id": "IC_kwDOAPphoM41ZDrW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895761110/reactions"
            },
            "updated_at": "2021-08-10T06:21:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/895761110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/866010?v=4",
                "events_url": "https://api.github.com/users/rktjmp/events{/privacy}",
                "followers_url": "https://api.github.com/users/rktjmp/followers",
                "following_url": "https://api.github.com/users/rktjmp/following{/other_user}",
                "gists_url": "https://api.github.com/users/rktjmp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rktjmp",
                "id": 866010,
                "login": "rktjmp",
                "node_id": "MDQ6VXNlcjg2NjAxMA==",
                "organizations_url": "https://api.github.com/users/rktjmp/orgs",
                "received_events_url": "https://api.github.com/users/rktjmp/received_events",
                "repos_url": "https://api.github.com/users/rktjmp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rktjmp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rktjmp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rktjmp"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm seeing mostly `variableScope` and `unusedFunction` reports in @rktjmp's log.\r\n\r\n---\r\n\r\n`variableScope` is a style suggestion i.e., cppcheck is suggesting that\r\n\r\n```c\r\nint x;\r\n{\r\n  x = 0;\r\n  printf(\"%d\\n\", x);\r\n}\r\n// x no longer used beyond the block above\r\n```\r\n\r\nbe\r\n\r\n```c\r\n{\r\n  int x = 0;\r\n  printf(\"%d\\n\", x);\r\n}\r\n```\r\n\r\ninstead. This is a suggestion that can be ignored imo.\r\n\r\n---\r\n\r\nP.S. One can create a `suppressions.txt` with the following contents (as an example):\r\n\r\n```\r\nunsedFunction\r\nvariableScope\r\n```\r\n\r\nFrom the [manual](http://cppcheck.sourceforge.net/manual.pdf) under \"Suppressions\" > \"Suppressions in a file\":\r\n\r\n```\r\n$ cppcheck --suppressions-list=suppressions.txt src/\r\n```",
            "created_at": "2021-08-11T03:25:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/15173#issuecomment-896471033",
            "id": 896471033,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15173",
            "node_id": "IC_kwDOAPphoM41bw_5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/896471033/reactions"
            },
            "updated_at": "2021-08-11T03:25:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/896471033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Eh, I've tried this. It's decent but nothing spectacular. It also has a *lot* of false positives which is always annoying. Closing for now, can reopen if it improved later on.",
            "created_at": "2024-07-11T11:35:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/15173#issuecomment-2222696882",
            "id": 2222696882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15173",
            "node_id": "IC_kwDOAPphoM6Ee6my",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2222696882/reactions"
            },
            "updated_at": "2024-07-11T11:35:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2222696882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15173/comments",
    "created_at": "2021-07-24T04:49:56Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/15173/events",
    "html_url": "https://github.com/neovim/neovim/issues/15173",
    "id": 952000063,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 114040313,
            "name": "robustness",
            "node_id": "MDU6TGFiZWwxMTQwNDAzMTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/robustness"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "automation for build, test, and release",
            "id": 212701006,
            "name": "ci",
            "node_id": "MDU6TGFiZWwyMTI3MDEwMDY=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/15173/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 228,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 255,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2024-07-11T11:35:04Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU5NTIwMDAwNjM=",
    "number": 15173,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/15173/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/15173/timeline",
    "title": "CI: static analysis: analyze with cppcheck",
    "updated_at": "2024-07-11T11:35:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/15173",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ghost",
        "id": 10137,
        "login": "ghost",
        "node_id": "MDQ6VXNlcjEwMTM3",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ghost"
    }
}