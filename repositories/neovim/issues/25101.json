{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nSome plugins have very invasive methods of setting keybindings. This can cause a lot of frustration and confusion. Neovim should provide the tools needed to deal with this invasive behavior as elegantly as possible.\r\n\r\nI had issues with is [Neorg](https://github.com/nvim-neorg/neorg), but any plugin can do this, so this is NOT a critique of Neorg (which I think is a great plugin otherwise). In order illustrate what I mean by invasive, I will describe what Neorg does:\r\nIn simple terms, by default, Neorg not only sets BUFFER-LOCAL keybindings, but it also does so REPETITIVELY when it's in use. This has the following (frustrating) effects:\r\n\r\n1. It overrides normal (not necessarily 'normal' mode) user-defined keybindings if they coincide with Neorg-specific keybindings;\r\n2. Neorg keybindings cannot be overriden in the `after/` directory (the usual way);\r\n3. Disabling one of these keybindings with `:unmap <buffer> <some-Neorg-keybinding>` only works if you don't press that keybinding again - rendering the `:unmap` command COMPLETELY useless.\r\n\r\nThis is made even worse by the fact that, in order to avoid this kind of plugin behavior:\r\n\r\n- **generally** - the plugin has to give the user sane options for disabling it;\r\n- **in this case** - the user has to either disable all of the keybindings OR use plugin-specific syntax to override the plugins. This means you are either familiar with all of them and disable what you don't like or wait until something breaks while you're trying to do work.\r\n\r\nYou can read more about this in [this issue](https://github.com/nvim-neorg/neorg/issues/1023).\r\n\r\nI would like to reiterate that this is a Neovim problem, **NOT** a plugin problem (although plugins shouldn't do this) and I am not here to denigrate Neorg.\n\n### Expected behavior\n\nThe most elegant solution that I can think of is adding a new special map-argument - \"force\" (or whatever suggestive name you think is more appropriate).\r\n\r\nThe \"force\" keybinding argument should:\r\n\r\n- only be usable by the user in command mode and in the user configuration directories (`$XDG_CONFIG_HOME/nvim`, `$XDG_CONFIG_DIRS[1]/nvim`, `$XDG_CONFIG_DIRS[2]/nvim`, `$XDG_CONFIG_DIRS[2]/nvim/after`, `$XDG_CONFIG_DIRS[1]/nvim/after`, `$XDG_CONFIG_HOME/nvim/after`\r\n, as `:h rtp` lists them), **NOT** all the directories in the 'runtimepath'. If plugins can use it, it defeats its own purpose.\r\n- determine Neovim to **only** do what the user defined (as specified above) when the keybinding is pressed. Not anything else.\r\n- not cause errors. Plugins may attempt to set whatever keybindings they have to, but any one of those should simply not work when the user defines the same keybinding with the \"force\" argument.\r\n\r\nAs an example, setting:\r\n`vim.keymap.set(\"n\", \"<leader>m\", <user_command>, { force = true }) -- notice it's a global keybinding`\r\nin a user's `$XDG_CONFIG_HOME/nvim/init.lua` and loading a plugin that would normally, while in use, repetitively set:\r\n`vim.keymap.set(\"n\", \"<leader>m\", <plugin_command>, { buffer = true }) -- notice it's a buffer-local keybinding` means that `<leader>m` never executes `plugin_command` and always executes `user_command` when pressed, no matter how many times the plugin tries to set it and irrespective of the fact that the plugin's keybinding is buffer-local.\r\n\r\nIn layman's terms: if you set a keybinding yourself with `{ force = true }`, you can be sure that Neovim is going to only do what you set (manually or in your config) and nothing else.\r\n\r\nI think that the new map-argument would be an elegant solution to the problem and would give users more control over their plugins and their keybindings. This is very relevant because it is in line with Neovim's goals of being extensible and usable. \"Just don't use the plugin\" is not a solution to the problem - Neovim is supposed to be extensible (play nice with plugins and provide the tools needed to make plugins play nice - within reason) and some plugins are unique and there are no similar replacements.",
    "closed_at": "2023-09-11T23:24:26Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> The \"force\" keybinding argument should:  only be usable by the user in command mode and in the user configuration directories\r\n\r\nFiling this under [plugin namespacing](https://github.com/neovim/neovim/issues/16313).\r\n\r\n> I think that the new map-argument would be an elegant solution to the problem and would give users more control over their plugins and their keybindings.\r\n\r\nOn the contrary, it looks like an XY problem to me, or tunnel vision. Plugins can do all kinds of stuff. And it absolutely is critical that users insist on well-behaved plugins, not private workarounds. \r\n\r\n> Neovim's goals of being extensible and usable.\r\n\r\nTrotting that out as a catch-all justification is... ahem. And it's contradictory here since you are asking for the extensibility to be limited. Usability is also a central goal, but that doesn't justify every random feature request since it needs to be weighed against other work.",
            "created_at": "2023-09-11T23:24:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/25101#issuecomment-1714733345",
            "id": 1714733345,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25101",
            "node_id": "IC_kwDOAPphoM5mNMEh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1714733345/reactions"
            },
            "updated_at": "2023-09-11T23:27:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1714733345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25101/comments",
    "created_at": "2023-09-11T22:16:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25101/events",
    "html_url": "https://github.com/neovim/neovim/issues/25101",
    "id": 1891355506,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as duplicates of other issues",
            "id": 3221613764,
            "name": "closed:duplicate",
            "node_id": "MDU6TGFiZWwzMjIxNjEzNzY0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25101/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5wu8ty",
    "number": 25101,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25101/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25101/timeline",
    "title": "Enable user keybindings to forcefully override plugin keybindings",
    "updated_at": "2023-09-11T23:27:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25101",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/87570912?v=4",
        "events_url": "https://api.github.com/users/nicolasdumitru/events{/privacy}",
        "followers_url": "https://api.github.com/users/nicolasdumitru/followers",
        "following_url": "https://api.github.com/users/nicolasdumitru/following{/other_user}",
        "gists_url": "https://api.github.com/users/nicolasdumitru/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nicolasdumitru",
        "id": 87570912,
        "login": "nicolasdumitru",
        "node_id": "MDQ6VXNlcjg3NTcwOTEy",
        "organizations_url": "https://api.github.com/users/nicolasdumitru/orgs",
        "received_events_url": "https://api.github.com/users/nicolasdumitru/received_events",
        "repos_url": "https://api.github.com/users/nicolasdumitru/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nicolasdumitru/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nicolasdumitru/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nicolasdumitru"
    }
}