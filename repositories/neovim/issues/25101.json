{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nSome plugins have very invasive methods of setting keybindings. This can cause a lot of frustration and confusion. Neovim should provide the tools needed to deal with this invasive behavior as elegantly as possible.\r\n\r\nI had issues with is [Neorg](https://github.com/nvim-neorg/neorg), but any plugin can do this, so this is NOT a critique of Neorg (which I think is a great plugin otherwise). In order illustrate what I mean by invasive, I will describe what Neorg does:\r\nIn simple terms, by default, Neorg not only sets BUFFER-LOCAL keybindings, but it also does so REPETITIVELY when it's in use. This has the following (frustrating) effects:\r\n\r\n1. It overrides normal (not necessarily 'normal' mode) user-defined keybindings if they coincide with Neorg-specific keybindings;\r\n2. Neorg keybindings cannot be overriden in the `after/` directory (the usual way);\r\n3. Disabling one of these keybindings with `:unmap <buffer> <some-Neorg-keybinding>` only works if you don't press that keybinding again - rendering the `:unmap` command COMPLETELY useless.\r\n\r\nThis is made even worse by the fact that, in order to avoid this kind of plugin behavior:\r\n\r\n- **generally** - the plugin has to give the user sane options for disabling it;\r\n- **in this case** - the user has to either disable all of the keybindings OR use plugin-specific syntax to override the plugins. This means you are either familiar with all of them and disable what you don't like or wait until something breaks while you're trying to do work.\r\n\r\nYou can read more about this in [this issue](https://github.com/nvim-neorg/neorg/issues/1023).\r\n\r\nI would like to reiterate that this is a Neovim problem, **NOT** a plugin problem (although plugins shouldn't do this) and I am not here to denigrate Neorg.\n\n### Expected behavior\n\nThe most elegant solution that I can think of is adding a new special map-argument - \"force\" (or whatever suggestive name you think is more appropriate).\r\n\r\nThe \"force\" keybinding argument should:\r\n\r\n- only be usable by the user in command mode and in the user configuration directories (`$XDG_CONFIG_HOME/nvim`, `$XDG_CONFIG_DIRS[1]/nvim`, `$XDG_CONFIG_DIRS[2]/nvim`, `$XDG_CONFIG_DIRS[2]/nvim/after`, `$XDG_CONFIG_DIRS[1]/nvim/after`, `$XDG_CONFIG_HOME/nvim/after`\r\n, as `:h rtp` lists them), **NOT** all the directories in the 'runtimepath'. If plugins can use it, it defeats its own purpose.\r\n- determine Neovim to **only** do what the user defined (as specified above) when the keybinding is pressed. Not anything else.\r\n- not cause errors. Plugins may attempt to set whatever keybindings they have to, but any one of those should simply not work when the user defines the same keybinding with the \"force\" argument.\r\n\r\nAs an example, setting:\r\n`vim.keymap.set(\"n\", \"<leader>m\", <user_command>, { force = true }) -- notice it's a global keybinding`\r\nin a user's `$XDG_CONFIG_HOME/nvim/init.lua` and loading a plugin that would normally, while in use, repetitively set:\r\n`vim.keymap.set(\"n\", \"<leader>m\", <plugin_command>, { buffer = true }) -- notice it's a buffer-local keybinding` means that `<leader>m` never executes `plugin_command` and always executes `user_command` when pressed, no matter how many times the plugin tries to set it and irrespective of the fact that the plugin's keybinding is buffer-local.\r\n\r\nIn layman's terms: if you set a keybinding yourself with `{ force = true }`, you can be sure that Neovim is going to only do what you set (manually or in your config) and nothing else.\r\n\r\nI think that the new map-argument would be an elegant solution to the problem and would give users more control over their plugins and their keybindings. This is very relevant because it is in line with Neovim's goals of being extensible and usable. \"Just don't use the plugin\" is not a solution to the problem - Neovim is supposed to be extensible (play nice with plugins and provide the tools needed to make plugins play nice - within reason) and some plugins are unique and there are no similar replacements.",
    "closed_at": "2023-09-11T23:24:26Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> The \"force\" keybinding argument should:  only be usable by the user in command mode and in the user configuration directories\r\n\r\nFiling this under [plugin namespacing](https://github.com/neovim/neovim/issues/16313).\r\n\r\n> I think that the new map-argument would be an elegant solution to the problem and would give users more control over their plugins and their keybindings.\r\n\r\nOn the contrary, it looks like an XY problem to me, or tunnel vision. Plugins can do all kinds of stuff. And it absolutely is critical that users insist on well-behaved plugins, not private workarounds. \r\n\r\n> Neovim's goals of being extensible and usable.\r\n\r\nTrotting that out as a catch-all justification is... ahem. And it's contradictory here since you are asking for the extensibility to be limited. Usability is also a central goal, but that doesn't justify every random feature request since it needs to be weighed against other work.",
            "created_at": "2023-09-11T23:24:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/25101#issuecomment-1714733345",
            "id": 1714733345,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25101",
            "node_id": "IC_kwDOAPphoM5mNMEh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1714733345/reactions"
            },
            "updated_at": "2023-09-11T23:27:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1714733345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk \r\n> it looks like an XY problem to me, or tunnel vision\r\n\r\nI've thought about this and even hesitated before opening a feature request. I don't agree that it's an XY problem and I think I have provided enough arguments as to why it's a Neovim problem, not a plugin problem. Furthermore, it seems to me like the XY problem seems to imply that there is already a better way to solve the problem. If it's not the \"don't use a pluginle\" kind of solution, please state it and I will happily implement it.\r\n\r\n> it looks like an XY problem to me, or tunnel vision\r\n\r\nHow is giving users more control over keybindings an XY problem?\r\n\r\n> And it absolutely is critical that users insist on well-behaved plugins, not private workarounds.\r\n\r\n'Well-behaved' is vague at best. The fact that this situation even exists proves irrefutably that your definition of well-behaved is not universally accepted. You can't expect every plugin to do exactly what you want by default. You don't expect your editor to do so either. This is why we configure them. How is it a workaround to give users the option of making sure what they set in their configs is exactly what Neovim does?\r\n\r\n> Trotting that out as a catch-all justification is... ahem\r\n\r\nIt's not a catch-all. Part of extensibility is choosing what you want to extend. Otherwise, you'd just use some of the \"full featured\" programs that do everything under the sun poorly and call it a day. What point is there in \"extending\" your editor in a way that you don't want it to be extended?\r\n\r\n> And it's contradictory here since you are asking for the extensibility to be limited.\r\n\r\nI'm not asking for the extensibility to be limited. I have never asked for such a thing. This is an intentional misinterpretation of what I said. I have asked for the ability to set boundaries. This is not contradicting anything.\r\n\r\nYou added the \"closed:duplicate\" label. Please indicate what issue this feature request is a duplicate of. Is it #16313?\r\n\r\nUnfortunately, this written form of the message may not convey the tone of voice that I wish it does. To make this abundantly clear: I am not trying to argue - I have no interest in that; I am trying to help. If you think I'm wrong, please tell me in what way I'm wrong.",
            "created_at": "2023-09-12T17:12:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/25101#issuecomment-1716124539",
            "id": 1716124539,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25101",
            "node_id": "IC_kwDOAPphoM5mSft7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716124539/reactions"
            },
            "updated_at": "2023-09-12T17:12:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716124539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87570912?v=4",
                "events_url": "https://api.github.com/users/nicolasdumitru/events{/privacy}",
                "followers_url": "https://api.github.com/users/nicolasdumitru/followers",
                "following_url": "https://api.github.com/users/nicolasdumitru/following{/other_user}",
                "gists_url": "https://api.github.com/users/nicolasdumitru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nicolasdumitru",
                "id": 87570912,
                "login": "nicolasdumitru",
                "node_id": "MDQ6VXNlcjg3NTcwOTEy",
                "organizations_url": "https://api.github.com/users/nicolasdumitru/orgs",
                "received_events_url": "https://api.github.com/users/nicolasdumitru/received_events",
                "repos_url": "https://api.github.com/users/nicolasdumitru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nicolasdumitru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nicolasdumitru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nicolasdumitru"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I totally agree with Justin on this.\r\n\r\n> I don't agree that it's an XY problem and I think I have provided enough arguments as to why it's a Neovim problem, not a plugin problem. \r\n\r\nSorry, but I don't think the arguments have much strength and to me appear quite narrowly focused.\r\n\r\nNeorg is not being _well-behaved_ in this case. If the user sets up mappings, then Neorg shouldn't clobber them. If it insists on it, then that's just a limitation of Neorg you need to live with and doesn't justify adding some convoluted mechanism to avoid this.\r\n\r\n> I have asked for the ability to set boundaries. \r\n\r\nThis doesn't align with anything in Neovim. Neovim provides extensibility, not guard railing. If a plugin does something you don't want it to, either avoid using the plugin or change it.\r\n\r\n> The \"force\" keybinding argument should:\r\n>\r\n> -    only be usable by the user in command mode and in the user configuration directories ($XDG_CONFIG_HOME/nvim, $XDG_CONFIG_DIRS[1]/nvim, $XDG_CONFIG_DIRS[2]/nvim, $XDG_CONFIG_DIRS[2]/nvim/after, $XDG_CONFIG_DIRS[1]/nvim/after, $XDG_CONFIG_HOME/nvim/after\r\n    , as :h rtp lists them), NOT all the directories in the 'runtimepath'. If plugins can use it, it defeats its own purpose.\r\n\r\nSorry but this is not a good proposal. Neovim is completely agnostic to anything in `runtimepath`. This also means there is zero distinction between user config and plugins. Adding any form of special casing is messy, confusing and unnecessary.\r\n\r\n> -   determine Neovim to only do what the user defined (as specified above) when the keybinding is pressed. Not anything else.\r\n\r\nWhat does this even mean? This seems to imply that you think user config and plugins are distinct, which is not the case.\r\n\r\n\r\n",
            "created_at": "2023-09-12T18:12:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/25101#issuecomment-1716201137",
            "id": 1716201137,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25101",
            "node_id": "IC_kwDOAPphoM5mSyax",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716201137/reactions"
            },
            "updated_at": "2023-09-12T18:14:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716201137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "> This doesn't align with anything in Neovim. Neovim provides extensibility, not guard railing. If a plugin does something you don't want it to, either avoid using the plugin or change it.\r\n\r\nThis is not as easy as it sounds.\r\n\r\n@lewis6991 I was, indeed, under the impression that user config and plugins are distinct. I now understand that what I thought should have been fairly trivial in terms of implementation is actually fairly complex. This is not what I had hoped for, but I'll deal with it. Thanks for the clarification.",
            "created_at": "2023-09-12T19:05:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/25101#issuecomment-1716269511",
            "id": 1716269511,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25101",
            "node_id": "IC_kwDOAPphoM5mTDHH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716269511/reactions"
            },
            "updated_at": "2023-09-12T19:05:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716269511",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87570912?v=4",
                "events_url": "https://api.github.com/users/nicolasdumitru/events{/privacy}",
                "followers_url": "https://api.github.com/users/nicolasdumitru/followers",
                "following_url": "https://api.github.com/users/nicolasdumitru/following{/other_user}",
                "gists_url": "https://api.github.com/users/nicolasdumitru/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nicolasdumitru",
                "id": 87570912,
                "login": "nicolasdumitru",
                "node_id": "MDQ6VXNlcjg3NTcwOTEy",
                "organizations_url": "https://api.github.com/users/nicolasdumitru/orgs",
                "received_events_url": "https://api.github.com/users/nicolasdumitru/received_events",
                "repos_url": "https://api.github.com/users/nicolasdumitru/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nicolasdumitru/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nicolasdumitru/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nicolasdumitru"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What might be feasible is copying the `default` feature from `:highlight`.\r\n\r\n```vimhelp\r\n\t\t\t\t\t*:hi-default* *:highlight-default*\r\nThe [default] argument is used for setting the default highlighting for a\r\ngroup.\tIf highlighting has already been specified for the group the command\r\nwill be ignored.  Also when there is an existing link.\r\n\r\nUsing [default] is especially useful to overrule the highlighting of a\r\nspecific syntax file.  For example, the C syntax file contains:  \r\n\t:highlight default link cComment Comment\r\nIf you like Question highlighting for C comments, put this in your vimrc file:  \r\n\t:highlight link cComment Question\r\nWithout the \"default\" in the C syntax file, the highlighting would be\r\noverruled when the syntax file is loaded.\r\n```\r\n\r\nSo plugins could _choose_ to apply their mappings with `default = true` as to not clobber any user mappings. This would have the same effect as:\r\n\r\n```lua\r\nif vim.fn.maparg(...) == 0 then\r\n    vim.keymap.set(...)\r\nend\r\n```\r\n\r\nbut just more convenient with less boilerplate.",
            "created_at": "2023-09-12T19:14:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/25101#issuecomment-1716279991",
            "id": 1716279991,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25101",
            "node_id": "IC_kwDOAPphoM5mTFq3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716279991/reactions"
            },
            "updated_at": "2023-09-12T19:28:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716279991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I was, indeed, under the impression that user config and plugins are distinct. I now understand that what I thought should have been fairly trivial in terms of implementation is actually fairly complex.\r\n\r\nYeah that's why https://github.com/neovim/neovim/issues/16313#issuecomment-968265007 covers this topic. The general idea is that plugins (and user config) can \"own\" a namespace. Just like an autocmd group can be deleted with one command, you could delete a plugin's mappings with one command. ",
            "created_at": "2023-09-12T21:13:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/25101#issuecomment-1716450663",
            "id": 1716450663,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25101",
            "node_id": "IC_kwDOAPphoM5mTvVn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716450663/reactions"
            },
            "updated_at": "2023-09-12T21:13:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716450663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25101/comments",
    "created_at": "2023-09-11T22:16:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25101/events",
    "html_url": "https://github.com/neovim/neovim/issues/25101",
    "id": 1891355506,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as duplicates of other issues",
            "id": 3221613764,
            "name": "closed:duplicate",
            "node_id": "MDU6TGFiZWwzMjIxNjEzNzY0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25101/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5wu8ty",
    "number": 25101,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25101/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25101/timeline",
    "title": "Enable user keybindings to forcefully override plugin keybindings",
    "updated_at": "2023-09-12T21:13:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25101",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/87570912?v=4",
        "events_url": "https://api.github.com/users/nicolasdumitru/events{/privacy}",
        "followers_url": "https://api.github.com/users/nicolasdumitru/followers",
        "following_url": "https://api.github.com/users/nicolasdumitru/following{/other_user}",
        "gists_url": "https://api.github.com/users/nicolasdumitru/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nicolasdumitru",
        "id": 87570912,
        "login": "nicolasdumitru",
        "node_id": "MDQ6VXNlcjg3NTcwOTEy",
        "organizations_url": "https://api.github.com/users/nicolasdumitru/orgs",
        "received_events_url": "https://api.github.com/users/nicolasdumitru/received_events",
        "repos_url": "https://api.github.com/users/nicolasdumitru/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nicolasdumitru/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nicolasdumitru/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nicolasdumitru"
    }
}