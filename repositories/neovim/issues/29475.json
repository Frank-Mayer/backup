{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI'm experiencing zombie process when exiting neovim even though detach is set to false.\r\n```pstree -p``` when neovim is still open: \r\n\r\n![image](https://github.com/neovim/neovim/assets/8473233/d2d52ecd-3878-4c3a-be2a-b6757a007a80)\r\n\r\n```pstree -p``` when neovim is closed:\r\n\r\n![image](https://github.com/neovim/neovim/assets/8473233/99351765-ac01-435b-94b2-7be3486e8269)\n\n### Steps to reproduce\n\nnvim --clean\r\n:lua vim.system({ \"kubectl\", \"proxy\", \"--port=0\" }, {detach = false})\r\n:q!\n\n### Expected behavior\n\nI'm expecting the child process to be terminated when the parent is terminated if detached is set to false.\r\nIf I'm understanding the docs about detached correctly, I need to set it to true to make it live beyond the parents lifetime:\r\n```\r\nâ€¢ detach: (boolean) If true, spawn the child process in a\r\ndetached state - this will make it a process group\r\nleader, and will effectively enable the child to keep\r\nrunning after the parent exits. Note that the child\r\nprocess will still keep the parent's event loop alive\r\nunless the parent process calls |uv.unref()| on the\r\nchild's process handle.\r\n```\r\n\r\nI have a workaround to manually kill it on VimLeavePre but I doubt that will run if neovim crashes:\r\n```lua\r\n  vim.api.nvim_create_autocmd(\"VimLeavePre\", {\r\n    callback = M.stop_kubectl_proxy(),\r\n  })\r\n```\n\n### Neovim version (nvim -v)\n\nv0.11.0-dev\n\n### Vim (not Nvim) behaves the same?\n\nI don't know\n\n### Operating system/version\n\nWindows 11 (WSL)\n\n### Terminal name/version\n\nWezterm/20240203-110809-5046fc22\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nsudo apt-get install neovim",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm not sure `detach` has the same semantics on windows. I'm not sure how WSL plays into this. One would think it should behave as Linux does.\n\n> I have a workaround to manually kill it on VimLeavePre but I doubt that will run if neovim crashes:\n\nEven with the correct behaviour of detach, there's little we can do to ensure all processes are killed in the event of a crash.",
            "created_at": "2024-06-24T21:00:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/29475#issuecomment-2187394495",
            "id": 2187394495,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29475",
            "node_id": "IC_kwDOAPphoM6CYP2_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2187394495/reactions"
            },
            "updated_at": "2024-06-24T21:04:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2187394495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I'm not sure detach has the same semantics on windows. I'm not sure how WSL plays into this. One would think it should behave as Linux does. \r\n\r\nYeah, just verified in OSX and it also leaves the process alive after neovim shutsdown.\r\n\r\n> Even with the correct behaviour of detach, there's little we can do to ensure all processes are killed in the event of a crash.\r\n\r\nI understand, would be nice to handle it in the normal shutdown though.",
            "created_at": "2024-07-02T20:20:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/29475#issuecomment-2204325584",
            "id": 2204325584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29475",
            "node_id": "IC_kwDOAPphoM6DY1bQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2204325584/reactions"
            },
            "updated_at": "2024-07-02T20:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2204325584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8473233?v=4",
                "events_url": "https://api.github.com/users/Ramilito/events{/privacy}",
                "followers_url": "https://api.github.com/users/Ramilito/followers",
                "following_url": "https://api.github.com/users/Ramilito/following{/other_user}",
                "gists_url": "https://api.github.com/users/Ramilito/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Ramilito",
                "id": 8473233,
                "login": "Ramilito",
                "node_id": "MDQ6VXNlcjg0NzMyMzM=",
                "organizations_url": "https://api.github.com/users/Ramilito/orgs",
                "received_events_url": "https://api.github.com/users/Ramilito/received_events",
                "repos_url": "https://api.github.com/users/Ramilito/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Ramilito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Ramilito/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Ramilito"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yeah, just verified in OSX and it also leaves the process alive after neovim shutsdown.\r\n\r\nThat's surprising. My understanding was the `detach=false` would always kill all immediate child jobs of Nvim when it is closed (even in a crash). This is supposed to be handled by the OS.\r\n\r\nCan you test with a simpler process? `{ \"kubectl\", \"proxy\", \"--port=0\" }` may be launching its own child processes, which Nvim cannot manage. If that's the case, then you may actually need `deatch=true`.",
            "created_at": "2024-07-03T09:01:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/29475#issuecomment-2205475882",
            "id": 2205475882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29475",
            "node_id": "IC_kwDOAPphoM6DdOQq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2205475882/reactions"
            },
            "updated_at": "2024-07-03T09:01:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2205475882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yeah, just verified in OSX and it also leaves the process alive after neovim shutsdown.\r\n\r\nThe OS will not automatically kill an orphaned process. It is reparented to the init process which waits for the orphaned process to exit. If a child process is connected to a pipe from the parent process (as is usually the case for an LSP server), then the child process will exit when its parent dies because the pipe is closed. But if this isnâ€™t the case then the child will happily run forever until itâ€™s told to stop.\r\n\r\nThis is the case for regular processes anyway, I am not sure what magic libuv does behind the curtain though. ",
            "created_at": "2024-07-03T22:36:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/29475#issuecomment-2207424086",
            "id": 2207424086,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29475",
            "node_id": "IC_kwDOAPphoM6Dkp5W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2207424086/reactions"
            },
            "updated_at": "2024-07-03T23:34:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2207424086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29475/comments",
    "created_at": "2024-06-24T20:38:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29475/events",
    "html_url": "https://github.com/neovim/neovim/issues/29475",
    "id": 2371050678,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29475/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6NU1y2",
    "number": 29475,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29475/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29475/timeline",
    "title": "vim.system zombie process ",
    "updated_at": "2024-07-03T23:34:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29475",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8473233?v=4",
        "events_url": "https://api.github.com/users/Ramilito/events{/privacy}",
        "followers_url": "https://api.github.com/users/Ramilito/followers",
        "following_url": "https://api.github.com/users/Ramilito/following{/other_user}",
        "gists_url": "https://api.github.com/users/Ramilito/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Ramilito",
        "id": 8473233,
        "login": "Ramilito",
        "node_id": "MDQ6VXNlcjg0NzMyMzM=",
        "organizations_url": "https://api.github.com/users/Ramilito/orgs",
        "received_events_url": "https://api.github.com/users/Ramilito/received_events",
        "repos_url": "https://api.github.com/users/Ramilito/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Ramilito/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Ramilito/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Ramilito"
    }
}