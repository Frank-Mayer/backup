{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nHey I've been trying to format the diagnostics messages but I'm getting this error idk what's causing this error coz this code was working for nvim 0.6 when I used to use neovim \r\n![Screenshot_20240614_230617_Termux](https://github.com/neovim/neovim/assets/98379782/89774725-de2e-4792-856d-79dae0a31857)\r\n\n\n### Steps to reproduce\n\nJust reproduce an error in the code and do `:lua vim.diagnostic.goto_next()` and the error pops up\n\n### Expected behavior\n\nIt should be showing the diagnostics \n\n### Neovim version (nvim -v)\n\nNVIM v0.9.5\n\n### Vim (not Nvim) behaves the same?\n\nIdk vim has diagnostics and lsp support \n\n### Operating system/version\n\nAndroid \n\n### Terminal name/version\n\nTermux\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nPkg",
    "closed_at": "2024-06-17T20:24:42Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "This is my config file's code \r\n```lua\r\nreturn {\r\n\t{\r\n\t\t\"neovim/nvim-lspconfig\",\r\n\t\tdependencies = {\r\n\t\t\t\"hrsh7th/cmp-nvim-lsp\",\r\n\t\t\t\"b0o/schemastore.nvim\",\r\n\t\t\t{\r\n\t\t\t\t\"kosayoda/nvim-lightbulb\",\r\n\t\t\t\tconfig = function()\r\n\t\t\t\t\tlocal lightbulb = require(\"nvim-lightbulb\")\r\n\t\t\t\t\tlightbulb.setup({\r\n\t\t\t\t\t\tautocmd = { enabled = true },\r\n\t\t\t\t\t\tsign = { enable = false },\r\n\t\t\t\t\t\tfloat = { enable = true },\r\n\t\t\t\t\t})\r\n\t\t\t\tend,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"simrat39/symbols-outline.nvim\",\r\n\t\t\t\tcmd = \"SymbolsOutline\",\r\n\t\t\t\tconfig = function()\r\n\t\t\t\t\trequire(\"symbols-outline\").setup()\r\n\t\t\t\tend,\r\n\t\t\t},\r\n\t\t},\r\n\t\tconfig = function()\r\n\t\t\tlocal cmp_nvim_lsp = require(\"cmp_nvim_lsp\")\r\n\t\t\tlocal lspconfig = require(\"lspconfig\")\r\n\t\t\tlocal capabilities = cmp_nvim_lsp.default_capabilities()\r\n\r\n\t\t\tlocal function on_attach(client, bufnr)\r\n\t\t\t\tlocal function set_keymap(mode, lhs, rhs)\r\n\t\t\t\t\tvim.api.nvim_buf_set_keymap(bufnr, mode, lhs, rhs, { silent = true, noremap = true })\r\n\t\t\t\tend\r\n\r\n\t\t\t\tset_keymap(\"n\", \"K\", \":lua vim.lsp.buf.hover()<CR>\")\r\n\t\t\t\tset_keymap(\"n\", \"gd\", \":lua vim.lsp.buf.definition()<CR>\")\r\n\t\t\t\tset_keymap(\"n\", \"gI\", \":lua vim.lsp.buf.implementation()<CR>\")\r\n\t\t\t\tset_keymap(\"n\", \"gk\", \":lua vim.diagnostic.goto_next()<CR>\")\r\n\t\t\t\tset_keymap(\"n\", \"gj\", \":lua vim.diagnostic.goto_prev()<CR>\")\r\n\t\t\t\tset_keymap(\"n\", \"gR\", \":lua vim.lsp.buf.references()<CR>\")\r\n\t\t\t\tset_keymap(\"n\", \"gr\", \":lua vim.lsp.buf.rename()<CR>\")\r\n\t\t\t\tset_keymap(\"n\", \"ga\", \":lua vim.lsp.buf.code_action()<CR>\")\r\n\t\t\t\tset_keymap(\"i\", \"<C-s>\", \"<cmd>lua vim.lsp.buf.signature_help()<CR>\")\r\n\t\t\t\tset_keymap(\"n\", \"gs\", \":SymbolsOutline<CR>\")\r\n\r\n\t\t\t\tvim.notify(\"Language Server: \" .. client.name .. \" is started!\", \"INFO\", {\r\n\t\t\t\t\ttitle = \"Language Server Protocol\",\r\n\t\t\t\t\ticon = \"\",\r\n\t\t\t\t\thide_from_history = true,\r\n\t\t\t\t})\r\n\t\t\tend\r\n\r\n\t\t\t-- JAVASCRIPT\r\n\t\t\tlspconfig.tsserver.setup({\r\n\t\t\t\ton_attach = on_attach,\r\n\t\t\t\tcapabilities = capabilities,\r\n\t\t\t\tsettings = {\r\n\t\t\t\t\tcompletions = {\r\n\t\t\t\t\t\tcompleteFunctionCalls = true,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tinit_options = {\r\n\t\t\t\t\tpreferences = {\r\n\t\t\t\t\t\tincludeCompletionsWithSnippetText = true,\r\n\t\t\t\t\t\tincludeCompletionsForImportStatements = true,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tsingle_file_support = true,\r\n\t\t\t})\r\n\r\n\t\t\t-- JSON\r\n\t\t\tlspconfig.jsonls.setup({\r\n\t\t\t\ton_attach = on_attach,\r\n\t\t\t\tcapabilities = capabilities,\r\n\t\t\t\tinit_options = { provideFormatter = false },\r\n\t\t\t\tsingle_file_support = true,\r\n\t\t\t\tsettings = {\r\n\t\t\t\t\tjson = { schemas = require(\"schemastore\").json.schemas() },\r\n\t\t\t\t},\r\n\t\t\t})\r\n\r\n\t\t\t-- HTML & CSS\r\n\t\t\tlspconfig.cssls.setup({\r\n\t\t\t\ton_attach = on_attach,\r\n\t\t\t\tcapabilities = capabilities,\r\n\t\t\t})\r\n\t\t\tlspconfig.html.setup({\r\n\t\t\t\ton_attach = on_attach,\r\n\t\t\t\tcapabilities = capabilities,\r\n\t\t\t})\r\n\r\n\t\t\t-- LUA\r\n\t\t\tlspconfig.lua_ls.setup({\r\n\t\t\t\ton_attach = on_attach,\r\n\t\t\t\tcapabilities = capabilities,\r\n\t\t\t\tsettings = {\r\n\t\t\t\t\tLua = {\r\n\t\t\t\t\t\tdiagnostics = {\r\n\t\t\t\t\t\t\tglobals = { \"vim\", \"it\", \"describe\", \"before_each\", \"self\" },\r\n\t\t\t\t\t\t\tdisable = { \"trailing-space\", \"deprecated\", \"lowercase-global\" },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\truntime = { version = \"LuaJIT\", path = vim.split(package.path, \";\") },\r\n\t\t\t\t\t\tworkspace = {\r\n\t\t\t\t\t\t\tlibrary = {\r\n\t\t\t\t\t\t\t\t[vim.fn.expand(\"$VIMRUNTIME/lua\")] = true,\r\n\t\t\t\t\t\t\t\t[vim.fn.expand(\"$VIMRUNTIME/lua/vim/lsp\")] = true,\r\n\t\t\t\t\t\t\t\t[vim.fn.stdpath(\"config\") .. \"/lua\"] = true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcompletion = {\r\n\t\t\t\t\t\tshowWord = \"Disable\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tIntelliSense = {\r\n\t\t\t\t\t\ttraceBeSetted = true,\r\n\t\t\t\t\t\ttraceFieldInject = true,\r\n\t\t\t\t\t\ttraceLocalSet = true,\r\n\t\t\t\t\t\ttraceReturn = true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\thint = {\r\n\t\t\t\t\t\tarrayIndex = \"Auto\",\r\n\t\t\t\t\t\tenable = true,\r\n\t\t\t\t\t\tparamName = \"All\",\r\n\t\t\t\t\t\tparamType = true,\r\n\t\t\t\t\t\tsetType = false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\thover = {\r\n\t\t\t\t\t\tenable = true,\r\n\t\t\t\t\t\tenumsLimit = 5,\r\n\t\t\t\t\t\tpreviewFields = 20,\r\n\t\t\t\t\t\tviewNumber = true,\r\n\t\t\t\t\t\tviewString = true,\r\n\t\t\t\t\t\tviewStringMax = 1000,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmisc = { parameters = { \"self\" } },\r\n\t\t\t\t\tsemantic = {\r\n\t\t\t\t\t\tannotation = true,\r\n\t\t\t\t\t\tenable = true,\r\n\t\t\t\t\t\tkeyword = true,\r\n\t\t\t\t\t\tvariable = true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\twindow = { progressBar = true, statusBar = true },\r\n\t\t\t\t\tformat = { enable = true },\r\n\t\t\t\t},\r\n\t\t\t})\r\n\r\n\t\t\t-- EMMET\r\n\t\t\tlspconfig.emmet_language_server.setup({\r\n\t\t\t\ton_attach = on_attach,\r\n\t\t\t\tcapabilities = capabilities,\r\n\t\t\t})\r\n\r\n\t\t\t-- CLANGD\r\n\t\t\tlspconfig.clangd.setup({\r\n\t\t\t\ton_attach = on_attach,\r\n\t\t\t\tcapabilities = capabilities,\r\n\t\t\t})\r\n\r\n\t\t\tlocal function prefix(diagnostic, i, total)\r\n\t\t\t\tlocal icon, highlight\r\n\t\t\t\tif diagnostic.severity == 1 then\r\n\t\t\t\t\ticon = \"\"\r\n\t\t\t\t\thighlight = \"DiagnosticError\"\r\n\t\t\t\telseif diagnostic.severity == 2 then\r\n\t\t\t\t\ticon = \"\"\r\n\t\t\t\t\thighlight = \"DiagnosticWarn\"\r\n\t\t\t\telseif diagnostic.severity == 3 then\r\n\t\t\t\t\ticon = \"\"\r\n\t\t\t\t\thighlight = \"DiagnosticInfo\"\r\n\t\t\t\telseif diagnostic.severity == 4 then\r\n\t\t\t\t\ticon = \"\"\r\n\t\t\t\t\thighlight = \"DiagnosticHint\"\r\n\t\t\t\tend\r\n\t\t\t\treturn i .. \"/\" .. total .. \" \" .. icon .. \"  \", highlight\r\n\t\t\tend\r\n\r\n\t\t\tlocal function wrap_options(custom, handler)\r\n\t\t\t\treturn function(opts)\r\n\t\t\t\t\topts = opts and vim.tbl_extend(opts, custom) or custom\r\n\t\t\t\t\tif type(handler) == \"string\" then\r\n\t\t\t\t\t\trequire(\"telescope.builtin\")[handler](opts)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\thandler(opts)\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\r\n\t\t\tlocal codes = {\r\n\t\t\t\tno_matching_function = {\r\n\t\t\t\t\tmessage = \" Can't find a matching function\",\r\n\t\t\t\t\t\"redundant-parameter\",\r\n\t\t\t\t\t\"ovl_no_viable_function_in_call\",\r\n\t\t\t\t},\r\n\t\t\t\tempty_block = { message = \" That shouldn't be empty here\", \"empty-block\" },\r\n\t\t\t\tmissing_symbol = {\r\n\t\t\t\t\tmessage = \" Here should be a symbol\",\r\n\t\t\t\t\t\"miss-symbol\",\r\n\t\t\t\t},\r\n\t\t\t\texpected_semi_colon = {\r\n\t\t\t\t\tmessage = \" Remember the `;` or `,`\",\r\n\t\t\t\t\t\"expected_semi_declaration\",\r\n\t\t\t\t\t\"miss-sep-in-table\",\r\n\t\t\t\t\t\"invalid_token_after_toplevel_declarator\",\r\n\t\t\t\t},\r\n\t\t\t\tredefinition = {\r\n\t\t\t\t\tmessage = \" That variable was defined before\",\r\n\t\t\t\t\t\"redefinition\",\r\n\t\t\t\t\t\"redefined-local\",\r\n\t\t\t\t},\r\n\t\t\t\tno_matching_variable = {\r\n\t\t\t\t\tmessage = \" Can't find that variable\",\r\n\t\t\t\t\t\"undefined-global\",\r\n\t\t\t\t\t\"reportUndefinedVariable\",\r\n\t\t\t\t},\r\n\t\t\t\ttrailing_whitespace = {\r\n\t\t\t\t\tmessage = \" Remove trailing whitespace\",\r\n\t\t\t\t\t\"trailing-whitespace\",\r\n\t\t\t\t\t\"trailing-space\",\r\n\t\t\t\t},\r\n\t\t\t\tunused_variable = {\r\n\t\t\t\t\tmessage = \" Don't define variables you don't use\",\r\n\t\t\t\t\t\"unused-local\",\r\n\t\t\t\t},\r\n\t\t\t\tunused_function = {\r\n\t\t\t\t\tmessage = \" Don't define functions you don't use\",\r\n\t\t\t\t\t\"unused-function\",\r\n\t\t\t\t},\r\n\t\t\t\tuseless_symbols = {\r\n\t\t\t\t\tmessage = \" Remove that useless symbols\",\r\n\t\t\t\t\t\"unknown-symbol\",\r\n\t\t\t\t},\r\n\t\t\t\twrong_type = {\r\n\t\t\t\t\tmessage = \" Try to use the correct types\",\r\n\t\t\t\t\t\"init_conversion_failed\",\r\n\t\t\t\t},\r\n\t\t\t\tundeclared_variable = {\r\n\t\t\t\t\tmessage = \" Have you delcared that variable somewhere?\",\r\n\t\t\t\t\t\"undeclared_var_use\",\r\n\t\t\t\t},\r\n\t\t\t\tlowercase_global = {\r\n\t\t\t\t\tmessage = \" Should that be a global? (if so make it uppercase)\",\r\n\t\t\t\t\t\"lowercase-global\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\t\tlocal function format(diagnostic)\r\n\t\t\t\tif diagnostic.user_data == nil then\r\n\t\t\t\t\treturn diagnostic.message\r\n\t\t\t\telseif vim.tbl_isempty(diagnostic.user_data) then\r\n\t\t\t\t\treturn diagnostic.message\r\n\t\t\t\tend\r\n\t\t\t\tlocal code = diagnostic.user_data.lsp.code\r\n\t\t\t\tfor _, table in pairs(codes) do\r\n\t\t\t\t\tif vim.tbl_contains(table, code) then\r\n\t\t\t\t\t\treturn table.message\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\t\t-- Diagnostics Setup\r\n\t\t\tvim.diagnostic.config({\r\n\t\t\t\tsigns = false,\r\n\t\t\t\tvirtual_text = false,\r\n\t\t\t\tupdate_in_insert = false,\r\n\t\t\t\tunderline = true,\r\n\t\t\t\tfloat = {\r\n\t\t\t\t\tfocusable = false,\r\n\t\t\t\t\tborder = \"rounded\",\r\n\t\t\t\t\tformat = format,\r\n\t\t\t\t\tscope = \"cursor\",\r\n\t\t\t\t\tsource = \"if_many\",\r\n\t\t\t\t\theader = { \"Cursor Diagnostics: \", \"DiagnosticInfo\" },\r\n\t\t\t\t\tprefix = prefix,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\r\n\t\t\t-- Hover\r\n\t\t\tvim.lsp.handlers[\"textDocument/hover\"] = vim.lsp.with(vim.lsp.handlers.hover, {\r\n\t\t\t\tborder = \"rounded\",\r\n\t\t\t})\r\n\r\n\t\t\t-- Signature Help\r\n\t\t\tvim.lsp.handlers[\"textDocument/signatureHelp\"] = vim.lsp.with(vim.lsp.handlers.signature_help, {\r\n\t\t\t\tborder = \"rounded\",\r\n\t\t\t})\r\n\r\n\t\t\t-- Reference\r\n\t\t\t-- Reference: https://github.com/rcarriga/dotfiles/blob/master/.config/nvim/lua/config/lsp/handlers.lua#L16\r\n\t\t\tvim.lsp.handlers[\"textDocument/references\"] =\r\n\t\t\t\twrap_options({ layout_strategy = \"vertical\" }, \"lsp_references\")\r\n\r\n\t\t\t-- Document Symboll\r\n\t\t\t-- Reference: https://github.com/rcarriga/dotfiles/blob/master/.config/nvim/lua/config/lsp/handlers.lua#L20\r\n\t\t\tvim.lsp.handlers[\"textDocument/documentSymbol\"] = require(\"telescope.builtin\").lsp_document_symbols\r\n\r\n\t\t\t-- Defination\r\n\t\t\t-- \tlocal function goto_definition(split_cmd)\r\n\t\t\t-- \t\tlocal util = vim.lsp.util\r\n\t\t\t-- \t\tlocal log = require(\"vim.lsp.log\")\r\n\t\t\t-- \t\tlocal api = vim.api\r\n\t\t\t--\r\n\t\t\t-- \t\tlocal handler = function(_, result, ctx)\r\n\t\t\t-- \t\t\tif result == nil or vim.tbl_isempty(result) then\r\n\t\t\t-- \t\t\t\tlocal _ = log.info() and log.info(ctx.method, \"No location found\")\r\n\t\t\t-- \t\t\t\treturn nil\r\n\t\t\t-- \t\t\tend\r\n\t\t\t--\r\n\t\t\t-- \t\t\tif split_cmd then\r\n\t\t\t-- \t\t\t\tvim.cmd(split_cmd)\r\n\t\t\t-- \t\t\tend\r\n\t\t\t--\r\n\t\t\t-- \t\t\tif vim.tbl_islist(result) then\r\n\t\t\t-- \t\t\t\tutil.jump_to_location(result[1])\r\n\t\t\t--\r\n\t\t\t-- \t\t\t\tif #result > 1 then\r\n\t\t\t-- \t\t\t\t\tutil.set_qflist(util.locations_to_items(result))\r\n\t\t\t-- \t\t\t\t\tapi.nvim_command(\"copen\")\r\n\t\t\t-- \t\t\t\t\tapi.nvim_command(\"wincmd p\")\r\n\t\t\t-- \t\t\t\tend\r\n\t\t\t-- \t\t\telse\r\n\t\t\t-- \t\t\t\tutil.jump_to_location(result)\r\n\t\t\t-- \t\t\tend\r\n\t\t\t-- \t\tend\r\n\t\t\t--\r\n\t\t\t-- \t\treturn handler\r\n\t\t\t-- \tend\r\n\t\t\t--\r\n\t\t\t-- \tvim.lsp.handlers[\"textDocument/definition\"] = goto_definition(\"vsplit\")\r\n\t\tend,\r\n\t},\r\n}\r\n\r\n```",
            "created_at": "2024-06-17T18:01:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/29378#issuecomment-2174009424",
            "id": 2174009424,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29378",
            "node_id": "IC_kwDOAPphoM6BlMBQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174009424/reactions"
            },
            "updated_at": "2024-06-17T18:02:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174009424",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/98379782?v=4",
                "events_url": "https://api.github.com/users/HyperAfnan/events{/privacy}",
                "followers_url": "https://api.github.com/users/HyperAfnan/followers",
                "following_url": "https://api.github.com/users/HyperAfnan/following{/other_user}",
                "gists_url": "https://api.github.com/users/HyperAfnan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HyperAfnan",
                "id": 98379782,
                "login": "HyperAfnan",
                "node_id": "U_kgDOBd0oBg",
                "organizations_url": "https://api.github.com/users/HyperAfnan/orgs",
                "received_events_url": "https://api.github.com/users/HyperAfnan/received_events",
                "repos_url": "https://api.github.com/users/HyperAfnan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HyperAfnan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HyperAfnan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HyperAfnan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not going to debug your config. If someone can find a bug in open_float or goto_next then maybe this can get fixed. Otherwise this needs a more minimal repro outline.\r\n\r\n> NVIM v0.9.5\r\n\r\n0.10 is the latest version",
            "created_at": "2024-06-17T20:24:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/29378#issuecomment-2174359717",
            "id": 2174359717,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29378",
            "node_id": "IC_kwDOAPphoM6Bmhil",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174359717/reactions"
            },
            "updated_at": "2024-06-17T20:24:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174359717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Not going to debug your config. If someone can find a bug in open_float or goto_next then maybe this can get fixed. Otherwise this needs a more minimal repro outline.\r\n\r\nThe issue is not in open_float if I just enable virtual text the error will still popup\r\nThe issue is in the formatting\r\n\r\n> 0.10 is the latest version\r\n\r\n0.9.5 is the latest version available in termux-package",
            "created_at": "2024-06-18T00:28:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/29378#issuecomment-2174680734",
            "id": 2174680734,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29378",
            "node_id": "IC_kwDOAPphoM6Bnv6e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174680734/reactions"
            },
            "updated_at": "2024-06-18T00:28:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174680734",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/98379782?v=4",
                "events_url": "https://api.github.com/users/HyperAfnan/events{/privacy}",
                "followers_url": "https://api.github.com/users/HyperAfnan/followers",
                "following_url": "https://api.github.com/users/HyperAfnan/following{/other_user}",
                "gists_url": "https://api.github.com/users/HyperAfnan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HyperAfnan",
                "id": 98379782,
                "login": "HyperAfnan",
                "node_id": "U_kgDOBd0oBg",
                "organizations_url": "https://api.github.com/users/HyperAfnan/orgs",
                "received_events_url": "https://api.github.com/users/HyperAfnan/received_events",
                "repos_url": "https://api.github.com/users/HyperAfnan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HyperAfnan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HyperAfnan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HyperAfnan"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29378/comments",
    "created_at": "2024-06-17T17:59:57Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29378/events",
    "html_url": "https://github.com/neovim/neovim/issues/29378",
    "id": 2357915312,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29378/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Miu6w",
    "number": 29378,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29378/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29378/timeline",
    "title": "Error while showing diagnostics  open_float",
    "updated_at": "2024-06-18T00:28:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29378",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/98379782?v=4",
        "events_url": "https://api.github.com/users/HyperAfnan/events{/privacy}",
        "followers_url": "https://api.github.com/users/HyperAfnan/followers",
        "following_url": "https://api.github.com/users/HyperAfnan/following{/other_user}",
        "gists_url": "https://api.github.com/users/HyperAfnan/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/HyperAfnan",
        "id": 98379782,
        "login": "HyperAfnan",
        "node_id": "U_kgDOBd0oBg",
        "organizations_url": "https://api.github.com/users/HyperAfnan/orgs",
        "received_events_url": "https://api.github.com/users/HyperAfnan/received_events",
        "repos_url": "https://api.github.com/users/HyperAfnan/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/HyperAfnan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/HyperAfnan/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/HyperAfnan"
    }
}