{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nUsing `gh pr view` or `gh issue view` to see pr/issue on `:terminal`, fragments of the ANSI Escape code (like `11;rgb:0000/0000/0000`) are put in prompt.\r\n(And `gh [pr|issue] view` was failed)\r\n\r\n\r\n```console\r\n$ gh --repo neovim/neovim issue view 1\r\nFix build #1\r\nClosed • ashleyh opened about 10 years ago • 1 comment\r\n\r\n\r\n  I've just tweaked things until it builds (and the tests pass) on:                                                   \r\n                                                                                                                      \r\n  • my Arch desktop                                                                                                   \r\n  • my OSX laptop                                                                                                     \r\n  • a fresh Ubuntu 12.04 (LTS) container                                                                              \r\n  • a fresh Ubuntu 13.10 container                                                                                    \r\n                                                                                                                      \r\n  There is some nonsense that means gettext has to be disabled on OSX for now.                                        \r\n\r\n\r\ntarruda (Member) • Feb  1, 2014 • Newest comment\r\n\r\n  I squashed and merged, thanks                                                                                       \r\n\r\n\r\nView this issue on GitHub: https://github.com/neovim/neovim/pull/1\r\n$ 11;rgb:0000/0000/0000\r\n$ echo $?\r\n1\r\n```\n\n### Steps to reproduce\n\n1. Start naked Neovim `nvim -u NONE`\r\n2. Run Ex command in the Neovim `:terminal`\r\n3. View an issue or a pr like: `gh --repo neovim/neovim issue view 1`\n\n### Expected behavior\n\nI expect that just an issue or a pr is shown.\n\n### Neovim version (nvim -v)\n\nv0.10.0-dev-9bb046d\n\n### Vim (not Nvim) behaves the same?\n\nno, vim 9.1\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nWezTerm\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nbuild from repo",
    "closed_at": "2024-02-23T21:12:31Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Ref https://github.com/neovim/neovim/pull/22159#issuecomment-1471441687\r\n\r\n> There may be synchronization concerns, I think autocommands do not run immediately and there should probably be an autocommand queue which runs them eventually in event loop cycle. So guaranteeing the OSC output of an application reaches the underlying terminal in the right time may be hard.\r\n\r\nAn easy solution is to make `TermRequest` synchronous:\r\n```diff\r\ndiff --git a/src/nvim/terminal.c b/src/nvim/terminal.c\r\nindex a8f95cf44e..414a82f457 100644\r\n--- a/src/nvim/terminal.c\r\n+++ b/src/nvim/terminal.c\r\n@@ -178,12 +178,8 @@ static VTermScreenCallbacks vterm_screen_callbacks = {\r\n \r\n static Set(ptr_t) invalidated_terminals = SET_INIT;\r\n \r\n-static void emit_term_request(void **argv)\r\n+static void emit_term_request(char *payload, size_t payload_length, Terminal *term)\r\n {\r\n-  char *payload = argv[0];\r\n-  size_t payload_length = (size_t)argv[1];\r\n-  Terminal *term = argv[2];\r\n-\r\n   buf_T *buf = handle_get_buffer(term->buf_handle);\r\n   String termrequest = { .data = payload, .size = payload_length };\r\n   Object data = STRING_OBJ(termrequest);\r\n@@ -201,7 +197,7 @@ static int on_osc(int command, VTermStringFragment frag, void *user)\r\n   StringBuilder request = KV_INITIAL_VALUE;\r\n   kv_printf(request, \"\\x1b]%d;\", command);\r\n   kv_concat_len(request, frag.str, frag.len);\r\n-  multiqueue_put(main_loop.events, emit_term_request, request.items, (void *)request.size, user);\r\n+  emit_term_request(request.items, request.size, user);\r\n   return 1;\r\n }\r\n \r\n@@ -214,7 +210,7 @@ static int on_dcs(const char *command, size_t commandlen, VTermStringFragment fr\r\n   StringBuilder request = KV_INITIAL_VALUE;\r\n   kv_printf(request, \"\\x1bP%*s\", (int)commandlen, command);\r\n   kv_concat_len(request, frag.str, frag.len);\r\n-  multiqueue_put(main_loop.events, emit_term_request, request.items, (void *)request.size, user);\r\n+  emit_term_request(request.items, request.size, user);\r\n   return 1;\r\n }\r\n \r\n```\r\n\r\nBut since libvterm callbacks are invoked from libuv events, making `TermRequest` synchronous may be dangerous.",
            "created_at": "2024-02-22T06:19:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/27572#issuecomment-1958778185",
            "id": 1958778185,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27572",
            "node_id": "IC_kwDOAPphoM50wJVJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1958778185/reactions"
            },
            "updated_at": "2024-02-22T07:22:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1958778185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27572/comments",
    "created_at": "2024-02-22T04:35:52Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27572/events",
    "html_url": "https://github.com/neovim/neovim/issues/27572",
    "id": 2148173345,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27572/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 301,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-04-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 132,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-02-26T17:33:18Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM6ACoYh",
    "number": 27572,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27572/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27572/timeline",
    "title": "Viewing an issue/pr by GitHub CLI on `:terminal`, the fragments of the ANSI Escape code are put in prompt.",
    "updated_at": "2024-02-23T21:12:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27572",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5582459?v=4",
        "events_url": "https://api.github.com/users/kyoh86/events{/privacy}",
        "followers_url": "https://api.github.com/users/kyoh86/followers",
        "following_url": "https://api.github.com/users/kyoh86/following{/other_user}",
        "gists_url": "https://api.github.com/users/kyoh86/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kyoh86",
        "id": 5582459,
        "login": "kyoh86",
        "node_id": "MDQ6VXNlcjU1ODI0NTk=",
        "organizations_url": "https://api.github.com/users/kyoh86/orgs",
        "received_events_url": "https://api.github.com/users/kyoh86/received_events",
        "repos_url": "https://api.github.com/users/kyoh86/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kyoh86/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kyoh86/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kyoh86"
    }
}