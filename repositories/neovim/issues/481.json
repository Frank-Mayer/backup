{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Currently I see documentation of functions both near their declarations and their definitions, which is inconsistent. Suggestion: require documentation _only_ near definitions. Reasoning:\n1. Given you have definitions it is easy to create declarations automatically. Reverse is not true. But automatic creation is much easier to implement if you do not need to filter out functions that already have definitions: i.e. you can just remove all declarations and recreate them, I know how to do this with a vim one-liner. Obviously this is not possible to achieve if documentation is near declarations.\n2. It is much easier to forget to update documentation if it is far away from the code you just modified, especially if you have not modified function signature.\n3. It is harder to look at code while writing documentation in case of small functions (in case of large functions you will have to view file in two windows or jump back and forward in any case).\n\nBy the way, how about doing like zsh does and not requiring any declarations at all, generating them on compile stage instead?\n",
    "closed_at": "2014-06-11T23:20:16Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I suppose you mean the doxygen-comments. I think they belong to the function declarations for the following reasons:\n1. Doxygen comments describe the interface of a function, not its implementation. They tell you what parameters your functions expect and what it returns, but ideally not how the function calculates its result. That's why they should be placed near the specification of the interface, which I'd say is the declaration of a function.\n2. The third goal of the Neovim fundraiser project reads: \"Refactor the editor into a library\".\n   This means it's likely that some people will end up having some shared library object together with only the header files of the source. If we place the comments near the declarations of the functions these people have direct access to the documentation of all public functions through the header files ~~and can easily build the doxygen documentation locally as well~~.\n3. I also think that doxygen comments unneccesarily blow up the code if you place them inside the c-files, whereas the header files don't contain lots of information except the declarations. If you want to find out some specific implementation detail of a function, this can be disturbing.\n\n> It is much easier to forget to update documentation if it is far away from the code you just modified, especially if you have not modified function signature.\n\nAs stated above, there shouldn't be the need to always update the documentation if you just change some implementation detail. (Those cases exists, but ideally they should be rare, since the doxygen documentation shouldn't contain lots of implementation details.). If you change the interface, e.g. adding another parameter, you'll also have to update the declaration, which is then not far away from the comments.\nHowever, if we decide to automatically build the declarations, this is obviously not true.\n\n> It is harder to look at code while writing documentation in case of small functions (in case of large functions you will have to view file in two windows or jump back and forward in any case).\n\nPersonally I almost always work with a vertical split - having the header file next to its implementation, but that's probably not true for everyone.\n",
            "created_at": "2014-04-07T05:45:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39697774",
            "id": 39697774,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njk3Nzc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39697774/reactions"
            },
            "updated_at": "2014-04-07T07:59:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39697774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/340100?v=4",
                "events_url": "https://api.github.com/users/lslah/events{/privacy}",
                "followers_url": "https://api.github.com/users/lslah/followers",
                "following_url": "https://api.github.com/users/lslah/following{/other_user}",
                "gists_url": "https://api.github.com/users/lslah/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lslah",
                "id": 340100,
                "login": "lslah",
                "node_id": "MDQ6VXNlcjM0MDEwMA==",
                "organizations_url": "https://api.github.com/users/lslah/orgs",
                "received_events_url": "https://api.github.com/users/lslah/received_events",
                "repos_url": "https://api.github.com/users/lslah/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lslah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lslah/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lslah"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "07.04.14, 09:46, \"lslah\" notifications@github.com\":\n\n> I suppose you mean the doxygen-comments. I think they belong to the function declarations for the following reasons:Doxygen comments describe the interface of a function, not its implementation. They tell you what parameters your functions expect and what it returns, but ideally not how the function calculates its result. That's why they should be placed near the interface, which I'd say is the declaration of a function.\n\nBut when documentation is away you cannot immediately verify that it actually does not tell you about implementation details. And some of them must be placed in documentation: unexpected thread (un)safety, unexpected resource usage and such.\n\n> The third goal of the Neovim fundraiser project reads: \"Refactor the editor into a library\".This means it's likely that some people will end up having some shared library object together with only the header files of the source. If we place the comments near the declarations of the functions these people have direct access to the documentation of all public functions through the header files and can easily build the doxygen documentation locally as well.\n\nNever saw a complex project which does not require reading source code for doing something complex. Also note that not all functions are public interfaces or even mentioned in a header and yet they require documentation for neovim developers.\n\nAlso how you imagine building documentation locally from headers only? I usually know two variants of distribution: you use \\* + *-dev packages and they are installed system-wide (without required doxygen configuration) or you use upstream repository or a fork or a snapshot of it which contains all sources (or you use Gentoo that will not leave unpacked sources, but uses the second variant + can build documentation).\n\n> I also think that doxygen comments unneccesarily blow up the code if you place them inside the c-files, whereas the header files don't contain lots of information except the declarations. If you want to find out some specific implementation detail of a function, this can be disturbing.\n\nThere are tags and folds and search to deal with this issue. Just scrolling the file to find a function is never efficient, no matter the presence of documentation. And documentation is not placed inside functions, so does not affect seeking implementation details.\n\n> It is much easier to forget to update documentation if it is far away from the code you just modified, especially if you have not modified function signature.\n> As stated above, there shouldn't be the need to always update the documentation if you just change some implementation detail. (Those cases exists, but ideally they should be rare, since the doxygen documentation shouldn't contain lots of implementation details.). If you change the interface, e.g. adding another parameter, you'll also have to update the declaration, which is then not far away from the comments.\n> However, if we decide to automatically build the declarations, this is obviously not true.\n> It is harder to look at code while writing documentation in case of small functions (in case of large functions you will have to view file in two windows or jump back and forward in any case).\n> Personally I almost always work with a vertical split - having the header file next to its implementation, but that's probably not true for everyone.\n\nI usually have something more interesting to see in a vertical split. Though I usually create documentation just after I finished first version of a function or just before I have started writing it, this does not mean going away from the function to write its documentation is convenient.\n\nAnd this has nothing to do with header files: parser does not have too much public interfaces, but has lots of helper functions.\n\n> —\n> Reply to this email directly or view it on GitHub.\n\n## \n\nSent from Yandex.Mail for mobile: http://m.ya.ru/ymail\n",
            "created_at": "2014-04-07T07:03:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39701126",
            "id": 39701126,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAxMTI2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39701126/reactions"
            },
            "updated_at": "2014-04-07T07:03:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39701126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Never saw a complex project which does not require reading source code for doing something complex. Also note that not all functions are public interfaces or even mentioned in a header and yet they require documentation for neovim developers.\n\nTrue, but every function has a declaration, that's why I said we should place them at the declaration in the first place. Which is sometimes inside the c-file, but for public functions inside the header file.\nI also agree that it's sometimes necessary to take a look at the implementation, but most of the times it shouldn't - otherwise I don't get the sense of the documentation at all.\n\n> Also how you imagine building documentation locally from headers only? I usually know two variants of distribution: you use \\* + *-dev packages and they are installed system-wide (without required doxygen configuration) or you use upstream repository or a fork or a snapshot of it which contains all sources (or you use Gentoo that will not leave unpacked sources, but uses the second variant + can build documentation).\n\nYou're right, my argument here was nonsense. I've actually never build documentation with a dev-package.\n\n> There are tags and folds and search to deal with this issue. Just scrolling the file to find a function is never efficient, no matter the presence of documentation. And documentation is not placed inside functions, so does not affect seeking implementation details.\n\nYes, but still the documentation wastes a lot of vertical space and is visually distracting to me.\n",
            "created_at": "2014-04-07T07:59:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39704399",
            "id": 39704399,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA0Mzk5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39704399/reactions"
            },
            "updated_at": "2014-04-07T07:59:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39704399",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/340100?v=4",
                "events_url": "https://api.github.com/users/lslah/events{/privacy}",
                "followers_url": "https://api.github.com/users/lslah/followers",
                "following_url": "https://api.github.com/users/lslah/following{/other_user}",
                "gists_url": "https://api.github.com/users/lslah/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lslah",
                "id": 340100,
                "login": "lslah",
                "node_id": "MDQ6VXNlcjM0MDEwMA==",
                "organizations_url": "https://api.github.com/users/lslah/orgs",
                "received_events_url": "https://api.github.com/users/lslah/received_events",
                "repos_url": "https://api.github.com/users/lslah/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lslah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lslah/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lslah"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "07.04.14, 11:59, \"lslah\" notifications@github.com\":\n\n> Never saw a complex project which does not require reading source code for doing something complex. Also note that not all functions are public interfaces or even mentioned in a header and yet they require documentation for neovim developers.\n> True, but every function has a declaration, that's why I said we should place them at the declaration in the first place. Which is sometimes inside the c-file, but for public functions inside the header file.\n\nI do not understand how \"every function has a declaration\" results in \"documentation should be placed at the declaration\". It would also good to make first statement false since it is a bunch of work that can be automated.\n\n> I also agree that it's sometimes necessary to take a look at the implementation, but most of the times it shouldn't - otherwise I don't get the sense of the documentation at all.\n> Also how you imagine building documentation locally from headers only? I usually know two variants of distribution: you use \\* + *-dev packages and they are installed system-wide (without required doxygen configuration) or you use upstream repository or a fork or a snapshot of it which contains all sources (or you use Gentoo that will not leave unpacked sources, but uses the second variant + can build documentation).\n> You're right, my argument here was nonsense. I've actually never build documentation with a dev-package.\n> There are tags and folds and search to deal with this issue. Just scrolling the file to find a function is never efficient, no matter the presence of documentation. And documentation is not placed inside functions, so does not affect seeking implementation details.\n> Yes, but still the documentation wastes a lot of vertical space and is visually distracting to me.\n\nWhat do you need this space for? Actually it is a good and clear indication of function start/end. Cases when I want to see two adjacent functions at once and at the same time can normally see them at once even without documentation are even more rare then cases where I want to see function, its documentation and something third (e.g. old parsing code, other function I want to use that is placed elsewhere, valgrind log, vim help, command definitions, code from another project used as an example, ...) at the same time (usually I want the third, maybe another third or two and function, but not its documentation).\n\n> —\n> Reply to this email directly or view it on GitHub.\n\n## \n\nSent from Yandex.Mail for mobile: http://m.ya.ru/ymail\n",
            "created_at": "2014-04-07T09:38:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39711705",
            "id": 39711705,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzExNzA1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39711705/reactions"
            },
            "updated_at": "2014-04-07T09:38:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39711705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> True, but every function has a declaration, that's why I said we should place them at the declaration in the first place.\n\n@ZyX-I I think he's referring to issue #323 and [this decision](https://github.com/neovim/neovim/issues/323#issuecomment-37575915).  It was decided that even static functions would have forward declarations, and I believe earlier in that thread it was decided that the doxygen comments go with the declaration (which makes sense for public interfaces).\n",
            "created_at": "2014-04-07T10:14:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39714387",
            "id": 39714387,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzE0Mzg3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39714387/reactions"
            },
            "updated_at": "2014-04-07T10:16:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39714387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/448087?v=4",
                "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}",
                "followers_url": "https://api.github.com/users/jszakmeister/followers",
                "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}",
                "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jszakmeister",
                "id": 448087,
                "login": "jszakmeister",
                "node_id": "MDQ6VXNlcjQ0ODA4Nw==",
                "organizations_url": "https://api.github.com/users/jszakmeister/orgs",
                "received_events_url": "https://api.github.com/users/jszakmeister/received_events",
                "repos_url": "https://api.github.com/users/jszakmeister/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jszakmeister"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I do not understand how \"every function has a declaration\" results in \"documentation should be placed at the declaration\". It would also good to make first statement false since it is a bunch of work that can be automated.\n\nSorry, if my response wasn't that clear. I just wanted to address the concern in this sentence:\n\n> Also note that not all functions are public interfaces or even mentioned in a header and yet they require documentation for neovim developers.\n\n I didn't want to say that \"every function has a declaration\" results in \"documentation should be placed at the declaration\". Instead I wanted to say that it's not a problem that there are functions which aren't public and don't have a declaration in the header file. They have a declaration in the c-file, and you can place the documentation there (if we would use the documentation-at-declaration style).\n\nGenerally, if you need to call some function you must definitely have access to its declaration, but not to its implementation.\nSomeone who calls a private function is already inside that module, and has access to the declaration.\nEveryone who just calls public functions would have access to the documentation through the header file. If he always needs to go through the implementation of the function, then probably the documentation should be improved.\nAlso, he shouldn't bother with the documentation of private functions - that's implementation detail.\n",
            "created_at": "2014-04-07T12:07:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39722149",
            "id": 39722149,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzIyMTQ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39722149/reactions"
            },
            "updated_at": "2014-04-07T12:07:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39722149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/340100?v=4",
                "events_url": "https://api.github.com/users/lslah/events{/privacy}",
                "followers_url": "https://api.github.com/users/lslah/followers",
                "following_url": "https://api.github.com/users/lslah/following{/other_user}",
                "gists_url": "https://api.github.com/users/lslah/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lslah",
                "id": 340100,
                "login": "lslah",
                "node_id": "MDQ6VXNlcjM0MDEwMA==",
                "organizations_url": "https://api.github.com/users/lslah/orgs",
                "received_events_url": "https://api.github.com/users/lslah/received_events",
                "repos_url": "https://api.github.com/users/lslah/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lslah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lslah/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lslah"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I like @ZyX-I / zsh idea of automatically generating headers. A flaw of C/C++ projects is the amount of boilerplate compared to other higher-level languages. Not being a fan of boilerplate is one of the reasons I choose to use Cmake glob feature to generate the source file list(no need to keep a source file in the directory if it's not going to be compiled, right?). I say we use the computer to automate all grunt work we can.\n\n@jszakmeister I don't like forward static declarations, but I had two reasons for deciding to use them:\n- Avoid worrying about dependency order of  static functions.\n- Mutually recursive static functions would require at least one static declaration, so it's better to be consistent and just declare all of them.\n\nI think we should move documentation to the function definitions as @ZyX-I suggested, automatically generate declarations with the documentation so doxygen will be happy and look into automatically injecting declarations of static functions at the top of C files before compilation. \n\nWe can use the lua infrastructure already setup into the project to perform this pre-CPP stage(which I was already planning to use to generate the msgpack-rpc API dispatch function, possibly fed from an yaml file containing the API description)\n",
            "created_at": "2014-04-07T12:13:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39722594",
            "id": 39722594,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzIyNTk0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39722594/reactions"
            },
            "updated_at": "2014-04-07T12:13:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39722594",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tarruda then we'd have to include the function attribute annotations at the definition site as well, and possibly also remove them from the definition after preprocessing. Function attributes are supposed to be at the declaration site.\n\nI'm personally not a big fan of auto-generating all that, especially because with `static` functions you'd need to edit the same file, making it appear modified to git. Too much magic.\n",
            "created_at": "2014-04-09T06:11:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39931663",
            "id": 39931663,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMxNjYz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39931663/reactions"
            },
            "updated_at": "2014-04-09T06:11:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39931663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "09.04.14, 10:11, \"Nicolas Hillegeer\" notifications@github.com\":\n\n> @tarruda then we'd have to include the function attribute annotations at the definition site as well, and possibly also remove them from the definition after preprocessing. Function attributes are supposed to be at the declaration site.\n> I'm personally not a big fan of auto-generating all that, especially because with static functions you'd need to edit the same file, making it appear modified to git. Too much magic.\n\nNo. AFAIR in zsh you just include generated files. In any case it does not really matter where (= in what file) static functions are declared as long as declarations are only used by one file, so you can include generated files regardless of whether I remember correctly the solution used by zsh.\n\nWhat is the problem with having attributes near definitions?\n\n> —\n> Reply to this email directly or view it on GitHub.\n\n## \n\nSent from Yandex.Mail for mobile: http://m.ya.ru/ymail\n",
            "created_at": "2014-04-09T06:41:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39933170",
            "id": 39933170,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMzMTcw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39933170/reactions"
            },
            "updated_at": "2014-04-09T06:41:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39933170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@ZyX-I there's some subtle differences: http://lwn.net/Articles/285332/\n",
            "created_at": "2014-04-09T06:51:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39933648",
            "id": 39933648,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMzNjQ4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39933648/reactions"
            },
            "updated_at": "2014-04-09T06:51:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39933648",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have not found anything against copying attributes in that article. Why  do you think they should be attached only to declarations, but not both to declarations and definitions?\n\n09.04.14, 10:51, \"Nicolas Hillegeer\" notifications@github.com\":\n\n> @ZyX-I there's some subtle differences: http://lwn.net/Articles/285332/\n> —\n> Reply to this email directly or view it on GitHub.\n\n## \n\nSent from Yandex.Mail for mobile: http://m.ya.ru/ymail\n",
            "created_at": "2014-04-09T10:15:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-39948285",
            "id": 39948285,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTQ4Mjg1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39948285/reactions"
            },
            "updated_at": "2014-04-09T10:15:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39948285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "closed by #710\n",
            "created_at": "2014-06-11T23:20:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/481#issuecomment-45812870",
            "id": 45812870,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/481",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODEyODcw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45812870/reactions"
            },
            "updated_at": "2014-06-11T23:20:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45812870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/481/comments",
    "created_at": "2014-04-07T04:51:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/481/events",
    "html_url": "https://github.com/neovim/neovim/issues/481",
    "id": 30958155,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/481/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzMDk1ODE1NQ==",
    "number": 481,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/481/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/481/timeline",
    "title": "Style: where documentation of functions should be located",
    "updated_at": "2024-09-04T14:02:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/481",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
        "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
        "followers_url": "https://api.github.com/users/ZyX-I/followers",
        "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
        "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ZyX-I",
        "id": 322097,
        "login": "ZyX-I",
        "node_id": "MDQ6VXNlcjMyMjA5Nw==",
        "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
        "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
        "repos_url": "https://api.github.com/users/ZyX-I/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ZyX-I"
    }
}