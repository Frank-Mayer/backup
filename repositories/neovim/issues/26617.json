{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
        "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
        "followers_url": "https://api.github.com/users/wookayin/followers",
        "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
        "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wookayin",
        "id": 1009873,
        "login": "wookayin",
        "node_id": "MDQ6VXNlcjEwMDk4NzM=",
        "organizations_url": "https://api.github.com/users/wookayin/orgs",
        "received_events_url": "https://api.github.com/users/wookayin/received_events",
        "repos_url": "https://api.github.com/users/wookayin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wookayin"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nhttps://github.com/neovim/neovim/blob/5a2536de0c4beae4eba50a0d2868983c1690ecc7/runtime/lua/vim/lsp/_meta/protocol.lua#L3098-L3104\r\n\r\nhttps://github.com/neovim/neovim/blob/5a2536de0c4beae4eba50a0d2868983c1690ecc7/runtime/lua/vim/lsp/_meta/protocol.lua#L4160-L4161\r\n\r\n`completionItem` is not anonym26. anonym26 corresponds to `completionItem.insertTextModeSupport`.\r\n\r\n<details><summary>Specification</summary>\r\n\r\n```\r\nexport interface [CompletionClientCapabilities](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#completionClientCapabilities) {\r\n\t/**\r\n\t * Whether completion supports dynamic registration.\r\n\t */\r\n\tdynamicRegistration?: boolean;\r\n\r\n\t/**\r\n\t * The client supports the following `CompletionItem` specific\r\n\t * capabilities.\r\n\t */\r\n\tcompletionItem?: {\r\n\t\t/**\r\n\t\t * Client supports snippets as insert text.\r\n\t\t *\r\n\t\t * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n\t\t * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n\t\t * the end of the snippet. Placeholders with equal identifiers are\r\n\t\t * linked, that is typing in one will update others too.\r\n\t\t */\r\n\t\tsnippetSupport?: boolean;\r\n\r\n\t\t/**\r\n\t\t * Client supports commit characters on a completion item.\r\n\t\t */\r\n\t\tcommitCharactersSupport?: boolean;\r\n\r\n\t\t/**\r\n\t\t * Client supports the follow content formats for the documentation\r\n\t\t * property. The order describes the preferred format of the client.\r\n\t\t */\r\n\t\tdocumentationFormat?: [MarkupKind](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#markupContent)[];\r\n\r\n\t\t/**\r\n\t\t * Client supports the deprecated property on a completion item.\r\n\t\t */\r\n\t\tdeprecatedSupport?: boolean;\r\n\r\n\t\t/**\r\n\t\t * Client supports the preselect property on a completion item.\r\n\t\t */\r\n\t\tpreselectSupport?: boolean;\r\n\r\n\t\t/**\r\n\t\t * Client supports the tag property on a completion item. Clients\r\n\t\t * supporting tags have to handle unknown tags gracefully. Clients\r\n\t\t * especially need to preserve unknown tags when sending a completion\r\n\t\t * item back to the server in a resolve call.\r\n\t\t *\r\n\t\t * @since 3.15.0\r\n\t\t */\r\n\t\ttagSupport?: {\r\n\t\t\t/**\r\n\t\t\t * The tags supported by the client.\r\n\t\t\t */\r\n\t\t\tvalueSet: [CompletionItemTag](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#completionItemTag)[];\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Client supports insert replace edit to control different behavior if\r\n\t\t * a completion item is inserted in the text or should replace text.\r\n\t\t *\r\n\t\t * @since 3.16.0\r\n\t\t */\r\n\t\tinsertReplaceSupport?: boolean;\r\n\r\n\t\t/**\r\n\t\t * Indicates which properties a client can resolve lazily on a\r\n\t\t * completion item. Before version 3.16.0 only the predefined properties\r\n\t\t * `documentation` and `detail` could be resolved lazily.\r\n\t\t *\r\n\t\t * @since 3.16.0\r\n\t\t */\r\n\t\tresolveSupport?: {\r\n\t\t\t/**\r\n\t\t\t * The properties that a client can resolve lazily.\r\n\t\t\t */\r\n\t\t\tproperties: string[];\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * The client supports the `insertTextMode` property on\r\n\t\t * a completion item to override the whitespace handling mode\r\n\t\t * as defined by the client (see `insertTextMode`).\r\n\t\t *\r\n\t\t * @since 3.16.0\r\n\t\t */\r\n\t\tinsertTextModeSupport?: {\r\n\t\t\tvalueSet: [InsertTextMode](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#insertTextMode)[];\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * The client has support for completion item label\r\n\t\t * details (see also `CompletionItemLabelDetails`).\r\n\t\t *\r\n\t\t * @since 3.17.0\r\n\t\t */\r\n\t\tlabelDetailsSupport?: boolean;\r\n\t};\r\n\r\n\tcompletionItemKind?: {\r\n\t\t/**\r\n\t\t * The completion item kind values the client supports. When this\r\n\t\t * property exists the client also guarantees that it will\r\n\t\t * handle values outside its set gracefully and falls back\r\n\t\t * to a default value when unknown.\r\n\t\t *\r\n\t\t * If this property is not present the client only supports\r\n\t\t * the completion items kinds from `Text` to `Reference` as defined in\r\n\t\t * the initial version of the protocol.\r\n\t\t */\r\n\t\tvalueSet?: [CompletionItemKind](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#completionItemKind)[];\r\n\t};\r\n\r\n\t/**\r\n\t * The client supports to send additional context information for a\r\n\t * `textDocument/completion` request.\r\n\t */\r\n\tcontextSupport?: boolean;\r\n\r\n\t/**\r\n\t * The client's default when the completion item doesn't provide a\r\n\t * `insertTextMode` property.\r\n\t *\r\n\t * @since 3.17.0\r\n\t */\r\n\tinsertTextMode?: [InsertTextMode](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#insertTextMode);\r\n\r\n\t/**\r\n\t * The client supports the following `CompletionList` specific\r\n\t * capabilities.\r\n\t *\r\n\t * @since 3.17.0\r\n\t */\r\n\tcompletionList?: {\r\n\t\t/**\r\n\t\t * The client supports the following itemDefaults on\r\n\t\t * a completion list.\r\n\t\t *\r\n\t\t * The value lists the supported property names of the\r\n\t\t * `CompletionList.itemDefaults` object. If omitted\r\n\t\t * no properties are supported.\r\n\t\t *\r\n\t\t * @since 3.17.0\r\n\t\t */\r\n\t\titemDefaults?: string[];\r\n\t}\r\n}\r\n```\r\n\r\n</details>\r\n\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\nany\n\n### Expected behavior\n\n_No response_\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0-dev-5a2536d\n\n### Language server name/version\n\nany\n\n### Operating system/version\n\nany\n\n### Log file\n\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Those are auto-generated from  https://microsoft.github.io/language-server-protocol/specifications/specification-current/#metaModel. It's a matter of naming --- I have an on-going work to improve auto-generation of those class annotations, which will resolve this issue too.\r\n\r\nIn the JSON protocol https://github.com/microsoft/language-server-protocol/blob/gh-pages/_specifications/lsp/3.17/metaModel/metaModel.json#L11699-L11719, there is a hint about the exact class name `insertTextModeSupport`. This can be read and used to make the name of the literal structure type as close as the LSP specification.",
            "created_at": "2023-12-17T18:52:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/26617#issuecomment-1859250320",
            "id": 1859250320,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26617",
            "node_id": "IC_kwDOAPphoM5u0eiQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859250320/reactions"
            },
            "updated_at": "2023-12-17T18:54:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859250320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I avoided PR because I thought it would be auto-generated, but was relieved to hear that work is already being done to improve it. I hope it will work.",
            "created_at": "2023-12-18T00:23:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/26617#issuecomment-1859345418",
            "id": 1859345418,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26617",
            "node_id": "IC_kwDOAPphoM5u01wK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859345418/reactions"
            },
            "updated_at": "2023-12-18T00:23:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859345418",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/82267684?v=4",
                "events_url": "https://api.github.com/users/uga-rosa/events{/privacy}",
                "followers_url": "https://api.github.com/users/uga-rosa/followers",
                "following_url": "https://api.github.com/users/uga-rosa/following{/other_user}",
                "gists_url": "https://api.github.com/users/uga-rosa/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/uga-rosa",
                "id": 82267684,
                "login": "uga-rosa",
                "node_id": "MDQ6VXNlcjgyMjY3Njg0",
                "organizations_url": "https://api.github.com/users/uga-rosa/orgs",
                "received_events_url": "https://api.github.com/users/uga-rosa/received_events",
                "repos_url": "https://api.github.com/users/uga-rosa/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/uga-rosa/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/uga-rosa/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/uga-rosa"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26617/comments",
    "created_at": "2023-12-17T12:43:14Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26617/events",
    "html_url": "https://github.com/neovim/neovim/issues/26617",
    "id": 2045204295,
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26617/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5551dH",
    "number": 26617,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26617/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26617/timeline",
    "title": "Wrong type annotation",
    "updated_at": "2023-12-18T01:08:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26617",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/82267684?v=4",
        "events_url": "https://api.github.com/users/uga-rosa/events{/privacy}",
        "followers_url": "https://api.github.com/users/uga-rosa/followers",
        "following_url": "https://api.github.com/users/uga-rosa/following{/other_user}",
        "gists_url": "https://api.github.com/users/uga-rosa/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/uga-rosa",
        "id": 82267684,
        "login": "uga-rosa",
        "node_id": "MDQ6VXNlcjgyMjY3Njg0",
        "organizations_url": "https://api.github.com/users/uga-rosa/orgs",
        "received_events_url": "https://api.github.com/users/uga-rosa/received_events",
        "repos_url": "https://api.github.com/users/uga-rosa/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/uga-rosa/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/uga-rosa/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/uga-rosa"
    }
}