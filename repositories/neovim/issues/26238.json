{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm trying to make an UI attachment in a plugin, but it doesn't seem to work and runs into errors.\r\nI tried various different variations of the code below:\r\n\r\n```ruby\r\nNeovim.logger << 'test!'\r\n\r\nNeovim.plugin do |plug|\r\n  plug.ui_attach(999, 999, {}) do |*a|\r\n    Neovim.logger << a.inspect\r\n  end\r\nend\r\n```\r\n\r\nWith and without block argument, with value in the hashmap and entirely without a third argument, but I'm always getting the same error, so I suspect that it's a plugin issue. Otherwise any hints are welcome.\r\n\r\nThe error appears once I call `:UpdateRemotePlugins` (I'm using https://github.com/junegunn/vim-plug).\r\n\r\n## Versions\r\nmacOS 14.1.1 Sonoma\r\nRuby: 3.2.2 (rbenv 1.2.0)\r\nGem: 3.4.12\r\nNeovim-Ruby: 0.9.1\r\nNeovim: 0.9.4\r\n\r\n## Neovim error message\r\n```\r\nfunction remote#host#UpdateRemotePlugins[6]..<SNR>61_RegistrationCommands[15]..remote#\r\nhost#Require[10]..provider#ruby#Require[8]..provider#Poll, line 7\r\nVim(if):Error invoking 'poll' on channel 5:^@Invalid channel: 5\r\nfunction remote#host#UpdateRemotePlugins[6]..<SNR>61_RegistrationCommands[15]..remote#\r\nhost#Require[10]..provider#ruby#Require[8]..provider#Poll, line 17\r\nFailed to load ruby host. You can try to see what happened by starting nvim with $NVIM\r\n_RUBY_LOG_FILE set and opening the generated log file. Also, the host stderr is available in messages.\r\nremote/host: generated rplugin manifest: /Users/huluk/.local/share/nvim/rplugin.vim\r\n```\r\n\r\n## Error logs\r\n```\r\n# Logfile created on 2023-11-25 17:07:28 +0100 by logger.rb/v1.5.3\r\n{\"_level\":\"DEBUG\",\"_time\":\"2023-11-25T17:07:28.708601\",\"_class\":\"Neovim::EventLoop\",\"_method\":\"run\",\"exception\":\"EOFError\",\"message\":\"end of file reached\"}\r\n{\"_level\":\"DEBUG\",\"_time\":\"2023-11-25T17:07:28.720948\",\"_class\":\"Neovim::EventLoop\",\"_method\":\"run\",\"exception\":\"EOFError\",\"message\":\"end of file reached\",\"backtrace\":[\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/connection.rb:47:in `readpartial'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/connection.rb:47:in `read'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/connection.rb:47:in `read'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/event_loop.rb:109:in `read'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/event_loop.rb:80:in `block in run'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/event_loop.rb:75:in `loop'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/event_loop.rb:75:in `run'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/session.rb:35:in `run'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/host.rb:29:in `run'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/host.rb:17:in `run'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/lib/neovim/host/cli.rb:33:in `run'\",\"/usr/local/var/rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/neovim-0.9.1/exe/neovim-ruby-host:5:in `<top (required)>'\",\"/usr/local/var/rbenv/versions/3.2.2/bin/neovim-ruby-host:25:in `load'\",\"/usr/local/var/rbenv/versions/3.2.2/bin/neovim-ruby-host:25:in `<main>'\"]}\r\ntest!\r\n```",
    "closed_at": "2023-11-28T00:41:35Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think there are a couple things causing this... first of all it seems like writing to `Neovim.logger` from a remote plugin breaks the rpc connection. Try removing those lines that write to the logger.\r\n\r\nThe next thing you're going to run into though, is that you're calling `ui_attach` on the remote plugin DSL object, not a neovim client. I think this closer to what you want, although I'm not sure if this works either:\r\n\r\n```ruby\r\nNeovim.plugin do |plug|\r\n  plug.command(:StartMyUI) do |client|\r\n    client.ui_attach(999, 999, {})\r\n  end\r\nend\r\n```\r\n\r\nThat said, I'm not sure if you want to spawn a UI within a remote plugin like this... I'm pretty unfamiliar with writing UI clients but my understanding was that the UI process should be responsible for starting an embedded nvim process, which it sends the `nvim_ui_attach` rpc when it's ready to draw (see docs: https://neovim.io/doc/user/ui.html). Maybe @justinmk could point to better resources/examples? Sorry I'm not super helpful here.",
            "created_at": "2023-11-25T23:14:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1826999427",
            "id": 1826999427,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5s5cyD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826999427/reactions"
            },
            "updated_at": "2023-11-25T23:14:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826999427",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/566993?v=4",
                "events_url": "https://api.github.com/users/alexgenco/events{/privacy}",
                "followers_url": "https://api.github.com/users/alexgenco/followers",
                "following_url": "https://api.github.com/users/alexgenco/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexgenco/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alexgenco",
                "id": 566993,
                "login": "alexgenco",
                "node_id": "MDQ6VXNlcjU2Njk5Mw==",
                "organizations_url": "https://api.github.com/users/alexgenco/orgs",
                "received_events_url": "https://api.github.com/users/alexgenco/received_events",
                "repos_url": "https://api.github.com/users/alexgenco/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alexgenco/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexgenco/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alexgenco"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for the hints, and the quick reply!\r\n\r\nWith your code snippet, at least it doesn't crash any more. Not sure yet if it's working, I'll do some more experiments later.\r\n\r\nI _think_ I'm fine with my plugin attaching to the UI. I don't want to embed vim somewhere, I want to produce output on an additional channel for an existing vim instance. (To be concrete, I want to pipe command output into a text to speech engine, in addition to the output which shows on the screen).\r\n\r\nI guess after my client calls `ui_attach` with `{ext_cmdline: true, ext_messages: true}`, I now want to add a listener to `msg_show` somehow.\r\n\r\nOnce I have a working example, I might make a pull request with documentation updates â€“ I must admit I'm really struggling to get started here. Trying to look at other projects either using `neovim-ruby` or other language interfaces, but it's really hard to find the right info. Not a complaint, I know how much work it is :D",
            "created_at": "2023-11-26T11:41:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1826999429",
            "id": 1826999429,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5s5cyF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826999429/reactions"
            },
            "updated_at": "2023-11-26T11:41:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826999429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/127309?v=4",
                "events_url": "https://api.github.com/users/Huluk/events{/privacy}",
                "followers_url": "https://api.github.com/users/Huluk/followers",
                "following_url": "https://api.github.com/users/Huluk/following{/other_user}",
                "gists_url": "https://api.github.com/users/Huluk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Huluk",
                "id": 127309,
                "login": "Huluk",
                "node_id": "MDQ6VXNlcjEyNzMwOQ==",
                "organizations_url": "https://api.github.com/users/Huluk/orgs",
                "received_events_url": "https://api.github.com/users/Huluk/received_events",
                "repos_url": "https://api.github.com/users/Huluk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Huluk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Huluk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Huluk"
            }
        },
        {
            "author_association": "NONE",
            "body": "`ui_attach` seems to work â€“ the plugin shows up for `:echo nvim_list_uis()`. I'm now trying to actually listen to events. For my experiments, I picked \"option_set\", since that is part of the always-on global set and I should be able to trigger it with `:set showtabline=0`. But how do I actually register a callback for this? `client.subscribe` does not take any block arguments.\r\n\r\nThe following code doesn't work, but also I'd be very surprised if I'm even going in the correct direction:\r\n```ruby\r\nNeovim.plugin do |plug|\r\n\r\n  p = plug.instance_variable_get(:@plugin)\r\n  # initialize(source, type, name, sync, options, block)\r\n  option_set_handler = Neovim::Plugin::Handler.new(\r\n    nil,\r\n    :event,\r\n    'option_set',\r\n    false,\r\n    {},\r\n    Proc.new { |*args| system 'say', 'this is a test!' + args.inspect }\r\n  )\r\n  p.handlers.push(option_set_handler)\r\n\r\n  plug.command(:Start) do |client|\r\n    client.subscribe(:option_set)\r\n    client.ui_attach(999, 999, {ext_cmdline: true, ext_messages: true})\r\n    client.subscribe(:option_set)\r\n  end\r\nend\r\n```",
            "created_at": "2023-11-26T19:13:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1826999432",
            "id": 1826999432,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5s5cyI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826999432/reactions"
            },
            "updated_at": "2023-11-26T19:13:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826999432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/127309?v=4",
                "events_url": "https://api.github.com/users/Huluk/events{/privacy}",
                "followers_url": "https://api.github.com/users/Huluk/followers",
                "following_url": "https://api.github.com/users/Huluk/following{/other_user}",
                "gists_url": "https://api.github.com/users/Huluk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Huluk",
                "id": 127309,
                "login": "Huluk",
                "node_id": "MDQ6VXNlcjEyNzMwOQ==",
                "organizations_url": "https://api.github.com/users/Huluk/orgs",
                "received_events_url": "https://api.github.com/users/Huluk/received_events",
                "repos_url": "https://api.github.com/users/Huluk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Huluk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Huluk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Huluk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But how do I actually register a callback for this? `client.subscribe` does not take any block arguments.\r\n\r\nsubscribe() is unrelated (and kinda useless). After you ui_attach, all UI events will be sent to the channel as `redraw` events. `:help ui-events` explains more and shows an example.\r\n\r\nI transferred this issue to the core repo since it may be useful for others to find. Though it's more of a discussion than an issue.",
            "created_at": "2023-11-27T01:36:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1826999433",
            "id": 1826999433,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5s5cyJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826999433/reactions"
            },
            "updated_at": "2023-11-27T01:38:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826999433",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you!\r\n\r\nSo one way to get messages is then:\r\n```ruby\r\nNeovim.plugin do |plug|\r\n  plug.command(:Start) do |nvim|\r\n    nvim.ui_attach(999, 999, {})\r\n    loop do\r\n      msg = nvim.session.next\r\n      next if msg.method_name != 'redraw'\r\n      # my logic\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nNote that `Neovim::Session` and `Neovim::Message` are marked as private API of `neovim-ruby`.",
            "created_at": "2023-11-27T07:12:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1827249152",
            "id": 1827249152,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5s6ZwA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1827249152/reactions"
            },
            "updated_at": "2023-11-27T07:12:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1827249152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/127309?v=4",
                "events_url": "https://api.github.com/users/Huluk/events{/privacy}",
                "followers_url": "https://api.github.com/users/Huluk/followers",
                "following_url": "https://api.github.com/users/Huluk/following{/other_user}",
                "gists_url": "https://api.github.com/users/Huluk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Huluk",
                "id": 127309,
                "login": "Huluk",
                "node_id": "MDQ6VXNlcjEyNzMwOQ==",
                "organizations_url": "https://api.github.com/users/Huluk/orgs",
                "received_events_url": "https://api.github.com/users/Huluk/received_events",
                "repos_url": "https://api.github.com/users/Huluk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Huluk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Huluk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Huluk"
            }
        },
        {
            "author_association": "NONE",
            "body": "My plan to listen to `msg_show` (of the `ext_messages` extension) does not work because it messes up TUI.\r\nI assume that's what the documentation means with\r\n\r\n> By default Nvim requires all connected UIs to support the same capabilities, thus the active capabilities are the intersection of those requested. UIs may specify [ui-override](https://neovim.io/doc/user/ui.html#ui-override) to invert this behavior (useful for debugging). The \"option_set\" event announces which capabilities are active.\r\n\r\nalthough it also says\r\n\r\n> Future versions of Nvim may add new update kinds and may append new parameters to existing update kinds. Clients must be prepared to ignore such extensions, for forward-compatibility.\r\n\r\nSo I'm confused whether TUI breaking in this case is the expected behaviour or not. For now, I'll proceed assuming it's expected.",
            "created_at": "2023-11-27T07:43:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1827281385",
            "id": 1827281385,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5s6hnp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1827281385/reactions"
            },
            "updated_at": "2023-11-27T07:43:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1827281385",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/127309?v=4",
                "events_url": "https://api.github.com/users/Huluk/events{/privacy}",
                "followers_url": "https://api.github.com/users/Huluk/followers",
                "following_url": "https://api.github.com/users/Huluk/following{/other_user}",
                "gists_url": "https://api.github.com/users/Huluk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Huluk",
                "id": 127309,
                "login": "Huluk",
                "node_id": "MDQ6VXNlcjEyNzMwOQ==",
                "organizations_url": "https://api.github.com/users/Huluk/orgs",
                "received_events_url": "https://api.github.com/users/Huluk/received_events",
                "repos_url": "https://api.github.com/users/Huluk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Huluk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Huluk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Huluk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My plan to listen to `msg_show` (of the `ext_messages` extension) does not work because it messes up TUI.\r\n\r\nidk what \"messes up\" means, but I assume it means that messages don't show. That is because the TUI doesn't handle `ext_messages` (yet).",
            "created_at": "2023-11-28T00:41:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1828876788",
            "id": 1828876788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5tAnH0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1828876788/reactions"
            },
            "updated_at": "2023-11-28T00:41:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1828876788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "```ruby\r\nNeovim.plugin do |plug|\r\n  plug.command(:Start) do |nvim|\r\n    nvim.ui_attach(999, 999, {})\r\n    loop do\r\n      msg = nvim.session.next\r\n      next if msg.method_name != 'redraw'\r\n      # my logic\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nThis will block the main thread, which is definitely not going to work. Try this\r\n\r\n```ruby\r\nNeovim.plugin do |plug|\r\n  plug.command(:Start) do |nvim|\r\n    nvim.ui_attach(999, 999, {})\r\n    Thread.new do\r\n      loop do\r\n        msg = nvim.session.next\r\n        next if msg.method_name != 'redraw'\r\n        # my logic\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nOr better yet, just spawn off a  separate ruby process using [`jobstart()`](https://neovim.io/doc/user/builtin.html#jobstart()) instead of the rplugin DSL. I think you can connect a client to stdin/stdout using `Neovim.attach(EventLoop.stdio)`.",
            "created_at": "2023-11-28T01:13:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1828904409",
            "id": 1828904409,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5tAt3Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1828904409/reactions"
            },
            "updated_at": "2023-11-28T01:13:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1828904409",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/566993?v=4",
                "events_url": "https://api.github.com/users/alexgenco/events{/privacy}",
                "followers_url": "https://api.github.com/users/alexgenco/followers",
                "following_url": "https://api.github.com/users/alexgenco/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexgenco/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alexgenco",
                "id": 566993,
                "login": "alexgenco",
                "node_id": "MDQ6VXNlcjU2Njk5Mw==",
                "organizations_url": "https://api.github.com/users/alexgenco/orgs",
                "received_events_url": "https://api.github.com/users/alexgenco/received_events",
                "repos_url": "https://api.github.com/users/alexgenco/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alexgenco/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexgenco/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alexgenco"
            }
        },
        {
            "author_association": "NONE",
            "body": "> idk what \"messes up\" means, but I assume it means that messages don't show. That is because the TUI doesn't handle `ext_messages` (yet).\r\n\r\nThe terminal goes completely black and does not react any more, except for a duplicate status bar. Thanks for clarifying!\r\n\r\n> This will block the main thread, which is definitely not going to work\r\n\r\nIt seems to block the plugin thread only, so the basic example works. But I take your point and will switch to `jobstart()`. With just the `Thread.new`, I get \"Channel doesn't exist\" when running another command registered with this plugin (and with my code, other commands don't work at all, as one would expect).",
            "created_at": "2023-11-28T08:19:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/26238#issuecomment-1829314981",
            "id": 1829314981,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26238",
            "node_id": "IC_kwDOAPphoM5tCSGl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829314981/reactions"
            },
            "updated_at": "2023-11-28T08:19:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829314981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/127309?v=4",
                "events_url": "https://api.github.com/users/Huluk/events{/privacy}",
                "followers_url": "https://api.github.com/users/Huluk/followers",
                "following_url": "https://api.github.com/users/Huluk/following{/other_user}",
                "gists_url": "https://api.github.com/users/Huluk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Huluk",
                "id": 127309,
                "login": "Huluk",
                "node_id": "MDQ6VXNlcjEyNzMwOQ==",
                "organizations_url": "https://api.github.com/users/Huluk/orgs",
                "received_events_url": "https://api.github.com/users/Huluk/received_events",
                "repos_url": "https://api.github.com/users/Huluk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Huluk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Huluk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Huluk"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26238/comments",
    "created_at": "2023-11-25T16:30:18Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26238/events",
    "html_url": "https://github.com/neovim/neovim/issues/26238",
    "id": 2011332136,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as usage questions",
            "id": 77997478,
            "name": "closed:question",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:question"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol",
            "id": 640132777,
            "name": "ui-ext",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-ext"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26238/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM534n4o",
    "number": 26238,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26238/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26238/timeline",
    "title": "UI Attach runs into error",
    "updated_at": "2023-11-28T08:19:52Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26238",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/127309?v=4",
        "events_url": "https://api.github.com/users/Huluk/events{/privacy}",
        "followers_url": "https://api.github.com/users/Huluk/followers",
        "following_url": "https://api.github.com/users/Huluk/following{/other_user}",
        "gists_url": "https://api.github.com/users/Huluk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Huluk",
        "id": 127309,
        "login": "Huluk",
        "node_id": "MDQ6VXNlcjEyNzMwOQ==",
        "organizations_url": "https://api.github.com/users/Huluk/orgs",
        "received_events_url": "https://api.github.com/users/Huluk/received_events",
        "repos_url": "https://api.github.com/users/Huluk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Huluk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Huluk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Huluk"
    }
}