{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nExpanding snippet with `vim.snippet.expand()` makes user keymaps `<Tab>` and `<S-Tab>` unusable during snippet session without (straightforward) way to opt-out of this behavior.\n\n### Steps to reproduce\n\n1. Create the following 'init.lua' file:\r\n    ```lua\r\n    vim.keymap.set('i', '<Tab>',   [[pumvisible() ? \"\\<C-n>\" : \"\\<Tab>\"]],   { expr = true })\r\n    vim.keymap.set('i', '<S-Tab>', [[pumvisible() ? \"\\<C-p>\" : \"\\<S-Tab>\"]], { expr = true })\r\n\r\n    local go_right = function()\r\n      if vim.snippet.active({ direction = 1 }) then return vim.snippet.jump(1) end\r\n      local snippet = 'for k, v in pairs($1) do\\n\\t$0\\nend'\r\n      vim.snippet.expand(snippet)\r\n    end\r\n    vim.keymap.set({ 'i', 's' }, '<C-l>', go_right)\r\n    ```\r\n2. `nvim --clean -u init.lua`\r\n3. Start Insert mode and press `<C-l>` to expand snippet.\r\n4. Press `<C-n>` to show completion popup.\r\n5. Press `<Tab>`. Currently it moves to the next tabstop. When not inside active snippet session, it select next completion item.\r\n\r\n------\r\n\r\nThis seems to be the result of #27339 inside which I didn't find the discussion about the motivation to not recognize user's global `<Tab>` and `<S-Tab>` mappings.\n\n### Expected behavior\n\n`vim.snippet.expand()` keeps custom `<Tab>` / `<S-Tab>` mappings usable. Either by default or by some configurable mechanism. Here are several suggestions:\r\n\r\n- Set default snippet navigation keymaps only if it doesn't conflict with what user has already created (either global or buffer-local). This is how I'd expect it to work. For example, default LSP mappings behave the same way: [explicitly with `K`](https://github.com/neovim/neovim/blob/5f95f1249f464e4f0ceed468ec5a1ba6e810da14/runtime/lua/vim/lsp.lua#L365) and [implicitly with other defaults](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/_defaults.lua) (because they are created early and globally while user can override them inside config).\r\n- Allow `opts` in `vim.snippet.expand()` with fields `lhs_jump_forward` and `lhs_jump_backward` to customize which keys are used as default for navigating left and right. Preferably with an ability to supply empty string to not create any.\r\n- Provide a `SnippetEnter` event (as suggested in #26449) to trigger after mappings are already created. Users then can delete buffer-local mappings inside an autocommand.\n\n### Neovim version (nvim -v)\n\nNVIM v0.11.0-dev-680+g4353996d0\n\n### Vim (not Nvim) behaves the same?\n\nNo (doesn't have this functionality)\n\n### Operating system/version\n\nEndeavourOS Linux x86_64 (6.10.6-arch1-1)\n\n### Terminal name/version\n\nst-0.9\n\n### $TERM environment variable\n\nst-256color\n\n### Installation\n\nappimage",
    "closed_at": "2024-08-30T22:18:55Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> This seems to be the result of #27339 inside which I didn't find the discussion about the motivation to not recognize user's global `<Tab>` and `<S-Tab>` mappings.\r\n\r\nBecause we need reasonable defaults, and users can set different mappings if they want.\r\n\r\n> Set default snippet navigation keymaps only if it doesn't conflict with what user has already created (either global or buffer-local). \r\n\r\nI have Tab/S-Tab global mappings, they're irrelevant during snippet editing.\r\n\r\n\r\n\r\n> default LSP mappings [`K`](https://github.com/neovim/neovim/blob/5f95f1249f464e4f0ceed468ec5a1ba6e810da14/runtime/lua/vim/lsp.lua#L365) and [other defaults](https://github.com/neovim/neovim/blob/master/runtime/lua/vim/_defaults.lua) ... are created early and globally while user can override them inside config.\r\n\r\nThat would be possible if we had a true snippet \"mode\", but we don't have that. \r\n\r\n\r\n\r\n> Provide a `SnippetEnter` event (as suggested in [Add `SnippetEnter` and `SnippetLeave` eventsÂ #26449](https://github.com/neovim/neovim/issues/26449)) to trigger after mappings are already created\r\n\r\nI also [mentioned](https://github.com/neovim/neovim/issues/26449#issuecomment-1845145737) in that issue that \"mode\" is needed.\r\n\r\nSo this issue is basically a duplicate of that issue. We may choose (or not) to implement SnippetEnter/SnippetLeave, else this is blocked on allowing custom \"modes\" or sub-modes.",
            "created_at": "2024-08-30T22:18:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322458653",
            "id": 2322458653,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6Kbegd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322458653/reactions"
            },
            "updated_at": "2024-08-30T22:20:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322458653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > This seems to be the result of #27339 inside which I didn't find the discussion about the motivation to not recognize user's global `<Tab>` and `<S-Tab>` mappings.\r\n> \r\n> Because we need reasonable defaults, and users can set different mappings if they want.\r\n\r\n@justinmk, I wholeheartedly agree about reasonable *defaults*, which among other things means that they can be customized. This is *not* the case here. Exactly `<Tab>` and `<S-Tab>` are [temporarily forced after session is created](https://github.com/neovim/neovim/blob/53af02adbad049f5fc24540cc0f38fa4f9aadf58/runtime/lua/vim/snippet.lua#L242-L251) and user can do *nothing* to prevent that. Making them customizable will solve this issue.\r\n\r\n> > Set default snippet navigation keymaps only if it doesn't conflict with what user has already created (either global or buffer-local).\r\n> \r\n> I have Tab/S-Tab global mappings, they're irrelevant during snippet editing.\r\n\r\nThat certainly is possible. Same as the opposite of them being relevant. Having `<Tab>`/`<S-Tab>` navigating through completion list (be it built-in pop-up or nvim-cmp) is definitely not uncommon. With current snippet expansion behavior using it this way is impossible (without hacks that try to delete buffer-local `<Tab>`/`<S-Tab>` Insert mode mappings).",
            "created_at": "2024-08-31T06:33:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322797033",
            "id": 2322797033,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6KcxHp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322797033/reactions"
            },
            "updated_at": "2024-08-31T06:33:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322797033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Even the hack of wrapping `vim.snippet.expand()` to later delete buffer-local mappings doesn't work, because [later delete of those temporary mappings](https://github.com/neovim/neovim/blob/53af02adbad049f5fc24540cc0f38fa4f9aadf58/runtime/lua/vim/snippet.lua#L264) throws an error of `E31: No such mapping`.\r\n\r\nHere is the reference (makes `<Tab>`/`<S-Tab>` work but later indefinitely throws a mentioned error):\r\n```lua\r\nlocal my_expand = function(snippet)\r\n  vim.snippet.expand(snippet)\r\n  vim.schedule(function()\r\n    pcall(vim.keymap.del, { 'i', 's' }, '<Tab>', { buffer = 0 })\r\n    pcall(vim.keymap.del, { 'i', 's' }, '<S-Tab>', { buffer = 0 })\r\n  end)\r\nend\r\n```",
            "created_at": "2024-08-31T06:50:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322801373",
            "id": 2322801373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6KcyLd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322801373/reactions"
            },
            "updated_at": "2024-08-31T06:50:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322801373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "How about we setup the tab/s-tab snippet keymaps generally in `_defaults` instead of temporary during snippet expansion?\r\n\r\n```lua\r\nlocal function try_jump(direction, key)\r\n  if vim.snippet.active({direction = direction}) then\r\n    return string.format(\"<cmd>lua vim.snippet.jump(%d)<cr>\", direction)\r\n  end\r\n  return key\r\nend\r\nvim.keymap.set({\"i\", \"s\"}, \"<Tab>\", function() return try_jump(1, \"<Tab>\") end, { expr = true })\r\nvim.keymap.set({\"i\", \"s\"}, \"<S-Tab>\", function() return try_jump(-1, \"<S-Tab>\") end, { expr = true })\r\n```\r\n\r\nThen users can still override tab, and if they no longer define any keymap to jump between snippets that's their own fault\r\n",
            "created_at": "2024-08-31T07:50:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322818867",
            "id": 2322818867,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6Kc2cz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322818867/reactions"
            },
            "updated_at": "2024-08-31T07:50:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322818867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How about we setup the tab/s-tab snippet keymaps generally in `_defaults` instead of temporary during snippet expansion?\r\n\r\nTo me this sounds at least better than the current non-configurable approach. Allowing `opts` in `vim.snippet.expand()` feels cleaner but indeed introduces more configuration which might not be in the spirit of `vim.snippet`.\r\n\r\nProbably it is also a good idea to document somewhere inside `:h vim.snippet` that `<Tab>` / `<S-Tab>` are used as default for jumping forward/backward",
            "created_at": "2024-08-31T07:56:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322820105",
            "id": 2322820105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6Kc2wJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322820105/reactions"
            },
            "updated_at": "2024-08-31T07:56:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322820105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How about we setup the tab/s-tab snippet keymaps generally in _defaults instead of temporary during snippet expansion?\r\n\r\nBut this will break users of other snippet (library) plugins. The current setup is chosen for a reason. \r\n\r\nI agree that lack of configuration is an issue we need to tackle, but what's still unclear is the \"how\". I disagree with Justin (as in the linked issue) about the mode requirement; this wouldn't solve the issue here, either, since the problem (right now) involves distinguishing between LSP snippet context and generic snippet context (and others, e.g., completion). So unless we replace the current event-oriented structure with a plethora of modes (not just snippet but also completion etc.), this would not buy us anything.\r\n\r\nSo the big question right now is whether we can tackle this in a future-proof way without also deciding the strategy for other plugins to leverage the snippet infrastructure (which was a design goal, I recall, that we also punted on.) This will determine whether that should be configurable on the event/mode level or the LSP autocompletion level.",
            "created_at": "2024-08-31T08:44:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322831245",
            "id": 2322831245,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6Kc5eN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322831245/reactions"
            },
            "updated_at": "2024-08-31T15:34:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322831245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But this will break users of other snippet (library) plugins\r\n\r\nOnly in that it would require some adaptation in the keymap. E.g. if you use luasnip you need a custom keymap anyway, and there you could check if `vim.snippet` is active, or if luasnip is active - or am I missing something?\r\n\r\nAdding a `opts` with keymap configuration to `vim.snippet.expand` would afaik deviate from usual patterns - I don't think core uses that anywhere else yet?\r\n\r\nAnd if snippet library plugins used `vim.snippet.expand` under the hood they'd also have to pass-through the options to expose it to users. Doesn't seem ideal to me\r\n",
            "created_at": "2024-08-31T09:01:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322834906",
            "id": 2322834906,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6Kc6Xa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322834906/reactions"
            },
            "updated_at": "2024-08-31T09:01:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322834906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Adding a `opts` with keymap configuration to `vim.snippet.expand` would afaik deviate from usual patterns - I don't think core uses that anywhere else yet?\r\n\r\nI also don't recall anything similar. But the reason might be that there is no functionality that implements \"temporary mode\". Snippets do.\r\n\r\n> And if snippet library plugins used `vim.snippet.expand` under the hood they'd also have to pass-through the options to expose it to users. Doesn't seem ideal to me\r\n\r\nI'd find this at least OK.",
            "created_at": "2024-08-31T09:08:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322836965",
            "id": 2322836965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6Kc63l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322836965/reactions"
            },
            "updated_at": "2024-08-31T09:08:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322836965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Only in that it would require some adaptation in the keymap.\r\n\r\nYes, and all I'm saying is that this is something that should be considered when deciding the final shape of the API. (We added something minimal but working with the plan of deciding the \"real\" API after release; I'm saying we should take our time and do that properly instead of simply slapping another opt-in-or-out on it. Otherwise adding an option to `lsp.completion.enable` to skip setting up the default mapping seems the least work to scratch this particular itch.)\r\n\r\n(It also has some implications to on-demand loading of -- potentially very heavy -- snippet engines, but I agree that that should not be a primary concern for core, even though it is very much a concern for me.)\r\n\r\n> E.g. if you use luasnip you need a custom keymap anyway, and there you could check if vim.snippet is active, or if luasnip is active - or am I missing something?\r\n> And if snippet library plugins used vim.snippet.expand under the hood they'd also have to pass-through the options to expose it to users. Doesn't seem ideal to me\r\n\r\nYes. That's why I'm saying that you can't really separate these questions and need to decide them together.",
            "created_at": "2024-08-31T09:09:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322837064",
            "id": 2322837064,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6Kc65I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322837064/reactions"
            },
            "updated_at": "2024-08-31T09:09:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322837064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ... We added something minimal but working with the plan of deciding the \"real\" API after release ...\r\n\r\nJust to clarify, after 0.11 release? I'd ask to resolve this sooner because the current non-configurable approach *does* break a lot of configs.",
            "created_at": "2024-08-31T10:00:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322848307",
            "id": 2322848307,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6Kc9oz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322848307/reactions"
            },
            "updated_at": "2024-08-31T10:00:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322848307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I disagree about the mode requirement ... since the problem (right now) involves distinguishing between LSP snippet context and generic snippet context (and others, e.g., completion). So unless we replace the current event-oriented structure with a plethora of modes (not just snippet but also completion etc.), this would not buy us anything.\r\n\r\nMaybe we don't need new, dedicated modes, but rather a \"stack\" of scopes, similar to `v:event.cmdlevel` in `CmdlineEnter`. So instead of `SnippetEnter`/`SnippetLeave`, introduce a `ModeEnter`/`ModeLeave` which increments a `level`. This would be a way for plugins to model arbitrary sub-modes. Would also update `vim.keymap`, `ModeChanged`, etc., to support this.",
            "created_at": "2024-08-31T15:31:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/30198#issuecomment-2322934327",
            "id": 2322934327,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30198",
            "node_id": "IC_kwDOAPphoM6KdSo3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322934327/reactions"
            },
            "updated_at": "2024-08-31T15:32:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2322934327",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30198/comments",
    "created_at": "2024-08-30T18:15:07Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30198/events",
    "html_url": "https://github.com/neovim/neovim/issues/30198",
    "id": 2497927721,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "current behavior is by design, and change is not desired",
            "id": 77997479,
            "name": "closed:wontfix",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:wontfix"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "issues or PRs involving changing the defaults",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "key bindings",
            "id": 3304938718,
            "name": "mappings",
            "node_id": "MDU6TGFiZWwzMzA0OTM4NzE4",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mappings"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 6207355257,
            "name": "snippet",
            "node_id": "LA_kwDOAPphoM8AAAABcfy5eQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/snippet"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30198/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6U41op",
    "number": 30198,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30198/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30198/timeline",
    "title": "Expanding snippet makes custom `<Tab>` and `<S-Tab>` mappings unusable during active snippet session",
    "updated_at": "2024-08-31T15:34:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30198",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski"
    }
}