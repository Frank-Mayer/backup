{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nwhen `<C-i>` (or any other term shortcut with special meaning) is mapped for a buffer, it also overrides `<Tab>` global mapping (not buffer specific)\r\n\r\n### Steps to reproduce\r\n\r\n`nvim -u NONE -i NONE --clean foo -c ':inoremap <tab> tab' -c ':inoremap <buffer> <c-i> c-i' -c :startinsert`\r\n\r\npress <kbd>Tab</kbd> or <kbd>Ctrl+i</kbd> - both print `c-i`\r\n\r\n### Expected behavior\r\n\r\n`c-i` is printed only when `<C-i>` is pressed - in Vim `<tab>` prints `c-i` only if it wasn't mapped at all\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.9.5\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nno, vim 9.1\r\n\r\n### Operating system/version\r\n\r\nArchlinux 1.0\r\n\r\n### Terminal name/version\r\n\r\nfoot 1.13.1\r\n\r\n### $TERM environment variable\r\n\r\nfoot-ext-underline\r\n\r\n### Installation\r\n\r\npacman",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Vim has an extra condition for mappings:\r\n```c\r\n\t\t    && !(mp->m_simplified && key_protocol_enabled()\r\n\t\t\t\t\t\t     && typebuf.tb_maplen == 0)\r\n```\r\nAdding this line from Vim (without the `key_protocol_enabled()` condition) will make this work:\r\n```diff\r\ndiff --git a/src/nvim/getchar.c b/src/nvim/getchar.c\r\nindex f68bd7098..e1c4a6247 100644\r\n--- a/src/nvim/getchar.c\r\n+++ b/src/nvim/getchar.c\r\n@@ -2021,6 +2021,7 @@ static int handle_mapping(int *keylenp, const bool *timedout, int *mapdepth)\r\n       // for the current state.\r\n       // Skip \":lmap\" mappings if keys were mapped.\r\n       if ((uint8_t)mp->m_keys[0] == tb_c1 && (mp->m_mode & local_State)\r\n+          && !(mp->m_simplified && typebuf.tb_maplen == 0)\r\n           && ((mp->m_mode & MODE_LANGMAP) == 0 || typebuf.tb_maplen == 0)) {\r\n         int nomap = nolmaplen;\r\n         int modifiers = 0;\r\n```\r\n\r\nHowever, this will cause mapping `<C-I>` to completely stop working in terminals that don't support modifyOtherKeys or CSI u. Since Nvim supports multiple UIs, it's not possible to have something equivalent to `key_protocol_enabled()` in Nvim, so I'm not sure how to solve this.",
            "created_at": "2024-03-25T09:52:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/28022#issuecomment-2017612989",
            "id": 2017612989,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28022",
            "node_id": "IC_kwDOAPphoM54QlS9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2017612989/reactions"
            },
            "updated_at": "2024-03-25T22:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2017612989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "For now I've come up with a less efficient workaround:\r\n```lua\r\nlocal tabmap\r\nmap('i', '<Tab>', function()\r\n\tif not tabmap then\r\n\t\tfor _, v in ipairs(vim.api.nvim_get_keymap 'i') do\r\n\t\t\tif v.lhs == '<Tab>' then\r\n\t\t\t\ttabmap = v.callback\r\n\t\t\t\tbreak\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tif tabmap then tabmap() end\r\nend, { buffer = true })\r\n```\r\nin the `after/ftplugin` file, where I overwrite `<C-i>`",
            "created_at": "2024-03-25T11:08:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/28022#issuecomment-2017749803",
            "id": 2017749803,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28022",
            "node_id": "IC_kwDOAPphoM54RGsr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2017749803/reactions"
            },
            "updated_at": "2024-03-25T11:10:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2017749803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54900518?v=4",
                "events_url": "https://api.github.com/users/JosefLitos/events{/privacy}",
                "followers_url": "https://api.github.com/users/JosefLitos/followers",
                "following_url": "https://api.github.com/users/JosefLitos/following{/other_user}",
                "gists_url": "https://api.github.com/users/JosefLitos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JosefLitos",
                "id": 54900518,
                "login": "JosefLitos",
                "node_id": "MDQ6VXNlcjU0OTAwNTE4",
                "organizations_url": "https://api.github.com/users/JosefLitos/orgs",
                "received_events_url": "https://api.github.com/users/JosefLitos/received_events",
                "repos_url": "https://api.github.com/users/JosefLitos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JosefLitos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JosefLitos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JosefLitos"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28022/comments",
    "created_at": "2024-03-25T09:27:22Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28022/events",
    "html_url": "https://github.com/neovim/neovim/issues/28022",
    "id": 2205280743,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "key bindings",
            "id": 3304938718,
            "name": "mappings",
            "node_id": "MDU6TGFiZWwzMzA0OTM4NzE4",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mappings"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28022/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Dcenn",
    "number": 28022,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28022/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28022/timeline",
    "title": "`<C-i>` buffer mapping overrides `<Tab>` global mapping",
    "updated_at": "2024-03-25T22:58:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28022",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/54900518?v=4",
        "events_url": "https://api.github.com/users/JosefLitos/events{/privacy}",
        "followers_url": "https://api.github.com/users/JosefLitos/followers",
        "following_url": "https://api.github.com/users/JosefLitos/following{/other_user}",
        "gists_url": "https://api.github.com/users/JosefLitos/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/JosefLitos",
        "id": 54900518,
        "login": "JosefLitos",
        "node_id": "MDQ6VXNlcjU0OTAwNTE4",
        "organizations_url": "https://api.github.com/users/JosefLitos/orgs",
        "received_events_url": "https://api.github.com/users/JosefLitos/received_events",
        "repos_url": "https://api.github.com/users/JosefLitos/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/JosefLitos/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JosefLitos/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/JosefLitos"
    }
}