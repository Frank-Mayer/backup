{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nI'm not too familiar with how to get a stack trace and/or attach a debugger, but the repro should be reliable.\r\n\r\nI suspect this has to do with the edge case of updating multiple locations at once. Though I'm not sure what the role of the LSP is (I suppose it's just for creating extmarks and it's probably possible to reproduce without LSP).\r\n\r\nI'm using `RelWithDebInfo`.\r\n\r\nBisected #13243 @bfredl \r\n\r\n### Steps to reproduce\r\n\r\n1. Checkout https://github.com/llllvvuu/neovim/tree/25155-repro\r\n2. `nvim --noplugin --clean -u minimal.lua runtime/lua/vim/shared.lua`, where `minimal.lua` is:\r\n```lua\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = { 'lua' },\r\n  callback = function()\r\n    vim.lsp.start({\r\n      name = 'lua_ls',\r\n      cmd = {'lua-language-server'},\r\n      root_dir = vim.fs.dirname(vim.fs.find({'.git', '.luacheckrc' }, { upward = true })[1]),\r\n    })\r\n  end,\r\n})\r\n```\r\n3. Try to do: `/Node<CR>V3j:s/Node/Tree`. Neovim should crash when you type the first letter of \"Tree\".\r\n\r\n### Expected behavior\r\n\r\nWhether or not the LSP is proper or malformed, Neovim should handle it gracefully.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1089+g1c4a93b59\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNVIM v0.10.0-dev-1089+g1c4a93b59\r\n\r\n### Operating system/version\r\n\r\n13.4.1\r\n\r\n### Terminal name/version\r\n\r\nkitty 0.28.1\r\n\r\n### $TERM environment variable\r\n\r\nxterm-kitty\r\n\r\n### Installation\r\n\r\nbuild from repo \r\n\r\n### Stack Trace\r\n\r\nNote: Although it consistently tends to happen at marktree:81, the stack trace leading up to it isn't consistent\r\n\r\n```\r\n0   libsystem_kernel.dylib        \t       0x1a81fc724 __pthread_kill + 8\r\n1   libsystem_pthread.dylib       \t       0x1a8233c28 pthread_kill + 288\r\n2   libsystem_c.dylib             \t       0x1a8141ae8 abort + 180\r\n3   libsystem_c.dylib             \t       0x1a8140e44 __assert_rtn + 272\r\n4   nvim                          \t       0x1031c9d5c relative + 92 (marktree.c:81)\r\n5   nvim                          \t       0x1031ce8f0 marktree_splice + 2160 (marktree.c:1774)\r\n6   nvim                          \t       0x10313f2b8 extmark_splice_impl + 356 (extmark.c:653)\r\n7   nvim                          \t       0x10313fd24 extmark_splice + 216 (extmark.c:628)\r\n8   nvim                          \t       0x103109214 do_sub + 8472 (ex_cmds.c:4056)\r\n9   nvim                          \t       0x10310a0f4 ex_substitute_preview + 296 (ex_cmds.c:4711)\r\n10  nvim                          \t       0x10311609c execute_cmd0 + 1016 (ex_docmd.c:1631)\r\n11  nvim                          \t       0x10311594c execute_cmd + 804 (ex_docmd.c:1712)\r\n12  nvim                          \t       0x103133a0c cmdpreview_may_show + 564 (ex_getln.c:2548)\r\n13  nvim                          \t       0x103130ecc command_line_changed + 272 (ex_getln.c:2631)\r\n14  nvim                          \t       0x10313360c command_line_handle_key + 4932 (ex_getln.c:2152)\r\n15  nvim                          \t       0x103130678 command_line_execute + 3876 (ex_getln.c:1364)\r\n16  nvim                          \t       0x1033346b0 state_enter + 672 (state.c:99)\r\n17  nvim                          \t       0x10312a8bc command_line_enter + 2148 (ex_getln.c:835)\r\n18  nvim                          \t       0x10312a04c getcmdline + 56 (ex_getln.c:2693)\r\n19  nvim                          \t       0x10312ba40 getexline + 108 (ex_getln.c:2935)\r\n20  nvim                          \t       0x10310e984 do_cmdline + 2152 (ex_docmd.c:505)\r\n21  nvim                          \t       0x10321fb14 nv_colon + 472 (normal.c:3231)\r\n22  nvim                          \t       0x10321cd1c normal_execute + 2388 (normal.c:1228)\r\n23  nvim                          \t       0x1033346b0 state_enter + 672 (state.c:99)\r\n24  nvim                          \t       0x1032182a4 normal_enter + 208 (normal.c:517)\r\n25  nvim                          \t       0x102f950bc main + 4720 (main.c:647)\r\n26  dyld                          \t       0x1a7edbf28 start + 2236\r\n```",
    "closed_at": "2023-09-16T12:59:22Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I took a look at #13243. In principle, it should be splittable into:\r\n1. Keeping the `MTNode.intersect` field.\r\n2. Queries relying on the `MTNode.intersect` field.\r\n3. Other changes to `marktree` / other things.\r\n\r\nMy gut feeling is that this bug is caused by 3; I don't see why touching `MTNode.intersect` would need to touch / break the marktree. Whereas #25145 is indeed crashing on the `MTNode.intersect` calcs.\r\n\r\nUnfortunately the 1/2/3 split doesn't actually exist. So that makes debugging a bit harder because otherwise one could just try to bisect it to 3.\r\n\r\nThis might be a use-case for un-squashed (but still curated) merges, although in this case that wouldn't have helped as the feature branch itself was squashed.",
            "created_at": "2023-09-15T04:57:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/25157#issuecomment-1720663923",
            "id": 1720663923,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25157",
            "node_id": "IC_kwDOAPphoM5mjz9z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1720663923/reactions"
            },
            "updated_at": "2023-09-15T05:09:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1720663923",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This might be a use-case for un-squashed (but still curated) merges.\r\n\r\nWe don't have a policy of squash-merging if the PR has actually meaningful commits on it. We only squash-merge if the PR commits are not well-formed (which is the typical case).\r\n\r\n",
            "created_at": "2023-09-15T11:01:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/25157#issuecomment-1721084286",
            "id": 1721084286,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25157",
            "node_id": "IC_kwDOAPphoM5mlal-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1721084286/reactions"
            },
            "updated_at": "2023-09-15T11:01:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1721084286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@llllvvuu There didn't exist anything like that to somehow not-squash. Your 1-2-3 post-hoc history is a fantasy, not what actually was developed. An unsquashed history would be a broken version of everything and then gradual fixes to make it not broken, which would have been completely useless not to say directly anti-productive when bisecting.\r\n\r\nAlso all the various small marktree improvements which turned out to be truly independent were already broken out of that PR and merged to master long ago.",
            "created_at": "2023-09-15T11:35:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/25157#issuecomment-1721128521",
            "id": 1721128521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25157",
            "node_id": "IC_kwDOAPphoM5mllZJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1721128521/reactions"
            },
            "updated_at": "2023-09-15T11:38:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1721128521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm experiencing this as well. I just want to note that the crash isn't limited to `lua-language-server`, I've had it happen while using `rust_analyzer`, `typescript-language-server`, etc. Here's a stack trace:\r\n\r\n```\r\nMessage: Process 2158769 (nvim) of user 1000 dumped core.\r\n\t\r\n\tStack trace of thread 2158769:\r\n\t#0  0x00007fee7968e83c n/a (libc.so.6 + 0x8e83c)\r\n\t#1  0x00007fee7963e668 raise (libc.so.6 + 0x3e668)\r\n\t#2  0x00007fee796264b8 abort (libc.so.6 + 0x264b8)\r\n\t#3  0x00007fee796263dc n/a (libc.so.6 + 0x263dc)\r\n\t#4  0x00007fee79636d26 __assert_fail (libc.so.6 + 0x36d26)\r\n\t#5  0x00005580bc30d987 relative (nvim + 0x1bd987)\r\n\t#6  0x00005580bc31bc9b marktree_splice (nvim + 0x1cbc9b)\r\n\t#7  0x00005580bc2c77db extmark_splice_impl (nvim + 0x1777db)\r\n\t#8  0x00005580bc2c7b7b extmark_splice (nvim + 0x177b7b)\r\n\t#9  0x00005580bc1e4116 nvim_buf_set_text (nvim + 0x94116)\r\n\t#10 0x00005580bc1cbebd nlua_api_nvim_buf_set_text (nvim + 0x7bebd)\r\n\t#11 0x00007fee79b09f0b n/a (libluajit-5.1.so.2 + 0xaf0b)\r\n\t#12 0x00007fee79b65d13 lua_pcall (libluajit-5.1.so.2 + 0x66d13)\r\n\t#13 0x00005580bc2f7d18 nlua_pcall (nvim + 0x1a7d18)\r\n\t#14 0x00005580bc308de4 nlua_do_ucmd (nvim + 0x1b8de4)\r\n\t#15 0x00005580bc425e2e do_ucmd (nvim + 0x2d5e2e)\r\n\t#16 0x00005580bc2ae3ad execute_cmd0 (nvim + 0x15e3ad)\r\n\t#17 0x00005580bc2ae87a execute_cmd (nvim + 0x15e87a)\r\n\t#18 0x00005580bc2c61ee cmdpreview_may_show (nvim + 0x1761ee)\r\n\t#19 0x00005580bc2c646e command_line_changed (nvim + 0x17646e)\r\n\t#20 0x00005580bc2bd9da command_line_handle_key (nvim + 0x16d9da)\r\n\t#21 0x00005580bc2be77f command_line_execute (nvim + 0x16e77f)\r\n\t#22 0x00005580bc3eb152 state_enter (nvim + 0x29b152)\r\n\t#23 0x00005580bc2bc049 command_line_enter (nvim + 0x16c049)\r\n\t#24 0x00005580bc2bed2a getcmdline (nvim + 0x16ed2a)\r\n\t#25 0x00005580bc2bfe99 getexline (nvim + 0x16fe99)\r\n\t#26 0x00005580bc2b1e8d do_cmdline (nvim + 0x161e8d)\r\n\t#27 0x00005580bc34e65a nv_colon (nvim + 0x1fe65a)\r\n\t#28 0x00005580bc34d483 normal_execute (nvim + 0x1fd483)\r\n\t#29 0x00005580bc3eb152 state_enter (nvim + 0x29b152)\r\n\t#30 0x00005580bc345c8f normal_enter (nvim + 0x1f5c8f)\r\n\t#31 0x00005580bc1ca10f main (nvim + 0x7a10f)\r\n\t#32 0x00007fee79627cd0 n/a (libc.so.6 + 0x27cd0)\r\n\t#33 0x00007fee79627d8a __libc_start_main (libc.so.6 + 0x27d8a)\r\n\t#34 0x00005580bc1c5045 _start (nvim + 0x75045)\r\n\t\r\n\tStack trace of thread 2163412:\r\n\t#0  0x00007fee796894ae n/a (libc.so.6 + 0x894ae)\r\n\t#1  0x00007fee7968bd40 pthread_cond_wait (libc.so.6 + 0x8bd40)\r\n\t#2  0x00007fee799fdabe uv_cond_wait (libuv.so.1 + 0x1fabe)\r\n\t#3  0x00007fee799f096f n/a (libuv.so.1 + 0x1296f)\r\n\t#4  0x00007fee7968c9eb n/a (libc.so.6 + 0x8c9eb)\r\n\t#5  0x00007fee79710dfc n/a (libc.so.6 + 0x110dfc)\r\n\t\r\n\tStack trace of thread 2163413:\r\n\t#0  0x00007fee796894ae n/a (libc.so.6 + 0x894ae)\r\n\t#1  0x00007fee7968bd40 pthread_cond_wait (libc.so.6 + 0x8bd40)\r\n\t#2  0x00007fee799fdabe uv_cond_wait (libuv.so.1 + 0x1fabe)\r\n\t#3  0x00007fee799f096f n/a (libuv.so.1 + 0x1296f)\r\n\t#4  0x00007fee7968c9eb n/a (libc.so.6 + 0x8c9eb)\r\n\t#5  0x00007fee79710dfc n/a (libc.so.6 + 0x110dfc)\r\n\t\r\n\tStack trace of thread 2163415:\r\n\t#0  0x00007fee796894ae n/a (libc.so.6 + 0x894ae)\r\n\t#1  0x00007fee7968bd40 pthread_cond_wait (libc.so.6 + 0x8bd40)\r\n\t#2  0x00007fee799fdabe uv_cond_wait (libuv.so.1 + 0x1fabe)\r\n\t#3  0x00007fee799f096f n/a (libuv.so.1 + 0x1296f)\r\n\t#4  0x00007fee7968c9eb n/a (libc.so.6 + 0x8c9eb)\r\n\t#5  0x00007fee79710dfc n/a (libc.so.6 + 0x110dfc)\r\n\t\r\n\tStack trace of thread 2163414:\r\n\t#0  0x00007fee796894ae n/a (libc.so.6 + 0x894ae)\r\n\t#1  0x00007fee7968bd40 pthread_cond_wait (libc.so.6 + 0x8bd40)\r\n\t#2  0x00007fee799fdabe uv_cond_wait (libuv.so.1 + 0x1fabe)\r\n\t#3  0x00007fee799f096f n/a (libuv.so.1 + 0x1296f)\r\n\t#4  0x00007fee7968c9eb n/a (libc.so.6 + 0x8c9eb)\r\n\t#5  0x00007fee79710dfc n/a (libc.so.6 + 0x110dfc)\r\n\t\r\n\tStack trace of thread 2163416:\r\n\t#0  0x0000000000000000 n/a (n/a + 0x0)\r\n\tELF object binary architecture: AMD x86-64\r\n\r\n```",
            "created_at": "2023-09-16T00:48:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/25157#issuecomment-1722084324",
            "id": 1722084324,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25157",
            "node_id": "IC_kwDOAPphoM5mpOvk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722084324/reactions"
            },
            "updated_at": "2023-09-16T00:49:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722084324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/21299126?v=4",
                "events_url": "https://api.github.com/users/b0o/events{/privacy}",
                "followers_url": "https://api.github.com/users/b0o/followers",
                "following_url": "https://api.github.com/users/b0o/following{/other_user}",
                "gists_url": "https://api.github.com/users/b0o/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/b0o",
                "id": 21299126,
                "login": "b0o",
                "node_id": "MDQ6VXNlcjIxMjk5MTI2",
                "organizations_url": "https://api.github.com/users/b0o/orgs",
                "received_events_url": "https://api.github.com/users/b0o/received_events",
                "repos_url": "https://api.github.com/users/b0o/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/b0o/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/b0o/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/b0o"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I'm experiencing this as well. I just want to note that the crash isn't limited to lua-language-server, I've had it happen while using rust_analyzer, typescript-language-server, etc. Here's a stack trace:\r\n\r\nYup, it's the same stack trace (included line numbers in the OP); I suspect the LSP is just a canary in the coal mine, and could probably reproduce its effect by `nvim_buf_set_extmark()`. In fact I could probably try slimming down the repro (making a script like #25147 even) by inspecting the extmark state",
            "created_at": "2023-09-16T01:14:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/25157#issuecomment-1722091524",
            "id": 1722091524,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25157",
            "node_id": "IC_kwDOAPphoM5mpQgE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722091524/reactions"
            },
            "updated_at": "2023-09-16T01:15:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722091524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "NONE",
            "body": "Also, it may go without saying, but it's not limited to `:s` either - I have experienced the crash while using user commands that have a custom `inccommand` preview, such as [`:IncRename`](https://github.com/smjonas/inc-rename.nvim).",
            "created_at": "2023-09-16T01:25:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/25157#issuecomment-1722094344",
            "id": 1722094344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25157",
            "node_id": "IC_kwDOAPphoM5mpRMI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722094344/reactions"
            },
            "updated_at": "2023-09-16T01:25:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722094344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/21299126?v=4",
                "events_url": "https://api.github.com/users/b0o/events{/privacy}",
                "followers_url": "https://api.github.com/users/b0o/followers",
                "following_url": "https://api.github.com/users/b0o/following{/other_user}",
                "gists_url": "https://api.github.com/users/b0o/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/b0o",
                "id": 21299126,
                "login": "b0o",
                "node_id": "MDQ6VXNlcjIxMjk5MTI2",
                "organizations_url": "https://api.github.com/users/b0o/orgs",
                "received_events_url": "https://api.github.com/users/b0o/received_events",
                "repos_url": "https://api.github.com/users/b0o/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/b0o/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/b0o/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/b0o"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The minimal fix I can see, on top of #25183, is to comment out the following line:\r\n\r\nhttps://github.com/neovim/neovim/blob/be10d65bfafe056025ffffa2c1131712b9a493a5/src/nvim/marktree.c#L1172\r\n\r\nSo that narrows down where could be the bad logic.",
            "created_at": "2023-09-16T05:48:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/25157#issuecomment-1722144690",
            "id": 1722144690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25157",
            "node_id": "IC_kwDOAPphoM5mpdey",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722144690/reactions"
            },
            "updated_at": "2023-09-16T05:48:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722144690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@llllvvuu pro tip: do not add Github links to commit messages, as these will spam the corresponding issue/PR on every push. \"Fixes: foo\" comments are better left to the PR description.",
            "created_at": "2023-09-16T13:02:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/25157#issuecomment-1722225712",
            "id": 1722225712,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25157",
            "node_id": "IC_kwDOAPphoM5mpxQw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722225712/reactions"
            },
            "updated_at": "2023-09-16T13:02:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722225712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25157/comments",
    "created_at": "2023-09-14T13:14:37Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25157/events",
    "html_url": "https://github.com/neovim/neovim/issues/25157",
    "id": 1896553942,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains minimal reproducing steps",
            "id": 435851959,
            "name": "has:repro",
            "node_id": "MDU6TGFiZWw0MzU4NTE5NTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:repro"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "extmarks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/extmarks"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25157/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 136,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 140,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-09-16T21:35:27Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM5xCx3W",
    "number": 25157,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25157/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25157/timeline",
    "title": "bug: `:%s/` can crash Neovim with `lua-language-server` after #13243",
    "updated_at": "2023-09-16T13:02:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25157",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
        "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
        "followers_url": "https://api.github.com/users/llllvvuu/followers",
        "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
        "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/llllvvuu",
        "id": 5601392,
        "login": "llllvvuu",
        "node_id": "MDQ6VXNlcjU2MDEzOTI=",
        "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
        "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
        "repos_url": "https://api.github.com/users/llllvvuu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/llllvvuu"
    }
}