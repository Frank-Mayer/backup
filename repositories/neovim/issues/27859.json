{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# Problems\r\n\r\n1) exit with status 1 (logs: `chan_close_with_error:560: RPC: (null)`)\r\n2) Crash with status 130:\r\n\r\n```\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\r\nException Codes:       KERN_INVALID_ADDRESS at 0x00000003209cd220\r\nException Codes:       0x0000000000000001, 0x00000003209cd220\r\n\r\nTermination Reason:    Namespace SIGNAL, Code 11 Segmentation fault: 11\r\nTerminating Process:   exc handler [11660]\r\n\r\nVM Region Info: 0x3209cd220 is not in any region.  Bytes after previous region: 2385498657  Bytes before following region: 54213684704\r\n      REGION TYPE                    START - END         [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      unused __TEXT               2926cc000-2926d0000    [   16K] r--/r-- SM=COW  unused  unknown system shared lib __TEXT\r\n--->  GAP OF 0xd2d930000 BYTES\r\n      commpage (reserved)         fc0000000-1000000000   [  1.0G] ---/--- SM=NUL  reserved VM address space (unallocated)\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   nvim                          \t       0x100d60ab4 tui_raw_line + 80\r\n1   nvim                          \t       0x100bf62a8 parse_msgpack + 348\r\n2   nvim                          \t       0x100bf3ff0 receive_msgpack + 304\r\n3   nvim                          \t       0x100af0dc8 read_cb + 404\r\n4   libuv.1.dylib                 \t       0x1014e35b4 uv__stream_io + 1004\r\n5   libuv.1.dylib                 \t       0x1014ea164 uv__io_poll + 1408\r\n6   libuv.1.dylib                 \t       0x1014da93c uv_run + 272\r\n7   nvim                          \t       0x100d689bc ui_client_run + 172\r\n8   nvim                          \t       0x100b963cc main + 17512\r\n9   dyld                          \t       0x198bc60e0 start + 2360\r\n```\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nScroll any file\r\n\r\n\r\n### Expected behavior\r\n\r\nNo crash/errors\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-2582+g2a8cef6bd-Homebrew\r\nNVIM v0.10.0-dev-2593+ga6b6d036b-Homebrew\r\nNVIM v0.10.0-dev-2536+g55c9e2c96 <-- broken commit\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nno\r\n\r\n### Operating system/version\r\n\r\nmacOS 14\r\n\r\n### Terminal name/version\r\n\r\nAlacritty\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbrew",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Broken commit [#55c9e2c](https://github.com/neovim/neovim/commit/55c9e2c96e28059a5102e2551b16b4fa4592723b)\r\n\r\n@bfredl",
            "created_at": "2024-03-14T16:50:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-1997901507",
            "id": 1997901507,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM53FY7D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1997901507/reactions"
            },
            "updated_at": "2024-03-14T16:51:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1997901507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1789565?v=4",
                "events_url": "https://api.github.com/users/qRoC/events{/privacy}",
                "followers_url": "https://api.github.com/users/qRoC/followers",
                "following_url": "https://api.github.com/users/qRoC/following{/other_user}",
                "gists_url": "https://api.github.com/users/qRoC/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/qRoC",
                "id": 1789565,
                "login": "qRoC",
                "node_id": "MDQ6VXNlcjE3ODk1NjU=",
                "organizations_url": "https://api.github.com/users/qRoC/orgs",
                "received_events_url": "https://api.github.com/users/qRoC/received_events",
                "repos_url": "https://api.github.com/users/qRoC/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/qRoC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qRoC/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/qRoC"
            }
        },
        {
            "author_association": "NONE",
            "body": "Can confirm, I just encountered this at the current HEAD a6b6d03.",
            "created_at": "2024-03-14T17:47:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-1998008804",
            "id": 1998008804,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM53FzHk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1998008804/reactions"
            },
            "updated_at": "2024-03-14T17:48:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1998008804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can you [build Nvim with ASAN](https://github.com/neovim/neovim/blob/master/CONTRIBUTING.md#sanitizers-asan-and-ubsan) and get an ASAN log?",
            "created_at": "2024-03-15T02:10:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-1998819585",
            "id": 1998819585,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM53I5EB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1998819585/reactions"
            },
            "updated_at": "2024-03-15T02:10:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1998819585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "Commit: `a6b6d036b19a548e3f2a199c6927ac7495c02ea1`\r\nBuild type: `Debug`\r\nLuaJIT `2.1.1703358377`\r\nCompilation: `/usr/bin/clang -g  -fno-sanitize-recover=all -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=undefined -fsanitize=address -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wvla -Wdouble-promotion -Wmissing-noreturn -Wmissing-format-attribute -Wmissing-prototypes -fsigned-char -fstack-protector-strong -Wimplicit-fallthrough -fdiagnostics-color=auto -Wl,-export_dynamic -DENABLE_ASAN_UBSAN -DNVIM_LOG_DEBUG -DUNIT_TESTING -DHAVE_UNIBILIUM -D_GNU_SOURCE -DINCLUDE_GENERATED_DECLARATIONS -DEXITFREE -I/opt/homebrew/include/luajit-2.1 -I/opt/homebrew/include -I/Users/qroc/Downloads/neovim/build/src/nvim/auto -I/Users/qroc/Downloads/neovim/build/include -I/Users/qroc/Downloads/neovim/build/cmake.config -I/Users/qroc/Downloads/neovim/src -I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.4.sdk/usr/include -I/Library/Frameworks/Mono.framework/Headers`\r\n\r\n---\r\n\r\nWhen crash (interesting fact - sometimes the tmux session with Alacritty dies)\r\n\r\n```\r\n==94808==ERROR: AddressSanitizer: SEGV on unknown address 0x0002edfca120 (pc 0x0001048e23f0 bp 0x00016d0475e0 sp 0x00016d046e30 T0)\r\n==94808==The signal is caused by a READ memory access.\r\n    #0 0x1048e23f0 in tui_raw_line tui.c:1582\r\n    #1 0x1049361a0 in ui_client_event_raw_line ui_client.c:230\r\n    #2 0x103f27a1c in parse_msgpack channel.c:293\r\n    #3 0x103f18aa0 in receive_msgpack channel.c:263\r\n    #4 0x103759adc in read_event rstream.c:191\r\n    #5 0x103759214 in invoke_read_cb rstream.c:204\r\n    #6 0x103757a28 in read_cb rstream.c:133\r\n    #7 0x10610b5b0 in uv__stream_io+0x3e8 (libuv.1.dylib:arm64+0x135b0)\r\n    #8 0x106112160 in uv__io_poll+0x57c (libuv.1.dylib:arm64+0x1a160)\r\n    #9 0x106102938 in uv_run+0x10c (libuv.1.dylib:arm64+0xa938)\r\n    #10 0x10373ddd8 in loop_uv_run loop.c:61\r\n    #11 0x10373d8a8 in loop_poll_events loop.c:82\r\n    #12 0x1049339cc in ui_client_run ui_client.c:131\r\n    #13 0x103be5a34 in main main.c:400\r\n    #14 0x198bc60dc  (<unknown module>)\r\n\r\n==94808==Register values:\r\n x[0] = 0x000000010aa14800   x[1] = 0x0000000075706e69   x[2] = 0x000000003ca59174   x[3] = 0x000000003e642d43\r\n x[4] = 0x000000003e642e31   x[5] = 0x000000003e642e31   x[6] = 0x0000000000000000   x[7] = 0x0000000000000000\r\n x[8] = 0x00000002edfca120   x[9] = 0x00000002edfca120  x[10] = 0x0000000000000000  x[11] = 0x0000000000000001\r\nx[12] = 0x0000000108d01580  x[13] = 0x000000016d045c88  x[14] = 0x000000016d045c80  x[15] = 0x0000000000000000\r\nx[16] = 0x0000000198f7f1a0  x[17] = 0x000000010666c5d8  x[18] = 0x0000000000000000  x[19] = 0x000000016d047ae0\r\nx[20] = 0x0000000105d02130  x[21] = 0x0000000000000000  x[22] = 0x0000000000000001  x[23] = 0x0000000000001894\r\nx[24] = 0x0000000000000001  x[25] = 0x000000000000001f  x[26] = 0x0000000105d0219c  x[27] = 0x0000000000000001\r\nx[28] = 0x000000016d049160     fp = 0x000000016d0475e0     lr = 0x00000001049361a4     sp = 0x000000016d046e30\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV tui.c:1582 in tui_raw_line\r\n==94808==ABORTING\r\n```\r\n\r\n\r\n```\r\n==29858==ERROR: AddressSanitizer: ABRT on unknown address 0x000198f16a60 (pc 0x000198f16a60 bp 0x00016fd01d70 sp 0x00016fd01d50 T0)\r\n    #0 0x198f16a60 in __pthread_kill+0x8 (libsystem_kernel.dylib:arm64e+0x9a60)\r\n    #1 0x198e5ba1c in abort+0xb0 (libsystem_c.dylib:arm64e+0x76a1c)\r\n    #2 0x198e5ad0c in __assert_rtn+0x118 (libsystem_c.dylib:arm64e+0x75d0c)\r\n    #3 0x10128d0a4 in unpacker_parse_redraw unpacker.c:462\r\n    #4 0x1012884d8 in unpacker_advance unpacker.c:320\r\n    #5 0x10126b6a8 in parse_msgpack channel.c:288\r\n    #6 0x10125caa0 in receive_msgpack channel.c:263\r\n    #7 0x100a9dadc in read_event rstream.c:191\r\n    #8 0x100a9d214 in invoke_read_cb rstream.c:204\r\n    #9 0x100a9ba28 in read_cb rstream.c:133\r\n    #10 0x10344f5b0 in uv__stream_io+0x3e8 (libuv.1.dylib:arm64+0x135b0)\r\n    #11 0x103456160 in uv__io_poll+0x57c (libuv.1.dylib:arm64+0x1a160)\r\n    #12 0x103446938 in uv_run+0x10c (libuv.1.dylib:arm64+0xa938)\r\n    #13 0x100a81dd8 in loop_uv_run loop.c:61\r\n    #14 0x100a818a8 in loop_poll_events loop.c:82\r\n    #15 0x101c779cc in ui_client_run ui_client.c:131\r\n    #16 0x100f29a34 in main main.c:400\r\n    #17 0x198bc60dc  (<unknown module>)\r\n\r\n==29858==Register values:\r\n x[0] = 0x0000000000000000   x[1] = 0x0000000000000000   x[2] = 0x0000000000000000   x[3] = 0x0000000000000000\r\n x[4] = 0x0000000000000000   x[5] = 0x000000000000002e   x[6] = 0x000000016f514000   x[7] = 0x00000000000008a0\r\n x[8] = 0x5d6deffd101239b9   x[9] = 0x5d6defff10d78379  x[10] = 0x000000702dfc03b3  x[11] = 0x000000002dfa03b3\r\nx[12] = 0x000000002dfa03b3  x[13] = 0x0000000000000000  x[14] = 0x0000000000000000  x[15] = 0x0000000000000000\r\nx[16] = 0x0000000000000148  x[17] = 0x000000020afc6c30  x[18] = 0x0000000000000000  x[19] = 0x0000000000000006\r\nx[20] = 0x0000000200c5bac0  x[21] = 0x0000000000000103  x[22] = 0x0000000200c5bba0  x[23] = 0x000000010218b1a0\r\nx[24] = 0x00000001ff95a000  x[25] = 0x000000000000001f  x[26] = 0x000000010300219c  x[27] = 0x0000000000000001\r\nx[28] = 0x000000016fd051a0     fp = 0x000000016fd01d70     lr = 0x0000000198f4ec20     sp = 0x000000016fd01d50\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: ABRT (libsystem_kernel.dylib:arm64e+0x9a60) in __pthread_kill+0x8\r\n==29858==ABORTING\r\n```\r\n\r\nLast logs:\r\n\r\n```\r\nDBG 2024-03-15T09:50:05.659 nvim.29932.0 ui_comp_raw_line:522: compositor: invalid row 80 on grid 3\r\nDBG 2024-03-15T09:50:05.659 nvim.29932.0 inbuf_poll:466: blocking... events_enabled=0 events_pending=0\r\nDBG 2024-03-15T09:50:05.659 nvim.29932.0 UI: raw_line (+1 times...)\r\nDBG 2024-03-15T09:50:05.659 nvim.29932.0 UI: win_viewport\r\nDBG 2024-03-15T09:50:05.659 nvim.29932.0 UI: flush\r\nDBG 2024-03-15T09:50:05.659 nvim.29932.0 inbuf_poll:466: blocking... events_enabled=1 events_pending=0\r\nDBG 2024-03-15T09:50:05.795 nvim.29932.0 read_cb:118: closing Stream (0x107301ea0): EOF (end of file)\r\nDBG 2024-03-15T09:50:05.795 nvim.29932.0 stream_close:106: closing Stream: 0x107301ea0\r\nDBG 2024-03-15T09:50:05.795 nvim.29932.0 stream_close:106: closing Stream: 0x107302050\r\nINF 2024-03-15T09:50:05.795 nvim.29932.0 chan_close_with_error:560: RPC: ch 1 was closed by the client\r\n```\r\n\r\n---\r\n\r\nSometimes nvim exit with 141 error (so asan not created), when i build in Debug mode, I See logs:\r\n\r\n```\r\nDBG 2024-03-15T09:37:24.960 nvim.80182.0 state_enter:98: input: K_EVENT\r\nDBG 2024-03-15T09:37:24.960 nvim.80182.0 state_no_longer_safe:315: SafeState reset: ins_typebuf()\r\nDBG 2024-03-15T09:37:24.960 nvim.80182.0 may_trigger_safestate:301: SafeState: Start triggering\r\nDBG 2024-03-15T09:37:24.961 nvim.80182.0 UI: raw_line\r\nDBG 2024-03-15T09:37:24.963 nvim.80182.0 inbuf_poll:466: blocking... events_enabled=0 events_pending=0\r\nDBG 2024-03-15T09:37:24.963 nvim.80182.0 UI: raw_line (+152 times...)\r\nDBG 2024-03-15T09:37:24.963 nvim.80182.0 UI: win_viewport\r\nDBG 2024-03-15T09:37:24.963 nvim.80182.0 UI: flush\r\nDBG 2024-03-15T09:37:24.963 nvim.80182.0 state_enter:98: input: K_EVENT\r\nDBG 2024-03-15T09:37:24.963 nvim.80182.0 state_no_longer_safe:315: SafeState reset: ins_typebuf()\r\nDBG 2024-03-15T09:37:24.963 nvim.80182.0 may_trigger_safestate:301: SafeState: Start triggering\r\nDBG 2024-03-15T09:37:24.964 nvim.80182.0 UI: raw_line\r\nDBG 2024-03-15T09:37:24.966 nvim.80182.0 inbuf_poll:466: blocking... events_enabled=0 events_pending=0\r\nDBG 2024-03-15T09:37:24.966 nvim.80182.0 UI: raw_line (+152 times...)\r\nDBG 2024-03-15T09:37:24.966 nvim.80182.0 UI: win_viewport\r\nDBG 2024-03-15T09:37:24.966 nvim.80182.0 UI: flush\r\nDBG 2024-03-15T09:37:24.966 nvim.80182.0 state_enter:98: input: K_EVENT\r\nDBG 2024-03-15T09:37:24.966 nvim.80182.0 state_no_longer_safe:315: SafeState reset: ins_typebuf()\r\nDBG 2024-03-15T09:37:24.966 nvim.80182.0 may_trigger_safestate:301: SafeState: Start triggering\r\nDBG 2024-03-15T09:37:24.966 ?.80181    log_notify:61: RPC -> 3: [notify]    nvim_input\r\nDBG 2024-03-15T09:37:24.967 ?.80181    receive_msgpack:257: ch 3: parsing 6682 bytes from msgpack Stream: 0x1031020a0\r\nERR 2024-03-15T09:37:24.967 ?.80181    chan_close_with_error:560: RPC: (null)\r\nDBG 2024-03-15T09:37:24.967 ?.80181    stream_close:106: closing Stream: 0x103101ef0\r\nDBG 2024-03-15T09:37:24.967 ?.80181    stream_close:106: closing Stream: 0x1031020a0\r\nDBG 2024-03-15T09:37:24.967 nvim.80182.0 UI: raw_line\r\nDBG 2024-03-15T09:37:24.969 nvim.80182.0 receive_msgpack:257: ch 1: parsing 36 bytes from msgpack Stream: 0x107c01ea0\r\nDBG 2024-03-15T09:37:24.969 nvim.80182.0 log_notify:61: RPC <- 1: [notify]    nvim_input\r\nDBG 2024-03-15T09:37:24.969 nvim.80182.0 handle_nvim_input:6803: RPC: ch 1: invoke nvim_input\r\nDBG 2024-03-15T09:37:24.969 nvim.80182.0 read_cb:118: closing Stream (0x107c01ea0): EOF (end of file)\r\nDBG 2024-03-15T09:37:24.969 nvim.80182.0 stream_close:106: closing Stream: 0x107c01ea0\r\nDBG 2024-03-15T09:37:24.969 nvim.80182.0 stream_close:106: closing Stream: 0x107c02050\r\nINF 2024-03-15T09:37:24.969 nvim.80182.0 chan_close_with_error:560: RPC: ch 1 was closed by the client\r\nDBG 2024-03-15T09:37:25.079 nvim.80182.0 state_no_longer_safe:315: SafeState reset: ins_typebuf()\r\nINF 2024-03-15T09:37:25.118 ?.80181    on_process_exit:432: exited: pid=80182 status=141 stoptime=0\r\nDBG 2024-03-15T09:37:25.120 ?.80181    stream_close:106: closing Stream: 0x107f24968\r\nINF 2024-03-15T09:37:25.120 ?.80181    os_exit:692: Nvim exit: 141\r\n```\r\n\r\n\r\n```\r\nDBG 2024-03-15T09:45:03.072 nvim.10743.0 UI: raw_line (+170 times...)\r\nDBG 2024-03-15T09:45:03.072 nvim.10743.0 UI: win_viewport\r\nDBG 2024-03-15T09:45:03.072 nvim.10743.0 UI: flush\r\nDBG 2024-03-15T09:45:03.072 nvim.10743.0 state_enter:98: input: K_EVENT\r\nDBG 2024-03-15T09:45:03.072 nvim.10743.0 state_no_longer_safe:315: SafeState reset: ins_typebuf()\r\nDBG 2024-03-15T09:45:03.077 ?.10719    receive_msgpack:257: ch 3: parsing 8192 bytes from msgpack Stream: 0x1078020a0\r\nDBG 2024-03-15T09:45:03.082 ?.10719    log_notify:61: RPC -> 3: [notify]    nvim_input\r\nDBG 2024-03-15T09:45:03.082 ?.10719    receive_msgpack:257: ch 3: parsing 8050 bytes from msgpack Stream: 0x1078020a0\r\nERR 2024-03-15T09:45:03.082 ?.10719    chan_close_with_error:560: RPC: (null)\r\nDBG 2024-03-15T09:45:03.082 ?.10719    stream_close:106: closing Stream: 0x107801ef0\r\nDBG 2024-03-15T09:45:03.082 ?.10719    stream_close:106: closing Stream: 0x1078020a0\r\nDBG 2024-03-15T09:45:03.082 nvim.10743.0 receive_msgpack:257: ch 1: parsing 36 bytes from msgpack Stream: 0x103401ea0\r\nDBG 2024-03-15T09:45:03.083 nvim.10743.0 log_notify:61: RPC <- 1: [notify]    nvim_input\r\nDBG 2024-03-15T09:45:03.083 nvim.10743.0 handle_nvim_input:6803: RPC: ch 1: invoke nvim_input\r\nDBG 2024-03-15T09:45:03.083 nvim.10743.0 read_cb:118: closing Stream (0x103401ea0): EOF (end of file)\r\nDBG 2024-03-15T09:45:03.083 nvim.10743.0 stream_close:106: closing Stream: 0x103401ea0\r\nDBG 2024-03-15T09:45:03.083 nvim.10743.0 stream_close:106: closing Stream: 0x103402050\r\nINF 2024-03-15T09:45:03.083 nvim.10743.0 chan_close_with_error:560: RPC: ch 1 was closed by the client\r\nINF 2024-03-15T09:45:03.191 nvim.10743.0 emsg_multiline:718: Error executing vim.schedule lua callback: ...vim-treesitter-context/lua/treesitter-context/render.lua:51: 'height' key must be a positive Integer\r\nstack traceback:\r\n        [C]: in function 'nvim_open_win'\r\n        ...vim-treesitter-context/lua/treesitter-context/render.lua:51: in function 'display_window'\r\n        ...vim-treesitter-context/lua/treesitter-context/render.lua:340: in function 'open'\r\n        .../lazy/nvim-treesitter-context/lua/treesitter-context.lua:50: in function 'open'\r\n        .../lazy/nvim-treesitter-context/lua/treesitter-context.lua:111: in function <.../lazy/nvim-treesitter-context/lua/treesitter-context.lua:92>\r\nINF 2024-03-15T09:45:03.212 ?.10719    on_process_exit:432: exited: pid=10743 status=141 stoptime=0\r\nDBG 2024-03-15T09:45:03.215 ?.10719    stream_close:106: closing Stream: 0x10c524968\r\nINF 2024-03-15T09:45:03.215 ?.10719    os_exit:692: Nvim exit: 141\r\n```",
            "created_at": "2024-03-15T07:52:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-1999110129",
            "id": 1999110129,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM53J__x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1999110129/reactions"
            },
            "updated_at": "2024-03-15T07:57:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1999110129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1789565?v=4",
                "events_url": "https://api.github.com/users/qRoC/events{/privacy}",
                "followers_url": "https://api.github.com/users/qRoC/followers",
                "following_url": "https://api.github.com/users/qRoC/following{/other_user}",
                "gists_url": "https://api.github.com/users/qRoC/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/qRoC",
                "id": 1789565,
                "login": "qRoC",
                "node_id": "MDQ6VXNlcjE3ODk1NjU=",
                "organizations_url": "https://api.github.com/users/qRoC/orgs",
                "received_events_url": "https://api.github.com/users/qRoC/received_events",
                "repos_url": "https://api.github.com/users/qRoC/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/qRoC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qRoC/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/qRoC"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "before investigating this more, can someone confirm they still see this after #27871 ?",
            "created_at": "2024-03-21T08:17:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2011608164",
            "id": 2011608164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM535rRk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2011608164/reactions"
            },
            "updated_at": "2024-03-21T08:17:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2011608164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl everything seems ok. I will reopen the issue if the crashes happen again",
            "created_at": "2024-03-21T15:34:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2012669090",
            "id": 2012669090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM539uSi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2012669090/reactions"
            },
            "updated_at": "2024-03-21T15:34:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2012669090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1789565?v=4",
                "events_url": "https://api.github.com/users/qRoC/events{/privacy}",
                "followers_url": "https://api.github.com/users/qRoC/followers",
                "following_url": "https://api.github.com/users/qRoC/following{/other_user}",
                "gists_url": "https://api.github.com/users/qRoC/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/qRoC",
                "id": 1789565,
                "login": "qRoC",
                "node_id": "MDQ6VXNlcjE3ODk1NjU=",
                "organizations_url": "https://api.github.com/users/qRoC/orgs",
                "received_events_url": "https://api.github.com/users/qRoC/received_events",
                "repos_url": "https://api.github.com/users/qRoC/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/qRoC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qRoC/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/qRoC"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl I'm reopening this issue because some crashes occurred.\r\n\r\n```\r\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\r\nException Codes:       KERN_INVALID_ADDRESS at 0x000000032924cc20\r\nException Codes:       0x0000000000000001, 0x000000032924cc20\r\n\r\nTermination Reason:    Namespace SIGNAL, Code 11 Segmentation fault: 11\r\nTerminating Process:   exc handler [49418]\r\n\r\nVM Region Info: 0x31594d6e0 is not in any region.  Bytes after previous region: 2200426209  Bytes before following region: 54398757152\r\n      REGION TYPE                    START - END         [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL\r\n      unused __TEXT               2926cc000-2926d0000    [   16K] r--/r-- SM=COW  unused  unknown system shared lib __TEXT\r\n--->  GAP OF 0xd2d930000 BYTES\r\n      commpage (reserved)         fc0000000-1000000000   [  1.0G] ---/--- SM=NUL  reserved VM address space (unallocated)\r\n\r\nThread 0 Crashed::  Dispatch queue: com.apple.main-thread\r\n0   nvim                          \t       0x102e7c8a4 tui_raw_line + 80\r\n1   nvim                          \t       0x102d1193c parse_msgpack + 348\r\n2   nvim                          \t       0x102d0f684 receive_msgpack + 304\r\n3   nvim                          \t       0x102c0c28c read_cb + 404\r\n4   libuv.1.dylib                 \t       0x1035ff5b4 uv__stream_io + 1004\r\n5   libuv.1.dylib                 \t       0x103606164 uv__io_poll + 1408\r\n6   libuv.1.dylib                 \t       0x1035f693c uv_run + 272\r\n7   nvim                          \t       0x102e84894 ui_client_run + 172\r\n8   nvim                          \t       0x102cb1a3c main + 17512\r\n9   dyld                          \t       0x198bc60e0 start + 2360\r\n```",
            "created_at": "2024-03-22T14:56:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2015282266",
            "id": 2015282266,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM54HsRa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2015282266/reactions"
            },
            "updated_at": "2024-03-22T14:56:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2015282266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1789565?v=4",
                "events_url": "https://api.github.com/users/qRoC/events{/privacy}",
                "followers_url": "https://api.github.com/users/qRoC/followers",
                "following_url": "https://api.github.com/users/qRoC/following{/other_user}",
                "gists_url": "https://api.github.com/users/qRoC/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/qRoC",
                "id": 1789565,
                "login": "qRoC",
                "node_id": "MDQ6VXNlcjE3ODk1NjU=",
                "organizations_url": "https://api.github.com/users/qRoC/orgs",
                "received_events_url": "https://api.github.com/users/qRoC/received_events",
                "repos_url": "https://api.github.com/users/qRoC/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/qRoC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qRoC/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/qRoC"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "We just got this bug report in Neovide, that might be related, but it's too early to tell for sure\r\n* https://github.com/neovide/neovide/issues/2452\r\n\r\nBased on the logs, it looks like some rpc data is lost, and therefore we get the parameters of `hl_attr_define` as a response to `nvim_input`",
            "created_at": "2024-03-29T16:11:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2027433477",
            "id": 2027433477,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM542C4F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027433477/reactions"
            },
            "updated_at": "2024-03-29T16:11:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027433477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl, reverting to https://github.com/neovim/neovim/commit/6525832a8c4d44a8ebabba02a5ea1ce09b389a4f, fixes the issue in Neovide, so I'm fairly sure that https://github.com/neovide/neovide/issues/2452 is the same bug, we just detect the error and report it earlier than the terminal version.\r\n\r\nWe have the following log:\r\n<details>\r\n\r\n```\r\nTRACE [neovide::window::keyboard_manager] Key pressed l ModifiersState(0x0)\r\nTRACE [neovide::channel_utils] UICommand Serial(Keyboard(\"l\"))\r\nTRACE [neovide::bridge::ui_commands] In Serial Command\r\nTRACE [neovide::bridge::ui_commands] Keyboard Input Sent: l\r\nTRACE [neovide::bridge::handler] Neovim notification: \"redraw\"\r\nTRACE [neovide::channel_utils] neovim_handler WindowFloatPosition { grid: 146, anchor: NorthEast, anchor_grid: 1, anchor_row: 34.0, anchor_column: 132.0, focusable: true, sort_order: Some(50) }\r\nTRACE [neovide::channel_utils] neovim_handler WindowFloatPosition { grid: 145, anchor: NorthWest, anchor_grid: 2, anchor_row: 0.0, anchor_column: 9.0, focusable: false, sort_order: Some(20) }\r\nTRACE [neovide::channel_utils] neovim_handler WindowFloatPosition { grid: 144, anchor: NorthWest, anchor_grid: 2, anchor_row: 0.0, anchor_column: 0.0, focusable: false, sort_order: Some(20) }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3979, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: None, special: None }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: None, infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3980, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: Some(Color4f { r: 0.09411765, g: 0.09411765, b: 0.14901961, a: 1.0 }), special: None }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: None, infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3981, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.42352942, g: 0.4392157, b: 0.5294118, a: 1.0 }), background: None, special: None }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: None, infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3982, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: Some(Color4f { r: 0.09411765, g: 0.09411765, b: 0.14901961, a: 1.0 }), special: None }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: None, infos: [HighlightInfo { kind: Ui, ui_name: \"NormalNC\", hi_name: \"NormalNC\", id: 945 }, HighlightInfo { kind: Ui, ui_name: \"NormalFloat\", hi_name: \"NormalFloat\", id: 1559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3983, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: Some(Color4f { r: 0.09411765, g: 0.09411765, b: 0.14901961, a: 1.0 }), special: None }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: None, infos: [HighlightInfo { kind: Ui, ui_name: \"NormalNC\", hi_name: \"NormalNC\", id: 945 }, HighlightInfo { kind: Ui, ui_name: \"NormalFloat\", hi_name: \"NormalFloat\", id: 1559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }] } }\r\nTRACE [neovide::bridge::handler] Neovim notification: \"redraw\"\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3984, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.42352942, g: 0.4392157, b: 0.5294118, a: 1.0 }), background: Some(Color4f { r: 0.09411765, g: 0.09411765, b: 0.14901961, a: 1.0 }), special: None }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: None, infos: [HighlightInfo { kind: Ui, ui_name: \"NormalNC\", hi_name: \"NormalNC\", id: 945 }, HighlightInfo { kind: Ui, ui_name: \"NormalFloat\", hi_name: \"NormalFloat\", id: 1559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"FoldColumn\", id: 447 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler GridLine { grid: 144, row: 0, column_start: 0, cells: [GridLineCell { text: \" \", highlight_id: Some(3982), repeat: Some(4) }, GridLineCell { text: \" \", highlight_id: Some(3983), repeat: None }, GridLineCell { text: \"6\", highlight_id: None, repeat: None }, GridLineCell { text: \"5\", highlight_id: None, repeat: None }, GridLineCell { text: \"\\u{f47c}\", highlight_id: Some(3984), repeat: None }, GridLineCell { text: \" \", highlight_id: Some(3982), repeat: None }, GridLineCell { text: \" \", highlight_id: Some(1560), repeat: Some(0) }] }\r\nTRACE [neovide::channel_utils] neovim_handler GridLine { grid: 144, row: 1, column_start: 0, cells: [GridLineCell { text: \" \", highlight_id: Some(3982), repeat: Some(4) }, GridLineCell { text: \" \", highlight_id: Some(3983), repeat: None }, GridLineCell { text: \"5\", highlight_id: None, repeat: None }, GridLineCell { text: \"8\", highlight_id: None, repeat: None }, GridLineCell { text: \"\\u{f47c}\", highlight_id: Some(3984), repeat: None }, GridLineCell { text: \" \", highlight_id: Some(3982), repeat: None }, GridLineCell { text: \" \", highlight_id: Some(1560), repeat: Some(0) }] }\r\nTRACE [neovide::channel_utils] neovim_handler GridLine { grid: 144, row: 2, column_start: 0, cells: [GridLineCell { text: \" \", highlight_id: Some(3982), repeat: Some(4) }, GridLineCell { text: \" \", highlight_id: Some(3983), repeat: None }, GridLineCell { text: \"4\", highlight_id: None, repeat: None }, GridLineCell { text: \"7\", highlight_id: None, repeat: None }, GridLineCell { text: \"\\u{f47c}\", highlight_id: Some(3984), repeat: None }, GridLineCell { text: \" \", highlight_id: Some(3982), repeat: None }, GridLineCell { text: \" \", highlight_id: Some(1560), repeat: Some(0) }] }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3985, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: None, special: Some(Color4f { r: 0.19215687, g: 0.19607843, b: 0.27058825, a: 1.0 }) }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: Some(Underline), infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3986, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: None, special: Some(Color4f { r: 0.19215687, g: 0.19607843, b: 0.27058825, a: 1.0 }) }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: Some(Underline), infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"SignColumn\", id: 449 }] } }\r\nTRACE [neovide::bridge::handler] Neovim notification: \"redraw\"\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3987, style: Style { colors: Colors { foreground: None, background: None, special: Some(Color4f { r: 0.19215687, g: 0.19607843, b: 0.27058825, a: 1.0 }) }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: Some(Underline), infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3988, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: Some(Color4f { r: 0.09411765, g: 0.09411765, b: 0.14901961, a: 1.0 }), special: Some(Color4f { r: 0.19215687, g: 0.19607843, b: 0.27058825, a: 1.0 }) }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: Some(Underline), infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3989, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: Some(Color4f { r: 0.09411765, g: 0.09411765, b: 0.14901961, a: 1.0 }), special: Some(Color4f { r: 0.19215687, g: 0.19607843, b: 0.27058825, a: 1.0 }) }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: Some(Underline), infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }] } }\r\nTRACE [neovide::channel_utils] neovim_handler HighlightAttributesDefine { id: 3990, style: Style { colors: Colors { foreground: Some(Color4f { r: 0.27058825, g: 0.2784314, b: 0.35686275, a: 1.0 }), background: Some(Color4f { r: 0.09411765, g: 0.09411765, b: 0.14901961, a: 1.0 }), special: Some(Color4f { r: 0.19215687, g: 0.19607843, b: 0.27058825, a: 1.0 }) }, reverse: false, italic: false, bold: false, strikethrough: false, blend: 0, underline: Some(Underline), infos: [HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextBottom\", id: 559 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }, HighlightInfo { kind: Syntax, ui_name: \"\", hi_name: \"TreesitterContextLineNumber\", id: 558 }] } }\r\nERROR [neovide::bridge] Error: 'Error reading message'\r\nINFO [neovide::running_tracker] Quit neovim processed failed\r\nERROR [neovide::bridge::ui_commands] Input failed\r\n\r\nCaused by:\r\n    0: Error decoding response to request 'nvim_input'\r\n    1: Error while decoding\r\n    2: Value not an Array: '{\"kind\": \"syntax\", \"hi_name\": \"SignColumn\", \"id\": 449}'\r\n```\r\n\r\n</details>\r\n\r\nSo, no flush is revived before the response to `nvim_input`, which now contains data from the `redraw` notification instead of the expected response.",
            "created_at": "2024-04-09T11:13:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2044764163",
            "id": 2044764163,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM554KAD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2044764163/reactions"
            },
            "updated_at": "2024-04-09T11:13:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2044764163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm also encountering a similar issue, bisected to conclude that [#55c9e2c](https://github.com/neovim/neovim/commit/55c9e2c96e28059a5102e2551b16b4fa4592723b) introduced this. I can only reproduce the crash under tmux (`3.3a`, `3.4`), in both Alacritty and Kitty.\r\n\r\nWhen running a debug build, instead of `abort()`ing or crashing with a segfault, the following assertion fails:\r\nhttps://github.com/neovim/neovim/blob/57adf8c6e01d9395eb52fe03571c535571efdc4b/src/nvim/msgpack_rpc/unpacker.c#L460-L462\r\n\r\nwhich I suppose is indicative of garbage data (the values of *both* `g->icell` and `g->ncells` are impossibly huge, and the other fields of the `GridLineEvent` are non-sensical).\r\n\r\nIt seems like most such crashes occur more or less as follows (all in the TUI process):\r\n- an incomplete read from the channel's `rstream` (8192 bytes exactly)\r\n- EOF token encountered in state `15` in the redraw decoder (due to incomplete read), returning from the function but still in state `15`\r\n- send `nvim_input` event (I think I've also seen this be a `set_focus` event, not sure)\r\n- next call to advance unpacker resumes at state `15`, using the previous line grid event data `p->grid_line_event` which now contains garbage\r\n\r\nThe \"garbage\" state of the `grid_line_event` seems to be somewhat consistent. Just before the crash, if I inspect `grid_line_event->args[0]`, I get `1970302569`:\r\n```python\r\n(1970302569).to_bytes(4, 'little')\r\n# >> b'inpu'\r\n# i.e. inpu(t) ?\r\n```\r\nwhich could be some memory corruption due to the `nvim_input` event?\r\n",
            "created_at": "2024-04-15T18:31:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2057556931",
            "id": 2057556931,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM56o9PD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2057556931/reactions"
            },
            "updated_at": "2024-04-15T18:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2057556931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/92238946?v=4",
                "events_url": "https://api.github.com/users/theofabilous/events{/privacy}",
                "followers_url": "https://api.github.com/users/theofabilous/followers",
                "following_url": "https://api.github.com/users/theofabilous/following{/other_user}",
                "gists_url": "https://api.github.com/users/theofabilous/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theofabilous",
                "id": 92238946,
                "login": "theofabilous",
                "node_id": "U_kgDOBX90Yg",
                "organizations_url": "https://api.github.com/users/theofabilous/orgs",
                "received_events_url": "https://api.github.com/users/theofabilous/received_events",
                "repos_url": "https://api.github.com/users/theofabilous/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theofabilous/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theofabilous/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theofabilous"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Setting up a memory watch point at `p->grid_line_event`'s address while debugging shows that the memory location is overwritten between the incomplete decoding of the redraw event and the next read. This happens  somewhere in `serialize_request()`. In this specific instance I can see that joining the bytes in `p->grid_line_event->args` yield `'ui_set_focus'`, and `p->grid_line_event->icell` is also overwritten (all of this happens while `p->state` is still `15`).\r\n\r\n@bfredl I *think* I've figured out what's causing this. Here is the specific sequence of events that I think causes this bug:\r\n\r\n<br>\r\n\r\nAfter a successful and complete redraw (state `16` reached), `unpacker_parse_redraw()` returns `true`. At this point `p->grid_line_event` is allocated in the arena `p->arena`. If `--p->ncalls > 0`, we switch back to state `14` before returning:\r\nhttps://github.com/neovim/neovim/blob/603f3b36a4d543bc539a5abad8ac93a2595e3995/src/nvim/msgpack_rpc/unpacker.c#L359-L368\r\n\r\nThen in `parse_msgpack()` inside the `while (unpacker_advance(p))` loop, we free the arena memory (line 298):\r\nhttps://github.com/neovim/neovim/blob/603f3b36a4d543bc539a5abad8ac93a2595e3995/src/nvim/msgpack_rpc/channel.c#L288-L298\r\n\r\nBut now `p->state == 14` which means the next call to the redraw decoder will skip the arena allocation of `p->grid_line_event` (this happens in state `11`) but still write to it. I think ASAN sometimes misses this because it's using the `arena_reuse_blk`s which aren't really ever freed (i.e. the memory is \"valid\"). I suspect this is also why nothing fails if the entire redraw cycle is finished in one \"go\", since there aren't any intermediate allocations that overwrite the data. Not sure though.\r\n\r\n*However*, if the read is incomplete (see my previous comment, seems to occur when size > `8192`) and we bail out at `p->state == 15` where `p->grid_line_event`'s data has already been filled, we might process another event before finishing the redraw state machine cycle.\r\n\r\nFor example the TUI could send some input (in the case of the debugging session I mentioned above, the TUI sends a focus event) which uses data allocated with `alloc_block()` (which likely uses the `arena_reuse_blk`), overwriting the memory of `p->grid_line_event`. Then, on the next read, we return to state `15` and use `p->grid_line_event` which now contains garbage.\r\n\r\nMaking the `grid_line_event` field in `Unpacker` a value instead of a pointer (thus never allocating/freeing it, and never needing to do so) seems to fix the bug, further confirming this idea. \r\n\r\n---\r\n\r\n**NOTE**: The bug is pretty hard to reproduce *consistently*. I usually need to have `nvim` open in a tmux split pane and go absolutely *nuts* scrolling with the mouse wheel while spamming the middle mouse or keyboard keys to try to sneak in an input event midway through a really long redraw event. However I do naturally encounter this crash about a couple of times a week.\r\n\r\n",
            "created_at": "2024-04-15T22:28:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2057916584",
            "id": 2057916584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM56qVCo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2057916584/reactions"
            },
            "updated_at": "2024-04-16T13:40:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2057916584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/92238946?v=4",
                "events_url": "https://api.github.com/users/theofabilous/events{/privacy}",
                "followers_url": "https://api.github.com/users/theofabilous/followers",
                "following_url": "https://api.github.com/users/theofabilous/following{/other_user}",
                "gists_url": "https://api.github.com/users/theofabilous/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theofabilous",
                "id": 92238946,
                "login": "theofabilous",
                "node_id": "U_kgDOBX90Yg",
                "organizations_url": "https://api.github.com/users/theofabilous/orgs",
                "received_events_url": "https://api.github.com/users/theofabilous/received_events",
                "repos_url": "https://api.github.com/users/theofabilous/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theofabilous/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theofabilous/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theofabilous"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl hello, I build from master and this error is not fixed",
            "created_at": "2024-04-18T15:24:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2064221232",
            "id": 2064221232,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM57CYQw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064221232/reactions"
            },
            "updated_at": "2024-04-18T15:24:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064221232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1789565?v=4",
                "events_url": "https://api.github.com/users/qRoC/events{/privacy}",
                "followers_url": "https://api.github.com/users/qRoC/followers",
                "following_url": "https://api.github.com/users/qRoC/following{/other_user}",
                "gists_url": "https://api.github.com/users/qRoC/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/qRoC",
                "id": 1789565,
                "login": "qRoC",
                "node_id": "MDQ6VXNlcjE3ODk1NjU=",
                "organizations_url": "https://api.github.com/users/qRoC/orgs",
                "received_events_url": "https://api.github.com/users/qRoC/received_events",
                "repos_url": "https://api.github.com/users/qRoC/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/qRoC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qRoC/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/qRoC"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@qRoC as always, need more details than that. exact commit? stacktrace? steps to reproduce?",
            "created_at": "2024-04-18T15:32:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2064254628",
            "id": 2064254628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM57Cgak",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064254628/reactions"
            },
            "updated_at": "2024-04-18T15:32:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064254628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk As I said in the first message, sigfault does not always occur (often 130, 139, 141).\r\n\r\nAt the moment, the case that consistently caused the problem (scrolling the main buffer) has been fixed.\r\n\r\nBut I caught 139 while scrolling the float window and at the moment I can't reproduce it, but I'll keep you posted.",
            "created_at": "2024-04-19T07:42:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/27859#issuecomment-2065978826",
            "id": 2065978826,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27859",
            "node_id": "IC_kwDOAPphoM57JFXK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2065978826/reactions"
            },
            "updated_at": "2024-04-19T07:42:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2065978826",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1789565?v=4",
                "events_url": "https://api.github.com/users/qRoC/events{/privacy}",
                "followers_url": "https://api.github.com/users/qRoC/followers",
                "following_url": "https://api.github.com/users/qRoC/following{/other_user}",
                "gists_url": "https://api.github.com/users/qRoC/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/qRoC",
                "id": 1789565,
                "login": "qRoC",
                "node_id": "MDQ6VXNlcjE3ODk1NjU=",
                "organizations_url": "https://api.github.com/users/qRoC/orgs",
                "received_events_url": "https://api.github.com/users/qRoC/received_events",
                "repos_url": "https://api.github.com/users/qRoC/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/qRoC/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qRoC/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/qRoC"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27859/comments",
    "created_at": "2024-03-14T15:56:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27859/events",
    "html_url": "https://github.com/neovim/neovim/issues/27859",
    "id": 2186724794,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": null,
            "id": 242522707,
            "name": "rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/rpc"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue has been tracked to a specific commit",
            "id": 1481421490,
            "name": "has:bisected",
            "node_id": "MDU6TGFiZWwxNDgxNDIxNDkw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:bisected"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27859/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 381,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-05-07T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 13,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-04-23T00:18:43Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM6CVsW6",
    "number": 27859,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 8,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 8,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27859/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27859/timeline",
    "title": "Segfault (msgpack)",
    "updated_at": "2024-04-19T08:25:25Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27859",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1789565?v=4",
        "events_url": "https://api.github.com/users/qRoC/events{/privacy}",
        "followers_url": "https://api.github.com/users/qRoC/followers",
        "following_url": "https://api.github.com/users/qRoC/following{/other_user}",
        "gists_url": "https://api.github.com/users/qRoC/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/qRoC",
        "id": 1789565,
        "login": "qRoC",
        "node_id": "MDQ6VXNlcjE3ODk1NjU=",
        "organizations_url": "https://api.github.com/users/qRoC/orgs",
        "received_events_url": "https://api.github.com/users/qRoC/received_events",
        "repos_url": "https://api.github.com/users/qRoC/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/qRoC/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/qRoC/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/qRoC"
    }
}