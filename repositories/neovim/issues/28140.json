{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nAs far as I am aware, there is not a straightforward way to attach hook into lsp hover windows. Autocmds don't provide enough information to reliably extend hover doc functionality and I am unaware of a reliable strategy to get the window or buffer ids of hover floats.\r\n\r\nIt is possible to hook into them by overriding the `vim.lsp.handlers[vim.lsp.protocol.Methods.textDocument_hover]` function, but overriding built-in functions is a hack way of solving this problem.\n\n### Expected behavior\n\nUsers should be able to hook into the creation of lsp hover windows to attach keymaps, modify buffer contents, apply custom functions, etc.\r\n\r\nFor example, adding a keymap to scroll the hover docs window without entering the window should be straightforward and not require overriding built-in functions (see #27288).\r\n\r\nI could be totally ignorant to some strategy for doing this, but I cannot find anything useful after hours of research.\r\nI am also unfamiliar with Neovim's source, so the suggested solutions could be terrible ideas.\r\n\r\nI would love to implement these solutions myself, but I'm curious if this is even wanted/needed before working on it.\r\n\r\n### Possible Solutions\r\n\r\n#### Give Hover Doc Buffers a Unique Filetype\r\n\r\nThis is the most simple solution. This allows users to hook into the window creation via the `FileType` auevent.\r\nOne downside of this solution is that you have to discover the window id via the buffer id, which isn't ideal.\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd('Filetype', {\r\n    pattern = 'LspDocFloat',\r\n    callback = function(args)\r\n        vim.keymap.set('n', 'T', function() userFunction() end, { buffer = args.buf })\r\n    end\r\n})\r\n```\r\n\r\n#### Add an auevent for hover window creation\r\n\r\nMore complicated that adding a filetype, but potentially more useful. Would need to expose `args.win` and `args.buf`.\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd('HoverNew', {\r\n    callback = function(args)\r\n        vim.keymap.set('n', 'T', function() userFunction(args.win) end, { buffer = args.buf })\r\n    end\r\n})\r\n```\r\n\r\n#### Expose the buffer and window ids via `vim.lsp.buf.hover()`\r\n\r\nProbably not even possible since the handler that creates the float seems to only be invoked on server response.\r\nUsers could then wrap their own function and call it in a keymap.\r\n\r\n```lua\r\nfunction M.hover()\r\n    local winnr, bufnr = vim.lsp.buf.hover()\r\n    -- do whatever you want that requires the winnr/bufnr\r\nend\r\n\r\nvim.keymap.set('n', 'K', function() M.hover() end)\r\n```\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28140/comments",
    "created_at": "2024-04-01T01:04:38Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28140/events",
    "html_url": "https://github.com/neovim/neovim/issues/28140",
    "id": 2217296854,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28140/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6EKUPW",
    "number": 28140,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28140/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28140/timeline",
    "title": "Ability to hook into lsp hover documentation floating windows",
    "updated_at": "2024-04-01T01:04:50Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28140",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
        "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
        "followers_url": "https://api.github.com/users/roycrippen4/followers",
        "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
        "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/roycrippen4",
        "id": 54562558,
        "login": "roycrippen4",
        "node_id": "MDQ6VXNlcjU0NTYyNTU4",
        "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
        "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
        "repos_url": "https://api.github.com/users/roycrippen4/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/roycrippen4"
    }
}