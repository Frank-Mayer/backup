{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nIt's a bit difficult to explain, see the reproduction steps. Basically, the `vim.notify` call in the default `SwapExists` autocmd can \"trip\" the `did_filetype()` state, which prevents the `filetype` from being set for the buffer that triggered the `SwapExists` in the first place if that buffer was `:edit`ed from inside an autocmd.\r\n\r\n### Steps to reproduce\r\n\r\n1. Save the below config script as `minimal.lua`\r\n2. Run `nvim --clean -u minimal.lua`\r\n3. Hit Enter until the 'Press ENTER or type command to continue' messages go away\r\n4. Run `:messages`\r\n5. Open a second terminal window, without closing the first one\r\n6. Repeat 2-4 in the second terminal window\r\n7. Observe that \"FileType 1\" was printed in the first terminal, but not in the second terminal. Also observe that the file in the second terminal doesn't have working syntax highlighting, and that `filetype` is not set.\r\n\r\n```lua\r\n-- Run this file as `nvim --clean -u minimal.lua`\r\n\r\nfor name, url in pairs {\r\n  [\"nvim-notify\"] = \"https://github.com/rcarriga/nvim-notify\",\r\n} do\r\n  local install_path = vim.fn.fnamemodify(\"nvim_issue/\" .. name, \":p\")\r\n  if vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { \"git\", \"clone\", \"--depth=1\", url, install_path }\r\n  end\r\n  vim.opt.runtimepath:append(install_path)\r\nend\r\n\r\nlocal notify = require(\"notify\")\r\nnotify.setup()\r\nvim.notify = notify\r\n\r\n-- this does fix the issue, but not ideal imo\r\n-- vim.notify = function(...)\r\n--   local args = { ... }\r\n--   vim.schedule(function() notify(unpack(args)) end)\r\n-- end\r\n\r\nvim.api.nvim_create_autocmd(\"BufReadPre\", {\r\n  callback = function(opts)\r\n    print(\"BufReadPre\", opts.buf)\r\n  end,\r\n})\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n  callback = function(opts)\r\n    print(\"FileType\", opts.buf)\r\n  end,\r\n})\r\nvim.api.nvim_create_autocmd(\"BufReadPost\", {\r\n  callback = function(opts)\r\n    print(\"BufReadPost\", opts.buf)\r\n  end,\r\n})\r\n\r\nvim.api.nvim_create_autocmd(\"VimEnter\", {\r\n  callback = function()\r\n    vim.cmd.edit(\"minimal.lua\")\r\n  end,\r\n  nested = true,\r\n})\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\nBoth terminals should have `filetype` set successfully - \"FileType 1\" should be printed in both. \r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-2743+gf29c41d66\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nmacOS 14.4.1\r\n\r\n### Terminal name/version\r\n\r\nAlacritty 0.13.2\r\n\r\n### $TERM environment variable\r\n\r\nalacritty\r\n\r\n### Installation\r\n\r\nhomebrew, with --HEAD",
    "closed_at": "2024-03-31T22:12:13Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I can think of 3 possible solutions:\r\n1. When replacing `vim.notify`, wrap the replacement function in `vim.schedule`. This defers actually displaying the notification until after the buffer has completely loaded in and the `filetype` has already been set.\r\n2. Wrap the `vim.notify` call inside the default `SwapExists` autocmd in `vim.schedule`. This is the same idea as above, just one step higher up the call stack, so it won't affect every place `vim.notify` is used.\r\n3. Make the `did_filetype()` state entirely buffer-specific. The root cause of this bug is that the `did_filetype()` is shared between the original buffer and the notification buffer created by `nvim-notify`, which prevents [runtime/filetype.lua](https://github.com/neovim/neovim/blob/38e38d1b401e38459842f0e4da431e3dd6c2e527/runtime/filetype.lua) from setting the `filetype` on both buffers while inside one \"root\" autocmd.\r\n\r\nThe first solution is of course the simplest, and doesn't need any actual changes to Neovim. I don't think it's ideal though, because it means that all calls to `vim.notify` will have to go through `vim.schedule`. The second solution fixes that issue, and is a very straightforward change. The third solution is the most general, but is presumably rather complex to actually implement. The docs for `did_filetype()` state \"... thus this really checks if the FileType event has been triggered for the current buffer.\", so a buffer-local state would make a lot of sense.\r\n\r\nJust found #25436, which is very similar to this - making the `did_filetype()` state entirely buffer-specific should also fix that.",
            "created_at": "2024-03-30T00:13:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/28110#issuecomment-2027837493",
            "id": 2027837493,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28110",
            "node_id": "IC_kwDOAPphoM543lg1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027837493/reactions"
            },
            "updated_at": "2024-03-30T01:12:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027837493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49614525?v=4",
                "events_url": "https://api.github.com/users/AThePeanut4/events{/privacy}",
                "followers_url": "https://api.github.com/users/AThePeanut4/followers",
                "following_url": "https://api.github.com/users/AThePeanut4/following{/other_user}",
                "gists_url": "https://api.github.com/users/AThePeanut4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AThePeanut4",
                "id": 49614525,
                "login": "AThePeanut4",
                "node_id": "MDQ6VXNlcjQ5NjE0NTI1",
                "organizations_url": "https://api.github.com/users/AThePeanut4/orgs",
                "received_events_url": "https://api.github.com/users/AThePeanut4/received_events",
                "repos_url": "https://api.github.com/users/AThePeanut4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AThePeanut4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AThePeanut4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AThePeanut4"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Repro in Vim script:\r\n```vim\r\nfiletype on\r\nlet b1 = bufnr()\r\nnew\r\nautocmd SwapExists * let v:swapchoice = 'e' | call setbufvar(b1, '&filetype', 'text')\r\nautocmd SafeState * ++nested ++once edit <script>\r\n```",
            "created_at": "2024-03-30T02:24:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/28110#issuecomment-2027883373",
            "id": 2027883373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28110",
            "node_id": "IC_kwDOAPphoM543wtt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027883373/reactions"
            },
            "updated_at": "2024-03-30T02:41:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027883373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for the speedy fix @zeertzjq :heart: ",
            "created_at": "2024-04-01T13:14:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/28110#issuecomment-2029741942",
            "id": 2029741942,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28110",
            "node_id": "IC_kwDOAPphoM54-2d2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2029741942/reactions"
            },
            "updated_at": "2024-04-01T13:14:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2029741942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49614525?v=4",
                "events_url": "https://api.github.com/users/AThePeanut4/events{/privacy}",
                "followers_url": "https://api.github.com/users/AThePeanut4/followers",
                "following_url": "https://api.github.com/users/AThePeanut4/following{/other_user}",
                "gists_url": "https://api.github.com/users/AThePeanut4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AThePeanut4",
                "id": 49614525,
                "login": "AThePeanut4",
                "node_id": "MDQ6VXNlcjQ5NjE0NTI1",
                "organizations_url": "https://api.github.com/users/AThePeanut4/orgs",
                "received_events_url": "https://api.github.com/users/AThePeanut4/received_events",
                "repos_url": "https://api.github.com/users/AThePeanut4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AThePeanut4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AThePeanut4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AThePeanut4"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28110/comments",
    "created_at": "2024-03-30T00:06:23Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28110/events",
    "html_url": "https://github.com/neovim/neovim/issues/28110",
    "id": 2216102766,
    "labels": [
        {
            "color": "F9D0C4",
            "default": false,
            "description": "wrong behavior inherited from vim",
            "id": 154310492,
            "name": "bug-vim",
            "node_id": "MDU6TGFiZWwxNTQzMTA0OTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-vim"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filetype detection, filetype.lua",
            "id": 3708202139,
            "name": "filetype",
            "node_id": "LA_kwDOAPphoM7dBqyb",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filetype"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28110/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 343,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-05-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 38,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-04-01T11:13:57Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM6EFwtu",
    "number": 28110,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28110/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28110/timeline",
    "title": "Default SwapExists autocmd can prevent the buffer's filetype from being set",
    "updated_at": "2024-04-01T13:14:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28110",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/49614525?v=4",
        "events_url": "https://api.github.com/users/AThePeanut4/events{/privacy}",
        "followers_url": "https://api.github.com/users/AThePeanut4/followers",
        "following_url": "https://api.github.com/users/AThePeanut4/following{/other_user}",
        "gists_url": "https://api.github.com/users/AThePeanut4/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/AThePeanut4",
        "id": 49614525,
        "login": "AThePeanut4",
        "node_id": "MDQ6VXNlcjQ5NjE0NTI1",
        "organizations_url": "https://api.github.com/users/AThePeanut4/orgs",
        "received_events_url": "https://api.github.com/users/AThePeanut4/received_events",
        "repos_url": "https://api.github.com/users/AThePeanut4/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/AThePeanut4/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AThePeanut4/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/AThePeanut4"
    }
}