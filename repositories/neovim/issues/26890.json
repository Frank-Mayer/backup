{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI get crash with `numberwidth = 1` using statuscol.nvim on 0.10 branch. \r\n\r\n```cpp\r\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at ./nptl/pthread_kill.c:44\r\n#1  0x00007fe3066b015f in __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78\r\n#2  0x00007fe306662472 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\r\n#3  0x00007fe30664c4b2 in __GI_abort () at ./stdlib/abort.c:79\r\n#4  0x00007fe30664c3d5 in __assert_fail_base (fmt=0x7fe3067c0dc8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x562ff2ad45e0 \"len <= width\", \r\n    file=file@entry=0x562ff2af8398 \".../src/nvim/statusline.c\", line=line@entry=260, function=function@entry=0x562ff2aabe00 <__PRETTY_FUNCTION__.12> \"stl_fill_click_defs\") at ./assert/assert.c:92\r\n#5  0x00007fe30665b3a2 in __assert_fail (assertion=assertion@entry=0x562ff2ad45e0 \"len <= width\", file=file@entry=0x562ff2af8398 \".../src/nvim/statusline.c\", line=line@entry=260, \r\n    function=function@entry=0x562ff2aabe00 <__PRETTY_FUNCTION__.12> \"stl_fill_click_defs\") at ./assert/assert.c:101\r\n#6  0x0000562ff291e157 in stl_fill_click_defs (click_defs=0x562ff4a6ff40, click_recs=0x562ff4aac9f0, buf=<optimized out>, buf@entry=0x7ffc0b2b1b30 \"1 \", width=1, tabline=tabline@entry=false)\r\n    at .../src/nvim/statusline.c:260\r\n#7  0x0000562ff2925dcd in build_statuscol_str (wp=0x562ff4a20be0, lnum=<optimized out>, relnum=<optimized out>, buf=0x7ffc0b2b1b30 \"1 \", stcp=0x7ffc0b2b2d30) at .../src/nvim/statusline.c:889\r\n#8  0x0000562ff277e1e1 in draw_statuscol (wp=0x562ff4a20be0, wlv=0x7ffc0b2b2fe0, lnum=1, virtnum=0, stcp=0x7ffc0b2b2d30) at .../src/nvim/drawline.c:579\r\n#9  0x0000562ff2782c87 in win_line (wp=wp@entry=0x562ff4a20be0, lnum=lnum@entry=1, startrow=startrow@entry=0, endrow=13, number_only=number_only@entry=false, spv=0x7ffc0b2b41f0, foldinfo=...)\r\n    at .../src/nvim/drawline.c:1495\r\n#10 0x0000562ff27879b6 in win_update (wp=wp@entry=0x562ff4a20be0) at .../src/nvim/drawscreen.c:2279\r\n#11 0x0000562ff2788cec in update_screen () at .../src/nvim/drawscreen.c:631\r\n#12 0x0000562ff287b4d3 in normal_redraw (s=s@entry=0x7ffc0b2b4320) at .../src/nvim/normal.c:1347\r\n#13 0x0000562ff287d156 in normal_check (state=0x7ffc0b2b4320) at .../src/nvim/normal.c:1443\r\n#14 0x0000562ff291da6a in state_enter (s=0x7ffc0b2b4320) at .../src/nvim/state.c:37\r\n#15 0x0000562ff287ad32 in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at .../src/nvim/normal.c:508\r\n#16 0x0000562ff2841248 in main (argc=4, argv=<optimized out>) at .../src/nvim/main.c:637\r\n```\r\n\r\n\r\n@luukvbaal \n\n### Steps to reproduce\n\ninit.lua:\r\n```lua\r\nlocal thisInitFile = debug.getinfo(1).source:match('@?(.*)')\r\nlocal configDir = vim.fs.dirname(thisInitFile)\r\n\r\nvim.env['XDG_CONFIG_HOME'] = configDir\r\nvim.env['XDG_DATA_HOME'] = vim.fs.joinpath(configDir, '.xdg/data')\r\nvim.env['XDG_STATE_HOME'] = vim.fs.joinpath(configDir, '.xdg/state')\r\nvim.env['XDG_CACHE_HOME'] = vim.fs.joinpath(configDir, '.xdg/cache')\r\nlocal stdPathConfig = vim.fn.stdpath('config')\r\n\r\nvim.opt.runtimepath:prepend(stdPathConfig)\r\nvim.opt.packpath:prepend(stdPathConfig)\r\n\r\nlocal function gitClone(url, installPath, branch)\r\n  if vim.fn.isdirectory(installPath) ~= 0 then\r\n    return\r\n  end\r\n\r\n  local command = {'git', 'clone', '--depth=1', '--', url, installPath}\r\n  if branch then\r\n    table.insert(command, 3, '--branch')\r\n    table.insert(command, 4, branch)\r\n  end\r\n  local sysObj = vim.system(command, {}):wait()\r\n  if sysObj.code ~= 0 then\r\n    error(sysObj.stderr)\r\n  end\r\n  vim.notify(sysObj.stdout)\r\n  vim.notify(sysObj.stderr, vim.log.levels.WARN)\r\nend\r\n\r\nlocal pluginsPath = 'plugins'\r\nvim.fn.mkdir(pluginsPath, 'p')\r\npluginsPath = vim.uv.fs_realpath(pluginsPath)\r\n\r\nlocal plugins = {\r\n  ['statuscol.nvim'] = {url = 'https://github.com/luukvbaal/statuscol.nvim', branch = '0.10'},\r\n}\r\n\r\nfor name, repo in pairs(plugins) do\r\n  local installPath = vim.fs.joinpath(pluginsPath, name)\r\n  gitClone(repo.url, installPath, repo.branch)\r\n  vim.opt.runtimepath:append(installPath)\r\nend\r\n\r\nrequire('statuscol').setup({})\r\nvim.wo.number = true\r\nvim.wo.numberwidth = 1\r\n```\r\n```sh\r\nnvim --clean -u init.lua\r\n```\n\n### Expected behavior\n\nNo crash\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0-dev-2035+g88eb0ad14\n\n### Vim (not Nvim) behaves the same?\n\n-\n\n### Operating system/version\n\nDebian Sid\n\n### Terminal name/version\n\ntmux 3.3a-5, kitty 0.31.0\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nfrom repo",
    "closed_at": "2024-01-05T13:34:55Z",
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26890/comments",
    "created_at": "2024-01-05T01:36:25Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26890/events",
    "html_url": "https://github.com/neovim/neovim/issues/26890",
    "id": 2066592478,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "sign/number column",
            "id": 2962322085,
            "name": "column",
            "node_id": "MDU6TGFiZWwyOTYyMzIyMDg1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/column"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "tabline, winbar, statuscolumn",
            "id": 3385615828,
            "name": "statusline",
            "node_id": "LA_kwDOAPphoM7JzGXU",
            "url": "https://api.github.com/repos/neovim/neovim/labels/statusline"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26890/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM57LbLe",
    "number": 26890,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26890/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26890/timeline",
    "title": "Assertion `len <= width` failed with `numberwidth = 1`",
    "updated_at": "2024-01-05T13:34:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26890",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia"
    }
}