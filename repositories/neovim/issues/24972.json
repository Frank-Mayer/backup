{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nSometimes lsp client hangs and get \r\n\r\n```\r\nError executing lua callback: ...rs\\ekarni\\Neovim\\share\\nvim\\runtime/lua/vim/lsp/sync.lua:177: attempt to get length of local 'prev_line' (a nil value)\r\nstack traceback:\r\n\t...rs\\ekarni\\Neovim\\share\\nvim\\runtime/lua/vim/lsp/sync.lua:177: in function 'compute_start_range'\r\n\t...rs\\ekarni\\Neovim\\share\\nvim\\runtime/lua/vim/lsp/sync.lua:408: in function 'compute_diff'\r\n\tC:\\Users\\ekarni\\Neovim\\share\\nvim\\runtime/lua/vim/lsp.lua:446: in function 'incremental_changes'\r\n\tC:\\Users\\ekarni\\Neovim\\share\\nvim\\runtime/lua/vim/lsp.lua:639: in function 'send_changes'\r\n\tC:\\Users\\ekarni\\Neovim\\share\\nvim\\runtime/lua/vim/lsp.lua:1577: in function <C:\\Users\\ekarni\\Neovim\\share\\nvim\\runtime/lua/vim/lsp.lua:1564>\r\n\r\n\r\n```\r\n\r\nThe file is python file. I use lsp_config and nvim-lsp-installer with copilot , null-ls , pyright, pylsp as lsp clients. I don't know which failed. \r\nI got this message constantly when writing a line (on every char). It got OK eventually. \r\n\r\n### Steps to reproduce\r\n\r\nUnkown\r\n\r\n### Expected behavior\r\n\r\nThis shouldn't happen\r\n\r\n### Neovim version (nvim -v)\r\n\r\n NVIM v0.9.1 Build type: RelWithDebInfo LuaJIT 2.1.0-beta3 Compilation: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/MSVC/14.29.30133/bin/Hostx64/x64/cl.exe /MD /Zi /O2 /Ob1  -W3 -wd4311 -wd4146 -DUNIT_TESTING -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -D_WIN32_WINNT=0x0602 -DMSWIN -DINCLUDE_GENERATED_DECLARATIONS -ID:/a/neovim/neovim/.deps/usr/include/luajit-2.1 -ID:/a/neovim/neovim/.deps/usr/include -ID:/a/neovim/neovim/.deps/usr/include -ID:/a/neovim/neovim/build/src/nvim/auto -ID:/a/neovim/neovim/build/include -ID:/a/neovim/neovim/build/cmake.config -ID:/a/neovim/neovim/src -ID:/a/neovim/neovim/.deps/usr/include -ID:/a/neovim/neovim/.deps/usr/include -ID:/a/neovim/neovim/.deps/usr/include -ID:/a/neovim/neovim/.deps/usr/include -ID:/a/neovim/neovim/.deps/usr/include -ID:/a/neovim/neovim/.deps/usr/include -ID:/a/neovim/neovim/.deps/usr/include     system vimrc file: \"$VIM\\sysinit.vim\"   fall-back for $VIM: \"C:/Program Files (x86)/nvim/share/nvim\"  Run :checkhealth for more info\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\ndidnt try\r\n\r\n### Operating system/version\r\n\r\nwindows\r\n\r\n### Terminal name/version\r\n\r\nnvim-qt\r\n\r\n### $TERM environment variable\r\n\r\n''\r\n\r\n### Installation\r\n\r\nstable probably",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Please fill out the template correctly; those fields are there for a reason. (For example, _where_ did you get the nightly from? And why does the version then claim `NVIM 0.9.1`, which is stable?)\r\n\r\nWe also need at least _some_ context to be able to debug this: What server? What file? How do you start the server (plugins?)... ",
            "created_at": "2023-09-01T17:03:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1703068738",
            "id": 1703068738,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5lgsRC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703068738/reactions"
            },
            "updated_at": "2023-09-01T17:03:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703068738",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, fixed. Is it OK now? ",
            "created_at": "2023-09-01T17:19:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1703085956",
            "id": 1703085956,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5lgweE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703085956/reactions"
            },
            "updated_at": "2023-09-01T17:19:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703085956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/72234965?v=4",
                "events_url": "https://api.github.com/users/eyalk11/events{/privacy}",
                "followers_url": "https://api.github.com/users/eyalk11/followers",
                "following_url": "https://api.github.com/users/eyalk11/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyalk11/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eyalk11",
                "id": 72234965,
                "login": "eyalk11",
                "node_id": "MDQ6VXNlcjcyMjM0OTY1",
                "organizations_url": "https://api.github.com/users/eyalk11/orgs",
                "received_events_url": "https://api.github.com/users/eyalk11/received_events",
                "repos_url": "https://api.github.com/users/eyalk11/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eyalk11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyalk11/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eyalk11"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry, no, that's not nearly enough for us to go on.",
            "created_at": "2023-09-01T17:28:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1703095506",
            "id": 1703095506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5lgyzS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703095506/reactions"
            },
            "updated_at": "2023-09-01T17:28:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703095506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't think I know any more useful details. Is the LSP log useful? I am not sure I know in what time this has happened. Anything else?  `What server? What file? ` I can answer about the file but it won't help you. It is a python file. I don't know the server. ",
            "created_at": "2023-09-01T17:30:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1703097645",
            "id": 1703097645,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5lgzUt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703097645/reactions"
            },
            "updated_at": "2023-09-01T17:31:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703097645",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/72234965?v=4",
                "events_url": "https://api.github.com/users/eyalk11/events{/privacy}",
                "followers_url": "https://api.github.com/users/eyalk11/followers",
                "following_url": "https://api.github.com/users/eyalk11/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyalk11/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/eyalk11",
                "id": 72234965,
                "login": "eyalk11",
                "node_id": "MDQ6VXNlcjcyMjM0OTY1",
                "organizations_url": "https://api.github.com/users/eyalk11/orgs",
                "received_events_url": "https://api.github.com/users/eyalk11/received_events",
                "repos_url": "https://api.github.com/users/eyalk11/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/eyalk11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyalk11/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/eyalk11"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The point is to create a minimal(!) config and example that somebody else can try at home. (Server == LSP server; there's multiple for python.)\r\n\r\nFirst step would be to remove copilot from the equation.",
            "created_at": "2023-09-01T17:36:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1703103683",
            "id": 1703103683,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5lg0zD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703103683/reactions"
            },
            "updated_at": "2023-09-01T17:36:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1703103683",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "Running into this as well.\r\nMacOS Monterey.\r\n\r\n```\r\nError executing lua callback: /Users/xxxxx/share/nvim/runtime/lua/vim/lsp/sync.lua:248: attempt to get length of local 'prev_line' (a nil value)                                                                                                                                                                    \r\nstack traceback:\r\n        /Users/xxxxx/share/nvim/runtime/lua/vim/lsp/sync.lua:248: in function 'compute_end_range'\r\n        /Users/xxxxx/share/nvim/runtime/lua/vim/lsp/sync.lua:419: in function 'compute_diff'\r\n        /Users/xxxxx/share/nvim/runtime/lua/vim/lsp.lua:446: in function 'incremental_changes'\r\n        /Users/xxxxx/share/nvim/runtime/lua/vim/lsp.lua:639: in function 'send_changes'\r\n        /Users/xxxxx/share/nvim/runtime/lua/vim/lsp.lua:1576: in function </Users/xxxxx/share/nvim/runtime/lua/vim/lsp.lua:1563>\r\n```\r\n\r\n:version                                                                                                                                                                                                                                                                                                               \r\nNVIM v0.9.2\r\nBuild type: Release\r\nLuaJIT 2.1.1692716794\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/usr/local/share/nvim\"\r\n\r\n```\r\n Detected filetype:   rust\r\n \r\n 2 client(s) attached to this buffer: \r\n \r\n Client: diagnosticls (id: 11, bufnr: [35, 21, 314, 223, 47, 132, 56, 36])\r\n \tfiletypes:       \r\n \tautostart:       true\r\n \troot directory:  /Users/xxxxx/...\r\n \tcmd:             diagnostic-languageserver --stdio\r\n \r\n Client: rust_analyzer (id: 12, bufnr: [47, 314, 36])\r\n \tfiletypes:       rust\r\n \tautostart:       true\r\n \troot directory:  /Users/xxxx/...\r\n \tcmd:             /Users/xxxx/.cargo/bin/rust-analyzer\r\n```\r\n\r\nFound these messages in LSP log:\r\n\r\n```\r\n[ERROR][2023-10-07 19:51:51] .../vim/lsp/rpc.lua:734\t\"rpc\"\t\"/Users/xxxxx/.cargo/bin/rust-analyzer\"\t\"stderr\"\t'[ERROR rust_analyzer::dispatch] unknown request: Request { id: RequestId(I32(6088)), method: \"workspace/executeCommand\", params: Object {\"title\": String(\"triggerParameterHints\"), \"command\": String(\"rust-analyzer.triggerParameterHints\")} }\\n'\r\n[ERROR][2023-10-07 19:52:07] .../vim/lsp/rpc.lua:734\t\"rpc\"\t\"/Users/xxxxx/.cargo/bin/rust-analyzer\"\t\"stderr\"\t'[ERROR rust_analyzer::dispatch] unknown request: Request { id: RequestId(I32(6167)), method: \"workspace/executeCommand\", params: Object {\"title\": String(\"triggerParameterHints\"), \"command\": String(\"rust-analyzer.triggerParameterHints\")} }\\n'\r\n[ERROR][2023-10-07 19:52:59] .../vim/lsp/rpc.lua:734\t\"rpc\"\t\"/Users/xxxxx/.cargo/bin/rust-analyzer\"\t\"stderr\"\t'[ERROR rust_analyzer::dispatch] unknown request: Request { id: RequestId(I32(6366)), method: \"workspace/executeCommand\", params: Object {\"title\": String(\"triggerParameterHints\"), \"command\": String(\"rust-analyzer.triggerParameterHints\")} }\\n'\r\n[ERROR][2023-10-07 19:53:34] .../vim/lsp/rpc.lua:734\t\"rpc\"\t\"/Users/xxxxx/.cargo/bin/rust-analyzer\"\t\"stderr\"\t'[ERROR rust_analyzer::dispatch] unknown request: Request { id: RequestId(I32(6480)), method: \"workspace/executeCommand\", params: Object {\"title\": String(\"triggerParameterHints\"), \"command\": String(\"rust-analyzer.triggerParameterHints\")} }\\n'\r\n```\r\n\r\nGets triggered every time I write a Rust file. This seems to be accompanied by this error in LSP Log as well:\r\n\r\n```\r\n[ERROR][2023-10-07 20:18:48] ...lsp/handlers.lua:535\t\"Notification handler 'textDocument/didChange' failed with message: TextDocument.update: document must be created by TextDocument.create\"\r\n[ERROR][2023-10-07 20:18:50] ...lsp/handlers.lua:535\t\"Notification handler 'textDocument/didChange' failed with message: TextDocument.update: document must be created by TextDocument.create\"\r\n[ERROR][2023-10-07 20:19:01] ...lsp/handlers.lua:535\t\"Notification handler 'textDocument/didChange' failed with message: TextDocument.update: document must be created by TextDocument.create\"\r\n[ERROR][2023-10-07 20:19:02] ...lsp/handlers.lua:535\t\"Notification handler 'textDocument/didChange' failed with message: TextDocument.update: document must be created by TextDocument.create\"\r\n```\r\nRestarting the editor fixes the problem.",
            "created_at": "2023-10-08T00:12:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1751872272",
            "id": 1751872272,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5oa3MQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751872272/reactions"
            },
            "updated_at": "2023-10-08T00:24:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751872272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6857926?v=4",
                "events_url": "https://api.github.com/users/monopoly-db/events{/privacy}",
                "followers_url": "https://api.github.com/users/monopoly-db/followers",
                "following_url": "https://api.github.com/users/monopoly-db/following{/other_user}",
                "gists_url": "https://api.github.com/users/monopoly-db/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/monopoly-db",
                "id": 6857926,
                "login": "monopoly-db",
                "node_id": "MDQ6VXNlcjY4NTc5MjY=",
                "organizations_url": "https://api.github.com/users/monopoly-db/orgs",
                "received_events_url": "https://api.github.com/users/monopoly-db/received_events",
                "repos_url": "https://api.github.com/users/monopoly-db/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/monopoly-db/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/monopoly-db/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/monopoly-db"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have the same problem on neovim 0.9.1 from homebrew, with lspconfig, coc-clangd. It happens seemingly all the time, whenever I edit the current buffer, switch to a new one and then edit in that. Specifically, editing inside a C++ function argument list seems to trigger this problem, not every edit otherwise.\r\n\r\n```\r\nError executing lua callback: ...lar/neovim/0.9.1/share/nvim/runtime/lua/vim/lsp/sync.lua:177: attempt to get length of local 'prev_line' (a nil value)\r\nstack traceback:\r\n        ...lar/neovim/0.9.1/share/nvim/runtime/lua/vim/lsp/sync.lua:177: in function 'compute_start_range'\r\n        ...lar/neovim/0.9.1/share/nvim/runtime/lua/vim/lsp/sync.lua:408: in function 'compute_diff'\r\n        ...w/Cellar/neovim/0.9.1/share/nvim/runtime/lua/vim/lsp.lua:446: in function 'incremental_changes'\r\n        ...w/Cellar/neovim/0.9.1/share/nvim/runtime/lua/vim/lsp.lua:639: in function 'send_changes'\r\n        ...w/Cellar/neovim/0.9.1/share/nvim/runtime/lua/vim/lsp.lua:1577: in function <...w/Cellar/neovim/0.9.1/share/nvim/runtime/lua/vim/lsp.lua:1564>\r\n```\r\n\r\nThe error happens as soon as I include this code in `init.vim`, just including lspconfig alone does not trigger it\r\n\r\n```\r\ncall dein#add('neovim/nvim-lspconfig')\r\nfunction! LspAttached() abort\r\n\"   empty\r\nendfunction\r\n\r\nlua <<EOF\r\nrequire(\"lspconfig\").clangd.setup({\r\n  on_attach = function()\r\n    vim.call('LspAttached')\r\n  end\r\n})\r\nEOF\r\n```\r\n\r\n(I'm using dein package manager)",
            "created_at": "2023-11-06T16:10:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1795309733",
            "id": 1795309733,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5rAkCl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1795309733/reactions"
            },
            "updated_at": "2023-11-06T16:31:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1795309733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11613312?v=4",
                "events_url": "https://api.github.com/users/themightyoarfish/events{/privacy}",
                "followers_url": "https://api.github.com/users/themightyoarfish/followers",
                "following_url": "https://api.github.com/users/themightyoarfish/following{/other_user}",
                "gists_url": "https://api.github.com/users/themightyoarfish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/themightyoarfish",
                "id": 11613312,
                "login": "themightyoarfish",
                "node_id": "MDQ6VXNlcjExNjEzMzEy",
                "organizations_url": "https://api.github.com/users/themightyoarfish/orgs",
                "received_events_url": "https://api.github.com/users/themightyoarfish/received_events",
                "repos_url": "https://api.github.com/users/themightyoarfish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/themightyoarfish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/themightyoarfish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/themightyoarfish"
            }
        },
        {
            "author_association": "NONE",
            "body": "In my case, I could narrow it down to the presence or absence of this block:\r\n```\r\naugroup cppbindings\r\n    autocmd!\r\n    autocmd BufReadPre,FileReadPre *.hpp set ft=cpp\r\n    autocmd BufReadPre,FileReadPre *.cpp set ft=cpp\r\naugroup END\r\n```\r\n\r\nwhen included, the error occurs. When not included, no problem.",
            "created_at": "2023-11-06T16:55:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1795487507",
            "id": 1795487507,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5rBPcT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1795487507/reactions"
            },
            "updated_at": "2023-11-06T16:55:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1795487507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11613312?v=4",
                "events_url": "https://api.github.com/users/themightyoarfish/events{/privacy}",
                "followers_url": "https://api.github.com/users/themightyoarfish/followers",
                "following_url": "https://api.github.com/users/themightyoarfish/following{/other_user}",
                "gists_url": "https://api.github.com/users/themightyoarfish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/themightyoarfish",
                "id": 11613312,
                "login": "themightyoarfish",
                "node_id": "MDQ6VXNlcjExNjEzMzEy",
                "organizations_url": "https://api.github.com/users/themightyoarfish/orgs",
                "received_events_url": "https://api.github.com/users/themightyoarfish/received_events",
                "repos_url": "https://api.github.com/users/themightyoarfish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/themightyoarfish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/themightyoarfish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/themightyoarfish"
            }
        },
        {
            "author_association": "NONE",
            "body": "For me this can be reproduced reliably when an LSP client is attached to a DAP repl. This *sometimes* (very rarely) happens outside of that as well, but I can only reliably reproduce it with DAP. I reproduced it by accident when misconfigured dap with cmp, but hopefully having a repro (even if dumb and artificial) can help with the real issue.\r\n\r\nSo the following repro requires some dependencies (python, debugpy, pyright LSP, nvim-lspconfig, nvim-dap).\r\n<details> <summary> Versions (neovim on semi-recent master, everything else fresh): </summary>\r\n\r\n```\r\nNVIM v0.10.0-dev-6abc60844\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.1693350652\r\nRun \"nvim -V1 -v\" for more info\r\n```\r\n\r\nDependencies versions are all in master/most recent packages and I don't think that will matter, but just in case:\r\n```\r\npython==3.11.3\r\ndebugpy==1.8.0\r\npyright==1.1.337\r\nnvim-lspconfig==553c4e0\r\nnvim-dap==e154fdb\r\n```\r\n\r\n</details>\r\n<details> <summary> Reproducing </summary>\r\n\r\n1. Install all dependencies (python, debugpy, pyright, LSP, nvim-lspconfig, nvim-dap). It is assumed that `python3 -m debugpy.adapter` will work with system python.\r\n2. Create this minimal_init.lua\r\n```lua\r\n-- ADJUST THE FOLLOWING TWO VARIABLES. YOU MUST HAVE nvim-dap, debugpy, pyright, nvim-lspconfig INSTALLED.\r\nlocal PLUGINS_PATH = vim.fn.expand(\"~/.local/share/nvim/lazy/\")\r\nlocal PYRIGHT_PATH = vim.fn.expand(\"~/.local/share/nvim/mason/bin/pyright-langserver\")\r\n\r\nlocal plugins = { \"nvim-dap\", \"nvim-lspconfig\" }\r\nfor _, plugin in ipairs(plugins) do\r\n  vim.opt.rtp:append(PLUGINS_PATH .. plugin)\r\nend\r\n\r\nrequire(\"lspconfig\").pyright.setup({ cmd = { PYRIGHT_PATH, \"--stdio\" } })\r\nlocal dap = require(\"dap\")\r\ndap.adapters.python = {\r\n  type = \"executable\",\r\n  command = \"python3\",\r\n  args = { \"-m\", \"debugpy.adapter\" },\r\n  options = {\r\n    source_filetype = \"python\",\r\n  },\r\n}\r\n\r\nlocal debugpy_config = {\r\n  name = \"Launch file\",\r\n  cwd = \"${workspaceFolder}\",\r\n  program = \"${file}\",\r\n  request = \"launch\",\r\n  stopOnEntry = \"true\",\r\n  type = \"python\",\r\n}\r\n\r\nlocal function find_dap_repl_buf()\r\n  for _, buf in ipairs(vim.api.nvim_list_bufs()) do\r\n    if vim.bo[buf].filetype == \"dap-repl\" then\r\n      return buf\r\n    end\r\n  end\r\nend\r\n\r\nfunction _G.repro()\r\n  require(\"dap\").run(debugpy_config)\r\n  require(\"dap\").repl.open()\r\n  local repl_buf = find_dap_repl_buf()\r\n  vim.lsp.buf_attach_client(repl_buf, 1)\r\n  print(\"Now type in dap-repl and press <CR>. Continue typing for more errors.\")\r\nend\r\n\r\n```\r\n3. Create `sample.py` with any non-empty content (`i = 1` will do).\r\n4. Run `nvim -u minimal_init.lua sample.py`\r\n5. Inside the new neovim instance, run `:lua repro()`\r\n6. Start typing in the dap-repl window, hit Enter, and that should give you an error. If you keep typing, there will be more errors, since the change-tracking state is now corrupted.\r\n</details>\r\n\r\nI *think* it has to do with the `>dap` prompt that causes a race condition with keeping track of the state.\r\nWhen I add the following to sync.lua:\r\n\r\n```lua\r\n  if prev_line == nil then\r\n\t  error(vim.inspect({prev_lines, curr_lines, firstline}))\r\n  end\r\n```\r\nThis repro gives me these lines:\r\n```\r\n{ { \"dap> hi\" }, { \"dap> hi\", \"dap> \" }, 2 }\r\n```\r\nSo since the line was added at the end, the first line of the diff is line 2, which did not exist in `prev_lines` before the changes. Perhaps the particular way that nvim-dap updates the buffer does not trigger the state update initially, and then further changes trigger change tracking on the broken state.\r\n\r\n@clason Does this help?\r\n",
            "created_at": "2023-11-25T14:07:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-1826333464",
            "id": 1826333464,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5s26MY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826333464/reactions"
            },
            "updated_at": "2024-04-10T00:52:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826333464",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18747677?v=4",
                "events_url": "https://api.github.com/users/alfaix/events{/privacy}",
                "followers_url": "https://api.github.com/users/alfaix/followers",
                "following_url": "https://api.github.com/users/alfaix/following{/other_user}",
                "gists_url": "https://api.github.com/users/alfaix/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alfaix",
                "id": 18747677,
                "login": "alfaix",
                "node_id": "MDQ6VXNlcjE4NzQ3Njc3",
                "organizations_url": "https://api.github.com/users/alfaix/orgs",
                "received_events_url": "https://api.github.com/users/alfaix/received_events",
                "repos_url": "https://api.github.com/users/alfaix/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alfaix/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alfaix/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alfaix"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I encounter this error regularly, but I'm unable to reproduce (using nightly). I've added this to my config in hopes of getting more information next time it happens:\r\n\r\n``` lua\r\nlocal sync = require('vim.lsp.sync')\r\nlocal compute_diff = sync.compute_diff\r\nsync.compute_diff = function (...)\r\n\tlocal ok, result = pcall(compute_diff, ...)\r\n\tif not ok then\r\n\t\tprint(vim.inspect({ func = \"sync.compute_diff\", args = {...} }))\r\n\t\terror(result)\r\n\tend\r\n\treturn result\r\nend\r\n```\r\n\r\n~~If someone else in this thread can regularly reproduce this issue, I encourage you to add this to your config as well and post the results.~~ @clason please chime in if you see something obviously wrong with this approach.\r\n\r\n**edit:** I've updated the previous snippet to use `vlog.nvim`:\r\n\r\n``` lua\r\n-- lazy config\r\n{\r\n\t\"tjdevries/vlog.nvim\",\r\n\tconfig = function ()\r\n\t\t-- trying to detect https://github.com/neovim/neovim/issues/24972\r\n\t\tlocal log = require('vlog')\r\n\t\tlocal sync = require('vim.lsp.sync')\r\n\t\tlocal compute_diff = sync.compute_diff\r\n\r\n\t\tsync.compute_diff = function (...)\r\n\t\t\tlocal ok, result = pcall(compute_diff, ...)\r\n\t\t\tif not ok then\r\n\t\t\t\tlog.info(\"sync.compure_diff\", {...})\r\n\t\t\t\terror(result)\r\n\t\t\tend\r\n\t\t\treturn result\r\n\t\tend\r\n\tend\r\n},\r\n\r\n```\r\n\r\n**edit2:** I've managed to capture the arguments to `sync.compute_diff`, but unfortunately it contains a whole bunch of work code which I can't share :( . I'll see if I can reduce it down a sharable repro.\r\n\r\n**edit3:** After some debugging, this was a dead end. The `compute_diff` logic looks fine, it's just getting bad input.\r\n\r\n``` lua\r\n--- Returns the range table for the difference between prev and curr lines\r\n---@param prev_lines table list of lines\r\n---@param curr_lines table list of lines\r\n---@param firstline integer line to begin search for first difference\r\n---@param lastline integer line to begin search in old_lines for last difference\r\n---@param new_lastline integer line to begin search in new_lines for last difference\r\n---@param offset_encoding string encoding requested by language server\r\n---@param line_ending string\r\n---@return lsp.TextDocumentContentChangeEvent : see https://microsoft.github.io/language-server-protocol/specification/#textDocumentContentChangeEvent\r\nfunction M.compute_diff(\r\n  prev_lines,\r\n  curr_lines,\r\n  firstline,\r\n  lastline,\r\n  new_lastline,\r\n  offset_encoding,\r\n  line_ending\r\n)\r\n```\r\n\r\nThe `lastline` value is too large:\r\n\r\n```\r\ndap> lastline\r\n346\r\ndap> #prev_lines\r\n343\r\n```\r\n\r\nThis results in a `nil` value when doing `prev_lines[lastline]`\r\n\r\n**edit4:** wow I completely missed the repro @alfaix shared /facepalm\r\n\r\n**edit5:**: I added the following snippet after this line: https://github.com/neovim/neovim/blob/5a5d26b4abdfc32c0e538a7a4b0d73c6827f0e5b/runtime/lua/vim/lsp/_changetracking.lua#L149\r\n\r\n``` lua\r\nif lastline > #buf_state.lines then\r\n  local data = vim.inspect({\r\n    bufnr = bufnr,\r\n    firstline = firstline,\r\n    lastline = lastline,\r\n    new_lastline = new_lastline,\r\n    group = group,\r\n    state = state,\r\n  })\r\n  vim.fn.writefile(vim.split(data, '\\n'), 'bad-changetracking-state.txt')\r\nend\r\n```\r\n\r\nAnd the repro @alfaix posted results in this:\r\n\r\n``` lua\r\n{\r\n  bufnr = 5,\r\n  firstline = 1,\r\n  group = {\r\n    offset_encoding = \"utf-16\",\r\n    sync_kind = 2\r\n  },\r\n  lastline = 2,\r\n  new_lastline = 2,\r\n  state = {\r\n    buffers = { {\r\n        lines = { \"i = 1\" },\r\n        lines_tmp = {},\r\n        name = \"/home/icholy/sample.py\",\r\n        needs_flush = false,\r\n        pending_changes = {},\r\n        refs = 1\r\n      },\r\n      [5] = {\r\n        last_flush = 23578506122105,\r\n        lines = { \"dap> \" },\r\n        lines_tmp = {},\r\n        name = \"/home/icholy/[dap-repl]\",\r\n        needs_flush = false,\r\n        pending_changes = {},\r\n        refs = 1\r\n      }\r\n    },\r\n    clients = {}, -- omitted\r\n    debounce = 150\r\n  }\r\n}\r\n```\r\n\r\nLooks like `on_lines` callback to `nvim_buf_attach` is emitting incorrect values. The `lastline` should be `1` here.",
            "created_at": "2024-03-26T22:03:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-2021548566",
            "id": 2021548566,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM54fmIW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2021548566/reactions"
            },
            "updated_at": "2024-04-10T00:52:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2021548566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've created a repository for the repro @alfaix shared: https://github.com/icholy/nvim-lsp-bug-2\r\n\r\nThe problem is that a newline is inserted in the `invoke_prompt_callback` function which increments the `ml_line_count` but doesn't emit a change event:\r\n\r\nhttps://github.com/neovim/neovim/blob/d9235efa76229708586d3c9db3dcbac46127ca0a/src/nvim/eval.c#L8907\r\n\r\n```\r\n#0  0x000062ec39bd822a in ml_append_int (buf=0x62ec3abc6f60, lnum=1, line=0x62ec39e89745 \"\", len=1, newfile=false, mark=false) at /home/icholy/src/github.com/neovim/neovim/src/nvim/memline.c:2098\r\n#1  0x000062ec39bd7f3e in ml_append (lnum=1, line=0x62ec39e89745 \"\", len=0, newfile=false) at /home/icholy/src/github.com/neovim/neovim/src/nvim/memline.c:2004\r\n#2  0x000062ec39ac1338 in invoke_prompt_callback () at /home/icholy/src/github.com/neovim/neovim/src/nvim/eval.c:8907\r\n#3  0x000062ec39aa36c4 in insert_handle_key (s=0x7fffb8702630) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:1061\r\n#4  0x000062ec39aa2a8c in insert_execute (state=0x7fffb8702630, key=13) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:695\r\n#5  0x000062ec39cdfdde in state_enter (s=0x7fffb8702630) at /home/icholy/src/github.com/neovim/neovim/src/nvim/state.c:101\r\n#6  0x000062ec39aa1f8b in insert_enter (s=0x7fffb8702630) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:345\r\n#7  0x000062ec39aa3c5b in edit (cmdchar=105, startln=false, count=1) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:1294\r\n#8  0x000062ec39c09edc in invoke_edit (cap=0x7fffb8702820, repl=0, cmd=105, startln=0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:6258\r\n#9  0x000062ec39c09e30 in nv_edit (cap=0x7fffb8702820) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:6230\r\n#10 0x000062ec39bfe527 in normal_execute (state=0x7fffb87027b0, key=105) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:1227\r\n#11 0x000062ec39cdfdde in state_enter (s=0x7fffb87027b0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/state.c:101\r\n#12 0x000062ec39bfc753 in normal_enter (cmdwin=false, noexmode=false) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:516\r\n#13 0x000062ec39ba2f23 in main (argc=6, argv=0x7fffb8702b88) at /home/icholy/src/github.com/neovim/neovim/src/nvim/main.c:663\r\n```\r\n\r\nThen `init_prompt` calls `inserted_bytes` using the `ml_line_count` as the `lnum`.\r\n\r\nhttps://github.com/neovim/neovim/blob/d9235efa76229708586d3c9db3dcbac46127ca0a/src/nvim/edit.c#L1526\r\n\r\n```\r\n#0  inserted_bytes (lnum=2, start_col=0, old_col=0, new_col=5) at /home/icholy/src/github.com/neovim/neovim/src/nvim/change.c:468\r\n#1  0x000062ec39aa4530 in init_prompt (cmdchar_todo=0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:1526\r\n#2  0x000062ec39aa224e in insert_check (state=0x7fffb8702630) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:454\r\n#3  0x000062ec39cdfc45 in state_enter (s=0x7fffb8702630) at /home/icholy/src/github.com/neovim/neovim/src/nvim/state.c:40\r\n#4  0x000062ec39aa1f8b in insert_enter (s=0x7fffb8702630) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:345\r\n#5  0x000062ec39aa3c5b in edit (cmdchar=105, startln=false, count=1) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:1294\r\n#6  0x000062ec39c09edc in invoke_edit (cap=0x7fffb8702820, repl=0, cmd=105, startln=0)\r\n    at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:6258\r\n#7  0x000062ec39c09e30 in nv_edit (cap=0x7fffb8702820) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:6230\r\n#8  0x000062ec39bfe527 in normal_execute (state=0x7fffb87027b0, key=105) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:1227\r\n#9  0x000062ec39cdfdde in state_enter (s=0x7fffb87027b0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/state.c:101\r\n#10 0x000062ec39bfc753 in normal_enter (cmdwin=false, noexmode=false) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:516\r\n#11 0x000062ec39ba2f23 in main (argc=6, argv=0x7fffb8702b88) at /home/icholy/src/github.com/neovim/neovim/src/nvim/main.c:663\r\n```\r\n\r\nThat `lnum` is then one too high which results in the `lastline` parameter to `on_lines` to be one too big breaking the following guarantee:\r\n\r\n> > {lastline} integer line number of the first line that was not replaced (i.e. the range {firstline}, {lastline} is end-exclusive). Zero-indexed: if line numbers 2 to 5 were replaced, this will be 5 instead of 6. **{lastline} is always be less than or equal to the number of lines that were in the buffer before the lines were replaced.** {lastline} will be -1 if the event is part of the initial update after attaching. \r\n>\r\n\r\nAdding a call to `appened_lines(lnum, 1)` to `invoke_prompt_callback` fixes the issues. Unfortunately, this only explains the off-by-one errors and not issue I've been running into.",
            "created_at": "2024-04-07T15:05:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-2041499468",
            "id": 2041499468,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM55rs9M",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2041499468/reactions"
            },
            "updated_at": "2024-04-10T00:53:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2041499468",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "NONE",
            "body": "Possibly related #16259",
            "created_at": "2024-04-07T15:25:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-2041505005",
            "id": 2041505005,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM55ruTt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2041505005/reactions"
            },
            "updated_at": "2024-04-07T15:25:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2041505005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20242530?v=4",
                "events_url": "https://api.github.com/users/iurimateus/events{/privacy}",
                "followers_url": "https://api.github.com/users/iurimateus/followers",
                "following_url": "https://api.github.com/users/iurimateus/following{/other_user}",
                "gists_url": "https://api.github.com/users/iurimateus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/iurimateus",
                "id": 20242530,
                "login": "iurimateus",
                "node_id": "MDQ6VXNlcjIwMjQyNTMw",
                "organizations_url": "https://api.github.com/users/iurimateus/orgs",
                "received_events_url": "https://api.github.com/users/iurimateus/received_events",
                "repos_url": "https://api.github.com/users/iurimateus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/iurimateus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/iurimateus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/iurimateus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The problem with DAP has been fixed by #28260",
            "created_at": "2024-04-10T00:52:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/24972#issuecomment-2046263501",
            "id": 2046263501,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24972",
            "node_id": "IC_kwDOAPphoM5594DN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 3,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2046263501/reactions"
            },
            "updated_at": "2024-04-10T00:52:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2046263501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24972/comments",
    "created_at": "2023-09-01T16:38:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24972/events",
    "html_url": "https://github.com/neovim/neovim/issues/24972",
    "id": 1877731443,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24972/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5v6-hz",
    "number": 24972,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 13,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 13,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24972/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24972/timeline",
    "title": "error attempt to get length of local 'prev_line' ",
    "updated_at": "2024-04-10T02:42:25Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24972",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/72234965?v=4",
        "events_url": "https://api.github.com/users/eyalk11/events{/privacy}",
        "followers_url": "https://api.github.com/users/eyalk11/followers",
        "following_url": "https://api.github.com/users/eyalk11/following{/other_user}",
        "gists_url": "https://api.github.com/users/eyalk11/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/eyalk11",
        "id": 72234965,
        "login": "eyalk11",
        "node_id": "MDQ6VXNlcjcyMjM0OTY1",
        "organizations_url": "https://api.github.com/users/eyalk11/orgs",
        "received_events_url": "https://api.github.com/users/eyalk11/received_events",
        "repos_url": "https://api.github.com/users/eyalk11/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/eyalk11/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eyalk11/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/eyalk11"
    }
}