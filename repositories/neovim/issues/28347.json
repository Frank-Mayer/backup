{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI use lua to write a plugin, and call  `vim.base64.decode()` to decode a base64 string, but I get a truncated string, neither returned a sufficiently long string nor threw an exception\n\n### Steps to reproduce\n\n* Save following content as test.lua\r\n```lua\r\nlocal data =\r\n    \"lAEGwNwAHIOlbGFiZWyjJSUhpHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKMlJSGDpWxhYmVspiUlSFRNTKR0eXBlpW1hZ2ljqmluc2VydFRleHSmJSVIVE1Mg6VsYWJlbKUlJVNWR6R0eXBlpW1hZ2ljqmluc2VydFRleHSlJSVTVkeDpWxhYmVspiUlYmFzaKR0eXBlpW1hZ2ljqmluc2VydFRleHSmJSViYXNog6VsYWJlbKklJWNhcHR1cmWkdHlwZaVtYWdpY6ppbnNlcnRUZXh0qSUlY2FwdHVyZYOlbGFiZWyrJSVjb2RlX3dyYXCkdHlwZaVtYWdpY6ppbnNlcnRUZXh0qyUlY29kZV93cmFwg6VsYWJlbKclJWRlYnVnpHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKclJWRlYnVng6VsYWJlbKYlJWZpbGWkdHlwZaVtYWdpY6ppbnNlcnRUZXh0piUlZmlsZYOlbGFiZWymJSVodG1spHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKYlJWh0bWyDpWxhYmVsrCUlamF2YXNjcmlwdKR0eXBlpW1hZ2ljqmluc2VydFRleHSsJSVqYXZhc2NyaXB0g6VsYWJlbKQlJWpzpHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKQlJWpzg6VsYWJlbKclJWxhdGV4pHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKclJWxhdGV4g6VsYWJlbKolJW1hcmtkb3dupHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKolJW1hcmtkb3dug6VsYWJlbKYlJXBlcmykdHlwZaVtYWdpY6ppbnNlcnRUZXh0piUlcGVybIOlbGFiZWymJSVwcnVupHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKYlJXBydW6DpWxhYmVspiUlcHlweaR0eXBlpW1hZ2ljqmluc2VydFRleHSmJSVweXB5g6VsYWJlbKglJXB5dGhvbqR0eXBlpW1hZ2ljqmluc2VydFRleHSoJSVweXRob26DpWxhYmVsqSUlcHl0aG9uMqR0eXBlpW1hZ2ljqmluc2VydFRleHSpJSVweXRob24yg6VsYWJlbKklJXB5dGhvbjOkdHlwZaVtYWdpY6ppbnNlcnRUZXh0qSUlcHl0aG9uM4OlbGFiZWymJSVydWJ5pHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKYlJXJ1YnmDpWxhYmVsqCUlc2NyaXB0pHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKglJXNjcmlwdIOlbGFiZWykJSVzaKR0eXBlpW1hZ2ljqmluc2VydFRleHSkJSVzaIOlbGFiZWylJSVzdmekdHlwZaVtYWdpY6ppbnNlcnRUZXh0pSUlc3Zng6VsYWJlbKQlJXN4pHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKQlJXN4g6VsYWJlbKglJXN5c3RlbaR0eXBlpW1hZ2ljqmluc2VydFRleHSoJSVzeXN0ZW2DpWxhYmVspiUldGltZaR0eXBlpW1hZ2ljqmluc2VydFRleHSmJSV0aW1lg6VsYWJlbKglJXRpbWVpdKR0eXBlpW1hZ2ljqmluc2VydFRleHSoJSV0aW1laXSDpWxhYmVsqyUld3JpdGVmaWxlpHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKslJXdyaXRlZmlsZQ==\"\r\nprint(\"data\", #data)\r\nlocal buf = vim.base64.decode(data)\r\nprint(\"buf\", #buf)\r\nprint(vim.inspect(buf))\r\nlocal msg = vim.mpack.decode(buf)\r\nprint(vim.inspect(msg))\r\n\r\n```\r\n* Execute the test.lua via:\r\n```shell\r\n$ nvim --headless --clean -l test.lua \r\n```\r\n* Then, nvim will quit with a error message\r\n```\r\ndata 1692\r\nbuf 5\r\n\"<94>\\1\\6<c0><dc>\"\r\nE5113: Error while calling lua chunk: test.lua:7: incomplete msgpack string\r\nstack traceback:\r\n        [C]: in function 'decode'\r\n        test.lua:7: in main chunk\r\n\r\n```\r\n* As the log show, vim.base64.decode return a string named `buf` only has a length 5, so the msgpack decode errror.\r\n\r\n>  buf is expected to be a string in msgpack format\n\n### Expected behavior\n\nI write same code in python, you can save and run it directly\r\n```python\r\nimport base64\r\nimport msgpack\r\n\r\ndata =\"lAEGwNwAHIOlbGFiZWyjJSUhpHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKMlJSGDpWxhYmVspiUlSFRNTKR0eXBlpW1hZ2ljqmluc2VydFRleHSmJSVIVE1Mg6VsYWJlbKUlJVNWR6R0eXBlpW1hZ2ljqmluc2VydFRleHSlJSVTVkeDpWxhYmVspiUlYmFzaKR0eXBlpW1hZ2ljqmluc2VydFRleHSmJSViYXNog6VsYWJlbKklJWNhcHR1cmWkdHlwZaVtYWdpY6ppbnNlcnRUZXh0qSUlY2FwdHVyZYOlbGFiZWyrJSVjb2RlX3dyYXCkdHlwZaVtYWdpY6ppbnNlcnRUZXh0qyUlY29kZV93cmFwg6VsYWJlbKclJWRlYnVnpHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKclJWRlYnVng6VsYWJlbKYlJWZpbGWkdHlwZaVtYWdpY6ppbnNlcnRUZXh0piUlZmlsZYOlbGFiZWymJSVodG1spHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKYlJWh0bWyDpWxhYmVsrCUlamF2YXNjcmlwdKR0eXBlpW1hZ2ljqmluc2VydFRleHSsJSVqYXZhc2NyaXB0g6VsYWJlbKQlJWpzpHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKQlJWpzg6VsYWJlbKclJWxhdGV4pHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKclJWxhdGV4g6VsYWJlbKolJW1hcmtkb3dupHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKolJW1hcmtkb3dug6VsYWJlbKYlJXBlcmykdHlwZaVtYWdpY6ppbnNlcnRUZXh0piUlcGVybIOlbGFiZWymJSVwcnVupHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKYlJXBydW6DpWxhYmVspiUlcHlweaR0eXBlpW1hZ2ljqmluc2VydFRleHSmJSVweXB5g6VsYWJlbKglJXB5dGhvbqR0eXBlpW1hZ2ljqmluc2VydFRleHSoJSVweXRob26DpWxhYmVsqSUlcHl0aG9uMqR0eXBlpW1hZ2ljqmluc2VydFRleHSpJSVweXRob24yg6VsYWJlbKklJXB5dGhvbjOkdHlwZaVtYWdpY6ppbnNlcnRUZXh0qSUlcHl0aG9uM4OlbGFiZWymJSVydWJ5pHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKYlJXJ1YnmDpWxhYmVsqCUlc2NyaXB0pHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKglJXNjcmlwdIOlbGFiZWykJSVzaKR0eXBlpW1hZ2ljqmluc2VydFRleHSkJSVzaIOlbGFiZWylJSVzdmekdHlwZaVtYWdpY6ppbnNlcnRUZXh0pSUlc3Zng6VsYWJlbKQlJXN4pHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKQlJXN4g6VsYWJlbKglJXN5c3RlbaR0eXBlpW1hZ2ljqmluc2VydFRleHSoJSVzeXN0ZW2DpWxhYmVspiUldGltZaR0eXBlpW1hZ2ljqmluc2VydFRleHSmJSV0aW1lg6VsYWJlbKglJXRpbWVpdKR0eXBlpW1hZ2ljqmluc2VydFRleHSoJSV0aW1laXSDpWxhYmVsqyUld3JpdGVmaWxlpHR5cGWlbWFnaWOqaW5zZXJ0VGV4dKslJXdyaXRlZmlsZQ==\"\r\nprint(len(data))\r\nbuf = base64.b64decode(data)\r\nprint(len(buf))\r\nprint(buf)\r\nmsg = msgpack.loads(buf)\r\nprint(msg)\r\n\r\n```\r\nWhich will  output\r\n\r\n```\r\ndata 1692\r\nbuf 1267\r\nb'\\x94\\x01\\x06\\xc0\\xdc\\x00\\x1c\\x83\\xa5label\\xa3%%!\\xa4type\\xa5magic\\xaainsertText\\xa3%%!\\x83\\xa5label\\xa6%%HTML\\xa4type\\xa5magic\\xaainsertText\\xa6%%HTML\\x83\\xa5label\\xa5%%SVG\\xa4type\\xa5magic\\xaainsertText\\xa5%%SVG\\x83\\xa5label\\xa6%%bash\\xa4type\\xa5magic\\xaainsertText\\xa6%%bash\\x83\\xa5label\\xa9%%capture\\xa4type\\xa5magic\\xaainsertText\\xa9%%capture\\x83\\xa5label\\xab%%code_wrap\\xa4type\\xa5magic\\xaainsertText\\xab%%code_wrap\\x83\\xa5label\\xa7%%debug\\xa4type\\xa5magic\\xaainsertText\\xa7%%debug\\x83\\xa5label\\xa6%%file\\xa4type\\xa5magic\\xaainsertText\\xa6%%file\\x83\\xa5label\\xa6%%html\\xa4type\\xa5magic\\xaainsertText\\xa6%%html\\x83\\xa5label\\xac%%javascript\\xa4type\\xa5magic\\xaainsertText\\xac%%javascript\\x83\\xa5label\\xa4%%js\\xa4type\\xa5magic\\xaainsertText\\xa4%%js\\x83\\xa5label\\xa7%%latex\\xa4type\\xa5magic\\xaainsertText\\xa7%%latex\\x83\\xa5label\\xaa%%markdown\\xa4type\\xa5magic\\xaainsertText\\xaa%%markdown\\x83\\xa5label\\xa6%%perl\\xa4type\\xa5magic\\xaainsertText\\xa6%%perl\\x83\\xa5label\\xa6%%prun\\xa4type\\xa5magic\\xaainsertText\\xa6%%prun\\x83\\xa5label\\xa6%%pypy\\xa4type\\xa5magic\\xaainsertText\\xa6%%pypy\\x83\\xa5label\\xa8%%python\\xa4type\\xa5magic\\xaainsertText\\xa8%%python\\x83\\xa5label\\xa9%%python2\\xa4type\\xa5magic\\xaainsertText\\xa9%%python2\\x83\\xa5label\\xa9%%python3\\xa4type\\xa5magic\\xaainsertText\\xa9%%python3\\x83\\xa5label\\xa6%%ruby\\xa4type\\xa5magic\\xaainsertText\\xa6%%ruby\\x83\\xa5label\\xa8%%script\\xa4type\\xa5magic\\xaainsertText\\xa8%%script\\x83\\xa5label\\xa4%%sh\\xa4type\\xa5magic\\xaainsertText\\xa4%%sh\\x83\\xa5label\\xa5%%svg\\xa4type\\xa5magic\\xaainsertText\\xa5%%svg\\x83\\xa5label\\xa4%%sx\\xa4type\\xa5magic\\xaainsertText\\xa4%%sx\\x83\\xa5label\\xa8%%system\\xa4type\\xa5magic\\xaainsertText\\xa8%%system\\x83\\xa5label\\xa6%%time\\xa4type\\xa5magic\\xaainsertText\\xa6%%time\\x83\\xa5label\\xa8%%timeit\\xa4type\\xa5magic\\xaainsertText\\xa8%%timeit\\x83\\xa5label\\xab%%writefile\\xa4type\\xa5magic\\xaainsertText\\xab%%writefile'\r\n[1, 6, None, [{'label': '%%!', 'type': 'magic', 'insertText': '%%!'}, {'label': '%%HTML', 'type': 'magic', 'insertText': '%%HTML'}, {'label': '%%SVG', 'type': 'magic', 'insertText': '%%SVG'}, {'label': '%%bash', 'type': 'magic', 'insertText': '%%bash'}, {'label': '%%capture', 'type': 'magic', 'insertText': '%%capture'}, {'label': '%%code_wrap', 'type': 'magic', 'insertText': '%%code_wrap'}, {'label': '%%debug', 'type': 'magic', 'insertText': '%%debug'}, {'label': '%%file', 'type': 'magic', 'insertText': '%%file'}, {'label': '%%html', 'type': 'magic', 'insertText': '%%html'}, {'label': '%%javascript', 'type': 'magic', 'insertText': '%%javascript'}, {'label': '%%js', 'type': 'magic', 'insertText': '%%js'}, {'label': '%%latex', 'type': 'magic', 'insertText': '%%latex'}, {'label': '%%markdown', 'type': 'magic', 'insertText': '%%markdown'}, {'label': '%%perl', 'type': 'magic', 'insertText': '%%perl'}, {'label': '%%prun', 'type': 'magic', 'insertText': '%%prun'}, {'label': '%%pypy', 'type': 'magic', 'insertText': '%%pypy'}, {'label': '%%python', 'type': 'magic', 'insertText': '%%python'}, {'label': '%%python2', 'type': 'magic', 'insertText': '%%python2'}, {'label': '%%python3', 'type': 'magic', 'insertText': '%%python3'}, {'label': '%%ruby', 'type': 'magic', 'insertText': '%%ruby'}, {'label': '%%script', 'type': 'magic', 'insertText': '%%script'}, {'label': '%%sh', 'type': 'magic', 'insertText': '%%sh'}, {'label': '%%svg', 'type': 'magic', 'insertText': '%%svg'}, {'label': '%%sx', 'type': 'magic', 'insertText': '%%sx'}, {'label': '%%system', 'type': 'magic', 'insertText': '%%system'}, {'label': '%%time', 'type': 'magic', 'insertText': '%%time'}, {'label': '%%timeit', 'type': 'magic', 'insertText': '%%timeit'}, {'label': '%%writefile', 'type': 'magic', 'insertText': '%%writefile'}]]\r\n\r\n```\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0-dev-2904+gf6a3fdd684\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nArchLinux\n\n### Terminal name/version\n\nkitty+tmux\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\naur/neovim-git ",
    "closed_at": "2024-04-15T16:06:55Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "@gpanders ",
            "created_at": "2024-04-15T15:22:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/28347#issuecomment-2057123176",
            "id": 2057123176,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28347",
            "node_id": "IC_kwDOAPphoM56nTVo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2057123176/reactions"
            },
            "updated_at": "2024-04-15T15:22:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2057123176",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28347/comments",
    "created_at": "2024-04-15T14:55:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28347/events",
    "html_url": "https://github.com/neovim/neovim/issues/28347",
    "id": 2243897007,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28347/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 367,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-04-30T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 21,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-04-15T22:44:29Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM6Fvyav",
    "number": 28347,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28347/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28347/timeline",
    "title": "`vim.base64.decode()` return value  is truncated",
    "updated_at": "2024-04-15T16:06:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28347",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24972096?v=4",
        "events_url": "https://api.github.com/users/AbaoFromCUG/events{/privacy}",
        "followers_url": "https://api.github.com/users/AbaoFromCUG/followers",
        "following_url": "https://api.github.com/users/AbaoFromCUG/following{/other_user}",
        "gists_url": "https://api.github.com/users/AbaoFromCUG/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/AbaoFromCUG",
        "id": 24972096,
        "login": "AbaoFromCUG",
        "node_id": "MDQ6VXNlcjI0OTcyMDk2",
        "organizations_url": "https://api.github.com/users/AbaoFromCUG/orgs",
        "received_events_url": "https://api.github.com/users/AbaoFromCUG/received_events",
        "repos_url": "https://api.github.com/users/AbaoFromCUG/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/AbaoFromCUG/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AbaoFromCUG/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/AbaoFromCUG"
    }
}