{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nThe language server protocol specifies that completion items can contain:\r\n\r\n- snippets\r\n- `additionalTextEdits` (e.g used to add import statements when selecting a completion candidate)\r\n- A `command` (used to execute client side or server side commands - for all sorts of things). For example, vscode defines a `editor.action.triggerParameterHints` client command to trigger a  signature help immediately after a completion candidate got selected.\r\n\r\nCurrently neovim core handles none of that, and instead delegates to completion plugins like nvim-cmp, nvim-lsp-compl or others.\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nHave this functionality built-in.\r\n\r\nWith https://github.com/neovim/neovim/pull/25301 the groundwork for snippet expansion is done.\r\nThe next step is to integrate it with the completion, omnifunc. For that we'll need to setup a `CompleteDone` autocmd similar to:\r\n\r\nhttps://github.com/mfussenegger/nvim-lsp-compl/blob/1642f1c57a83a0b630fdf7f339f4a5550a766407/lua/lsp_compl.lua#L565-L668\r\n\r\n\r\nOpen Questions:\r\n\r\n- [ ] Opt-in or opt-out. Enabling it by default could conflict with above established completion plugins. On the other hand, opt-in is another hurdle in getting started from scratch\r\n- [ ] Snippet expansion trigger - implicit/explicit? (For me, always implicit expanding would make this unusable)\r\n\r\n\r\nProposal:\r\n\r\n- Make it opt-in via a `vim.lsp.completion.attach(client, bufnr, [opts])` method that can be called in a `LspAttach` autocmd. It would sets up a `CompleteDone` autocmd for the given buffer and client.\r\n- Add a `vim.lsp.completion.accept()` function that if called causes the next accempted completion candidate to expand a snippet, if the completion item contains one. To be used in a mapping like:\r\n\r\n```\r\nvim.keymap.set('i', '<CR>', function()\r\n  return vim.lsp.completion.accept() and '<c-y>' or '<CR>'\r\nend, { expr = true })\r\n```\r\n\r\n`opts` relate a bit to the auto-completion aspect and https://github.com/neovim/neovim/issues/25670, and might not be necessary in a first step.\r\n",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25714/comments",
    "created_at": "2023-10-19T08:56:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25714/events",
    "html_url": "https://github.com/neovim/neovim/issues/25714",
    "id": 1951651949,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25714/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM50U9ht",
    "number": 25714,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25714/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25714/timeline",
    "title": "Add support for LSP completion side effects (snippet expansion, command execution, additionalTextEdits)",
    "updated_at": "2023-10-19T13:18:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25714",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger"
    }
}