{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "I have started to migrate several legacy test and some of them are accompained by auxiliary files besides the obvious `src/nvim/testdir/testXX.{in,ok}`.\n\nHere is a list of things that I have found and solutions/steps I have taken to make the tests run. Please feel free to comment on these or suggest more approaches.  Or there might be cases I have not seen yet or forgotten.\n- Some tests need an `autoload` directory. I have created it at `test/functional/legacy/sautest/autoload` and then `set rtp+=test/functional/legacy/sautest` inside the test. An example is test 60, see #2721 or test 55 (will create the PR soon).\n- Some tests need data, tags or spell files. They need to be in encodings other than utf8 in some cases. One idea is to create the files at runtime with lua's file io. This involves some quoting of strange bytes. I have tried this with test 83, see #2710.\n- Some tests might need a viminfo file. As far as I could learn in #2585 when migrating test 74 this is not easily possible. I was told that I need to start a custom session (without the `-i NONE` command line flag) but was not yet able to achieve this.\n- Test 60 also sources a script `test60.vim` which I have moved to `test/functional/legacy` directly.\n\nAfter some discussion about the `execute()` and `source()` functions in the `helpers.lua` file I understand that in the last point the extra file might be dispensable (it is used to test the `exists()` function with script-local variables) and can be replaced by a call to `source()`.\n\nTwo oposing ideas insipire me to vote for the use of auxiliary files stored in the git repository or the writing of files at runtime and storing data in the main test file, respectively:\n1. cleanlyness and readablity:  Long sequences of `execute()` commands in the test file are adding a lot of overhead (also for the human reader).  They are also harder to indent nicely.  `source()` calls with big strings mess up the syntax highlighting at some point (and they are highlighted as lua string in the best case, never as vim code).  Also string escaping and encoding issus have to be taken care of if files are written from lua strings.  So it might be desireable to wirte some code/data out into seperated files that can be sourced/used.\n2. standalone files: If on the other hand all needed auxiliary files can be created at runtime one test case can be fully contained in the lua test file. So it might be desireable to remove some aux files and write them at runtime from within the lua test file.\n",
    "closed_at": "2016-01-25T09:10:55Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1104419?v=4",
        "events_url": "https://api.github.com/users/lucc/events{/privacy}",
        "followers_url": "https://api.github.com/users/lucc/followers",
        "following_url": "https://api.github.com/users/lucc/following{/other_user}",
        "gists_url": "https://api.github.com/users/lucc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lucc",
        "id": 1104419,
        "login": "lucc",
        "node_id": "MDQ6VXNlcjExMDQ0MTk=",
        "organizations_url": "https://api.github.com/users/lucc/orgs",
        "received_events_url": "https://api.github.com/users/lucc/received_events",
        "repos_url": "https://api.github.com/users/lucc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lucc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lucc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lucc"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for writing this up! :-)\n\nFrankly, the readability is horrendous for most of the legacy tests anyway, so I think we don't need to be concerned with that too much. The most important point with the legacy tests is probably that they can be easily updated when they are changed in upstream Vim.\n\nI'm more in favor of keeping everything in one Lua test file, but I can see how having files with strange encodings stored in the repo instead of writing them at runtime can be an advantage.. so, I'm a bit torn.\n",
            "created_at": "2015-05-24T14:34:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/2722#issuecomment-105021407",
            "id": 105021407,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2722",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTAyMTQwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/105021407/reactions"
            },
            "updated_at": "2015-05-24T21:04:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/105021407",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Some tests need an autoload directory. I have created it at test/functional/legacy/sautest/autoload\n\nAny \"prop\" object AFAIK is usually called a \"test fixture\". There is a `test/functional/fixtures/autload/` directory that exists, for a similar purpose. It's better if we keep these props in one place so that it is clear which paths contain tests and which don't.\n\n> I was told that I need to start a custom session (without the -i NONE command line flag) but was not yet able to achieve this.\n\nSee my comment on #2585.\n\n> Test 60 also sources a script test60.vim which I have moved to test/functional/legacy directly.\n\nUnless test60.vim is large, it's preferable to ensconce it in the test and write it out at runtime. See [helpers.lua:source()](https://github.com/neovim/neovim/blob/master/test/functional/helpers.lua#L209-L217) implementation for a way to do this.\n\n> it might be desireable to remove some aux files and write them at runtime from within the lua test file.\n\n:+1: \n",
            "created_at": "2015-05-26T04:20:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/2722#issuecomment-105388941",
            "id": 105388941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2722",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTM4ODk0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/105388941/reactions"
            },
            "updated_at": "2015-05-26T04:20:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/105388941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> source() calls with big strings mess up the syntax highlighting at some point\n\n@lucc You can fix this by calling  `:syntax sync fromstart`.\n",
            "created_at": "2015-05-28T04:49:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/2722#issuecomment-106169004",
            "id": 106169004,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2722",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjE2OTAwNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/106169004/reactions"
            },
            "updated_at": "2016-01-25T18:47:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/106169004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > it might be desireable to remove some aux files and write them at runtime from within the lua test file.\n> \n> :+1: \n\nShould I open a PR to add [this function](https://github.com/lucc/neovim/blob/test83/test/functional/legacy/083_tag_search_with_file_encoding_spec.lua#L7-L12) to helpers.lua?\n",
            "created_at": "2015-06-11T14:32:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/2722#issuecomment-111155623",
            "id": 111155623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2722",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMTE1NTYyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/111155623/reactions"
            },
            "updated_at": "2015-06-11T14:32:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/111155623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1104419?v=4",
                "events_url": "https://api.github.com/users/lucc/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucc/followers",
                "following_url": "https://api.github.com/users/lucc/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucc",
                "id": 1104419,
                "login": "lucc",
                "node_id": "MDQ6VXNlcjExMDQ0MTk=",
                "organizations_url": "https://api.github.com/users/lucc/orgs",
                "received_events_url": "https://api.github.com/users/lucc/received_events",
                "repos_url": "https://api.github.com/users/lucc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@lucc sure\n",
            "created_at": "2015-06-26T12:17:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/2722#issuecomment-115658467",
            "id": 115658467,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2722",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExNTY1ODQ2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/115658467/reactions"
            },
            "updated_at": "2015-06-26T12:17:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/115658467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/2722/comments",
    "created_at": "2015-05-21T16:40:48Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/2722/events",
    "html_url": "https://github.com/neovim/neovim/issues/2722",
    "id": 79075028,
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 110418643,
            "name": "test",
            "node_id": "MDU6TGFiZWwxMTA0MTg2NDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/test"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/2722/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3OTA3NTAyOA==",
    "number": 2722,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/2722/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/2722/timeline",
    "title": "How to handle auxiliary files when migrating legacy tests.",
    "updated_at": "2024-09-04T14:01:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/2722",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1104419?v=4",
        "events_url": "https://api.github.com/users/lucc/events{/privacy}",
        "followers_url": "https://api.github.com/users/lucc/followers",
        "following_url": "https://api.github.com/users/lucc/following{/other_user}",
        "gists_url": "https://api.github.com/users/lucc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lucc",
        "id": 1104419,
        "login": "lucc",
        "node_id": "MDQ6VXNlcjExMDQ0MTk=",
        "organizations_url": "https://api.github.com/users/lucc/orgs",
        "received_events_url": "https://api.github.com/users/lucc/received_events",
        "repos_url": "https://api.github.com/users/lucc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lucc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lucc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lucc"
    }
}