{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nNot being able to comment multiple lines\r\n\r\n### Expected behavior\r\n\r\nBeing able to comment multiple lines after selecting them in visual mode. This is a very basic feature that so many other editors have, how is this not in nvim yet by default?",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "There's already a bunch of excellent commenting plugins with more advanced features. Why does this have to be bundled (and locked to Neovim's release schedule)?",
            "created_at": "2023-08-09T13:34:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671339597",
            "id": 1671339597,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jnp5N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671339597/reactions"
            },
            "updated_at": "2023-08-09T13:34:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671339597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If features can be added with a micro-plugin that rarely needs bug fixes we should consider it. We have discussed including https://github.com/tpope/vim-commentary , which I've used for years and is very reliable. The `gc` mapping is also uncontroversial. So I don't see any strong counterarguments.\r\n\r\nIt can be helpful to the ecosystem when the core project establishes a particular mapping as \"standard\".",
            "created_at": "2023-08-09T14:07:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671401424",
            "id": 1671401424,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jn4_Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671401424/reactions"
            },
            "updated_at": "2023-08-09T14:10:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671401424",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Rather than including a black box plugin (that risks becoming encysted and unmaintainable, just like some others I could name), I would prefer this being implemented in a way that other plugins can hook into/extend it in case more advanced functionality is required (say, tree-sitter aware commentstrings -- I would say the bar has moved a bit since `vim-commentary` was written).",
            "created_at": "2023-08-09T14:24:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671465166",
            "id": 1671465166,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5joIjO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671465166/reactions"
            },
            "updated_at": "2023-08-09T14:24:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671465166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> say, tree-sitter aware commentstrings -- I would say the bar has moved a bit since `vim-commentary` was written).\r\n\r\nThat's a good point. But \"tree-sitter aware commentstrings\" would not conflict with an interim such as vim-commentary, i.e. we could \"upgrade\" or swap out vim-commentary in the future. So why should that block an interim solution?\r\n\r\n> that risks becoming encysted and unmaintainable, just like some others I could name\r\n\r\nWhat is the size of the risk, though? We have successfully removed such plugins in many cases. We need to consider magnitude when putting up objections. I do not think removing or swapping out an interim solution such as vim-commentary would be costly in the future.",
            "created_at": "2023-08-09T15:09:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671595453",
            "id": 1671595453,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jooW9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671595453/reactions"
            },
            "updated_at": "2023-08-09T15:09:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671595453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sure, if it's meant as a stop-gap solution and doesn't lower the priority of adding \"native\" functionality. (Although if we do bundle plugins, we should cast a wider net -- e.g., @echasnovski's `mini` plugins would be just as suitable and may fit better.)",
            "created_at": "2023-08-09T15:15:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671606678",
            "id": 1671606678,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jorGW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671606678/reactions"
            },
            "updated_at": "2023-08-09T15:15:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671606678",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Just as note: I am always more than happy to work towards including any of 'mini.nvim' functionality in core, 'mini.comment' or else. What I see necessary for this is an explicit understanding from core team that certain functionality is actually needed in core and at least a vague description of how it is best to be shaped.\r\n\r\nFor exported `vim.comment` module the very basic functionality can be something like:\r\n- `add_comment(buf_id, start_row, end_row, opts)`.\r\n- `remove_comment(buf_id, start_row, end_row, opts)`.\r\n- `is_comment(buf_id, start_row, end_row, opts)`.\r\n- `get_commentstring(buf_id, row, col, opts)`.\r\n\r\nIf there is a tendency to actually implement `gc` mapping (as operator in Normal mode and Visual mode), then some dedicated `operator()` function is needed.",
            "created_at": "2023-08-09T15:25:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671622804",
            "id": 1671622804,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jovCU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671622804/reactions"
            },
            "updated_at": "2023-08-09T15:25:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671622804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If this, then why not introduce some notion of \"surround\" manipulation as well? whether it's vim-surround or mini.surround I have no opinion, although vim-surround requires vim-repeat. I think the big 4 of Vim that are least controversial are vim-sensible (Neovim includes most of this by default in Neovim now), vim-commentary (PR closing this issue), vim-surround, vim-repeat. I think repeatability should be in mind, so if we are bringing in vim-commentary we need vim-repeat feature, unless we go mini.comment",
            "created_at": "2023-08-09T15:41:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671649539",
            "id": 1671649539,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jo1kD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671649539/reactions"
            },
            "updated_at": "2023-08-09T15:42:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671649539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7416158?v=4",
                "events_url": "https://api.github.com/users/craigmac/events{/privacy}",
                "followers_url": "https://api.github.com/users/craigmac/followers",
                "following_url": "https://api.github.com/users/craigmac/following{/other_user}",
                "gists_url": "https://api.github.com/users/craigmac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/craigmac",
                "id": 7416158,
                "login": "craigmac",
                "node_id": "MDQ6VXNlcjc0MTYxNTg=",
                "organizations_url": "https://api.github.com/users/craigmac/orgs",
                "received_events_url": "https://api.github.com/users/craigmac/received_events",
                "repos_url": "https://api.github.com/users/craigmac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/craigmac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/craigmac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/craigmac"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That is the (my) long-term plan, yes. Ideally, we'd have some general \"surround\" API in core that can be leveraged for surround, matchit/matchparen, and comment (as \"one-sided surrounding\" with commentstring) plugins. \r\n\r\nAnd the requirement of `vim-repeat` was one of the reasons I was hesitant to just bundle vim-commentary.",
            "created_at": "2023-08-09T15:46:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671660243",
            "id": 1671660243,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jo4LT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671660243/reactions"
            },
            "updated_at": "2023-08-09T15:46:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671660243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Feature creep guys!\r\n\r\nLet's just get vim-commentary in and map it to gc.\r\n\r\nWe can lua-afy it and turbo charge it with treesitter later.\r\n\r\n> For exported vim.comment module the very basic functionality can be something like:\r\n\r\nWhilst neat, I don't think this additional surface area is worth the cost. At least right now.",
            "created_at": "2023-08-09T15:46:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671660394",
            "id": 1671660394,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jo4Nq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671660394/reactions"
            },
            "updated_at": "2023-08-09T15:46:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671660394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Feature creep guys!\r\n\r\nRight. vim-commentary has no API, it's just a mapping. This is exactly why I mentioned \"low-risk micro-plugin\". Talking about APIs is the opposite.\r\n\r\nWhy would we need `add_comment()` if we have treesitter text-objects? (This is a rhetorical question. I don't want to see `add_comment` in core until _after_ we have treesitter text-objects and we have proven that `add_comment` is _still_ needed...)",
            "created_at": "2023-08-09T16:21:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671746322",
            "id": 1671746322,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jpNMS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671746322/reactions"
            },
            "updated_at": "2023-08-09T16:22:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671746322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Why would we need `add_comment()` if we have treesitter text-objects?\r\n\r\nI don't see how tree-sitter text-objects is related to this, because text-objects and operators are more or less orthogonal to each other.\r\n\r\n------\r\n\r\nFor what it is worth, having Neovim add Lua modules for all kinds of non actual text edit related stuff (`vim.lsp`, `vim.diagnostic`) but resorting to adding a Vimscript one for commenting feels kind of inconsistent.",
            "created_at": "2023-08-09T16:34:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671764894",
            "id": 1671764894,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jpRue",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671764894/reactions"
            },
            "updated_at": "2023-08-09T16:34:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671764894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> having Neovim add Lua modules for all kinds of non actual text edit related stuff (`vim.lsp`, `vim.diagnostic`) but resorting to adding a Vimscript one for commenting feels kind of inconsistent.\r\n\r\nWhat matters is that it's a low-maintenance, low surface-area, micro-plugin. If the code is small it doesn't really matter what it's written in. And it's likely temporary, as already discussed.",
            "created_at": "2023-08-09T16:36:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/24620#issuecomment-1671769355",
            "id": 1671769355,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24620",
            "node_id": "IC_kwDOAPphoM5jpS0L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671769355/reactions"
            },
            "updated_at": "2023-08-09T16:36:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671769355",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24620/comments",
    "created_at": "2023-08-09T13:04:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24620/events",
    "html_url": "https://github.com/neovim/neovim/issues/24620",
    "id": 1843196871,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24620/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 190,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 221,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2023-08-09T14:08:25Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5t3PPH",
    "number": 24620,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24620/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24620/timeline",
    "title": "comment operator (included vim-commentary by default)",
    "updated_at": "2023-08-09T16:36:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24620",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29175192?v=4",
        "events_url": "https://api.github.com/users/leet0rz/events{/privacy}",
        "followers_url": "https://api.github.com/users/leet0rz/followers",
        "following_url": "https://api.github.com/users/leet0rz/following{/other_user}",
        "gists_url": "https://api.github.com/users/leet0rz/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/leet0rz",
        "id": 29175192,
        "login": "leet0rz",
        "node_id": "MDQ6VXNlcjI5MTc1MTky",
        "organizations_url": "https://api.github.com/users/leet0rz/orgs",
        "received_events_url": "https://api.github.com/users/leet0rz/received_events",
        "repos_url": "https://api.github.com/users/leet0rz/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/leet0rz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/leet0rz/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/leet0rz"
    }
}