{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "I hope that there's some way neovim could send mouse hover event (including window id, line number and column number) to client. The event could be used for open a floating window nearby which improves debug experience.",
    "closed_at": "2023-12-21T16:03:25Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This could ~~not~~ be another `action` for `nvim_input_mouse` . Then I guess we will need at least another pseudokey, e.g. `<MouseHover...>`.",
            "created_at": "2019-01-21T09:10:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-455999219",
            "id": 455999219,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTk5OTIxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/455999219/reactions"
            },
            "updated_at": "2019-01-21T09:41:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/455999219",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It could be worth looking at the vim patches for adding support in vim 8 terminal. \r\n\r\n> This could not be another action for nvim_input_mouse\r\n\r\nWhy not? Even if the \"downstream\" processing will be different (like, an internal timer until an event actually is triggered, which might be represented by a pseudokey, or not), why can't this interface be used? ",
            "created_at": "2019-01-21T09:37:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-456007363",
            "id": 456007363,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjAwNzM2Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/456007363/reactions"
            },
            "updated_at": "2019-01-21T09:37:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/456007363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\"not\" should not have been in my comment, mistaken edit :)",
            "created_at": "2019-01-21T09:41:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-456008691",
            "id": 456008691,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjAwODY5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/456008691/reactions"
            },
            "updated_at": "2022-07-18T14:57:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/456008691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there a click event? It would be nice to use coc.nvim to Ctrl+click to get documentation.",
            "created_at": "2020-01-28T20:38:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-579444392",
            "id": 579444392,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ0NDM5Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/579444392/reactions"
            },
            "updated_at": "2020-01-28T20:38:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/579444392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8429384?v=4",
                "events_url": "https://api.github.com/users/drewboardman/events{/privacy}",
                "followers_url": "https://api.github.com/users/drewboardman/followers",
                "following_url": "https://api.github.com/users/drewboardman/following{/other_user}",
                "gists_url": "https://api.github.com/users/drewboardman/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/drewboardman",
                "id": 8429384,
                "login": "drewboardman",
                "node_id": "MDQ6VXNlcjg0MjkzODQ=",
                "organizations_url": "https://api.github.com/users/drewboardman/orgs",
                "received_events_url": "https://api.github.com/users/drewboardman/received_events",
                "repos_url": "https://api.github.com/users/drewboardman/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/drewboardman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/drewboardman/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/drewboardman"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there any plan to implement this? Maybe I could have a crack at it if someone where to point me in the right direction?",
            "created_at": "2020-12-18T02:39:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-747830488",
            "id": 747830488,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzgzMDQ4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/747830488/reactions"
            },
            "updated_at": "2020-12-18T02:39:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/747830488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16144679?v=4",
                "events_url": "https://api.github.com/users/dsych/events{/privacy}",
                "followers_url": "https://api.github.com/users/dsych/followers",
                "following_url": "https://api.github.com/users/dsych/following{/other_user}",
                "gists_url": "https://api.github.com/users/dsych/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dsych",
                "id": 16144679,
                "login": "dsych",
                "node_id": "MDQ6VXNlcjE2MTQ0Njc5",
                "organizations_url": "https://api.github.com/users/dsych/orgs",
                "received_events_url": "https://api.github.com/users/dsych/received_events",
                "repos_url": "https://api.github.com/users/dsych/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dsych/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dsych/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dsych"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@dsych well there are two pieces here\r\n\r\n1) defining the API, probably an event inside nvim_input_mouse, and an ui_option to turn on/off.\r\n2) provide the terminal implementation of this api in tui/input.c\r\n\r\nThe first one should be pretty straightforward (I and other core devs can easily help fill the gaps).  The second one would require a little bit of research. are there standard sequences in termcap/terminfo for this? what does vim do to implement it efficiently?",
            "created_at": "2020-12-18T09:31:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-747972092",
            "id": 747972092,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0Nzk3MjA5Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/747972092/reactions"
            },
            "updated_at": "2020-12-18T09:31:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/747972092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl I looked into how vim is handling mouse hover for terminal first (this is my use case) and it seems to be piggybacking off of existing logic for timers. It appears that timers are part of the main event loop for vim. I looked at how vim implements `beval` functionality, I know that nvim is not going to support that particular feature, but it helps to see how it is implemented in the original.\r\n\r\nIf you look at the [ui_wait_for_chars_or_timer](https://github.com/vim/vim/blob/339c1bdbdfb823c4ea36242f0a4f083cbc010b84/src/ui.c#L426), which is used to read characters from keyboard **OR** trigger any available timers. Finding line [447](https://github.com/vim/vim/blob/339c1bdbdfb823c4ea36242f0a4f083cbc010b84/src/ui.c#L447) you can observe the call to the `check_due_timer` function that in turn is triggering mouse hover if the timer is past due [right here](https://github.com/vim/vim/blob/22286895fce0e45e42126c7f2e35ebf43bc625d9/src/time.c#L565).\r\n\r\nConsequently, this approach does not seem to be a viable one for nvim, since it is using `libuv` for all of the async stuff. However, we could do something similar:\r\n1. Register a timer in the main event loop once during initialization.\r\n2. Check if we exceeded the user defined `hover_timeout`.\r\n3. Trigger an autocommand event? User would than be able to subscribe to it and determine the position of the mouse pointer.",
            "created_at": "2021-01-02T22:21:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-753537161",
            "id": 753537161,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzUzNzE2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753537161/reactions"
            },
            "updated_at": "2021-01-02T22:25:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753537161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16144679?v=4",
                "events_url": "https://api.github.com/users/dsych/events{/privacy}",
                "followers_url": "https://api.github.com/users/dsych/followers",
                "following_url": "https://api.github.com/users/dsych/following{/other_user}",
                "gists_url": "https://api.github.com/users/dsych/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dsych",
                "id": 16144679,
                "login": "dsych",
                "node_id": "MDQ6VXNlcjE2MTQ0Njc5",
                "organizations_url": "https://api.github.com/users/dsych/orgs",
                "received_events_url": "https://api.github.com/users/dsych/received_events",
                "repos_url": "https://api.github.com/users/dsych/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dsych/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dsych/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dsych"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@dsych we can use either a `TimeWatcher` for c code, or the luv timer api if we implement hover logic in lua. What we need to do before that is getting the mouse events from the terminal to nvim in the first place. I e we need to replicate the code in vim's term.c to (1) send a sequence request mouse position events without click and (2) extend the event parsing code to parse the new events the terminal sends.",
            "created_at": "2021-01-03T09:31:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-753590598",
            "id": 753590598,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzU5MDU5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753590598/reactions"
            },
            "updated_at": "2021-01-03T09:31:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/753590598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "@bfredl  Sorry for long delay, but I got a chance to debug the event parsing code of nvim and try to figure out what I need to modify. This is what I got so far:\r\n\r\nTo me, it seems like an event callback is registered with libuv that is going to be fired every time there is user input (sorry can't find the exact registration anymore) and keystrokes will be written into a `read_buffer`. From there, the `TermInput` struct is eventually passed down to the [handle_raw_buffer](https://github.com/neovim/neovim/blob/97ffa158aa9ae6c80a48b3ceea91270f0a179743/src/nvim/tui/input.c#L558), which in turn is where **raw bytes are checked** for specific patterns.\r\nFor instance, there is a call to [handle_focus_event](https://github.com/neovim/neovim/blob/97ffa158aa9ae6c80a48b3ceea91270f0a179743/src/nvim/tui/input.c#L368) that is going to check for `focus in/out` events and schedule an appropriate autocmd.\r\n\r\nThe point I am trying to make is that we will need to introduce another function that will check for _mouse moved_ events and allow the if statement to fall through, so that the keys could be handled the same way as other mouse keys, [see](https://github.com/neovim/neovim/blob/97ffa158aa9ae6c80a48b3ceea91270f0a179743/src/nvim/tui/input.c#L613).\r\n\r\nThere is a problem, though. I am not able to receive control characters for mouse moved event on Gnome Shell ([as specified here](https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Mouse-Tracking)), for some reason. All I get is _focus in_ followed by _focus out_. I am definitely missing something, since `beval` is working just fine on vim.\r\n\r\nAny clues? I am new to the whole terminal emulation process, so I apologize for hand-holding)",
            "created_at": "2021-01-18T06:35:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-762018483",
            "id": 762018483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjAxODQ4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/762018483/reactions"
            },
            "updated_at": "2021-01-18T06:35:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/762018483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16144679?v=4",
                "events_url": "https://api.github.com/users/dsych/events{/privacy}",
                "followers_url": "https://api.github.com/users/dsych/followers",
                "following_url": "https://api.github.com/users/dsych/following{/other_user}",
                "gists_url": "https://api.github.com/users/dsych/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dsych",
                "id": 16144679,
                "login": "dsych",
                "node_id": "MDQ6VXNlcjE2MTQ0Njc5",
                "organizations_url": "https://api.github.com/users/dsych/orgs",
                "received_events_url": "https://api.github.com/users/dsych/received_events",
                "repos_url": "https://api.github.com/users/dsych/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dsych/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dsych/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dsych"
            }
        },
        {
            "author_association": "NONE",
            "body": "I eventually found this when trying to figure out porting compatibility with vim's `balloonevalterm` so I wanted to link that closed issue to here in case anyone else is confused about where the mouse hover part of the `balloonevalterm` support went: https://github.com/neovim/neovim/issues/8646\r\n\r\nThis also needs the compatibility label maybe since it's needed to make plugins with vim feature parity?",
            "created_at": "2021-11-17T04:46:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-971177915",
            "id": 971177915,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "IC_kwDOAPphoM454v-7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/971177915/reactions"
            },
            "updated_at": "2021-11-17T04:52:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/971177915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1444900?v=4",
                "events_url": "https://api.github.com/users/GBeauregard/events{/privacy}",
                "followers_url": "https://api.github.com/users/GBeauregard/followers",
                "following_url": "https://api.github.com/users/GBeauregard/following{/other_user}",
                "gists_url": "https://api.github.com/users/GBeauregard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GBeauregard",
                "id": 1444900,
                "login": "GBeauregard",
                "node_id": "MDQ6VXNlcjE0NDQ5MDA=",
                "organizations_url": "https://api.github.com/users/GBeauregard/orgs",
                "received_events_url": "https://api.github.com/users/GBeauregard/received_events",
                "repos_url": "https://api.github.com/users/GBeauregard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GBeauregard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GBeauregard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GBeauregard"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A problem with implementing this as a pseudokey is that it can interrupt partial mappings, which means it cannot be always allowed. Vim's `'balloonevalterm'` and `'mousemoveevent'` also have this problem (<https://github.com/vim/vim/pull/10044#issuecomment-1083619443>).",
            "created_at": "2022-07-24T01:48:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-1193226008",
            "id": 1193226008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "IC_kwDOAPphoM5HHy8Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1193226008/reactions"
            },
            "updated_at": "2022-07-24T03:11:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1193226008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "When there is a mouse hover handler, there also needs to be a way to indicate that the mouse has moved away from the hovering position. Therefore a UI only sending mouse hover events in not enough. There needs to be a way to tell a UI that it should send mouse movement events. I have implemented such a UI option `'mousemoveevent'` for TUI in #19481.",
            "created_at": "2022-07-25T04:17:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-1193556776",
            "id": 1193556776,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "IC_kwDOAPphoM5HJDso",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1193556776/reactions"
            },
            "updated_at": "2022-07-25T04:17:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1193556776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can this be closed now we have `'mousemovement'` implemented?",
            "created_at": "2023-12-21T15:45:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-1866526573",
            "id": 1866526573,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "IC_kwDOAPphoM5vQO9t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1866526573/reactions"
            },
            "updated_at": "2023-12-21T15:45:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1866526573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think so: `'mousemoveevent'` makes it possible to implement mouse hover handlers. I'm not sure a separate \"mouse hover\" event would add much (especially considering @zeertzjq's comment above about needing yet another event to indicate that the mouse has stopped hovering).\r\n\r\nAs an example, I've implemented a mouse hover handler to display LSP hover information [here](https://github.com/gpanders/dotfiles/blob/master/.config/nvim/plugin/mouse.fnl).",
            "created_at": "2023-12-21T16:03:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/9534#issuecomment-1866564889",
            "id": 1866564889,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9534",
            "node_id": "IC_kwDOAPphoM5vQYUZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1866564889/reactions"
            },
            "updated_at": "2023-12-21T16:03:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1866564889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/9534/comments",
    "created_at": "2019-01-21T07:34:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/9534/events",
    "html_url": "https://github.com/neovim/neovim/issues/9534",
    "id": 401226769,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/9534/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2022-10-01T21:48:50Z",
        "closed_issues": 157,
        "created_at": "2022-08-18T10:21:07Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2022-09-30T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/32",
        "id": 8320818,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/32/labels",
        "node_id": "MI_kwDOAPphoM4Afvcy",
        "number": 32,
        "open_issues": 0,
        "state": "closed",
        "title": "0.8",
        "updated_at": "2023-12-23T14:56:44Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/32"
    },
    "node_id": "MDU6SXNzdWU0MDEyMjY3Njk=",
    "number": 9534,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 46,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 1,
        "hooray": 1,
        "laugh": 0,
        "rocket": 2,
        "total_count": 50,
        "url": "https://api.github.com/repos/neovim/neovim/issues/9534/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/9534/timeline",
    "title": "API: receive mouse hover events",
    "updated_at": "2023-12-23T14:56:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/9534",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/251450?v=4",
        "events_url": "https://api.github.com/users/chemzqm/events{/privacy}",
        "followers_url": "https://api.github.com/users/chemzqm/followers",
        "following_url": "https://api.github.com/users/chemzqm/following{/other_user}",
        "gists_url": "https://api.github.com/users/chemzqm/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/chemzqm",
        "id": 251450,
        "login": "chemzqm",
        "node_id": "MDQ6VXNlcjI1MTQ1MA==",
        "organizations_url": "https://api.github.com/users/chemzqm/orgs",
        "received_events_url": "https://api.github.com/users/chemzqm/received_events",
        "repos_url": "https://api.github.com/users/chemzqm/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/chemzqm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chemzqm/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/chemzqm"
    }
}