{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nPlease see related haskell-language-server issue:  https://github.com/haskell/haskell-language-server/issues/3857\r\n\r\nThe HLS \"Remove redundant imports\" code action stopped appearing after neovim `0.7`. It appears that neovim might be making malformed requests to the language server?\r\n\r\nThe code action works in neovim `0.7`, but is broken in neovim `0.9.x`. The code action works as expected in VS Code, which suggests it is in fact an issue with neovim rather than the haskell language server.\r\n\r\nFollowing are the contents of the requests for neovim `0.7` and `0.9`:\r\n\r\n**neovim 0.7**\r\n```\r\n[DEBUG][2023-10-31 14:31:44] .../vim/lsp/rpc.lua:347\t\"rpc.send\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"textDocument/codeAction\",  params = {    context = {      diagnostics = { {          code = \"-Wunused-imports\",          message = \"The import of ‘generateDebugUI’\\nfrom module ‘DebugInfoScreen’ is redundant\",          range = {            end = {              character = 53,              line = 8            },            start = {              character = 38,              line = 8            }          },          severity = 2,          source = \"typecheck\",          tags = { 1 }        } }    },    range = {      end = <1>{        character = 0,        line = 8      },      start = <table 1>    },    textDocument = {      uri = \"file:///Users/axis/dev/ultimate/src/Program/IODriver.hs\"    }  }}\r\n```\r\n\r\n**neovim 0.9**\r\n```\r\n[DEBUG][2023-10-31 14:45:44] .../vim/lsp/rpc.lua:284\t\"rpc.send\"\t{  id = 9,  jsonrpc = \"2.0\",  method = \"textDocument/codeAction\",  params = {    context = {      diagnostics = { {          code = \"-Wunused-imports\",          message = \"The import of ‘generateDebugUI’\\nfrom module ‘DebugInfoScreen’ is redundant\",          range = {            [\"end\"] = {              character = 53,              line = 8            },            start = {              character = 38,              line = 8            }          },          severity = 2,          source = \"typecheck\"        } },      triggerKind = 1    },    range = {      [\"end\"] = <1>{        character = 5,        line = 8      },      start = <table 1>    },    textDocument = {      uri = \"file:///Users/axis/dev/ultimate/src/Program/IODriver.hs\"    }  }}\r\n```\r\n----\r\n\r\nThe diff of these two boils down to:\r\n\r\n**0.7:**\r\n```\r\nrange = {      end = <1>{        character = 0,        line = 8      },      start = <table 1>   }\r\n```\r\n\r\n**0.9:**\r\n```\r\nrange = {      [\"end\"] = <1>{        character = 5,        line = 8      },      start = <table 1>    }\r\n```\r\n\r\nNote the `[\"end\"] = ` bit, seems like the JSON might be wonky?\n\n### Steps to reproduce\n\nOpen a Haskell file using neovim 0.9.x and the haskell-language-server. Add a redundant import. Ask for code actions on this line.\n\n### Expected behavior\n\nThere is a code action to 'Remove import' and 'Remove all redundant imports', as well as 'Disable 'unused-imports' warnings'\n\n### Neovim version (nvim -v)\n\nNVIM v0.9.5 Build type: Release LuaJIT 2.1.1692716794\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nPopOS 22.04\n\n### Terminal name/version\n\ngnome-terminal\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nappimage",
    "closed_at": "2024-03-06T11:12:42Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "The requests are the same, they are just logged differently: #19898",
            "created_at": "2024-02-03T05:04:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1925099724",
            "id": 1925099724,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5yvrDM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925099724/reactions"
            },
            "updated_at": "2024-02-03T05:07:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925099724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ahh, I see. Thanks for the context, the logs make more sense given that.\r\n\r\nThen the only difference is the the second `range` value, it seems. Unless there's something else going on elsewhere...",
            "created_at": "2024-02-03T17:54:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1925413853",
            "id": 1925413853,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5yw3vd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925413853/reactions"
            },
            "updated_at": "2024-02-03T17:54:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925413853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/132365?v=4",
                "events_url": "https://api.github.com/users/keithfancher/events{/privacy}",
                "followers_url": "https://api.github.com/users/keithfancher/followers",
                "following_url": "https://api.github.com/users/keithfancher/following{/other_user}",
                "gists_url": "https://api.github.com/users/keithfancher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/keithfancher",
                "id": 132365,
                "login": "keithfancher",
                "node_id": "MDQ6VXNlcjEzMjM2NQ==",
                "organizations_url": "https://api.github.com/users/keithfancher/orgs",
                "received_events_url": "https://api.github.com/users/keithfancher/received_events",
                "repos_url": "https://api.github.com/users/keithfancher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/keithfancher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keithfancher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/keithfancher"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here are some equivalent request/response logs from VS Code, where the code actions also behave as expected:\r\n\r\nRequest:\r\n```\r\n[Trace - 12:27:25 PM] Sending request 'textDocument/codeAction - (7)'.\r\nParams: \r\n```\r\n```json\r\n{\r\n    \"textDocument\": {\r\n        \"uri\": \"file:///home/ktf/Code/tvmv/src/Log.hs\"\r\n    },\r\n    \"range\": {\r\n        \"start\": {\r\n            \"line\": 29,\r\n            \"character\": 0\r\n        },\r\n        \"end\": {\r\n            \"line\": 29,\r\n            \"character\": 0\r\n        }\r\n    },\r\n    \"context\": {\r\n        \"diagnostics\": [\r\n            {\r\n                \"range\": {\r\n                    \"start\": {\r\n                        \"line\": 29,\r\n                        \"character\": 0\r\n                    },\r\n                    \"end\": {\r\n                        \"line\": 29,\r\n                        \"character\": 18\r\n                    }\r\n                },\r\n                \"message\": \"The import of ‘Debug.Trace’ is redundant\\n  except perhaps to import instances from ‘Debug.Trace’\\nTo import instances alone, use: import Debug.Trace()\",\r\n                \"code\": \"-Wunused-imports\",\r\n                \"severity\": 2,\r\n                \"tags\": [\r\n                    1\r\n                ],\r\n                \"source\": \"typecheck\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nResponse (note the presence of `\"Remove all redundant imports\"` option):\r\n```\r\n[Trace - 12:27:25 PM] Received response 'textDocument/codeAction - (7)' in 68ms.\r\nResult:\r\n```\r\n```json\r\n[\r\n    {\r\n        \"data\": {\r\n            \"resolvePlugin\": \"importLens\",\r\n            \"resolveURI\": \"file:///home/ktf/Code/tvmv/src/Log.hs\",\r\n            \"resolveValue\": {\r\n                \"importId\": 66,\r\n                \"tag\": \"ResolveOne\",\r\n                \"uri\": \"file:///home/ktf/Code/tvmv/src/Log.hs\"\r\n            }\r\n        },\r\n        \"kind\": \"quickfix\",\r\n        \"title\": \"Make this import explicit\"\r\n    },\r\n    {\r\n        \"data\": {\r\n            \"resolvePlugin\": \"importLens\",\r\n            \"resolveURI\": \"file:///home/ktf/Code/tvmv/src/Log.hs\",\r\n            \"resolveValue\": {\r\n                \"tag\": \"ExplicitAll\",\r\n                \"uri\": \"file:///home/ktf/Code/tvmv/src/Log.hs\"\r\n            }\r\n        },\r\n        \"kind\": \"quickfix\",\r\n        \"title\": \"Make all imports explicit\"\r\n    },\r\n    {\r\n        \"diagnostics\": [\r\n            {\r\n                \"code\": \"-Wunused-imports\",\r\n                \"message\": \"The import of ‘Debug.Trace’ is redundant\\n  except perhaps to import instances from ‘Debug.Trace’\\nTo import instances alone, use: import Debug.Trace()\",\r\n                \"range\": {\r\n                    \"end\": {\r\n                        \"character\": 18,\r\n                        \"line\": 29\r\n                    },\r\n                    \"start\": {\r\n                        \"character\": 0,\r\n                        \"line\": 29\r\n                    }\r\n                },\r\n                \"severity\": 2,\r\n                \"source\": \"typecheck\",\r\n                \"tags\": [\r\n                    1\r\n                ]\r\n            }\r\n        ],\r\n        \"edit\": {\r\n            \"changes\": {\r\n                \"file:///home/ktf/Code/tvmv/src/Log.hs\": [\r\n                    {\r\n                        \"newText\": \"\",\r\n                        \"range\": {\r\n                            \"end\": {\r\n                                \"character\": 0,\r\n                                \"line\": 30\r\n                            },\r\n                            \"start\": {\r\n                                \"character\": 0,\r\n                                \"line\": 29\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"kind\": \"quickfix\",\r\n        \"title\": \"Remove import\"\r\n    },\r\n    {\r\n        \"edit\": {\r\n            \"changes\": {\r\n                \"file:///home/ktf/Code/tvmv/src/Log.hs\": [\r\n                    {\r\n                        \"newText\": \"\",\r\n                        \"range\": {\r\n                            \"end\": {\r\n                                \"character\": 0,\r\n                                \"line\": 30\r\n                            },\r\n                            \"start\": {\r\n                                \"character\": 0,\r\n                                \"line\": 29\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"isPreferred\": true,\r\n        \"kind\": \"quickfix\",\r\n        \"title\": \"Remove all redundant imports\"\r\n    },\r\n    {\r\n        \"diagnostics\": [],\r\n        \"edit\": {\r\n            \"changes\": {\r\n                \"file:///home/ktf/Code/tvmv/src/Log.hs\": [\r\n                    {\r\n                        \"newText\": \"{-# OPTIONS_GHC -Wno-unused-imports #-}\\n\",\r\n                        \"range\": {\r\n                            \"end\": {\r\n                                \"character\": 0,\r\n                                \"line\": 0\r\n                            },\r\n                            \"start\": {\r\n                                \"character\": 0,\r\n                                \"line\": 0\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        \"kind\": \"quickfix\",\r\n        \"title\": \"Disable \\\"unused-imports\\\" warnings\"\r\n    }\r\n]\r\n\r\n\r\n```",
            "created_at": "2024-02-03T20:35:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1925449089",
            "id": 1925449089,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5yxAWB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925449089/reactions"
            },
            "updated_at": "2024-02-03T20:35:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925449089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/132365?v=4",
                "events_url": "https://api.github.com/users/keithfancher/events{/privacy}",
                "followers_url": "https://api.github.com/users/keithfancher/followers",
                "following_url": "https://api.github.com/users/keithfancher/following{/other_user}",
                "gists_url": "https://api.github.com/users/keithfancher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/keithfancher",
                "id": 132365,
                "login": "keithfancher",
                "node_id": "MDQ6VXNlcjEzMjM2NQ==",
                "organizations_url": "https://api.github.com/users/keithfancher/orgs",
                "received_events_url": "https://api.github.com/users/keithfancher/received_events",
                "repos_url": "https://api.github.com/users/keithfancher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/keithfancher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keithfancher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/keithfancher"
            }
        },
        {
            "author_association": "NONE",
            "body": "And here is the identical request from neovim `0.9.5`. It's not quite apples-to-apples, I guess the neovim logging isn't JSON, but lua? I tried to format it a bit for readability:\r\n```\r\n[DEBUG][2024-02-03 13:10:49] .../lua/vim/lsp.lua:1391\t\"LSP[hls]\"\t\"client.request\"\t1\t\"textDocument/codeAction\"\t\r\n```\r\n```lua\r\n{\r\n  context = \r\n  {\r\n    diagnostics = {\r\n      {\r\n        code = \"-Wunused-imports\",\r\n        message = \"The import of ‘Debug.Trace’ is redundant\\n  except perhaps to import instances from ‘Debug.Trace’\\nTo import instances alone, use: import Debug.Trace()\",\r\n        range = {\r\n          [\"end\"] = { character = 18, line = 29},\r\n          start = {character = 0, line = 29}        \r\n        },\r\n        severity = 2,\r\n        source = \"typecheck\"      \r\n      } \r\n    },\r\n    triggerKind = 1  \r\n  }, \r\n  range = {    [\"end\"] = <1>{character = 0, line = 29}, start = <table 1>  },\r\n  textDocument = { uri = \"file:///mnt/data/Programming/tvmv/src/Log.hs\"  }\r\n}\t<function 1>\t1\r\n```\r\n\r\nAside from the `table` and `[\"end\"]` stuff, seems like the main difference is the lack of the `tags` field in neovim's request?",
            "created_at": "2024-02-03T21:23:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1925458819",
            "id": 1925458819,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5yxCuD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925458819/reactions"
            },
            "updated_at": "2024-02-03T21:23:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925458819",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/132365?v=4",
                "events_url": "https://api.github.com/users/keithfancher/events{/privacy}",
                "followers_url": "https://api.github.com/users/keithfancher/followers",
                "following_url": "https://api.github.com/users/keithfancher/following{/other_user}",
                "gists_url": "https://api.github.com/users/keithfancher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/keithfancher",
                "id": 132365,
                "login": "keithfancher",
                "node_id": "MDQ6VXNlcjEzMjM2NQ==",
                "organizations_url": "https://api.github.com/users/keithfancher/orgs",
                "received_events_url": "https://api.github.com/users/keithfancher/received_events",
                "repos_url": "https://api.github.com/users/keithfancher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/keithfancher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keithfancher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/keithfancher"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can you confirm if range codeaction works with the same haskell LSP server on nvim 0.7.x? I don't think is a regression, but some incompatibility of the LSP server. It's likely that the certain LSP server (haskell) would be sending an invalid response, or Nvim doesn't follow the LSP spec 100% accurately.\r\n\r\nThe additional `tags` field is a part of `lsp.Diagnostic`, but this is just an optional metadata that has nothing to do with the bug.\r\n\r\nhttps://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeActionContext\r\nhttps://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnostic\r\n\r\nWhat's the response from LSP? Can you get one and log it?",
            "created_at": "2024-02-03T21:52:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1925464638",
            "id": 1925464638,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5yxEI-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925464638/reactions"
            },
            "updated_at": "2024-02-03T21:54:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925464638",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've done some debugging on the haskell-language-server side and found that the issue *is* actually the missing tags. There's a comparison happening server-side that expects them to be there, but they aren't.\r\n\r\nIs there a reason neovim stopped sending them?\r\n\r\nThat aside, it looks like the only required fields in `Diagnostic` are `range` and `message` -- am I reading that right? (According to [the docs you linked](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnostic).)\r\n\r\nIf that's the case, perhaps the server-side check should be made less strict...",
            "created_at": "2024-02-04T18:27:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1925873663",
            "id": 1925873663,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5yyn__",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925873663/reactions"
            },
            "updated_at": "2024-02-04T18:27:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925873663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/132365?v=4",
                "events_url": "https://api.github.com/users/keithfancher/events{/privacy}",
                "followers_url": "https://api.github.com/users/keithfancher/followers",
                "following_url": "https://api.github.com/users/keithfancher/following{/other_user}",
                "gists_url": "https://api.github.com/users/keithfancher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/keithfancher",
                "id": 132365,
                "login": "keithfancher",
                "node_id": "MDQ6VXNlcjEzMjM2NQ==",
                "organizations_url": "https://api.github.com/users/keithfancher/orgs",
                "received_events_url": "https://api.github.com/users/keithfancher/received_events",
                "repos_url": "https://api.github.com/users/keithfancher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/keithfancher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keithfancher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/keithfancher"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for your efforts in debugging on the LSP server side. As you can find in the LSP protocol:\r\n\r\n- https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeActionParams\r\n- https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeActionContext\r\n- https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnostic\r\n\r\nThe field `params.context.diagnostics[...].tags` is optional, so if the lack of this field causes a LSP server to throw or not send a valid response, it's a bug of the Haskell LSP server, not Neovim's. I haven't tried finding since which commit and why LSP 0.7+ no longer sends that, but you could try git-bisecting if you're interested in.",
            "created_at": "2024-02-04T18:34:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1925875457",
            "id": 1925875457,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5yyocB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925875457/reactions"
            },
            "updated_at": "2024-02-04T19:50:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925875457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi, HLS dev here. I think we should be robust to this case, but I do think something slightly funny is going on here. \r\n\r\nDiagnostics originate from the server, so I think it's not _totally_ unreasonable for us to expect that the elements of the `params.contexts.diagnostics` array are exactly diagnostics that the server originally sent. But it looks like what's happening here is that we're sending you a diagnostic _with_ a tag, and you're sending it back _without_ a tag.\r\n\r\nFrom the server's perspective, not sending back diagnostics exactly as they were received makes it much harder to cross-reference the diagnostics in `params.context` with the diagnostics that the server knows about, since a naive structural comparison now thinks that they're different.\r\n\r\nOf course, the spec helpfully says nothing about what you're supposed to do here, so who knows! ",
            "created_at": "2024-02-05T09:25:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1926547743",
            "id": 1926547743,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5y1Mkf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1926547743/reactions"
            },
            "updated_at": "2024-02-05T09:25:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1926547743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1699466?v=4",
                "events_url": "https://api.github.com/users/michaelpj/events{/privacy}",
                "followers_url": "https://api.github.com/users/michaelpj/followers",
                "following_url": "https://api.github.com/users/michaelpj/following{/other_user}",
                "gists_url": "https://api.github.com/users/michaelpj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/michaelpj",
                "id": 1699466,
                "login": "michaelpj",
                "node_id": "MDQ6VXNlcjE2OTk0NjY=",
                "organizations_url": "https://api.github.com/users/michaelpj/orgs",
                "received_events_url": "https://api.github.com/users/michaelpj/received_events",
                "repos_url": "https://api.github.com/users/michaelpj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/michaelpj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michaelpj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/michaelpj"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Of course, the spec helpfully says nothing about what you're supposed to do here, so who knows!\r\n\r\nNobody, until someone opens an issue requesting clarification ;)",
            "created_at": "2024-02-05T09:27:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1926551406",
            "id": 1926551406,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5y1Ndu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1926551406/reactions"
            },
            "updated_at": "2024-02-05T09:27:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1926551406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Woops, I just accidentally pushed that without a PR 😬 . Hopefully that fixes the issue.",
            "created_at": "2024-02-06T12:37:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1929439216",
            "id": 1929439216,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5zAOfw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 1,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1929439216/reactions"
            },
            "updated_at": "2024-02-06T12:37:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1929439216",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks! We'll try and be more resilient also. On further looking, I now think we should probably be putting something in `diagnostic.data` if we need to identify diagnostics across requests like this.",
            "created_at": "2024-02-06T15:42:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1930080688",
            "id": 1930080688,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5zCrGw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1930080688/reactions"
            },
            "updated_at": "2024-02-06T15:42:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1930080688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1699466?v=4",
                "events_url": "https://api.github.com/users/michaelpj/events{/privacy}",
                "followers_url": "https://api.github.com/users/michaelpj/followers",
                "following_url": "https://api.github.com/users/michaelpj/following{/other_user}",
                "gists_url": "https://api.github.com/users/michaelpj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/michaelpj",
                "id": 1699466,
                "login": "michaelpj",
                "node_id": "MDQ6VXNlcjE2OTk0NjY=",
                "organizations_url": "https://api.github.com/users/michaelpj/orgs",
                "received_events_url": "https://api.github.com/users/michaelpj/received_events",
                "repos_url": "https://api.github.com/users/michaelpj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/michaelpj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/michaelpj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/michaelpj"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi @lewis6991 -- I just did a quick test with the neovim [nightly build from Feb 7](https://github.com/neovim/neovim/releases/tag/nightly) and it still didn't look like tags were being sent back to haskell-language-server in the request:\r\n\r\n```\r\n[DEBUG][2024-02-08 16:01:42] .../vim/lsp/rpc.lua:43\t\"rpc.send\"\t{  id = 16,  jsonrpc = \"2.0\",  method = \"textDocument/codeAction\",  params = {    context = {      diagnostics = { {          code = \"-Wunused-imports\",          message = \"The import of ‘Debug.Trace’ is redundant\\n  except perhaps to import instances from ‘Debug.Trace’\\nTo import instances alone, use: import Debug.Trace()\",          range = {            [\"end\"] = {              character = 18,              line = 30            },            start = {              character = 0,              line = 30            }          },          severity = 2,          source = \"typecheck\"        } },      triggerKind = 1    },    range = {      [\"end\"] = <1>{        character = 0,        line = 30      },      start = <table 1>    },    textDocument = {      uri = \"file:///mnt/data/Programming/tvmv/src/Log.hs\"    }  }}\r\n```\r\n\r\nHere's my nvim version info:\r\n```\r\n:verbose version                                                                                                                                                                                                                                                                 \r\nNVIM v0.10.0-dev-2300+g24d26b4cd                                                                                                                                                                                                                                                  \r\nBuild type: RelWithDebInfo                                                                                                                                                                                                                                                        \r\nLuaJIT 2.1.1707061634                                                                                                                                                                                                                                                             \r\nCompilation: /usr/bin/gcc-10 -O2 -g -Og -g -flto=auto -fno-fat-lto-objects -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wvla -Wdouble-promotion -Wmissing-noreturn -Wmissing-format-attribute -Wmissing-prototypes -fsigned\r\n-char -fstack-protector-strong -fno-common -Wno-unused-result -Wimplicit-fallthrough -fdiagnostics-color=always  -DUNIT_TESTING -DHAVE_UNIBILIUM -D_GNU_SOURCE -DINCLUDE_GENERATED_DECLARATIONS -I/home/runner/work/neovim/neovim/.deps/usr/include/luajit-2.1 -I/home/runner/work\r\n/neovim/neovim/.deps/usr/include -I/home/runner/work/neovim/neovim/build/src/nvim/auto -I/home/runner/work/neovim/neovim/build/include -I/home/runner/work/neovim/neovim/build/cmake.config -I/home/runner/work/neovim/neovim/src -I/usr/include                                  \r\n                                                                                                                                                                                                                                                                                  \r\n   system vimrc file: \"$VIM/sysinit.vim\"                                                                                                                                                                                                                                          \r\n  fall-back for $VIM: \"/usr/local/share/nvim\"                                                                                                                                                                                                                                     \r\n                                                                                                                                                                                                                                                                                  \r\nRun :checkhealth for more info                                              \r\n```\r\n\r\nI double-checked [the tree](https://github.com/neovim/neovim/commits/24d26b4cd1db3d312a6c6e9d025c0016159f99dc/) to be sure the build includes your commit, which it seems to... it's possible this did not fix the issue as expected.",
            "created_at": "2024-02-09T00:10:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1935126304",
            "id": 1935126304,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM5zV68g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935126304/reactions"
            },
            "updated_at": "2024-02-09T00:10:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935126304",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/132365?v=4",
                "events_url": "https://api.github.com/users/keithfancher/events{/privacy}",
                "followers_url": "https://api.github.com/users/keithfancher/followers",
                "following_url": "https://api.github.com/users/keithfancher/following{/other_user}",
                "gists_url": "https://api.github.com/users/keithfancher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/keithfancher",
                "id": 132365,
                "login": "keithfancher",
                "node_id": "MDQ6VXNlcjEzMjM2NQ==",
                "organizations_url": "https://api.github.com/users/keithfancher/orgs",
                "received_events_url": "https://api.github.com/users/keithfancher/received_events",
                "repos_url": "https://api.github.com/users/keithfancher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/keithfancher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/keithfancher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/keithfancher"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Woops, looks like a 1-char error. #27752 should fix this.",
            "created_at": "2024-03-06T10:44:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/27318#issuecomment-1980581224",
            "id": 1980581224,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27318",
            "node_id": "IC_kwDOAPphoM52DUVo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1980581224/reactions"
            },
            "updated_at": "2024-03-06T10:44:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1980581224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27318/comments",
    "created_at": "2024-02-03T04:49:12Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27318/events",
    "html_url": "https://github.com/neovim/neovim/issues/27318",
    "id": 2116227977,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27318/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5-IxOJ",
    "number": 27318,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27318/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27318/timeline",
    "title": "LSP: Code action ranges broken in neovim > `0.7`",
    "updated_at": "2024-03-06T11:12:42Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27318",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/132365?v=4",
        "events_url": "https://api.github.com/users/keithfancher/events{/privacy}",
        "followers_url": "https://api.github.com/users/keithfancher/followers",
        "following_url": "https://api.github.com/users/keithfancher/following{/other_user}",
        "gists_url": "https://api.github.com/users/keithfancher/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/keithfancher",
        "id": 132365,
        "login": "keithfancher",
        "node_id": "MDQ6VXNlcjEzMjM2NQ==",
        "organizations_url": "https://api.github.com/users/keithfancher/orgs",
        "received_events_url": "https://api.github.com/users/keithfancher/received_events",
        "repos_url": "https://api.github.com/users/keithfancher/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/keithfancher/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/keithfancher/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/keithfancher"
    }
}