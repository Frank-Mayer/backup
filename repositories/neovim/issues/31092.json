{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n![Image](https://github.com/user-attachments/assets/b6274cb6-6cc9-444e-9e5b-9ea77c165dc3)\nThis only happens when I open the java file.\nI debugged this a bit and found out that some table is being passed along to the function instead of path.\n\n### Steps to reproduce\n\n- nvim-nightly\n- java file\n\n### Expected behavior\n\nNormal file opening without any warnings\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-1092+g0da4d89558\n\n### Vim (not Nvim) behaves the same?\n\n-\n\n### Operating system/version\n\nWindows\n\n### Terminal name/version\n\nWindows Terminal\n\n### $TERM environment variable\n\n-\n\n### Installation\n\nscoop",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "How is your lsp configuration? Using plugins or lspconfig or vim.lsp.start ? Please provide useful information.",
            "created_at": "2024-11-06T10:32:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/31092#issuecomment-2459322481",
            "id": 2459322481,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31092",
            "node_id": "IC_kwDOAPphoM6Slkhx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2459322481/reactions"
            },
            "updated_at": "2024-11-06T10:32:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2459322481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sure, here it is:\n```lua\nreturn {\n    \"neovim/nvim-lspconfig\",\n    lazy = true,\n    event = { \"BufReadPre\", \"BufNewFile\" },\n    dependencies = {\n        \"williamboman/mason.nvim\",\n        \"williamboman/mason-lspconfig.nvim\",\n        \"williamboman/mason.nvim\",\n        \"williamboman/mason-lspconfig.nvim\",\n    },\n    config = function()\n        local lspconfig = require(\"lspconfig\")\n        local cmp_lsp = require(\"cmp_nvim_lsp\")\n        local lsp_info_ui = require(\"lspconfig.ui.windows\")\n        local capabilities = vim.tbl_deep_extend(\n            \"force\",\n            {},\n            vim.lsp.protocol.make_client_capabilities(),\n            cmp_lsp.default_capabilities()\n        )\n        capabilities.textDocument.completion.completionItem.snippetSupport = true\n        require(\"mason\").setup()\n        require(\"mason-lspconfig\").setup({\n            ensure_installed = {\n                \"lua_ls\",\n                \"denols\",\n                \"clangd\",\n                \"pyright\",\n            },\n            handlers = {\n                function(server_name) -- default handler (optional)\n                    lspconfig[server_name].setup({\n                        capabilities = capabilities,\n                    })\n                end,\n                [\"lua_ls\"] = function()\n                    lspconfig.lua_ls.setup({\n                        capabilities = capabilities,\n                        settings = {\n                            Lua = {\n                                runtime = {\n                                    version = \"LuaJIT\",\n                                },\n                                completion = { enable = true, callSnippet = \"Both\" },\n                                diagnostics = {\n                                    enable = true,\n                                    globals = { \"vim\", \"it\", \"describe\", \"before_each\", \"after_each\" },\n                                },\n                            },\n                        },\n                    })\n                end,\n                [\"intelephense\"] = function()\n                    lspconfig.intelephense.setup({\n                        capabilities = capabilities,\n                        single_file_mode = true,\n                        filetypes = { \"php\" },\n                    })\n                end,\n            },\n        })\n\n        vim.diagnostic.config({\n            --virtual_text = {\n            -- Only show virtual text for error messages\n            --    severity = vim.diagnostic.severity.ERROR,\n            --},\n            signs = true,\n            update_in_insert = false,\n            --severity_sort = true,\n            float = {\n                border = \"single\",\n                style = \"minimal\",\n                source = \"always\",\n                header = \"\",\n                prefix = \"\",\n            },\n        })\n\n        -- Borders for some floating windows\n        local _border = \"single\"\n        vim.lsp.handlers[\"textDocument/hover\"] = vim.lsp.with(vim.lsp.handlers.hover, {\n            border = _border,\n        })\n        vim.lsp.handlers[\"textDocument/signatureHelp\"] = vim.lsp.with(vim.lsp.handlers.signature_help, {\n            border = _border,\n        })\n        lsp_info_ui.default_options = {\n            border = _border,\n        }\n\n        for _, method in ipairs({ 'textDocument/diagnostic', 'workspace/diagnostic' }) do\n            local default_diagnostic_handler = vim.lsp.handlers[method]\n            vim.lsp.handlers[method] = function(err, result, context, config)\n                if err ~= nil and err.code == -32802 then\n                    return\n                end\n                return default_diagnostic_handler(err, result, context, config)\n            end\n        end\n\n        -- Mappings\n        local opts = { noremap = true, silent = true }\n        vim.keymap.set(\"n\", \"gd\", function()\n            vim.lsp.buf.definition()\n        end, opts)\n        vim.keymap.set(\"n\", \"<leader>vws\", function()\n            vim.lsp.buf.workspace_symbol()\n        end, opts)\n        vim.keymap.set(\"n\", \"<leader>vd\", function()\n            vim.diagnostic.open_float()\n        end, opts)\n        vim.keymap.set(\"n\", \"[d\", function()\n            vim.diagnostic.goto_next()\n        end, opts)\n        vim.keymap.set(\"n\", \"]d\", function()\n            vim.diagnostic.goto_prev()\n        end, opts)\n        vim.keymap.set(\"n\", \"<leader>ca\", function()\n            vim.lsp.buf.code_action()\n        end, opts)\n        vim.keymap.set(\"n\", \"<leader>vrr\", function()\n            vim.lsp.buf.references()\n        end, opts)\n        vim.keymap.set(\"n\", \"<leader>vrn\", function()\n            vim.lsp.buf.rename()\n        end, opts)\n        vim.keymap.set(\"n\", \"<leader>vsh\", function()\n            vim.lsp.buf.signature_help()\n        end, opts)\n        -- vim.cmd.highlight(\"DiagnosticUnderlineError\", \"gui=undercurl\")\n        -- vim.cmd.highlight(\"DiagnosticUnderlineWarn\", \"gui=undercurl\")\n        -- vim.cmd.highlight(\"DiagnosticUnderlineHint\", \"gui=undercurl\")\n        -- vim.cmd([[highlight DiagnosticVirtualTextError guifg=#db4b4b guibg=#2D202A]])\n        -- vim.cmd([[highlight DiagnosticVirtualTextWarn guifg=#e0af68 guibg=#2E2A2D]])\n        -- vim.cmd([[highlight DiagnosticVirtualTextInfo guifg=#0db9d7 guibg=#192B38]])\n        -- vim.cmd([[highlight DiagnosticVirtualTextHint guifg=#1abc9c guibg=#1A2B32]])\n        vim.keymap.set(\"n\", \"<leader>is\", function()\n            vim.diagnostic.goto_next()\n        end, {})\n        vim.keymap.set(\"n\", \"<leader>dp\", function()\n            vim.diagnostic.open_float({ scope = \"line\" })\n        end, {})\n        vim.keymap.set(\"n\", \"<leader>S\", function()\n            vim.cmd(\"LspStart\")\n        end, {})\n    end,\n}\n```",
            "created_at": "2024-11-06T13:55:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/31092#issuecomment-2459820754",
            "id": 2459820754,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31092",
            "node_id": "IC_kwDOAPphoM6SneLS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2459820754/reactions"
            },
            "updated_at": "2024-11-06T13:55:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2459820754",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130576530?v=4",
                "events_url": "https://api.github.com/users/qbnil/events{/privacy}",
                "followers_url": "https://api.github.com/users/qbnil/followers",
                "following_url": "https://api.github.com/users/qbnil/following{/other_user}",
                "gists_url": "https://api.github.com/users/qbnil/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/qbnil",
                "id": 130576530,
                "login": "qbnil",
                "node_id": "U_kgDOB8hwkg",
                "organizations_url": "https://api.github.com/users/qbnil/orgs",
                "received_events_url": "https://api.github.com/users/qbnil/received_events",
                "repos_url": "https://api.github.com/users/qbnil/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/qbnil/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/qbnil/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/qbnil",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "please try minimal config withou any plugin only nvim-lspconfig or use vim.lsp.start which documented in help",
            "created_at": "2024-11-07T05:34:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/31092#issuecomment-2461354918",
            "id": 2461354918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31092",
            "node_id": "IC_kwDOAPphoM6StUum",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2461354918/reactions"
            },
            "updated_at": "2024-11-07T05:34:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2461354918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31092/comments",
    "created_at": "2024-11-05T20:07:58Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31092/events",
    "html_url": "https://github.com/neovim/neovim/issues/31092",
    "id": 2636365475,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 109461219,
            "name": "platform:windows",
            "node_id": "MDU6TGFiZWwxMDk0NjEyMTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:windows"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31092/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6dI76j",
    "number": 31092,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31092/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31092/timeline",
    "title": "Attempt to call method 'match' ( a nil value )",
    "updated_at": "2024-11-07T05:34:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31092",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/130576530?v=4",
        "events_url": "https://api.github.com/users/qbnil/events{/privacy}",
        "followers_url": "https://api.github.com/users/qbnil/followers",
        "following_url": "https://api.github.com/users/qbnil/following{/other_user}",
        "gists_url": "https://api.github.com/users/qbnil/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/qbnil",
        "id": 130576530,
        "login": "qbnil",
        "node_id": "U_kgDOB8hwkg",
        "organizations_url": "https://api.github.com/users/qbnil/orgs",
        "received_events_url": "https://api.github.com/users/qbnil/received_events",
        "repos_url": "https://api.github.com/users/qbnil/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/qbnil/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/qbnil/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/qbnil",
        "user_view_type": "public"
    }
}