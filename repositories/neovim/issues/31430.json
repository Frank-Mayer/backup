{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n[`Client:on_attach`](https://github.com/neovim/neovim/blob/49d6cd1da86cab49c7a5a8c79e59d48d016975fa/runtime/lua/vim/lsp/client.lua#L1011-L1037) runs `lsp._set_defaults` (which sets `formatexpr`, among other options) before the user-supplied `on_attach` handler.\n\nI want `formatexpr` to be set to the default so I can use `gq` to wrap text (I use [`conform.nvim`](https://github.com/stevearc/conform.nvim) for format-on-save for language servers that support it), so I set `formatexpr=` in my `on_attach` handler.\n\nBut then the LSP [`client/registerCapability`](https://github.com/neovim/neovim/blob/49d6cd1da86cab49c7a5a8c79e59d48d016975fa/runtime/lua/vim/lsp/handlers.lua#L122-L131) handler calls `lsp._set_defaults` again, but without calling the `on_attach` handler.\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\nUsing the following config, load a Haskell file. The issue can be reproduced with any language server that uses the `client/registerCapability` message to enable formatting support, however.\n\n```lua\nlocal pattern = \"haskell\"\nlocal cmd = { \"haskell-language-server-wrapper\", \"--lsp\" }\nlocal root_markers = { \".git\", \"cabal.project\" }\nlocal settings = vim.empty_dict()\n\nvim.api.nvim_create_autocmd(\"FileType\", {\n  pattern = pattern,\n  callback = function(args)\n    local match = vim.fs.find(root_markers, { path = args.file, upward = true })[1]\n    local root_dir = match and vim.fn.fnamemodify(match, \":p:h\") or nil\n    vim.lsp.start({\n      name = \"haskell-language-server\",\n      cmd = cmd,\n      root_dir = root_dir,\n      settings = settings,\n      on_attach = function(_client, bufnr)\n        vim.api.nvim_buf_set_option(bufnr, \"formatexpr\", \"\")\n      end,\n    })\n  end,\n})\n```\n\n### Expected behavior\n\nMy `formatexpr` is not reset.\n\n### Nvim version (nvim -v)\n\nNVIM v0.10.2, Build type: Release, LuaJIT 2.1.1713773202\n\n### Language server name/version\n\nhaskell-language-server version: 2.9.0.0 (GHC: 9.8.2)\n\n### Operating system/version\n\nmacOS 15.1.1 (24B91)\n\n### Log file\n\nhttps://gist.github.com/9999years/468188f2acc05f203dec05cfa81d0714",
    "closed_at": "2024-12-02T20:29:01Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I've worked around this by adding a handler which resets the options:\n\n```lua\n--- Call a function for all buffers an LSP client is attached to.\n---\n--- @param ctx lsp.HandlerContext\n--- @param callback function(client: vim.lsp.Client, bufnr: number)\nlocal function for_all_attached_buffers(ctx, callback)\n  -- See: https://github.com/neovim/neovim/blob/49d6cd1da86cab49c7a5a8c79e59d48d016975fa/runtime/lua/vim/lsp/handlers.lua#L122-L131\n  local client = assert(vim.lsp.get_client_by_id(ctx.client_id))\n  for bufnr, _ in pairs(client.attached_buffers) do\n    callback(client, bufnr)\n  end\nend\n\n-- See: vim.lsp.ClientConfig\nlocal client_settings = {\n  handlers = {\n    [\"client/registerCapability\"] = function(err, result, ctx, config)\n      local default_result =\n        vim.lsp.handlers[\"client/registerCapability\"](err, result, ctx, config)\n      for_all_attached_buffers(ctx, function(_client, bufnr)\n        vim.api.nvim_buf_set_option(bufnr, \"formatexpr\", \"\")\n      end)\n      return default_result\n    end,\n  },\n  -- ...\n}\n```\n\nI'm not sure what the behavior here should be. Perhaps documenting this behavior would be sufficient, or providing a wrapper like `vim.lsp.with` to allow appending a callback like this.",
            "created_at": "2024-12-02T19:16:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/31430#issuecomment-2512528875",
            "id": 2512528875,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31430",
            "node_id": "IC_kwDOAPphoM6VwiXr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512528875/reactions"
            },
            "updated_at": "2024-12-02T19:16:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512528875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15312184?v=4",
                "events_url": "https://api.github.com/users/9999years/events{/privacy}",
                "followers_url": "https://api.github.com/users/9999years/followers",
                "following_url": "https://api.github.com/users/9999years/following{/other_user}",
                "gists_url": "https://api.github.com/users/9999years/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/9999years",
                "id": 15312184,
                "login": "9999years",
                "node_id": "MDQ6VXNlcjE1MzEyMTg0",
                "organizations_url": "https://api.github.com/users/9999years/orgs",
                "received_events_url": "https://api.github.com/users/9999years/received_events",
                "repos_url": "https://api.github.com/users/9999years/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/9999years/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/9999years/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/9999years",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "You could also use `gw` instead of `gq`.\n\nHaving a way to unset the defaults on new capabilities is tracked with https://github.com/neovim/neovim/issues/24229 ",
            "created_at": "2024-12-02T20:29:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/31430#issuecomment-2512745160",
            "id": 2512745160,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31430",
            "node_id": "IC_kwDOAPphoM6VxXLI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512745160/reactions"
            },
            "updated_at": "2024-12-02T20:29:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2512745160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31430/comments",
    "created_at": "2024-12-02T19:10:22Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31430/events",
    "html_url": "https://github.com/neovim/neovim/issues/31430",
    "id": 2713073437,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as duplicates of other issues",
            "id": 3221613764,
            "name": "closed:duplicate",
            "node_id": "MDU6TGFiZWwzMjIxNjEzNzY0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31430/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6htjcd",
    "number": 31430,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31430/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31430/timeline",
    "title": "LSP: Dynamic capabilities reset `formatexpr`",
    "updated_at": "2024-12-02T21:09:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31430",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15312184?v=4",
        "events_url": "https://api.github.com/users/9999years/events{/privacy}",
        "followers_url": "https://api.github.com/users/9999years/followers",
        "following_url": "https://api.github.com/users/9999years/following{/other_user}",
        "gists_url": "https://api.github.com/users/9999years/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/9999years",
        "id": 15312184,
        "login": "9999years",
        "node_id": "MDQ6VXNlcjE1MzEyMTg0",
        "organizations_url": "https://api.github.com/users/9999years/orgs",
        "received_events_url": "https://api.github.com/users/9999years/received_events",
        "repos_url": "https://api.github.com/users/9999years/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/9999years/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/9999years/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/9999years",
        "user_view_type": "public"
    }
}