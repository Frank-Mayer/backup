{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\n\r\n\r\nParsing shebangs in tree-sitter is possible, but extremely difficult to get correct without a fairly complex external scanner. Being able to do this is useful for nested languages if a direct injection specifier isn't available.\r\n\r\n### Expected behavior\r\n\r\nHelix provides an `@injection.shebang` capture that gets parsed by the editor and the language extracted. Adding this to treesitter would be great!\r\n\r\nDocs: https://docs.helix-editor.com/guides/injection.html#capture-types and related discussions there https://github.com/helix-editor/helix/pull/3970\r\n\r\nBased on a quick search, they use this for Nix, Markdown (as a fallback), and typst.\r\n\r\nAdding a field to `parsers.lua` for common shebanged languages, but a simple fallback that extracts `#!\\S*bin\\S*[/ ](?P<lang>[^-'\"]\\S*)` would probably work for most cases\r\n\r\nI originally opened this [in nvim-treesitter](https://github.com/nvim-treesitter/nvim-treesitter/issues/5870) but I learned that this is the correct repo.\r\n\r\nI also opened an issue for upstream tree-sitter: https://github.com/tree-sitter/tree-sitter/issues/2851",
    "closed_at": "2024-01-07T11:56:14Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think that's way too niche. What would be the benefit of having this as a general \"magic capture\" rather than an explicit, language-specific directive (like we already support)? ",
            "created_at": "2024-01-07T10:51:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/26939#issuecomment-1880022995",
            "id": 1880022995,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26939",
            "node_id": "IC_kwDOAPphoM5wDt_T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880022995/reactions"
            },
            "updated_at": "2024-01-07T10:51:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880022995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "It's strictly for convenience and reusability for any file types with embedded code. Parsing the shebang to extract the right information can be tricky, and it doesn't make much sense to repeat its logic and internal grammar across a variety of file formats.\r\n\r\nConversely, it is easy to find a simple `#!` and add an `@injection.shebang` to markdown, yaml, nix, just, toml, typst, tex, etc. tree-sitter also has the `first-line-regex` field to help, but I don't believe this can be accessed from the `.so`.\r\n\r\nBut yes, it is just a convenience. Maybe it would be better to have a regex `#replace?` predicate that is more generally useful.",
            "created_at": "2024-01-07T11:42:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/26939#issuecomment-1880034293",
            "id": 1880034293,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26939",
            "node_id": "IC_kwDOAPphoM5wDwv1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880034293/reactions"
            },
            "updated_at": "2024-01-07T11:42:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880034293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13724985?v=4",
                "events_url": "https://api.github.com/users/tgross35/events{/privacy}",
                "followers_url": "https://api.github.com/users/tgross35/followers",
                "following_url": "https://api.github.com/users/tgross35/following{/other_user}",
                "gists_url": "https://api.github.com/users/tgross35/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tgross35",
                "id": 13724985,
                "login": "tgross35",
                "node_id": "MDQ6VXNlcjEzNzI0OTg1",
                "organizations_url": "https://api.github.com/users/tgross35/orgs",
                "received_events_url": "https://api.github.com/users/tgross35/received_events",
                "repos_url": "https://api.github.com/users/tgross35/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tgross35/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tgross35/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tgross35"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This just shifts the burden from the language maintainers to the Neovim devs without any net reduction or performance gain. Also note that there _could_ be variations among file formats, so the generality is dubious. (For example, TeX has a very different \"shebang\".)\r\n\r\n> Maybe it would be better to have a regex #replace? predicate that is more generally useful.\r\n\r\nWe already have that: `#gsub!`. (Not everyone likes that, though; having that standardized upstream -- like `#match?` would go some way.)",
            "created_at": "2024-01-07T11:47:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/26939#issuecomment-1880035420",
            "id": 1880035420,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26939",
            "node_id": "IC_kwDOAPphoM5wDxBc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880035420/reactions"
            },
            "updated_at": "2024-01-07T11:49:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880035420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "Fair enough, thanks for the feedback\r\n \r\n> We already have that: `#gsub!`. (Not everyone likes that, though; having that standardized upstream -- like `#match?` would go some way.)\r\n\r\nPerhaps https://github.com/nvim-treesitter/nvim-treesitter/issues/3944 will help with this at some point",
            "created_at": "2024-01-07T11:56:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/26939#issuecomment-1880037228",
            "id": 1880037228,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26939",
            "node_id": "IC_kwDOAPphoM5wDxds",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880037228/reactions"
            },
            "updated_at": "2024-01-07T11:56:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880037228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13724985?v=4",
                "events_url": "https://api.github.com/users/tgross35/events{/privacy}",
                "followers_url": "https://api.github.com/users/tgross35/followers",
                "following_url": "https://api.github.com/users/tgross35/following{/other_user}",
                "gists_url": "https://api.github.com/users/tgross35/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tgross35",
                "id": 13724985,
                "login": "tgross35",
                "node_id": "MDQ6VXNlcjEzNzI0OTg1",
                "organizations_url": "https://api.github.com/users/tgross35/orgs",
                "received_events_url": "https://api.github.com/users/tgross35/received_events",
                "repos_url": "https://api.github.com/users/tgross35/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tgross35/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tgross35/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tgross35"
            }
        },
        {
            "author_association": "NONE",
            "body": "In lieu of this, does anyone have an idea for how to reliably extract the executable from a shebang in TS? I have tried various variants of this slightly messy grammar:\r\n\r\n```js\r\n    shebang: ($) =>\r\n      prec.left(\r\n        seq(\r\n          choice($.shebang_executable, field(\"unrecognized_shebang\", /#!.*/)),\r\n          optional($._newline),\r\n        ),\r\n      ),\r\n\r\n    shebang_executable: ($) =>\r\n      token.immediate(seq(\r\n        \"#!\",\r\n        /\\S*[/ ]/,\r\n        field(\"cmd\", /\\S+/),\r\n        /.*/,\r\n      )),\r\n```\r\n\r\nWhich is an attempt to extract the capture group`#!\\S*bin\\S*[/ ](?P<lang>\\S+).*`. I unfortunately cannot query any forms of\r\n\r\n```scheme\r\n(shebang_executable\r\n    cmd: _)\r\n```\r\n\r\nsince TS complains that `cmd` is an invalid field. And I can't make it a named node because you can't have nonterminal nodes within `token.immediate` (https://github.com/tree-sitter/tree-sitter/issues/474).\r\n\r\nMy fallback is to generate two different `injection.scm` files that use either `#gsub!`  or `@injection.shebang`, but it would be nice to be cross-platform somehow without a handwritten scanner.",
            "created_at": "2024-01-08T01:38:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/26939#issuecomment-1880278106",
            "id": 1880278106,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26939",
            "node_id": "IC_kwDOAPphoM5wEsRa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880278106/reactions"
            },
            "updated_at": "2024-01-08T01:39:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880278106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13724985?v=4",
                "events_url": "https://api.github.com/users/tgross35/events{/privacy}",
                "followers_url": "https://api.github.com/users/tgross35/followers",
                "following_url": "https://api.github.com/users/tgross35/following{/other_user}",
                "gists_url": "https://api.github.com/users/tgross35/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tgross35",
                "id": 13724985,
                "login": "tgross35",
                "node_id": "MDQ6VXNlcjEzNzI0OTg1",
                "organizations_url": "https://api.github.com/users/tgross35/orgs",
                "received_events_url": "https://api.github.com/users/tgross35/received_events",
                "repos_url": "https://api.github.com/users/tgross35/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tgross35/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tgross35/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tgross35"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26939/comments",
    "created_at": "2024-01-07T10:24:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26939/events",
    "html_url": "https://github.com/neovim/neovim/issues/26939",
    "id": 2069073324,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26939/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM57U42s",
    "number": 26939,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26939/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26939/timeline",
    "title": "Add `@injection.shebang` for setting the language in `injections.scm`",
    "updated_at": "2024-01-08T01:56:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26939",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13724985?v=4",
        "events_url": "https://api.github.com/users/tgross35/events{/privacy}",
        "followers_url": "https://api.github.com/users/tgross35/followers",
        "following_url": "https://api.github.com/users/tgross35/following{/other_user}",
        "gists_url": "https://api.github.com/users/tgross35/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tgross35",
        "id": 13724985,
        "login": "tgross35",
        "node_id": "MDQ6VXNlcjEzNzI0OTg1",
        "organizations_url": "https://api.github.com/users/tgross35/orgs",
        "received_events_url": "https://api.github.com/users/tgross35/received_events",
        "repos_url": "https://api.github.com/users/tgross35/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tgross35/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tgross35/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tgross35"
    }
}