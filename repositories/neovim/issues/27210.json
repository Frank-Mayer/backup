{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nI attempted to \"wrap\" a user-defined command like so:\r\n\r\n```lua\r\nvim.api.nvim_create_user_command('Test', 'echo \"test\"', {})\r\n\r\n-- Get a callable function to the command\r\nold = vim.cmd.Test\r\n\r\n-- Use it in the new definition\r\nvim.api.nvim_create_user_command('Test', function()\r\n    old()\r\n    vim.cmd('echo \"test 2\"')\r\nend, {})\r\n```\r\n\r\nSourcing the above and trying to execute `:Test` crashes neovim with a segmentation fault. Nothing is printed.\r\n\r\n### Steps to reproduce\r\n\r\nThe above works with `nvim --clean -u NORC`\r\n\r\nNote: run `tput rmcup` after neovim crashes to re-enable scrolling in the terminal.\r\n\r\n### Expected behavior\r\n\r\nIt would be nice if it were somehow possible to do this (I currently use a `BufNew` autocmd to modify the behaviour of the `:Man` plugin command before it executes), but at the very least, Neovim shouldn't ever segfault from inside Lua code.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nv0.10.0-dev-2150+ge68decab0\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nDebian sid\r\n\r\n### Terminal name/version\r\n\r\nwezterm 20240124-220416-642bfbb6\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nNightly GitHub release tarball",
    "closed_at": "2024-01-27T06:03:45Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You can get a crash backtrace by following this: https://neovim.io/doc/user/dev_tools.html#dev-tools-backtrace\r\n\r\n~~In my environment, the repro does not crash.~~ \r\nCan reproduce a crash. Looking at the stacktrace, it looks like a stack overflow (infinite loop).\r\n\r\n<details>\r\n<summary>Stacktrace (with `Debug` buildtype)</summary>\r\n\r\n```\r\n0   nvim                          \t       0x100183a40 execute_cmd + 20 (ex_docmd.c:1671)\r\n1   nvim                          \t       0x10002b5e0 nvim_cmd + 5264 (command.c:655)\r\n2   nvim                          \t       0x10000b660 nlua_api_nvim_cmd + 304 (lua_api_c_bindings.generated.c:1606)\r\n3   nvim                          \t       0x1004ef9dc lj_BC_FUNCC + 44\r\n4   nvim                          \t       0x100505df4 lua_pcall + 228\r\n5   nvim                          \t       0x100210e10 nlua_do_ucmd + 2052 (executor.c:2262)\r\n6   nvim                          \t       0x100416b74 do_ucmd + 340 (usercmd.c:1628)\r\n7   nvim                          \t       0x100184464 execute_cmd0 + 916 (ex_docmd.c:1646)\r\n8   nvim                          \t       0x100183d80 execute_cmd + 852 (ex_docmd.c:1735)\r\n9   nvim                          \t       0x10002b5e0 nvim_cmd + 5264 (command.c:655)\r\n10  nvim                          \t       0x10000b660 nlua_api_nvim_cmd + 304 (lua_api_c_bindings.generated.c:1606)\r\n11  nvim                          \t       0x1004ef9dc lj_BC_FUNCC + 44\r\n12  nvim                          \t       0x100505df4 lua_pcall + 228\r\n13  nvim                          \t       0x100210e10 nlua_do_ucmd + 2052 (executor.c:2262)\r\n14  nvim                          \t       0x100416b74 do_ucmd + 340 (usercmd.c:1628)\r\n15  nvim                          \t       0x100184464 execute_cmd0 + 916 (ex_docmd.c:1646)\r\n16  nvim                          \t       0x100183d80 execute_cmd + 852 (ex_docmd.c:1735)\r\n17  nvim                          \t       0x10002b5e0 nvim_cmd + 5264 (command.c:655)\r\n18  nvim                          \t       0x10000b660 nlua_api_nvim_cmd + 304 (lua_api_c_bindings.generated.c:1606)\r\n...\r\n(infinite loop, stack overflow)\r\n```\r\n\r\n\r\n</details>\r\n\r\nThere's also a typo: `vim.api_nvim_create...`",
            "created_at": "2024-01-26T10:16:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/27210#issuecomment-1911802287",
            "id": 1911802287,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27210",
            "node_id": "IC_kwDOAPphoM5x88mv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911802287/reactions"
            },
            "updated_at": "2024-01-26T10:34:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911802287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "Stack trace:\r\n\r\n```\r\n           PID: 19771 (nvim)\r\n           UID: 1001 (luna)\r\n           GID: 1001 (luna)\r\n        Signal: 11 (SEGV)\r\n     Timestamp: Fri 2024-01-26 11:25:00 CET (21s ago)\r\n  Command Line: nvim --embed --clean -u NORC\r\n    Executable: /usr/local/bin/nvim\r\n Control Group: /user.slice/user-1001.slice/user@1001.service/app.slice/app-gnome-org.wezfurlong.wezterm-4266.scope\r\n          Unit: user@1001.service\r\n     User Unit: app-gnome-org.wezfurlong.wezterm-4266.scope\r\n         Slice: user-1001.slice\r\n     Owner UID: 1001 (luna)\r\n       Boot ID: 2219671d451a4ed686cc33624fbaf1fd\r\n    Machine ID: 6a72ccf8d8fa4c67bd21e9b279d3e5e1\r\n      Hostname: mantis\r\n       Storage: /var/lib/systemd/coredump/core.nvim.1001.2219671d451a4ed686cc33624fbaf1fd.19771.1706264700000000.zst (present)\r\n  Size on Disk: 498.1K\r\n       Message: Process 19771 (nvim) of user 1001 dumped core.\r\n\r\n                Stack trace of thread 19771:\r\n                #0  0x000055d1ba3011f6 execute_cmd (nvim + 0x1761f6)\r\n                #1  0x000055d1ba242b95 nvim_cmd (nvim + 0xb7b95)\r\n                #2  0x000055d1ba22797a nlua_api_nvim_cmd (nvim + 0x9c97a)\r\n                #3  0x000055d1ba5220e6 lj_BC_FUNCC (nvim + 0x3970e6)\r\n                #4  0x000055d1ba50e416 lua_pcall (nvim + 0x383416)\r\n                #5  0x000055d1ba350c43 nlua_pcall (nvim + 0x1c5c43)\r\n                #6  0x000055d1ba35a28b nlua_do_ucmd (nvim + 0x1cf28b)\r\n                #7  0x000055d1ba481952 do_ucmd (nvim + 0x2f6952)\r\n                #8  0x000055d1ba301182 execute_cmd0 (nvim + 0x176182)\r\n                #9  0x000055d1ba301670 execute_cmd (nvim + 0x176670)\r\n                #10 0x000055d1ba242b95 nvim_cmd (nvim + 0xb7b95)\r\n                #11 0x000055d1ba22797a nlua_api_nvim_cmd (nvim + 0x9c97a)\r\n                #12 0x000055d1ba5220e6 lj_BC_FUNCC (nvim + 0x3970e6)\r\n                #13 0x000055d1ba50e416 lua_pcall (nvim + 0x383416)\r\n                #14 0x000055d1ba350c43 nlua_pcall (nvim + 0x1c5c43)\r\n                #15 0x000055d1ba35a28b nlua_do_ucmd (nvim + 0x1cf28b)\r\n                #16 0x000055d1ba481952 do_ucmd (nvim + 0x2f6952)\r\n                #17 0x000055d1ba301182 execute_cmd0 (nvim + 0x176182)\r\n                #18 0x000055d1ba301670 execute_cmd (nvim + 0x176670)\r\n                #19 0x000055d1ba242b95 nvim_cmd (nvim + 0xb7b95)\r\n                #20 0x000055d1ba22797a nlua_api_nvim_cmd (nvim + 0x9c97a)\r\n                #21 0x000055d1ba5220e6 lj_BC_FUNCC (nvim + 0x3970e6)\r\n                #22 0x000055d1ba50e416 lua_pcall (nvim + 0x383416)\r\n                #23 0x000055d1ba350c43 nlua_pcall (nvim + 0x1c5c43)\r\n                #24 0x000055d1ba35a28b nlua_do_ucmd (nvim + 0x1cf28b)\r\n                #25 0x000055d1ba481952 do_ucmd (nvim + 0x2f6952)\r\n                #26 0x000055d1ba301182 execute_cmd0 (nvim + 0x176182)\r\n                #27 0x000055d1ba301670 execute_cmd (nvim + 0x176670)\r\n                #28 0x000055d1ba242b95 nvim_cmd (nvim + 0xb7b95)\r\n                #29 0x000055d1ba22797a nlua_api_nvim_cmd (nvim + 0x9c97a)\r\n                #30 0x000055d1ba5220e6 lj_BC_FUNCC (nvim + 0x3970e6)\r\n                #31 0x000055d1ba50e416 lua_pcall (nvim + 0x383416)\r\n                #32 0x000055d1ba350c43 nlua_pcall (nvim + 0x1c5c43)\r\n                #33 0x000055d1ba35a28b nlua_do_ucmd (nvim + 0x1cf28b)\r\n                #34 0x000055d1ba481952 do_ucmd (nvim + 0x2f6952)\r\n                #35 0x000055d1ba301182 execute_cmd0 (nvim + 0x176182)\r\n                #36 0x000055d1ba301670 execute_cmd (nvim + 0x176670)\r\n                #37 0x000055d1ba242b95 nvim_cmd (nvim + 0xb7b95)\r\n                #38 0x000055d1ba22797a nlua_api_nvim_cmd (nvim + 0x9c97a)\r\n                #39 0x000055d1ba5220e6 lj_BC_FUNCC (nvim + 0x3970e6)\r\n                #40 0x000055d1ba50e416 lua_pcall (nvim + 0x383416)\r\n                #41 0x000055d1ba350c43 nlua_pcall (nvim + 0x1c5c43)\r\n                #42 0x000055d1ba35a28b nlua_do_ucmd (nvim + 0x1cf28b)\r\n                #43 0x000055d1ba481952 do_ucmd (nvim + 0x2f6952)\r\n                #44 0x000055d1ba301182 execute_cmd0 (nvim + 0x176182)\r\n                #45 0x000055d1ba301670 execute_cmd (nvim + 0x176670)\r\n                #46 0x000055d1ba242b95 nvim_cmd (nvim + 0xb7b95)\r\n                #47 0x000055d1ba22797a nlua_api_nvim_cmd (nvim + 0x9c97a)\r\n                #48 0x000055d1ba5220e6 lj_BC_FUNCC (nvim + 0x3970e6)\r\n                #49 0x000055d1ba50e416 lua_pcall (nvim + 0x383416)\r\n                #50 0x000055d1ba350c43 nlua_pcall (nvim + 0x1c5c43)\r\n                #51 0x000055d1ba35a28b nlua_do_ucmd (nvim + 0x1cf28b)\r\n                #52 0x000055d1ba481952 do_ucmd (nvim + 0x2f6952)\r\n                #53 0x000055d1ba301182 execute_cmd0 (nvim + 0x176182)\r\n                #54 0x000055d1ba301670 execute_cmd (nvim + 0x176670)\r\n                #55 0x000055d1ba242b95 nvim_cmd (nvim + 0xb7b95)\r\n                #56 0x000055d1ba22797a nlua_api_nvim_cmd (nvim + 0x9c97a)\r\n                #57 0x000055d1ba5220e6 lj_BC_FUNCC (nvim + 0x3970e6)\r\n                #58 0x000055d1ba50e416 lua_pcall (nvim + 0x383416)\r\n                #59 0x000055d1ba350c43 nlua_pcall (nvim + 0x1c5c43)\r\n                #60 0x000055d1ba35a28b nlua_do_ucmd (nvim + 0x1cf28b)\r\n                #61 0x000055d1ba481952 do_ucmd (nvim + 0x2f6952)\r\n                #62 0x000055d1ba301182 execute_cmd0 (nvim + 0x176182)\r\n                #63 0x000055d1ba301670 execute_cmd (nvim + 0x176670)\r\n\r\n                Stack trace of thread 19772:\r\n                #0  0x0000000000000000 n/a (n/a + 0x0)\r\n                ELF object binary architecture: AMD x86-64\r\n```\r\n\r\nAn infinite loop would suggest that `old` isn't dangling, but rather resolves to the new definition of `Test`, causing it to invoke itself?",
            "created_at": "2024-01-26T10:27:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/27210#issuecomment-1911816194",
            "id": 1911816194,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27210",
            "node_id": "IC_kwDOAPphoM5x9AAC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911816194/reactions"
            },
            "updated_at": "2024-01-26T10:27:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911816194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim.cmd.Test` never refers to the *previous* command. This is simply a wrapper to `nvim_cmd` or `nvim_exec2`, so it will always run the *currently defined* `:Test` user command, hence an infinite loop.\r\n\r\nBut it should never crash, an expected behavior would be something like:\r\n```vim\r\ncommand! Test   exec 'Test'\r\n\r\n:Test\r\nE169: Command too recursive\r\n```",
            "created_at": "2024-01-26T10:31:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/27210#issuecomment-1911822737",
            "id": 1911822737,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27210",
            "node_id": "IC_kwDOAPphoM5x9BmR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911822737/reactions"
            },
            "updated_at": "2024-01-26T10:36:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911822737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27210/comments",
    "created_at": "2024-01-26T10:06:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27210/events",
    "html_url": "https://github.com/neovim/neovim/issues/27210",
    "id": 2101935683,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27210/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 266,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 135,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-01-29T07:22:06Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM59SP5D",
    "number": 27210,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27210/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27210/timeline",
    "title": "nvim_cmd: stack overflow when user command invokes itself",
    "updated_at": "2024-01-27T06:03:46Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27210",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
        "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
        "followers_url": "https://api.github.com/users/LunarLambda/followers",
        "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
        "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LunarLambda",
        "id": 38919842,
        "login": "LunarLambda",
        "node_id": "MDQ6VXNlcjM4OTE5ODQy",
        "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
        "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
        "repos_url": "https://api.github.com/users/LunarLambda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LunarLambda"
    }
}