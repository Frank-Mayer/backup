{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nThis is embarrassing but I now understand that this is not a bug. Ignore this issue. Closing.\r\n\r\n~~`vim.diagnostic.count()` is intended to return a `Table with actually present severity values as keys (see |diagnostic-severity|) and integer counts as values.` In Lua, consecutive indices beginning at 1, such as vim.diagnostic.severity, will not behave as keys but instead indices into a list. As a consequence, `vim.diagnostic.count()` will occasionally return a list.~~\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```lua\r\n-- Run this file as `nvim --clean -u minimal.lua`\r\n\r\nfor name, url in pairs {\r\n  -- ADD PLUGINS _NECESSARY_ TO REPRODUCE THE ISSUE, e.g:\r\n  -- some_plugin = 'https://github.com/author/plugin.nvim'\r\n  lspconfig = 'https://github.com/neovim/nvim-lspconfig.git'\r\n} do\r\n  local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\r\n  if vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\r\n  end\r\n  vim.opt.runtimepath:append(install_path)\r\nend\r\n\r\n-- ADD INIT.LUA SETTINGS _NECESSARY_ FOR REPRODUCING THE ISSUE\r\nlocal lspconfig = require(\"lspconfig\")\r\nlspconfig.clangd.setup{}\r\n\r\n-- condensed from: https://github.com/neovim/nvim-lspconfig#suggested-configuration\r\nvim.api.nvim_create_autocmd('CursorMoved', {\r\n  group = vim.api.nvim_create_augroup('UserLspConfig', {}),\r\n  callback = function()\r\n    print(vim.inspect(vim.diagnostic.count()))\r\n  end\r\n}) \r\n```\r\n\r\nInstall Clangd (or any language server, it doesn't matter which as long as it is set up in this file). With this configuration and the appropriate language server, you should see the output of vim.diagnostic.count() in the messages area. If you create some errors in the file, you will eventually see both list and map outputs.\r\n\r\n### Expected behavior\r\n\r\n`vim.diagnostic.count()` will return a data structure that is consistently accessible.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-2809+g39a0e6bf3\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nno\r\n\r\n### Operating system/version\r\n\r\nLinux 6.8.2-arch2-1\r\n\r\n### Terminal name/version\r\n\r\nwezterm 20240203-110809-5046fc22\r\n\r\n### $TERM environment variable\r\n\r\nwezterm\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": "2024-04-06T18:09:01Z",
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28210/comments",
    "created_at": "2024-04-06T17:12:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28210/events",
    "html_url": "https://github.com/neovim/neovim/issues/28210",
    "id": 2229331859,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28210/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6E4OeT",
    "number": 28210,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28210/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28210/timeline",
    "title": "`vim.diagnostic.count` sometimes returns a list",
    "updated_at": "2024-04-06T21:45:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28210",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/59481467?v=4",
        "events_url": "https://api.github.com/users/mcauley-penney/events{/privacy}",
        "followers_url": "https://api.github.com/users/mcauley-penney/followers",
        "following_url": "https://api.github.com/users/mcauley-penney/following{/other_user}",
        "gists_url": "https://api.github.com/users/mcauley-penney/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mcauley-penney",
        "id": 59481467,
        "login": "mcauley-penney",
        "node_id": "MDQ6VXNlcjU5NDgxNDY3",
        "organizations_url": "https://api.github.com/users/mcauley-penney/orgs",
        "received_events_url": "https://api.github.com/users/mcauley-penney/received_events",
        "repos_url": "https://api.github.com/users/mcauley-penney/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mcauley-penney/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mcauley-penney/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mcauley-penney"
    }
}