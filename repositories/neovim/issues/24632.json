{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\n`vim.ui.select` is based on the inversion of control pattern and takes as an argument the callback that will handle the selected element. This is clearly a very useful function!\r\n\r\nBut I was thinking it would also be useful with the blocking variant, perhaps called `vim.ui.select_blocking`, that will instead return the selected element and return control to the calling function. I know we have `inputlist()`, with which I can do this:\r\n\r\n```lua\r\nlocal foo = function()\r\n  local list = {\r\n    \"one\",\r\n    \"two\",\r\n    \"three\",\r\n  }\r\n\r\n  local idx = vim.fn.inputlist(list)\r\n\r\n  print(\"You chose: \" .. list[idx])\r\nend\r\n```\r\n\r\nHowever, I would argue that `inputlist()` is quite restricted with regards to allowing modern UIs. With `vim.ui.select`, we are able to give the user quite a lot of flexibility. Both with regards to things like adding a formatter function and on allowing different implementations/backends (e.g. fzf, Telescope). Further, `inputlist()` really \"feels\" old fashioned. It does not work well with things like noice.nvim. I could go on, but I believe most of you understand what I'm talking about here.\r\n\r\n### Expected behavior\r\n\r\nI would like to do things like this:\r\n\r\n```lua\r\nlocal foo = function()\r\n  local list = {\r\n    \"one\",\r\n    \"two\",\r\n    \"three\",\r\n  }\r\n\r\n  local selection = vim.ui.select_blocking(list, {\r\n      prompt =  \"please select:\",\r\n      format_item =  function(i) return \"â†’ \" .. i end,\r\n  })\r\n\r\n  print(\"You chose: \" .. selection)\r\nend\r\n```\r\n\r\nWhere `select_blocking` can have a useful default implementation that can be overridden by users that want to use e.g. things like fzf, Telescope or similar as backends.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "By the way: If the community should agree that this would be useful, then I would also think the same \"logic\" applies for building the corresponding blocking variants of `vim.ui.input` and `vim.ui.confirm`. If so, I can open similar feature requests for these. But I'll hold back until we've had a discussion on the `select` behaviour first.",
            "created_at": "2023-08-09T17:52:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/24632#issuecomment-1671884752",
            "id": 1671884752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24632",
            "node_id": "IC_kwDOAPphoM5jpu_Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671884752/reactions"
            },
            "updated_at": "2023-08-09T17:52:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671884752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/998898?v=4",
                "events_url": "https://api.github.com/users/lervag/events{/privacy}",
                "followers_url": "https://api.github.com/users/lervag/followers",
                "following_url": "https://api.github.com/users/lervag/following{/other_user}",
                "gists_url": "https://api.github.com/users/lervag/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lervag",
                "id": 998898,
                "login": "lervag",
                "node_id": "MDQ6VXNlcjk5ODg5OA==",
                "organizations_url": "https://api.github.com/users/lervag/orgs",
                "received_events_url": "https://api.github.com/users/lervag/received_events",
                "repos_url": "https://api.github.com/users/lervag/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lervag/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lervag/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lervag"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think that could be done with `sync = true` keyword (or omitted `on_choice` function?), so no need for separate functions. (Of course, whether the overriding UIs respect that is another question entirely...)",
            "created_at": "2023-08-09T17:56:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/24632#issuecomment-1671890720",
            "id": 1671890720,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24632",
            "node_id": "IC_kwDOAPphoM5jpwcg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671890720/reactions"
            },
            "updated_at": "2023-08-09T17:58:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671890720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Or luv style where omitting a callback infers sync.",
            "created_at": "2023-08-09T18:06:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/24632#issuecomment-1671902815",
            "id": 1671902815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24632",
            "node_id": "IC_kwDOAPphoM5jpzZf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671902815/reactions"
            },
            "updated_at": "2023-08-09T18:06:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671902815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24632/comments",
    "created_at": "2023-08-09T17:39:56Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24632/events",
    "html_url": "https://github.com/neovim/neovim/issues/24632",
    "id": 1843730827,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24632/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5t5RmL",
    "number": 24632,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24632/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24632/timeline",
    "title": "Add \"blocking\" version of vim.ui.select that yields the result similar to inputlist()",
    "updated_at": "2023-08-09T18:56:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24632",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/998898?v=4",
        "events_url": "https://api.github.com/users/lervag/events{/privacy}",
        "followers_url": "https://api.github.com/users/lervag/followers",
        "following_url": "https://api.github.com/users/lervag/following{/other_user}",
        "gists_url": "https://api.github.com/users/lervag/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lervag",
        "id": 998898,
        "login": "lervag",
        "node_id": "MDQ6VXNlcjk5ODg5OA==",
        "organizations_url": "https://api.github.com/users/lervag/orgs",
        "received_events_url": "https://api.github.com/users/lervag/received_events",
        "repos_url": "https://api.github.com/users/lervag/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lervag/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lervag/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lervag"
    }
}