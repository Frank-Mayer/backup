{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hi, I might speak for many when I say that package managers for the vim plugins are not like awesome.\n\nis this already been considered, something like nvpm (neovim package manager)\n\nwould someone wanna join me/start  in this task \n",
    "closed_at": "2022-11-23T11:34:54Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "As far as I know there is no task, the current focus is on refactoring Vim. (See the strechgoals on the bountysource page.)\n\nThere is not even the new plugin api yet so there is no way we can decide how a package manager should manage packages.\n",
            "created_at": "2014-03-02T00:42:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-36442020",
            "id": 36442020,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDQyMDIw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36442020/reactions"
            },
            "updated_at": "2014-03-02T00:42:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36442020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1284808?v=4",
                "events_url": "https://api.github.com/users/clentfort/events{/privacy}",
                "followers_url": "https://api.github.com/users/clentfort/followers",
                "following_url": "https://api.github.com/users/clentfort/following{/other_user}",
                "gists_url": "https://api.github.com/users/clentfort/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clentfort",
                "id": 1284808,
                "login": "clentfort",
                "node_id": "MDQ6VXNlcjEyODQ4MDg=",
                "organizations_url": "https://api.github.com/users/clentfort/orgs",
                "received_events_url": "https://api.github.com/users/clentfort/received_events",
                "repos_url": "https://api.github.com/users/clentfort/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clentfort/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clentfort/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clentfort"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "https://bitbucket.org/vimcommunity/vim-pi\n\nPlugin package information is important than package manager.\nYou should check this repository.\n",
            "created_at": "2014-03-02T13:07:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-36453691",
            "id": 36453691,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDUzNjkx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36453691/reactions"
            },
            "updated_at": "2014-03-02T13:07:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/36453691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We reopen this when it's  possible to use the new architecture\n",
            "created_at": "2014-04-04T21:15:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-39612282",
            "id": 39612282,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjEyMjgy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39612282/reactions"
            },
            "updated_at": "2014-04-04T21:15:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/39612282",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "NONE",
            "body": "It will be nice to have plugin repository like RubyGems or NPM. It will simplify installing and managing plugins and their versions (other than GitHub).\n",
            "created_at": "2014-05-03T17:44:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-42111521",
            "id": 42111521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTExNTIx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42111521/reactions"
            },
            "updated_at": "2014-05-03T17:44:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42111521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4",
                "events_url": "https://api.github.com/users/hauleth/events{/privacy}",
                "followers_url": "https://api.github.com/users/hauleth/followers",
                "following_url": "https://api.github.com/users/hauleth/following{/other_user}",
                "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hauleth",
                "id": 291639,
                "login": "hauleth",
                "node_id": "MDQ6VXNlcjI5MTYzOQ==",
                "organizations_url": "https://api.github.com/users/hauleth/orgs",
                "received_events_url": "https://api.github.com/users/hauleth/received_events",
                "repos_url": "https://api.github.com/users/hauleth/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hauleth"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/rstacruz/vimbower suggests an interesting strategy for Vim plugins: use an existing, ecosystem-agnostic package specification, bower.\n\nIf the [package format](http://bower.io/docs/creating-packages/#bowerjson) serves all conceivable requirements, then many other problems are also solved:\n- registration: http://bower.io/docs/creating-packages/#register\n- hosting: packages can be hosted anywhere as a git repo\n  - this means the only step for existing Vim plugins is to register--they don't need to move to a centralized host\n- it supports pulling in non-Vimscript dependencies \n- maintenance of the package repository is offloaded to a much broader \"market\": we can piggyback on their infrastructure\n\nDisadvantages:\n- requires npm\n\nSee https://github.com/rstacruz/vimbower for how bower can work for Vim plugins.\n",
            "created_at": "2014-11-15T17:16:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63179916",
            "id": 63179916,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTc5OTE2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63179916/reactions"
            },
            "updated_at": "2014-11-15T17:19:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63179916",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Don't know if possible architectures for package management have been discussed somewhere earlier. In any case, my two pence:\n\nWhat about reusing not just an existing package-spec format, but existing package managers themselves? I mean, we could:\n- Define a common interface for package managers via defining a set of commands (:PluginSearch, :PluginUpdate, etc), like most vim packager managers already do.\n- Implement those commands via providers. This is, we would have an adapter transforming nvim package manager commands into native package manager commands, for each supported native pm.\n  Then, all logic about dependencies/building/etc. would be already there for us.\n- Then, user would install the adapter of his choice, and his packages would get installed by the pm he is used to, and he already knows.\n\nThat would allow:\n- for us, to just have to write an adapter for each supported native package manager. These would probably be very thin and easy to write.\n- for users, to keep using the pm of their choice. They could use pm from within nvim, by above defined commands, or externally to nvim, normally using their pm of choice from the command line.\n- for plugin authors, to publish their plugins for a variety of package managers.\n\nI think this would maximize user happiness and would keep ortogonality, not reinventing the wheel.\nOn the other hand, this would put more burden on plugin author's shoulders, as they would have to choose which/how-many native package managers to support.\n\nMaybe a mixed approach is possible: Use the above approach, but have a common spec format for simple viml plugins that only need dependencies-management/copying-files-to-some-place, so that this common format is understood by all adapters. That way, authors of simple viml plugins would just have to provide one spec to be automatically supported by all supported native package managers.\n\nWell, what do you think?\n",
            "created_at": "2014-11-15T18:35:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63182845",
            "id": 63182845,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTgyODQ1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63182845/reactions"
            },
            "updated_at": "2014-11-15T18:35:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63182845",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/135757?v=4",
                "events_url": "https://api.github.com/users/elmart/events{/privacy}",
                "followers_url": "https://api.github.com/users/elmart/followers",
                "following_url": "https://api.github.com/users/elmart/following{/other_user}",
                "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elmart",
                "id": 135757,
                "login": "elmart",
                "node_id": "MDQ6VXNlcjEzNTc1Nw==",
                "organizations_url": "https://api.github.com/users/elmart/orgs",
                "received_events_url": "https://api.github.com/users/elmart/received_events",
                "repos_url": "https://api.github.com/users/elmart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elmart"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Define a common interface for package managers via defining a set of commands (:PluginSearch, :PluginUpdate, etc), like most vim packager managers already do\n\nDefinitely worth exploring.\n\n> Implement those commands via providers\n> ...\n> for us, to just have to write an adapter for each supported native package manager. \n\nI strongly recommend leaving it up to the package managers to conform to the Neovim plugin manager interface. I don't want to be in the business of maintaining a bridge to things that don't want to be bridged-to.\n\n> for plugin authors, to publish their plugins for a variety of package managers.\n\nI don't understand why this would be needed. Either they can do nothing, and users can point to their Github repo like today; or they can add a bower.json file and register on bower.\n\n> this would put more burden on plugin author's shoulders\n\nOne could say a bower.json file is an extra burden, but a spec file is the _minimum_ possible cost for any dependency management solution, so it's not optional. Anything beyond that is a non-starter, I predict.\n\n---\n\n@MarcWeber @ZyX-I @Shougo What do you think about this idea: \n- work with the bower project to register all vim-pi plugins on bower\n- retire vim-pi\n",
            "created_at": "2014-11-15T18:50:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63183395",
            "id": 63183395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTgzMzk1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63183395/reactions"
            },
            "updated_at": "2014-11-15T18:50:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63183395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "While working on #1454 something crossed my mind: Developers usually force themselves to work with vimscript because they want plugins to be accessible to most vim users. Part of the problem is that many users don't have technical knowledge to compile vim against python, ruby, etc. so these interpreters are not always available.\n\nNeovim can avoid this by bundling install scripts that create home-private installations of plugin hosts. For example, when a [`Require('python')`](https://github.com/tarruda/neovim/blob/2926f9cb5abf42ee3f3e05f4b82666ef8455f8fd/runtime/autoload/rpc/host.vim#L20-L30) call fails to find a python host installation, it can offer the user to download python sources and build inside the user home directory, e.g.: `Plugin X requires a python host but it is not available, would you like to download/install it to ~/.nvim-host-prefix?` where `~/.nvim-host-prefix` is a private location where hosts can be installed  and found by nvim, even if it binaries are not in the PATH.\n\nThis would make it possible for developers create plugins in their language of choice and have some good assurance that users will be able to run it.\n",
            "created_at": "2014-11-15T19:30:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63185013",
            "id": 63185013,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTg1MDEz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63185013/reactions"
            },
            "updated_at": "2014-11-15T19:30:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63185013",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That's a good idea. But, wouldn't the dependency on a given host be already catched by the plugin-manager? I mean, a python plugin should start by specifying it requires python, and it would be the work of plugin-manager to install it if not present, as any other dependency. Woudn't it?\n",
            "created_at": "2014-11-15T19:36:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63185218",
            "id": 63185218,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTg1MjE4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63185218/reactions"
            },
            "updated_at": "2014-11-15T19:36:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63185218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/135757?v=4",
                "events_url": "https://api.github.com/users/elmart/events{/privacy}",
                "followers_url": "https://api.github.com/users/elmart/followers",
                "following_url": "https://api.github.com/users/elmart/following{/other_user}",
                "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elmart",
                "id": 135757,
                "login": "elmart",
                "node_id": "MDQ6VXNlcjEzNTc1Nw==",
                "organizations_url": "https://api.github.com/users/elmart/orgs",
                "received_events_url": "https://api.github.com/users/elmart/received_events",
                "repos_url": "https://api.github.com/users/elmart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elmart"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> don't have technical knowledge to compile vim against python, ruby, etc. so these interpreters are not always available.\n> ...\n> Neovim can avoid this by bundling install scripts \n\nWell, Neovim avoids the first thing by not requiring compilation against a specific python version. That's a significant relief to users and plugin authors.\n\nBut the second thing is not the first thing. Technical ability required to install python is less than that required to compile Vim against the correct python version/architecture. If a user can install Neovim, then a user can install python.\n\nManaging python, ruby, etc. installations will be a quagmire:\n- we will need to keep it up to date\n- if user executes `pip install foo` instead of `~/.nvim-host-prefix/pip install foo`, what happens? \n- users will report issues to Neovim instead of python, or will just blame Neovim for being broken\n\nI will say however that Sublime was able to get away with it: it ships with a private python. But it chose python as its extension language. It does not also ship with ruby, go, etc.\n\nWe chose vimscript and luajit, and this is more well-mannered IMO: both are intended to be embedded, the footprint is much smaller, and there is less conflict with system administration. We should also do what we can to make it easy for other runtimes to interact with Neovim, but managing the installation of those other runtimes is a separate, more cumbersome task.\n",
            "created_at": "2014-11-15T20:01:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63187469",
            "id": 63187469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTg3NDY5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63187469/reactions"
            },
            "updated_at": "2014-11-15T20:06:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63187469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Developers usually force themselves to work with vimscript because they want plugins to be accessible to most vim users\n\nMaking lua a first-class citizen in Neovim will be a 10x improvement in the options available to developers who want an _It Just Works_ cross-platform experience for plugin users. Before also trying to support the universe of other possibilities, I think we should see how far we can get with lua.\n",
            "created_at": "2014-11-15T20:09:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63188344",
            "id": 63188344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTg4MzQ0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63188344/reactions"
            },
            "updated_at": "2014-11-15T20:09:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63188344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What do you think about this idea:\n>    work with the bower project to register all vim-pi plugins on bower\n>    retire vim-pi\n\nThanks.  I think we need define standard plugin information.\nBut it is not bower.json.  It is bower specific.\n\nPlugin central repository is needed.  Because, the plugins may be maintained.\n",
            "created_at": "2014-11-15T23:43:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63197838",
            "id": 63197838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTk3ODM4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63197838/reactions"
            },
            "updated_at": "2014-11-15T23:43:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63197838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Making lua a first-class citizen in Neovim will be a 10x improvement in the options available to developers who want an It Just Works cross-platform experience for plugin users. Before also trying to support the universe of other possibilities, I think we should see how far we can get with lua.\n\nI agree with you.  So I think neovim lua standard library is important.\n",
            "created_at": "2014-11-15T23:51:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63198030",
            "id": 63198030,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTk4MDMw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63198030/reactions"
            },
            "updated_at": "2014-11-15T23:51:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63198030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That's a good idea. But, wouldn't the dependency on a given host be already catched by the plugin-manager? I mean, a python plugin should start by specifying it requires python, and it would be the work of plugin-manager to install it if not present, as any other dependency. Woudn't it?\n\nyes, the host install recipe would belong in a package manager\n",
            "created_at": "2014-11-16T00:02:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63198355",
            "id": 63198355,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTk4MzU1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63198355/reactions"
            },
            "updated_at": "2014-11-16T00:02:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63198355",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For what is worth, I agree with @Shougo about the need of establishing a package specification which is not tied to any particular service (like bower.io). A community maintained metadata repo like vim-pi is really the best idea there (regardless of the convenience such services might have).\n\nNeovim could lead the way on the usage of such a repository by providing support for it out of the box (both in a built-in package manager, and as a way to register plugins to the repository). This doesn't mean I believe that repository should be managed by the neovim project, of course.\n\nOn a different topic: I think a common interface for plugin managers is _way_ too noncommittal. Most plugin managers do basically the same thing at the core (inject bundles into the runtime path), and differences are mostly cosmetic (see, for example, the differences in the commands provided by Vundle, NeoBundle and vim-plug, which are possibly the most commonly used). If it is possible to define such an interface, I believe it is also possible to create a default plugin that implements it.\n",
            "created_at": "2014-11-16T00:10:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63198576",
            "id": 63198576,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTk4NTc2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63198576/reactions"
            },
            "updated_at": "2014-11-16T00:10:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63198576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Making lua a first-class citizen in Neovim will be a 10x improvement in the options available to developers who want an It Just Works cross-platform experience for plugin users. Before also trying to support the universe of other possibilities, I think we should see how far we can get with lua.\n\nThis is also my dream, to be able to script Neovim with a Lua(JIT) interpreter (which is always available and ran internally). The ability for other plugins systems over msgpack-rpc is just icing on the cake for me personally.\n",
            "created_at": "2014-11-16T13:50:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63219541",
            "id": 63219541,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjE5NTQx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63219541/reactions"
            },
            "updated_at": "2014-11-16T13:50:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63219541",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I do not like bower variant:\n\n1.\n\n```\n> hosting: packages can be hosted anywhere as a git repo \n\nGit (well, also subversion). VAM supports mercurial, git, bzr, darcs and almost any archive format. So does pip BTW.\n```\n1. Bower is based on node.js.\n2. I have not found a way to run hooks on update or on install, yet some plugins require this.\n3. Bower puts too much requirements on plugins that will be registered. I would not want to maintain plugin forks just to make bower happy, it is enough that I have to deduce where plugin should be downloaded from and somehow determine dependencies and hooks.\n\nIf you consider the list of requirements to plugin manager I once posted to vim-dev then you will see that currently vim-pi _new_ format is missing the ability to specify dependency versions, but otherwise is fine (except that it is the format without database or any plugin managers that support it). But what is needed is a new plugin manager, set of moderators populating the database with what cannot be deduced automatically and some advertisement that aims at helping moderators by making developers adopt new format. It would be also good to have something better then `vim.org`.\n",
            "created_at": "2014-11-16T17:24:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63228549",
            "id": 63228549,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjI4NTQ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63228549/reactions"
            },
            "updated_at": "2014-11-16T17:24:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63228549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "why not use git/hg urls as package identifiers? Whats the benefit of involving a centralized server?\n",
            "created_at": "2014-11-16T18:44:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63232265",
            "id": 63232265,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjMyMjY1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63232265/reactions"
            },
            "updated_at": "2014-11-16T18:44:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63232265",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It would be also good to have something better then vim.org.\n\nMaybe http://vimawesome.com/ could be used/extended somehow? Its source is on Github.\n",
            "created_at": "2014-11-16T19:20:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63233924",
            "id": 63233924,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjMzOTI0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63233924/reactions"
            },
            "updated_at": "2014-11-16T19:20:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63233924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "On November 16, 2014 9:45:03 PM EAT, Thiago de Arruda notifications@github.com wrote:\n\n> why not use git/hg urls as package identifiers? Whats the benefit of\n> involving a centralized server?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/neovim/neovim/issues/247#issuecomment-63232265\n1. Plugin author refuses to put necessary metainformation in his repository (or is effectively dead: you have no ways to contact him). Your actions without centralized server?\n2. Plugin author thinks that fossil is the best VCS ever. Or that he needs no VCS.\n3. Plugin author has moved his plugin from github to bitbucket or vice versa. Without plugin identifiers this action makes all the dependency specifications effectively useless.\n4. There is more then one compatible fork of the plugin. Though I have not included this in the list of requirements that should be satisfied by the plugin manager user may only prefer one fork over the other without dependency system or with an abstract names in dependencies in place of URLs.\n5. User wants to search for the plugins. This is not possible without this server.\n",
            "created_at": "2014-11-16T20:22:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63237043",
            "id": 63237043,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjM3MDQz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63237043/reactions"
            },
            "updated_at": "2014-11-16T20:22:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63237043",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "NONE",
            "body": "> 1. Plugin author refuses to put necessary metainformation in his repository (or is effectively dead: you have no ways to contact him). Your actions without centralized server?\n\nSame as with centralized server. Don't do anything and ask people to fork.\n\n> 2. Plugin author thinks that fossil is the best VCS ever. Or that he needs no VCS.\n\nIn this case it's his own problem how to make his package available. You need some kind of publishing software anyway, and git is as good as any.\n\n> 3. Plugin author has moved his plugin from github to bitbucket or vice versa. Without plugin identifiers this action makes all the dependency specifications effectively useless.\n\nShe will make link from her github repository to a bitbucket one. Maybe make a warning of some kind which would be displayed every time package installs. Such deprecation message might be supported by a package manager itself.\n\n> 4. There is more then one compatible fork of the plugin.\n\nNo idea.\n\n> 5. User wants to search for the plugins. This is not possible without this server.\n\n[Yes, it is](https://www.google.com/). Judging by npmjs.org, people usually search for stuff in general-purpose search engines even if centralized server is present.\n\n---\n\nAnyway, hosting packages using git urls is a good idea. Only real disadvantage is that people are all going to be hosting stuff on github, and if it goes down one day... that won't be a very good day indeed.\n",
            "created_at": "2014-11-16T21:02:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63238994",
            "id": 63238994,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjM4OTk0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63238994/reactions"
            },
            "updated_at": "2014-11-16T21:02:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63238994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/999113?v=4",
                "events_url": "https://api.github.com/users/rlidwka/events{/privacy}",
                "followers_url": "https://api.github.com/users/rlidwka/followers",
                "following_url": "https://api.github.com/users/rlidwka/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlidwka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rlidwka",
                "id": 999113,
                "login": "rlidwka",
                "node_id": "MDQ6VXNlcjk5OTExMw==",
                "organizations_url": "https://api.github.com/users/rlidwka/orgs",
                "received_events_url": "https://api.github.com/users/rlidwka/received_events",
                "repos_url": "https://api.github.com/users/rlidwka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rlidwka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlidwka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rlidwka"
            }
        },
        {
            "author_association": "NONE",
            "body": "npmjs.org is centralized server for NPM. Main disadvantage of using GitHub as package provider is 'git push --force' which allow to override tags. This is the reason why more and more frontend libraries is abandoning Bower In favour of NPM. I also think that using centralized server is better idea than using GitHub. \n\nDnia 16 lis 2014 o godz. 22:02 Alex Kocharin notifications@github.com napisał(a):\n\n> Plugin author refuses to put necessary metainformation in his repository (or is effectively dead: you have no ways to contact him). Your actions without centralized server?\n> Same as with centralized server. Don't do anything and ask people to fork.\n> \n> Plugin author thinks that fossil is the best VCS ever. Or that he needs no VCS.\n> In this case it's his own problem how to make his package available. You need some kind of publishing software anyway, and git is as good as any.\n> \n> Plugin author has moved his plugin from github to bitbucket or vice versa. Without plugin identifiers this action makes all the dependency specifications effectively useless.\n> She will make link from her github repository to a bitbucket one. Maybe make a warning of some kind which would be displayed every time package installs. Such deprecation message might be supported by a package manager itself.\n> \n> There is more then one compatible fork of the plugin.\n> No idea.\n> \n> User wants to search for the plugins. This is not possible without this server.\n> Yes, it is. Judging by npmjs.org, people usually search for stuff in general-purpose search engines even if centralized server is present.\n> \n> Anyway, hosting packages using git urls is a good idea. Only real disadvantage is that people are all going to be hosting stuff on github, and if it goes down one day... that won't be a very good day indeed.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
            "created_at": "2014-11-16T21:30:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63240432",
            "id": 63240432,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQwNDMy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63240432/reactions"
            },
            "updated_at": "2014-11-16T21:30:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63240432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4",
                "events_url": "https://api.github.com/users/hauleth/events{/privacy}",
                "followers_url": "https://api.github.com/users/hauleth/followers",
                "following_url": "https://api.github.com/users/hauleth/following{/other_user}",
                "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hauleth",
                "id": 291639,
                "login": "hauleth",
                "node_id": "MDQ6VXNlcjI5MTYzOQ==",
                "organizations_url": "https://api.github.com/users/hauleth/orgs",
                "received_events_url": "https://api.github.com/users/hauleth/received_events",
                "repos_url": "https://api.github.com/users/hauleth/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hauleth"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "On November 17, 2014 12:02:12 AM EAT, Alex Kocharin notifications@github.com wrote:\n\n> > 1. Plugin author refuses to put necessary metainformation in his\n> >    repository (or is effectively dead: you have no ways to contact him).\n> >    Your actions without centralized server?\n> \n> Same as with centralized server. Don't do anything and ask people to\n> fork.\n\nWhich is a hell lot of work compared to stuffing metadata separately from a centralized server. And this is not the \"same\" at all. Vim-pi is not forking anything, it just provides missing metadata.\n\n> > 1. Plugin author thinks that fossil is the best VCS ever. Or that he\n> >    needs no VCS.\n> \n> In this case it's his own problem how to make his package available.\n> You need some kind of publishing software anyway, and git is as good as\n> any.\n\nPlugin manager must adapt to the world, not the opposite. If you are creating a new editor you may dictate the rules, but if you go this way given a number of existing plugins which do not follow this rules then you are losing users.\n\n> > 1. Plugin author has moved his plugin from github to bitbucket or\n> >    vice versa. Without plugin identifiers this action makes all the\n> >    dependency specifications effectively useless.\n> \n> She will make link from her github repository to a bitbucket one. Maybe\n> make a warning of some kind which would be displayed every time package\n> installs. Such deprecation message might be supported by a package\n> manager itself.\n\nSuper! In place of a manager that just works you suggest spamming warnings and requiring actions for no real reason. It would be OK if plugin was doing rebranding (because this action usually touches API identifiers like function names), but not when author just moved to a different hosting.\n\n> > 1. There is more then one compatible fork of the plugin.\n> \n> No idea.\n> \n> > 1. User wants to search for the plugins. This is not possible without\n> >    this server.\n> \n> [Yes, it is](https://www.google.com/). Judging by npmjs.org, people\n> usually search for stuff in general-purpose search engines even if\n> centralized server is present.\n\nGeneral-purpose search engines tend to find loads of unrelated things if plugin author has chosen poor (in terms of SEO) name or if user issued a wrong wording. Google custom search/Google+site: on a centralized server is better.\n\n> ---\n> \n> Anyway, hosting packages using git urls is a good idea. Only real\n> disadvantage is that people are all going to be hosting stuff on\n> github, and if it goes down one day... that won't be a very good day\n> indeed.\n\nIt is poor idea. Ask yourself why it is so poorly adopted among other package managers.\n\nAlso note that among other issues there is another: once you say that X (package name) means specific git URL you no longer can use mirrors: or users will constantly complain about it not installing latest changes.\n\nYou will also have troubles working in an isolated environment without a centralised server (of course, it should have open and well-defined specifications) and with git URLs in place of archives support.\n\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/neovim/neovim/issues/247#issuecomment-63238994\n",
            "created_at": "2014-11-16T21:40:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63240838",
            "id": 63240838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQwODM4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63240838/reactions"
            },
            "updated_at": "2014-11-16T21:40:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63240838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And regarding searches: one of the very common requests for VAM was adding a search _within Vim_. Waiting for your Google-fu to show how you are going to perform this, especially given Google policy on the matter and that you are expected to display only installable results, and be as complete as possible. Luarocks, pip and any system package manager can do this.\n\nAlso a point from the [cargo FAQ](http://doc.crates.io/faq.html#why-build-a-package-registry-rather-than-use-github-as-a-registry?): using centralised repository is faster then using github.\n\nFull QA for reference:\n\n> **Why build a package registry rather than use Github as a registry?**\n> \n> We think that it's very important to support multiple ways to download packages, including downloading from Github and copying packages into your project itself.\n> \n> That said, we think that a central registry offers a number of important benefits, and will likely become the primary way that people download packages in Cargo.\n> \n> For precedent, both Node.js's npm and Ruby's bundler support both a central registry model as well as a Git-based model, and most packages are downloaded through the registry in those ecosystems, with an important minority of packages making use of git-based packages.\n> \n> Some of the advantages that make a central registry popular in other languages include:\n> - Discoverability. A central registry provides an easy place to look for existing packages. Combined with tagging, this also makes it possible for a registry to provide ecosystem-wide information, such as a list of the most popular or most-depended-on packages.\n> - Speed. A central registry makes it possible to easily fetch just the metadata for packages quickly and efficiently, and then to efficiently download just the published package, and not other bloat that happens to exist in the repository. This adds up to a significant improvement in the speed of dependency resolution and fetching. As dependency graphs scale up, downloading all of the git repositories bogs down fast. Also remember that not everybody has a high-speed, low-latency Internet connection.\n",
            "created_at": "2014-11-16T22:01:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63241694",
            "id": 63241694,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQxNjk0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63241694/reactions"
            },
            "updated_at": "2014-11-16T22:01:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63241694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It is poor idea. Ask yourself why it is so poorly adopted among other package managers.\n\nIt has been adopted with a good measure of success on the Go programming language. [Component.io](http://component.github.io/) is another example which it is limited to github, features a fast package index(though package names are just aliases to github urls.\n\nPersonally I greatly prefer decentralized systems like the above examples, though I'm ok with centralized services if registering/publishing packages is purely optional(npm is a great example because one can use git urls whenever a package name is expected)\n",
            "created_at": "2014-11-16T22:01:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63241697",
            "id": 63241697,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQxNjk3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63241697/reactions"
            },
            "updated_at": "2014-11-16T22:01:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63241697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It has been adopted with a good measure of success on the Go programming language\n\n:+1: \n",
            "created_at": "2014-11-16T22:03:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63241779",
            "id": 63241779,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQxNzc5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63241779/reactions"
            },
            "updated_at": "2014-11-16T22:03:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63241779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3374574?v=4",
                "events_url": "https://api.github.com/users/myitcv/events{/privacy}",
                "followers_url": "https://api.github.com/users/myitcv/followers",
                "following_url": "https://api.github.com/users/myitcv/following{/other_user}",
                "gists_url": "https://api.github.com/users/myitcv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/myitcv",
                "id": 3374574,
                "login": "myitcv",
                "node_id": "MDQ6VXNlcjMzNzQ1NzQ=",
                "organizations_url": "https://api.github.com/users/myitcv/orgs",
                "received_events_url": "https://api.github.com/users/myitcv/received_events",
                "repos_url": "https://api.github.com/users/myitcv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/myitcv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/myitcv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/myitcv"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Personally I greatly prefer decentralized systems like the above examples, though I'm ok with centralized services if registering/publishing packages is purely optional(npm is a great example because one can use git urls whenever a package name is expected)\n\nIt is strange that I have not listed ability to use git URLs in [my list of requirements](https://groups.google.com/d/msg/vim_use/xtNFTzDEZ3Y/lPqZ0MiBfhcJ). This would be another expected feature, also widely found (`pip` has this ability as well, and almost any current Vim plugin manager).\n",
            "created_at": "2014-11-16T22:09:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63242007",
            "id": 63242007,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQyMDA3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63242007/reactions"
            },
            "updated_at": "2014-11-16T22:09:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63242007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "NONE",
            "body": "> For precedent, both Node.js's npm and Ruby's bundler support both a central registry model as well as a Git-based model, and most packages are downloaded through the registry in those ecosystems\n\nI can't say about bundler, but I'm sure about npm. The only reason why packages are downloaded through registry is because git support in npm is crap. There is no versioning support, it requires git binary to be installed, etc., etc.\n\nComponent is indeed a better example for a package manager that works with git.\n\nPS: I wonder if there is some kind of distributed meta information about github repos. Like if you change from github to bitbucket, it'll be available the same way. \n",
            "created_at": "2014-11-16T22:15:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63242258",
            "id": 63242258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQyMjU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63242258/reactions"
            },
            "updated_at": "2014-11-16T22:15:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63242258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/999113?v=4",
                "events_url": "https://api.github.com/users/rlidwka/events{/privacy}",
                "followers_url": "https://api.github.com/users/rlidwka/followers",
                "following_url": "https://api.github.com/users/rlidwka/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlidwka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rlidwka",
                "id": 999113,
                "login": "rlidwka",
                "node_id": "MDQ6VXNlcjk5OTExMw==",
                "organizations_url": "https://api.github.com/users/rlidwka/orgs",
                "received_events_url": "https://api.github.com/users/rlidwka/received_events",
                "repos_url": "https://api.github.com/users/rlidwka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rlidwka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlidwka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rlidwka"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It has been adopted with a good measure of success on the Go programming language. Component.io is another example which it is limited to github, features a fast package index(though package names are just aliases to github urls.\n\nPip, cargo, gem, luarocks, cpan, npm, … They are all not git-bound or completely decentralized, though a number of them supports git URLs.\n",
            "created_at": "2014-11-16T22:17:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63242342",
            "id": 63242342,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQyMzQy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63242342/reactions"
            },
            "updated_at": "2014-11-16T22:17:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63242342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> PS: I wonder if there is some kind of distributed meta information about github repos. Like if you change from github to bitbucket, it'll be available the same way.\n\nI got curious about that and went looking for how component.io does it. It turns out they use a [crawler](https://github.com/componentjs/guide/blob/master/creating-components/publishing.md#crawling) for building an index, which is a nicer altenative to requiring packages to be explicitly registered and published, not to mention it seamless integrates with the commit/push workflow.\n",
            "created_at": "2014-11-16T22:48:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63243473",
            "id": 63243473,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQzNDcz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63243473/reactions"
            },
            "updated_at": "2014-11-16T22:48:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63243473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think that centralized plugin index + option to add URL to repo/tarball will be nice solution (just like NPM, Bundler, etc.)\n",
            "created_at": "2014-11-19T13:01:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-63636039",
            "id": 63636039,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNjM2MDM5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63636039/reactions"
            },
            "updated_at": "2014-11-19T13:01:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63636039",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4",
                "events_url": "https://api.github.com/users/hauleth/events{/privacy}",
                "followers_url": "https://api.github.com/users/hauleth/followers",
                "following_url": "https://api.github.com/users/hauleth/following{/other_user}",
                "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hauleth",
                "id": 291639,
                "login": "hauleth",
                "node_id": "MDQ6VXNlcjI5MTYzOQ==",
                "organizations_url": "https://api.github.com/users/hauleth/orgs",
                "received_events_url": "https://api.github.com/users/hauleth/received_events",
                "repos_url": "https://api.github.com/users/hauleth/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hauleth"
            }
        },
        {
            "author_association": "NONE",
            "body": "Now that the lua plugin implementation is a little further along, are there any new developments on this subject?\n\nTL;DR: There should be a standard repo structure, a default repo, and the ability to add 3rd party repos easily.\n\nI also would like to add my support for a vim-pi-like package manager. I think a repository (git or otherwise) with a bunch of build files in it would be the best option for a package manager. I think that build files close to ArchLinux pkgbuilds it would be a decent solution though others may have better ideas. The fields I'm thinking of off the top of my head would be dependencies, a source for the plugin (git or otherwise), build requirements (python/ruby/lua support), a version number, conflicts, provides, supported releases of neovim and so on.\n\nWhile the build file and repository structure should be standard, the repository location should not be. If at any point github goes down, or any repo becomes stale, someone could fork the repo to another source and people could add the new repo to their neovim config.\n\nFor a default repo I think an anarchic one would be best as to not burden the developers of Neovim into package maintinence as well as give plugin developers an easy way to distribute their plugin. What I'm thinking of is this. To submit a package the plugin developer could make a pull request to the default repo adding their build file. A hook in the repo could check for syntactic correctness and accept the pull. The developer of the plugin would then be given exclusive write access to that file and nothing else (to push updates). I can't think of anything for access changes but if a plugin developer is handing control to someone else (though rarely the case I think it should be encouraged over forks) it should be supported.\n\nA consideration should be taken to not rely on any specific version control system. This would allow users to create their own local repo and build files to test their own plugins and add those not in the remote repo. Also while there should be a default repo I'd like to stress there is nothing stopping someone else from creating a new public repo with different submission guidelines (if someone in the community can spend more time curating the list than neovim developers can ala vimawesome). Also this solves the problem previously discussed of moving from one source to another. Just bump the version number and change the source.\n\nImplementation aside, I think the important things to consider is having a default that's easily accessible to plugin developers (even at the cost of quality) and being as open to third party repos as possible.\n\nAlthough it's one of the ancient unix wars, I think emacs' plugin infrastructure can be a good reference on the subject. From the experience of a new user, it seems to be working pretty well. Basically all I had to do was add a third party repo and I was good for everything I wanted. Something like this is very easy to add in a getting started guide (over the whole step 1: pick a package manager in current vim).\n",
            "created_at": "2015-05-19T06:43:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-103367388",
            "id": 103367388,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzM2NzM4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/103367388/reactions"
            },
            "updated_at": "2015-05-19T06:43:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/103367388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5488314?v=4",
                "events_url": "https://api.github.com/users/addisonamiri/events{/privacy}",
                "followers_url": "https://api.github.com/users/addisonamiri/followers",
                "following_url": "https://api.github.com/users/addisonamiri/following{/other_user}",
                "gists_url": "https://api.github.com/users/addisonamiri/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/addisonamiri",
                "id": 5488314,
                "login": "addisonamiri",
                "node_id": "MDQ6VXNlcjU0ODgzMTQ=",
                "organizations_url": "https://api.github.com/users/addisonamiri/orgs",
                "received_events_url": "https://api.github.com/users/addisonamiri/received_events",
                "repos_url": "https://api.github.com/users/addisonamiri/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/addisonamiri/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/addisonamiri/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/addisonamiri"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hi, I'm neobundle author.\n\nYes, I think neovim or Vim should provide standard repository architecture.\nIt is important what is the standard plugin manager.\n",
            "created_at": "2015-05-19T06:55:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-103371270",
            "id": 103371270,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzM3MTI3MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/103371270/reactions"
            },
            "updated_at": "2015-05-19T06:55:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/103371270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo"
            }
        },
        {
            "author_association": "NONE",
            "body": "The most important first question in my opinion about a package manager for Neovim is about its type.\n\nAs far as I can see from the comments above the following **types** were proposed:\n1. use native package manager (Apt for Linux, Homebrew for MacOS, etc.)\n2. Vimscript based package managers with an API provided by Neovim\n3. one built-in Neovim specific package manager (e.g. built in Lua)\n4. use a cross-platform, not Neovim-specific package manager (Bower, etc.)\n\nHow can we answer this question? Maybe a **poll** would give at least some hints about what should be done?\n",
            "created_at": "2015-06-14T09:03:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-111802969",
            "id": 111802969,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMTgwMjk2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/111802969/reactions"
            },
            "updated_at": "2015-06-14T09:08:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/111802969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/831371?v=4",
                "events_url": "https://api.github.com/users/tim-lebedkov/events{/privacy}",
                "followers_url": "https://api.github.com/users/tim-lebedkov/followers",
                "following_url": "https://api.github.com/users/tim-lebedkov/following{/other_user}",
                "gists_url": "https://api.github.com/users/tim-lebedkov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tim-lebedkov",
                "id": 831371,
                "login": "tim-lebedkov",
                "node_id": "MDQ6VXNlcjgzMTM3MQ==",
                "organizations_url": "https://api.github.com/users/tim-lebedkov/orgs",
                "received_events_url": "https://api.github.com/users/tim-lebedkov/received_events",
                "repos_url": "https://api.github.com/users/tim-lebedkov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tim-lebedkov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tim-lebedkov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tim-lebedkov"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "People, [gmarik from Vundle is asking for maintainers](https://github.com/gmarik/Vundle.vim/issues/608). Do you think it would be much of a long shot to take over that project under the neovim org? There is certainly interest in including a plugin manager by default in neovim, and there's been much discussion on what it should do. Having Vundle under neovim's umbrella might make it easier to move forward in this front.\n",
            "created_at": "2015-06-17T15:27:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112846235",
            "id": 112846235,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg0NjIzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112846235/reactions"
            },
            "updated_at": "2015-06-17T15:27:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112846235",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do you think it would be much of a long shot to take over that project under the neovim org?\n\nI'd rather not. vim-plug is better designed, less baggage. In any case it will be a quagmire that distracts us from more pressing goals. \n",
            "created_at": "2015-06-17T15:54:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112858862",
            "id": 112858862,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg1ODg2Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112858862/reactions"
            },
            "updated_at": "2015-06-17T15:54:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112858862",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree that vim-plug is cleaner, and this all distracts from other goals, but I just wanted to point it out in case someone was interested. \n",
            "created_at": "2015-06-17T15:57:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112859562",
            "id": 112859562,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg1OTU2Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112859562/reactions"
            },
            "updated_at": "2015-06-17T15:57:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112859562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc"
            }
        },
        {
            "author_association": "NONE",
            "body": "@tim-lebedkov:\n1. This doesn't work. Official repositories are slow (to update) so this one is dead end (also no one is doing that AFAIK)\n2. IMHO this one isn't much different from 3.\n3. IMHO the best option, as we can build centralized repository for packages like Hex/RubyGems/NPM  and maintain it in easy way.\n4. Silly idea as it is polluting some tool niche with something completely unrelated. This would only piss people off.\n\nThere should be no discussion in this matter. Someone in core team should make this and close this pointless discussion. Everyone need that but if we let people discuss that matter then there will never be consensus. Someone must make it \"happen\" - just like divine intervention.\n",
            "created_at": "2015-06-17T16:00:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112860293",
            "id": 112860293,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg2MDI5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112860293/reactions"
            },
            "updated_at": "2015-06-17T16:00:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112860293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4",
                "events_url": "https://api.github.com/users/hauleth/events{/privacy}",
                "followers_url": "https://api.github.com/users/hauleth/followers",
                "following_url": "https://api.github.com/users/hauleth/following{/other_user}",
                "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hauleth",
                "id": 291639,
                "login": "hauleth",
                "node_id": "MDQ6VXNlcjI5MTYzOQ==",
                "organizations_url": "https://api.github.com/users/hauleth/orgs",
                "received_events_url": "https://api.github.com/users/hauleth/received_events",
                "repos_url": "https://api.github.com/users/hauleth/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hauleth"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Everyone need that but if we let people discuss that matter then there will never be consensus.\n\nWe're very aware of that and we don't use polling to make decisions. But the current state of the plugin manager discussion is that ideas are welcome because we don't have the resources to make something happen with it right now. Putting up a centralized repo is a permanent commitment, not something to flirt with.\n",
            "created_at": "2015-06-17T17:17:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112881897",
            "id": 112881897,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg4MTg5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112881897/reactions"
            },
            "updated_at": "2015-06-17T17:17:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112881897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@hauleth \n1. Some package managers are able to install “development versions”: e.g. the so-called live ebuilds in Gentoo portage. Mainly applicable for source distributions. Official repositories are not a problem: I do not know package managers which do not allow you to maintain your own repository. In fact ability to work with users own repository is a _requirement_ for any normal system package manager because this is how software is distributed _locally in companies_ when it needs to be installed on a multiple similar machines.\n   \n   Problem with this point is not slow reaction or something like this. Problem here is that we will need to support _multiple_ package managers here.\n2. Do not really understand how it should actually look like.\n3. I also think this is the best option.\n4. Why polluting? Some of such package managers also allow custom repositories. This would be second-best option if I knew any generic enough package managers. All package managers I know fall into one of the following categories:\n   1. Distribution-specific “system” package managers like portage (Gentoo) or apt (Debian/-based). These are inappropriate because of being too tied up with distribution. Most of them even cannot install into $HOME.\n   2. Language-specific package managers like pip (Python). Inappropriate because they mostly have no “other languages” support and (almost: compiled languages excluded) always require having compiler/interpreter of the language they are written for: this way only luarocks may be used (because lua is a requirement).\n   3. Scope-specific package managers like bower (web development). Inappropriate because if scope is not “managing plugins for the editor” you will get different inconveniences just because developers were not preparing their software for this use-case, exact inconveniences depend on the package manager scope.\n   \n   Maybe Nix package manager can handle our needs, probably with some additional support from NeoVim: at least, it is one of the rare system package managers that allows installation to user directory.\n\nThe only “proper” centralized repository I know is [new vim-pi](https://bitbucket.org/vimcommunity/vim-pi-db) ([documentation](https://bitbucket.org/vimcommunity/vim-pi-documentation)), but it is not finished. Existing and used vim-pi database is rather inconvenient to use and has many flaws: single version support (also meaning that you cannot specify version of the dependency), VimL language for hooks (hooks are used to make “build scripts”), inconsistent keys in addon-info.json.\n",
            "created_at": "2015-06-17T17:31:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112885531",
            "id": 112885531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjg4NTUzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112885531/reactions"
            },
            "updated_at": "2015-06-17T17:31:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112885531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I just went ahead and made some changes to include vim-plug into neovim's runtime, which you can test from https://github.com/fmoralesc/neovim/tree/early/pluginmanager\n\nSo, big deal, that's super lame, right? Well, that branch includes some other changes that make it possible for the user not having to deal with the `call plug#begin()` and `call plug#end()` stuff, so the `:Plug*` commands are always available. I think that is a win from the user perspective. I have to test how that behaves alongside my #2675 PR.\n\nI know this is less interesting than working on the repository stuff, but it's quite a lot more than nothing. We can't expect to figure out all the issues or having someone to come up with a perfectly formed solution, so I believe we should instead focus in incrementally improving the user experience.\n\nI made some slight changes to the vim-plug plugin, but only in the comments. The documentation of the plugin should be extracted to runtime/doc.\n",
            "created_at": "2015-06-17T22:21:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112968673",
            "id": 112968673,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjk2ODY3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112968673/reactions"
            },
            "updated_at": "2015-06-17T22:21:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112968673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> some other changes that make it possible for the user not having to deal with the call plug#begin() and call plug#end() stuff,\n\nThat's a good point. ~~However I have concern about #2675 which I will mention there.~~ Oops I thought that was the \"early\" branch.\n",
            "created_at": "2015-06-17T22:27:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112969528",
            "id": 112969528,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjk2OTUyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112969528/reactions"
            },
            "updated_at": "2015-06-17T22:28:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112969528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "does this prevent someone from using, say, vundle or some other plugin manager? if not it seems like a no brainer to include it. (I am a little biased because vim-plug is very well done and the one that I use after trying many of the available options)\n\nEither way it wouldn't change my life that much though. \n",
            "created_at": "2015-06-17T23:23:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112978752",
            "id": 112978752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjk3ODc1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112978752/reactions"
            },
            "updated_at": "2015-06-17T23:23:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112978752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/99536?v=4",
                "events_url": "https://api.github.com/users/weaksauce/events{/privacy}",
                "followers_url": "https://api.github.com/users/weaksauce/followers",
                "following_url": "https://api.github.com/users/weaksauce/following{/other_user}",
                "gists_url": "https://api.github.com/users/weaksauce/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weaksauce",
                "id": 99536,
                "login": "weaksauce",
                "node_id": "MDQ6VXNlcjk5NTM2",
                "organizations_url": "https://api.github.com/users/weaksauce/orgs",
                "received_events_url": "https://api.github.com/users/weaksauce/received_events",
                "repos_url": "https://api.github.com/users/weaksauce/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weaksauce/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weaksauce/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weaksauce"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> does this prevent someone from using, say, vundle or some other plugin manager? \n\nNo, as long as there isn't a clash with the names of the commands. I would see very little reason to use anything else than vim-plug if included, though (I am also biased).\n",
            "created_at": "2015-06-17T23:27:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112979202",
            "id": 112979202,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjk3OTIwMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112979202/reactions"
            },
            "updated_at": "2015-06-17T23:27:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112979202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Oops I thought that was the \"early\" branch.\n\n@justinmk So, are there concerns about the early plugins stuff, or was it about the mapping defaults (which I removed from the PR)?\n",
            "created_at": "2015-06-17T23:30:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-112979603",
            "id": 112979603,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMjk3OTYwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112979603/reactions"
            },
            "updated_at": "2015-06-17T23:31:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/112979603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've created a **poll** for the plugin manager **type**. As I already wrote, it should only be a decision help. BTW, option number 2 is for Pathogen, Vundle and similar plugin managers.\n\nYou can vote here:\nhttps://docs.google.com/forms/d/1finx03Wddt6Uw4TwVXLARD4Dd9pXp9dg4295U9itldQ/viewform?usp=send_form\n\nResults: https://docs.google.com/forms/d/1finx03Wddt6Uw4TwVXLARD4Dd9pXp9dg4295U9itldQ/viewanalytics\n",
            "created_at": "2015-06-18T19:28:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-113265727",
            "id": 113265727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExMzI2NTcyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/113265727/reactions"
            },
            "updated_at": "2015-06-18T19:28:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/113265727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/831371?v=4",
                "events_url": "https://api.github.com/users/tim-lebedkov/events{/privacy}",
                "followers_url": "https://api.github.com/users/tim-lebedkov/followers",
                "following_url": "https://api.github.com/users/tim-lebedkov/following{/other_user}",
                "gists_url": "https://api.github.com/users/tim-lebedkov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tim-lebedkov",
                "id": 831371,
                "login": "tim-lebedkov",
                "node_id": "MDQ6VXNlcjgzMTM3MQ==",
                "organizations_url": "https://api.github.com/users/tim-lebedkov/orgs",
                "received_events_url": "https://api.github.com/users/tim-lebedkov/received_events",
                "repos_url": "https://api.github.com/users/tim-lebedkov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tim-lebedkov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tim-lebedkov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tim-lebedkov"
            }
        },
        {
            "author_association": "NONE",
            "body": "It's a pity so few people chose a native package manager (option 1). Here is an example of how this could work: https://www.youtube.com/watch?v=xbcjvO_HvYM\n",
            "created_at": "2015-06-28T07:58:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-116217371",
            "id": 116217371,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExNjIxNzM3MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/116217371/reactions"
            },
            "updated_at": "2015-06-28T07:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/116217371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/831371?v=4",
                "events_url": "https://api.github.com/users/tim-lebedkov/events{/privacy}",
                "followers_url": "https://api.github.com/users/tim-lebedkov/followers",
                "following_url": "https://api.github.com/users/tim-lebedkov/following{/other_user}",
                "gists_url": "https://api.github.com/users/tim-lebedkov/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tim-lebedkov",
                "id": 831371,
                "login": "tim-lebedkov",
                "node_id": "MDQ6VXNlcjgzMTM3MQ==",
                "organizations_url": "https://api.github.com/users/tim-lebedkov/orgs",
                "received_events_url": "https://api.github.com/users/tim-lebedkov/received_events",
                "repos_url": "https://api.github.com/users/tim-lebedkov/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tim-lebedkov/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tim-lebedkov/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tim-lebedkov"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tim-lebedkov _Regardless_ of the result of _our_ choice native package manager _will_ be used. But native plugin managers are naturally limited to plugins that are interesting to at least one of the repository (or overlay/ppa/…) maintainers and thus contain only small amount of plugins.\n\nOnce plugin manager and plugin repository is chosen it will be possible to create scripts like g-cpan ([g-cpan: generate and install CPAN modules using portage](http://www.gentoo.org/proj/en/perl/g-cpan.xml)) which can be used by maintainers or users for generating packages or build-install scripts (e.g. ebuilds) automatically.\n\n---\n\nAlso note that without choosing domain-specific plugin description and/or repository formats it would be impossible to use _any_ option. By the way, new [plugin-info.json specification](https://vim-plugin-index.readthedocs.org/en/latest/) and new [vim-pi](https://bitbucket.org/vimcommunity/vim-pi-db) repository is way closer to being complete: everything which can be generated automatically from www.vim.org was finished (except that existing plugins’ archives and SCM repositories are not searched neither for addon-info.json/`{name}-plugin-info.txt`/`plugin-info.json` files nor for GLVS-style dependency descriptions; old vim-pi cron job update script neither does this), hooks and old SCM sources from current vim-pi were not converted, but can already be.\n",
            "created_at": "2015-06-28T09:32:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-116241143",
            "id": 116241143,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExNjI0MTE0Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/116241143/reactions"
            },
            "updated_at": "2015-06-28T09:32:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/116241143",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "NONE",
            "body": "@ZyX-I : **If you want to use native package manager** , then we need to look into these issues:\n\n1) how will you handle this plugin installation on Vim(neovim) **for MS-Windows** . Many of us are using vim/neovim on windows heavily.\n\n2) On slackware Linux, how are you going to handle this, for which there is no online repository inbuilt package manger (like yum,apt-get,..). Though users have contributed third party extensions for slackware, but there are many such third party optional repository tool for slackware , but none of them is inbuilt natively in a standard way into it.\nWhen there are many of them (third party tools for installation via online repositiory); and none of them is native for slackware, then obviously who will package it for this. This will lead to poor experience for neovim users\n\n3) Most importantly,  **for using native package manager on other linux also, i require to know root administrative password to install each neovim plugins** . This is a big limitation. **Many a times we have just limited account on many linux machine, and we want to install neovim plugin into just my own account,  without knowing administrative privilege password.** I do not want to install it globally for all the accounts, because sysadmin will not let me do so.\n\nUsing native OS package manager for installing neovim plugins can how justify the above usecases, especially the case #1 and Case#3\n\n---\n\nUsing native package managers you are mixing the vision of devops with end-users, you are forcing the vision of production machines on even the development machines. \n",
            "created_at": "2015-07-06T10:13:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-118797018",
            "id": 118797018,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODc5NzAxOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/118797018/reactions"
            },
            "updated_at": "2015-07-06T10:33:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/118797018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4308927?v=4",
                "events_url": "https://api.github.com/users/zaxebo1/events{/privacy}",
                "followers_url": "https://api.github.com/users/zaxebo1/followers",
                "following_url": "https://api.github.com/users/zaxebo1/following{/other_user}",
                "gists_url": "https://api.github.com/users/zaxebo1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zaxebo1",
                "id": 4308927,
                "login": "zaxebo1",
                "node_id": "MDQ6VXNlcjQzMDg5Mjc=",
                "organizations_url": "https://api.github.com/users/zaxebo1/orgs",
                "received_events_url": "https://api.github.com/users/zaxebo1/received_events",
                "repos_url": "https://api.github.com/users/zaxebo1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zaxebo1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zaxebo1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zaxebo1"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@zaxebo1 I am not saying that native package managers are good choice. In fact I’ve just provided yet another reason against relying on them. And a few messages earlier I said that NeoVim-specific plugin manager is the best option.\n\nBy the way, there is another option for 4. (non-NeoVim-specific non-system package manager): linuxbrew. At least, unlike nix, I was able to install and successfully use it. But this is again non-Windows, at least currently.\n",
            "created_at": "2015-07-06T15:15:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-118887106",
            "id": 118887106,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDExODg4NzEwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/118887106/reactions"
            },
            "updated_at": "2015-07-06T15:15:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/118887106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think that users of vanilla neovim should be able to handle the complexity of installing vim-plug, Vundle, Pathogen etc.\n\nA specific (GUI) distribution of neovim could offer a built-in plugin manager to make discovery and installation pleasant. But I think it is best left to third parties. (A possible example for this could be that eclipse decides to use neovim as its new editor backend and creates a plugin manager that integrates with the current infrastrurcture (market-place, update-sites).)\n\nSome plugin managers define special syntax for scripts hosted on github. Although this is reasonable to do at the moment, a plugin manager that ships with neovim should not default to special services, especially if they are tied to a domain.\n\nIt is exceptionally hard to create a plugin manager that can generically handle arbitrary languages for plugins. This means, that it should work on any operating system, that you do not need administrator priviliges to use it and that it is more convenient to use as current plugin managers.\n\nIn any case, if neovim decides to ship with some form of plugin manager, it is probably a good idea to take a look at emacs. I don't think it would hurt to define (or decide to use) some kind of metadata format (e.g. vim-pi) and create a GUI around it, but the service to access them must be configurable (and not bound to a specific domain) and the neovim project should manage one repository on its own. The repository must not be big, but it should work as some kind of reference implementation. It could offer a place for language-specific plugins that essentially contain enough vimL (or lua) to install other plugin providers. This would mean, that a neovim environment could be bootstrapped by a single .nvimrc file. (Well, it could be done already, but it would require more work.) \n",
            "created_at": "2015-07-09T15:38:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-120037990",
            "id": 120037990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDAzNzk5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/120037990/reactions"
            },
            "updated_at": "2015-07-09T15:38:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/120037990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1560366?v=4",
                "events_url": "https://api.github.com/users/saep/events{/privacy}",
                "followers_url": "https://api.github.com/users/saep/followers",
                "following_url": "https://api.github.com/users/saep/following{/other_user}",
                "gists_url": "https://api.github.com/users/saep/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/saep",
                "id": 1560366,
                "login": "saep",
                "node_id": "MDQ6VXNlcjE1NjAzNjY=",
                "organizations_url": "https://api.github.com/users/saep/orgs",
                "received_events_url": "https://api.github.com/users/saep/received_events",
                "repos_url": "https://api.github.com/users/saep/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/saep/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/saep/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/saep"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "New Vim-PI repository format definition says nothing about specific service. In fact I was going to create a file which will list all “raw” URLs that can be used to access the repository (I think it is way too big to use `git clone` under most circumstances, even `git clone --depth=1`) and assume (and document) that plugin managers should use this file to determine how to check out the repository: this makes it possible to\n1. Move all indexes and manifests to a separate repository (not going to actually do this now, but this move was being considered): these are purely-generated files (non-purely-generated: automatic plugin descriptions based on www.vim.org: they can be extended by users and also github-only plugins will be written and not generated).\n2. Move all repositories from a bitbucket and still not require using `git clone`. (Note: if the chosen format is not a DSL (it will not be), services to move to will be limited to those that have rather simple raw check outs (e.g. no `foo.org/vimcommunity/vim-pi-db/raw?file=_i_n_d_e_x_._j_s_o_n`).)\n",
            "created_at": "2015-07-09T20:47:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-120140058",
            "id": 120140058,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDE0MDA1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/120140058/reactions"
            },
            "updated_at": "2015-07-09T20:47:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/120140058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "NONE",
            "body": "What about using the [miniconda](http://conda.pydata.org/miniconda.html) package manager?\n\nIt's cross-plateform and can install all kind of dependencies (from example Python). It would make it trival for a NeoVim plugin to depend for example on a C compiled (or other language) dependency (for example, a linter, a debugger....).\n\nAnother good point is that user could use conda environments.\n\nEdit: \n- [documentation](http://conda.pydata.org/docs/)\n- [anaconda.org server](https://anaconda.org/)\n",
            "created_at": "2015-07-11T08:27:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-120595924",
            "id": 120595924,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDU5NTkyNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/120595924/reactions"
            },
            "updated_at": "2015-07-11T11:17:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/120595924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/697102?v=4",
                "events_url": "https://api.github.com/users/dfroger/events{/privacy}",
                "followers_url": "https://api.github.com/users/dfroger/followers",
                "following_url": "https://api.github.com/users/dfroger/following{/other_user}",
                "gists_url": "https://api.github.com/users/dfroger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dfroger",
                "id": 697102,
                "login": "dfroger",
                "node_id": "MDQ6VXNlcjY5NzEwMg==",
                "organizations_url": "https://api.github.com/users/dfroger/orgs",
                "received_events_url": "https://api.github.com/users/dfroger/received_events",
                "repos_url": "https://api.github.com/users/dfroger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dfroger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dfroger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dfroger"
            }
        },
        {
            "author_association": "NONE",
            "body": "What is the decision process for what ends up getting implemented? Everyone seems to have given good arguments. I'd suggest a community poll but from what I saw on the default colorscheme there didn't seem to be too many votes. The developers of Neovim and current package managers seem to be the most knowledgeable so even if it's just them having a discussion and choosing one that'd be fine. I would just like to see one of the options chosen so it can become _actionable_.\n",
            "created_at": "2015-07-13T07:15:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-120835064",
            "id": 120835064,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDgzNTA2NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/120835064/reactions"
            },
            "updated_at": "2015-07-13T07:15:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/120835064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5488314?v=4",
                "events_url": "https://api.github.com/users/addisonamiri/events{/privacy}",
                "followers_url": "https://api.github.com/users/addisonamiri/followers",
                "following_url": "https://api.github.com/users/addisonamiri/following{/other_user}",
                "gists_url": "https://api.github.com/users/addisonamiri/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/addisonamiri",
                "id": 5488314,
                "login": "addisonamiri",
                "node_id": "MDQ6VXNlcjU0ODgzMTQ=",
                "organizations_url": "https://api.github.com/users/addisonamiri/orgs",
                "received_events_url": "https://api.github.com/users/addisonamiri/received_events",
                "repos_url": "https://api.github.com/users/addisonamiri/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/addisonamiri/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/addisonamiri/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/addisonamiri"
            }
        },
        {
            "author_association": "NONE",
            "body": "Every decision to add something comes at a cost of later support and dependencies. Something like a package manager in neovim would have a lasting impact so it's wise to defer final judgement onto someone who knows the software well and has a thorough understanding of the most promising options. I don't think a poll is a good option because it's limited in discussion about the pros and cons of different approaches. \n",
            "created_at": "2015-07-13T18:36:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-121017500",
            "id": 121017500,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTAxNzUwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/121017500/reactions"
            },
            "updated_at": "2015-07-13T18:36:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/121017500",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/99536?v=4",
                "events_url": "https://api.github.com/users/weaksauce/events{/privacy}",
                "followers_url": "https://api.github.com/users/weaksauce/followers",
                "following_url": "https://api.github.com/users/weaksauce/following{/other_user}",
                "gists_url": "https://api.github.com/users/weaksauce/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/weaksauce",
                "id": 99536,
                "login": "weaksauce",
                "node_id": "MDQ6VXNlcjk5NTM2",
                "organizations_url": "https://api.github.com/users/weaksauce/orgs",
                "received_events_url": "https://api.github.com/users/weaksauce/received_events",
                "repos_url": "https://api.github.com/users/weaksauce/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/weaksauce/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/weaksauce/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/weaksauce"
            }
        },
        {
            "author_association": "NONE",
            "body": "@dvidsilva You made a statement: All plugin managers for Vim suck. Eventually tell why - you may surprised that VAM and Neobundle are likely to be just \"good enough\". Yes there are still problems. But finding out which plugins to use and reading their documentation is more work IMHO. VAM is intergrated into nixos.org linux. You can create a .vim-addons file having a json dict per line and make vim create .nix files - thus have your linux distro install all plugins - eg I get a vim-marc-weber in PATH without disturbing others.\n\nWhat are the problems? A lot of people don't want to care or learn about 10 different distros or ways to install plugins. Often plugins change more often than distros. Thus native plugin managers can work - but they may or may not be best. Also some plugins require \"vim with python\" or vim with ruby\" or \"vim with python version XYZ and python plugins ABC\"... for this reason I had the idea of creating a plugin manager ruling all languages/tools to get rid of the hell, a draft / sketchy description is here: https://github.com/code-once/ypm\nEg if you install ruby/haskell/python/.. packages you often need headers of mysql or whatnot.\n\nA somewhat comprehensive list of plugin managers (probably little bit outdated):\nhttp://vim-wiki.mawercer.de/wiki/topic/vim%20plugin%20managment.html\n\nPlease also note that its important to not only have all plugins available, but also to give the guidance about which plugins \"just work\" - eg there are 5+ plugins which do syntax checking - some do only syntax checking (vim-addon-syntax-checker) - some mix syntax checking and running interpreters (syntastic) - which is why I forked it once. For this reason if people often report problems VAM allows to deprecate plugins giving a reason why and which pluigns might be tried instead.\n\nIf you're serious about security you should /must review the code of all plugins .. or build a trust system as well. For this reason setting up something the linux kernel has (maintainers and trusting them) could be nice.\n\nThus getting the plugin story right is little bit more than fetching stuff from github (which you also want to be able to do - and which all major plugin managers allow doing).\n\nVundle does implement a search - but was limited to \"github\" AFAIK. VAM implements a search, but its limitd to plugin names. http://vam.mawercer.de/ is a list of plugins VAM knows about.\n\nThings like \"using gems\" has been tried before - but unless the majority supports it it is likely to fail.\nAs VAM author we also noticed how important it is to activate plugins \"as needed\" for startup speed reasons. You can even install plugins from within VIM without restarting.\n\nI had the \"one-vim-lib\" attempt - allowing the user to configure mappings. I had code turning a vim dictionary into a tree so that you can edit it... I even spent huge amounts of time on allowing to activate/deactivate parts - just to learn than viml is too slow - and that removing mappings was more complicated than restarting Vim. Since then I try to keep things simple (I still fail sometimes).\n\nAbout mappings: I find its a nice compromise to have default mappings but allow the user to opt-out and define his/her own. In the snipmate case there is a dictionary allowing you to override the mappings. For plugins which are likely to collide with others I find this is a nice option:\nHaving a s:opts buffer local dicitonary which gets bound to a g:plugin_name as well.\nThen users ca preset options. This worked quite well for almost all plugins I worked on.\nhttp://vim-wiki.mawercer.de/wiki/topic/designing-a-vim-plugin.html => configuration\n",
            "created_at": "2015-07-17T08:22:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-122213573",
            "id": 122213573,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEyMjIxMzU3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122213573/reactions"
            },
            "updated_at": "2015-07-17T08:22:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/122213573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34086?v=4",
                "events_url": "https://api.github.com/users/MarcWeber/events{/privacy}",
                "followers_url": "https://api.github.com/users/MarcWeber/followers",
                "following_url": "https://api.github.com/users/MarcWeber/following{/other_user}",
                "gists_url": "https://api.github.com/users/MarcWeber/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MarcWeber",
                "id": 34086,
                "login": "MarcWeber",
                "node_id": "MDQ6VXNlcjM0MDg2",
                "organizations_url": "https://api.github.com/users/MarcWeber/orgs",
                "received_events_url": "https://api.github.com/users/MarcWeber/received_events",
                "repos_url": "https://api.github.com/users/MarcWeber/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MarcWeber/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MarcWeber/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MarcWeber"
            }
        },
        {
            "author_association": "NONE",
            "body": "- I vote in favour of autocratic decision making :)\n- Having said that, I really like vim-plug as well. I'd like to see it or something similar shipped by default and maintained by neovim.\n- I really don't like the idea of baking in functionality that relies on centralised repositories.\n\n> Some plugin managers define special syntax for scripts hosted on github. Although this is reasonable to do at the moment, a plugin manager that ships with neovim should not default to special services, especially if they are tied to a domain.\n\nI kind of agree. In vim-plug, something like \"Plug 'tpope/vim-surround'\" grabs from https://github.com/tpope/vim-surround. I think it would be best if the default plugin manager shipped with a simple functionality. When it encounters a Plugin string that seems to be only part of a URL, look through a configurable list of url prefixes in order and install the first 'tpope/vim-surround' it finds. The default nvimrc could ship with a list of default URL prefixes to be searched, beginning with \"https://github.com/\". This list could be updated as different hosting platforms waxed and waned in popularity (raising the obvious problem of how to decide which ones to include). \n\nAnother alternative could be to include and document the functionality for configuring URL prefixes to search, but not including any list of defaults. IMO, this is the best alternative.\n",
            "created_at": "2015-08-30T11:34:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-136130173",
            "id": 136130173,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjEzMDE3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136130173/reactions"
            },
            "updated_at": "2015-08-30T11:35:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/136130173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3953669?v=4",
                "events_url": "https://api.github.com/users/sullyj3/events{/privacy}",
                "followers_url": "https://api.github.com/users/sullyj3/followers",
                "following_url": "https://api.github.com/users/sullyj3/following{/other_user}",
                "gists_url": "https://api.github.com/users/sullyj3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sullyj3",
                "id": 3953669,
                "login": "sullyj3",
                "node_id": "MDQ6VXNlcjM5NTM2Njk=",
                "organizations_url": "https://api.github.com/users/sullyj3/orgs",
                "received_events_url": "https://api.github.com/users/sullyj3/received_events",
                "repos_url": "https://api.github.com/users/sullyj3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sullyj3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sullyj3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sullyj3"
            }
        },
        {
            "author_association": "NONE",
            "body": "my two cents...\n- Theres no need to have a native package manager, instead a plugin should do it, and when plugins become so awesome then are elegible to be natively included in the neovim distribution.\n- Please **do not** create a centralized plugin repository, no npm or rubygems like please, is better the [packagist.org](https://packagist.org/) approach where packagist is only an index of submitted libraries (as @tarruda says), with an account that can be associated with github, notice the vendor feature for better package organization, it only fetches CVS, it could work with git/mercurial and integrated for searching in github, bitbucket or even private repos. Such index it could even have an awesome API that could allow navigate the index within nvim, even read doc files, \n- Define a standard for plugin packaging via a universal agnostic programming language spec file format, like `json`, `yaml`, `xml`, etc, something clean and readable.\n- Encourage to use semantic versioning for plugin packaging and this will allow the nvim package manager to work with version constraints, allowing an ecosystem where plugins could define dependencies on other plugins (imagine a BDD plugin for testing plugins, or a rake like plugin), also will allow avoid conflicts between them.\n- Multi language support  for the package manager is not needed just yet!, firs an extensible package manager is needed, one that even could have plugins hooked into it, and then such plugins could easily integrate the compatibility of requiring plugins written in other programming languages.\n\nBut the most important thing! for now just define and document the plugin architecture that nvim will use, because at the moment changes on the new architecture stops anyone to start building this awesome plugins. I also agree with @aktau \n\n> The ability for other plugins systems over msgpack-rpc is just icing on the cake.\n",
            "created_at": "2015-11-10T08:13:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-155354311",
            "id": 155354311,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTM1NDMxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/155354311/reactions"
            },
            "updated_at": "2015-11-10T08:13:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/155354311",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3653680?v=4",
                "events_url": "https://api.github.com/users/zzantares/events{/privacy}",
                "followers_url": "https://api.github.com/users/zzantares/followers",
                "following_url": "https://api.github.com/users/zzantares/following{/other_user}",
                "gists_url": "https://api.github.com/users/zzantares/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zzantares",
                "id": 3653680,
                "login": "zzantares",
                "node_id": "MDQ6VXNlcjM2NTM2ODA=",
                "organizations_url": "https://api.github.com/users/zzantares/orgs",
                "received_events_url": "https://api.github.com/users/zzantares/received_events",
                "repos_url": "https://api.github.com/users/zzantares/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zzantares/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zzantares/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zzantares"
            }
        },
        {
            "author_association": "NONE",
            "body": "@ZzAntares what is wrong with centralized package repository? Fetching packages from GitHub has one big disadvantage:\n\n> Even if one use semantic versioning, one could still f… it up.\n\nI mean, Git tags aren't immutable. You always can delete it and create new, then force push. This is horrible and it is main reason why most of FE packages migrate from Bower to NPM - NPM doesn't allow you to change once submitted version.\n",
            "created_at": "2015-11-10T12:50:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-155412150",
            "id": 155412150,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQxMjE1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/155412150/reactions"
            },
            "updated_at": "2015-11-10T12:50:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/155412150",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/291639?v=4",
                "events_url": "https://api.github.com/users/hauleth/events{/privacy}",
                "followers_url": "https://api.github.com/users/hauleth/followers",
                "following_url": "https://api.github.com/users/hauleth/following{/other_user}",
                "gists_url": "https://api.github.com/users/hauleth/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hauleth",
                "id": 291639,
                "login": "hauleth",
                "node_id": "MDQ6VXNlcjI5MTYzOQ==",
                "organizations_url": "https://api.github.com/users/hauleth/orgs",
                "received_events_url": "https://api.github.com/users/hauleth/received_events",
                "repos_url": "https://api.github.com/users/hauleth/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hauleth/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hauleth/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hauleth"
            }
        },
        {
            "author_association": "NONE",
            "body": "@hauleth I think is a better approach, that way is just an index not a storage service, and in addition no one has to worry about storage costs on the hosting server, mirroring is easier since source is always in a repo and there's no need to sync packages but only the index. Even if a tag is removed that doesn't change nothing when requiring a dependency, take a look at composer/packagist which uses versions constraints that ensure than even after deleting a tag, a dependency is still resolvable not to that tag but to the best match, one can even reference branches or plain commits, also they use a neat setting called the _minimum stability_ worth to watch.\n\nBesides that vim/nvim community is well versed in cvs (this is not sublime community, we're sick people haha), we know a tag must not be deleted, but as I told you, even if it goes deleted is not a problem, version constraints are the solution to that.\n\nJust my opinion though.\n",
            "created_at": "2015-11-13T10:09:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-156384740",
            "id": 156384740,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjM4NDc0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/156384740/reactions"
            },
            "updated_at": "2015-11-13T10:09:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/156384740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3653680?v=4",
                "events_url": "https://api.github.com/users/zzantares/events{/privacy}",
                "followers_url": "https://api.github.com/users/zzantares/followers",
                "following_url": "https://api.github.com/users/zzantares/following{/other_user}",
                "gists_url": "https://api.github.com/users/zzantares/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zzantares",
                "id": 3653680,
                "login": "zzantares",
                "node_id": "MDQ6VXNlcjM2NTM2ODA=",
                "organizations_url": "https://api.github.com/users/zzantares/orgs",
                "received_events_url": "https://api.github.com/users/zzantares/received_events",
                "repos_url": "https://api.github.com/users/zzantares/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zzantares/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zzantares/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zzantares"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "https://glyph.twistedmatrix.com/2015/11/editor-malware.html\n\nvim.org does not support https.  I think it is fatal problem.\nWe should provide another secure repository for the plugins.\n",
            "created_at": "2015-11-13T21:55:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-156570308",
            "id": 156570308,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjU3MDMwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/156570308/reactions"
            },
            "updated_at": "2015-11-13T21:55:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/156570308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Shougo I totally agree, but this is almost certainly not the right ticket for that discussion. Also, it probably would be good to get the folks interested in http://vim-scripts.org and http://vimawesome.com involved. If we can get them both to stop encouraging insecure plugin sources, it'll be one thing that isn't on our plate.\n",
            "created_at": "2015-11-14T01:45:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-156605737",
            "id": 156605737,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjYwNTczNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/156605737/reactions"
            },
            "updated_at": "2015-11-14T01:45:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/156605737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7495?v=4",
                "events_url": "https://api.github.com/users/josephholsten/events{/privacy}",
                "followers_url": "https://api.github.com/users/josephholsten/followers",
                "following_url": "https://api.github.com/users/josephholsten/following{/other_user}",
                "gists_url": "https://api.github.com/users/josephholsten/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/josephholsten",
                "id": 7495,
                "login": "josephholsten",
                "node_id": "MDQ6VXNlcjc0OTU=",
                "organizations_url": "https://api.github.com/users/josephholsten/orgs",
                "received_events_url": "https://api.github.com/users/josephholsten/received_events",
                "repos_url": "https://api.github.com/users/josephholsten/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/josephholsten/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/josephholsten/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/josephholsten"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @Shougo I totally agree, but this is almost certainly not the right ticket for that discussion. Also, it probably would be good to get the folks interested in http://vim-scripts.org and http://vimawesome.com involved. If we can get them both to stop encouraging insecure plugin sources, it'll be one thing that isn't on our plate.\n\nOK.  The plugins repository issue is already available?\nIf not, I will create it.\n\nI think vimawesome is better place.  But it is not updated until March.\nThe author seems be busy.  I think another maintainer is needed.\n",
            "created_at": "2015-11-14T01:58:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-156607600",
            "id": 156607600,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjYwNzYwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/156607600/reactions"
            },
            "updated_at": "2015-11-14T01:58:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/156607600",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo"
            }
        },
        {
            "author_association": "NONE",
            "body": "my 2c\n\nI would suggest applying a little product development to this? Why don't we figure out what the ideal end situation is and then try and identify a rough, iterative path between there we are now. e.g.\n\nskate board -> scooter -> unicycle -> bicycle -> moped -> motorbike.\n\nThen at each stage we can see if people actually give a damn before committing to the next and wasting a whole bunch of really smart peoples time. Instead of deciding it's a great idea, spending 18 months building the whole thing and then finding out vim-plug just does a better job.\n",
            "created_at": "2015-11-26T13:51:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-159921002",
            "id": 159921002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTkyMTAwMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159921002/reactions"
            },
            "updated_at": "2015-11-26T13:51:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/159921002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1034337?v=4",
                "events_url": "https://api.github.com/users/jasper-lyons/events{/privacy}",
                "followers_url": "https://api.github.com/users/jasper-lyons/followers",
                "following_url": "https://api.github.com/users/jasper-lyons/following{/other_user}",
                "gists_url": "https://api.github.com/users/jasper-lyons/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jasper-lyons",
                "id": 1034337,
                "login": "jasper-lyons",
                "node_id": "MDQ6VXNlcjEwMzQzMzc=",
                "organizations_url": "https://api.github.com/users/jasper-lyons/orgs",
                "received_events_url": "https://api.github.com/users/jasper-lyons/received_events",
                "repos_url": "https://api.github.com/users/jasper-lyons/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jasper-lyons/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jasper-lyons/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jasper-lyons"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Very relevant article by an expert: [So you want to write a package manager](https://medium.com/@sdboyer/so-you-want-to-write-a-package-manager-4ae9c17d9527)\n",
            "created_at": "2016-02-15T00:07:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-184009931",
            "id": 184009931,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDAwOTkzMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184009931/reactions"
            },
            "updated_at": "2016-02-15T00:07:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/184009931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think this issue is worth closing (for now). We can reconsider re-opening when there is a good implementation we want to consider upstreaming, but for now we should wait for the wider community to innovate further.",
            "created_at": "2022-11-23T11:34:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-1324919010",
            "id": 1324919010,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "IC_kwDOAPphoM5O-Kji",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1324919010/reactions"
            },
            "updated_at": "2022-11-23T11:35:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1324919010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Continued in https://github.com/neovim/neovim/issues/20893",
            "created_at": "2024-02-18T11:12:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/247#issuecomment-1951169864",
            "id": 1951169864,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/247",
            "node_id": "IC_kwDOAPphoM50TH1I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1951169864/reactions"
            },
            "updated_at": "2024-02-18T11:12:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1951169864",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 67,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/247/comments",
    "created_at": "2014-03-02T00:04:26Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/247/events",
    "html_url": "https://github.com/neovim/neovim/issues/247",
    "id": 28569208,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as duplicates of other issues",
            "id": 3221613764,
            "name": "closed:duplicate",
            "node_id": "MDU6TGFiZWwzMjIxNjEzNzY0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/247/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 604,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 426,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-02-18T23:41:30Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUyODU2OTIwOA==",
    "number": 247,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/247/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/247/timeline",
    "title": "Plugin Package Manager",
    "updated_at": "2024-02-18T11:13:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/247",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1588753?v=4",
        "events_url": "https://api.github.com/users/dvidsilva/events{/privacy}",
        "followers_url": "https://api.github.com/users/dvidsilva/followers",
        "following_url": "https://api.github.com/users/dvidsilva/following{/other_user}",
        "gists_url": "https://api.github.com/users/dvidsilva/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dvidsilva",
        "id": 1588753,
        "login": "dvidsilva",
        "node_id": "MDQ6VXNlcjE1ODg3NTM=",
        "organizations_url": "https://api.github.com/users/dvidsilva/orgs",
        "received_events_url": "https://api.github.com/users/dvidsilva/received_events",
        "repos_url": "https://api.github.com/users/dvidsilva/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dvidsilva/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dvidsilva/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dvidsilva"
    }
}