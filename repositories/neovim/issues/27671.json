{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nExample: `autoread` is global or local to buffer.\r\n\r\n`:set noautoread` sets the global value, meaning `:setglobal autoread?` returns `noautoread` and any buffer which hasn't `:setlocal autoread` will have `autoread` turned off.\r\n\r\nOn the contrary, `vim.bo.autoread = false` does *not* touch the global value of `autoread`. It behaves like `:setlocal`, even for `global-local` options.\n\n### Steps to reproduce\n\n`:h vim.bo`\n\n### Expected behavior\n\nThe docs should state that `vim.bo` always behaves like `:setlocal`.\n\n### Neovim version (nvim -v)\n\nmaster\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nN/A\n\n### Terminal name/version\n\nN/A\n\n### $TERM environment variable\n\nN/A\n\n### Installation\n\nN/A",
    "closed_at": "2024-03-03T23:33:10Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "In general, I found determining the mapping between the various `vim.o` variants and corresponding `:set` variants pretty confusing (based on reading the documentation)\r\n\r\nWhat I gathered after a lot of testing and comparing:\r\n\r\n`vim.o` = `:set`\r\n`vim.go` = `:setglobal`\r\n`vim.bo` = `:setlocal` (buffer options only)\r\n`vim.wo` = `:setlocal` if global-local option, `:set` otherwise (window options only)\r\n`vim.wo[winid][bufid]` = `:setlocal` (window options only)\r\n`vim.opt` = `:set`\r\n`vim.opt_global`= `:setglobal`\r\n`vim.opt_local` = `:setlocal`\r\n\r\nMaybe this kind of summary could be included in the documentation? `vim.wo` in particularly really made me struggle with properly wrapping my head around how window options work.\r\n\r\nAlso, maybe there should be `vim.lo` for a non-magic `:setlocal` equivalent? I found myself reaching for `vim.cmd('setlocal ...')` in autocommands for setting buffer-specific window options (like `number`) since `vim.wo[0][0]` is kind of strange and bothersome to write, and `vim.opt*` is planned for eventual deprecation.\r\n\r\n```lua\r\nvim.lo = setmetatable({}, {\r\n  __index = function(_, k)\r\n    return api.nvim_get_option_value(k, { scope = 'local' })\r\n  end,\r\n  __newindex = function(_, k, v)\r\n    return api.nvim_set_option_value(k, v, { scope = 'local' })\r\n  end,\r\n})\r\n```",
            "created_at": "2024-02-29T09:31:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-1970744681",
            "id": 1970744681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM51dy1p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970744681/reactions"
            },
            "updated_at": "2024-02-29T09:38:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970744681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Welcome to the wonderful world of Vim options. (`vim.opt` is soft-deprecated and will be removed in the future once we have native dict option support; but `vim.wo[0][0]` is here to stay because the explicitness is _good_.)\r\n\r\n",
            "created_at": "2024-02-29T09:47:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-1970771874",
            "id": 1970771874,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM51d5ei",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970771874/reactions"
            },
            "updated_at": "2024-02-29T09:49:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970771874",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Welcome to the wonderful world of Vim options. (`vim.opt` is soft-deprecated and will be removed in the future once we have native dict option support; but `vim.wo[0][0]` is here to stay because the explicitness is _good_.)\r\n\r\nPlease don't get me wrong. I think `vim.bo[bufid]` and `vim.wo[winid]`/`vim.wo[winid][bufid]` are good. I just find that for general use, `:setlocal` to be much easier to remember as the \"just do the right thing\" option, especially since the documentation for `vim.bo` is incorrect, and `vim.wo` has 3 different ways it can behave, one of which isn't mentioned in documentation either (`:setlocal` if the option is global-local, which makes sense of course, but isn't documented. It says it always works like `:set` unless `bufid` is given.)\r\n\r\nI did also mention `vim.opt*`'s probable deprecation status, hence why I suggested adding `vim.lo` as a parallel to `vim.o` and `vim.go`.",
            "created_at": "2024-02-29T09:59:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-1970791933",
            "id": 1970791933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM51d-X9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970791933/reactions"
            },
            "updated_at": "2024-02-29T09:59:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970791933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> to be much easier to remember as the \"just do the right thing\" \r\n\r\nYeah, about that... (It's not, really. It has lead to massive confusion before. Vim options _are_ a pain, and we can't just paper over that and pretend it's not.)\r\n\r\nSure, documentation can be improved. Do you want to suggest something in a PR?\r\n\r\nRegarding new API: We are _really_ conservative about this (now), so there has to be a significant benefit to the new accessor over what is already offered. Just \"convenience\" is not enough (anymore).",
            "created_at": "2024-02-29T11:09:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-1970907042",
            "id": 1970907042,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM51eaei",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970907042/reactions"
            },
            "updated_at": "2024-02-29T11:10:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970907042",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I see. For a documentation PR, which places need to be changed? Are the lua docs autogenerated from the comments in _options.lua?",
            "created_at": "2024-02-29T11:30:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-1970938192",
            "id": 1970938192,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM51eiFQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970938192/reactions"
            },
            "updated_at": "2024-02-29T11:30:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970938192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I see. For a documentation PR, which places need to be changed? Are the lua docs autogenerated from the comments in _options.lua?\r\n\r\nYes, exactly (via `make doc`). Only `lua-guide.txt` is manually written.",
            "created_at": "2024-02-29T11:35:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-1970946519",
            "id": 1970946519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM51ekHX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970946519/reactions"
            },
            "updated_at": "2024-02-29T11:35:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970946519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Okay. I'll see about making a PR suggesting new wording. As for the question of `vim.lo`, I think a few points speak for it\r\n\r\n1. It provides symmetry with `vim.go`. I find its absence personally strange, especially since `vim.opt_local` exists, but is going to be removed in the future, so there won't be a straightforward replacement for it.\r\n2. Without it, users are required to remember which options are buffer options and which are windows options, and remember how to get the proper `:setlocal` behaviour (`vim.wo[0][0]`), or stick to using `vim.cmd`\r\n3. `:setlocal` is the correct choice for an overwhelming majority of user autocommands that want to set options. It's not immediately obvious how to set options iteratively (e.g. pairs(table)) with the `vim.bo`/`vim.wo` split, and `vim.cmd` would require error-prone string concatenations. I know some plugins currently expose separate configuration keys for window and buffer options for this reason (I'm unsure if there's a way to query the scope of an option in the API)\r\n\r\nYes, Vim options are messy. But I find the lack of a straightforward `:setlocal` analogue has caused me multiple bugs in my own config/plugins and given the functionality already exists in soft-deprecated form without simple replacement the functionality (which amounts to a copy-paste from `vim.go`) pulls it's weight enough to be worth considering.",
            "created_at": "2024-02-29T11:50:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-1970973314",
            "id": 1970973314,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM51eqqC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970973314/reactions"
            },
            "updated_at": "2024-02-29T11:50:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1970973314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
                "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarLambda/followers",
                "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarLambda",
                "id": 38919842,
                "login": "LunarLambda",
                "node_id": "MDQ6VXNlcjM4OTE5ODQy",
                "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
                "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
                "repos_url": "https://api.github.com/users/LunarLambda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarLambda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There isn't an easy answer here. You may think `setlocal` is straightforward, but it really isn't. This becomes much more apparent when you read the C code.\n\nE.g.\n- `setlocal` for buffer options is the same as `set` \n- `setlocal` for windows options is not the same as `set` (most people don't understand this).\n\nAnd then global-local makes each of these work differently.\n\nIf it's easier to you, then just keep using `vim.cmd`. \n\n> Without it, users are required to remember which options are buffer options and which are windows options\n\nYes this is intentional. Same applies to the type of the option (`string`/`number`/`boolean`).\n\n> It's not immediately obvious how to set options iteratively (e.g. pairs(table)) with the vim.bo/vim.wo split, and vim.cmd would require error-prone string concatenations. I know some plugins currently expose separate\n\nI suggest you don't set options in a loop. Or if you do make sure buffer and window options are separate. Options have different types anyway, so running this through a loop seems wrong.",
            "created_at": "2024-03-01T08:25:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-1972733103",
            "id": 1972733103,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM51lYSv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1972733103/reactions"
            },
            "updated_at": "2024-03-01T08:25:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1972733103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The docs should state that `vim.bo` always behaves like `:setlocal`.\n\nThis is the case after all, see https://github.com/neovim/neovim/pull/30733",
            "created_at": "2024-10-09T11:30:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/27671#issuecomment-2402061148",
            "id": 2402061148,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27671",
            "node_id": "IC_kwDOAPphoM6PLItc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402061148/reactions"
            },
            "updated_at": "2024-10-09T11:31:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2402061148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27671/comments",
    "created_at": "2024-02-29T09:21:34Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27671/events",
    "html_url": "https://github.com/neovim/neovim/issues/27671",
    "id": 2160787334,
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27671/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Ayv-G",
    "number": 27671,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27671/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27671/timeline",
    "title": "docs: vim.bo is not \"equivalent to both :set and :setlocal\"",
    "updated_at": "2024-10-09T11:31:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27671",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38919842?v=4",
        "events_url": "https://api.github.com/users/LunarLambda/events{/privacy}",
        "followers_url": "https://api.github.com/users/LunarLambda/followers",
        "following_url": "https://api.github.com/users/LunarLambda/following{/other_user}",
        "gists_url": "https://api.github.com/users/LunarLambda/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LunarLambda",
        "id": 38919842,
        "login": "LunarLambda",
        "node_id": "MDQ6VXNlcjM4OTE5ODQy",
        "organizations_url": "https://api.github.com/users/LunarLambda/orgs",
        "received_events_url": "https://api.github.com/users/LunarLambda/received_events",
        "repos_url": "https://api.github.com/users/LunarLambda/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LunarLambda/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LunarLambda/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LunarLambda"
    }
}