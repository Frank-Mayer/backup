{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\n```\nfunction test()\n  vim.api.nvim_buf_set_lines(0, 0, -1, false, {\"⚙️\"})\n  vim.api.nvim_buf_set_text(0, 0, 0, 0, 1, {\"✅\"})\n  local lines = vim.api.nvim_buf_get_lines(0, 0, -1, false )\n  print(vim.inspect(lines))\nend\n```\n\nThis prints something like ✅<9a><99>, instead of just the checkbox.\n\nUsing `vim.api.nvim_buf_set_text(0, 0, 0, 0, -1, {\"✅\"})` instead works correctly, so I think this is likely something about the \"width\" of the symbols and how they fit in the line.\n\n### Steps to reproduce\n\ndefine this function:\n```\nfunction test()\n  vim.api.nvim_buf_set_lines(0, 0, -1, false, {\"⚙️\"})\n  vim.api.nvim_buf_set_text(0, 0, 0, 0, 1, {\"✅\"})\n  local lines = vim.api.nvim_buf_get_lines(0, 0, -1, false )\n  print(vim.inspect(lines))\nend\n```\nThen exec:\n```\n:so %\n:lua test()\n```\n\n### Expected behavior\n\nshould leave just the check mark in the buffer, but instead leaves the check mark and some other symbols in the buffer.\n\n### Nvim version (nvim -v)\n\n0.10.2 \n\n### Vim (not Nvim) behaves the same?\n\ncan't repro since the nvim_buf_set_text command does not exist\n\n### Operating system/version\n\nmacOS 14.6.1\n\n### Terminal name/version\n\nalacritty 0.14.0\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nbrew",
    "closed_at": "2024-12-19T07:21:34Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This is working as intended. An `end_col` of `1` is passed to `nvim_buf_set_text`, so it only replaces the first byte of the character.",
            "created_at": "2024-12-19T07:21:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/31632#issuecomment-2552956053",
            "id": 2552956053,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31632",
            "node_id": "IC_kwDOAPphoM6YKwSV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2552956053/reactions"
            },
            "updated_at": "2024-12-19T07:21:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2552956053",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "ah, so is it up to the consumer of nvim_buf_set_text to count the columns/bytes! Thanks!\n\nI'm writing my plugin in node and I was using \"str.length\" to get the column position, but that just counts code points and not actual byte widths (in case anyone else runs into this too)",
            "created_at": "2024-12-19T07:50:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/31632#issuecomment-2552995932",
            "id": 2552995932,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31632",
            "node_id": "IC_kwDOAPphoM6YK6Bc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2552995932/reactions"
            },
            "updated_at": "2024-12-19T07:50:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2552995932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1186977?v=4",
                "events_url": "https://api.github.com/users/dlants/events{/privacy}",
                "followers_url": "https://api.github.com/users/dlants/followers",
                "following_url": "https://api.github.com/users/dlants/following{/other_user}",
                "gists_url": "https://api.github.com/users/dlants/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dlants",
                "id": 1186977,
                "login": "dlants",
                "node_id": "MDQ6VXNlcjExODY5Nzc=",
                "organizations_url": "https://api.github.com/users/dlants/orgs",
                "received_events_url": "https://api.github.com/users/dlants/received_events",
                "repos_url": "https://api.github.com/users/dlants/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dlants/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dlants/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dlants",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31632/comments",
    "created_at": "2024-12-19T06:57:00Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31632/events",
    "html_url": "https://github.com/neovim/neovim/issues/31632",
    "id": 2749426400,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as usage questions",
            "id": 77997478,
            "name": "closed:question",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:question"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31632/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6j4Org",
    "number": 31632,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31632/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31632/timeline",
    "title": "nvim_buf_set_text incorrect behavior around unicode symbols",
    "updated_at": "2024-12-19T07:55:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31632",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1186977?v=4",
        "events_url": "https://api.github.com/users/dlants/events{/privacy}",
        "followers_url": "https://api.github.com/users/dlants/followers",
        "following_url": "https://api.github.com/users/dlants/following{/other_user}",
        "gists_url": "https://api.github.com/users/dlants/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dlants",
        "id": 1186977,
        "login": "dlants",
        "node_id": "MDQ6VXNlcjExODY5Nzc=",
        "organizations_url": "https://api.github.com/users/dlants/orgs",
        "received_events_url": "https://api.github.com/users/dlants/received_events",
        "repos_url": "https://api.github.com/users/dlants/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dlants/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dlants/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dlants",
        "user_view_type": "public"
    }
}