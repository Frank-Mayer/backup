{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Before implementing `incommand` for `:[range]normal` as more c code, I wanted to see how possible it was to implement as a plugin. The following piece of madness is the result https://github.com/bfredl/nvim-incnormal/blob/master/plugin/incnormal.vim It acually works quite resonable, as a \"safeguard\" it only activates for `:[range]norma ` spelled with exactly 5 letters (not `normal` or `norm` ). \r\n\r\nGiven this, I think a reasonable way forward would be to add stuff to core to make inccommand plugins easier to implement. A checklist:\r\n\r\n- [x] [CmdlineEnter and CmdlineLeave]( https://github.com/neovim/neovim/compare/master...bfredl:cmdlineenter?expand=1)\r\n- [x] Callback for changed text. currently this abuses `g:Nvim_color_cmdline` + timers, which won't scale to more than one plugin.\r\n- [x] Even better: be able to register preview for commands in `cmd_can_preview`, which will invoke callbacks conditionally\r\n- [x] make the dedicated inccomand preview buffer and window accessible by plugin, so each don't need to manage their own. (imagine one implementation for `g/stuff` and one other takes over the buffer for `g/stuff/normal xx`)\r\n- [x] parsing commands without executing them would help (so one can identify  `:g/`, `g/stuff[/]` and `g/stuff/normal xx` without regex trickery)\r\n- [ ] make more info of command execution available programatically. for instance for `:normal` list of changed lines and final cursor positions. I imagine this will have other uses as well.\r\n- [x] #4419 would add convenience, though it can be faked with `<Expr>`+ timers\r\n- [x] `:undo!` to not mess up `g+`/`g-` history\r\n- [x] command for `undo_and_forget` => `:undo!` in https://github.com/neovim/neovim/pull/18157\r\n\r\n",
    "closed_at": "2022-05-31T15:44:13Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Probably makes sense to wait for @ZyX-I parser.",
            "created_at": "2017-10-08T13:23:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/7370#issuecomment-335006354",
            "id": 335006354,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7370",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTAwNjM1NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/335006354/reactions"
            },
            "updated_at": "2017-10-08T13:23:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/335006354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk I didn't mean this to be a single PR that \"enables incommand in plugins\" and thus should \"wait for the best time\". Rather these plugins are already in some sense possible, if quite hacky and duplicated logic. We should instead think in small stepwise improvements.  A callback for \"cmdline changed\" conditioned  on what would be the command to execute is already possible with the current limited parsing abilities, after all incommand does this to identify substitution. ( CmdlineTextChanged is quite possible, but I wouldn't like 10 autocomands all trying to parse the cmdline in different ways at the same time)",
            "created_at": "2017-10-08T14:08:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/7370#issuecomment-335009059",
            "id": 335009059,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7370",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTAwOTA1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/335009059/reactions"
            },
            "updated_at": "2017-10-08T14:08:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/335009059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Before implementing `incommand` for `:[range]normal` as more c code, I wanted to see how possible it was to implement as a plugin. The following piece of madness is the result https://github.com/bfredl/nvim-incnormal/blob/master/plugin/incnormal.vim It acually works quite resonable, as a \"safeguard\" it only activates for `:[range]norma ` spelled with exactly 5 letters (not `normal` or `norm` ).\r\n> \r\n> Given this, I think a reasonable way forward would be to add stuff to core to make inccommand plugins easier to implement. A checklist:\r\n> \r\n>     * [x]  [CmdlineEnter and CmdlineLeave](https://github.com/neovim/neovim/compare/master...bfredl:cmdlineenter?expand=1)\r\n> \r\n>     * [x]  Callback for changed text. currently this abuses `g:Nvim_color_cmdline` + timers, which won't scale to more than one plugin.\r\n> \r\n>     * [ ]  Even better: be able to register preview for commands in `cmd_can_preview`, which will invoke callbacks conditionally\r\n> \r\n>     * [x]  [[RFC] implement <Cmd> key #4419](https://github.com/neovim/neovim/pull/4419) would add convenience, though it can be faked with `<Expr>`+ timers\r\n> \r\n>     * [ ]  make the dedicated inccomand preview buffer and window accessible by plugin, so each don't need to manage their own. (imagine one implementation for `g/stuff` and one other takes over the buffer for `g/stuff/normal xx`)\r\n> \r\n>     * [ ]  `undo_and_forget` to not mess up `g+`/`g-` history\r\n> \r\n>     * [ ]  parsing commands without executing them would help (so one can identify  `:g/`, `g/stuff[/]` and `g/stuff/normal xx` without regex trickery)\r\n> \r\n>     * [ ]  make more info of command execution available programatically. for instance for `:normal` list of changed lines and final cursor positions. I imagine this will have other uses as well.\r\n\r\nUpdate, command for `undo_and_forget` added in the form of `undo!` in #18157 ",
            "created_at": "2022-04-23T17:27:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/7370#issuecomment-1107538748",
            "id": 1107538748,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/7370",
            "node_id": "IC_kwDOAPphoM5CA7M8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1107538748/reactions"
            },
            "updated_at": "2022-04-23T18:42:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1107538748",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/7370/comments",
    "created_at": "2017-10-08T12:39:40Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/7370/events",
    "html_url": "https://github.com/neovim/neovim/issues/7370",
    "id": 263714968,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/7370/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2022-10-01T21:48:50Z",
        "closed_issues": 159,
        "created_at": "2022-08-18T10:21:07Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2022-09-30T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/32",
        "id": 8320818,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/32/labels",
        "node_id": "MI_kwDOAPphoM4Afvcy",
        "number": 32,
        "open_issues": 0,
        "state": "closed",
        "title": "0.8",
        "updated_at": "2025-01-02T00:15:39Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/32"
    },
    "node_id": "MDU6SXNzdWUyNjM3MTQ5Njg=",
    "number": 7370,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 4,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 4,
        "url": "https://api.github.com/repos/neovim/neovim/issues/7370/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/7370/timeline",
    "title": "inccommand: plugin support ( :[range]normal , :global, ...)",
    "updated_at": "2025-01-02T00:15:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/7370",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    }
}