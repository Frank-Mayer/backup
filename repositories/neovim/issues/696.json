{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "I'm (sort-of) interested in getting this working under VS2013, so I'd have a native-built neovim instead of relying on MinGW or similar (although this may be a valid goal as well)\n\nI'd like to collate issues here that are stopping compilation of neovim on Windows on VS2013, in lieu of GitHub having proper blocker/issue dependency support\n\nFor now running `cmake -G Visual Studio 12` results in:\n\n```\nCMake Error at C:/Program Files (x86)/CMake 2.8/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake:108 (message):\nCould NOT find LibUV (missing: LIBUV_LIBRARY LIBUV_INCLUDE_DIR)\nCall Stack (most recent call first):\nC:/Program Files (x86)/CMake 2.8/share/cmake-2.8/Modules   /FindPackageHandleStandardArgs.cmake:315 (_FPHSA_FAILURE_MESSAGE)\ncmake/FindLibUV.cmake:90 (find_package_handle_standard_args)\nCMakeLists.txt:51 (find_package)\n```\n\nTodo:\n- [x] Attempt to build neovim using cmake and VS2013\n- [x] Build & install libuv somewhere that cmake can find it\n- [ ] Port if_cscope to use libuv (https://github.com/neovim/neovim/pull/810#issuecomment-45277957)\n- [x] start thinking about how to split platform code (os_unix.c os_msvc.c etc)\n- [ ] Add bracket to if statements (maybe?)\n- [ ] Start splitting compiler options in CMake\n- [ ] Refactor vim_FulllName\n- [ ] Add include guards: sys/time.h unistd.h\n- [ ] Reorder includes here and there, i.e. ensure platform includes and/or vim.h are included before anything else\n- [ ] Document the above\n- [ ] ???\n- [ ] Profit\n\nThanks to @equalsraf  for the above\n\n<bountysource-plugin>\n\n---\n\nWant to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/2022535-rfc-master-issue-compiling-under-windows-vs2013?utm_campaign=plugin&utm_content=tracker%2F461131&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F461131&utm_medium=issues&utm_source=github).\n</bountysource-plugin>\n",
    "closed_at": "2015-04-14T02:44:10Z",
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, I thought cmake tried to download libuv if not present, or did that change, @jszakmeister?\n",
            "created_at": "2014-05-07T14:20:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-42432623",
            "id": 42432623,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDMyNjIz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42432623/reactions"
            },
            "updated_at": "2014-05-07T14:20:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42432623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It's a two-stage process.  The third-party area contains the bits to download the deps, and the top-level is used to build and attempts to discover the correct bits.  Now, because it's Windows we might need to alter the build step for some dependencies.  So there might be several layers of stuff to get through.\n",
            "created_at": "2014-05-07T15:14:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-42439965",
            "id": 42439965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDM5OTY1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42439965/reactions"
            },
            "updated_at": "2014-05-07T15:14:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42439965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/448087?v=4",
                "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}",
                "followers_url": "https://api.github.com/users/jszakmeister/followers",
                "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}",
                "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jszakmeister",
                "id": 448087,
                "login": "jszakmeister",
                "node_id": "MDQ6VXNlcjQ0ODA4Nw==",
                "organizations_url": "https://api.github.com/users/jszakmeister/orgs",
                "received_events_url": "https://api.github.com/users/jszakmeister/received_events",
                "repos_url": "https://api.github.com/users/jszakmeister/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jszakmeister"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "see also: https://github.com/neovim/neovim/issues/328\n\nI was planning on re-opening that issue, but this will do.\n",
            "created_at": "2014-05-07T17:24:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-42456697",
            "id": 42456697,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDU2Njk3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42456697/reactions"
            },
            "updated_at": "2014-05-07T17:24:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42456697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk - apologies for the duplication. Maybe you could rename your issue a little (Building libuv on MinGW?) and I'll add it to the task list?\n",
            "created_at": "2014-05-08T00:00:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-42497857",
            "id": 42497857,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk3ODU3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42497857/reactions"
            },
            "updated_at": "2014-05-08T00:00:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42497857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "#328 was never about MinGW specifically, it was just about building on Windows in general. @equalsraf left some notes on that issue that may save some time for anyone that wants to continue where s/he left off.\n\nBuilding libuv on MinGW is not a goal as far as I know. tarruda once pointed out the excellent fact that terminal frontends running in cygwin (for example) can send RPC requests to a nvim binary that was built in MSVC. So there is not much need for a MinGW build. Unless someone wants to work with libuv upstream, I consider that issue tabled.\n",
            "created_at": "2014-05-08T00:13:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-42498779",
            "id": 42498779,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk4Nzc5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42498779/reactions"
            },
            "updated_at": "2014-05-08T00:13:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42498779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Understood.\n",
            "created_at": "2014-05-08T00:22:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-42499255",
            "id": 42499255,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk5MjU1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42499255/reactions"
            },
            "updated_at": "2014-05-08T00:22:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42499255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Cheers\n\nSome notes in case someone is trying this as well. For MSVC I keep a branch with some fixes in my own fork of neovim (branch tb-windows2)\n- Windows has its own environment variables for libraries and include folders (LIB and INCLUDE) point those to libuv.lib, etc\n- I've built libuv from source and CMake can find it with some minor changes to FindLibUv.cmake\n- For curses I just used GNU-win32\n- Minor changes to LibIntl (libnames same as llibuv)\n- Building msgpack-c can be a problem in Windows (it assumes a an old version of vcbuild) I just cooked my own CMakeLists.txt to build it (equalsraf/msgpack-c branch:tb-win-cmake)\n- I Installed luajit and luarocks (along with lpeg and lua-cmsgpack) - just followed the instructions (maybe there is a package out there?)\n- I had to disable error checking compile flags for MSVC\n\nCurrently it starts building but immediately fails for various reasons\n- It tries to include os_unix_defs.h which in turn goes for sys/params.h\n- Same for sys/select.h\n- It throws a generic syntax error when dealing with the **restricted** keyword in garray.h\n\nNothing too surprising there. I'll try to do a more thorough check when I get some more time on windows.\n",
            "created_at": "2014-06-01T17:52:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44783984",
            "id": 44783984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzgzOTg0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44783984/reactions"
            },
            "updated_at": "2014-06-01T17:52:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44783984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It throws a generic syntax error when dealing with the restricted keyword in garray.h\n\nGah... I figured as much. Does this happen even with MSVC 2013? I was under the impression they were [trying to do much better than before](http://blogs.msdn.com/b/vcblog/archive/2013/07/19/c99-library-support-in-visual-studio-2013.aspx). They could've at least aliased `__restrict` to `restrict`. As far as I can see, `__restrict` has been in msvc since version 10: http://msdn.microsoft.com/en-us/library/5ft82fed.aspx.\n\nWe could perhaps do `#define restrict __restrict` for msvc only...\n\n**UPDATE**: found a blog suggesting a workaround: http://diaryofagraphicsprogrammer.blogspot.be/2014/01/visual-studio-2013-c99-support.html\n",
            "created_at": "2014-06-01T18:00:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44784199",
            "id": 44784199,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg0MTk5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44784199/reactions"
            },
            "updated_at": "2014-06-01T18:01:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44784199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "- yes MSVC 2013\n- The #define seems to work as intended\n",
            "created_at": "2014-06-01T19:04:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44785902",
            "id": 44785902,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg1OTAy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44785902/reactions"
            },
            "updated_at": "2014-06-01T19:04:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44785902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I almost forgot, If you encounter errors with an undefined struct timeval just include uv.h - it knows where to find it.\n",
            "created_at": "2014-06-01T19:06:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44785973",
            "id": 44785973,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg1OTcz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44785973/reactions"
            },
            "updated_at": "2014-06-02T14:37:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44785973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also MSVC does not seem to handle inline\n\n```\n#define inline __inline\n```\n",
            "created_at": "2014-06-01T19:14:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44786169",
            "id": 44786169,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg2MTY5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44786169/reactions"
            },
            "updated_at": "2014-06-01T19:14:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44786169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That can thankfully all be wrapped up in some special msvc fixes define\nblocks.\n\nAm Sonntag, 1. Juni 2014 schrieb Rui Abreu Ferreira :\n\n> Also MSVC does not seem to handle inline\n> \n> #define inline __inline\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/neovim/neovim/issues/696#issuecomment-44786169.\n",
            "created_at": "2014-06-01T19:15:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44786210",
            "id": 44786210,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg2MjEw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44786210/reactions"
            },
            "updated_at": "2014-06-01T19:15:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44786210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Got as far as edit.c until I started hitting some MSVC oddities\n\n```\nsrc\\nvim\\edit.c(2588) : error C2275: 'size_t' : illegal use of this type as an expression\n```\n\nwhich apparently means that the declaration of the variable is not at the start of the function (i.e. it assumes C89), moving the declaration to the start does indeed make the error go away.\n\nI assumed MSVC support for C99 would be better than this. Or maybe I'm missing some compiler flag.\n",
            "created_at": "2014-06-01T21:24:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44789836",
            "id": 44789836,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg5ODM2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44789836/reactions"
            },
            "updated_at": "2014-06-01T21:24:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44789836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> which apparently means that the declaration of the variable is not at the start of the function (i.e. it assumes C89), moving the declaration to the start does indeed make the error go away.\n\nThat's... very strange. Perhaps it does this in C-mode and somehow all these improvements that were listed in that article I linked are only when compiling as C++ (though that would make very little sense). How does it do if you force it to compile as C++? (**EDIT**: nevermind, we use too many things that won't compile under C++ anyway).\n",
            "created_at": "2014-06-01T21:26:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44789878",
            "id": 44789878,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg5ODc4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44789878/reactions"
            },
            "updated_at": "2014-06-01T21:27:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44789878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In C++ mode I get some security errors that fail earlier, like\n\n```\n  src\\nvim\\buffer.c(1366) : error C2440: '=' : cannot convert from 'void *' to 'buf_T *'\n```\n\nLet me go and add a bunch of explicit casts ...\n",
            "created_at": "2014-06-01T21:28:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44789920",
            "id": 44789920,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg5OTIw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44789920/reactions"
            },
            "updated_at": "2014-06-01T21:28:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44789920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "No need, you will need 100's of casts, better not to even try.\n\nMaybe this can give us a head start: http://stackoverflow.com/questions/2938460/how-do-i-know-whether-c89-or-c99-is-applied-by-cl-exe?rq=1\n",
            "created_at": "2014-06-01T21:28:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44789936",
            "id": 44789936,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg5OTM2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44789936/reactions"
            },
            "updated_at": "2014-06-01T21:28:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44789936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Another post worth reading: http://blogs.msdn.com/b/vcblog/archive/2013/06/28/c-11-14-stl-features-fixes-and-breaking-changes-in-vs-2013.aspx\n\nIt mentions:\n\n> Additionally, some C99 Core Language features will be implemented in 2013 RTM:\n> - C99 _Bool\n> - C99 compound literals\n> - C99 designated initializers\n> - C99 variable declarations\n\nThis seems to be what we need. Now we just need to find out how to activate that.\n",
            "created_at": "2014-06-01T21:36:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44790114",
            "id": 44790114,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzkwMTE0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44790114/reactions"
            },
            "updated_at": "2014-06-01T21:36:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44790114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "NONE",
            "body": "FWIW I find it a lot easier to compile modern C as C++ with MSVC.\n",
            "created_at": "2014-06-01T21:54:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44790549",
            "id": 44790549,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzkwNTQ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44790549/reactions"
            },
            "updated_at": "2014-06-01T21:54:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44790549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/454895?v=4",
                "events_url": "https://api.github.com/users/jamesamcl/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamesamcl/followers",
                "following_url": "https://api.github.com/users/jamesamcl/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesamcl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamesamcl",
                "id": 454895,
                "login": "jamesamcl",
                "node_id": "MDQ6VXNlcjQ1NDg5NQ==",
                "organizations_url": "https://api.github.com/users/jamesamcl/orgs",
                "received_events_url": "https://api.github.com/users/jamesamcl/received_events",
                "repos_url": "https://api.github.com/users/jamesamcl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamesamcl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesamcl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamesamcl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> FWIW I find it a lot easier to compile modern C as C++ with MSVC.\n\nThere are some things that we use that will probably make msvc choke in C++ mode, namely:\n1. Compound literals\n2. Designated initializers\n3. Not casting `void *` to the correct type (implicit `void` pointer cast)\n\nSo I don't think point-blank compiling as C++ will work.\n",
            "created_at": "2014-06-01T21:56:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44790598",
            "id": 44790598,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzkwNTk4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44790598/reactions"
            },
            "updated_at": "2014-06-01T21:56:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44790598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "NONE",
            "body": "@aktau for _Bool, it appears something like https://bitbucket.org/cffi/cffi/commits/d993a73f4d604bb34b86e92aea06c48545f7a287 will work. Everything else I'm not sure yet.\n",
            "created_at": "2014-06-03T07:40:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44928861",
            "id": 44928861,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTI4ODYx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44928861/reactions"
            },
            "updated_at": "2014-06-03T07:40:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44928861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "NONE",
            "body": "Could someone let me know what I should update in the task list for this issue?\n",
            "created_at": "2014-06-03T07:42:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-44928977",
            "id": 44928977,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTI4OTc3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44928977/reactions"
            },
            "updated_at": "2014-06-03T07:42:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44928977",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's some new info on the Visual Studio 14 beta: http://blogs.msdn.com/b/vcblog/archive/2014/06/03/visual-studio-14-ctp.aspx\n\nThey implemented most of the C99 library now. No idea if they did anything about all the other things that prevent compilation though.\n\n> Could someone let me know what I should update in the task list for this issue?\n\n@voltagex better ask @equalsraf, he seems to have a handle on things.\n",
            "created_at": "2014-06-03T21:20:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45022092",
            "id": 45022092,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDIyMDky",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45022092/reactions"
            },
            "updated_at": "2014-06-03T21:20:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45022092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  for _Bool, it appears something like https://bitbucket.org/cffi/cffi/commits/d993a73f4d604bb34b86e92aea06c48545f7a287 will work. \n\n@voltagex We decided in #287 #328 that we would only support MSVC 2013+, which already provides `bool` for example. \n",
            "created_at": "2014-06-03T21:34:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45023699",
            "id": 45023699,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDIzNjk5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45023699/reactions"
            },
            "updated_at": "2014-06-03T21:35:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45023699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "By the way, I posted a comment about this on HN. Some answers are intriguing (such as clang-cl, which I had heard about before but didn't work for me at that time, about 6 months ago):\n\nhttps://news.ycombinator.com/item?id=7874866\n",
            "created_at": "2014-06-11T18:06:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45777823",
            "id": 45777823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzc3ODIz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45777823/reactions"
            },
            "updated_at": "2014-06-11T18:06:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45777823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "clang-cl original announcement: http://lists.cs.uiuc.edu/pipermail/cfe-dev/2013-June/030404.html\n\n>  Consider the use case of generating a Visual Studio project file that uses clang for diagnostics and or codegen\n\nLooks cool, but what is the advantage if we still need cl.exe and Windows headers? \n",
            "created_at": "2014-06-11T19:37:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45789087",
            "id": 45789087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg5MDg3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45789087/reactions"
            },
            "updated_at": "2014-06-11T19:37:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45789087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk The advantage would be that we could build C99 code which we cant do with MSVC (and apparently never will).\n\n@aktau We don't necessarily need clang-cl, hopefully clang can be used directly. Some quick testing on my end using\n\n```\ncmake-gui -DCMAKE_C_COMPILER=clang\n```\n\nseems to work (clang+nmake :D). More importantly (at least for the clang build I'm using) is to target the correct arch\n\n```\nadd_definitions(-target i686-windows-msvc)\n```\n\notherwise I think it assumes some kind of gnu/mingw target and fails to find all the headers. \n\nI didn't test any further, cmake started building but failed with some straightforward errors about uid_t and timeval.\n\nPS: the clang output alone is well worth the effort of installing clang :D\n",
            "created_at": "2014-06-11T22:06:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45806447",
            "id": 45806447,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODA2NDQ3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45806447/reactions"
            },
            "updated_at": "2014-06-11T22:06:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45806447",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> we could build C99 code which we cant do with MSVC (and apparently never will).\n\nAFAIK if we provide the missing headers (`stdint.h`, `inttypes.h`, ...) there's no huge barrier to building on MSVC 2013+. Won't we need to provide those headers with clang-cl?\n\n> We don't necessarily need clang-cl, hopefully clang can be used directly\n\nThat would be great.\n",
            "created_at": "2014-06-11T22:32:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45808934",
            "id": 45808934,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODA4OTM0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45808934/reactions"
            },
            "updated_at": "2014-06-11T22:32:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45808934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is as far as I got using clang (with some changes from my branch)\n\n```\n\n[  2%] Building C object src/nvim/CMakeFiles/nvim.dir/eval.c.obj\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c:8803:35: error: implicit declaration of function 'open' is invalid in\n      C99 [-Werror,-Wimplicit-function-declaration]\n  if (*p && !os_isdir(p) && (fd = mch_open((char *)p,\n                                  ^\nC:\\Users\\raf\\dev\\neovim\\src\\nvim/macros.h:101:33: note: expanded from macro 'mch_open'\n#   define mch_open(n, m, p)    open((n), (m), (p))\n                                ^\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c:8803:35: note: did you mean 'fopen'?\nC:\\Users\\raf\\dev\\neovim\\src\\nvim/macros.h:101:33: note: expanded from macro 'mch_open'\n#   define mch_open(n, m, p)    open((n), (m), (p))\n                                ^\nC:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\INCLUDE\\stdio.h:211:72: note: 'fopen' declared here\n_Check_return_ _CRT_INSECURE_DEPRECATE(fopen_s) _CRTIMP FILE * __cdecl fopen(_In_z_ const char * _File...\n                                                                       ^\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c:8806:5: error: implicit declaration of function 'close' is invalid in\n      C99 [-Werror,-Wimplicit-function-declaration]\n    close(fd);\n    ^\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c:8806:5: note: did you mean 'fclose'?\nC:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\INCLUDE\\stdio.h:184:40: note: 'fclose' declared here\n_Check_return_opt_ _CRTIMP int __cdecl fclose(_Inout_ FILE * _File);\n                                       ^\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c:12406:15: error: implicit declaration of function 'readlink' is\n      invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        len = readlink((char *)p, (char *)buf, MAXPATHL);\n```\n\nFunny fact I was not aware of, open/close are deprecated in [MSVC 2013](http://msdn.microsoft.com/en-us/library/ms235491.aspx).\n\nMore importantly\n- mch_open does not look very portable\n- we need a **os_file_is_readable()** in os/fs.c to fix eval.c:f_file_readable() \n",
            "created_at": "2014-06-11T23:11:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45812201",
            "id": 45812201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODEyMjAx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45812201/reactions"
            },
            "updated_at": "2014-06-11T23:11:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45812201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> mch_open does not look very portable ... we need a os_file_is_readable\n\nYes, we're still in the middle of #133. I actually plan to work on that tonight.\n",
            "created_at": "2014-06-11T23:25:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45813245",
            "id": 45813245,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODEzMjQ1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45813245/reactions"
            },
            "updated_at": "2014-06-11T23:25:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45813245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Stopping for the night, this is my current error\n\n```\n[ 12%] Building C object src/nvim/CMakeFiles/nvim.dir/ex_cmds2.c.obj\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\ex_cmds2.c:730:3: error: implicit declaration of function 'gettimeofday' is\n      invalid in C99 [-Werror,-Wimplicit-function-declaration]\n  gettimeofday(tm, NULL);\n```\n\nI took a quick peek at the Vim source code. The equivalent function would be [QueryPerformanceCounter()](http://msdn.microsoft.com/en-us/library/windows/desktop/ms644904%28v=vs.85%29.aspx). And proftime_T would be defined as _LARGE_INTEGER_.\n",
            "created_at": "2014-06-11T23:28:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45813474",
            "id": 45813474,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODEzNDc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45813474/reactions"
            },
            "updated_at": "2014-06-11T23:28:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45813474",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Haven't looked, but it surprises me a little that libuv doesn't abstract timeing functions. But for inspiration we could looks at either SDL2's sdl_getticks or how the node.js time functions are implemented, then.\n\nIt's clear we still need to perform some cross-platform abstraction, but it all seems very manageable. Already thanks for the awesome work, @equalsraf! If you find things like that, which are clearly separated (like timeing functions), I think it's best to create a new issue and reference this :).\n\n**UPDATE**: Grepping for QueryPerformanceCounter in the libuv source tree shows me that it's used in `uv_hrtime`, so we might be able to use that :). You could mention that in the issue.\n",
            "created_at": "2014-06-12T08:34:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-45842952",
            "id": 45842952,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODQyOTUy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45842952/reactions"
            },
            "updated_at": "2014-06-12T09:02:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/45842952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> mch_open does not look very portable ... we need a os_file_is_readable\n\nWorking on this here: #846\n",
            "created_at": "2014-06-14T17:39:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46094437",
            "id": 46094437,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDk0NDM3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46094437/reactions"
            },
            "updated_at": "2014-06-14T17:39:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46094437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It seems the header file generator (gendeclarations.lua) is not working properly in windows the call to io.popen does not escape the command causing it to fail. Even worse is that CMake continues as if nothing happened.\n\nMy quick fix was to change the script to use [[]]\n\n```\nlocal cmd = cpp .. ' -DDO_NOT_DEFINE_EMPTY_ATTRIBUTES ' .. fname\nlocal pipe = io.popen([[cmd]], 'r')\n```\n\nBut I am not sure this is working properly, when calling cmake+nmake the process seems to just block and I see no other reason why it should. When invoked from ninja it seems to work.\n",
            "created_at": "2014-06-19T23:15:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46628772",
            "id": 46628772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjI4Nzcy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46628772/reactions"
            },
            "updated_at": "2014-06-19T23:15:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46628772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nevermind the fix, there is something else wrong with the headers\n",
            "created_at": "2014-06-19T23:27:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46629604",
            "id": 46629604,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjI5NjA0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46629604/reactions"
            },
            "updated_at": "2014-06-19T23:27:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46629604",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yep the escaping is still messed up. The pipe read is returning _nil_ and the script continues and ends up generating headers without declarations. Not quite sure who to ping on this #710 @ZyX-I maybe?\n",
            "created_at": "2014-06-20T00:06:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46632218",
            "id": 46632218,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjMyMjE4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46632218/reactions"
            },
            "updated_at": "2014-06-20T00:06:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46632218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@equalsraf `[[cmd]]` is a string `cmd`. `[[]]` is just another syntax for strings (usually used for multiline strings), it does not interpolate variables and even if it did I do not understand what you were expecting as a result.\n\nSo it blocks because you are running `cmd.exe` (through `cmd.exe` I believe) _without supplying it any arguments_.\n",
            "created_at": "2014-06-20T04:23:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46643745",
            "id": 46643745,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQzNzQ1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46643745/reactions"
            },
            "updated_at": "2014-06-20T04:23:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46643745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Why do you think that “call to io.popen does not escape the command”? If you are trying to compile with Visual Studio compiler the problem must be with arguments (AFAIR it does not support `-D` and `-I`, does it?). Maybe with escaping of paths (I know no lua equivalent to VimL `shellescape()`, so did not use it).\n",
            "created_at": "2014-06-20T04:34:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46644115",
            "id": 46644115,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ0MTE1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46644115/reactions"
            },
            "updated_at": "2014-06-20T04:34:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46644115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If you are not trying to compile with MSVC this may be a problem with escaping command arguments, not the command itself. One additional problem though: while name of the preprocessed file is added by lua and may be escaped there include directories are provided by cmake and should be escaped there.\n",
            "created_at": "2014-06-20T04:55:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46644829",
            "id": 46644829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ0ODI5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46644829/reactions"
            },
            "updated_at": "2014-06-20T04:55:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46644829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Try the following patch for use with mingw and paths with spaces:\n\n``` Patch\ndiff --git a/scripts/gendeclarations.lua b/scripts/gendeclarations.lua\nindex d89031b..aa3e7d5 100755\n--- a/scripts/gendeclarations.lua\n+++ b/scripts/gendeclarations.lua\n@@ -3,9 +3,13 @@\n local fname = arg[1]\n local static_fname = arg[2]\n local non_static_fname = arg[3]\n-local cpp = arg[4]\n\n-cpp = cpp:gsub(' %-DINCLUDE_GENERATED_DECLARATIONS ', ' ')\n+local cmdarr = {}\n+for i = 4,#arg-1 do\n+  cmdarr[#cmdarr + 1] = arg[i]\n+end\n+\n+local cflags = arg[#arg]\n\n local lpeg = require('lpeg')\n\n@@ -153,7 +157,16 @@ if fname == '--help' then\n   os.exit()\n end\n\n-local pipe = io.popen(cpp .. ' -DDO_NOT_DEFINE_EMPTY_ATTRIBUTES ' .. fname, 'r')\n+shell_escape = function(s)\n+  return '\"' .. s:gsub('([\"\\\\])', '\\\\%1') .. '\"'\n+end\n+\n+local cmd = ''\n+for i, v in ipairs(cmdarr) do\n+  cmd = cmd .. ' ' .. shell_escape(v)\n+end\n+cmd = cmd .. ' ' .. shell_escape(fname) .. ' ' .. cflags\n+local pipe = io.popen(cmd, 'r')\n local text = pipe:read('*a')\n if not pipe:close() then\n   os.exit(2)\ndiff --git a/src/nvim/CMakeLists.txt b/src/nvim/CMakeLists.txt\nindex 32f3ddb..37a3e3e 100644\n--- a/src/nvim/CMakeLists.txt\n+++ b/src/nvim/CMakeLists.txt\n@@ -95,15 +95,16 @@ if(CMAKE_C_COMPILER_ID MATCHES \"Clang\")\n endif()\n\n get_directory_property(gen_cdefs COMPILE_DEFINITIONS)\n-foreach(gen_cdef ${gen_cdefs})\n-  set(gen_cflags \"${gen_cflags} -D${gen_cdef}\")\n+foreach(gen_cdef ${gen_cdefs} DO_NOT_DEFINE_EMPTY_ATTRIBUTES)\n+  if(NOT \"${gen_cdef}\" EQUAL \"INCLUDE_GENERATED_DECLARATIONS\")\n+    list(APPEND gen_cflags \"-D${gen_cdef}\")\n+  endif()\n endforeach()\n\n get_directory_property(gen_includes INCLUDE_DIRECTORIES)\n foreach(gen_include ${gen_includes})\n-  set(gen_cflags \"${gen_cflags} -I${gen_include}\")\n+  list(APPEND gen_cflags \"-I${gen_include}\")\n endforeach()\n-set(gen_cflags \"${gen_cflags} ${CMAKE_C_FLAGS}\")\n\n foreach(sfile ${NEOVIM_SOURCES}\n               \"${PROJECT_SOURCE_DIR}/src/nvim/regexp_nfa.c\"\n@@ -136,8 +137,8 @@ foreach(sfile ${NEOVIM_SOURCES}\n   add_custom_command(\n     OUTPUT ${gfs}\n     COMMAND \"${LUA_PRG}\" \"${HEADER_GENERATOR}\"\n-                             \"${sfile}\" \"${gf1}\" \"${gf2}\"\n-                             \"${CMAKE_C_COMPILER} ${gen_cflags} -E\"\n+                         \"${sfile}\" \"${gf1}\" \"${gf2}\"\n+                          ${CMAKE_C_COMPILER} ${gen_cflags} -E ${CMAKE_C_FLAGS}\n     DEPENDS \"${HEADER_GENERATOR}\" \"${sfile}\"\n     )\n   list(APPEND NEOVIM_GENERATED_SOURCES ${gfs})\n```\n",
            "created_at": "2014-06-20T05:04:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46645115",
            "id": 46645115,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjQ1MTE1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46645115/reactions"
            },
            "updated_at": "2014-06-20T05:04:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46645115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I am away from my windows machine so I can not test right away. Some clarification follows (apologies on the terse description above - it was late ;D)\n- Running this with clang, the piped command is valid and I can run it if I add some quotes around all the arguments\n- ${CMAKE_C_COMPILER} has spaces and the pipe was failing with \"C:/Program is not a valid command\" i.e. the shell invoked by the pipe considers C:/Program to be command instead of C:/Program Files (x86)/.../clang.exe\n- As you say the lua script is probably not to blame for the escaping, CMake probably is\n- My only problems with the script was that if the command fails it will still generate the headers, but without any declarations inside\n- i.e. all headers are _generated_ - CMake should fail on first error - otherwise we only notice the issue when we start seeing loads of implicit declaration errors on compile\n",
            "created_at": "2014-06-20T08:08:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46654335",
            "id": 46654335,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjU0MzM1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46654335/reactions"
            },
            "updated_at": "2014-06-20T08:08:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46654335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn June 20, 2014 12:08:34 PM GMT+03:00, Rui Abreu Ferreira notifications@github.com wrote:\n\n> I am away from my windows machine so I can not test right away. Some\n> clarification follows (apologies on the terse description above - it\n> was late ;D)\n> - Running this with clang, the piped command is valid and I can run it\n>   if I add some quotes around all the arguments\n> - ${CMAKE_C_COMPILER} has spaces and the pipe was failing with\n>   \"C:/Program is not a valid command\" i.e. the shell invoked by the pipe\n>   considers C:/Program to be command instead of C:/Program Files\n>   (x86)/.../clang.exe\n> - As you say the lua script is probably not to blame for the escaping,\n>   CMake probably is\n\nActually, my CMake code, not CMake itself. This patch should have fixed it: it now sends path to compiler and compiler arguments as a separate arguments, relying on CMake doing the right job. I had to escape this with lua then when constructing pipe command.\n\n> - My only problems with the script was that if the command fails it\n>   will still generate the headers, but without any declarations inside\n\nLua has surprisingly bad standard library, especially considering io.pipe:\n1. You cannot create a bidirectional pipe.\n2. You cannot know exit code (fixed in lua 5.2).\n3. You cannot omit using shell and there is no shellescape().\n4. You cannot get stderr separately from stdout. You really cannot get stderr at all: the only option I know is redirecting stderr somewhere (e.g. to stdout) and that is done by shell, not lua.\n\nI think I will add a patch which checks what pipe:read() returned (i.e. whether it returned nil or an empty string), but AFAIR there are cases when clang fails, yet generating some output.\n\n> - i.e. all headers are _generated_ - CMake should fail on first error -\n>   otherwise we only notice the issue when we start seeing loads of\n>   implicit declaration errors on compile\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/neovim/neovim/issues/696#issuecomment-46654335\n\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQJNBAEBCgA3BQJTo/SyMBwfMDI7PjIgHTg6PjswOSAQOzU6QTA9NEA+MjhHIDxr\ncC1wYXZAeWFuZGV4LnJ1PgAKCRBu+P2/AXZZInAkD/wJ7YJpbV7DmfqO16cVDOFR\n/qkuxUTG/DWR9AXWRPXkPHM9LhNLRV2UeY3aJYsp/TBjvxn8NpWzOrVzuG4ps2j1\nSpy4owyrWF3n7IfxXJwMggRjy75ka6Bk9TgvxlXOgib4GjzZ6fuvYjQkQ5dWV68z\nm238TVbHxvJ7FFeZcOQtxgFuniE5VorsTSJNEz3o9nmHXII6Yb5wFur0F/2/Om1n\nN5EoZCcVbYNP7VDK3xQtOeSwQaZ3egaELY09mEEKGiXAeeBeIApfyKfMs7rV9AYd\ncV1cW4mY+PzEUOmCRxa/N9+0cVRmqchLTkNzcbcC4DQrTGuJTHZK+GPTA3Con8XL\nHeBYmYVjro2Bm/onPGx5pRF0l2XWqt2W1pc2a2YocBJCFiGm8Nyv59U10EvGJywr\n16fFacVpd541tJ36da76Rg+vjkCPU51+G4h4Uto6KGgpsz3UYLLNR0tyo8gtRZ/t\nFA5onGbp7rcuKyaUQF/VRmkj0Ax4E0SBZmLNgF7YCzrmvNdldcHR4/R36aIXnluG\nVGVyxwhnvtIy/LUU0ETgj9Z6I4oAepXJBF/P4F7hkDfKsNdIgTaQ7t3bEchKQWdq\nv+Z0uvmhxfK8YFTRZ7E2rTtxWAMi2nGqoERm+kpWmPeBtNdbY9fShEPgwBmW87ZP\nR4DTt8c7oQyX8TFhUP/dYw==\n=+U/Q\n-----END PGP SIGNATURE-----\n",
            "created_at": "2014-06-20T08:45:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46657207",
            "id": 46657207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjU3MjA3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46657207/reactions"
            },
            "updated_at": "2014-06-20T08:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46657207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Would it be better if we did the call to the compiler in CMake?\n\ni.e. call clang -E from cmake and save the output in a temporary file - and then call the lua script only if we were sure the call succeed. Not sure how hard this would be with CMake though.\n",
            "created_at": "2014-06-20T09:04:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46658690",
            "id": 46658690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjU4Njkw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46658690/reactions"
            },
            "updated_at": "2014-06-20T09:04:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46658690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nOn June 20, 2014 1:05:20 PM GMT+03:00, Rui Abreu Ferreira notifications@github.com wrote:\n\n> Would it be better if we did the call to the compiler in CMake?\n> \n> i.e. call clang -E from cmake and save the output in a temporary file -\n> and then call the lua script only if we were sure the call succeed. Not\n> sure how hard this would be with CMake though.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/neovim/neovim/issues/696#issuecomment-46658690\n\nMaybe. It is not needed to save output though:\n\n```\nclang -E -o foo.c\n```\n\nsaves output in foo.c. Have not tested with other compilers, but I assume they have identical behavior.\n\nChanging code to behave this way seems to be pretty trivial, though I have not thought about using CMake for this task.\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQJNBAEBCgA3BQJTo/vbMBwfMDI7PjIgHTg6PjswOSAQOzU6QTA9NEA+MjhHIDxr\ncC1wYXZAeWFuZGV4LnJ1PgAKCRBu+P2/AXZZIpHoD/9BWQ+bzs8ofR9QUDiM4OyP\nqDWk8UXJQ3uuT3ZPMZXrv9tOjFr2qkk3TYwn1Y8qUMoZbq5rOS4hsLIoRxv6CXhv\ntKucrF9gSdU7wx63bny12iuPytbBrmSPeKgI6csQx9GRDFBWx8erAXvOgVVrKs9D\nt8Qsi8DyCBPU4Rb1f4W/nexmz27AyIIWPS845LjMsRqUSvvVxbEOaX9cgtIWDqsV\npnQHM6EznGjjANv6lCoiHsNgFkZCBG30fY8+3vK6Fjcbl2vzBcbZpRxwcOxiYFOx\nq1ufNlp6MXBxBviyb6M9V4V6Q2B0aN3tLBwfDZsSZj/nRh7i4R4jqFoKW8UiyPkT\n/SOEXaYgjNwZid0wzGFd0cJlzA9EARajBd1jyDXq5lj10wwm+r3c2IkXvE98EUuz\nDehp2PSXjIWWk1kyzaCAmxq10gQ3SeN0qljyoVhryj84p4LhD0HVxPrHYmwXpzGR\n1GErxbdurtoutgTt/1JiXqzA698TjyQk5H+butb2unHBKRG21bFH2+DDh9RsKLST\nwXzpy24MRjOsck9kSjlyts8CTXzM3f7qT9gAEpa9aVGy2uq2Drw0lVxlJP8Aycie\ncuvLPwH7ItWs4aFeGuIjUNbEMkx4kG0te/l+gEYQFeNT+R5u/Qfhf4YqMsCQ9+8u\n1xzCo21/iPEq4Lj77cnAsw==\n=2dyp\n-----END PGP SIGNATURE-----\n",
            "created_at": "2014-06-20T09:16:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46659632",
            "id": 46659632,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjU5NjMy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46659632/reactions"
            },
            "updated_at": "2014-06-20T09:16:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46659632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Barging in with another MSVC thing, someone answered me on the MSVC dev blog: http://blogs.msdn.com/b/vcblog/archive/2014/06/10/the-great-crt-refactoring.aspx?CommentPosted=true&PageIndex=4#comments\n\nI'll cite:\n\n> type Thing.c\n\n``` c\n#include <stdlib.h>\n\ntypedef struct {\n\n  int y, x;\n\n} Point;\n\nstruct foo { int a; char b[2]; } structure;\n\nint main(void) {\n       // implicit cast from void*\n       Point* p = malloc(sizeof(Point));\n\n       // designated initializers\n       Point x = { .x = -10, .y = 5401};\n\n       p->x = 10;\n       p->y = 104;\n\n       // compound literals\n\n       structure = ((struct foo) {p->x + x.y, 'a', 0});\n       free(p);\n\n       return 0;\n}\n```\n\n> cl Thing.c\n> \n> Microsoft (R) C/C++ Optimizing Compiler Version 18.00.30501 for x86\n> \n> Copyright (C) Microsoft Corporation.  All rights reserved.\n> \n> Thing.c\n> \n> Microsoft (R) Incremental Linker Version 12.00.30501.0\n> \n> Copyright (C) Microsoft Corporation.  All rights reserved.\n> \n> /out:Thing.exe\n> \n> Thing.obj\n> \n> with the \"Compile As\" option. Which is <CompileAs> in the vcxproj file. And as Stephan said, that's all just in VS2013.\n> \n> does it force the CompileAs option to something other than Default?\n\nI might be confused, but it seems that MSVC does support the language features we require, no @equalsraf? In which case the reason we're not succeeding at compiling is because we have GNU-isms in our codebase (and some not-yet platform abstracted code of course, but that's a different issue we knew we were going to bump into).\n",
            "created_at": "2014-06-20T23:22:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46736347",
            "id": 46736347,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM2MzQ3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46736347/reactions"
            },
            "updated_at": "2014-06-20T23:22:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46736347",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@aktau, if memory serves me correctly\n1. When building as C (default) implicit casts did work - what did not work was variable declarations that were not at the start of the function (C89)\n2. When building as C++, variable declarations worked anywhere, but implicit casts did not\n\nor did I missunderstood?\n",
            "created_at": "2014-06-20T23:39:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46737110",
            "id": 46737110,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM3MTEw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46737110/reactions"
            },
            "updated_at": "2014-06-20T23:39:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46737110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> 1. When building as C (default) implicit casts did work - what did not work was variable declarations that were not at the start of the function (C89)\n\nThis is very possible, and sadly I don't have a windows box to experiment with at the moment. It seems truly strange that MSVC accepts all kinds of C99 features (compound literals, designated initializers, ...) but not declare anywhere.\n\nCould you perhaps verify that running what Michael posted on the MSVC blog (`Thing.c`) works as advertised, and that exchanging the following two lines doesn't?\n\n``` c\n// transform this\nPoint x = { .x = -10, .y = 5401};\np->x = 10;\n\n// into this\np->x = 10;\nPoint x = { .x = -10, .y = 5401};\n```\n\nThat would put me at ease that MSVC is most likely not ready for us, yet. (try the command line `cl.exe`).\n",
            "created_at": "2014-06-20T23:47:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46737431",
            "id": 46737431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM3NDMx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46737431/reactions"
            },
            "updated_at": "2014-06-20T23:47:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46737431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(facepalm) both cases are building here\n",
            "created_at": "2014-06-20T23:58:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46737907",
            "id": 46737907,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM3OTA3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46737907/reactions"
            },
            "updated_at": "2014-06-20T23:58:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46737907",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "This must be a very recent change, then, because this was always a problem with MSVC for me (it only supported either C89—that's no variables declared away from the top of the block, certainly no designated initializers—or C++).\n",
            "created_at": "2014-06-21T00:03:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46738099",
            "id": 46738099,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzM4MDk5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46738099/reactions"
            },
            "updated_at": "2014-06-21T00:03:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46738099",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/454895?v=4",
                "events_url": "https://api.github.com/users/jamesamcl/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamesamcl/followers",
                "following_url": "https://api.github.com/users/jamesamcl/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesamcl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamesamcl",
                "id": 454895,
                "login": "jamesamcl",
                "node_id": "MDQ6VXNlcjQ1NDg5NQ==",
                "organizations_url": "https://api.github.com/users/jamesamcl/orgs",
                "received_events_url": "https://api.github.com/users/jamesamcl/received_events",
                "repos_url": "https://api.github.com/users/jamesamcl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamesamcl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesamcl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamesamcl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ZyX-I the fix provided earlier did not work, so I ended up moving the preoprocessor step into CMake\n\n``` diff\ndiff --git a/src/nvim/CMakeLists.txt b/src/nvim/CMakeLists.txt\nindex acdf5e0..8c5106b 100644\n--- a/src/nvim/CMakeLists.txt\n+++ b/src/nvim/CMakeLists.txt\n@@ -109,11 +109,12 @@ foreach(sfile ${NEOVIM_SOURCES}\n   endif()\n   set(gf1 \"${GENERATED_DIR}/${r}.c.generated.h\")\n   set(gf2 \"${GENERATED_INCLUDES_DIR}/${r}.h.generated.h\")\n+  set(gf3 \"${GENERATED_DIR}/${r}.c.preprocessor\")\n+  separate_arguments(ESCAPED_C_FLAGS UNIX_COMMAND ${CMAKE_C_FLAGS})\n   add_custom_command(\n     OUTPUT \"${gf1}\" \"${gf2}\"\n-    COMMAND \"${LUA_PRG}\" \"${HEADER_GENERATOR}\"\n-                         \"${sfile}\" \"${gf1}\" \"${gf2}\"\n-                          ${CMAKE_C_COMPILER} ${gen_cflags} -E ${CMAKE_C_FLAGS}\n+    COMMAND ${CMAKE_C_COMPILER} ${sfile} -o ${gf3} ${gen_cflags} -UINCLUDE_GENERATED_DECLARATIONS -E ${ESCAPED_C_FLAGS}\n+    COMMAND \"${LUA_PRG}\" \"${HEADER_GENERATOR}\" \"${sfile}\" \"${gf1}\" \"${gf2}\" \"${gf3}\"\n```\n\nAnd then updated the script to take the file as last argument\n\n``` diff\ndiff --git a/scripts/gendeclarations.lua b/scripts/gendeclarations.lua\nindex 65405d4..db02c29 100755\n--- a/scripts/gendeclarations.lua\n+++ b/scripts/gendeclarations.lua\n@@ -3,13 +3,8 @@\n local fname = arg[1]\n local static_fname = arg[2]\n local non_static_fname = arg[3]\n+local preproc_fname = arg[4]\n\n-local cmdarr = {}\n-for i = 4,#arg-1 do\n-  cmdarr[#cmdarr + 1] = arg[i]\n-end\n-\n-local cflags = arg[#arg]\n\n local lpeg = require('lpeg')\n\n@@ -157,20 +152,10 @@ if fname == '--help' then\n   os.exit()\n end\n\n-shell_escape = function(s)\n-  return '\"' .. s:gsub('([\"\\\\])', '\\\\%1') .. '\"'\n-end\n+local preproc_f = io.open(preproc_fname)\n+local text = preproc_f:read(\"*all\")\n+preproc_f:close()\n\n-local cmd = ''\n-for i, v in ipairs(cmdarr) do\n-  cmd = cmd .. ' ' .. shell_escape(v)\n-end\n-cmd = cmd .. ' ' .. shell_escape(fname) .. ' ' .. cflags\n-local pipe = io.popen(cmd, 'r')\n-local text = pipe:read('*a')\n-if not pipe:close() then\n-  os.exit(2)\n-end\n```\n\nGetting close, but It is not working yet, I suspect because the filenames don't match the regexp\n\n```\n#line 14 \"C:/Users/raf/dev/neovim/src/nvim/arabic.c\"\n```\n",
            "created_at": "2014-06-21T01:35:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46741180",
            "id": 46741180,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzQxMTgw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46741180/reactions"
            },
            "updated_at": "2014-06-21T01:35:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46741180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> (facepalm) both cases are building here\n\nThat's indeed as advertised. So now I'm wondering a bit how CMake was compiling neovim then. Could you check the flags perhaps? It seems like none were necessary. I was getting a bit frustrated with MSVC 2013 not working as they advertised, but this is good news.\n\nYou can double check by manually compiling a file from neovim you had trouble with to an .obj file on the commandline.\n\nAt any rate, getting MingW working is also important because that would allow us to check if everything compiles with travis.\n\n> This must be a very recent change, then, because this was always a problem with MSVC for me (it only supported either C89—that's no variables declared away from the top of the block, certainly no designated initializers—or C++).\n\nRecently the Chromium team stopped used the majority of the features of the C99 to C89 translator they were using to get ffmpeg to compile with MSVC. Which is why we are trying with 2013 or better only.\n",
            "created_at": "2014-06-21T07:56:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46747381",
            "id": 46747381,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzQ3Mzgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46747381/reactions"
            },
            "updated_at": "2014-06-21T17:02:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46747381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok now that the declarations are working again (#877) and after I figured out how to make them work with cl.exe we try again with pure MSVC (ping @aktau )\n\n```\n[  6%] Building C object src/nvim/CMakeFiles/nvim.dir/eval.c.obj\neval.c\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c(441) : warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.\n        C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\INCLUDE\\string.h(112) : see declaration of 'strcpy'\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c(2986) : warning C4996: 'strcpy': This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.\n        C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\INCLUDE\\string.h(112) : see declaration of 'strcpy'\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c(5179) : error C2275: 'list_T' : illegal use of this type as an expression\n        C:\\Users\\raf\\dev\\neovim\\src\\nvim/eval_defs.h(9) : see declaration of 'list_T'\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c(5179) : error C2065: 'copy' : undeclared identifier\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\eval.c(5184) : error C2065: 'copy' : undeclared identifier\n```\n\nSee the first error **2275** (eval.c:5179) that is the same error I had earlier. You can check [MSDN](http://msdn.microsoft.com/en-us/library/76c9k4ah.aspx) but the comments for [VS2010](http://msdn.microsoft.com/en-us/library/76c9k4ah%28v=vs.90%29.aspx) offer some more information.\n\nNow for the interesting bits. The code looks like this (:5179 is the last line)\n\n``` C\nstatic list_T *list_copy(list_T *orig, int deep, int copyID)\n{\n  listitem_T  *item;\n  listitem_T  *ni;\n\n  if (orig == NULL)\n    return NULL;\n\n  list_T *copy = list_alloc();\n```\n\nNow if I move the declaration upwards, the error disappears. But even more surprising is that if I wrap the previous **if statement {}**, the error also goes away.\n\n``` C\nstatic list_T *list_copy(list_T *orig, int deep, int copyID)\n{\n  listitem_T  *item;\n  listitem_T  *ni;\n\n  if (orig == NULL) {\n    return NULL;\n  }\n\n  list_T *copy = list_alloc();\n```\n\nIn fact by wrapping 3 if statements eval.c builds.\n\nSo it seems this happens when declaring a typedef type var after an if statement with no brackets. For example if we change thing.c to have an if statement before a Point declaration\n\n``` C\n#include <stdlib.h>\n\ntypedef struct {\n\n  int y, x;\n\n} Point;\n\nstruct foo { int a; char b[2]; } structure;\n\nstatic void f()\n{\n    printf(\"hello\\n\");\n    int i;\n}\n\nint main(void) {\n       // implicit cast from void*\n       Point* p = malloc(sizeof(Point));\n\n       // designated initializers\n       p->x = 10;\n       if (1)\n         printf(\"fails!\");\n       Point x = { .x = -10, .y = 5401};\n```\n\nit fails with the exact same error.\n",
            "created_at": "2014-06-21T16:42:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46758438",
            "id": 46758438,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU4NDM4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46758438/reactions"
            },
            "updated_at": "2014-06-21T16:42:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46758438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@equalsraf that's a very nice catch!\n\nAt first sight it seems like a parser bug indeed. I posted it on the CRT article I referred to earlier, see if they do anything with it.\n\nLuckily, our coding style requires braces everywhere, so commits fixing the braces would've been necessary anyway. It seems now we have a technical reason for them. ;)\n\n...almost can't believe this strange bug.\n",
            "created_at": "2014-06-21T17:01:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46758956",
            "id": 46758956,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzU4OTU2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46758956/reactions"
            },
            "updated_at": "2014-06-21T17:01:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46758956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok we are reaching the same breakpoint as in Mingw (#810) if_cscope has to be ported to use libuv.\n",
            "created_at": "2014-06-21T19:36:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46762709",
            "id": 46762709,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzYyNzA5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46762709/reactions"
            },
            "updated_at": "2014-06-21T19:36:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46762709",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Excellent!\n\nLet's create the necessary issues and PRs and get to work.\n\nAm Samstag, 21. Juni 2014 schrieb Rui Abreu Ferreira :\n\n> Ok we are reaching the same breakpoint as in Mingw (#810\n> https://github.com/neovim/neovim/pull/810) if_cscope has to be ported\n> to use libuv.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/neovim/neovim/issues/696#issuecomment-46762709.\n",
            "created_at": "2014-06-21T21:25:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46765223",
            "id": 46765223,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzY1MjIz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46765223/reactions"
            },
            "updated_at": "2014-06-21T21:25:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46765223",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've updated the task list with the current blocker. Let me know if I should add more steps. Thanks everyone!\n",
            "created_at": "2014-06-22T08:44:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46775610",
            "id": 46775610,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzc1NjEw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46775610/reactions"
            },
            "updated_at": "2014-06-22T08:44:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46775610",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Meanwhile I've disabled the cscope code just to see what errors show up.\n\nCurrent showstopper is VLA support\n\n```\nC:\\Users\\raf\\dev\\neovim\\src\\nvim\\path.c(1977) : error C2133: 'relative_directory' : unknown size\n```\n\nThe offending piece of code is\n\n``` C\nchar relative_directory[len];\n```\n\ni.e. it seems there is no VLA support for MSVC. Replacing the array with xmalloc/free allows us to proceed. I did a quick grep and failed to find other VLA declarations (may be wrong). In any case the style guide disallows VLA right?\n",
            "created_at": "2014-06-23T21:39:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46905786",
            "id": 46905786,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTA1Nzg2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46905786/reactions"
            },
            "updated_at": "2014-06-23T21:39:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46905786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> i.e. it seems there is no VLA support for MSVC. Replacing the array with xmalloc/free allows us to proceed. I did a quick grep and failed to find other VLA declarations (may be wrong). In any case the style guide disallows VLA right?\n\nIndeed it would, but I'd actually prefer a stack array of static size. What was that constant again, `MAXPATHLEN`? The allocator is actually one of the biggest hotspots in just about any performance trace I take. Also putting it on the stack means you don't have to think about freeing it.\n",
            "created_at": "2014-06-23T21:44:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46906362",
            "id": 46906362,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTA2MzYy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46906362/reactions"
            },
            "updated_at": "2014-06-23T21:44:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46906362",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "path_get_absolute_path() is only used by vim_FullName(), which is used in a couple different places. As far as I can tell vim_FullName() is always invoked with MAXPATHLEN as the len argument.\n",
            "created_at": "2014-06-23T21:49:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46906868",
            "id": 46906868,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTA2ODY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46906868/reactions"
            },
            "updated_at": "2014-06-23T21:49:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46906868",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> path_get_absolute_path() is only used by vim_FullName(), which is used in a couple different places. As far as I can tell vim_FullName() is always invoked with MAXPATHLEN as the len argument.\n\nIt seems so indeed (did a quick `:Ag` check). Another reason for just declaring it with `MAXPATHLEN`. This call does not recurse so that's no problem either (and the minimum stack size on any of our systems is at least 2MB I believe). There will be no real change, the VLA was already `MAXPATHLEN` anyway. In fact it will be a bit faster because `alloca` won't need to be used under the hood.\n\nThis change was already proposed around the beginning of our project. Back then, I argued that the VLA stay since it wasn't harming anything, but if MSVC doesn't support it that's reason enough for me to abandon it. I remember @tarruda arguing for a `xmalloc`/`free` pair. @tarruda are you still adamant that `xmalloc`/`free` is the right way?\n",
            "created_at": "2014-06-24T08:39:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46945758",
            "id": 46945758,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTQ1NzU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46945758/reactions"
            },
            "updated_at": "2014-06-24T08:39:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46945758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  Back then, I argued that the VLA stay since it wasn't harming anything, but if MSVC doesn't support it that's reason enough for me to abandon it. I remember @tarruda arguing for a xmalloc/free pair. @tarruda are you still adamant that xmalloc/free is the right way?\n\nNothing against a fixed stack allocation of `MAXPATHL`\n",
            "created_at": "2014-06-24T11:07:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-46958274",
            "id": 46958274,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTU4Mjc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46958274/reactions"
            },
            "updated_at": "2014-06-24T11:07:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/46958274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Fallback STRNICMP macro is broken, it gets defined in vim.h as\n\n```\n#  define STRNICMP(d, s, n) vim_strnicmp((char *)(d), (char *)(s), (size_t)(n))\n```\n\nBut vim_strnicmp() only takes two arguments.\n",
            "created_at": "2014-06-24T18:56:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47015186",
            "id": 47015186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDE1MTg2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47015186/reactions"
            },
            "updated_at": "2014-06-24T18:56:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47015186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The `vim_strnicmp()` I see, in `strings.c` on line 376, takes three arguments. Which one are you looking at?\n",
            "created_at": "2014-06-24T19:15:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47017586",
            "id": 47017586,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDE3NTg2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47017586/reactions"
            },
            "updated_at": "2014-06-24T19:15:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47017586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@aktau Sorry, my eyes must be playing tricks on me - there is something up with vim_strnicmp here but its something else. In any case it shouldn't matter because windows has strnicmp\n",
            "created_at": "2014-06-24T20:00:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47022854",
            "id": 47022854,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDIyODU0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47022854/reactions"
            },
            "updated_at": "2014-06-24T20:00:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47022854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "mmm, any idea on what is the equivalent of unix_expandpath for windows?\n",
            "created_at": "2014-06-24T20:51:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47028975",
            "id": 47028975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDI4OTc1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47028975/reactions"
            },
            "updated_at": "2014-06-24T20:51:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47028975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "After inserting some [dummy](https://github.com/equalsraf/neovim/blob/tb-windows2/src/nvim/platform/os_msvc.c) functions for mch_\\* and doing a couple of more bypasses and cherry-picks from #813 and #839, this is the closest I've got so far, using MSVC \n\nIgnore the following since they are a problem with some of the dependencies (/MD /MT library incompatibilities) I'll try to hunt those down later\n\n```\nLinking C executable ..\\..\\bin\\nvim.exe\nLIBCMT.lib(invarg.obj) : error LNK2005: \"void __cdecl _invalid_parameter(unsigned short const *,unsigned short\n const *,unsigned short const *,unsigned int,unsigned int)\" (?_invalid_parameter@@YAXPBG00II@Z) already define\nd in LIBCMTD.lib(invarg.obj)\nLIBCMT.lib(invarg.obj) : error LNK2005: \"void __cdecl _invoke_watson(unsigned short const *,unsigned short con\nst *,unsigned short const *,unsigned int,unsigned int)\" (?_invoke_watson@@YAXPBG00II@Z) already defined in LIB\nCMTD.lib(invarg.obj)\nLIBCMT.lib(invarg.obj) : error LNK2005: __call_reportfault already defined in LIBCMTD.lib(invarg.obj)\nLIBCMT.lib(invarg.obj) : error LNK2005: __get_invalid_parameter_handler already defined in LIBCMTD.lib(invarg.\nobj)\nLIBCMT.lib(invarg.obj) : error LNK2005: __initp_misc_invarg already defined in LIBCMTD.lib(invarg.obj)\nLIBCMT.lib(invarg.obj) : error LNK2005: __invalid_parameter already defined in LIBCMTD.lib(invarg.obj)\nLIBCMT.lib(invarg.obj) : error LNK2005: __invoke_watson already defined in LIBCMTD.lib(invarg.obj)\nLIBCMT.lib(invarg.obj) : error LNK2005: __set_invalid_parameter_handler already defined in LIBCMTD.lib(invarg.\nobj)\nLIBCMT.lib(invarg.obj) : error LNK2005: ___pInvalidArgHandler already defined in LIBCMTD.lib(invarg.obj)\nLINK : warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs; use /NODEFAULTLIB:library\n```\n\nNot that many errors, snprintf/input are probably the weirdest ones:\n\n```\nvim.c.obj : error LNK2001: unresolved external symbol _snprintf\nmsgpack_dispatch.c.obj : error LNK2019: unresolved external symbol _snprintf referenced in function _msgpack_r\npc_dispatch\nmsgpack_rpc.c.obj : error LNK2001: unresolved external symbol _snprintf\nsignal.c.obj : error LNK2001: unresolved external symbol _snprintf\nusers.c.obj : error LNK2001: unresolved external symbol _snprintf\ninput.c.obj : error LNK2019: unresolved external symbol _read_from_input_buf referenced in function _os_inchar\n\ninput.c.obj : error LNK2019: unresolved external symbol _fill_input_buf referenced in function _os_breakcheck\ninput.c.obj : error LNK2019: unresolved external symbol _input_available referenced in function _inbuf_poll\nshell.c.obj : error LNK2019: unresolved external symbol _append_ga_line referenced in function _os_call_shell\ntime.c.obj : error LNK2019: unresolved external symbol _gettimeofday referenced in function _os_get_localtime\nusers.c.obj : error LNK2019: unresolved external symbol _getuid referenced in function _os_get_user_name\nLIBCMTD.lib(wincrt0.obj) : error LNK2019: unresolved external symbol _WinMain@16 referenced in function ___tma\ninCRTStartup\n..\\..\\bin\\nvim.exe : fatal error LNK1120: 8 unresolved externals\nLINK Pass 1 failed. with 2\nNMAKE : fatal error U1077: '\"C:\\Program Files (x86)\\CMake 2.8\\bin\\cmake.exe\"' : return code '0xffffffff'\nStop.\n```\n\nIt seems there are no complaints about curses symbols so far, which is good because - I ended up switching to PDCurses - currently all code branches that don't have _tgetent()_ are missing some code in term.c.\n\nSo far I'm unable to get this far with clang - it fails to even link properly against the runtime and CMake is trying to pass it MSVC options which does not help.\n\nSo maybe MSVC can build Neovim :D\n",
            "created_at": "2014-06-24T23:31:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47043897",
            "id": 47043897,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQzODk3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47043897/reactions"
            },
            "updated_at": "2014-06-24T23:32:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47043897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Your progress on this has been pretty amazing, kudos! The end goal is to have both compilers working on windows (and even MingW gcc, I suppose), but one will already be very nice for now :).\n",
            "created_at": "2014-06-24T23:56:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47045570",
            "id": 47045570,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQ1NTcw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47045570/reactions"
            },
            "updated_at": "2014-06-24T23:56:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47045570",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "NONE",
            "body": "@aktau, I followed you from MSDN blog. I left you a comment there. Can't reproduce the brace-less issue.\n\n---\n\nMessage (http://blogs.msdn.com/b/vcblog/archive/2014/06/10/the-great-crt-refactoring.aspx?PageIndex=4#comments):\n\n---\n\n`@Nicolas`: tried that with Visual Studio 2013 Update 2 installation, but can't reproduce the issue :(\n\nthis code in test.c does compile with `cl test.c` with no warning (I think @equalsraf must have missed something in his example on github):\n\n``` c\n#include <stdlib.h>\n\n#include <stdio.h>\n\ntypedef struct {\n\n   int y, x;\n\n} Point;\n\nstruct foo { int a; char b[2]; } structure;\n\nint main(void) {\n\n   // implicit cast from void*\n\n   Point* p = malloc(sizeof(Point));\n\n   // designated initializers\n\n   p->x = 10;\n\n   if (1)\n\n       printf(\"fails!\");\n\n   Point x = { .x = -10, .y = 5401 };\n\n   system(\"pause\");\n\n   return 0;\n\n}\n```\n",
            "created_at": "2014-06-25T00:36:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47048080",
            "id": 47048080,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQ4MDgw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47048080/reactions"
            },
            "updated_at": "2014-06-25T00:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47048080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@jasonwilliams200OK with that code I get the following\n\n```\nc:\\Users\\raf\\dev\\test>cl thing4.c\nMicrosoft (R) C/C++ Optimizing Compiler Version 18.00.21005.1 for x86\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nthing4.c\nthing4.c(27) : error C2275: 'Point' : illegal use of this type as an expression\n        thing4.c(9) : see declaration of 'Point'\nthing4.c(27) : error C2146: syntax error : missing ';' before identifier 'x'\nthing4.c(27) : error C2065: 'x' : undeclared identifier\nthing4.c(27) : error C2059: syntax error : '{'\n```\n",
            "created_at": "2014-06-25T00:51:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47048884",
            "id": 47048884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQ4ODg0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47048884/reactions"
            },
            "updated_at": "2014-06-25T00:51:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47048884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "@equalsraf, are you using [Visual Studio 2013 Update 2](http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs#d-visual-studio-2013-update)?\n\nYours:\n\n> Microsoft (R) C/C++ Optimizing Compiler Version 18.00.21005.1 for x86\n\nMine:\n\n> Microsoft (R) C/C++ Optimizing Compiler Version **_18.00.30501**_ for x86\n> Copyright (C) Microsoft Corporation.  All rights reserved.\n> test.c\n> Microsoft (R) Incremental Linker Version **_12.00.30501.0**_\n",
            "created_at": "2014-06-25T01:09:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47049937",
            "id": 47049937,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDQ5OTM3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47049937/reactions"
            },
            "updated_at": "2014-06-25T01:10:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47049937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@aktau we can probably start picking out some of the more generic issues from the commit log\n- port if_cscope.c\n- start thinking about how to split platform code (os_unix.c os_msvc.c etc)\n- Add ~~brackets to if statements~~\n- Start spliting compiler options in CMake\n- Refactor vim_FulllName\n- Add include guards: sys/time.h unistd.h\n- Reorder includes here and there, i.e. ensure platform includes and/or vim.h are included before anything else\n",
            "created_at": "2014-06-25T01:14:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47050218",
            "id": 47050218,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDUwMjE4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47050218/reactions"
            },
            "updated_at": "2014-06-25T07:50:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47050218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah confirmed - after updating I now have\n\n```\nMicrosoft (R) C/C++ Optimizing Compiler Version 18.00.30501 for x86\n```\n\nand that example now builds cleanly.\n\n@jasonwilliams200OK thanks for taking the time to follow up on this.\n",
            "created_at": "2014-06-25T01:43:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47051853",
            "id": 47051853,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDUxODUz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47051853/reactions"
            },
            "updated_at": "2014-06-25T01:43:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47051853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "Great! And thank you guys for porting neovim to MSVCR environment. :D\n",
            "created_at": "2014-06-25T01:48:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47052117",
            "id": 47052117,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDUyMTE3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47052117/reactions"
            },
            "updated_at": "2014-06-25T01:48:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47052117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks @equalsraf and @jasonwilliams200OK - could you start logging separate issues for the other problems? That way I can track them from here.\n",
            "created_at": "2014-06-25T03:57:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47058213",
            "id": 47058213,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDU4MjEz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47058213/reactions"
            },
            "updated_at": "2014-06-25T03:57:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47058213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @aktau, I followed you from MSDN blog. I left you a comment there. Can't reproduce the brace-less issue.\n\nThanks a lot for the followup! Another reminder to keep our MSVC's up-to-date :).\n",
            "created_at": "2014-06-25T07:47:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47070428",
            "id": 47070428,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDcwNDI4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47070428/reactions"
            },
            "updated_at": "2014-06-25T07:47:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47070428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Incidentally I think the update also fixed another issue I had with the _#define inline __inline_ being ignored in msgpack headers, I was still trying to figure it out and now I can't replicate.\n",
            "created_at": "2014-06-25T07:52:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47070854",
            "id": 47070854,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDcwODU0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47070854/reactions"
            },
            "updated_at": "2014-06-25T07:52:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47070854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> start thinking about how to split platform code (os_unix.c os_msvc.c etc)\n\nIn #850 I created `os/unix_defs.c` and `os/win_defs.c` and added this code in `os/os.h`:\n\n``` c\n#ifdef WIN32\n# include \"nvim/os/win_defs.h\"\n#else\n# include \"nvim/os/unix_defs.h\"\n#endif\n```\n\nPerhaps it is not the best solution. What do you think about it?\nOff-topic: In fact I don't like current `os/os.h` - I think `os/env.h`, `os/fs.h` etc. will be better because I don't see any reason why these modules are united, but others are not. In that case I would use for example `os/defs.h` for the code above.\n",
            "created_at": "2014-06-25T13:29:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47100371",
            "id": 47100371,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTAwMzcx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47100371/reactions"
            },
            "updated_at": "2014-06-25T13:29:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47100371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Cheers\n\n@Hinidu  I created something similar in [os_defs.h](https://github.com/equalsraf/neovim/blob/tb-windows2/src/nvim/os_defs.h) :D\n\nI was going to write a quick comment but I got carried away ... there is a TLDR at the end :D\n\nCurrently there are three distinct os modules inside Neovim right now\n1. os_unix_defs.h that includes platform specific defines, constants, macros, etc - that needs to be loaded early on i.e. before any other code is #included\n2. os_unix.c and os_unix.h - this is the old code from Vim and defines mch_\\* functions\n3. os/*.c are our new abstract OS functions (hopefully)\n\nConcerning (1.) I would follow the same approach as you did above, I would just keep the name as os_defs.h to make it clear the header file in meant for **definitions**. The platform specific headers os_unix_defs.h, os_msvc_defs.h, etc could be placed inside **os/** but the code outside would always include \"os_defs.h\" (I think you already did this in #850 )\n\nFor (2.) my expectation is that os_unix.c would be split among the various _os/_.c\\* files and disappear before the first release :D\n\nFor (3.) I suppose any _#ifdef soup will be contained inside each file, but there isn't much to do about it\n\nAs for os/os.h I'm not a big fan either, specially since right now it doesn't really include all of the os/\\* modules anyway. The only way to be sure, would be to remove the include and see how much the code complains.\n\n@tarruda any ideas on this?\n\nTLDR; @Hinidu I didn't have a chance to review #850 yet (but I will, ping me if I dont) from what I have seen so far I agree with the changes you've made to the structure of the os_\\* files.\n",
            "created_at": "2014-06-25T14:21:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47106995",
            "id": 47106995,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTA2OTk1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47106995/reactions"
            },
            "updated_at": "2014-06-25T14:21:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47106995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@equalsraf I agree with you. The only thing that I would change is using `win_defs.h` on the top level which would include `msvc_defs.h` etc. depending on the used compiler. And hold in `msvc_defs.h` etc. only specific to compiler stuff.\n",
            "created_at": "2014-06-25T15:42:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47119264",
            "id": 47119264,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTE5MjY0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47119264/reactions"
            },
            "updated_at": "2014-06-25T15:42:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47119264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can someone explain why there is a pthread check in CMakeLists.txt\n\n```\n# Determine platform's threading library. Set CMAKE_THREAD_PREFER_PTHREAD\n# explicitly to indicate a strong preference for pthread. It is an error to not\n# have pthread installed even if, for example, the Win32 threading API is found.\nset(CMAKE_THREAD_PREFER_PTHREAD ON)\nfind_package(Threads REQUIRED)\nif(NOT CMAKE_USE_PTHREADS_INIT)\n  message(SEND_ERROR \"The pthread library must be installed on your system.\")\nendif(NOT CMAKE_USE_PTHREADS_INIT)\n```\n\nWe don't seem to be using pthread directly, can I create a PR to remove this? Or at least the fatal error since it prevents us from building in Windows.\n",
            "created_at": "2014-06-25T19:09:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47144874",
            "id": 47144874,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTQ0ODc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47144874/reactions"
            },
            "updated_at": "2014-06-25T19:09:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47144874",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> We don't seem to be using pthread directly, can I create a PR to remove this? Or at least the fatal error since it prevents us from building in Windows.\n\nThere were #109 and #110. If #110 contains the only reason for this check then I think `if(NOT CMAKE_USE_PTHREADS_INIT)` can be removed because it seems that libuv doesn't use `pthread` in Windows threading implementation, for example [win/thread.c](https://github.com/joyent/libuv/blob/master/src/win/thread.c).\n",
            "created_at": "2014-06-25T20:59:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-47157950",
            "id": 47157950,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTU3OTUw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47157950/reactions"
            },
            "updated_at": "2014-06-25T20:59:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/47157950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk just merged #846 (implement `os_open`). A small piece of the puzzle. We should probably add these small things to the checklist. Anyone interested in organizing it?\n",
            "created_at": "2014-07-14T13:45:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-48901015",
            "id": 48901015,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4OTAxMDE1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48901015/reactions"
            },
            "updated_at": "2014-07-14T13:45:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48901015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "... meanwhile in MSVC land\n\n```\nC:\\Users\\raf\\Dev\\neovim\\build\\src\\nvim\\auto\\msgpack_dispatch.c(108) :\n     error C2440: 'initializing' : cannot convert from 'WindowArray' to 'Window *'\n```\n\nIt seems 296da85198a7d5da36dbb2e6f213edb5da511635 introduced some new casting macros that are not building for MSVC.\n\n```\n  WindowArray rv = tabpage_get_windows(arg_1, error);\n\n  if (error->set) {\n    goto cleanup;\n  }\n\n  Object ret = WINDOWARRAY_OBJ(rv);\n```\n\nLine :108 is the last line. The WINDOWARRAY_OBJ macro comes from helpers.h\n\n``` C\n#define WINDOWARRAY_OBJ(a) ((Object) {                                        \\\n  .type = kObjectTypeWindowArray,                                             \\\n  .data.windowarray = a                                                       \\\n  })\n```\n\nIf we remove that bit of code just for experimenting, we get similar errors with some other types\n\n```\nC:\\Users\\raf\\Dev\\neovim\\src\\nvim\\os\\channel.c(172) : error C2440: 'initializing' : cannot convert from 'String' to 'char *'\nC:\\Users\\raf\\Dev\\neovim\\src\\nvim\\os\\channel.c(191) : error C2440: 'initializing' : cannot convert from 'Object' to 'ObjectType'\nC:\\Users\\raf\\Dev\\neovim\\src\\nvim\\os\\channel.c(523) : error C2440: 'initializing' : cannot convert from 'String' to 'char *'\n```\n",
            "created_at": "2014-07-16T23:14:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49240242",
            "id": 49240242,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQwMjQy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49240242/reactions"
            },
            "updated_at": "2014-07-16T23:14:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49240242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That... doesn't make a whole lot of sense. `rv` is clearly a `WindowArray` and so is `data.windowarray`.\n\nDo you get a more accurate error if you expand the macro inline?\n",
            "created_at": "2014-07-16T23:19:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49240669",
            "id": 49240669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQwNjY5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49240669/reactions"
            },
            "updated_at": "2014-07-16T23:19:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49240669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This works\n\n```\n    Object ret = {.type = kObjectTypeWindowArray,\n        .data.windowarray = {.items = rv.items, .size = rv.size}\n        };\n```\n\nBut this does not\n\n```\n    Object ret = {.type = kObjectTypeWindowArray,\n        .data.windowarray = rv\n        };\n```\n",
            "created_at": "2014-07-16T23:28:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49241425",
            "id": 49241425,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQxNDI1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49241425/reactions"
            },
            "updated_at": "2014-07-16T23:28:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49241425",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "```\nC:\\Users\\raf\\Dev\\neovim\\build\\src\\nvim\\auto\\msgpack_dispatch.c(108) :\n     error C2440: 'initializing' : cannot convert from 'WindowArray' to 'Window *'\n```\n\nThe `Window*`in the error is actually the data type of the first member of struct being stored in the union. e.g. take this code\n\n```\nstruct point {\n    short x, y;\n};\nstruct obj {\n    char val;\n    union {\n        struct point p;\n        void *r;\n    } data;\n};\n\nint main()\n{\n    // This builds\n    struct obj test1 = {.val = 0, .data.p = {.x=2,.y=3}};\n\n    struct point p = {.x = 1, .y = 0};\n\n    // This will fail\n    struct obj test2 = {.val = 0, .data.p = p};\n    return 0;\n}\n```\n\nThe error will be \n\n```\ntest.c(20) : error C2440: 'initializing' : cannot convert from 'point' to 'short'\n```\n\nBut if you change the data type for `x` in `struct point` into something else, then you will get that data type instead of short.\n\nHow am I supposed to initialize a union in C for MSVC?\n",
            "created_at": "2014-07-16T23:52:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49243104",
            "id": 49243104,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQzMTA0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49243104/reactions"
            },
            "updated_at": "2014-07-16T23:52:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49243104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "[This issue](http://www.beta.microsoft.com/VisualStudio/feedback/details/805981/msvc-2013-c99-designated-initializers-cannot-initialize-unions-within-structs) looks almost like a perfect fit. Stackoverflow seems to [agree](http://stackoverflow.com/questions/24090739/possible-compiler-bug-in-msvc12-vs2013-with-designated-initializer) (first comment)\n",
            "created_at": "2014-07-16T23:57:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49243467",
            "id": 49243467,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQzNDY3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49243467/reactions"
            },
            "updated_at": "2014-07-17T00:01:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49243467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "On a completely unrelated comment here are my [latest notes](https://gist.github.com/equalsraf/84e03c634afd40e50c45) for native builds with MSVC.\n",
            "created_at": "2014-07-17T00:03:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49243894",
            "id": 49243894,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQzODk0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49243894/reactions"
            },
            "updated_at": "2014-07-17T00:03:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49243894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This issue looks almost like a perfect fit. Stackoverflow seems to agree (first comment)\n\nGood find, let's monitor the issue.\n\nOn another note, perhaps we could try VS 2013 update 3 which was released recently? (I saw it pass by a month ago in my newsfeeds).\n",
            "created_at": "2014-07-17T08:03:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49270399",
            "id": 49270399,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjcwMzk5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49270399/reactions"
            },
            "updated_at": "2014-07-17T08:03:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49270399",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Release Candidate 3 is all I [found](http://support.microsoft.com/kb/2933779) - might give it a shot later.\n",
            "created_at": "2014-07-17T08:08:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49270780",
            "id": 49270780,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjcwNzgw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49270780/reactions"
            },
            "updated_at": "2014-07-17T08:11:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49270780",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Release Candidate 3 is all I found - might give it a shot later.\n\nYep, it must've been the RC.\n",
            "created_at": "2014-07-17T08:26:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49272291",
            "id": 49272291,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjcyMjkx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49272291/reactions"
            },
            "updated_at": "2014-07-17T08:26:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49272291",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Updating to the RC 3 does not make difference.\n",
            "created_at": "2014-07-18T21:21:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49481090",
            "id": 49481090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDgxMDkw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49481090/reactions"
            },
            "updated_at": "2014-07-18T21:21:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49481090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Went around the union issues by redefining the macros to explicitly initialise the struct. It turns out I only had to change 3 calls anyway.\n\nWe are getting close to the Mingw branch\n\n```\nLinking C executable ..\\..\\bin\\nvim.exe\nlibuv.lib(handle.obj) : MSIL .netmodule or module compiled with /GL found; restarting link with /LTCG; add /LTCG to the link command line to improve linker performance\nLINK : warning LNK4075: ignoring '/INCREMENTAL' due to '/LTCG' specification\nLIBCMT.lib(crt0init.obj) : error LNK2005: ___xi_a already defined in MSVCRTD.lib(cinitexe.obj)\nLIBCMT.lib(crt0init.obj) : error LNK2005: ___xi_z already defined in MSVCRTD.lib(cinitexe.obj)\nLIBCMT.lib(crt0init.obj) : error LNK2005: ___xc_a already defined in MSVCRTD.lib(cinitexe.obj)\nLIBCMT.lib(crt0init.obj) : error LNK2005: ___xc_z already defined in MSVCRTD.lib(cinitexe.obj)\nLINK : warning LNK4098: defaultlib 'MSVCRTD' conflicts with use of other libs; use /NODEFAULTLIB:library\nLINK : warning LNK4098: defaultlib 'LIBCMT' conflicts with use of other libs; use /NODEFAULTLIB:library\nex_cmds2.c.obj : error LNK2001: unresolved external symbol _gettimeofday\ntime.c.obj : error LNK2001: unresolved external symbol _gettimeofday\n..\\..\\bin\\nvim.exe : fatal error LNK1120: 1 unresolved externals\nLINK Pass 1 failed. with 1120\n```\n",
            "created_at": "2014-07-18T23:09:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49489772",
            "id": 49489772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDg5Nzcy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49489772/reactions"
            },
            "updated_at": "2014-07-18T23:09:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49489772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One very ugly libintl hack later. We can now build in MSVC.\n\n```\nLinking C executable ..\\..\\bin\\nvim.exe\nlibuv.lib(handle.obj) : MSIL .netmodule or module compiled with /GL found; restarting link with /LTCG; add /LTCG to the link command line to improve linker performance\nGenerating code\nFinished generating code\n[100%] Built target nvim\n```\n\nThe situation looks the same as with Mingw. The console output is quite broken and the input is unresponsive, likewise I am unable to connect to it using a TCP socket.\n",
            "created_at": "2014-07-21T00:24:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49564481",
            "id": 49564481,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTY0NDgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49564481/reactions"
            },
            "updated_at": "2014-07-21T00:24:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49564481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> One very ugly libintl hack later. We can now build in MSVC.\n\nThat's... awesome! Good progress, at least it builds. Now we have to found out which dirty hacks actually disabled the console (and the TCP socket, which is weirder since it should be perfectly cross-platform).\n\nDoes windows have a netstat-like thingy? What does it say about the neovim TCP port?\n",
            "created_at": "2014-07-21T07:37:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49578414",
            "id": 49578414,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTc4NDE0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49578414/reactions"
            },
            "updated_at": "2014-07-21T07:37:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49578414",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(tested in mingw) the port itself is open and you can connect to it, the neovim connection handler is called. But after sending some data, no reply comes back, and the read handler in neovim is never called.\n",
            "created_at": "2014-07-21T07:39:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49578513",
            "id": 49578513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTc4NTEz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49578513/reactions"
            },
            "updated_at": "2014-07-21T07:39:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49578513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Probably stuck somewhere. Event handling is still (necessarily) a bit of a rats nest. If it's the same on MSVC then that might be easier to debug with its integrated debugger.\n",
            "created_at": "2014-07-21T07:43:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49578761",
            "id": 49578761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTc4NzYx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49578761/reactions"
            },
            "updated_at": "2014-07-21T07:43:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49578761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can't fire up a MSVC compiler right now - so far the only tracing I've been able to do was. \n- We seem to be blocked in event_poll(-1) which makes more or less sense, with the timeout as -1\n- This comes from a call to safe_vgetc() in normal_cmd() - assuming input is in fact broken then it makes some sense that a blocking call would have this effect.\n- `event_poll(-1)` is called from `input_poll(-1)` maybe the read_stream is broken for some reason.\n",
            "created_at": "2014-07-21T11:40:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49595647",
            "id": 49595647,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk1NjQ3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49595647/reactions"
            },
            "updated_at": "2014-07-21T11:40:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49595647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I can't fire up a MSVC compiler right now - so far the only tracing I've been able to do was...\n\nThis will require @tarruda's feeling for neovim's event architecture, I think.\n",
            "created_at": "2014-07-21T11:42:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49595761",
            "id": 49595761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk1NzYx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49595761/reactions"
            },
            "updated_at": "2014-07-21T11:42:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49595761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nope the stdin read callback does not seem to be called at all, but the file descriptor seems correct(0). We seem to be stuck inside the event loop in `uv_run()` with mode UV_RUN_ONCE.\n",
            "created_at": "2014-07-21T11:54:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49596611",
            "id": 49596611,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk2NjEx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49596611/reactions"
            },
            "updated_at": "2014-07-21T11:54:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49596611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@equalsraf I've spread some DLOG statements around the API call pipeline, but you must define `MIN_LOG_LEVEL` as 0(I've set INFO as the default level because DEBUG will quickly create huge files).\n\nAnother option might be to run it under gdb to see what's happening. Eventually I will do it myself, but first some non-windows issues must be fixed\n",
            "created_at": "2014-07-21T11:54:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49596634",
            "id": 49596634,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk2NjM0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49596634/reactions"
            },
            "updated_at": "2014-07-21T11:54:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49596634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tarruda I've enabled the debug but cannot conclude much other than being blocked in uv_run - I don't have access to a proper debugger right now (other than winedbg that is having some issues)  - later tonight or tomorrow I might be able to run this in a proper gdb session.\n",
            "created_at": "2014-07-21T12:04:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49597372",
            "id": 49597372,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTk3Mzcy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49597372/reactions"
            },
            "updated_at": "2014-07-21T12:04:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49597372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "Guys update 3 actually fixed the issue reported on Connect, but not the whole thing.\n\nHalf work done.. eh!\n\nHere is the detailed feedback: https://connect.microsoft.com/VisualStudio/feedback/details/927817/c99-visual-studio-2013-update-3-fixed-1-2-of-the-union-issue\n\nHopefully that will make some impact...\n",
            "created_at": "2014-07-24T10:43:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49992815",
            "id": 49992815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTkyODE1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49992815/reactions"
            },
            "updated_at": "2014-07-24T23:19:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49992815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Here is the detailed bug https://connect.microsoft.com/VisualStudio/feedback/details/927817/c99-visual-studio-2013-update-3-fixed-1-2-of-the-union-issue\n\nI've upvoted the issue. I hope they fix the bug too.\n",
            "created_at": "2014-07-24T10:50:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-49993366",
            "id": 49993366,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTkzMzY2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49993366/reactions"
            },
            "updated_at": "2014-07-24T10:50:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/49993366",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "NONE",
            "body": "Guys please update to VS2013 Update 3 RTM. Here is the change log: http://blogs.msdn.com/b/vcblog/archive/2014/08/04/bugs-fixed-in-visual-studio-2013-update-3.aspx\n\n@aktau, thanks! :)\n\nBut they haven't fixed this union issue in Update 3 RTM :(\n",
            "created_at": "2014-08-05T19:50:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-51249881",
            "id": 51249881,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjQ5ODgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51249881/reactions"
            },
            "updated_at": "2014-08-05T19:50:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51249881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Guys please update to VS2013 Update 3 RTM. Here is the change log: http://blogs.msdn.com/b/vcblog/archive/2014/08/04/bugs-fixed-in-visual-studio-2013-update-3.aspx\n\nGood for @equalsraf to know after he gets back from vacations. It probably decreases the number of workarounds he has to make. Let's hope that MSVC issue goes in for update 4 then. I wonder if it still affects us after the 1/2 bugfix.\n",
            "created_at": "2014-08-05T20:12:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-51252731",
            "id": 51252731,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjUyNzMx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51252731/reactions"
            },
            "updated_at": "2014-08-05T20:12:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51252731",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I wonder if it still affects us after the 1/2 bugfix.\n\nPerhaps no.\n\n> decreases the number of workarounds \n\nThat's the key point.\n\nAlso, more cross-platform standard code will make everyone merrier than ever before. :congratulations: \n",
            "created_at": "2014-08-05T23:57:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-51276674",
            "id": 51276674,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjc2Njc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51276674/reactions"
            },
            "updated_at": "2014-08-05T23:57:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/51276674",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok finally I got back to a Windows machine, and rebased against master. Things look mostly the same as before I left for vacation.\n\n@jasonwilliams200OK thanks for the help, I'm updating right now.\n",
            "created_at": "2014-08-29T23:22:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-53940139",
            "id": 53940139,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTQwMTM5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53940139/reactions"
            },
            "updated_at": "2014-08-29T23:22:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53940139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Ok finally I got back to a Windows machine, and rebased against master. Things look mostly the same as before I left for vacation.\n\nThat's nice, I had actually thought we'd have introduced some further incompatible changes, but I must've been dreaming.\n",
            "created_at": "2014-08-30T10:58:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-53955289",
            "id": 53955289,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU1Mjg5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53955289/reactions"
            },
            "updated_at": "2014-08-30T10:58:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53955289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "NONE",
            "body": "According to msft's Jonathan Caves; they have [fixed the union issue](https://connect.microsoft.com/VisualStudio/feedbackdetail/view/927817/fall-update-c99-visual-studio-2013-update-3-fixed-1-2-of-the-union-issue) and will be available in vNext of VS.\n\nThanks for voting! :smile: \n",
            "created_at": "2014-08-31T20:31:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-54000332",
            "id": 54000332,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDAwMzMy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54000332/reactions"
            },
            "updated_at": "2014-08-31T20:31:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54000332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "NONE",
            "body": "@equalsraf, (not sure if it's relevant) regarding https://github.com/equalsraf/neovim/commit/f91113aa25e9cd6b0a2fef15e06bffecd3cfbd8a, they have made some changes for `time.h` in [VS2014; which is in preview](http://www.visualstudio.com/en-us/downloads/visual-studio-14-ctp-vs) atm. See `<time.h>` in http://blogs.msdn.com/b/vcblog/archive/2014/06/18/crt-features-fixes-and-breaking-changes-in-visual-studio-14-ctp1.aspx\n\nYou can install VS2014 CTP3 alongside VS2013 (or install in a separate VM).\n\nOAN, are you guys considering poweshell environment as well? Windows XP+ are packed with powershell and coming up with a lot of Linux-like commands and other cmdlets. People have pulled a lot of cool stuff using powershell runtime (see this for instance: https://github.com/mitchellh/vagrant/issues/1244).\n",
            "created_at": "2014-09-20T12:15:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-56266274",
            "id": 56266274,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjY2Mjc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56266274/reactions"
            },
            "updated_at": "2014-09-20T12:15:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56266274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The time.h doesn't seem important (there is something about fstat that might be. would have to check).\n\n> OAN, are you guys considering poweshell environment as well? Windows XP+ are packed with powershell and coming up with a lot of Linux-like commands and other cmdlets. People have pulled a lot of cool stuff using powershell runtime (see this for instance: mitchellh/vagrant#1244).\n\nPersonally I don't use powershell. While it works for VisualStudio it does not work for other things I need (e.g. Qt environment). For some minor compatibility with UNIX commands I use unxutils, or other portable tools.\n",
            "created_at": "2014-09-20T20:11:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-56278939",
            "id": 56278939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjc4OTM5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56278939/reactions"
            },
            "updated_at": "2014-09-20T20:11:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56278939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @equalsraf, (not sure if it's relevant) regarding equalsraf@f91113a, they have made some changes for time.h in VS2014; which is in preview atm.\n\nI can only applaud them for supporting even more C99, very good move on MS's part.\n",
            "created_at": "2014-09-20T20:25:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-56279316",
            "id": 56279316,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjc5MzE2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56279316/reactions"
            },
            "updated_at": "2014-09-20T20:25:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56279316",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "NONE",
            "body": "@equalsraf, thanks for the insights! :)\n\nRegarding PS; it's true that we still need to rely on third-party tools. But in Win8.1, currently it comes with version 4 which (surprisingly) supports lots of Unix-like commands. For older versions of OS, it can be updated.\n\nTo check the version:\n\n``` powershell\n> $host.Version\n> Major  Minor  Build  Revision\n> -----  -----  -----  --------\n> 4      0      -1     -1\n```\n\nV5 is on its way with Class support: http://powershell.org/wp/2014/09/08/powershell-v5-class-support/\n\nHopefully, they will reduce the Unix commands gap as well.\n\n@aktau, C/C++ being the most portable langs supported on all OS; this is the most fascinating thing happening in long time. Hopefully, they will stick to this commitment and support C11 and C++14/C++17 standards in time. :)\n",
            "created_at": "2014-09-21T10:57:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-56295458",
            "id": 56295458,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjk1NDU4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56295458/reactions"
            },
            "updated_at": "2014-09-21T10:57:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56295458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "NONE",
            "body": "Another good news today: Update 4 CTP 2 is out with our fix (for unions): http://blogs.msdn.com/b/vcblog/archive/2014/09/22/visual-studio-2013-update-4-ctp-2-available.aspx (under **fixed issues**). yay! :p\n",
            "created_at": "2014-09-23T15:45:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-56540982",
            "id": 56540982,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTQwOTgy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56540982/reactions"
            },
            "updated_at": "2014-09-23T15:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/56540982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@equalsraf Do you know about https://ci.appveyor.com? It's like Travis, only for Windows.. a minimal AppVeyor config for Neovim (save as `<neovim-dir>/appveyor.yml`) could look like:\n\n``` yaml\nversion: 0.0.0-alpha~win+{build}\nos: Visual Studio 2014 CTP4\n# I just tried the following to see what it would output; it also supports Powershell, install/test/.. commands etc.\n# http://www.appveyor.com/docs/appveyor-yml\nbuild_script:\n  - mkdir build\\deps\n  - cd build\\deps\n  - cmake ..\\..\\third-party\n# Running this gives \"GNU Make is required to build the dependencies.\", didn't try more.\n  - msbuild NEOVIM_DEPS.sln\n```\n\nI tried it with a branch on top of your `tb-win32-any`, but as you can see above, I didn't get too far. But maybe you can do something with it ;-)\n",
            "created_at": "2014-11-05T20:27:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-61875406",
            "id": 61875406,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODc1NDA2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61875406/reactions"
            },
            "updated_at": "2014-11-05T20:27:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61875406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@fwalch looks awesome, giving it a try now.\n\nBuilding **third-party** in Windows does not work. Only when using a cross compiler #810, I used to have all the dependencies pre-built in my windows machine, but they changed so much recently that I didn't take the time. Also Luarocks is significantly different in Windows.\n",
            "created_at": "2014-11-05T20:56:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-61879344",
            "id": 61879344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODc5MzQ0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61879344/reactions"
            },
            "updated_at": "2014-11-05T20:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61879344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Building third-party in Windows does not work. Only when using a cross compiler #810, I used to have all the dependencies pre-built in my windows machine, but they changed so much recently that I didn't take the time. Also Luarocks is significantly different in Windows.\n\nCross-compiling means building for Windows under Linux? If this is the case, we could compile the depdencies in `neovim/bot-ci` and push to `neovim/deps` to be used in the actual Windows (AppVeyor) builds.\n",
            "created_at": "2014-11-05T21:01:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-61880128",
            "id": 61880128,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODgwMTI4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61880128/reactions"
            },
            "updated_at": "2014-11-05T21:02:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61880128",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We cannot mix libraries built by Mingw with those built by MSVC. But it seems possible to use Mingw in appveyor too. I'll start with MSVC for now.\n\nI'm still checking but they allow you to install other dependencies via chocolatey so maybe I can get Lua that way.\n",
            "created_at": "2014-11-05T21:13:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-61881854",
            "id": 61881854,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODgxODU0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61881854/reactions"
            },
            "updated_at": "2014-11-05T21:13:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61881854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Failing to build msgpack in third-party deps\n\n```\n.deps\\build\\src\\msgpack\\src\\objectc.c(152): error C2146: syntax error : missing ')' before identifier 'PRIi8' \n```\n\nbut building from master works.\n",
            "created_at": "2014-11-05T22:01:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-61889170",
            "id": 61889170,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODg5MTcw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61889170/reactions"
            },
            "updated_at": "2014-11-05T22:01:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61889170",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What about the `poc/0.6` branch? Neovim uses some older revision from that branch.\n",
            "created_at": "2014-11-05T22:06:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-61890003",
            "id": 61890003,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODkwMDAz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61890003/reactions"
            },
            "updated_at": "2014-11-05T22:06:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61890003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@fwalch it was already merged into master a little while ago.\n",
            "created_at": "2014-11-05T22:16:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-61891614",
            "id": 61891614,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODkxNjE0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61891614/reactions"
            },
            "updated_at": "2014-11-05T22:16:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61891614",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh, okay, that's even better :-)\n",
            "created_at": "2014-11-05T22:22:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-61892365",
            "id": 61892365,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxODkyMzY1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61892365/reactions"
            },
            "updated_at": "2014-11-05T22:22:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61892365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "NONE",
            "body": "@equalsraf, today VS 2013 Update 4 is released. They have also released a free full featured version called \"Community Version\": http://www.visualstudio.com/en-us/products/visual-studio-community-vs.\n\nAlso VS2015 preview is updated, which has even more C99, C++11, C++14 and even some C++17 features. If you can try it out in a separate VM, you might be able to strip away some guards headers and give some valuable feedback on broken language feature before the VS2015 gets RTM'd. :smile: \n\nSee this video by Herb Sutter: http://channel9.msdn.com/Events/Visual-Studio/Connect-event-2014/311 and couple of new blogs on http://blogs.msdn.com/vcblog/.\n",
            "created_at": "2014-11-13T00:31:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-62821304",
            "id": 62821304,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyODIxMzA0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62821304/reactions"
            },
            "updated_at": "2014-11-13T00:31:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62821304",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@jasonwilliams200OK having a look now, thanks for the heads up.\n",
            "created_at": "2014-11-13T08:40:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-62858151",
            "id": 62858151,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyODU4MTUx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62858151/reactions"
            },
            "updated_at": "2014-11-13T08:40:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62858151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Also VS2015 preview is updated, which has even more C99, C++11, C++14 and even some C++17 features.\n\nVery interesting @jasonwilliams200OK, however I looked at the pages you mentioned and couldn't find the C99 improvements. Do you have another link.\n\nIt's a great thing that MS is seemingly turning more open towards *nix, it will make our lives way easier. (see the open-sourcing of .NET earlier).\n",
            "created_at": "2014-11-13T09:21:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-62862920",
            "id": 62862920,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyODYyOTIw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62862920/reactions"
            },
            "updated_at": "2014-11-13T09:21:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62862920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Pushing (or rather re-re-pushing) initial support for third-party in native Windows, it already builds libuv, msgpack, luarocks (but not the dependencies, etc) and luajit. \n\nThe big problem now is that there are no targets to install in .deps/usr/(bin,lib) and luarocks is even worse because the directory structure is nothing like in Unix.\n\nSome useful cmake tidbits I picked up along the way\n- elseif() saves a lot in verbosity when writing platform checks\n- ExternalProject can chain commands for you, so instead of `CONFIGURE_COMMAND ./autoreconf && ./configure` you can do `CONFIGURE_COMMAND ./autoreconf COMMAND ./configure`\n- It should be ok to use Unix paths in a command provided they are not inside quotes\n- If you want to call \"make\" but don't know if you are using make/ninja/etc you can use `cmake --build <build-dir>` instead (**PROBLEM**: this kills colored output)\n",
            "created_at": "2014-11-14T01:26:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-62997094",
            "id": 62997094,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTk3MDk0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62997094/reactions"
            },
            "updated_at": "2014-11-14T01:26:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62997094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "@aktau, yes the quick release lifecycles are great! .NET, Roslyn etc. are open sourced. Mono has already forked the corefx repository on GitHub. List is available here: https://github.com/microsoft/dotnet.\n\nThe union bug seems to be fixed. All three tests [reported on connect](https://connect.microsoft.com/VisualStudio/feedback/details/927817/c99-visual-studio-2013-update-3-fixed-1-2-of-the-union-issue) in reproduction steps (under details) are passing.\n\n> Optimizing Compiler Version 18.00.31101 for x86\n> Incremental Linker Version 12.00.31101.0\n\nStefan T Lavavej (STL) will hopefully author a blog for complete set of changes. I asked about the C99 related changes in comments here: http://blogs.msdn.com/b/vcblog/archive/2014/11/12/visual-studio-2015-preview-now-available.aspx?PageIndex=2#comments (as `(CC)` :point_left: don't know what I was thinking), and Eric asked me to watch the video. :)\n\nThere is the roadmap table in the video (at 35 sec). In VS 2015 RTM, there will be coverage till UNC in literals. That chart is same as what STL updated here: http://blogs.msdn.com/b/vcblog/archive/2014/08/21/c-11-14-features-in-visual-studio-14-ctp3.aspx.\n\n![VC++ Conformance Update](http://blogs.msdn.com/cfs-file.ashx/__key/communityserver-blogs-components-weblogfiles/00-00-00-65-69-metablogapi/3060.082114_5F00_2112_5F00_C1114Featur1.png)\n\nNote in the video `VS \"14\"` is replaced with VS 2015, which is the official name of next VS.\n",
            "created_at": "2014-11-14T03:44:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-63006668",
            "id": 63006668,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDA2NjY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63006668/reactions"
            },
            "updated_at": "2014-11-14T03:44:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63006668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "NONE",
            "body": "> If you want to call \"make\" but don't know if you are using make/ninja/etc you can use  cmake --build <build-dir>  instead (PROBLEM: this kills colored output)\n\n@equalsraf, perhaps we can ask @bradking about that problem if it is going to be changed in v3.1.0 (final), since the issue tracker is turned off in the repository: https://github.com/Kitware/CMake.\n",
            "created_at": "2014-11-14T03:57:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-63007444",
            "id": 63007444,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDA3NDQ0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63007444/reactions"
            },
            "updated_at": "2014-11-14T03:57:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63007444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Seems to be intentional, since --build was intended for automated builds i.e. since there is no tty colors are disabled - https://www.mail-archive.com/cmake@cmake.org/msg26011.html\n",
            "created_at": "2014-11-14T08:40:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-63024905",
            "id": 63024905,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDI0OTA1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63024905/reactions"
            },
            "updated_at": "2014-11-14T08:40:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63024905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Since CMake 3.0 the `cmake --build` command shares its own pipes with the launched build system.  Now color output works.\n",
            "created_at": "2014-11-14T13:57:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-63067346",
            "id": 63067346,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDY3MzQ2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63067346/reactions"
            },
            "updated_at": "2014-11-14T13:57:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63067346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/87268?v=4",
                "events_url": "https://api.github.com/users/bradking/events{/privacy}",
                "followers_url": "https://api.github.com/users/bradking/followers",
                "following_url": "https://api.github.com/users/bradking/following{/other_user}",
                "gists_url": "https://api.github.com/users/bradking/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bradking",
                "id": 87268,
                "login": "bradking",
                "node_id": "MDQ6VXNlcjg3MjY4",
                "organizations_url": "https://api.github.com/users/bradking/orgs",
                "received_events_url": "https://api.github.com/users/bradking/received_events",
                "repos_url": "https://api.github.com/users/bradking/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bradking/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bradking/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bradking"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Awesome! --build helps a ton when using ExternalProject. \n\nMaybe we can get rid of the MAKE_PRG bits lying around.\n",
            "created_at": "2014-11-14T14:05:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-63068295",
            "id": 63068295,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDY4Mjk1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63068295/reactions"
            },
            "updated_at": "2014-11-14T14:05:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63068295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "NONE",
            "body": "@aktau, here is the blog we were looking for: http://blogs.msdn.com/b/vcblog/archive/2014/11/17/c-11-14-17-features-in-vs-2015-preview.aspx. \n",
            "created_at": "2014-11-18T18:44:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-63522476",
            "id": 63522476,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTIyNDc2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63522476/reactions"
            },
            "updated_at": "2014-11-18T18:44:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63522476",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @aktau, here is the blog we were looking for: http://blogs.msdn.com/b/vcblog/archive/2014/11/17/c-11-14-17-features-in-vs-2015-preview.aspx.\n\nCool, I'll put it on the top of my to-read list.\n",
            "created_at": "2014-11-18T19:51:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-63533268",
            "id": 63533268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTMzMjY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63533268/reactions"
            },
            "updated_at": "2014-11-18T19:51:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/63533268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So MSVC 2015 definitely fixes the union initializers issue. Current problem is that libuv (or gyp maybe) does not build with MSVC 2015 yet.\n",
            "created_at": "2014-12-02T09:54:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-65206302",
            "id": 65206302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjA2MzAy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/65206302/reactions"
            },
            "updated_at": "2014-12-02T09:54:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/65206302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Updated notes: https://gist.github.com/equalsraf/4685f7aef022a36c26d5\n\nSome upstream todo items for when I get back to a Windows machine:\n1. need to be able to build libuv in MSVC 2015 - I can't get around the union initializer issues anymore (the macros make them too hard to change)\n2. luajit, need a way to set flags when building with msvcbuild.bat (for /MTd)\n\n... or alternatively build all dependencies as DLLs instead of static libs.\n\nPS: whatever you do with your lives never mix static libraries from MSVC 2013 and 2015, preposterous errors will follow.\n",
            "created_at": "2014-12-03T02:00:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-65340417",
            "id": 65340417,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQwNDE3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/65340417/reactions"
            },
            "updated_at": "2014-12-04T19:17:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/65340417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sigh, building libuv as a shared lib also fails https://github.com/joyent/libuv/issues/1382\n",
            "created_at": "2014-12-04T20:56:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-65702237",
            "id": 65702237,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzAyMjM3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/65702237/reactions"
            },
            "updated_at": "2014-12-04T20:56:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/65702237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "[clang-cl in cmake](http://public.kitware.com/Bug/bug_relationship_graph.php?bug_id=14458&graph=relation) almost worked for the main Neovim binary but failed for the dependencies.\n",
            "created_at": "2014-12-07T21:27:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-65955926",
            "id": 65955926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTU1OTI2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/65955926/reactions"
            },
            "updated_at": "2014-12-07T21:27:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/65955926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Interesting bug, MSVC generated output using windows style newlines (CRLF), the grammar at msgpack-gen.lua only recognised LF(\\n) as the separator - the end result was that the generator only parsed the first function in each header file, i.e. nvim only had a couple of API functions available\n\nI wonder:\n- is there any modern system that only uses CR (Mac OS used to)?\n- How do we test for this kind of error - the binary builds successfully, but the API is just not there?\n",
            "created_at": "2014-12-08T19:27:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-66171189",
            "id": 66171189,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTcxMTg5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66171189/reactions"
            },
            "updated_at": "2014-12-08T19:27:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66171189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> is there any modern system that only uses CR (Mac OS used to)?\n\nNot to my knowledge, it's either LF or CRLF. Mac OS 9 used CR but we specifically don't support that (and have been removing code pertaining to it).\n",
            "created_at": "2014-12-09T22:19:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-66369047",
            "id": 66369047,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2MzY5MDQ3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66369047/reactions"
            },
            "updated_at": "2014-12-09T22:19:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66369047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It seems the recent changes to ui.c define a new UI_CALL macro\n\n``` C\n// See http://stackoverflow.com/a/11172679 for a better explanation of how it\n// works.\n#define UI_CALL(...)                                              \\\n  do {                                                            \\\n    for (size_t i = 0; i < ui_count; i++) {                       \\\n      UI *ui = uis[i];                                            \\\n      UI_CALL_HELPER(CNT(__VA_ARGS__), __VA_ARGS__);              \\\n    }                                                             \\\n  } while (0)\n#define CNT(...) SELECT_NTH(__VA_ARGS__, MORE, MORE, MORE, MORE, ZERO, ignore)\n#define SELECT_NTH(a1, a2, a3, a4, a5, a6, ...) a6\n#define UI_CALL_HELPER(c, ...) UI_CALL_HELPER2(c, __VA_ARGS__)\n#define UI_CALL_HELPER2(c, ...) UI_CALL_##c(__VA_ARGS__)\n#define UI_CALL_MORE(method, ...) ui->method(ui, __VA_ARGS__)\n#define UI_CALL_ZERO(method) ui->method(ui)\n```\n\ne.g. called as \n\n``` C\n  UI_CALL(resize, width, height);\n```\n\nBut in Windows this fails to build, because the macro (for this particular call) expands as follows\n\n``` C\ndo { \n  for (size_t i = 0; i < ui_count; i++) { \n    UI *ui = uis[i];\n    ui->resize, width, height(ui);\n  } \n} while (0);\n```\n\nbut height is not a function. The same call in Linux expands as\n\n``` C\ndo {\n  for (size_t i = 0; i < ui_count; i++) { \n    UI *ui = uis[i]; \n    ui->resize(ui, width, height); \n  } \n} while (0);\n```\n",
            "created_at": "2014-12-12T00:25:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-66714082",
            "id": 66714082,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzE0MDgy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66714082/reactions"
            },
            "updated_at": "2014-12-12T00:32:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66714082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tarruda wouldn't this be equivalent?\n\n``` C\n#define UI_CALL(x, ...)                                              \\\n  do {                                                            \\\n    for (size_t i = 0; i < ui_count; i++) {                       \\\n      UI *ui = uis[i];                                            \\\n      ui->x(ui, __VA_ARGS__);                                     \\\n    }                                                             \\\n  } while (0)\n\n```\n",
            "created_at": "2014-12-12T01:00:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-66717183",
            "id": 66717183,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzE3MTgz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66717183/reactions"
            },
            "updated_at": "2014-12-12T01:00:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66717183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Aaaahhhh MSVC **VA_ARGS**\n\n> The C Standard specifies that at least one argument must be passed to the ellipsis, to ensure that the macro does not resolve to an expression with a trailing comma. The Visual C++ implementation will suppress a trailing comma if no arguments are passed to the ellipsis.\n\nwhich is why my previous example actually worked (with MSVC). For gcc we can go with `##__VA_ARGS__` instead of `__VA_ARGS__`. Does clang work with `##__VA_ARGS__`?\n",
            "created_at": "2014-12-12T23:33:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-66851726",
            "id": 66851726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODUxNzI2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66851726/reactions"
            },
            "updated_at": "2014-12-12T23:33:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66851726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Does clang work with ##**VA_ARGS**\n\nYes, I'm pretty sure it does. Clang tries hard to be compatible with gcc (GNU-like) on this front (and for commandline options too).\n",
            "created_at": "2014-12-14T01:02:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-66898373",
            "id": 66898373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODk4Mzcz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66898373/reactions"
            },
            "updated_at": "2014-12-14T01:02:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66898373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yes, I'm pretty sure it does. Clang tries hard to be compatible with gcc (GNU-like) on this front (and for commandline options too).\n\nSo given the MSVC behaviour, it seems ##**VA_ARGS** (or similar) is available on Clang, GCC, MSVC. That makes me happy :smile: . The following seems to work with GCC and MSVC (only difference is ##).\n\n``` C\n#ifdef MSVC\n  #define UI_CALL(x, ...)                                              \\\n    do {                                                            \\\n      for (size_t i = 0; i < ui_count; i++) {                       \\\n        UI *ui = uis[i];                                            \\\n        ui->x(ui, __VA_ARGS__);                                     \\\n      }                                                             \\\n    } while (0)\n#else\n  #define UI_CALL(x, ...)                                              \\\n    do {                                                            \\\n      for (size_t i = 0; i < ui_count; i++) {                       \\\n        UI *ui = uis[i];                                            \\\n        ui->x(ui, ##__VA_ARGS__);                                     \\\n      }                                                             \\\n    } while (0)\n#endif\n```\n\nWe can also try defining `##__VA_ARGS__` as `__VA_ARGS__` for MSVC (cant test ATM).\n",
            "created_at": "2014-12-14T13:27:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-66913217",
            "id": 66913217,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTEzMjE3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66913217/reactions"
            },
            "updated_at": "2014-12-14T13:27:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/66913217",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/715238?v=4",
                "events_url": "https://api.github.com/users/equalsraf/events{/privacy}",
                "followers_url": "https://api.github.com/users/equalsraf/followers",
                "following_url": "https://api.github.com/users/equalsraf/following{/other_user}",
                "gists_url": "https://api.github.com/users/equalsraf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/equalsraf",
                "id": 715238,
                "login": "equalsraf",
                "node_id": "MDQ6VXNlcjcxNTIzOA==",
                "organizations_url": "https://api.github.com/users/equalsraf/orgs",
                "received_events_url": "https://api.github.com/users/equalsraf/received_events",
                "repos_url": "https://api.github.com/users/equalsraf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/equalsraf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/equalsraf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/equalsraf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This thread is getting too long to digest, I suggest adding new comments to https://github.com/neovim/neovim/issues/1749. When I finish collecting the relevant parts of this issue, I would like to close this in favor of #1749.\n",
            "created_at": "2014-12-28T19:19:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-68216517",
            "id": 68216517,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjE2NTE3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68216517/reactions"
            },
            "updated_at": "2014-12-28T19:20:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/68216517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "#1749 has been open for a while, so I'll close this. My apologies if I missed something.\n",
            "created_at": "2015-04-14T02:44:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/696#issuecomment-92568951",
            "id": 92568951,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/696",
            "node_id": "MDEyOklzc3VlQ29tbWVudDkyNTY4OTUx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/92568951/reactions"
            },
            "updated_at": "2015-04-14T02:44:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/92568951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        }
    ],
    "comments": 146,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/696/comments",
    "created_at": "2014-05-07T14:15:06Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/696/events",
    "html_url": "https://github.com/neovim/neovim/issues/696",
    "id": 32988755,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        },
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 109461219,
            "name": "platform:windows",
            "node_id": "MDU6TGFiZWwxMDk0NjEyMTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:windows"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/696/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": "2015-11-01T19:29:16Z",
        "closed_issues": 119,
        "created_at": "2014-05-07T21:37:18Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "beta release, codename: \"whoa\"",
        "due_on": "2015-10-31T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/5",
        "id": 652241,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/5/labels",
        "node_id": "MDk6TWlsZXN0b25lNjUyMjQx",
        "number": 5,
        "open_issues": 0,
        "state": "closed",
        "title": "0.1-first-public-release",
        "updated_at": "2016-04-28T05:36:18Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/5"
    },
    "node_id": "MDU6SXNzdWUzMjk4ODc1NQ==",
    "number": 696,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/696/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/696/timeline",
    "title": "Master issue: Compiling under Windows (VS2013)",
    "updated_at": "2024-09-04T14:01:51Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/696",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ghost",
        "id": 10137,
        "login": "ghost",
        "node_id": "MDQ6VXNlcjEwMTM3",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ghost"
    }
}