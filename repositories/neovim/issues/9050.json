{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!-- Before reporting: search existing issues and check the FAQ. -->\r\nAttempting to build from master fails on OSX mojave. \r\n\r\n\r\n### Actual behaviour\r\nmake CMAKE_BUILD_TYPE=Release\r\n\r\n<details>\r\n<summary>build output</summary>\r\n\r\n```\r\nIn file included from unibilium.c:22:\r\n./unibilium.h:25:10: fatal error: 'stdio.h' file not found\r\n#include <stdio.h>\r\n         ^~~~~~~~~\r\n1 error generated.\r\ngmake[1]: *** [Makefile:69: unibilium.lo] Error 1\r\ngmake[1]: Leaving directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/unibilium'\r\n[13/66] Performing install step for 'libvterm'\r\nFAILED: build/src/libvterm-stamp/libvterm-install\r\ncd /Users/daniel.olivares/Development/neovim/.deps/build/src/libvterm && /usr/local/bin/gmake CC=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc PREFIX=/Users/daniel.olivares/Development/neovim/.deps/usr CFLAGS=-fPIC CFLAGS+=-Og CFLAGS+=-g install && /usr/local/Cellar/cmake/3.12.2/bin/cmake -E touch /Users/daniel.olivares/Development/neovim/.deps/build/src/libvterm-stamp/libvterm-install\r\ngmake[1]: Entering directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/libvterm'\r\ninstall -d /Users/daniel.olivares/Development/neovim/.deps/usr/include\r\ninstall -m644 include/vterm.h include/vterm_keycodes.h /Users/daniel.olivares/Development/neovim/.deps/usr/include\r\ninstall -d /Users/daniel.olivares/Development/neovim/.deps/usr/lib/pkgconfig\r\nsed -e \"s,@PREFIX@,/Users/daniel.olivares/Development/neovim/.deps/usr,\" -e \"s,@LIBDIR@,/Users/daniel.olivares/Development/neovim/.deps/usr/lib,\" -e \"s,@VERSION@,0.0,\" <vterm.pc.in >/Users/daniel.olivares/Development/neovim/.deps/usr/lib/pkgconfig/vterm.pc\r\nCC src/encoding.c\r\nIn file included from src/encoding.c:1:\r\nIn file included from src/vterm_internal.h:4:\r\ninclude/vterm.h:9:10: fatal error: 'stdlib.h' file not found\r\n#include <stdlib.h>\r\n         ^~~~~~~~~~\r\n1 error generated.\r\ngmake[1]: *** [Makefile:63: src/encoding.lo] Error 1\r\ngmake[1]: Leaving directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/libvterm'\r\n[14/66] Performing install step for 'luajit'\r\nFAILED: build/src/luajit-stamp/luajit-install\r\ncd /Users/daniel.olivares/Development/neovim/.deps/build/src/luajit && /usr/local/bin/gmake CFLAGS=-fPIC CFLAGS+=-DLUAJIT_DISABLE_JIT CFLAGS+=-DLUA_USE_APICHECK CFLAGS+=-DLUA_USE_ASSERT CCDEBUG+=-g Q= install CC=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc PREFIX=/Users/daniel.olivares/Development/neovim/.deps/usr && /usr/local/Cellar/cmake/3.12.2/bin/cmake -E touch /Users/daniel.olivares/Development/neovim/.deps/build/src/luajit-stamp/luajit-install\r\ngmake[1]: Entering directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/luajit'\r\n==== Building LuaJIT 2.0.5 ====\r\n/usr/local/bin/gmake -C src\r\ngmake[2]: Entering directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/luajit/src'\r\nIn file included from lj_arch.h:9:\r\nIn file included from ./lua.h:16:\r\n./luaconf.h:145:10: fatal error: 'assert.h' file not found\r\n#include <assert.h>\r\n         ^~~~~~~~~~\r\n1 error generated.\r\nIn file included from lj_arch.h:9:\r\nIn file included from ./lua.h:16:\r\n./luaconf.h:145:10: fatal error: 'assert.h' file not found\r\n#include <assert.h>\r\n         ^~~~~~~~~~\r\n1 error generated.\r\nIn file included from lj_arch.h:9:\r\nIn file included from ./lua.h:16:\r\n./luaconf.h:145:10: fatal error: 'assert.h' file not found\r\n#include <assert.h>\r\n         ^~~~~~~~~~\r\n1 error generated.\r\nIn file included from lj_arch.h:9:\r\nIn file included from ./lua.h:16:\r\n./luaconf.h:145:10: fatal error: 'assert.h' file not found\r\n#include <assert.h>\r\n         ^~~~~~~~~~\r\n1 error generated.\r\nIn file included from lj_arch.h:9:\r\nIn file included from ./lua.h:16:\r\n./luaconf.h:145:10: fatal error: 'assert.h' file not found\r\n#include <assert.h>\r\n         ^~~~~~~~~~\r\n1 error generated.\r\nIn file included from lj_arch.h:9:\r\nIn file included from ./lua.h:16:\r\n./luaconf.h:145:10: fatal error: 'assert.h' file not found\r\n#include <assert.h>\r\n         ^~~~~~~~~~\r\n1 error generated.\r\nIn file included from lj_arch.h:9:\r\nIn file included from ./lua.h:16:\r\n./luaconf.h:145:10: fatal error: 'assert.h' file not found\r\n#include <assert.h>\r\n         ^~~~~~~~~~\r\n1 error generated.\r\nIn file included from lj_arch.h:9:\r\nIn file included from ./lua.h:16:\r\n./luaconf.h:145:10: fatal error: 'assert.h' file not found\r\n#include <assert.h>\r\n```\r\n</details>\r\n\r\n### Expected behaviour\r\n\r\nFor the build process to succeed.\r\n\r\nI tried doing the typical xcode stuff ```xcode-select --install``` and the license accepting stuff. But so far nothing has worked.",
    "closed_at": "2018-10-17T23:28:44Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I would suggest trying `make distclean` first.  From what I've read, Mojave has moved standard header files out of `/usr/include`, so CMake may need to re-run to find where they are.\r\n\r\nIf that doesn't work, there's not much we can do.  This is clearly a macOS issue, not an nvim issue.",
            "created_at": "2018-09-25T16:27:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424412045",
            "id": 424412045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQxMjA0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424412045/reactions"
            },
            "updated_at": "2018-09-25T16:27:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424412045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Starting with Mojave, the headers are no longer installed under `/usr/include/` by default -- look under `Command Line Tools -> New Features` in the [release notes](https://developer.apple.com/documentation/xcode_release_notes/xcode_10_release_notes).\r\nRunning\r\n```\r\nopen /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg\r\n```\r\nfrom the command line fixes the issue (at least for me and using `brew`).\r\n\r\nThe release notes also states that this compatibility package will no longer be provided in the near future, so the build system on macOS will have to be adapted to look for headers in the SDK, making this (at that future point) indeed an nvim issue (if you do not want to punt this to homebrew). @jamessan ",
            "created_at": "2018-09-25T16:45:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424417456",
            "id": 424417456,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQxNzQ1Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 123,
                "-1": 0,
                "confused": 2,
                "eyes": 2,
                "heart": 37,
                "hooray": 39,
                "laugh": 5,
                "rocket": 23,
                "total_count": 231,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424417456/reactions"
            },
            "updated_at": "2018-09-25T16:57:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424417456",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "@jamessan That did not work. What @clason recommended got me past that struggle.\r\n\r\n@clason This got me closer to it! It got passed that error but now it's failing somewhere else and I'm not really sure where. ",
            "created_at": "2018-09-25T16:55:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424420776",
            "id": 424420776,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQyMDc3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424420776/reactions"
            },
            "updated_at": "2018-09-25T16:55:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424420776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12246915?v=4",
                "events_url": "https://api.github.com/users/FuzzOli87/events{/privacy}",
                "followers_url": "https://api.github.com/users/FuzzOli87/followers",
                "following_url": "https://api.github.com/users/FuzzOli87/following{/other_user}",
                "gists_url": "https://api.github.com/users/FuzzOli87/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FuzzOli87",
                "id": 12246915,
                "login": "FuzzOli87",
                "node_id": "MDQ6VXNlcjEyMjQ2OTE1",
                "organizations_url": "https://api.github.com/users/FuzzOli87/orgs",
                "received_events_url": "https://api.github.com/users/FuzzOli87/received_events",
                "repos_url": "https://api.github.com/users/FuzzOli87/repos",
                "site_admin": true,
                "starred_url": "https://api.github.com/users/FuzzOli87/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FuzzOli87/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FuzzOli87"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@FuzzOli87 Have you tried homebrew? This works for me (using https://github.com/Homebrew/homebrew-core/pull/32204).",
            "created_at": "2018-09-25T16:58:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424421893",
            "id": 424421893,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQyMTg5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424421893/reactions"
            },
            "updated_at": "2018-09-25T16:58:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424421893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the build system on macOS will have to be adapted to look for headers in the SDK\r\n\r\nAny help making that happen is appreciated -- pointers to documentation or PRs.  I'm not familiar with what would be needed here.",
            "created_at": "2018-09-25T16:59:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424422180",
            "id": 424422180,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQyMjE4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424422180/reactions"
            },
            "updated_at": "2018-09-25T16:59:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424422180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@jamessan I'd have to understand neovim's build system first; from the release notes linked above, the headers are now no longer installed in `/usr/include` but in either\r\n```\r\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk\r\n```\r\n(with a full Xcode install) or \r\n```\r\n/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk\r\n```\r\n(with only the command line tools installed). Having to special case macOS (>=10.14) will be a pain...\r\n\r\nIn the meantime, I've added this step to the `Building` section of the wiki for those compiling neovim themselves (i.e., not using homebrew, which gives an explicit error message pointing to the missing headers and the compatibility file).",
            "created_at": "2018-09-25T17:08:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424425017",
            "id": 424425017,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQyNTAxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424425017/reactions"
            },
            "updated_at": "2018-09-25T17:09:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424425017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "According to [CMake's documentation](https://cmake.org/cmake/help/latest/variable/CMAKE_OSX_SYSROOT.html#variable:CMAKE_OSX_SYSROOT), it seems the end-user building the software should be setting `CMAKE_OSX_SYSROOT` appropriately for the SDK they're targeting.\r\n\r\nHowever, it's supposed to default to `$SDKROOT` or, if that's not set, get calculated based on `$MACOSX_DEPLOYMENT_TARGET`.  Are these no longer set in your build environment?",
            "created_at": "2018-09-25T17:12:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424426333",
            "id": 424426333,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQyNjMzMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424426333/reactions"
            },
            "updated_at": "2018-09-25T17:12:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424426333",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Homebrew/homebrew-core#32204\r\n\r\nNo I've always just built from source. I had a reason at some point but I probably don't need that anymore. The error I'm getting is:\r\n\r\n<details>\r\n<summary>build output</summary>\r\n\r\n```\r\nmkdir -p .deps\r\ncd .deps && \\\r\n\t\tcmake -G 'Ninja'   \\\r\n\t\t /Users/daniel.olivares/Development/neovim/third-party\r\n-- The C compiler identification is AppleClang 10.0.0.10001145\r\n-- The CXX compiler identification is AppleClang 10.0.0.10001145\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Performing Test HAS_OG_FLAG\r\n-- Performing Test HAS_OG_FLAG - Success\r\n-- Found GNU Make at /usr/local/bin/gmake\r\n-- Found PkgConfig: /usr/local/bin/pkg-config (found version \"0.29.2\")\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/daniel.olivares/Development/neovim/.deps\r\nmkdir -p build\r\ntouch build/.ran-third-party-cmake\r\nninja  -C .deps\r\nninja: Entering directory `.deps'\r\n[8/90] Performing download step for 'gperf'\r\n-- file: /Users/daniel.olivares/Development/neovim/.deps/build/downloads/gperf/gperf-3.1.tar.gz\r\n-- downloading...\r\n     src='https://github.com/neovim/deps/raw/ff5b4b18a87397a8564016071ae64f64bcd8c635/opt/gperf-3.1.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/gperf/gperf-3.1.tar.gz'\r\n     timeout='none'\r\n-- downloading... done\r\n-- extracting...\r\n     src='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/gperf/gperf-3.1.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/src/gperf'\r\n-- extracting... [tar xfz]\r\n-- extracting... [analysis]\r\n-- extracting... [rename]\r\n-- extracting... [clean up]\r\n-- extracting... done\r\n[11/90] Performing download step for 'libvterm'\r\n-- file: /Users/daniel.olivares/Development/neovim/.deps/build/downloads/libvterm/3f62ac6b7bdffda39d68f723fb1806dfd6d6382d.tar.gz\r\n-- downloading...\r\n     src='https://github.com/neovim/libvterm/archive/3f62ac6b7bdffda39d68f723fb1806dfd6d6382d.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/libvterm/3f62ac6b7bdffda39d68f723fb1806dfd6d6382d.tar.gz'\r\n     timeout='none'\r\n-- downloading... done\r\n-- extracting...\r\n     src='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/libvterm/3f62ac6b7bdffda39d68f723fb1806dfd6d6382d.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/src/libvterm'\r\n-- extracting... [tar xfz]\r\n-- extracting... [analysis]\r\n-- extracting... [rename]\r\n-- extracting... [clean up]\r\n-- extracting... done\r\n[15/90] Performing download step for 'unibilium'\r\n-- file: /Users/daniel.olivares/Development/neovim/.deps/build/downloads/unibilium/v2.0.0.tar.gz\r\n-- downloading...\r\n     src='https://github.com/mauke/unibilium/archive/v2.0.0.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/unibilium/v2.0.0.tar.gz'\r\n     timeout='none'\r\n-- downloading... done\r\n-- extracting...\r\n     src='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/unibilium/v2.0.0.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/src/unibilium'\r\n-- extracting... [tar xfz]\r\n-- extracting... [analysis]\r\n-- extracting... [rename]\r\n-- extracting... [clean up]\r\n-- extracting... done\r\n[20/90] Performing download step for 'luajit'\r\n-- file: /Users/daniel.olivares/Development/neovim/.deps/build/downloads/luajit/7dbf0b05f1228c1c719866db5e5f3d58f87f74c8.tar.gz\r\n-- downloading...\r\n     src='https://github.com/LuaJIT/LuaJIT/archive/7dbf0b05f1228c1c719866db5e5f3d58f87f74c8.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/luajit/7dbf0b05f1228c1c719866db5e5f3d58f87f74c8.tar.gz'\r\n     timeout='none'\r\n-- downloading... done\r\n-- extracting...\r\n     src='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/luajit/7dbf0b05f1228c1c719866db5e5f3d58f87f74c8.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/src/luajit'\r\n-- extracting... [tar xfz]\r\n-- extracting... [analysis]\r\n-- extracting... [rename]\r\n-- extracting... [clean up]\r\n-- extracting... done\r\n[25/90] Performing download step for 'libuv'\r\n-- file: /Users/daniel.olivares/Development/neovim/.deps/build/downloads/libuv/v1.12.0.tar.gz\r\n-- downloading...\r\n     src='https://github.com/libuv/libuv/archive/v1.12.0.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/libuv/v1.12.0.tar.gz'\r\n     timeout='none'\r\n-- downloading... done\r\n-- extracting...\r\n     src='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/libuv/v1.12.0.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/src/libuv'\r\n-- extracting... [tar xfz]\r\n-- extracting... [analysis]\r\n-- extracting... [rename]\r\n-- extracting... [clean up]\r\n-- extracting... done\r\n[28/90] Performing download step for 'jemalloc'\r\n-- file: /Users/daniel.olivares/Development/neovim/.deps/build/downloads/jemalloc/jemalloc-4.5.0.tar.bz2\r\n-- downloading...\r\n     src='https://github.com/jemalloc/jemalloc/releases/download/4.5.0/jemalloc-4.5.0.tar.bz2'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/jemalloc/jemalloc-4.5.0.tar.bz2'\r\n     timeout='none'\r\n-- downloading... done\r\n-- extracting...\r\n     src='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/jemalloc/jemalloc-4.5.0.tar.bz2'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/src/jemalloc'\r\n-- extracting... [tar xfz]\r\n-- extracting... [analysis]\r\n-- extracting... [rename]\r\n-- extracting... [clean up]\r\n-- extracting... done\r\n[31/90] Performing download step for 'msgpack'\r\n-- file: /Users/daniel.olivares/Development/neovim/.deps/build/downloads/msgpack/msgpack-3.0.0.tar.gz\r\n-- downloading...\r\n     src='https://github.com/msgpack/msgpack-c/releases/download/cpp-3.0.0/msgpack-3.0.0.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/msgpack/msgpack-3.0.0.tar.gz'\r\n     timeout='none'\r\n-- downloading... done\r\n-- extracting...\r\n     src='/Users/daniel.olivares/Development/neovim/.deps/build/downloads/msgpack/msgpack-3.0.0.tar.gz'\r\n     dst='/Users/daniel.olivares/Development/neovim/.deps/build/src/msgpack'\r\n-- extracting... [tar xfz]\r\n-- extracting... [analysis]\r\n-- extracting... [rename]\r\n-- extracting... [clean up]\r\n-- extracting... done\r\n[34/90] Performing configure step for 'msgpack'\r\n-- The C compiler identification is AppleClang 10.0.0.10001145\r\n-- The CXX compiler identification is AppleClang 10.0.0.10001145\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Could NOT find GTest (missing: GTEST_LIBRARY GTEST_INCLUDE_DIR GTEST_MAIN_LIBRARY)\r\n-- Found ZLIB: /usr/lib/libz.dylib (found version \"1.2.11\")\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - found\r\n-- Found Threads: TRUE\r\n-- Performing Test MSGPACK_ENABLE_GCC_CXX_ATOMIC\r\n-- Performing Test MSGPACK_ENABLE_GCC_CXX_ATOMIC - Failed\r\n-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE)\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/daniel.olivares/Development/neovim/.deps/build/src/msgpack-build\r\n[35/90] Performing build step for 'msgpack'\r\n[1/13] Building C object CMakeFiles/msgpackc-static.dir/src/vrefbuffer.c.o\r\n[2/13] Building C object CMakeFiles/msgpackc-static.dir/src/version.c.o\r\n[3/13] Building C object CMakeFiles/msgpackc-static.dir/src/zone.c.o\r\n[4/13] Building C object CMakeFiles/msgpackc.dir/src/version.c.o\r\n[5/13] Building C object CMakeFiles/msgpackc.dir/src/vrefbuffer.c.o\r\n[6/13] Building C object CMakeFiles/msgpackc.dir/src/zone.c.o\r\n[7/13] Building C object CMakeFiles/msgpackc-static.dir/src/objectc.c.o\r\n[8/13] Building C object CMakeFiles/msgpackc.dir/src/objectc.c.o\r\n[9/13] Building C object CMakeFiles/msgpackc-static.dir/src/unpack.c.o\r\n[10/13] Building C object CMakeFiles/msgpackc.dir/src/unpack.c.o\r\n[11/13] Linking C static library libmsgpackc.a\r\n[12/13] Linking C shared library libmsgpackc.2.0.0.dylib\r\n[13/13] Creating library symlink libmsgpackc.2.dylib libmsgpackc.dylib\r\n[36/90] Performing install step for 'msgpack'\r\n[0/1] Install the project...\r\n-- Install configuration: \"Release\"\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/libmsgpackc.2.0.0.dylib\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/libmsgpackc.2.dylib\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/libmsgpackc.dylib\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/libmsgpackc.a\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/fbuffer.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/gcc_atomic.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/object.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/pack.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/pack_define.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/pack_template.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/alpha.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/arm.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/blackfin.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/convex.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/ia64.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/m68k.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/mips.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/parisc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/ppc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/pyramid.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/rs6k.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/sparc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/superh.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/sys370.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/sys390.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/x86.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/x86/32.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/x86/64.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/architecture/z.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/borland.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/clang.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/comeau.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/compaq.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/diab.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/digitalmars.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/dignus.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/edg.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/ekopath.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/gcc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/gcc_xml.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/greenhills.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/hp_acc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/iar.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/ibm.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/intel.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/kai.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/llvm.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/metaware.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/metrowerks.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/microtec.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/mpw.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/palm.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/pgi.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/sgi_mipspro.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/sunpro.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/tendra.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/visualc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/compiler/watcom.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/detail/_cassert.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/detail/_exception.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/detail/comp_detected.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/detail/endian_compat.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/detail/os_detected.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/detail/platform_detected.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/detail/test.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/detail/test_def.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd/arm.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd/arm/versions.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd/ppc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd/ppc/versions.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd/x86.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd/x86/versions.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd/x86_amd.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/hardware/simd/x86_amd/versions.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/language.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/language/objc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/language/stdc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/language/stdcpp.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/c.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/c/_prefix.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/c/gnu.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/c/uc.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/c/vms.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/c/zos.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/_prefix.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/cxx.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/dinkumware.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/libcomo.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/modena.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/msl.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/roguewave.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/sgi.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/stdcpp3.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/stlport.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/library/std/vacpp.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/make.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/aix.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/amigaos.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/android.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/beos.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/bsd.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/bsd/bsdi.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/bsd/dragonfly.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/bsd/free.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/bsd/net.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/bsd/open.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/cygwin.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/haiku.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/hpux.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/ios.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/irix.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/linux.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/macos.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/os400.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/qnxnto.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/solaris.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/unix.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/vms.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/os/windows.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/other.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/other/endian.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/platform.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/platform/mingw.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/platform/windows_desktop.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/platform/windows_phone.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/platform/windows_runtime.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/platform/windows_store.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/version.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/predef/version_number.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/sbuffer.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/sysdep.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/unpack.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/unpack_define.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/unpack_template.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/util.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/version.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/version_master.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/vrefbuffer.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/zbuffer.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/include/msgpack/zone.h\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/pkgconfig/msgpack.pc\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/cmake/msgpack/msgpack-targets.cmake\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/cmake/msgpack/msgpack-targets-release.cmake\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/cmake/msgpack/msgpack-config.cmake\r\n-- Installing: /Users/daniel.olivares/Development/neovim/.deps/usr/lib/cmake/msgpack/msgpack-config-version.cmake\r\n[38/90] Performing install step for 'libvterm'\r\ngmake[1]: Entering directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/libvterm'\r\ninstall -d /Users/daniel.olivares/Development/neovim/.deps/usr/include\r\ninstall -m644 include/vterm.h include/vterm_keycodes.h /Users/daniel.olivares/Development/neovim/.deps/usr/include\r\ninstall -d /Users/daniel.olivares/Development/neovim/.deps/usr/lib/pkgconfig\r\nsed -e \"s,@PREFIX@,/Users/daniel.olivares/Development/neovim/.deps/usr,\" -e \"s,@LIBDIR@,/Users/daniel.olivares/Development/neovim/.deps/usr/lib,\" -e \"s,@VERSION@,0.0,\" <vterm.pc.in >/Users/daniel.olivares/Development/neovim/.deps/usr/lib/pkgconfig/vterm.pc\r\nTBL src/encoding/DECdrawing.tbl\r\nTBL src/encoding/uk.tbl\r\nCC src/encoding.c\r\nCC src/keyboard.c\r\nCC src/mouse.c\r\nCC src/parser.c\r\nCC src/pen.c\r\nCC src/screen.c\r\nCC src/state.c\r\nCC src/unicode.c\r\nsrc/unicode.c:215:12: warning: unused function 'mk_wcswidth' [-Wunused-function]\r\nstatic int mk_wcswidth(const uint32_t *pwcs, size_t n)\r\n           ^\r\nsrc/unicode.c:306:12: warning: unused function 'mk_wcswidth_cjk' [-Wunused-function]\r\nstatic int mk_wcswidth_cjk(const uint32_t *pwcs, size_t n)\r\n           ^\r\n2 warnings generated.\r\nCC src/vterm.c\r\nLINK libvterm.la\r\ninstall -d /Users/daniel.olivares/Development/neovim/.deps/usr/lib\r\nglibtool --quiet --mode=install install libvterm.la /Users/daniel.olivares/Development/neovim/.deps/usr/lib/libvterm.la\r\nglibtool --quiet --mode=finish /Users/daniel.olivares/Development/neovim/.deps/usr/lib\r\nCC bin/unterm.c\r\nbin/unterm.c:157:32: warning: suggest braces around initialization of subobject [-Wmissing-braces]\r\n  VTermScreenCell prevcell = { 0 };\r\n                               ^\r\n                               {}\r\nbin/unterm.c:175:32: warning: suggest braces around initialization of subobject [-Wmissing-braces]\r\n  VTermScreenCell prevcell = { 0 };\r\n                               ^\r\n                               {}\r\n2 warnings generated.\r\nCC bin/vterm-ctrl.c\r\nbin/vterm-ctrl.c:117:10: warning: implicit declaration of function 'strdup' is invalid in C99 [-Wimplicit-function-declaration]\r\n  return strdup(csi);\r\n         ^\r\nbin/vterm-ctrl.c:117:10: warning: incompatible integer to pointer conversion returning 'int' from a function with result type 'char *' [-Wint-conversion]\r\n  return strdup(csi);\r\n         ^~~~~~~~~~~\r\nbin/vterm-ctrl.c:142:10: warning: implicit declaration of function 'strdup' is invalid in C99 [-Wimplicit-function-declaration]\r\n  return strdup(dcs);\r\n         ^\r\nbin/vterm-ctrl.c:142:10: warning: incompatible integer to pointer conversion returning 'int' from a function with result type 'char *' [-Wint-conversion]\r\n  return strdup(dcs);\r\n         ^~~~~~~~~~~\r\nbin/vterm-ctrl.c:129:10: warning: result of comparison of constant 156 with expression of type 'char' is always false [-Wtautological-constant-out-of-range-compare]\r\n    if(c == 0x9c) // ST\r\n       ~ ^  ~~~~\r\n5 warnings generated.\r\nCC bin/vterm-dump.c\r\ninstall -d /Users/daniel.olivares/Development/neovim/.deps/usr/bin\r\nglibtool --quiet --mode=install install bin/unterm bin/vterm-ctrl bin/vterm-dump /Users/daniel.olivares/Development/neovim/.deps/usr/bin/\r\ngmake[1]: Leaving directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/libvterm'\r\n[40/90] Performing configure step for 'gperf'\r\nchecking whether /usr/local/bin/gmake sets $(MAKE)... yes\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\n=== configuring in lib (/Users/daniel.olivares/Development/neovim/.deps/build/src/gperf/lib)\r\nconfigure: running /bin/sh ./configure --disable-option-checking '--prefix=/Users/daniel.olivares/Development/neovim/.deps/usr'  'MAKE=/usr/local/bin/gmake' --cache-file=/dev/null --srcdir=.\r\nchecking whether /usr/local/bin/gmake sets $(MAKE)... yes\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for g++... g++\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether g++ accepts -g... yes\r\nchecking how to run the C++ preprocessor... g++ -E\r\nchecking for ar... ar\r\nchecking for ranlib... ranlib\r\nchecking for a BSD compatible install... /usr/bin/install -c\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\n=== configuring in src (/Users/daniel.olivares/Development/neovim/.deps/build/src/gperf/src)\r\nconfigure: running /bin/sh ./configure --disable-option-checking '--prefix=/Users/daniel.olivares/Development/neovim/.deps/usr'  'MAKE=/usr/local/bin/gmake' --cache-file=/dev/null --srcdir=.\r\nchecking whether /usr/local/bin/gmake sets $(MAKE)... yes\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for g++... g++\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether g++ accepts -g... yes\r\nchecking how to run the C++ preprocessor... g++ -E\r\nchecking for a BSD compatible install... /usr/bin/install -c\r\nchecking for stack-allocated variable-size arrays... yes\r\nchecking for rand in -lm... yes\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating config.h\r\n=== configuring in tests (/Users/daniel.olivares/Development/neovim/.deps/build/src/gperf/tests)\r\nconfigure: running /bin/sh ./configure --disable-option-checking '--prefix=/Users/daniel.olivares/Development/neovim/.deps/usr'  'MAKE=/usr/local/bin/gmake' --cache-file=/dev/null --srcdir=.\r\nchecking whether /usr/local/bin/gmake sets $(MAKE)... yes\r\nchecking for gcc... gcc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether gcc accepts -g... yes\r\nchecking for gcc option to accept ISO C89... none needed\r\nchecking how to run the C preprocessor... gcc -E\r\nchecking for g++... g++\r\nchecking whether we are using the GNU C++ compiler... yes\r\nchecking whether g++ accepts -g... yes\r\nchecking how to run the C++ preprocessor... g++ -E\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\n=== configuring in doc (/Users/daniel.olivares/Development/neovim/.deps/build/src/gperf/doc)\r\nconfigure: running /bin/sh ./configure --disable-option-checking '--prefix=/Users/daniel.olivares/Development/neovim/.deps/usr'  'MAKE=/usr/local/bin/gmake' --cache-file=/dev/null --srcdir=.\r\nchecking whether /usr/local/bin/gmake sets $(MAKE)... yes\r\nchecking for a BSD compatible install... /usr/bin/install -c\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\n[41/90] Performing install step for 'luajit'\r\nFAILED: build/src/luajit-stamp/luajit-install\r\ncd /Users/daniel.olivares/Development/neovim/.deps/build/src/luajit && /usr/local/bin/gmake CFLAGS=-fPIC CFLAGS+=-DLUAJIT_DISABLE_JIT CFLAGS+=-DLUA_USE_APICHECK CFLAGS+=-DLUA_USE_ASSERT CCDEBUG+=-g Q= install CC=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc PREFIX=/Users/daniel.olivares/Development/neovim/.deps/usr && /usr/local/Cellar/cmake/3.12.2/bin/cmake -E touch /Users/daniel.olivares/Development/neovim/.deps/build/src/luajit-stamp/luajit-install\r\ngmake[1]: Entering directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/luajit'\r\n==== Building LuaJIT 2.0.5 ====\r\n/usr/local/bin/gmake -C src\r\ngmake[2]: Entering directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/luajit/src'\r\nHOSTCC    host/minilua.o\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -g -O2 -fomit-frame-pointer -Wall  -fPIC -DLUAJIT_DISABLE_JIT -DLUA_USE_APICHECK -DLUA_USE_ASSERT -I. -DLUAJIT_TARGET=LUAJIT_ARCH_x64 -DLJ_ARCH_HASFPU=1 -DLJ_ABI_SOFTFP=0  -c -o host/minilua.o host/minilua.c\r\nHOSTLINK  host/minilua\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -g -L/usr/local/opt/openssl/lib   -o host/minilua host/minilua.o -lm\r\nld: library not found for -lgcc_s.10.4\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\ngmake[2]: *** [Makefile:606: host/minilua] Error 1\r\ngmake[2]: Leaving directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/luajit/src'\r\ngmake[1]: *** [Makefile:110: src/luajit] Error 2\r\ngmake[1]: Leaving directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/luajit'\r\n[43/90] Performing configure step for 'jemalloc'\r\nchecking for xsltproc... /usr/bin/xsltproc\r\nchecking for gcc... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc accepts -g... yes\r\nchecking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc option to accept ISO C89... none needed\r\nchecking whether compiler is cray... no\r\nchecking whether compiler supports -std=gnu11... yes\r\nchecking whether compiler supports -Wall... yes\r\nchecking whether compiler supports -Werror=declaration-after-statement... yes\r\nchecking whether compiler supports -Wshorten-64-to-32... yes\r\nchecking whether compiler supports -Wsign-compare... yes\r\nchecking whether compiler supports -pipe... yes\r\nchecking whether compiler supports -g3... yes\r\nchecking how to run the C preprocessor... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -E\r\nchecking for grep that handles long lines and -e... /usr/bin/grep\r\nchecking for egrep... /usr/bin/grep -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking whether byte ordering is bigendian... no\r\nchecking size of void *... 8\r\nchecking size of int... 4\r\nchecking size of long... 8\r\nchecking size of long long... 8\r\nchecking size of intmax_t... 8\r\nchecking build system type... x86_64-apple-darwin18.0.0\r\nchecking host system type... x86_64-apple-darwin18.0.0\r\nchecking whether pause instruction is compilable... yes\r\nchecking for ar... ar\r\nchecking malloc.h usability... no\r\nchecking malloc.h presence... no\r\nchecking for malloc.h... no\r\nchecking for library containing log... none required\r\nchecking whether __attribute__ syntax is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... no\r\nchecking whether tls_model attribute is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... no\r\nchecking whether alloc_size attribute is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... no\r\nchecking whether format(gnu_printf, ...) attribute is compilable... no\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether compiler supports -herror_on_warning... no\r\nchecking whether format(printf, ...) attribute is compilable... yes\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking for ranlib... ranlib\r\nchecking for ld... /usr/bin/ld\r\nchecking for autoconf... /usr/local/bin/autoconf\r\nchecking for memalign... no\r\nchecking for valloc... yes\r\nchecking whether compiler supports -O3... yes\r\nchecking whether compiler supports -funroll-loops... yes\r\nchecking configured backtracing method... N/A\r\nchecking for sbrk... yes\r\nDisabling dss allocation because sbrk is deprecated\r\nchecking whether utrace(2) is compilable... no\r\nchecking whether valgrind is compilable... no\r\nchecking whether a program using __builtin_unreachable is compilable... yes\r\nchecking whether a program using __builtin_ffsl is compilable... yes\r\nchecking LG_PAGE... 12\r\nchecking pthread.h usability... yes\r\nchecking pthread.h presence... yes\r\nchecking for pthread.h... yes\r\nchecking for pthread_create in -lpthread... yes\r\nchecking whether pthread_atfork(3) is compilable... yes\r\nchecking for library containing clock_gettime... none required\r\nchecking whether clock_gettime(CLOCK_MONOTONIC_COARSE, ...) is compilable... no\r\nchecking whether clock_gettime(CLOCK_MONOTONIC, ...) is compilable... no\r\nchecking whether mach_absolute_time() is compilable... yes\r\nchecking whether compiler supports -Werror... yes\r\nchecking whether syscall(2) is compilable... no\r\nchecking for secure_getenv... no\r\nchecking for issetugid... yes\r\nchecking for _malloc_thread_cleanup... no\r\nchecking for _pthread_mutex_init_calloc_cb... no\r\nForcing no TLS to avoid allocator/threading bootstrap issues\r\nchecking whether C11 atomics is compilable... yes\r\nchecking whether atomic(9) is compilable... no\r\nchecking whether Darwin OSAtomic*() is compilable... yes\r\nchecking whether madvise(2) is compilable... yes\r\nchecking whether madvise(..., MADV_FREE) is compilable... yes\r\nchecking whether madvise(..., MADV_DONTNEED) is compilable... yes\r\nchecking whether madvise(..., MADV_[NO]HUGEPAGE) is compilable... no\r\nchecking for __builtin_clz... yes\r\nchecking whether Darwin os_unfair_lock_*() is compilable... yes\r\nchecking whether Darwin OSSpin*() is compilable... yes\r\nchecking whether glibc malloc hook is compilable... no\r\nchecking whether glibc memalign hook is compilable... no\r\nchecking whether pthreads adaptive mutexes is compilable... no\r\nchecking for stdbool.h that conforms to C99... yes\r\nchecking for _Bool... yes\r\nconfigure: creating ./config.status\r\nconfig.status: creating Makefile\r\nconfig.status: creating jemalloc.pc\r\nconfig.status: creating doc/html.xsl\r\nconfig.status: creating doc/manpages.xsl\r\nconfig.status: creating doc/jemalloc.xml\r\nconfig.status: creating include/jemalloc/jemalloc_macros.h\r\nconfig.status: creating include/jemalloc/jemalloc_protos.h\r\nconfig.status: creating include/jemalloc/jemalloc_typedefs.h\r\nconfig.status: creating include/jemalloc/internal/jemalloc_internal.h\r\nconfig.status: creating test/test.sh\r\nconfig.status: creating test/include/test/jemalloc_test.h\r\nconfig.status: creating config.stamp\r\nconfig.status: creating bin/jemalloc-config\r\nconfig.status: creating bin/jemalloc.sh\r\nconfig.status: creating bin/jeprof\r\nconfig.status: creating include/jemalloc/jemalloc_defs.h\r\nconfig.status: creating include/jemalloc/internal/jemalloc_internal_defs.h\r\nconfig.status: creating test/include/test/jemalloc_test_defs.h\r\nconfig.status: executing include/jemalloc/internal/private_namespace.h commands\r\nconfig.status: executing include/jemalloc/internal/private_unnamespace.h commands\r\nconfig.status: executing include/jemalloc/internal/public_symbols.txt commands\r\nconfig.status: executing include/jemalloc/internal/public_namespace.h commands\r\nconfig.status: executing include/jemalloc/internal/public_unnamespace.h commands\r\nconfig.status: executing include/jemalloc/internal/size_classes.h commands\r\nconfig.status: executing include/jemalloc/jemalloc_protos_jet.h commands\r\nconfig.status: executing include/jemalloc/jemalloc_rename.h commands\r\nconfig.status: executing include/jemalloc/jemalloc_mangle.h commands\r\nconfig.status: executing include/jemalloc/jemalloc_mangle_jet.h commands\r\nconfig.status: executing include/jemalloc/jemalloc.h commands\r\n===============================================================================\r\njemalloc version   : 4.5.0-0-g04380e79f1e2428bd0ad000bbc6e3d2dfc6b66a5\r\nlibrary revision   : 2\r\n\r\nCONFIG             : CC=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc --prefix=/Users/daniel.olivares/Development/neovim/.deps/usr LDFLAGS=-L/usr/local/opt/openssl/lib CPPFLAGS=-I/usr/local/opt/openssl/include\r\nCC                 : /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc\r\nCONFIGURE_CFLAGS   : -std=gnu11 -Wall -Werror=declaration-after-statement -Wshorten-64-to-32 -Wsign-compare -pipe -g3 -O3 -funroll-loops\r\nSPECIFIED_CFLAGS   :\r\nEXTRA_CFLAGS       :\r\nCPPFLAGS           : -I/usr/local/opt/openssl/include -D_REENTRANT\r\nLDFLAGS            : -L/usr/local/opt/openssl/lib\r\nEXTRA_LDFLAGS      :\r\nLIBS               : -lpthread\r\nRPATH_EXTRA        :\r\n\r\nXSLTPROC           : /usr/bin/xsltproc\r\nXSLROOT            :\r\n\r\nPREFIX             : /Users/daniel.olivares/Development/neovim/.deps/usr\r\nBINDIR             : /Users/daniel.olivares/Development/neovim/.deps/usr/bin\r\nDATADIR            : /Users/daniel.olivares/Development/neovim/.deps/usr/share\r\nINCLUDEDIR         : /Users/daniel.olivares/Development/neovim/.deps/usr/include\r\nLIBDIR             : /Users/daniel.olivares/Development/neovim/.deps/usr/lib\r\nMANDIR             : /Users/daniel.olivares/Development/neovim/.deps/usr/share/man\r\n\r\nsrcroot            :\r\nabs_srcroot        : /Users/daniel.olivares/Development/neovim/.deps/build/src/jemalloc/\r\nobjroot            :\r\nabs_objroot        : /Users/daniel.olivares/Development/neovim/.deps/build/src/jemalloc/\r\n\r\nJEMALLOC_PREFIX    : je_\r\nJEMALLOC_PRIVATE_NAMESPACE\r\n                   : je_\r\ninstall_suffix     :\r\nmalloc_conf        :\r\nautogen            : 0\r\ncc-silence         : 1\r\ndebug              : 0\r\ncode-coverage      : 0\r\nstats              : 1\r\nprof               : 0\r\nprof-libunwind     : 0\r\nprof-libgcc        : 0\r\nprof-gcc           : 0\r\ntcache             : 1\r\nthp                : 0\r\nfill               : 1\r\nutrace             : 0\r\nvalgrind           : 0\r\nxmalloc            : 0\r\nmunmap             : 1\r\nlazy_lock          : 0\r\ntls                : 0\r\ncache-oblivious    : 1\r\n===============================================================================\r\n[44/90] Performing build step for 'unibilium'\r\ngmake[1]: Entering directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/unibilium'\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o unibilium.lo -c unibilium.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c unibilium.c  -fno-common -DPIC -o .libs/unibilium.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c unibilium.c -o unibilium.o >/dev/null 2>&1\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o uninames.lo -c uninames.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c uninames.c  -fno-common -DPIC -o .libs/uninames.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c uninames.c -o uninames.o >/dev/null 2>&1\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -DTERMINFO_DIRS='\"/etc/terminfo:/lib/terminfo:/usr/share/terminfo:/usr/lib/terminfo:/usr/local/share/terminfo:/usr/local/lib/terminfo\"' -Wall -std=c99 -fPIC  -o uniutil.lo -c uniutil.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -DTERMINFO_DIRS=\\\"/etc/terminfo:/lib/terminfo:/usr/share/terminfo:/usr/lib/terminfo:/usr/local/share/terminfo:/usr/local/lib/terminfo\\\" -Wall -std=c99 -fPIC -c uniutil.c  -fno-common -DPIC -o .libs/uniutil.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -DTERMINFO_DIRS=\\\"/etc/terminfo:/lib/terminfo:/usr/share/terminfo:/usr/lib/terminfo:/usr/local/share/terminfo:/usr/local/lib/terminfo\\\" -Wall -std=c99 -fPIC -c uniutil.c -o uniutil.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -rpath '/Users/daniel.olivares/Development/neovim/.deps/usr/lib' -version-info 4:0:0 -o libunibilium.la unibilium.lo uninames.lo uniutil.lo\r\nglibtool: link: clang -dynamiclib -Wl,-undefined -Wl,dynamic_lookup -o .libs/libunibilium.4.dylib  .libs/unibilium.o .libs/uninames.o .libs/uniutil.o   -L/usr/local/opt/openssl/lib    -install_name  /Users/daniel.olivares/Development/neovim/.deps/usr/lib/libunibilium.4.dylib -compatibility_version 5 -current_version 5.0 -Wl,-single_module\r\nglibtool: link: (cd \".libs\" && rm -f \"libunibilium.dylib\" && ln -s \"libunibilium.4.dylib\" \"libunibilium.dylib\")\r\nglibtool: link: ar cru .libs/libunibilium.a  unibilium.o uninames.o uniutil.o\r\nglibtool: link: ranlib .libs/libunibilium.a\r\nglibtool: link: ( cd \".libs\" && rm -f \"libunibilium.la\" && ln -s \"../libunibilium.la\" \"libunibilium.la\" )\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_from_term.pod | gzip > man/unibi_from_term.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_dump.pod | gzip > man/unibi_dump.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_add_ext_str.pod | gzip > man/unibi_add_ext_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_str_from_var.pod | gzip > man/unibi_str_from_var.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_num.pod | gzip > man/unibi_set_num.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_short_name_str.pod | gzip > man/unibi_short_name_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_add_ext_bool.pod | gzip > man/unibi_add_ext_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_ext_str.pod | gzip > man/unibi_get_ext_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_num.pod | gzip > man/unibi_get_num.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_name_str.pod | gzip > man/unibi_name_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_from_fd.pod | gzip > man/unibi_from_fd.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_ext_bool_name.pod | gzip > man/unibi_set_ext_bool_name.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_ext_str_name.pod | gzip > man/unibi_set_ext_str_name.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_from_fp.pod | gzip > man/unibi_from_fp.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_name_num.pod | gzip > man/unibi_name_num.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_ext_str.pod | gzip > man/unibi_set_ext_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_ext_num_name.pod | gzip > man/unibi_get_ext_num_name.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_ext_bool.pod | gzip > man/unibi_set_ext_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_ext_bool_name.pod | gzip > man/unibi_get_ext_bool_name.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_ext_bool.pod | gzip > man/unibi_get_ext_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_short_name_num.pod | gzip > man/unibi_short_name_num.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_ext_str_name.pod | gzip > man/unibi_get_ext_str_name.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_count_ext_bool.pod | gzip > man/unibi_count_ext_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_name_bool.pod | gzip > man/unibi_name_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_var_from_num.pod | gzip > man/unibi_var_from_num.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_from_file.pod | gzip > man/unibi_from_file.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_ext_num.pod | gzip > man/unibi_set_ext_num.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_var_from_str.pod | gzip > man/unibi_var_from_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibilium.h.pod | gzip > man/unibilium.h.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_name.pod | gzip > man/unibi_set_name.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_str.pod | gzip > man/unibi_get_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_name.pod | gzip > man/unibi_get_name.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_add_ext_num.pod | gzip > man/unibi_add_ext_num.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_int_from_var.pod | gzip > man/unibi_int_from_var.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_from_mem.pod | gzip > man/unibi_from_mem.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_from_env.pod | gzip > man/unibi_from_env.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_terminfo_dirs.pod | gzip > man/unibi_terminfo_dirs.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_run.pod | gzip > man/unibi_run.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_bool.pod | gzip > man/unibi_set_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_format.pod | gzip > man/unibi_format.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_dummy.pod | gzip > man/unibi_dummy.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_del_ext_bool.pod | gzip > man/unibi_del_ext_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_ext_num_name.pod | gzip > man/unibi_set_ext_num_name.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_str.pod | gzip > man/unibi_set_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_set_aliases.pod | gzip > man/unibi_set_aliases.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_count_ext_str.pod | gzip > man/unibi_count_ext_str.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_short_name_bool.pod | gzip > man/unibi_short_name_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_aliases.pod | gzip > man/unibi_get_aliases.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_bool.pod | gzip > man/unibi_get_bool.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_get_ext_num.pod | gzip > man/unibi_get_ext_num.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_destroy.pod | gzip > man/unibi_destroy.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_num_from_var.pod | gzip > man/unibi_num_from_var.3.gz\r\npod2man -c \"unibilium\" -s3 -r \"unibilium-2.0.0\" doc/unibi_count_ext_num.pod | gzip > man/unibi_count_ext_num.3.gz\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o tools/gen-static-test.lo -c tools/gen-static-test.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c tools/gen-static-test.c  -fno-common -DPIC -o tools/.libs/gen-static-test.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c tools/gen-static-test.c -o tools/gen-static-test.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o tools/gen-static-test libunibilium.la tools/gen-static-test.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o tools/.libs/gen-static-test tools/.libs/gen-static-test.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o tools/unibi-dump.lo -c tools/unibi-dump.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c tools/unibi-dump.c  -fno-common -DPIC -o tools/.libs/unibi-dump.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c tools/unibi-dump.c -o tools/unibi-dump.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o tools/unibi-dump libunibilium.la tools/unibi-dump.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o tools/.libs/unibi-dump tools/.libs/unibi-dump.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o tools/unibi-put.lo -c tools/unibi-put.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c tools/unibi-put.c  -fno-common -DPIC -o tools/.libs/unibi-put.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c tools/unibi-put.c -o tools/unibi-put.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o tools/unibi-put libunibilium.la tools/unibi-put.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o tools/.libs/unibi-put tools/.libs/unibi-put.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o t/static_screen.lo -c t/static_screen.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_screen.c  -fno-common -DPIC -o t/.libs/static_screen.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_screen.c -o t/static_screen.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o t/static_screen.t libunibilium.la t/static_screen.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o t/.libs/static_screen.t t/.libs/static_screen.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o t/if-then-else.lo -c t/if-then-else.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/if-then-else.c  -fno-common -DPIC -o t/.libs/if-then-else.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/if-then-else.c -o t/if-then-else.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o t/if-then-else.t libunibilium.la t/if-then-else.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o t/.libs/if-then-else.t t/.libs/if-then-else.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o t/wide-format.lo -c t/wide-format.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/wide-format.c  -fno-common -DPIC -o t/.libs/wide-format.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/wide-format.c -o t/wide-format.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o t/wide-format.t libunibilium.la t/wide-format.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o t/.libs/wide-format.t t/.libs/wide-format.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o t/static_tmux.lo -c t/static_tmux.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_tmux.c  -fno-common -DPIC -o t/.libs/static_tmux.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_tmux.c -o t/static_tmux.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o t/static_tmux.t libunibilium.la t/static_tmux.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o t/.libs/static_tmux.t t/.libs/static_tmux.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o t/static_xterm.lo -c t/static_xterm.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_xterm.c  -fno-common -DPIC -o t/.libs/static_xterm.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_xterm.c -o t/static_xterm.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o t/static_xterm.t libunibilium.la t/static_xterm.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o t/.libs/static_xterm.t t/.libs/static_xterm.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o t/static_screen-256color.lo -c t/static_screen-256color.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_screen-256color.c  -fno-common -DPIC -o t/.libs/static_screen-256color.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_screen-256color.c -o t/static_screen-256color.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o t/static_screen-256color.t libunibilium.la t/static_screen-256color.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o t/.libs/static_screen-256color.t t/.libs/static_screen-256color.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o t/00_load.lo -c t/00_load.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/00_load.c  -fno-common -DPIC -o t/.libs/00_load.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/00_load.c -o t/00_load.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o t/00_load.t libunibilium.la t/00_load.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o t/.libs/00_load.t t/.libs/00_load.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nglibtool --mode=compile --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC  -o t/static_xterm-256color.lo -c t/static_xterm-256color.c\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_xterm-256color.c  -fno-common -DPIC -o t/.libs/static_xterm-256color.o\r\nglibtool: compile:  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -I. -Wall -std=c99 -fPIC -c t/static_xterm-256color.c -o t/static_xterm-256color.o >/dev/null 2>&1\r\nglibtool --mode=link --tag=CC /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -L/usr/local/opt/openssl/lib -o t/static_xterm-256color.t libunibilium.la t/static_xterm-256color.lo\r\nglibtool: link: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o t/.libs/static_xterm-256color.t t/.libs/static_xterm-256color.o  -L/usr/local/opt/openssl/lib ./.libs/libunibilium.dylib\r\nrm tools/unibi-dump.lo t/wide-format.lo tools/unibi-put.lo t/static_xterm-256color.lo t/static_xterm.lo t/static_screen-256color.lo t/static_screen.lo tools/gen-static-test.lo t/00_load.lo t/if-then-else.lo t/static_tmux.lo\r\ngmake[1]: Leaving directory '/Users/daniel.olivares/Development/neovim/.deps/build/src/unibilium'\r\n[45/90] Performing configure step for 'libuv'\r\n+ glibtoolize --copy\r\nglibtoolize: putting auxiliary files in '.'.\r\nglibtoolize: copying file './ltmain.sh'\r\nglibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.\r\nglibtoolize: copying file 'm4/libtool.m4'\r\nglibtoolize: copying file 'm4/ltoptions.m4'\r\nglibtoolize: copying file 'm4/ltsugar.m4'\r\nglibtoolize: copying file 'm4/ltversion.m4'\r\nglibtoolize: copying file 'm4/lt~obsolete.m4'\r\n+ aclocal -I m4\r\n+ autoconf\r\n+ automake --add-missing --copy\r\nconfigure.ac:38: installing './ar-lib'\r\nconfigure.ac:25: installing './compile'\r\nconfigure.ac:22: installing './config.guess'\r\nconfigure.ac:22: installing './config.sub'\r\nconfigure.ac:21: installing './install-sh'\r\nconfigure.ac:21: installing './missing'\r\nMakefile.am: installing './depcomp'\r\nchecking for a BSD-compatible install... /usr/bin/install -c\r\nchecking whether build environment is sane... yes\r\nchecking for a thread-safe mkdir -p... /Users/daniel.olivares/Development/neovim/.deps/build/src/libuv/install-sh -c -d\r\nchecking for gawk... no\r\nchecking for mawk... no\r\nchecking for nawk... no\r\nchecking for awk... awk\r\nchecking whether /usr/local/bin/gmake sets $(MAKE)... yes\r\nchecking whether /usr/local/bin/gmake supports nested variables... yes\r\nchecking build system type... x86_64-apple-darwin18.0.0\r\nchecking host system type... x86_64-apple-darwin18.0.0\r\nchecking for gcc... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc\r\nchecking whether the C compiler works... yes\r\nchecking for C compiler default output file name... a.out\r\nchecking for suffix of executables...\r\nchecking whether we are cross compiling... no\r\nchecking for suffix of object files... o\r\nchecking whether we are using the GNU C compiler... yes\r\nchecking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc accepts -g... yes\r\nchecking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc option to accept ISO C89... none needed\r\nchecking whether /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc understands -c and -o together... yes\r\nchecking whether /usr/local/bin/gmake supports the include directive... yes (GNU style)\r\nchecking dependency style of /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc... gcc3\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -pedantic flag... yes\r\nchecking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc way to treat warnings as errors... -Werror\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -fvisibility=hidden... yes\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -g flag... yes\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -std=gnu89 flag... yes\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -Wall flag... yes\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -Wextra flag... yes\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -Wno-unused-parameter flag... yes\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -Wstrict-prototypes flag... yes\r\nchecking for ar... ar\r\nchecking the archiver (ar) interface... ar\r\nchecking how to print strings... printf\r\nchecking for a sed that does not truncate output... /usr/bin/sed\r\nchecking for grep that handles long lines and -e... /usr/bin/grep\r\nchecking for egrep... /usr/bin/grep -E\r\nchecking for fgrep... /usr/bin/grep -F\r\nchecking for ld used by /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld\r\nchecking if the linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) is GNU ld... no\r\nchecking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\r\nchecking the name lister (/usr/bin/nm -B) interface... BSD nm\r\nchecking whether ln -s works... yes\r\nchecking the maximum length of command line arguments... 196608\r\nchecking how to convert x86_64-apple-darwin18.0.0 file names to x86_64-apple-darwin18.0.0 format... func_convert_file_noop\r\nchecking how to convert x86_64-apple-darwin18.0.0 file names to toolchain format... func_convert_file_noop\r\nchecking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld option to reload object files... -r\r\nchecking for objdump... objdump\r\nchecking how to recognize dependent libraries... pass_all\r\nchecking for dlltool... no\r\nchecking how to associate runtime and link libraries... printf %s\\n\r\nchecking for archiver @FILE support... no\r\nchecking for strip... strip\r\nchecking for ranlib... ranlib\r\nchecking command to parse /usr/bin/nm -B output from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc object... ok\r\nchecking for sysroot... no\r\nchecking for a working dd... /bin/dd\r\nchecking how to truncate binary pipes... /bin/dd bs=4096 count=1\r\nchecking for mt... no\r\nchecking if : is a manifest tool... no\r\nchecking for dsymutil... dsymutil\r\nchecking for nmedit... nmedit\r\nchecking for lipo... lipo\r\nchecking for otool... otool\r\nchecking for otool64... no\r\nchecking for -single_module linker flag... yes\r\nchecking for -exported_symbols_list linker flag... yes\r\nchecking for -force_load linker flag... yes\r\nchecking how to run the C preprocessor... /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -E\r\nchecking for ANSI C header files... yes\r\nchecking for sys/types.h... yes\r\nchecking for sys/stat.h... yes\r\nchecking for stdlib.h... yes\r\nchecking for string.h... yes\r\nchecking for memory.h... yes\r\nchecking for strings.h... yes\r\nchecking for inttypes.h... yes\r\nchecking for stdint.h... yes\r\nchecking for unistd.h... yes\r\nchecking for dlfcn.h... yes\r\nchecking for objdir... .libs\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -fno-rtti -fno-exceptions... yes\r\nchecking for /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc option to produce PIC... -fno-common -DPIC\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc PIC flag -fno-common -DPIC works... yes\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc static flag -static works... no\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -c -o file.o... yes\r\nchecking if /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc supports -c -o file.o... (cached) yes\r\nchecking whether the /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc linker (/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld) supports shared libraries... yes\r\nchecking dynamic linker characteristics... darwin18.0.0 dyld\r\nchecking how to hardcode library paths into programs... immediate\r\nchecking whether stripping libraries is possible... yes\r\nchecking if libtool supports shared libraries... yes\r\nchecking whether to build shared libraries... no\r\nchecking whether to build static libraries... yes\r\nchecking whether /usr/local/bin/gmake supports nested variables... (cached) yes\r\nchecking for dlopen in -ldl... yes\r\nchecking for kstat_lookup in -lkstat... no\r\nchecking for gethostbyname in -lnsl... no\r\nchecking for perfstat_cpu in -lperfstat... no\r\nchecking for pthread_mutex_init in -lpthread... yes\r\nchecking for clock_gettime in -lrt... no\r\nchecking for sendfile in -lsendfile... no\r\nchecking for socket in -lsocket... no\r\nchecking for special C compiler options needed for large files... no\r\nchecking for _FILE_OFFSET_BITS value needed for large files... no\r\nchecking for kvm_open in -lkvm... no\r\nchecking sys/ahafs_evProds.h usability... no\r\nchecking sys/ahafs_evProds.h presence... no\r\nchecking for sys/ahafs_evProds.h... no\r\nchecking for pkg-config... yes\r\nchecking that generated files are newer than configure... done\r\nconfigure: creating ./config.status\r\nconfig.status: creating libuv.pc\r\nconfig.status: creating Makefile\r\nconfig.status: executing depfiles commands\r\nconfig.status: executing libtool commands\r\nninja: build stopped: subcommand failed.\r\nmake: *** [deps] Error 1\r\n```\r\n</details>\r\n\r\nWith particular interest here:\r\n```\r\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -g -L/usr/local/opt/openssl/lib   -o host/minilua host/minilua.o -lm\r\nld: library not found for -lgcc_s.10.4\r\n```\r\n\r\nWhich might be related to the issues the homebrew-core peeps are having.",
            "created_at": "2018-09-25T17:19:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424428659",
            "id": 424428659,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQyODY1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424428659/reactions"
            },
            "updated_at": "2018-09-25T18:31:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424428659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12246915?v=4",
                "events_url": "https://api.github.com/users/FuzzOli87/events{/privacy}",
                "followers_url": "https://api.github.com/users/FuzzOli87/followers",
                "following_url": "https://api.github.com/users/FuzzOli87/following{/other_user}",
                "gists_url": "https://api.github.com/users/FuzzOli87/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FuzzOli87",
                "id": 12246915,
                "login": "FuzzOli87",
                "node_id": "MDQ6VXNlcjEyMjQ2OTE1",
                "organizations_url": "https://api.github.com/users/FuzzOli87/orgs",
                "received_events_url": "https://api.github.com/users/FuzzOli87/received_events",
                "repos_url": "https://api.github.com/users/FuzzOli87/repos",
                "site_admin": true,
                "starred_url": "https://api.github.com/users/FuzzOli87/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FuzzOli87/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FuzzOli87"
            }
        },
        {
            "author_association": "NONE",
            "body": "After some digging, I finally got it to build locally by running:\r\n```export MACOSX_DEPLOYMENT_TARGET=10.14```\r\nI was led to this by:\r\nhttps://github.com/Homebrew/homebrew-core/issues/31483\r\nWhich led to this:\r\nhttps://luajit.org/install.html\r\n\r\n\r\nAnd finally, led to my experimentation which worked. I don't know anything about the build process or how/when this variable is set, if even, but that worked for me.",
            "created_at": "2018-09-25T17:56:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424441062",
            "id": 424441062,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ0MTA2Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 16,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 4,
                "laugh": 0,
                "rocket": 0,
                "total_count": 20,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424441062/reactions"
            },
            "updated_at": "2018-09-25T17:56:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424441062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12246915?v=4",
                "events_url": "https://api.github.com/users/FuzzOli87/events{/privacy}",
                "followers_url": "https://api.github.com/users/FuzzOli87/followers",
                "following_url": "https://api.github.com/users/FuzzOli87/following{/other_user}",
                "gists_url": "https://api.github.com/users/FuzzOli87/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FuzzOli87",
                "id": 12246915,
                "login": "FuzzOli87",
                "node_id": "MDQ6VXNlcjEyMjQ2OTE1",
                "organizations_url": "https://api.github.com/users/FuzzOli87/orgs",
                "received_events_url": "https://api.github.com/users/FuzzOli87/received_events",
                "repos_url": "https://api.github.com/users/FuzzOli87/repos",
                "site_admin": true,
                "starred_url": "https://api.github.com/users/FuzzOli87/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FuzzOli87/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FuzzOli87"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, well that correlates with the CMake documentation I linked earlier.  I guess the question is why this isn't being set in your build environment.\r\n\r\nMy assumption (never having built anything on macOS) is that there are certain environment variables set based on the SDK you're building with, which CMake should be able to pick up.  Maybe that's not the case and everyone used to just get away with it because the headers were installed to `/usr/include`.\r\n\r\nIn which case, maybe there's a \"run terminal with SDK environment set\" button somewhere that people should be using to perform builds.  I know there is on the Windows side of the world, since you can have multiple SDKs installed, so you start a cmd prompt targeting the SDK you're trying to build with.",
            "created_at": "2018-09-25T18:05:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424444275",
            "id": 424444275,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ0NDI3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424444275/reactions"
            },
            "updated_at": "2018-09-25T18:05:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424444275",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Note that @FuzzOli87 seems to have had already installed the compatibility package at this point.\r\n\r\nmacOS is a bit of a walled garden; Apple assumes that people are building macOS apps with the macOS tools, which know the correct path... (I share your suspicion on why other things mostly \"just work\".) I myself rely on homebrew for compiling open source software.\r\n\r\nUnfortunately, there's no \"developer terminal\"; the used developer environment is selected from the command line via an `xcode-select` utility (or from within Xcode, if that is installed). This includes the SDKs; the command line tools should automatically pick up the right SDK (I have no idea how cross-compilation works on macOS). Why this doesn't happen here is not clear to me; either (a not Mojave-aware version of) cmake overrides this with \"default\" settings, or some settings were cached before upgrading to Mojave and were still being picked up.\r\n\r\nIdeally, it suffices to do \r\n```bash\r\nMACOSX_DEPLOYMENT_TARGET=10.14 make\r\n```\r\n(and, if so, add this to the build instructions), but it's apparently not that easy. (CMake seems to be picking up the correct SYSROOT, though, so something else must be going on.)",
            "created_at": "2018-09-25T18:27:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424451496",
            "id": 424451496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ1MTQ5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424451496/reactions"
            },
            "updated_at": "2018-09-25T18:27:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424451496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If there's a way to query the running macOS for the version, then we could default `MACOSX_DEPLOYMENT_TARGET` to that, if it isn't already set.",
            "created_at": "2018-09-25T18:29:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424452025",
            "id": 424452025,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ1MjAyNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424452025/reactions"
            },
            "updated_at": "2018-09-25T18:29:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424452025",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does this diff help?\r\n\r\n```diff\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex 02b555d54..8fb213638 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -2,6 +2,10 @@\r\n #   intro: https://codingnest.com/basic-cmake/\r\n #   best practices (3.0+): https://gist.github.com/mbinna/c61dbb39bca0e4fb7d1f73b0d66a4fd1\r\n \r\n+if(APPLE AND NOT DEFINED ENV{MACOSX_DEPLOYMENT_TARGET} AND NOT DEFINED ENV{SDKROOT})\r\n+  set(CMAKE_OSX_DEPLOYMENT_TARGET ${CMAKE_SYSTEM_VERSION})\r\n+endif()\r\n+\r\n cmake_minimum_required(VERSION 2.8.12)\r\n project(nvim C)\r\n \r\n```",
            "created_at": "2018-09-25T18:37:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424454503",
            "id": 424454503,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ1NDUwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424454503/reactions"
            },
            "updated_at": "2018-09-25T18:37:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424454503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@jamessan Unfortunately not.\r\n\r\nBut that's not the problem -- I can compile `libuv` and `luajit` individually from the respective source directories in `.deps/build/src` (setting the `$MACOSX_DEPLOYMENT_TARGET` for luajit first), but `make deps` fails (with `conftest` complaining about `'stdio.h' file not found`).",
            "created_at": "2018-09-25T18:40:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424455667",
            "id": 424455667,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ1NTY2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424455667/reactions"
            },
            "updated_at": "2018-09-25T18:48:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424455667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, right.  What if add those 3 lines to `third-party/CMakeLists.txt` before `project(NVIM_DEPS)`?",
            "created_at": "2018-09-25T19:08:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424464521",
            "id": 424464521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ2NDUyMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424464521/reactions"
            },
            "updated_at": "2018-09-25T19:08:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424464521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Still no luck 😞 (And setting the environment variable manually before building also doesn't work -- for some reason, it must get overwritten or discarded downstream.)\r\n\r\nI'm just doing `make` from the top-level directory of a fresh checkout of the neovim repo, by the way (which works in Linux).",
            "created_at": "2018-09-25T19:10:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424465252",
            "id": 424465252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ2NTI1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424465252/reactions"
            },
            "updated_at": "2018-09-25T19:12:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424465252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, then someone will need to do some more investigation. :)",
            "created_at": "2018-09-25T19:12:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424466087",
            "id": 424466087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ2NjA4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424466087/reactions"
            },
            "updated_at": "2018-09-25T19:12:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424466087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And probably see why homebrew's https://github.com/Homebrew/homebrew-core/blob/master/Formula/neovim.rb works while `make` doesn't :) \r\n\r\n(Honestly, I'm fine with relying on homebrew for compiling neovim on macOS. And if anything needs to be changed on the neovim side to keep this working later on, I'm sure the brew community will open a much more detailed issue.)",
            "created_at": "2018-09-25T19:16:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424467218",
            "id": 424467218,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ2NzIxOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424467218/reactions"
            },
            "updated_at": "2018-09-25T19:16:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424467218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "@clason Both builds crash for me though",
            "created_at": "2018-09-26T15:20:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424756340",
            "id": 424756340,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDc1NjM0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424756340/reactions"
            },
            "updated_at": "2018-09-26T15:20:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424756340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8104631?v=4",
                "events_url": "https://api.github.com/users/danilo-augusto/events{/privacy}",
                "followers_url": "https://api.github.com/users/danilo-augusto/followers",
                "following_url": "https://api.github.com/users/danilo-augusto/following{/other_user}",
                "gists_url": "https://api.github.com/users/danilo-augusto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/danilo-augusto",
                "id": 8104631,
                "login": "danilo-augusto",
                "node_id": "MDQ6VXNlcjgxMDQ2MzE=",
                "organizations_url": "https://api.github.com/users/danilo-augusto/orgs",
                "received_events_url": "https://api.github.com/users/danilo-augusto/received_events",
                "repos_url": "https://api.github.com/users/danilo-augusto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/danilo-augusto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/danilo-augusto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/danilo-augusto"
            }
        },
        {
            "author_association": "NONE",
            "body": "@clason I installed the header stuff that you pointed too earlier. And I also ran brew reinstall to reinstall everything, including the listed dependencies to build neovim.\r\n\r\n@jamessan If you need to find out anything else about my environment, let me know and I can provide.",
            "created_at": "2018-09-26T15:40:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-424763778",
            "id": 424763778,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDc2Mzc3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424763778/reactions"
            },
            "updated_at": "2018-09-26T15:40:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/424763778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/12246915?v=4",
                "events_url": "https://api.github.com/users/FuzzOli87/events{/privacy}",
                "followers_url": "https://api.github.com/users/FuzzOli87/followers",
                "following_url": "https://api.github.com/users/FuzzOli87/following{/other_user}",
                "gists_url": "https://api.github.com/users/FuzzOli87/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/FuzzOli87",
                "id": 12246915,
                "login": "FuzzOli87",
                "node_id": "MDQ6VXNlcjEyMjQ2OTE1",
                "organizations_url": "https://api.github.com/users/FuzzOli87/orgs",
                "received_events_url": "https://api.github.com/users/FuzzOli87/received_events",
                "repos_url": "https://api.github.com/users/FuzzOli87/repos",
                "site_admin": true,
                "starred_url": "https://api.github.com/users/FuzzOli87/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FuzzOli87/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/FuzzOli87"
            }
        },
        {
            "author_association": "NONE",
            "body": "Solved for me by installing the newest version of Xcode and its tools. 🎉",
            "created_at": "2018-09-27T23:44:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-425276537",
            "id": 425276537,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI3NjUzNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/425276537/reactions"
            },
            "updated_at": "2018-09-27T23:44:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/425276537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8104631?v=4",
                "events_url": "https://api.github.com/users/danilo-augusto/events{/privacy}",
                "followers_url": "https://api.github.com/users/danilo-augusto/followers",
                "following_url": "https://api.github.com/users/danilo-augusto/following{/other_user}",
                "gists_url": "https://api.github.com/users/danilo-augusto/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/danilo-augusto",
                "id": 8104631,
                "login": "danilo-augusto",
                "node_id": "MDQ6VXNlcjgxMDQ2MzE=",
                "organizations_url": "https://api.github.com/users/danilo-augusto/orgs",
                "received_events_url": "https://api.github.com/users/danilo-augusto/received_events",
                "repos_url": "https://api.github.com/users/danilo-augusto/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/danilo-augusto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/danilo-augusto/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/danilo-augusto"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have Xcode 10.0 with its tools installed and the build fails similarly.\r\n[nvimbuild.txt](https://github.com/neovim/neovim/files/2442628/nvimbuild.txt)\r\n",
            "created_at": "2018-10-03T15:21:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-426677749",
            "id": 426677749,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY3Nzc0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/426677749/reactions"
            },
            "updated_at": "2018-10-03T15:21:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/426677749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6013872?v=4",
                "events_url": "https://api.github.com/users/ChrisBFusion/events{/privacy}",
                "followers_url": "https://api.github.com/users/ChrisBFusion/followers",
                "following_url": "https://api.github.com/users/ChrisBFusion/following{/other_user}",
                "gists_url": "https://api.github.com/users/ChrisBFusion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ChrisBFusion",
                "id": 6013872,
                "login": "ChrisBFusion",
                "node_id": "MDQ6VXNlcjYwMTM4NzI=",
                "organizations_url": "https://api.github.com/users/ChrisBFusion/orgs",
                "received_events_url": "https://api.github.com/users/ChrisBFusion/received_events",
                "repos_url": "https://api.github.com/users/ChrisBFusion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ChrisBFusion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ChrisBFusion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ChrisBFusion"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I meet same issue after install Mojave\r\n\r\n1.  after xcode-select --install,  issue exist\r\n2. after open xcode.app, auto install components, issue keep exist\r\n3. after `open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg\r\n` , issue keep exist\r\n4. after `sudo xcode-select -s /Library/Developer/CommandLineTools` , issue keep exist\r\n5. keep eye on this.\r\n\r\nGot it, Update makefile for Luajit will pass.\r\nSuccess build after remove https://github.com/LuaJIT/LuaJIT/blob/master/src/Makefile#L301-L303 lines",
            "created_at": "2018-10-09T02:53:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-428042545",
            "id": 428042545,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODA0MjU0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428042545/reactions"
            },
            "updated_at": "2018-10-09T09:00:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428042545",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/542599?v=4",
                "events_url": "https://api.github.com/users/zhaozg/events{/privacy}",
                "followers_url": "https://api.github.com/users/zhaozg/followers",
                "following_url": "https://api.github.com/users/zhaozg/following{/other_user}",
                "gists_url": "https://api.github.com/users/zhaozg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zhaozg",
                "id": 542599,
                "login": "zhaozg",
                "node_id": "MDQ6VXNlcjU0MjU5OQ==",
                "organizations_url": "https://api.github.com/users/zhaozg/orgs",
                "received_events_url": "https://api.github.com/users/zhaozg/received_events",
                "repos_url": "https://api.github.com/users/zhaozg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zhaozg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zhaozg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zhaozg"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "ok, one more working recipe just arrived :) \r\n  - install dev tools using `xcode-select --install`\r\n  - clean build using `make distclean`\r\n  - provide `SDKROOT` and  `MACOSX_DEPLOYMENT_TARGET` env vars explicitly on building\r\n```\r\nmake SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk MACOSX_DEPLOYMENT_TARGET=10.14\r\n```\r\n\r\nit works without installing the compatibility package mentioned above, though I'm still not sure who to blame; will investigate this later ",
            "created_at": "2018-10-10T12:15:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-428548910",
            "id": 428548910,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyODU0ODkxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 11,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 11,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428548910/reactions"
            },
            "updated_at": "2018-10-10T12:15:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/428548910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486807?v=4",
                "events_url": "https://api.github.com/users/dm1try/events{/privacy}",
                "followers_url": "https://api.github.com/users/dm1try/followers",
                "following_url": "https://api.github.com/users/dm1try/following{/other_user}",
                "gists_url": "https://api.github.com/users/dm1try/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dm1try",
                "id": 486807,
                "login": "dm1try",
                "node_id": "MDQ6VXNlcjQ4NjgwNw==",
                "organizations_url": "https://api.github.com/users/dm1try/orgs",
                "received_events_url": "https://api.github.com/users/dm1try/received_events",
                "repos_url": "https://api.github.com/users/dm1try/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dm1try/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dm1try/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dm1try"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hi, there! So I did some investigation^\r\n\r\nActually, the providing two additional environment variables(`MACOSX_DEPLOYMENT_TARGET` and `SDKROOT`) points that we have ✌️ problems  :\r\n1. the first one, that was already mentioned above,`luajit` sets `MACOSX_DEPLOYMENT_TARGET ` to `10.4` if it is not provided(see [the docs](http://luajit.org/install.html), [code](https://github.com/LuaJIT/LuaJIT/blob/b025b01c5b9d23f6218c7d72b7aafa3f1ab1e08a/src/Makefile#L301-L303)).\r\n IMHO the implicit setting of this value leads to inconsistency(some components are built with the default target if the value is not provided, but the `luajit` is built with `10.4`)\r\nfor this target value on Mojave `clang`(in cooperation with `ld`) cannot find system lib:\r\n```\r\n# 10.4\r\nMACOSX_DEPLOYMENT_TARGET=10.4 cc -lgcc_s.1\r\nld: library not found for -lgcc_s.10.4\r\n\r\n# default\r\ncc -lgcc_s.1\r\nUndefined symbols for architecture x86_64:\r\n  \"_main\", referenced from:\r\n  ...\r\n```\r\nSo if `MACOSX_DEPLOYMENT_TARGET` is not provided we can set `CMAKE_OSX_DEPLOYMENT_TARGET` value to it while building `luagit` here:\r\nhttps://github.com/neovim/neovim/blob/e568ac7a68d3b7a05af34d931fad1d2c18fa396c/third-party/cmake/BuildLuajit.cmake#L53-L54\r\nIn the case `MACOSX_DEPLOYMENT_TARGET/CMAKE_OSX_DEPLOYMENT_TARGET` is empty, it looks like `clang` will fallback to a default value\r\n```\r\nMACOSX_DEPLOYMENT_TARGET= cc -lgcc_s.1\r\nUndefined symbols for architecture x86_64:\r\n  \"_main\", referenced from:\r\n  ...\r\n```\r\n\r\nSo all components should depend on `CMAKE_OSX_DEPLOYMENT_TARGET` at least, otherwise, a user must provide `MACOSX_DEPLOYMENT_TARGET` explicitly for solving the issue^\r\n\r\n2. the second issue is related to the latest changes in the management of system headers(they moved from `/usr/include` to MacOS SDK path; was also mentioned above). the trick is what how this path is resolved by `clang`.\r\nif you run `clang` directly from toolchain without providing `isysroot` option it cannot resolve the sdk path, that leads to the build errors:\r\n```\r\nconfigure:3481: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o conftes\r\n conftest.c  >&5\r\nconfigure:3485: $? = 0\r\nconfigure:3507: result:\r\nconfigure:3529: checking whether we are cross compiling\r\nconfigure:3537: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -o conftes\r\n conftest.c  >&5\r\nconftest.c:11:10: fatal error: 'stdio.h' file not found\r\n#include <stdio.h>\r\n```\r\n```\r\nhost/minilua.c:34:10: fatal error: 'math.h' file not found\r\n#include <math.h>\r\n```\r\nSo to make the compiler happy we should provide sdk path to the compiler in `isysroot` option(does it sound like a proper solution?). On my machine those values are properly resolved by `cmake`\r\n```\r\ncmake -LA &> /dev/null| grep 'COMPILER\\|SDK'\r\nCMAKE_C_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc\r\nCMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk\r\n```\r\n but sdk path is not passed to the compiler.\r\n\r\nOK. But why does the explicit `SDKROOT` value also solve the problem? `SDKROOT` is just another way to pass sdk path to the `clang`; internally it is used by `xcrun` tool\r\n```\r\n       xcrun provides a means to locate or invoke developer tools from the command-line, without requiring users to modify Makefiles or otherwise take inconvenient measures to support multiple Xcode tool chains.\r\n```\r\n```\r\n       SDKROOT\r\n          Specifies the default SDK to be used when looking up tools (some tools may have SDK specific versions).\r\n          ....\r\n          For example, if xcrun is used to invoke clang via:\r\n              xcrun --sdk macosx clang test.c\r\n          then xcrun will provide the full path to the macosx SDK in the environment variable SDKROOT. That in turn will be used by clang(1) to automatically select that SDK when compiling the test.c file.\r\n```\r\n\r\nso according to all this information, the updated snippet to make the build on Mojave is:\r\n```bash\r\n# make clang happy and trick luajit 😄 \r\nmake SDKROOT=`xcrun --show-sdk-path` MACOSX_DEPLOYMENT_TARGET=\r\n```\r\n\r\nI'm still not sure about the proper solution for the second problem, though",
            "created_at": "2018-10-14T23:54:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-429674155",
            "id": 429674155,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY3NDE1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 6,
                "hooray": 9,
                "laugh": 0,
                "rocket": 0,
                "total_count": 15,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429674155/reactions"
            },
            "updated_at": "2018-10-14T23:58:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429674155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486807?v=4",
                "events_url": "https://api.github.com/users/dm1try/events{/privacy}",
                "followers_url": "https://api.github.com/users/dm1try/followers",
                "following_url": "https://api.github.com/users/dm1try/following{/other_user}",
                "gists_url": "https://api.github.com/users/dm1try/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dm1try",
                "id": 486807,
                "login": "dm1try",
                "node_id": "MDQ6VXNlcjQ4NjgwNw==",
                "organizations_url": "https://api.github.com/users/dm1try/orgs",
                "received_events_url": "https://api.github.com/users/dm1try/received_events",
                "repos_url": "https://api.github.com/users/dm1try/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dm1try/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dm1try/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dm1try"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Nice. Can you send a patch?",
            "created_at": "2018-10-15T00:05:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-429674980",
            "id": 429674980,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY3NDk4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429674980/reactions"
            },
            "updated_at": "2018-10-17T23:29:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429674980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Nice. Can you send a patch?\r\n\r\nsure, I'm going to continue tomorrow and make a PR(will check the possible solution for the second problem)",
            "created_at": "2018-10-15T00:10:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-429675329",
            "id": 429675329,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY3NTMyOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429675329/reactions"
            },
            "updated_at": "2018-10-17T23:29:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/429675329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/486807?v=4",
                "events_url": "https://api.github.com/users/dm1try/events{/privacy}",
                "followers_url": "https://api.github.com/users/dm1try/followers",
                "following_url": "https://api.github.com/users/dm1try/following{/other_user}",
                "gists_url": "https://api.github.com/users/dm1try/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dm1try",
                "id": 486807,
                "login": "dm1try",
                "node_id": "MDQ6VXNlcjQ4NjgwNw==",
                "organizations_url": "https://api.github.com/users/dm1try/orgs",
                "received_events_url": "https://api.github.com/users/dm1try/received_events",
                "repos_url": "https://api.github.com/users/dm1try/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dm1try/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dm1try/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dm1try"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm using macOS Monterey 12.2.1, and I encountered build error minutes ago. This resolves my problem:\r\n\r\n```\r\nsudo make distclean\r\n```",
            "created_at": "2022-03-15T09:43:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-1067765093",
            "id": 1067765093,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "IC_kwDOAPphoM4_pM1l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1067765093/reactions"
            },
            "updated_at": "2022-03-15T09:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1067765093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24765272?v=4",
                "events_url": "https://api.github.com/users/nyngwang/events{/privacy}",
                "followers_url": "https://api.github.com/users/nyngwang/followers",
                "following_url": "https://api.github.com/users/nyngwang/following{/other_user}",
                "gists_url": "https://api.github.com/users/nyngwang/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nyngwang",
                "id": 24765272,
                "login": "nyngwang",
                "node_id": "MDQ6VXNlcjI0NzY1Mjcy",
                "organizations_url": "https://api.github.com/users/nyngwang/orgs",
                "received_events_url": "https://api.github.com/users/nyngwang/received_events",
                "repos_url": "https://api.github.com/users/nyngwang/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nyngwang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nyngwang/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nyngwang"
            }
        },
        {
            "author_association": "NONE",
            "body": "thank you @nyngwang ",
            "created_at": "2024-06-27T01:04:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/9050#issuecomment-2192867577",
            "id": 2192867577,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/9050",
            "node_id": "IC_kwDOAPphoM6CtID5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2192867577/reactions"
            },
            "updated_at": "2024-06-27T01:04:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2192867577",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7144046?v=4",
                "events_url": "https://api.github.com/users/Sleepful/events{/privacy}",
                "followers_url": "https://api.github.com/users/Sleepful/followers",
                "following_url": "https://api.github.com/users/Sleepful/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sleepful/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Sleepful",
                "id": 7144046,
                "login": "Sleepful",
                "node_id": "MDQ6VXNlcjcxNDQwNDY=",
                "organizations_url": "https://api.github.com/users/Sleepful/orgs",
                "received_events_url": "https://api.github.com/users/Sleepful/received_events",
                "repos_url": "https://api.github.com/users/Sleepful/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Sleepful/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sleepful/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Sleepful"
            }
        }
    ],
    "comments": 29,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/9050/comments",
    "created_at": "2018-09-25T16:19:57Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/9050/events",
    "html_url": "https://github.com/neovim/neovim/issues/9050",
    "id": 363661549,
    "labels": [
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 81986904,
            "name": "platform:macos",
            "node_id": "MDU6TGFiZWw4MTk4NjkwNA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:macos"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/9050/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2019-01-02T08:19:51Z",
        "closed_issues": 72,
        "created_at": "2018-07-18T12:14:34Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "",
        "due_on": "2018-12-17T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/20",
        "id": 3505636,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/20/labels",
        "node_id": "MDk6TWlsZXN0b25lMzUwNTYzNg==",
        "number": 20,
        "open_issues": 0,
        "state": "closed",
        "title": "0.3.2",
        "updated_at": "2021-02-14T23:41:27Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/20"
    },
    "node_id": "MDU6SXNzdWUzNjM2NjE1NDk=",
    "number": 9050,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/9050/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/9050/timeline",
    "title": "build fails with OSX Mojave",
    "updated_at": "2024-06-27T01:04:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/9050",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12246915?v=4",
        "events_url": "https://api.github.com/users/FuzzOli87/events{/privacy}",
        "followers_url": "https://api.github.com/users/FuzzOli87/followers",
        "following_url": "https://api.github.com/users/FuzzOli87/following{/other_user}",
        "gists_url": "https://api.github.com/users/FuzzOli87/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/FuzzOli87",
        "id": 12246915,
        "login": "FuzzOli87",
        "node_id": "MDQ6VXNlcjEyMjQ2OTE1",
        "organizations_url": "https://api.github.com/users/FuzzOli87/orgs",
        "received_events_url": "https://api.github.com/users/FuzzOli87/received_events",
        "repos_url": "https://api.github.com/users/FuzzOli87/repos",
        "site_admin": true,
        "starred_url": "https://api.github.com/users/FuzzOli87/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/FuzzOli87/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/FuzzOli87"
    }
}