{
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWith neovim 0.10 support for inlay hints were added and plugin ecosystem is switching to use inbuilt inlay hints. These inlay hints are visualized in middle of lines, which takes up a lot of visual space and displaces editable text.\r\n\r\nBefore plugins mainly attempted to visualize them at the end of the line where inlay hints are located.\r\n\r\nPost that showcases the difference visually (https://vinnymeller.com/posts/neovim_nightly_inlay_hints/) (No inlay hints, plugin supported inlay hints at the end of line, neovim 0.10 behaviour in middle of lines)\r\n\r\nExample discussion where plugin has removed support for inlay hints and are redirecting all questions to neovim (https://github.com/mrcjkb/rustaceanvim/discussions/46#discussioncomment-8875774)\r\n\r\n\r\n\r\n\n\n### Expected behavior\n\nA configuration option to switch between inlay hint visualization position (inline or at the end of line)",
    "closed_at": "2024-06-27T13:11:36Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I would love this for my TypeScript development. See here for a common problem with typescript (lots of inlay hints and long ones) and moving them to the end of line would help a lot IMO: https://github.com/neovim/neovim/issues/27240",
            "created_at": "2024-04-14T02:25:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2053860589",
            "id": 2053860589,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56a2zt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053860589/reactions"
            },
            "updated_at": "2024-04-14T02:25:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053860589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmmm I understand (and support) this issue, yet I don't think it should be filed here.\r\n\r\nThe thing is that the LSP says that the server indicates the position of the inlay hint [(ref)](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_inlayHint). If I understand this request correctly, the position of the inlay hint will depend on the user's preference, so it would be something included in the server's response (yet of course part of an editor setting).\r\n\r\nAll of this is to say: Yes, I think this is a valid ask, but let's take the discussion to https://github.com/microsoft/language-server-protocol.",
            "created_at": "2024-04-14T02:40:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2053866105",
            "id": 2053866105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56a4J5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 5,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053866105/reactions"
            },
            "updated_at": "2024-04-14T02:40:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053866105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "NONE",
            "body": "> The thing is that the LSP says that the server indicates the position of the inlay hint [(ref)](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_inlayHint)\n\nAhhh good point.\n\nAnd for some languages it probably is fine but I know for typescript it is more of a problem. But even with typescript, it really is just a problem with type annotations for variables as function parameter wouldn't really make sense at end of line and are not as disruptive. But the long typescript types / interfaces are the main problem IMHO.",
            "created_at": "2024-04-14T03:29:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2053883650",
            "id": 2053883650,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56a8cC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053883650/reactions"
            },
            "updated_at": "2024-04-14T03:32:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053883650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Hmmm I understand (and support) this issue, yet I don't think it should be filed here.\r\n> \r\n> The thing is that the LSP says that the server indicates the position of the inlay hint [(ref)](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_inlayHint). If I understand this request correctly, the position of the inlay hint will depend on the user's preference, so it would be something included in the server's response (yet of course part of an editor setting).\r\n> \r\n> All of this is to say: Yes, I think this is a valid ask, but let's take the discussion to https://github.com/microsoft/language-server-protocol.\r\n\r\nIn neovim this is a lot larger problem due to inlay hints having the same font size, taking up the same space as normal text. In other IDE inlay hints have smaller font size.\r\n\r\nI don't think this is a LSP problem, because it is correctly reporting the position of the code/variable/function that needs to be hinted about and how it needs to be processed.  It will be very hard to change the protocol to support two wildly different visualization ways.\r\n\r\nThis is more about  how the inlay hint[ response content ](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHint)is processed and visualized in the editor, all necessary information already is there. As terminals can not support text with different font sizes, it is reasonable for there to be another visualization method to make inlay hints more usable in neovim.",
            "created_at": "2024-04-14T08:21:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2053960987",
            "id": 2053960987,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56bPUb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 2,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053960987/reactions"
            },
            "updated_at": "2024-04-14T08:21:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053960987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5494814?v=4",
                "events_url": "https://api.github.com/users/PPakalns/events{/privacy}",
                "followers_url": "https://api.github.com/users/PPakalns/followers",
                "following_url": "https://api.github.com/users/PPakalns/following{/other_user}",
                "gists_url": "https://api.github.com/users/PPakalns/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/PPakalns",
                "id": 5494814,
                "login": "PPakalns",
                "node_id": "MDQ6VXNlcjU0OTQ4MTQ=",
                "organizations_url": "https://api.github.com/users/PPakalns/orgs",
                "received_events_url": "https://api.github.com/users/PPakalns/received_events",
                "repos_url": "https://api.github.com/users/PPakalns/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/PPakalns/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/PPakalns/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/PPakalns"
            }
        },
        {
            "author_association": "NONE",
            "body": "I agree that current lsp spec is not made for this, and does not support this feature. However, the support of this feature does not require any additional work from the lsp servers, and is just an unintended way of visualizing the output of the lsp server. rust-tools.nvim only used [textDocument/inlayHint](https://github.com/simrat39/rust-tools.nvim/blob/676187908a1ce35ffcd727c654ed68d851299d3e/lua/rust-tools/inlay_hints.lua#L156C10-L156C32) to implement this feature, because the lsp protocol does give the clients enough information about hints to make it work.\r\n\r\nIt doesn't matter that this is not in a protocol, because nothing is needed from the protocol to support it, and it only requires a subset of information currently guaranteed by the protocol",
            "created_at": "2024-04-15T21:51:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2057872495",
            "id": 2057872495,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56qKRv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2057872495/reactions"
            },
            "updated_at": "2024-04-15T21:51:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2057872495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/75628709?v=4",
                "events_url": "https://api.github.com/users/JustLinuxUser/events{/privacy}",
                "followers_url": "https://api.github.com/users/JustLinuxUser/followers",
                "following_url": "https://api.github.com/users/JustLinuxUser/following{/other_user}",
                "gists_url": "https://api.github.com/users/JustLinuxUser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JustLinuxUser",
                "id": 75628709,
                "login": "JustLinuxUser",
                "node_id": "MDQ6VXNlcjc1NjI4NzA5",
                "organizations_url": "https://api.github.com/users/JustLinuxUser/orgs",
                "received_events_url": "https://api.github.com/users/JustLinuxUser/received_events",
                "repos_url": "https://api.github.com/users/JustLinuxUser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JustLinuxUser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JustLinuxUser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JustLinuxUser"
            }
        },
        {
            "author_association": "NONE",
            "body": "> It doesn't matter that this is not in a protocol, because nothing is needed from the protocol to support it, and it only requires a subset of information currently guaranteed by the protocol\n\nSo is your point that the LSP gives the data and then the client (neovim) can take that data and \"transform\" it for usage as it seems fit? In other words, LSP is doing its job to provide the superset of data and then a client can decide how to use the whole thing, or a subset of the data. But if the LSP instead transformed the data or made the decision on moving the inlay hints to a different position, all clients would be at the mercy of the LSP decision. Is this your overall point?\n\nI see both sides 🤔 I have a feeling that means the unfortunate solution is going to be someone needing to create a Plugin to implement this behavior.",
            "created_at": "2024-04-16T01:07:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2058058321",
            "id": 2058058321,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56q3pR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2058058321/reactions"
            },
            "updated_at": "2024-04-16T01:07:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2058058321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have never coded much in lua, or created a plugin, but I will try porting the old rust-tools'es code to make it work as a standalone plugin",
            "created_at": "2024-04-16T12:57:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2059030306",
            "id": 2059030306,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56uk8i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2059030306/reactions"
            },
            "updated_at": "2024-04-16T12:57:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2059030306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/75628709?v=4",
                "events_url": "https://api.github.com/users/JustLinuxUser/events{/privacy}",
                "followers_url": "https://api.github.com/users/JustLinuxUser/followers",
                "following_url": "https://api.github.com/users/JustLinuxUser/following{/other_user}",
                "gists_url": "https://api.github.com/users/JustLinuxUser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JustLinuxUser",
                "id": 75628709,
                "login": "JustLinuxUser",
                "node_id": "MDQ6VXNlcjc1NjI4NzA5",
                "organizations_url": "https://api.github.com/users/JustLinuxUser/orgs",
                "received_events_url": "https://api.github.com/users/JustLinuxUser/received_events",
                "repos_url": "https://api.github.com/users/JustLinuxUser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JustLinuxUser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JustLinuxUser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JustLinuxUser"
            }
        },
        {
            "author_association": "NONE",
            "body": ">But if the LSP instead transformed the data or made the decision on moving the inlay hints to a different position, all clients would be at the mercy of the LSP decision. Is this your overall point?\r\n\r\nI don't see a possibility of lsp moving that information or position, and if it does, it will break compatibility with all lsp clients that support inlay hints anyway, so breaking this particular styling of it doesn't seem like a big deal, if normal hints would break too",
            "created_at": "2024-04-16T13:08:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2059053809",
            "id": 2059053809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56uqrx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2059053809/reactions"
            },
            "updated_at": "2024-04-16T13:08:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2059053809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/75628709?v=4",
                "events_url": "https://api.github.com/users/JustLinuxUser/events{/privacy}",
                "followers_url": "https://api.github.com/users/JustLinuxUser/followers",
                "following_url": "https://api.github.com/users/JustLinuxUser/following{/other_user}",
                "gists_url": "https://api.github.com/users/JustLinuxUser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JustLinuxUser",
                "id": 75628709,
                "login": "JustLinuxUser",
                "node_id": "MDQ6VXNlcjc1NjI4NzA5",
                "organizations_url": "https://api.github.com/users/JustLinuxUser/orgs",
                "received_events_url": "https://api.github.com/users/JustLinuxUser/received_events",
                "repos_url": "https://api.github.com/users/JustLinuxUser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JustLinuxUser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JustLinuxUser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JustLinuxUser"
            }
        },
        {
            "author_association": "NONE",
            "body": "So when I said that lsp gives you enough info, I lied :)\r\nI am trying to implement the plugin myself, but unless I want to have a very crude approach, with no added context (i.e grouping the function parameter names) it is impossible to do in a language agnostic way.\r\n\r\nI am making my plugin for rust, and I don't care :)",
            "created_at": "2024-04-17T01:46:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2060190808",
            "id": 2060190808,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56zARY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060190808/reactions"
            },
            "updated_at": "2024-04-17T09:59:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060190808",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/75628709?v=4",
                "events_url": "https://api.github.com/users/JustLinuxUser/events{/privacy}",
                "followers_url": "https://api.github.com/users/JustLinuxUser/followers",
                "following_url": "https://api.github.com/users/JustLinuxUser/following{/other_user}",
                "gists_url": "https://api.github.com/users/JustLinuxUser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JustLinuxUser",
                "id": 75628709,
                "login": "JustLinuxUser",
                "node_id": "MDQ6VXNlcjc1NjI4NzA5",
                "organizations_url": "https://api.github.com/users/JustLinuxUser/orgs",
                "received_events_url": "https://api.github.com/users/JustLinuxUser/received_events",
                "repos_url": "https://api.github.com/users/JustLinuxUser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JustLinuxUser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JustLinuxUser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JustLinuxUser"
            }
        },
        {
            "author_association": "NONE",
            "body": "> So when I said that lsp gives you enough info, I lied :)\n> \n> I am trying to implement the plugin myself, but unless I want to have a very crude approach, with no added context (i.e grouping the function parameter names) it is impossible to do in a language agnostic way.\n> \n> \n> \n> I am making my plugin for rust, and I don't care :)\n\nCould you share when you get it to a working MVP as I can port it for typescript then! Thanks",
            "created_at": "2024-04-17T03:20:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2060273358",
            "id": 2060273358,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM56zUbO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060273358/reactions"
            },
            "updated_at": "2024-04-17T09:59:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060273358",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@GitMurf @JustLinuxUser see https://github.com/lvimuser/lsp-inlayhints.nvim. disclaimer: not maintained, core implementation is better/cleaner",
            "created_at": "2024-04-17T08:30:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2060700891",
            "id": 2060700891,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5608zb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060700891/reactions"
            },
            "updated_at": "2024-04-17T08:30:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2060700891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/109605931?v=4",
                "events_url": "https://api.github.com/users/lvimuser/events{/privacy}",
                "followers_url": "https://api.github.com/users/lvimuser/followers",
                "following_url": "https://api.github.com/users/lvimuser/following{/other_user}",
                "gists_url": "https://api.github.com/users/lvimuser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lvimuser",
                "id": 109605931,
                "login": "lvimuser",
                "node_id": "U_kgDOBoh0Kw",
                "organizations_url": "https://api.github.com/users/lvimuser/orgs",
                "received_events_url": "https://api.github.com/users/lvimuser/received_events",
                "repos_url": "https://api.github.com/users/lvimuser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lvimuser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lvimuser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lvimuser"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Could you share when you get it to a working MVP as I can port it for typescript then! Thanks\r\n\r\nI will\r\n",
            "created_at": "2024-04-17T14:12:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2061361683",
            "id": 2061361683,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM563eIT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061361683/reactions"
            },
            "updated_at": "2024-04-17T15:04:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2061361683",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/75628709?v=4",
                "events_url": "https://api.github.com/users/JustLinuxUser/events{/privacy}",
                "followers_url": "https://api.github.com/users/JustLinuxUser/followers",
                "following_url": "https://api.github.com/users/JustLinuxUser/following{/other_user}",
                "gists_url": "https://api.github.com/users/JustLinuxUser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/JustLinuxUser",
                "id": 75628709,
                "login": "JustLinuxUser",
                "node_id": "MDQ6VXNlcjc1NjI4NzA5",
                "organizations_url": "https://api.github.com/users/JustLinuxUser/orgs",
                "received_events_url": "https://api.github.com/users/JustLinuxUser/received_events",
                "repos_url": "https://api.github.com/users/JustLinuxUser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/JustLinuxUser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/JustLinuxUser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/JustLinuxUser"
            }
        },
        {
            "author_association": "NONE",
            "body": "It'd also be very useful to have an option in nvim itself to show inlay hints only for current line (maybe after some debounce delay). This is supported by [lsp-inlayhints/anticonceal](https://github.com/lvimuser/lsp-inlayhints.nvim/tree/anticonceal) branch, but native always shows for all lines, which can be quite overwhelming. Some LSP servers support this config, but it'd be nice to have this done in neovim for a global option.\r\n\r\nEdit: came up with a hacky solution based on @MariaSolOs 's code, if it's of use to anyone:\r\n```lua\r\n-- somewhere in config.lua\r\nlocal methods = vim.lsp.protocol.Methods\r\nlocal inlay_hint_handler = vim.lsp.handlers[methods[\"textDocument_inlayHint\"]]\r\nvim.lsp.handlers[methods[\"textDocument_inlayHint\"]] = function(err, result, ctx, config)\r\n  local client = vim.lsp.get_client_by_id(ctx.client_id)\r\n  if client then\r\n    local row, col = unpack(vim.api.nvim_win_get_cursor(0))\r\n    result = vim.iter(result)\r\n      :filter(function(hint)\r\n        return hint.position.line + 1 == row\r\n      end)\r\n      :totable()\r\n  end\r\n  inlay_hint_handler(err, result, ctx, config)\r\nend\r\n\r\n-- onAttach\r\nlocal inlay_hints_group = vim.api.nvim_create_augroup('LSP_inlayHints', { clear = false })\r\nvim.api.nvim_create_autocmd({'CursorHold', 'CursorHoldI'}, {\r\n  group = inlay_hints_group,\r\n  desc = 'Update inlay hints on line change',\r\n  buffer = bufnr,\r\n  callback = function()\r\n    vim.lsp.inlay_hint.enable(true, {bufnr = bufnr})\r\n  end,\r\n})\r\n```",
            "created_at": "2024-05-24T20:51:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2130338921",
            "id": 2130338921,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5--mRp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 3,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2130338921/reactions"
            },
            "updated_at": "2024-05-25T10:14:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2130338921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/587021?v=4",
                "events_url": "https://api.github.com/users/andrevmatos/events{/privacy}",
                "followers_url": "https://api.github.com/users/andrevmatos/followers",
                "following_url": "https://api.github.com/users/andrevmatos/following{/other_user}",
                "gists_url": "https://api.github.com/users/andrevmatos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andrevmatos",
                "id": 587021,
                "login": "andrevmatos",
                "node_id": "MDQ6VXNlcjU4NzAyMQ==",
                "organizations_url": "https://api.github.com/users/andrevmatos/orgs",
                "received_events_url": "https://api.github.com/users/andrevmatos/received_events",
                "repos_url": "https://api.github.com/users/andrevmatos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andrevmatos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andrevmatos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andrevmatos"
            }
        },
        {
            "author_association": "NONE",
            "body": "While in theory LSPs are the ones that should dictate the position, one of the main reasons people flock to Neovim is the ability to customize everything. And this particular feature is something many people dislike in other editors/IDEs. So it would be a shame if Neovim refused to implement the option just because it's \"not supposed to\".",
            "created_at": "2024-05-27T01:51:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2132508060",
            "id": 2132508060,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_G32c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 9,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 10,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132508060/reactions"
            },
            "updated_at": "2024-05-27T01:51:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132508060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11616898?v=4",
                "events_url": "https://api.github.com/users/polak-jan/events{/privacy}",
                "followers_url": "https://api.github.com/users/polak-jan/followers",
                "following_url": "https://api.github.com/users/polak-jan/following{/other_user}",
                "gists_url": "https://api.github.com/users/polak-jan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/polak-jan",
                "id": 11616898,
                "login": "polak-jan",
                "node_id": "MDQ6VXNlcjExNjE2ODk4",
                "organizations_url": "https://api.github.com/users/polak-jan/orgs",
                "received_events_url": "https://api.github.com/users/polak-jan/received_events",
                "repos_url": "https://api.github.com/users/polak-jan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/polak-jan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/polak-jan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/polak-jan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@polak-jan It's not about \"not being supposed to\", but because in order for things not to be a total mess Neovim tries to stick to the LSP as much as possible, avoiding non-documented behaviors like this.\r\n\r\nInlay hints can also be \"interactive\" (execute commands when clicking them, show a floating window when hovering over them, etc). Although Neovim doesn't support such features today, changing the position that the server sent could break this functionality (if we add it) in the future.",
            "created_at": "2024-05-27T01:58:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2132513122",
            "id": 2132513122,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_G5Fi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 3,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132513122/reactions"
            },
            "updated_at": "2024-05-27T01:58:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132513122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "NONE",
            "body": "The issue for people like me, who dislike the feature enough to never use it, is that we will now be losing out on a sizable chunk of the ecosystem that we had before, as they phase out the \"hacked version\" of showing it at the end of the line that we preferred.\r\n\r\n\r\nI also don't understand how changing the position could break any additional functionality. The only thing it would do is move the actions away from the text they are affecting.",
            "created_at": "2024-05-27T02:01:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2132515077",
            "id": 2132515077,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_G5kF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132515077/reactions"
            },
            "updated_at": "2024-05-27T02:04:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132515077",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11616898?v=4",
                "events_url": "https://api.github.com/users/polak-jan/events{/privacy}",
                "followers_url": "https://api.github.com/users/polak-jan/followers",
                "following_url": "https://api.github.com/users/polak-jan/following{/other_user}",
                "gists_url": "https://api.github.com/users/polak-jan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/polak-jan",
                "id": 11616898,
                "login": "polak-jan",
                "node_id": "MDQ6VXNlcjExNjE2ODk4",
                "organizations_url": "https://api.github.com/users/polak-jan/orgs",
                "received_events_url": "https://api.github.com/users/polak-jan/received_events",
                "repos_url": "https://api.github.com/users/polak-jan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/polak-jan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/polak-jan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/polak-jan"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Although Neovim doesn't support such features today, changing the position that the server sent could break this functionality (if we add it) in the future.\r\n\r\nSince it's a cosmetic/visualization change, the underlying position of the hints and other data should be preserved and not changed. This way, nothing should break.\r\n\r\n---\r\n\r\nI just found out that [ray-x/go.nvim](https://github.com/ray-x/go.nvim) actually has the setting to change between `\"inlay\"` and `\"eol\"`. I tried it today, and it looks like the `eol` breaks after first edit, but works on the strartup. I honestly didn't even notice that they didn't work, although I didn't code anything big.\r\n\r\nI don't want to tug in ThePrimeagen here (_and here I am_), but we both agree on the fact that \"inline\" hints are not great, as you have to suddenly jump left and right when you don't do that ever just by pressing `l`/`h` (without inlay hints enabled). It greatly disturbs the coding flow. Yet the feature itself is great (when at `eol`). Really want this feature to be implemented.",
            "created_at": "2024-05-27T02:20:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2132529007",
            "id": 2132529007,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_G89v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132529007/reactions"
            },
            "updated_at": "2024-05-27T05:47:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132529007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Look, the reasoning here is quite simple: We _cannot_ add configuration options for every single thing (\"but mom, I just want _this_ single thing!\" -- yes, but other people want different single things, and why is yours special?) because the code -- and the configuration, which people already complain about! -- will become a giant mess. So Neovim opted for a simple policy that is a) objective and b) easy to explain: Out of the box, we implement the specification _and nothing but the specification_ -- but we do it in a way that is as easily extensible as possible. This means that you can absolutely have end-of-line hints -- if you override the handler, or install a plugin that does it for you. If that is not good enough for you, lobby Microsoft to include \"end-of-line hints\" in the spec, ideally with a well thought-through proposal how the feature should behave in all relevant aspects. Then we'll add support for it. But we will _not_ change the fundamental policy, which has served us very well so far.",
            "created_at": "2024-05-27T04:58:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2132643585",
            "id": 2132643585,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_HY8B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 12,
                "-1": 3,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 15,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132643585/reactions"
            },
            "updated_at": "2024-05-27T04:58:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132643585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "_But mo-o-om!_ /j\n\nIt's great if this is totally hackable through the Lua API. Then there will definitely be a solution whether it's a native one or via plugin.\n\nP.S. I will say that it is sad that Neovim has to adapt to how exactly things are done in VS Code because everything is controlled by Microsoft (editor, protocol etc.) I would be very surprised and happy if such addition to the protocol can and will be added in the future.",
            "created_at": "2024-05-27T06:18:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2132721945",
            "id": 2132721945,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_HsEZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132721945/reactions"
            },
            "updated_at": "2024-05-27T06:18:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132721945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I will say that it is sad that Neovim has to adapt to how exactly things are done in VS Code because everything is controlled by Microsoft (editor, protocol etc.) \r\n\r\nBut that's precisely the point here: we are _not_ doing \"how exactly things are done in VS Code\" and instead stick to the specs in order to force people to take it seriously. The specification is intended to be editor-independent, but any changes have to be driven by a reference editor implementation. [That implementation can absolutely be in Neovim](https://github.com/microsoft/language-server-protocol/pull/1905).\r\n\r\nStill, it's important to observe the proper procedure:\r\n1. Propose an addition to the specification.\r\n2. Discuss and come up with a reasonable and acceptable proposal.\r\n3. Provide a reference implementation of that proposal as a PR to Neovim.\r\n4. Get the spec change merged.\r\n5. Get the Neovim PR merged (if necessary, after adaptation to the final version of the spec).",
            "created_at": "2024-05-27T06:37:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2132744454",
            "id": 2132744454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_HxkG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 2,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132744454/reactions"
            },
            "updated_at": "2024-05-27T06:37:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132744454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The specification is intended to be editor-independent, but any changes have to be driven by a reference editor implementation. That implementation can absolutely be in Neovim.\n\nInteresting. I haven't touched LSP personally so this is something new. Can you explain what is the exact purpose of any changes being driven by a reference editor implementation? To prove that it's _actually_ possible to implement the functionality?\n\nNow I'm curious how does the pie chart look like with the amount of **changes** per (reference) **editor** (implementation). I would still bet that Neovim and others will get only a tiny portion (naturally?)\n\nAnyway, I'm plenty busy and not well versed with proposals. Hope that someone else will start the ball rolling.",
            "created_at": "2024-05-27T06:57:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2132773295",
            "id": 2132773295,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_H4mv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132773295/reactions"
            },
            "updated_at": "2024-05-27T06:57:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2132773295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I agree that overriding the handler is a good idea because it only takes dozens of lines of code to implement this feature through overriding (in fact I thought of this method when this issue was created). But currently, **it's not possible to expose the handler**, because the handler needs to access private variables to implement its function. This cannot be done by just exposing these variables, because the implementation of these variables itself is not stable (that is to say, we cannot expose an unstable API), see https://github.com/neovim/neovim/pull/28543#discussion_r1587440644 and https://github.com/neovim/neovim/pull/28748.\r\n\r\nI may implement this once the implementation of these variables is thoroughly determined.",
            "created_at": "2024-05-27T14:13:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2133571527",
            "id": 2133571527,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_K7fH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133571527/reactions"
            },
            "updated_at": "2024-05-27T14:13:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133571527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "btw, I also disagree with officially providing inlay hints at the end of the line and then providing them through configuration, because the implementation is too subjective. For example, what symbols do we need to use to identify types and parameters? How many spaces are there at the end of lines in these inlay hints? This requires too many meaningless configuration items to be added to the codebase. Implementing through overriding can avoid all problems.",
            "created_at": "2024-05-27T14:23:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2133590271",
            "id": 2133590271,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_LAD_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133590271/reactions"
            },
            "updated_at": "2024-05-27T14:23:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2133590271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "author_association": "NONE",
            "body": "Agreed. I wasn't really advocating for a specific \"move inlay hints to the end\" feature. More for some way to solve it. And allowing us to override a function that decides the position of the a hint would be perfect IMO.",
            "created_at": "2024-05-28T01:27:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2134201343",
            "id": 2134201343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_NVP_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2134201343/reactions"
            },
            "updated_at": "2024-05-28T01:27:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2134201343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11616898?v=4",
                "events_url": "https://api.github.com/users/polak-jan/events{/privacy}",
                "followers_url": "https://api.github.com/users/polak-jan/followers",
                "following_url": "https://api.github.com/users/polak-jan/following{/other_user}",
                "gists_url": "https://api.github.com/users/polak-jan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/polak-jan",
                "id": 11616898,
                "login": "polak-jan",
                "node_id": "MDQ6VXNlcjExNjE2ODk4",
                "organizations_url": "https://api.github.com/users/polak-jan/orgs",
                "received_events_url": "https://api.github.com/users/polak-jan/received_events",
                "repos_url": "https://api.github.com/users/polak-jan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/polak-jan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/polak-jan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/polak-jan"
            }
        },
        {
            "author_association": "NONE",
            "body": "It will be nice to have the ability to choose between eol and inlay option per language.\r\nI like the way inlay is shown in go and rust. But for ts/js it gets too unwieldy.\r\n\r\n> The thing is that the LSP says that the server indicates the position of the inlay hint [(ref)](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_inlayHint). If I understand this request correctly, the position of the inlay hint will depend on the user's preference, so it would be something included in the server's response (yet of course part of an editor setting).\r\n\r\n@MariaSolOs how do I check what the lsp-server returns for `inlayHints.position`? It might be worth checking if sticking to the current spec actually can fix the problem.\r\n\r\n",
            "created_at": "2024-05-31T04:19:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2141205989",
            "id": 2141205989,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM5_oDXl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2141205989/reactions"
            },
            "updated_at": "2024-05-31T14:34:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2141205989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8631902?v=4",
                "events_url": "https://api.github.com/users/adiSuper94/events{/privacy}",
                "followers_url": "https://api.github.com/users/adiSuper94/followers",
                "following_url": "https://api.github.com/users/adiSuper94/following{/other_user}",
                "gists_url": "https://api.github.com/users/adiSuper94/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/adiSuper94",
                "id": 8631902,
                "login": "adiSuper94",
                "node_id": "MDQ6VXNlcjg2MzE5MDI=",
                "organizations_url": "https://api.github.com/users/adiSuper94/orgs",
                "received_events_url": "https://api.github.com/users/adiSuper94/received_events",
                "repos_url": "https://api.github.com/users/adiSuper94/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/adiSuper94/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adiSuper94/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/adiSuper94"
            }
        },
        {
            "author_association": "NONE",
            "body": "Really looking forward to hints at end of the line. In between, it's too distracting. You want to know types especially in rust where generics can make you go mad.",
            "created_at": "2024-06-11T00:37:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2159555116",
            "id": 2159555116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM6AuDIs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 9,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2159555116/reactions"
            },
            "updated_at": "2024-06-27T13:04:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2159555116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/42654595?v=4",
                "events_url": "https://api.github.com/users/aniketfuryrocks/events{/privacy}",
                "followers_url": "https://api.github.com/users/aniketfuryrocks/followers",
                "following_url": "https://api.github.com/users/aniketfuryrocks/following{/other_user}",
                "gists_url": "https://api.github.com/users/aniketfuryrocks/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aniketfuryrocks",
                "id": 42654595,
                "login": "aniketfuryrocks",
                "node_id": "MDQ6VXNlcjQyNjU0NTk1",
                "organizations_url": "https://api.github.com/users/aniketfuryrocks/orgs",
                "received_events_url": "https://api.github.com/users/aniketfuryrocks/received_events",
                "repos_url": "https://api.github.com/users/aniketfuryrocks/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aniketfuryrocks/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aniketfuryrocks/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aniketfuryrocks"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Resolution\r\n\r\nThe LSP specification is unambiguous about inlay hints having a specified position _where they should appear_ (even declaring where multiple hints with the same position should be rendered). So a Neovim option is out of the question. If \"end-of-line hints\" are added to the spec, we'll implement them as well.\r\n\r\nOf course, it's always possible to override the `textDocument/inlayHint` in your config or a plugin, but for the core implementation this is out of scope.",
            "created_at": "2024-06-27T13:11:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/28261#issuecomment-2194659088",
            "id": 2194659088,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28261",
            "node_id": "IC_kwDOAPphoM6Cz9cQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2194659088/reactions"
            },
            "updated_at": "2024-06-27T13:13:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2194659088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments": 27,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28261/comments",
    "created_at": "2024-04-10T07:14:29Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28261/events",
    "html_url": "https://github.com/neovim/neovim/issues/28261",
    "id": 2234916990,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FEF2C0",
            "default": false,
            "description": "Needs a third-party / external change or fix",
            "id": 101945532,
            "name": "status:blocked-external",
            "node_id": "MDU6TGFiZWwxMDE5NDU1MzI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/status:blocked-external"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "redraw, layout, presentation",
            "id": 718084050,
            "name": "display",
            "node_id": "MDU6TGFiZWw3MTgwODQwNTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/display"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28261/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 226,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 257,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2024-06-29T22:40:33Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6FNiB-",
    "number": 28261,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 32,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 32,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28261/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28261/timeline",
    "title": "LSP: configure inlay hint visualization position",
    "updated_at": "2024-06-27T13:13:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28261",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5494814?v=4",
        "events_url": "https://api.github.com/users/PPakalns/events{/privacy}",
        "followers_url": "https://api.github.com/users/PPakalns/followers",
        "following_url": "https://api.github.com/users/PPakalns/following{/other_user}",
        "gists_url": "https://api.github.com/users/PPakalns/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/PPakalns",
        "id": 5494814,
        "login": "PPakalns",
        "node_id": "MDQ6VXNlcjU0OTQ4MTQ=",
        "organizations_url": "https://api.github.com/users/PPakalns/orgs",
        "received_events_url": "https://api.github.com/users/PPakalns/received_events",
        "repos_url": "https://api.github.com/users/PPakalns/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/PPakalns/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PPakalns/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/PPakalns"
    }
}