{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nCurrently, we are not able to attach a popup window to any LSP client. The function `vim.lsp.buf_attach_client` always returns `false`. Thus, we cannot invoke gotoDefinition/Declaration/Implementation on anything.\n\n### Expected behavior\n\nAfter opening a popup window (e.g.: with a hover message) and adding the window to the LSP server, we could invoke some LSP functions, mostly goto.... functions. It would make sense to disable diagnostics. This would make transitioning between files much easier and improve better control flow following when debugging or when a programmer is getting used to an API.\r\n\r\nThis sparks a question of whether it would be possible to create a range-based enabled region for some of the LSP functions. This would be helpful in helpers e.g.: also goto..... methods",
    "closed_at": "2024-08-11T10:21:09Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "There is nothing in `vim.lsp.buf_attach_client` that would prevent it from attaching to buffers that happen to be displayed in floating windows.\r\n\r\nE.g. something like:\r\n\r\n```lua\r\napi.nvim_create_user_command(\"Test\", function(args)\r\n  local bufnr = api.nvim_create_buf(true, true)\r\n  vim.bo[bufnr].buftype = \"acwrite\"\r\n  vim.bo[bufnr].bufhidden = \"wipe\"\r\n  vim.bo[bufnr].filetype = \"lua\"\r\n  local opts = {\r\n    relative='win',\r\n    row=3,\r\n    col=3,\r\n    width=80,\r\n    height=10\r\n  }\r\n  api.nvim_open_win(bufnr, true, opts)\r\nend, {})\r\n```\r\n\r\nworks just fine coupled with a lua FileType that calls `vim.lsp.start({ name = \"luals\", cmd = {\"lua-language-server\"}, ...})`\r\n\r\n\r\n> This sparks a question of whether it would be possible to create a range-based enabled region for some of the LSP functions. This would be helpful in helpers e.g.: also goto..... methods\r\n\r\nThis sounds a bit like https://github.com/neovim/neovim/issues/26783\r\n",
            "created_at": "2024-08-11T10:21:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/29515#issuecomment-2282708341",
            "id": 2282708341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29515",
            "node_id": "IC_kwDOAPphoM6ID111",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282708341/reactions"
            },
            "updated_at": "2024-08-11T10:21:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2282708341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "NONE",
            "body": "I actually thought of something else:\r\n\r\n```lua\r\nlocal M = {}\r\nM.bufnr, M.winnr = vim.lsp.util.open_floating_preview(tbl, 'markdown', {\r\n\tborder = config.border,\r\n\tfocusable = true,\r\n\tfocus = true,\r\n\tfocus_id = \"pretty-hover\",\r\n\twrap_at = config.max_width,\r\n\tmax_width = config.max_width,\r\n\tmax_height = config.max_height,\r\n})\r\n\r\nvim.wo[M.winnr].foldenable = false\r\nvim.bo[M.bufnr].modifiable = false\r\nvim.bo[M.bufnr].bufhidden = 'wipe'\r\n```\r\n\r\nI wanted to start LSP client in a buffer created like this. Setting filetype to this buffer destroys the markdown formatting.",
            "created_at": "2024-08-12T18:01:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/29515#issuecomment-2284614804",
            "id": 2284614804,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29515",
            "node_id": "IC_kwDOAPphoM6ILHSU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2284614804/reactions"
            },
            "updated_at": "2024-08-12T18:01:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2284614804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59179935?v=4",
                "events_url": "https://api.github.com/users/Fildo7525/events{/privacy}",
                "followers_url": "https://api.github.com/users/Fildo7525/followers",
                "following_url": "https://api.github.com/users/Fildo7525/following{/other_user}",
                "gists_url": "https://api.github.com/users/Fildo7525/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Fildo7525",
                "id": 59179935,
                "login": "Fildo7525",
                "node_id": "MDQ6VXNlcjU5MTc5OTM1",
                "organizations_url": "https://api.github.com/users/Fildo7525/orgs",
                "received_events_url": "https://api.github.com/users/Fildo7525/received_events",
                "repos_url": "https://api.github.com/users/Fildo7525/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Fildo7525/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Fildo7525/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Fildo7525"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Why would it destroy the markdown formatting?",
            "created_at": "2024-08-15T08:00:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/29515#issuecomment-2290848984",
            "id": 2290848984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29515",
            "node_id": "IC_kwDOAPphoM6Ii5TY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2290848984/reactions"
            },
            "updated_at": "2024-08-15T08:00:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2290848984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29515/comments",
    "created_at": "2024-06-29T21:34:57Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29515/events",
    "html_url": "https://github.com/neovim/neovim/issues/29515",
    "id": 2381975416,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29515/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6N-g94",
    "number": 29515,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29515/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29515/timeline",
    "title": "Support for attaching popup window to an LSP for limited calls",
    "updated_at": "2024-08-15T08:00:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29515",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/59179935?v=4",
        "events_url": "https://api.github.com/users/Fildo7525/events{/privacy}",
        "followers_url": "https://api.github.com/users/Fildo7525/followers",
        "following_url": "https://api.github.com/users/Fildo7525/following{/other_user}",
        "gists_url": "https://api.github.com/users/Fildo7525/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Fildo7525",
        "id": 59179935,
        "login": "Fildo7525",
        "node_id": "MDQ6VXNlcjU5MTc5OTM1",
        "organizations_url": "https://api.github.com/users/Fildo7525/orgs",
        "received_events_url": "https://api.github.com/users/Fildo7525/received_events",
        "repos_url": "https://api.github.com/users/Fildo7525/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Fildo7525/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Fildo7525/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Fildo7525"
    }
}