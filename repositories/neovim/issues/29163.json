{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nhttps://github.com/neovim/neovim/pull/28943 changed the lsp code to use `vim.b[bufnr].changedtick` as the LSP document version.\r\n\r\nNow there’s no way to send the correct document version in a `workspace/executeCommand` after saving a modified buffer. This is because `changedtick` is incremented when \"Resetting modified when writing the buffer\" https://neovim.io/doc/user/eval.html#b:changedtick but the server is not notified of this new version.\r\n\r\n### Steps to reproduce\r\n\r\n1. User edits buffer\r\n    * Client sends `textDocument/didChange` (version 1)\r\n2. User saves buffer\r\n    * `changedtick` is incremented to version 2\r\n    * Client sends `textDocument/didSave` (no version sent)\r\n4. User runs custom lsp command (ex: `:EslintFixAll`)\r\n    * Client sends `workspace/executeCommand` (version 2)\r\n    * LSP ignores command because it hasn’t seen version 2 yet.\r\n\r\n### Expected behavior\r\n\r\nSome way to get the last sent buffer version for `workspace/executeCommand` usage.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.11.0-dev-158+g05435a915\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nUbuntu 22.04.4 LTS\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.12.2\r\n\r\n### $TERM environment variable\r\n\r\nalacritty\r\n\r\n### Installation\r\n\r\nbob",
    "closed_at": "2024-06-07T11:38:20Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "cc @mfussenegger",
            "created_at": "2024-06-03T13:52:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2145263798",
            "id": 2145263798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM5_3iC2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2145263798/reactions"
            },
            "updated_at": "2024-06-03T13:52:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2145263798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "## Repro:\r\n\r\n**init.lua**\r\n\r\n``` lua\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n    pattern = \"go\",\r\n    callback = function()\r\n        vim.lsp.start({ cmd = { \"gopls\" } })\r\n    end\r\n})\r\n```\r\n\r\n**main.go**\r\n\r\n``` go\r\n// delete me\r\npackage main\r\n\r\nfunc main() {\r\n\tfmt.Println()\r\n}\r\n```\r\n\r\n**Steps:**\r\n\r\n1. `nvim --clean -u init.lua main.go`\r\n2. Delete the first line `dd`\r\n3. Save the buffer `:w`\r\n4. Run code action `:lua vim.lsp.buf.code_action({ apply = true })`",
            "created_at": "2024-06-03T16:55:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2145698334",
            "id": 2145698334,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM5_5MIe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2145698334/reactions"
            },
            "updated_at": "2024-06-03T17:38:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2145698334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for the repro.\r\nI'm not entirely sure if https://github.com/neovim/neovim/pull/29170 is a sound approach, but it would fix the issue as far as I can tell.",
            "created_at": "2024-06-03T20:27:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2146062472",
            "id": 2146062472,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM5_6lCI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146062472/reactions"
            },
            "updated_at": "2024-06-03T20:27:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146062472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The change seems reasonable to me (I tested locally and can't break it). But I suspect we're going to have similar issues with the semantic tokens & inlay hints. If that does end up being the case and more edge-case handling is required, I think it might make sense to revert https://github.com/neovim/neovim/pull/28943",
            "created_at": "2024-06-03T21:01:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2146115362",
            "id": 2146115362,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM5_6x8i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146115362/reactions"
            },
            "updated_at": "2024-06-03T21:01:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146115362",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But I suspect we're going to have similar issues with the semantic tokens & inlay hints.\r\n\r\nI was wondering about that too, but can't think of a scenario where it could be a problem. If the buffer is unchanged (modified=false), there shouldn't be any updates for semantic tokens, inlay hints, code lens and so on anyway.",
            "created_at": "2024-06-03T21:15:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2146136636",
            "id": 2146136636,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM5_63I8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146136636/reactions"
            },
            "updated_at": "2024-06-03T21:15:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146136636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm having a difficult time figuring out how a plugin should call `workspace/executeCommand` with the right version. I'm using the `:EslintFixAll` command as the example here.\r\n\r\nThe original (current) implementation has the problem where the version is being rejected on the server side because it's too new.\r\n\r\n``` lua\r\nlocal bufnr = util.validate_bufnr(opts.bufnr or 0)\r\nrequest(0, 'workspace/executeCommand', {\r\n\tcommand = 'eslint.applyAllFixes',\r\n\targuments = {\r\n\t\t{\r\n\t\t\turi = vim.uri_from_bufnr(bufnr),\r\n\t\t\tversion = lsp.util.buf_versions[bufnr],\r\n\t\t},\r\n\t},\r\n})\r\n```\r\n\r\nI tried rewriting it to use `vim.lsp.buf.code_action`. This doesn't work because `code_action` automatically populates the request `context` with diagnostics from the current line. (This results in the `eslint.applyAllFixes` only fixing the issues on the current line).\r\n\r\n``` lua\r\nlsp.buf.code_action({\r\n\tapply = true,\r\n\tfilter = function(a)\r\n\t\treturn vim.tbl_get(a, 'command', 'command') == 'eslint.applyAllFixes'\r\n\tend,\r\n})\r\n```\r\n\r\nI would need to use the unexported `diagnostic_vim_to_lsp` from `vim.lsp.diagnostic` to send all the diagnostics in the current buffer to achieve the original behaviour.\r\n\r\n``` lua\r\nlsp.buf.code_action({\r\n\tapply = true,\r\n\tcontext = {\r\n\t\tdiagnostics = diagnostic_vim_to_lsp(vim.diagnostic.get(0)),\r\n\t},\r\n\tfilter = function(a)\r\n\t\treturn vim.tbl_get(a, 'command', 'command') == 'eslint.applyAllFixes'\r\n\tend,\r\n})\r\n```\r\n\r\nThis feels like a lot of hoops to jump through to do something relatively simple.",
            "created_at": "2024-06-04T02:00:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2146425492",
            "id": 2146425492,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM5_79qU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146425492/reactions"
            },
            "updated_at": "2024-06-04T02:07:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146425492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm not sure how to best deal with that but I'm reluctant to revert the change. `lsp.util` is not the right place for the version.\r\n\r\nOne option that would work is to apply the same modified check as in the linked fix (`version = vim.b[bufnr].changedtick + (not vim.bo[bufnr].modified and 1 or 0)`)\r\n\r\nAnother option could be to simplify the code_action API by:\r\n\r\n- Take vim.diagnostics instead of lsp diagnostics. Given that a user has no means to provide the lsp diagnostics without accessing internals the parameter doesn't make sense anymore\r\n- Support a `string` as filter in addition to the function, that matches on the command.\r\n\r\nIn general it's a bit unusual that the server even requires a version parameter with the request. Can't it be set to `nil` with in other places means the client/server should ignore the version?",
            "created_at": "2024-06-04T17:21:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2148042144",
            "id": 2148042144,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM6ACIWg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2148042144/reactions"
            },
            "updated_at": "2024-06-04T17:21:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2148042144",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I'm not sure how to best deal with that but I'm reluctant to revert the change. lsp.util is not the right place for the version.\r\n\r\nIt could live in `changetracking` and only expose a `changetracking.buf_version(bufnr)` function.\r\n\r\n* The internal state gets updated by `changetracking.send_changes` (using `vim.b[bufnr].changedtick`).\r\n* Returns `0` if there's no existing value.\r\n* No need to ever reset back to `0`, just keep incrementing it.\r\n\r\n**edit** it can't live in changetracking due to circular dependencies.\r\n\r\n> One option that would work is to apply the same modified check as in the linked fix (version = vim.b[bufnr].changedtick + (not vim.bo[bufnr].modified and 1 or 0))\r\n\r\nThis breaks if you open a file with existing issues.\r\n\r\n> In general it's a bit unusual that the server even requires a version parameter with the request. \r\n\r\nYes, this is true. I've tried to find other examples to strengthen my case and have came up empty handed.\r\n\r\n> Can't it be set to nil with in other places means the client/server should ignore the version?\r\n\r\nThis was the first thing I tried. No luck.",
            "created_at": "2024-06-04T18:22:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2148141195",
            "id": 2148141195,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM6ACgiL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2148141195/reactions"
            },
            "updated_at": "2024-06-04T22:43:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2148141195",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've been thinking about this a little more and I'm starting to question the use of `changedtick` all-together. The behaviour with `modified` creates an impedance mismatch between `changedtick` and lsp document versions. I propose a `lsp/_versions.lua` file with the following:\r\n\r\n``` lua\r\nlocal M = {}\r\n\r\n---@type table<integer, integer>\r\nlocal buf_versions = {}\r\n\r\n---@param bufnr integer\r\n---@return integer\r\nfunction M.get(bufnr)\r\n\t-- we default to 1 instead of 0 because some LSPs return 0\r\n\t-- when they don't support versioning. Starting at 1 disambiguates\r\n\t-- that case.\r\n\treturn buf_versions[bufnr] or 1\r\nend\r\n\r\n---@param bufnr integer\r\nfunction M.changed(bufnr)\r\n\tbuf_versions[bufnr] = M.get(bufnr) + 1\r\nend\r\n\r\nreturn M\r\n```",
            "created_at": "2024-06-05T13:27:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2149921575",
            "id": 2149921575,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM6AJTMn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2149921575/reactions"
            },
            "updated_at": "2024-06-05T13:29:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2149921575",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've noticed recently as well (even after the above follow up fix for the modify case) that semantic tokens aren't updating as reliably as they were. When I first implemented that feature, I remember looking into changedtick vs the way we were tracking versions and came to the conclusion at the time that we couldn't use changedtick and what we were doing was necessary, but I don't remember exactly how I came to that conclusion.\r\n\r\nI'll try to dig into that again at some point soon to see if I can remember why changedtick wasn't sufficient.",
            "created_at": "2024-06-05T16:29:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2150484449",
            "id": 2150484449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM6ALcnh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2150484449/reactions"
            },
            "updated_at": "2024-06-05T16:32:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2150484449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've also noticed some strangeness with semantic tokens, but I haven't been able to come up with a repro.",
            "created_at": "2024-06-06T00:45:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2151179405",
            "id": 2151179405,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM6AOGSN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2151179405/reactions"
            },
            "updated_at": "2024-06-06T00:45:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2151179405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ok I haven't 100% confirmed this, but I think I know why I'm occasionally seeing some weird stuff with semantic tokens.\n\nSo, the crux of the issue is that b:changedtick can change without an `on_lines()` callback being fired. changedtick is incremented for all sorts of things that don't fire that callback (but `on_changedtick()` is fired for all of them). But because we only send change notifications (and re-send new semantic token requests) from on_lines, we can easily get out of sync on the version we think a buffer is on vs whatever was last sent to the server.\n\nSpecifically for semantic tokens this means that when a request comes back and  the changedtick number changed without firing on_lines, we drop the response without ever sending a new request.\n\nBecause we actually only care about changes to a buffer that occur with an on_lines callback, _that_ is why we needed a separate version--one that only increments when we actually get that callback (so we send change notifications, request new tokens, etc).",
            "created_at": "2024-06-06T02:24:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2151299471",
            "id": 2151299471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM6AOjmP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2151299471/reactions"
            },
            "updated_at": "2024-06-06T02:58:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2151299471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Reverted it for now https://github.com/neovim/neovim/pull/29217",
            "created_at": "2024-06-07T11:38:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/29163#issuecomment-2154659555",
            "id": 2154659555,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29163",
            "node_id": "IC_kwDOAPphoM6AbX7j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2154659555/reactions"
            },
            "updated_at": "2024-06-07T11:38:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2154659555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29163/comments",
    "created_at": "2024-06-03T13:16:39Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29163/events",
    "html_url": "https://github.com/neovim/neovim/issues/29163",
    "id": 2331136540,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29163/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6K8lIc",
    "number": 29163,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29163/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29163/timeline",
    "title": "LSP: using changedtick as the document version breaks workspace/executeCommand usage",
    "updated_at": "2024-06-07T11:38:21Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29163",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
        "events_url": "https://api.github.com/users/icholy/events{/privacy}",
        "followers_url": "https://api.github.com/users/icholy/followers",
        "following_url": "https://api.github.com/users/icholy/following{/other_user}",
        "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/icholy",
        "id": 943597,
        "login": "icholy",
        "node_id": "MDQ6VXNlcjk0MzU5Nw==",
        "organizations_url": "https://api.github.com/users/icholy/orgs",
        "received_events_url": "https://api.github.com/users/icholy/received_events",
        "repos_url": "https://api.github.com/users/icholy/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/icholy"
    }
}