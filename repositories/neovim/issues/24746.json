{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "_(This is partly to check my understanding, partly to write down rationale, and partly to propose a potential change.)_ @gpanders \r\n\r\n### Problem\r\n\r\nCurrently to check if a table is a list, we use `pairs()` to iterate (potentially) the entire table. Calls to `Iter.new()` always pay this cost and can't opt-out of it.\r\nhttps://github.com/neovim/neovim/blob/e928161bde262c238f79bc0fd84e60178ff6a321/runtime/lua/vim/iter.lua#L906-L917\r\n\r\nArguments in favor of the current logic?\r\n\r\n- Iter pipelines inherently are O(n) so doing an extra scan is a reasonable cost.\r\n- Handles unusual lists/arrays.\r\n\r\n\r\nRelated: https://github.com/neovim/neovim/issues/24141\r\n\r\n### Expected behavior\r\n\r\nInstead of using `pairs()`, treat any table where `t[1] == nil` as non-list, and `t[1] ~= nil` as list. Change the logic to:\r\n\r\n```lua\r\n-- Decide if the source table is a list.\r\nif src[1] == nil then\r\n  return Iter.new(pairs(src))\r\nend\r\nend\r\nreturn ListIter.new(ipairs(src))\r\n```\r\n\r\n**Advantages:**\r\n\r\n- easy to document and understand\r\n- fast\r\n\r\n**Disadvantages:**\r\n\r\n- may treat a non-list as a list, if `t[1]` is non-nil in a table that is intended as a dict\r\n    - callers can workaround this by setting `t[1] = nil`.\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "A list-like table _must_ have consecutive integer indices starting at 1 if we want to be able to use the length (`#`) operator, which we make heavy use of for the list optimizations.\r\n\r\nFrom the [Lua reference manual](https://www.lua.org/manual/5.1/manual.html#2.5.5) (emphasis added):\r\n\r\n>The length of a table t is defined to be any integer index n such that `t[n]` is not nil and `t[n+1]` is nil; moreover, if `t[1]` is nil, `n` can be zero. For a regular array, with non-nil values from 1 to a given `n`, its length is exactly that `n`, the index of its last value. **If the array has \"holes\" (that is, nil values between other non-nil values), then `#t` can be any of the indices that directly precedes a nil value (that is, it may consider any such nil value as the end of the array).**\r\n\r\nIt is insufficient to only check that `t[1] ~= nil` to infer that `t` is a list. A table such as `{ 'a', 'b', nil, 'd', 'e' }` might have length 5, or length 2. According to the standard, it's undefined.\r\n\r\nThe `pairs()` check in the constructor is kind of a bummer, it's obviously slow for large tables, but I don't know of a better way to ensure correct behavior.",
            "created_at": "2023-08-17T13:52:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/24746#issuecomment-1682328753",
            "id": 1682328753,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24746",
            "node_id": "IC_kwDOAPphoM5kRkyx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1682328753/reactions"
            },
            "updated_at": "2023-08-17T13:52:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1682328753",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "[this answer](https://stackoverflow.com/a/66370080) from StackOverflow seems promising apart from the last case because of the behaviour gpanders mentioned above.\r\n> A table such as { 'a', 'b', nil, 'd', 'e' } might have length 5, or length 2. According to the standard, it's undefined.\r\n```lua\r\nfunction isarray(t)\r\n  return #t > 0 and next(t, #t) == nil\r\nend\r\n\r\nprint(isarray{}) --> false\r\nprint(isarray{1, 2, 3}) --> true\r\nprint(isarray{a = 1, b = 2, c = 3}) --> false\r\nprint(isarray{1, 2, 3, a = 1, b = 2, c = 3}) --> false\r\nprint(isarray{1, 2, 3, nil, 5}) --> true (PUC Lua) | false (LuaJIT)\r\n```",
            "created_at": "2023-08-20T04:37:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/24746#issuecomment-1685174233",
            "id": 1685174233,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24746",
            "node_id": "IC_kwDOAPphoM5kcbfZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1685174233/reactions"
            },
            "updated_at": "2023-08-20T04:37:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1685174233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/74924917?v=4",
                "events_url": "https://api.github.com/users/T-727/events{/privacy}",
                "followers_url": "https://api.github.com/users/T-727/followers",
                "following_url": "https://api.github.com/users/T-727/following{/other_user}",
                "gists_url": "https://api.github.com/users/T-727/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/T-727",
                "id": 74924917,
                "login": "T-727",
                "node_id": "MDQ6VXNlcjc0OTI0OTE3",
                "organizations_url": "https://api.github.com/users/T-727/orgs",
                "received_events_url": "https://api.github.com/users/T-727/received_events",
                "repos_url": "https://api.github.com/users/T-727/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/T-727/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/T-727/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/T-727"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There really is no better way than iterating the table and checking for nils.\r\n\r\nOpenresty/LuaJIT does the same but compiled; that is the only option for better performance.",
            "created_at": "2023-08-20T04:40:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/24746#issuecomment-1685174652",
            "id": 1685174652,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24746",
            "node_id": "IC_kwDOAPphoM5kcbl8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1685174652/reactions"
            },
            "updated_at": "2023-08-20T04:40:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1685174652",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> if we want to be able to use the length (`#`) operator, which we make heavy use of for the list optimizations.\r\n\r\nThanks, that's the key info. \r\n\r\nI was thinking that if we document \"a list is a table with an item at `t[1]`\", then `vim.iter` callers are responsible for checking for that, to avoid undefined behavior. Advantages are:\r\n\r\n- Gives a way to \"opt out\" of the full scan that every `vim.iter` caller pays. With the current impl there's no way to opt-out of that scan.\r\n- Improves performance for the common case. I expect \"hetergenous\" tables to be unusual for `vim.iter`. Any evidence that I'm wrong?",
            "created_at": "2023-09-10T23:47:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/24746#issuecomment-1712974599",
            "id": 1712974599,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24746",
            "node_id": "IC_kwDOAPphoM5mGesH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712974599/reactions"
            },
            "updated_at": "2023-09-10T23:48:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1712974599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24746/comments",
    "created_at": "2023-08-16T23:59:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24746/events",
    "html_url": "https://github.com/neovim/neovim/issues/24746",
    "id": 1854044139,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24746/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 576,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 414,
        "state": "open",
        "title": "backlog",
        "updated_at": "2023-09-09T11:04:11Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5ugnfr",
    "number": 24746,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24746/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24746/timeline",
    "title": "vim.iter: faster check for list-like table",
    "updated_at": "2023-09-10T23:48:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24746",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}