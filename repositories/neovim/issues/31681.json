{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nSorry to post a duplicate issue, but this issue https://github.com/neovim/neovim/issues/18111 got no reply in the last two years. I came across the same behavior when using vim.regex in a Fzflua (https://github.com/ibhagwan/fzf-lua) callback and this is the stack trace:\n```\n#0  0x00007f57c44b38eb in raise () from /lib/x86_64-linux-gnu/libc.so.6\n#1  0x00007f57c449e535 in abort () from /lib/x86_64-linux-gnu/libc.so.6\n#2  0x000055d38ad05847 in loop_uv_run (loop=loop@entry=0x55d38afe4820 <main_loop>, ms=<optimized out>) at /home/user/neovim/src/nvim/event/loop.c:46\n#3  0x000055d38ad070b8 in loop_poll_events (loop=0x55d38afe4820 <main_loop>, ms=<optimized out>) at /home/user/neovim/src/nvim/event/loop.c:82\n#4  0x000055d38ac15113 in os_breakcheck () at /home/user/neovim/src/nvim/os/input.c:204\n#5  0x000055d38ac15171 in fast_breakcheck () at /home/user/neovim/src/nvim/os/input.c:228\n#6  0x000055d38abf5d57 in reg_breakcheck () at /home/user/neovim/src/nvim/regexp.c:1256\n#7  0x000055d38abd79ea in nfa_regmatch (prog=prog@entry=0x55d38d2b4300, start=start@entry=0x55d38d2b43c8, submatch=submatch@entry=0x7ffcc98a7980, m=m@entry=0x7ffcc98a7820)\n    at /home/user/neovim/src/nvim/regexp.c:14069\n#8  0x000055d38abd7ec7 in nfa_regtry (prog=prog@entry=0x55d38d2b4300, col=0, tm=tm@entry=0x0, timed_out=timed_out@entry=0x0) at /home/user/neovim/src/nvim/regexp.c:15365\n#9  0x000055d38abd83f9 in nfa_regexec_both (line=<optimized out>, startcol=<optimized out>, tm=tm@entry=0x0, timed_out=timed_out@entry=0x0) at /home/user/neovim/src/nvim/regexp.c:15550\n#10 0x000055d38abd8528 in nfa_regexec_nl (rmp=<optimized out>, line=<optimized out>, col=<optimized out>, line_lbr=<optimized out>) at /home/user/neovim/src/nvim/regexp.c:15714\n#11 0x000055d38abc5c2a in vim_regexec_string (rmp=0x7ffcc98a7c70, line=0x7f57c05f53e0 \"+        port = 8392,\", col=0, nl=nl@entry=false) at /home/user/neovim/src/nvim/regexp.c:15940\n#12 0x000055d38abc5dc8 in vim_regexec (rmp=<optimized out>, line=<optimized out>, col=<optimized out>) at /home/user/neovim/src/nvim/regexp.c:15986\n#13 0x000055d38ac81fff in regex_match (lstate=lstate@entry=0x7f57c0a5b000, prog=prog@entry=0x7f57c17c0d88, str=0x7f57c05f53e0 \"+        port = 8392,\") at /home/user/neovim/src/nvim/lua/stdlib.c:53\n#14 0x000055d38ac8208b in regex_match_str (lstate=0x7f57c0a5b000) at /home/user/neovim/src/nvim/lua/stdlib.c:68\n#15 0x000055d38ae341a6 in lj_BC_FUNCC ()\n#16 0x000055d38ae35002 in lj_ff_coroutine_resume ()\n#17 0x000055d38ae21287 in lua_pcall (L=0x7f57c4174380, nargs=<optimized out>, nresults=0, errfunc=<optimized out>) at lj_api.c:1122\n#18 0x000055d38ac8cc8e in nlua_pcall (lstate=lstate@entry=0x7f57c4174380, nargs=nargs@entry=1, nresults=nresults@entry=0) at /home/user/neovim/src/nvim/lua/executor.c:173\n#19 0x000055d38ac90e4f in nlua_luv_cfpcall (lstate=0x7f57c4174380, nargs=1, nresult=0, flags=0) at /home/user/neovim/src/nvim/lua/executor.c:213\n#20 0x000055d38add0757 in luv_write_cb (req=0x7f57c0fcf128, status=<optimized out>) at /home/user/neovim/.deps/build/src/luv/src/stream.c:149\n#21 0x000055d38ae8a051 in uv__write_callbacks (stream=stream@entry=0x55d38d2ea710) at /home/user/neovim/.deps/build/src/libuv/src/unix/stream.c:926\n#22 0x000055d38ae8a9b0 in uv__stream_io (loop=<optimized out>, w=0x55d38d2ea798, events=<optimized out>) at /home/user/neovim/.deps/build/src/libuv/src/unix/stream.c:1227\n#23 0x000055d38ae7fd70 in uv__run_pending (loop=loop@entry=0x55d38afe4820 <main_loop>) at /home/user/neovim/.deps/build/src/libuv/src/unix/core.c:842\n#24 0x000055d38ae8033e in uv_run (loop=0x55d38afe4820 <main_loop>, mode=UV_RUN_NOWAIT) at /home/user/neovim/.deps/build/src/libuv/src/unix/core.c:453\n#25 0x000055d38ad0586d in loop_uv_run (loop=loop@entry=0x55d38afe4820 <main_loop>, ms=0) at /home/user/neovim/src/nvim/event/loop.c:61\n#26 0x000055d38ad070b8 in loop_poll_events (loop=0x55d38afe4820 <main_loop>, ms=<optimized out>) at /home/user/neovim/src/nvim/event/loop.c:82\n#27 0x000055d38ac15113 in os_breakcheck () at /home/user/neovim/src/nvim/os/input.c:204\n#28 0x000055d38accdf57 in vgetorpeek (advance=advance@entry=false) at /home/user/neovim/src/nvim/getchar.c:2553\n#29 0x000055d38accebd3 in vpeekc () at /home/user/neovim/src/nvim/getchar.c:1819\n#30 0x000055d38ab9ac99 in state_enter (s=0x7ffcc98a8280) at /home/user/neovim/src/nvim/state.c:61\n#31 0x000055d38ab7f76f in terminal_enter () at /home/user/neovim/src/nvim/terminal.c:564\n#32 0x000055d38ad59f5b in edit (cmdchar=<optimized out>, startln=<optimized out>, count=<optimized out>) at /home/user/neovim/src/nvim/edit.c:1268\n#33 0x000055d38ac39ea8 in invoke_edit (cap=cap@entry=0x7ffcc98a8480, repl=repl@entry=0, cmd=105, startln=startln@entry=0) at /home/user/neovim/src/nvim/normal.c:6228\n#34 0x000055d38ac39fb2 in nv_edit (cap=0x7ffcc98a8480) at /home/user/neovim/src/nvim/normal.c:6200\n#35 0x000055d38ac4b641 in normal_execute (state=0x7ffcc98a8410, key=<optimized out>) at /home/user/neovim/src/nvim/normal.c:1229\n#36 0x000055d38ab9ac87 in state_enter (s=0x7ffcc98a8410) at /home/user/neovim/src/nvim/state.c:101\n#37 0x000055d38ac415db in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at /home/user/neovim/src/nvim/normal.c:518\n#38 0x000055d38ac8aafe in main (argc=<optimized out>, argv=<optimized out>) at /home/user/neovim/src/nvim/main.c:662\n```\n\n### Steps to reproduce\n\nI can reproduce the abort using the same method described in https://github.com/neovim/neovim/issues/18111:\n```lua\nlocal re = vim.regex(\"^.*\\\\.go$\")\n\nlocal timer = vim.uv.new_timer()\ntimer:start(200, 200, function()\n  local files = {\n    \"internal/config/config.go\";\n  }\n  for _, file in ipairs(files) do\n    if re:match_str(file) then\n      print(\"it matches!\")\n    end\n  end\nend)\n```\nSource the above lua code using `nvim -c 'source code.lua'`, wait around 20 to 100 seconds, and then nvim aborts with the following highly similar stack trace:\n```\n#0  0x00007f71a78df8eb in raise () from /lib/x86_64-linux-gnu/libc.so.6\n#1  0x00007f71a78ca535 in abort () from /lib/x86_64-linux-gnu/libc.so.6\n#2  0x000055e404384847 in loop_uv_run (loop=loop@entry=0x55e404663820 <main_loop>, ms=<optimized out>) at /home/user/neovim/src/nvim/event/loop.c:46\n#3  0x000055e4043860b8 in loop_poll_events (loop=0x55e404663820 <main_loop>, ms=<optimized out>) at /home/user/neovim/src/nvim/event/loop.c:82\n#4  0x000055e404294113 in os_breakcheck () at /home/user/neovim/src/nvim/os/input.c:204\n#5  0x000055e404294171 in fast_breakcheck () at /home/user/neovim/src/nvim/os/input.c:228\n#6  0x000055e404274d57 in reg_breakcheck () at /home/user/neovim/src/nvim/regexp.c:1256\n#7  0x000055e404256cae in nfa_regmatch (prog=prog@entry=0x55e405e7f1c0, start=start@entry=0x55e405e7f328, submatch=submatch@entry=0x7fff4e672250, m=m@entry=0x7fff4e6720f0)\n    at /home/user/neovim/src/nvim/regexp.c:15289\n#8  0x000055e404256ec7 in nfa_regtry (prog=prog@entry=0x55e405e7f1c0, col=0, tm=tm@entry=0x0, timed_out=timed_out@entry=0x0) at /home/user/neovim/src/nvim/regexp.c:15365\n#9  0x000055e4042573f9 in nfa_regexec_both (line=<optimized out>, startcol=<optimized out>, tm=tm@entry=0x0, timed_out=timed_out@entry=0x0) at /home/user/neovim/src/nvim/regexp.c:15550\n#10 0x000055e404257528 in nfa_regexec_nl (rmp=<optimized out>, line=<optimized out>, col=<optimized out>, line_lbr=<optimized out>) at /home/user/neovim/src/nvim/regexp.c:15714\n#11 0x000055e404244c2a in vim_regexec_string (rmp=0x7fff4e672540, line=0x7f71a75496b8 \"internal/config/config.go\", col=0, nl=nl@entry=false) at /home/user/neovim/src/nvim/regexp.c:15940\n#12 0x000055e404244dc8 in vim_regexec (rmp=<optimized out>, line=<optimized out>, col=<optimized out>) at /home/user/neovim/src/nvim/regexp.c:15986\n#13 0x000055e404300fff in regex_match (lstate=lstate@entry=0x7f71a75a0380, prog=prog@entry=0x7f71a7549be0, str=0x7f71a75496b8 \"internal/config/config.go\")\n    at /home/user/neovim/src/nvim/lua/stdlib.c:53\n#14 0x000055e40430108b in regex_match_str (lstate=0x7f71a75a0380) at /home/user/neovim/src/nvim/lua/stdlib.c:68\n#15 0x000055e4044b31a6 in lj_BC_FUNCC ()\n#16 0x000055e4044a0287 in lua_pcall (L=0x7f71a75a0380, nargs=<optimized out>, nresults=0, errfunc=<optimized out>) at lj_api.c:1122\n#17 0x000055e40430bc8e in nlua_pcall (lstate=lstate@entry=0x7f71a75a0380, nargs=nargs@entry=0, nresults=nresults@entry=0) at /home/user/neovim/src/nvim/lua/executor.c:173\n#18 0x000055e40430fe4f in nlua_luv_cfpcall (lstate=0x7f71a75a0380, nargs=0, nresult=0, flags=0) at /home/user/neovim/src/nvim/lua/executor.c:213\n#19 0x000055e4044fa6ab in uv__run_timers (loop=loop@entry=0x55e404663820 <main_loop>) at /home/user/neovim/.deps/build/src/libuv/src/timer.c:193\n#20 0x000055e4044ff427 in uv_run (loop=0x55e404663820 <main_loop>, mode=UV_RUN_ONCE) at /home/user/neovim/.deps/build/src/libuv/src/unix/core.c:466\n#21 0x000055e40438486d in loop_uv_run (loop=loop@entry=0x55e404663820 <main_loop>, ms=4000) at /home/user/neovim/src/nvim/event/loop.c:61\n#22 0x000055e4043860b8 in loop_poll_events (loop=0x55e404663820 <main_loop>, ms=<optimized out>) at /home/user/neovim/src/nvim/event/loop.c:82\n#23 0x000055e40429676b in inbuf_poll (ms=4000, events=events@entry=0x55e405dbf560) at /home/user/neovim/src/nvim/os/input.c:473\n#24 0x000055e404296d4c in os_inchar (buf=0x0, maxlen=0, ms=<optimized out>, tb_change_cnt=1, events=0x55e405dbf560) at /home/user/neovim/src/nvim/os/input.c:140\n#25 0x000055e404219d2b in state_enter (s=0x7fff4e6728f0) at /home/user/neovim/src/nvim/state.c:80\n#26 0x000055e4042c05db in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at /home/user/neovim/src/nvim/normal.c:518\n#27 0x000055e404309afe in main (argc=<optimized out>, argv=<optimized out>) at /home/user/neovim/src/nvim/main.c:662\n```\n\n### Expected behavior\n\nnvim shouldn't abort when using vim.regex\n\n### Nvim version (nvim -v)\n\n0.10.2 && 0.10.3\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nmacOS && debian\n\n### Terminal name/version\n\nAlacritty-v0.14.0 (nvim runs in remote machine)\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nbrew && manually built",
    "closed_at": "2024-12-22T14:45:29Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I can reproduce the abort using the same method described in [#18111](https://github.com/neovim/neovim/issues/18111):\n\nUpdated stacktraces can be useful, if they differ from the existing issue. But there is definitely no need to create a duplicate issue just because the existing issue got no reply.",
            "created_at": "2024-12-22T14:45:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/31681#issuecomment-2558479850",
            "id": 2558479850,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31681",
            "node_id": "IC_kwDOAPphoM6Yf03q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2558479850/reactions"
            },
            "updated_at": "2024-12-22T14:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2558479850",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31681/comments",
    "created_at": "2024-12-22T14:42:29Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31681/events",
    "html_url": "https://github.com/neovim/neovim/issues/31681",
    "id": 2754691041,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as duplicates of other issues",
            "id": 3221613764,
            "name": "closed:duplicate",
            "node_id": "MDU6TGFiZWwzMjIxNjEzNzY0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:duplicate"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31681/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6kMT_h",
    "number": 31681,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31681/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "duplicate",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31681/timeline",
    "title": "Neovim abort when using vim.regex():match_str in luv",
    "updated_at": "2024-12-22T14:47:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31681",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32333772?v=4",
        "events_url": "https://api.github.com/users/MrConnorKenway/events{/privacy}",
        "followers_url": "https://api.github.com/users/MrConnorKenway/followers",
        "following_url": "https://api.github.com/users/MrConnorKenway/following{/other_user}",
        "gists_url": "https://api.github.com/users/MrConnorKenway/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MrConnorKenway",
        "id": 32333772,
        "login": "MrConnorKenway",
        "node_id": "MDQ6VXNlcjMyMzMzNzcy",
        "organizations_url": "https://api.github.com/users/MrConnorKenway/orgs",
        "received_events_url": "https://api.github.com/users/MrConnorKenway/received_events",
        "repos_url": "https://api.github.com/users/MrConnorKenway/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MrConnorKenway/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MrConnorKenway/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MrConnorKenway",
        "user_view_type": "public"
    }
}