{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nI just read up about `SafeState` and something like this (`SafeUIState`) could be really useful for `vim.ui_attach` when triggered:\r\n\r\n* right before `getchar`\r\n* right before `cmdpreview_may_show`\r\n* right before `redraw`\r\n\r\nEspecially the second one would be great, since the current work-around for this in Noice is not ideal.\r\n\r\nWhen `cmdpreview` is active, `redraw`s are ignored, but with `vim.ui_attach` this is not ideal.\r\n\r\nUser enters `:%s/foo/bar`. The last `r` will correctly trigger `ui_attach` and will then show the correct preview.\r\nHowever, it's not possible for the cmdline ui to redraw itself (since redraws are disabled when `cmdpreview` is active).\r\n\r\nMy current work-around is to use `nvim_feedkeys` with `<space><bs>`.\r\n\r\n### Related issues\r\n\r\n- [ ] https://github.com/neovim/neovim/issues/20311\r\n- [ ] https://github.com/neovim/neovim/issues/20463",
    "closed_at": "2024-05-19T16:08:13Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "@luukvbaal maybe you have some ideas?\r\n\r\nWith all your recent changes, I was able to finally just queue the messages received in the `vim.ui_attach` callback and no longer need to do screen updates or `redraws` during.",
            "created_at": "2024-05-16T12:02:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115056349",
            "id": 2115056349,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-ETLd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115056349/reactions"
            },
            "updated_at": "2024-05-16T12:02:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115056349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What does \"trigger `vim.ui_attach`\" mean?",
            "created_at": "2024-05-16T12:05:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115068111",
            "id": 2115068111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-EWDP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115068111/reactions"
            },
            "updated_at": "2024-05-16T12:05:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115068111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The last `r` will send an ext_cmdline message with the new cmdline.\r\nSo in noice, I have the correct cmdline state, I just can't render it without my work-around",
            "created_at": "2024-05-16T12:08:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115078206",
            "id": 2115078206,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-EYg-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115078206/reactions"
            },
            "updated_at": "2024-05-16T12:08:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115078206",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm confused. What does this have to do with `SafeState`?",
            "created_at": "2024-05-16T12:11:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115085357",
            "id": 2115085357,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-EaQt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115085357/reactions"
            },
            "updated_at": "2024-05-16T12:11:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115085357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I meant that it (or a similar event) could be useful to allow ui updates at some points where it's currently not possible.\r\n\r\nTo be fair, I think I just found a better work-around specifically for `cmdpreview`, since `CmdlineChanged` is triggered right before that.",
            "created_at": "2024-05-16T12:15:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115092979",
            "id": 2115092979,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-EcHz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115092979/reactions"
            },
            "updated_at": "2024-05-16T12:19:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115092979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm not sure I understand why a dedicated event is needed, won't flushing the desired state in the appropriate places be sufficient; like in #27950?\r\n\r\nAnd for cmdpreview in particular, removing the redraw restriction is the way forward: #28510.\r\n\r\n> right before redraw\r\n\r\n> I was able to finally just queue the messages received in the `vim.ui_attach` callback and no longer need to do screen updates or `redraws` during.\r\n\r\nCare to elaborate on these? I deliberately did not look at noice's implementation and it's workarounds when working on the default ext UI(which I have postponed to work on for the time being) and instead aimed to resolve issues in the C core as I ran into them.",
            "created_at": "2024-05-16T12:44:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115155115",
            "id": 2115155115,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-ErSr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115155115/reactions"
            },
            "updated_at": "2024-05-16T12:45:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115155115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm not sure what #27950 achieves regarding my bug report?\r\n\r\n> And for cmdpreview in particular, removing the redraw restriction is the way forward: https://github.com/neovim/neovim/issues/28510.\r\n\r\nThat would be great\r\n\r\n> Care to elaborate on these?\r\n\r\nPreviously I queued messages in the `ui_attach` callback, and only updated the views when in a blocking event. Like right before getchar, or when the cmdline is active. This was needed, since otherwise it can happen that Neovim blocks the main loop somewhere waiting for input and I wasn't able to render views. Other view updates happen async in batches in the main loop.\r\n\r\nWith some of your recent updates, a lot of those `blocking` view updates I did inside the `ui_attach` callback started giving `E565` errors, so I could no longer properly update views when needed.\r\n\r\nNow I just queue messages and never try updating the UI in the callback (and never trigger redraws either during).\r\n\r\nWhat would I need to do to get my command line floating window to redraw properly after receiving an `ext_cmdline` message using #27950?",
            "created_at": "2024-05-16T13:16:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115221562",
            "id": 2115221562,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-E7g6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115221562/reactions"
            },
            "updated_at": "2024-05-16T13:17:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115221562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "fyi, how I currently solve the issue with `cmdpreview`:\r\n* in a `CmdlineChanged` callback I do:\r\n* with `ffi` set `cmdpreview = false`\r\n* trigger a `redraw`\r\n* update the view (update/create buffers/windows)\r\n* possibly trigger another redraw when needed",
            "created_at": "2024-05-16T13:19:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115227356",
            "id": 2115227356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-E87c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115227356/reactions"
            },
            "updated_at": "2024-05-16T13:19:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115227356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm not sure what #27950 achieves regarding my bug report?\r\n\r\nThis bug report or #20463? Like I mentioned in the last comment in that PR I think the change is sufficient to redraw updated cmdline state, did you try it out and experience otherwise?\r\n\r\nPerhaps it's not obvious but `cmdpreview` is temporarily set to false on each key press, so flushing before entering \"cmdpreview\" state again like in that PR indeed seems sufficient to \"achieve something\" regarding #20463.",
            "created_at": "2024-05-16T13:27:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115247949",
            "id": 2115247949,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-FB9N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115247949/reactions"
            },
            "updated_at": "2024-05-16T13:28:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115247949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, I meant #20463 indeed.\r\n\r\nI tried a couple of things with your PR:\r\n* in the `vim.ui_attach` callback, when receiving a `cmdline` message, update the ui right away:\r\n  - result was that the cmdline in my floating window was always one char too late as soon as you hit the second `/` in `%s/foo/bar` (same as without your PR)\r\n  - I also had a segfault, but I assume it's simply not a good idea to update the ui from the callback?\r\n\r\nTo be clear, I am getting all the `cmdline` messages in time, but I'm just not able to create/update views due to `redraw` not working when `cmdpreview = false`",
            "created_at": "2024-05-16T13:41:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115285618",
            "id": 2115285618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-FLJy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115285618/reactions"
            },
            "updated_at": "2024-05-16T13:41:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115285618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> in the vim.ui_attach callback, when receiving a cmdline message, update the ui right away:\r\n\r\nThis is what I've been doing and I think it should be allowed.",
            "created_at": "2024-05-16T13:52:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115314599",
            "id": 2115314599,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-FSOn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115314599/reactions"
            },
            "updated_at": "2024-05-21T23:50:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115314599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This is what I've been doing and I think it should be allowed\r\n\r\nThat would be really great, but at least before all your recent work, this segfaulted Neovim in a lot of different ways.\r\n\r\nWith your PR, I get a segfault after entering `:%s` if I do a create/update windows in the `ext_cmdline` callback.\r\n\r\nWithout your PR, it still doesn't work, but doesn't segfault.",
            "created_at": "2024-05-16T14:23:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2115393628",
            "id": 2115393628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-Flhc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115393628/reactions"
            },
            "updated_at": "2024-05-16T14:23:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2115393628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "NONE",
            "body": "I don't know if this is helpful but before #25629 I was able to render the cmdline having cmdpreview active without issues and no workaround, by just calling redraw in the callback after setting the line in a float. On master I do observe the lagging character issue and I can't update the float window at all after the second \"/\". ",
            "created_at": "2024-05-17T22:35:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2118455351",
            "id": 2118455351,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-RRA3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118455351/reactions"
            },
            "updated_at": "2024-05-17T22:40:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2118455351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/128088782?v=4",
                "events_url": "https://api.github.com/users/smilhey/events{/privacy}",
                "followers_url": "https://api.github.com/users/smilhey/followers",
                "following_url": "https://api.github.com/users/smilhey/following{/other_user}",
                "gists_url": "https://api.github.com/users/smilhey/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/smilhey",
                "id": 128088782,
                "login": "smilhey",
                "node_id": "U_kgDOB6J6zg",
                "organizations_url": "https://api.github.com/users/smilhey/orgs",
                "received_events_url": "https://api.github.com/users/smilhey/received_events",
                "repos_url": "https://api.github.com/users/smilhey/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/smilhey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/smilhey/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/smilhey"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "When I created Noice and hit some of the issues with the implementation of `vim.ui_attach`, there were talks of maybe changing it so that callbacks would no longer be allowed to do redraws and where a new low-level API would be created to update/create windows.\r\n\r\nBased on all the recent changes and new issues I hit with Noice, I mistakenly thought that was all in preparation of the above.\r\n\r\nIf I understand correctly now, the goal is to just make it all work without any new low-level API and where the lua callback is allowed to fully alter views during.\r\n\r\nI also just tested #27950 again and it works great now. For Noice, this was probably **the** biggest issue with `vim.ui_attach` till now. Looking forward to having this merged :)\r\n\r\nClosing this issue, since it no longer applies.",
            "created_at": "2024-05-19T16:08:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2119287964",
            "id": 2119287964,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-UcSc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2119287964/reactions"
            },
            "updated_at": "2024-05-19T16:08:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2119287964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If I understand correctly now, the goal is to just make it all work without any new low-level API and where the lua callback is allowed to fully alter views during.\r\n\r\nI mean this has been **my** goal, and so far I had not gotten the impression that there is something fundamentally wrong with that approach. If that goes against previous discussions/conclusions that is solely because I was oblivious to them. Is there a reference to those discussions?",
            "created_at": "2024-05-19T16:42:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2119296186",
            "id": 2119296186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-UeS6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2119296186/reactions"
            },
            "updated_at": "2024-05-19T16:42:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2119296186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not really. Was mostly on matrix and a long time ago. \r\n\r\nA lot of the underlying issues with redraw have been fixed since I released Noice. Things that also triggered segfaults unrelated to Noice.\r\n\r\nTo be clear, Noice only triggers redraws or updates/creates windows/buffers **during the callback** in very few cases, when I know for sure or it's possible for Neovim to block on input. Most of the time, a redraw is not needed and it was mostly those redraws that triggered segfaults. Noice also detects recursive redraws (or recursive vim.ui_attach callbacks).\r\n\r\nThe biggest new issue that popped up over the last couple of weeks were those `E565` errors when I try to render stuff during the callback in those special cases. It seems that error is because of `textlock` and triggered by NEovim treesitter code that does a redraw that triggers `vim.ui_attach` events somehow. A similar situation happens with the inlay hints code.\r\n\r\nI currently just queue updates in the callback during `textlock`. To check if `textlock` is active I have to use ffi. There's no builtin way right?",
            "created_at": "2024-05-19T17:06:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2119302411",
            "id": 2119302411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-Uf0L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2119302411/reactions"
            },
            "updated_at": "2024-05-19T17:06:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2119302411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry forgot to reply here @folke; short answer no I don't think there is a builtin way to check if textlock is active(other than `pcall()` -> check error).\r\n\r\nI do think we should try to avoid the issue you describe but I'm not sure what's the best way to resolve it.\r\n\r\nThe issue stems from `nvim__redraw()` calling `ui_flush()` in the decor provider callback which sets textlock. Maybe we can postpone flusing (to Lua callbacks?) when textlock is active.",
            "created_at": "2024-05-22T22:10:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2125861331",
            "id": 2125861331,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-thHT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125861331/reactions"
            },
            "updated_at": "2024-05-22T22:14:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125861331",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "postponing when active is probably a good approach here.\r\nI currenty check if textlock is active with ffi and just queue the message, so receiving it later when textlock is not active would be better indeed",
            "created_at": "2024-05-23T05:05:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/28772#issuecomment-2126240852",
            "id": 2126240852,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28772",
            "node_id": "IC_kwDOAPphoM5-u9xU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126240852/reactions"
            },
            "updated_at": "2024-05-23T05:05:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126240852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28772/comments",
    "created_at": "2024-05-16T11:57:15Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28772/events",
    "html_url": "https://github.com/neovim/neovim/issues/28772",
    "id": 2300206321,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28772/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6JGlzx",
    "number": 28772,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28772/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28772/timeline",
    "title": "`SafeState` or something similar could be really useful for `vim.ui_attach`",
    "updated_at": "2024-05-23T05:05:29Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28772",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
        "events_url": "https://api.github.com/users/folke/events{/privacy}",
        "followers_url": "https://api.github.com/users/folke/followers",
        "following_url": "https://api.github.com/users/folke/following{/other_user}",
        "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/folke",
        "id": 292349,
        "login": "folke",
        "node_id": "MDQ6VXNlcjI5MjM0OQ==",
        "organizations_url": "https://api.github.com/users/folke/orgs",
        "received_events_url": "https://api.github.com/users/folke/received_events",
        "repos_url": "https://api.github.com/users/folke/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/folke"
    }
}