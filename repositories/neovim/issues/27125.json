{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nRunning `verbose map <Esc>` resulted in a \"Last set\" message of \"Last set from Lua\". Starting nvim with the argument `-V1` and running the same command resulted in a \"Last set\" message of \"Last set from ~/.local/share/nvim/lazy/LazyVim/lua/lazyvim/util/init.lua line 167\". On my installation that is a \"lazy\" plugin function that wraps `vim.keymap.set` -- I have added the file.\r\n[init.lua.zip](https://github.com/neovim/neovim/files/14008580/init.lua.zip)\r\n\r\nSome grepping found the actual `vim.keymap.set` command in line 43 of `~/.local/share/nvim/lazy/LazyVim/lua/lazyvim/config/keymaps.lua` -- which I have also added.\r\n[keymaps.lua.zip](https://github.com/neovim/neovim/files/14008623/keymaps.lua.zip)\r\n\r\nI know nothing about the underlying code, but I note in a [comment](https://github.com/neovim/neovim/issues/23719#issuecomment-1557098635) on #23719 @clason referred to `-V1` resulting in increased stack tracing. It seems possible the stack trace in my case stopped 1 step prematurely.\r\n\r\nI have not tested other `verbose` commands on my system.\n\n### Steps to reproduce\n\nFollow steps described in 'Problem' above.\n\n### Expected behavior\n\nFor the \"Last set\" message to give the correct file path and line number.\n\n### Neovim version (nvim -v)\n\nNVIM v0.9.5\n\n### Vim (not Nvim) behaves the same?\n\nNo lua\n\n### Operating system/version\n\nDebian 6.5.13-1 (2023-11-29)\n\n### Terminal name/version\n\nalacritty 0.12.2\n\n### $TERM environment variable\n\nscreen-256color\n\n### Installation\n\nappimage",
    "closed_at": "2024-01-22T10:37:43Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This behavior is correct.",
            "created_at": "2024-01-22T10:37:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/27125#issuecomment-1903704717",
            "id": 1903704717,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27125",
            "node_id": "IC_kwDOAPphoM5xeDqN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1903704717/reactions"
            },
            "updated_at": "2024-01-22T10:37:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1903704717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "I may have explained myself poorly. The `verbose map` command in my example did _not_ show me where the `<Esc>` mapping was set with a `vim.keymap.set` function call. It instead showed me a completely different file where the `vim.keymap.set` function was wrapped in another function. I'm not a developer, just a user, but I don't see how that could possibly be correct behaviour.\r\n\r\nIf this somehow _is_ correct behaviour, perhaps you could provide a short explanation of why that is the case. That way,  any future users wondering why nvim is directing them to files where their mapping is _not_ set, and who find this issue, can undestand why.",
            "created_at": "2024-01-22T11:54:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/27125#issuecomment-1903847320",
            "id": 1903847320,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27125",
            "node_id": "IC_kwDOAPphoM5xemeY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1903847320/reactions"
            },
            "updated_at": "2024-01-22T11:54:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1903847320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1834722?v=4",
                "events_url": "https://api.github.com/users/dnebauer/events{/privacy}",
                "followers_url": "https://api.github.com/users/dnebauer/followers",
                "following_url": "https://api.github.com/users/dnebauer/following{/other_user}",
                "gists_url": "https://api.github.com/users/dnebauer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dnebauer",
                "id": 1834722,
                "login": "dnebauer",
                "node_id": "MDQ6VXNlcjE4MzQ3MjI=",
                "organizations_url": "https://api.github.com/users/dnebauer/orgs",
                "received_events_url": "https://api.github.com/users/dnebauer/received_events",
                "repos_url": "https://api.github.com/users/dnebauer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dnebauer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dnebauer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dnebauer"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If `vim.keymap.set` is wrapped then the only actual `vim.keymap.set` function call is inside the wrapper function. I don't see how there can possibly be some other correct behavior. You can use `vim.api.nvim_set_keymap` directly to avoid the indirections (unless something change that to a wrapper as well).",
            "created_at": "2024-01-22T12:08:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/27125#issuecomment-1903871145",
            "id": 1903871145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27125",
            "node_id": "IC_kwDOAPphoM5xesSp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1903871145/reactions"
            },
            "updated_at": "2024-01-22T12:25:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1903871145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "Clearly I'm missing something blindingly obvious here. I'll try one last time to put my view. When I issue the command `verbose map <Esc>` I expect to be given the file and line where the last mapping for `<Esc>` is defined, that is, where I can find a `vim.keymap.set` command for which `<Esc>` is the lhs -- which in this example is the `keymaps.lua` file I uploaded. What the command actually gave me was an entirely different file (the `utils.lua` file I uploaded) where a function named `safe_keymap_set` is defined, and gives me the line number inside that function where `vim.keymap.set` is called with the parameters passed to the `safe_keymap_set` function. In fact, if I run `verbose map` for _any_ of the mappings defined in the `keymaps.lua` file the \"Last set\" locations are _all_ the same line in the same `utils.lua` file. There is no way for me to know from the `utils.lua` file which file and line the actual mapping is defined in. When using `verbose map` in classic vim it always took me to the `map` command which defined the mapping, which is the expected behaviour that did not happen here.\r\n\r\nI appreciate your suggestion of a workaround using `nvim_set_keymap`. In this case, however, all the files I'm referring to are part of the folke/lazyvim plugin so that is not an option.\r\n\r\nIf I'm still missing something obvious feel free to ignore this message and hopefully the answer will come into focus for me at some point.",
            "created_at": "2024-01-22T13:33:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/27125#issuecomment-1904015642",
            "id": 1904015642,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27125",
            "node_id": "IC_kwDOAPphoM5xfPka",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904015642/reactions"
            },
            "updated_at": "2024-01-22T13:33:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904015642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1834722?v=4",
                "events_url": "https://api.github.com/users/dnebauer/events{/privacy}",
                "followers_url": "https://api.github.com/users/dnebauer/followers",
                "following_url": "https://api.github.com/users/dnebauer/following{/other_user}",
                "gists_url": "https://api.github.com/users/dnebauer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dnebauer",
                "id": 1834722,
                "login": "dnebauer",
                "node_id": "MDQ6VXNlcjE4MzQ3MjI=",
                "organizations_url": "https://api.github.com/users/dnebauer/orgs",
                "received_events_url": "https://api.github.com/users/dnebauer/received_events",
                "repos_url": "https://api.github.com/users/dnebauer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dnebauer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dnebauer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dnebauer"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The trace is performed _by Nvim core_, as far as that is concerned, the option was set by the `vim.keymap.set` command, and that is called inside the utility function. It's not a general purpose Lua debugger than can trace through user code -- and even if it could, where would you know to stop? The utility function? The function calling the utility function? Nvim itself while starting up?",
            "created_at": "2024-01-22T14:37:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/27125#issuecomment-1904138450",
            "id": 1904138450,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27125",
            "node_id": "IC_kwDOAPphoM5xftjS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904138450/reactions"
            },
            "updated_at": "2024-01-22T14:37:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1904138450",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27125/comments",
    "created_at": "2024-01-22T10:33:57Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27125/events",
    "html_url": "https://github.com/neovim/neovim/issues/27125",
    "id": 2093599939,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as usage questions",
            "id": 77997478,
            "name": "closed:question",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:question"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27125/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM58yczD",
    "number": 27125,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27125/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27125/timeline",
    "title": "\"verbose map\" reports incorrect \"Last set\" details with \"-V1\" argument used",
    "updated_at": "2024-01-22T14:37:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27125",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1834722?v=4",
        "events_url": "https://api.github.com/users/dnebauer/events{/privacy}",
        "followers_url": "https://api.github.com/users/dnebauer/followers",
        "following_url": "https://api.github.com/users/dnebauer/following{/other_user}",
        "gists_url": "https://api.github.com/users/dnebauer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dnebauer",
        "id": 1834722,
        "login": "dnebauer",
        "node_id": "MDQ6VXNlcjE4MzQ3MjI=",
        "organizations_url": "https://api.github.com/users/dnebauer/orgs",
        "received_events_url": "https://api.github.com/users/dnebauer/received_events",
        "repos_url": "https://api.github.com/users/dnebauer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dnebauer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dnebauer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dnebauer"
    }
}