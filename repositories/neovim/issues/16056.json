{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Feature already in Vim?\r\n\r\nN/A\r\n\r\n### Feature description\r\n\r\nConsider an `ftplugin/foo.lua` file on the `runtimepath` which sets options for `foo` files, containing a line like:\r\n\r\n```\r\nvim.opt_local.wrap = true\r\n```\r\n\r\nGiven some Lua code like:\r\n\r\n```\r\nlocal bufnr = vim.api.nvim_create_buf(false, true)\r\nvim.api.nvim_buf_set_option(bufnr, 'filetype', 'foo')\r\nvim.cmd'split'\r\nvim.cmd(string.format('buffer %d', bufnr))\r\nprint(vim.opt.wrap)\r\n```\r\n\r\nwhose job it is to programmatically open a `foo` file, it is easy to set a `foo` filetype before actually putting the new buffer in a window -- which today silently does not set the window-local options, such as here, `wrap`.\r\n\r\nCompare specifically what `set wrap?` shows if one moves the `vim.api.nvim_buf_set_option(bufnr, 'filetype', 'foo')` to be after the `buffer %d` line.\r\n\r\nIdeally, the above should trigger a loud error when a window-local option is set but the buffer is not in a window.\r\n\r\nAn alternative would be to somehow have an API which handles both buffer and window creation and filetype setting in a more joint way, such that they're created in the right order sequentially (so perhaps #14315 is somehow related) and it's harder to make this mistake.\r\n\r\nOr, a third alternative which avoids any functional changes would be instead to document (in `nvim_create_buf` I suppose) to be careful with setting filetypes on it before placing it in a window.\r\n\r\nFor a real-life version of this issue, see https://github.com/Julian/lean.nvim/commit/25b8fb3b8a9e3f2719f4e701878223e358895c48.\r\n\r\n```terminal\r\n⊙  nvim --version                                                                 julian@Airm ●\r\nNVIM v0.6.0-dev+30af69509\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\nCompiled by julian@Airm.local\r\n\r\nFeatures: +acl +iconv +tui\r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"/opt/homebrew/Cellar/neovim/HEAD-30af695/share/nvim\"\r\n\r\nRun :checkhealth for more info\r\n```",
    "closed_at": "2024-02-09T00:45:39Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> An alternative would be to somehow have an API which handles both buffer and window creation and filetype setting in a more joint way, such that they're created in the right order sequentially (so perhaps #14315 is somehow related)\r\n\r\n#14315 was implemented in #25550 but doesn't address your exact request.\r\n\r\n> Or, a third alternative which avoids any functional changes would be instead to document (in `nvim_create_buf` I suppose) to be careful with setting filetypes on it before placing it in a window.\r\n\r\nMy sense is that this is the nature of having scope-relative options. It can be annoying to run into the mistake, but adding disclaimers in numerous docs for all the ways that a buffer can be created, won't help. There are tons of interacting parts, we can't list all the permutations. Plugin authors must be aware of how the system works.\r\n\r\n> it is easy to [accidentally] set a `foo` filetype before actually putting the new buffer in a window -- which today silently does not set the window-local options\r\n\r\nIf you identified a pattern that is common enough to lift into a stdlib function, that could be worth exploring in a PR.",
            "created_at": "2024-02-09T00:45:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/16056#issuecomment-1935156882",
            "id": 1935156882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16056",
            "node_id": "IC_kwDOAPphoM5zWCaS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935156882/reactions"
            },
            "updated_at": "2024-02-09T00:47:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935156882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16056/comments",
    "created_at": "2021-10-17T14:45:15Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16056/events",
    "html_url": "https://github.com/neovim/neovim/issues/16056",
    "id": 1028345773,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16056/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM49S0-t",
    "number": 16056,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16056/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16056/timeline",
    "title": "Buffers created with nvim_create_buf which are not (yet) associated with windows should error when setting window-local options",
    "updated_at": "2024-02-09T00:47:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16056",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/329822?v=4",
        "events_url": "https://api.github.com/users/Julian/events{/privacy}",
        "followers_url": "https://api.github.com/users/Julian/followers",
        "following_url": "https://api.github.com/users/Julian/following{/other_user}",
        "gists_url": "https://api.github.com/users/Julian/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Julian",
        "id": 329822,
        "login": "Julian",
        "node_id": "MDQ6VXNlcjMyOTgyMg==",
        "organizations_url": "https://api.github.com/users/Julian/orgs",
        "received_events_url": "https://api.github.com/users/Julian/received_events",
        "repos_url": "https://api.github.com/users/Julian/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Julian/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Julian/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Julian"
    }
}