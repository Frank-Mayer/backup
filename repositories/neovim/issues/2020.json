{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "OpenBSD added this in the last few months, and I thought it would be worth considering for use in Neovim. [Here's an article on it](http://lteo.net/blog/2014/10/28/reallocarray-in-openbsd-integer-overflow-detection-for-free/) which should quickly give you an idea of its purpose, and [a discussion on it](https://www.reddit.com/r/programming/comments/2iwzqs/openbsds_reallocarray_extension_xpost_from_rcprog/) regarding different possible implementations.\n\nI mention this because I've noticed a lot of usage of `xmalloc(nmemb * size);` and `xrealloc(ptr, nmemb * size);` throughout the code-base.\n",
    "closed_at": "2024-09-03T17:04:47Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": ":+1: The reddit discussion is worth reading too. This is generally applicable to any popular function that takes the result of a calculation: let the popular function do the calculation internally and check for overflow.\n",
            "created_at": "2015-02-19T03:55:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-74995702",
            "id": 74995702,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTk1NzAy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/74995702/reactions"
            },
            "updated_at": "2015-02-19T03:55:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/74995702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would be a good way to avoid overflow in a bunch of places. :+1: \nJust two comments, though, about differences between our would-be version and the one in the article:\n- We would never return NULL.\n- I don't understand the need for `(nmemb >= MUL_NO_OVERFLOW || size >= MUL_NO_OVERFLOW)` checks (and hence the need for `MUL_NO_OVERFLOW` constant. Checking `SIZE_MAX / nmemb < size` is enough and more flexible (doesn't impose artificial limit on operands).\n",
            "created_at": "2015-02-19T09:20:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-75019848",
            "id": 75019848,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDE5ODQ4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75019848/reactions"
            },
            "updated_at": "2015-02-19T09:20:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75019848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/135757?v=4",
                "events_url": "https://api.github.com/users/elmart/events{/privacy}",
                "followers_url": "https://api.github.com/users/elmart/followers",
                "following_url": "https://api.github.com/users/elmart/following{/other_user}",
                "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elmart",
                "id": 135757,
                "login": "elmart",
                "node_id": "MDQ6VXNlcjEzNTc1Nw==",
                "organizations_url": "https://api.github.com/users/elmart/orgs",
                "received_events_url": "https://api.github.com/users/elmart/received_events",
                "repos_url": "https://api.github.com/users/elmart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elmart"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I don't understand the need for (nmemb >= MUL_NO_OVERFLOW || size >= MUL_NO_OVERFLOW) checks (and hence the need for MUL_NO_OVERFLOW constant. Checking SIZE_MAX / nmemb < size is enough and more flexible (doesn't impose artificial limit on operands).\n\nThey try to prevent the (expensive) division, because most of the time `nmemb*size << sqrt(SIZE_MAX+1)*sqrt(SIZE_MAX+1)`.\n",
            "created_at": "2015-02-19T13:30:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-75051663",
            "id": 75051663,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDUxNjYz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75051663/reactions"
            },
            "updated_at": "2015-02-19T13:30:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75051663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> They try to prevent the (expensive) division\n\nThat can be an explanation. But that rules out possible legal cases where one of the factors is bigger than the square root and the other one is smaller. In our case, where we abort instead of returning NULL, I think it's not worth the risk, just to spare a division. Besides, that's a bit of premature optimization, IMO. I would first make it correct, and then, if proved slow, profile it and optimize the hotspots.\n",
            "created_at": "2015-02-19T15:34:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-75072189",
            "id": 75072189,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDcyMTg5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75072189/reactions"
            },
            "updated_at": "2015-02-19T15:34:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75072189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/135757?v=4",
                "events_url": "https://api.github.com/users/elmart/events{/privacy}",
                "followers_url": "https://api.github.com/users/elmart/followers",
                "following_url": "https://api.github.com/users/elmart/following{/other_user}",
                "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elmart",
                "id": 135757,
                "login": "elmart",
                "node_id": "MDQ6VXNlcjEzNTc1Nw==",
                "organizations_url": "https://api.github.com/users/elmart/orgs",
                "received_events_url": "https://api.github.com/users/elmart/received_events",
                "repos_url": "https://api.github.com/users/elmart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elmart"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ">  But that rules out possible legal cases where one of the factors is bigger than the square root and the other one is smaller.\n\nNo legal case is marked as illegal. If one factor is bigger than `MUL_NO_OVERFLOW` there is still the division that needs to be checked:\n\n``` c\nvoid *\nreallocarray(void *optr, size_t nmemb, size_t size)\n{\n    if ((nmemb >= MUL_NO_OVERFLOW || size >= MUL_NO_OVERFLOW) &&\n        nmemb > 0 && SIZE_MAX / nmemb < size) {\n            errno = ENOMEM;\n            return NULL;\n    }\n    return realloc(optr, size * nmemb);\n}\n```\n",
            "created_at": "2015-02-19T17:53:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-75101266",
            "id": 75101266,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTAxMjY2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75101266/reactions"
            },
            "updated_at": "2015-02-19T17:53:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75101266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "A division is about 10x more expensive than an addition/subtraction when I was last benchmarking it (on an early-gen i7, which already does much better on those things than earlier machines afaik). So what @oni-link says sounds like it could be true to me.\n",
            "created_at": "2015-02-19T18:06:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-75103815",
            "id": 75103815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTAzODE1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75103815/reactions"
            },
            "updated_at": "2015-02-19T18:06:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75103815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "reddit suggested this alternative:\n\n``` c\nvoid*\nreallocarray(void *optr, size_t nmemb, size_t size)\n{\n    size_t prod;\n    if (__builtin_expect(umull_overflow(size, nmemb, &prod),0)) {\n        errno = ENOMEM;\n        return NULL;\n    }\n    return realloc(optr, prod);\n}\n```\n",
            "created_at": "2015-02-19T18:24:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-75107102",
            "id": 75107102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTA3MTAy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75107102/reactions"
            },
            "updated_at": "2015-02-19T18:24:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75107102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> No legal case is marked as illegal\n\nUh, you're right. Sorry for that.\n\n> __builtin_expect(umull_overflow\n\nIsn't that gcc only?\n",
            "created_at": "2015-02-19T19:22:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-75117608",
            "id": 75117608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTE3NjA4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75117608/reactions"
            },
            "updated_at": "2015-02-19T19:22:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75117608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/135757?v=4",
                "events_url": "https://api.github.com/users/elmart/events{/privacy}",
                "followers_url": "https://api.github.com/users/elmart/followers",
                "following_url": "https://api.github.com/users/elmart/following{/other_user}",
                "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elmart",
                "id": 135757,
                "login": "elmart",
                "node_id": "MDQ6VXNlcjEzNTc1Nw==",
                "organizations_url": "https://api.github.com/users/elmart/orgs",
                "received_events_url": "https://api.github.com/users/elmart/received_events",
                "repos_url": "https://api.github.com/users/elmart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elmart"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "`__builtin_expect` is supported by clang as it seems so, but `umull_overflow` is not. CLang has `__builtin_umull_overflow`, gcc does not and neither it has `umull_overflow` (at least not without linking additional libraries). I have found [a topic](http://renren.io/questions/158983/multiplication-of-large-numbers-how-to-catch-overflow) with possible `umull_overflow` implementations and their benchmark.\n",
            "created_at": "2015-02-19T19:50:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-75122945",
            "id": 75122945,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTIyOTQ1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75122945/reactions"
            },
            "updated_at": "2015-02-19T19:50:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/75122945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "NONE",
            "body": "@elmart \n\n> We would never return NULL.\n\nThen what would we do if the multiplication overflowed? I'm not familiar with the expected semantics of nvim's memory functions.\n",
            "created_at": "2015-03-31T04:30:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-87934610",
            "id": 87934610,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTM0NjEw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87934610/reactions"
            },
            "updated_at": "2015-03-31T04:30:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87934610",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Pyrohh we try to free some memory, try again, and call `preserve_exit()` when OOM to avoid handling OOM everywhere. I guess we could do the same (except for the freeing memory part) when overflowing.\n\n``` c\nvoid *xmalloc(size_t size)\n  FUNC_ATTR_MALLOC FUNC_ATTR_ALLOC_SIZE(1) FUNC_ATTR_NONNULL_RET\n{\n  void *ret = try_malloc(size);\n  if (!ret) {\n    mch_errmsg(e_outofmem);\n    mch_errmsg(\"\\n\");\n    preserve_exit();\n  }\n  return ret;\n}\n```\n",
            "created_at": "2015-03-31T04:51:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-87938364",
            "id": 87938364,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTM4MzY0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87938364/reactions"
            },
            "updated_at": "2015-03-31T04:51:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87938364",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I would add an `ELOG` since overflow here is probably a programming mistake.\n\n``` c\nvoid *xreallocarray(void *optr, size_t nmemb, size_t size)\n  FUNC_ATTR_WARN_UNUSED_RESULT FUNC_ATTR_ALLOC_SIZE_PROD(1, 2) FUNC_ATTR_NONNULL_RET\n{\n  if ((nmemb >= MUL_NO_OVERFLOW || size >= MUL_NO_OVERFLOW) &&\n      nmemb > 0 && SIZE_MAX / nmemb < size) {\n    ELOG(\"xreallocarray detected an integer overflow\");\n    preserve_exit();\n  }\n  return xrealloc(optr, size * nmemb);\n}\n```\n",
            "created_at": "2015-03-31T05:06:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-87940719",
            "id": 87940719,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3OTQwNzE5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87940719/reactions"
            },
            "updated_at": "2015-03-31T05:06:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/87940719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "NONE",
            "body": "@philix When I create a call which to xreallocarray which causes an overflow, ELOG doesn't seem to log anything to .nvimlog . I can look into it later, but I assume it's to do with preserve_exit().\n",
            "created_at": "2015-03-31T22:31:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-88271852",
            "id": 88271852,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg4MjcxODUy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/88271852/reactions"
            },
            "updated_at": "2015-03-31T22:32:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/88271852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Pyrohh It's weird since `ELOG` flushes the output file buffer on every call. You can `assert(ELOG(...))` to check if flushing was successful.\n",
            "created_at": "2015-04-06T17:36:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-90166618",
            "id": 90166618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDkwMTY2NjE4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90166618/reactions"
            },
            "updated_at": "2015-04-06T17:36:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90166618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "NONE",
            "body": "The assert isn't thrown... do I need to pass something like DEBUG_LEVEL to the build?\n",
            "created_at": "2015-04-06T20:07:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-90225615",
            "id": 90225615,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDkwMjI1NjE1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90225615/reactions"
            },
            "updated_at": "2015-04-06T20:07:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90225615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The assert isn't thrown... do I need to pass something like DEBUG_LEVEL to the build?\n\n`ELOG` should be enabled by default on a debug build. Can you `printf` right before `preserve_exit()`?\n",
            "created_at": "2015-04-07T03:36:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-90343969",
            "id": 90343969,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDkwMzQzOTY5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90343969/reactions"
            },
            "updated_at": "2015-04-07T03:36:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90343969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Can you printf right before preserve_exit()?\n\nHmm, that doesn't seem to work.\n",
            "created_at": "2015-04-07T04:30:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-90354926",
            "id": 90354926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDkwMzU0OTI2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90354926/reactions"
            },
            "updated_at": "2015-04-07T04:30:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90354926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@Pyrohh it's weird. Does `fflush(stdout)` help?\n",
            "created_at": "2015-04-07T18:57:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-90697686",
            "id": 90697686,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDkwNjk3Njg2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90697686/reactions"
            },
            "updated_at": "2015-04-07T18:57:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90697686",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "NONE",
            "body": "> it's weird. Does fflush(stdout) help?\n\nUnfortunately, no. I'm using reallocarray calls in syntax.c here:\n\n``` patch\ndiff --git a/src/nvim/syntax.c b/src/nvim/syntax.c\nindex 20bfbc8..3fe669c 100644\n--- a/src/nvim/syntax.c\n+++ b/src/nvim/syntax.c\n@@ -4660,7 +4660,7 @@ static void syn_combine_list(short **clstr1, short **clstr2, int list_op)\n         clstr = NULL;\n         break;\n       }\n-      clstr = xmalloc((count + 1) * sizeof(short));\n+      clstr = xreallocarray(NULL, (count + 1), 100000000000);\n       clstr[count] = 0;\n     }\n   }\n@@ -5193,7 +5193,7 @@ get_id_list (\n     if (failed)\n       break;\n     if (round == 1) {\n-      retval = xmalloc((count + 1) * sizeof(short));\n+      retval = xreallocarray(NULL, (count + 1), 100000000000);\n       retval[count] = 0;            /* zero means end of the list */\n       total_count = count;\n     }\n```\n\nI assume the screen is being flushed before the UI closes, but I don't know from where...\nIf it's any consolation, a malignant xreallocarray call prints the error message if it's in main.c:early_init() :smile: \n",
            "created_at": "2015-04-08T18:30:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-90996640",
            "id": 90996640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDkwOTk2NjQw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90996640/reactions"
            },
            "updated_at": "2015-04-08T18:30:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/90996640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
                "events_url": "https://api.github.com/users/ghost/events{/privacy}",
                "followers_url": "https://api.github.com/users/ghost/followers",
                "following_url": "https://api.github.com/users/ghost/following{/other_user}",
                "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ghost",
                "id": 10137,
                "login": "ghost",
                "node_id": "MDQ6VXNlcjEwMTM3",
                "organizations_url": "https://api.github.com/users/ghost/orgs",
                "received_events_url": "https://api.github.com/users/ghost/received_events",
                "repos_url": "https://api.github.com/users/ghost/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ghost"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This was the last issue tagged `reopen-later`. So, re-opening it now.",
            "created_at": "2018-02-20T21:20:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-367123400",
            "id": 367123400,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzEyMzQwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/367123400/reactions"
            },
            "updated_at": "2018-02-20T21:20:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/367123400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No clear plan here, and we have `xcalloc` at least now.",
            "created_at": "2024-09-03T17:04:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/2020#issuecomment-2327024431",
            "id": 2327024431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/2020",
            "node_id": "IC_kwDOAPphoM6Ks5Mv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2327024431/reactions"
            },
            "updated_at": "2024-09-03T17:04:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2327024431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 21,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/2020/comments",
    "created_at": "2015-02-19T02:33:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/2020/events",
    "html_url": "https://github.com/neovim/neovim/issues/2020",
    "id": 58160650,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 114040313,
            "name": "robustness",
            "node_id": "MDU6TGFiZWwxMTQwNDAzMTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/robustness"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/2020/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 645,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 566,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-09-09T18:06:19Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU1ODE2MDY1MA==",
    "number": 2020,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/2020/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/2020/timeline",
    "title": "reallocarray()",
    "updated_at": "2024-09-03T17:04:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/2020",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "events_url": "https://api.github.com/users/ghost/events{/privacy}",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following{/other_user}",
        "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ghost",
        "id": 10137,
        "login": "ghost",
        "node_id": "MDQ6VXNlcjEwMTM3",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ghost"
    }
}