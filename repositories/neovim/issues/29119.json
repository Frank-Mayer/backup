{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nWhen using `softtabstop=-1` and `foldmethod=indent` inserting tab characters can result in a de-sync. This looks very similar to https://github.com/neovim/neovim/issues/25092 but I've confirmed it's not a regression.\r\n\r\n### Steps to reproduce\r\n\r\nRepo: https://github.com/icholy/nvim-bug-29119\r\n\r\n**init.lua**\r\n``` lua\r\nvim.o.foldmethod = \"indent\"\r\nvim.o.softtabstop = -1\r\n\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n        pattern = \"go\",\r\n        callback = function()\r\n\t\tvim.lsp.start({ cmd = { \"gopls\" } })\r\n        end\r\n})\r\n```\r\n\r\n**main.go**\r\n\r\n``` go\r\npackage main\r\n\r\nfunc main() {\r\n\tprintln()\r\n}\r\n```\r\n\r\n**Steps:**\r\n\r\n1. `nvim --clean -u init.lua main.go`\r\n2. Insert `<TAB>` character right before `println()` call.\r\n3. Leave insert mode with `<ESC>`.\r\n\r\n**See:**\r\n\r\n![image](https://github.com/neovim/neovim/assets/943597/06d5e7fa-b227-482a-9081-59f5c0b6b5f3)\r\n\r\n\r\n### Expected behavior\r\n\r\nNo de-sync\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.11.0-dev-139+ga18652ed6\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nn/a\r\n\r\n### Operating system/version\r\n\r\nUbuntu 22.04.4 LTS\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.12.2\r\n\r\n### $TERM environment variable\r\n\r\nalacritty\r\n\r\n### Installation\r\n\r\nbob",
    "closed_at": "2024-06-02T07:37:13Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Please refrain from using external repositories as a *minimal* reproduction step (which might be ephemeral!) It'd be great if this issue can be self-contained. The code and reproduction step doesn't seem too long.\r\n\r\nAlso this might be an issue specific to gopls. Do you happen to experience the same bug with other LSPs?",
            "created_at": "2024-05-31T22:43:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/29119#issuecomment-2143067045",
            "id": 2143067045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29119",
            "node_id": "IC_kwDOAPphoM5_vJul",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143067045/reactions"
            },
            "updated_at": "2024-05-31T22:46:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143067045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@wookayin the issue description contains the exact same contents as the repo I linked.",
            "created_at": "2024-05-31T22:50:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/29119#issuecomment-2143071949",
            "id": 2143071949,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29119",
            "node_id": "IC_kwDOAPphoM5_vK7N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143071949/reactions"
            },
            "updated_at": "2024-05-31T22:50:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143071949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@wookayin I'm able to reproduce with luals as well. I generally use gopls for repros because it's fast to initialize & less buggy than other LSPs in general (at least in my experience).",
            "created_at": "2024-05-31T22:55:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/29119#issuecomment-2143075120",
            "id": 2143075120,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29119",
            "node_id": "IC_kwDOAPphoM5_vLsw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143075120/reactions"
            },
            "updated_at": "2024-05-31T22:55:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143075120",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's the LSP log:\r\n\r\n```\r\n[START][2024-06-02 00:50:08] LSP logging initiated\r\n[INFO][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:731\t\"Starting RPC client\"\t{  cmd = { \"gopls\" },  extra = {}}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      general = {        positionEncodings = { \"utf-16\" }      },      textDocument = {        callHierarchy = {          dynamicRegistration = false        },        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }            }          },          dataSupport = true,          dynamicRegistration = true,          isPreferredSupport = true,          resolveSupport = {            properties = { \"edit\" }          }        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            resolveSupport = {              properties = { \"additionalTextEdits\" }            },            snippetSupport = true          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          completionList = {            itemDefaults = { \"editRange\", \"insertTextFormat\", \"insertTextMode\", \"data\" }          },          contextSupport = false,          dynamicRegistration = false        },        declaration = {          linkSupport = true        },        definition = {          dynamicRegistration = true,          linkSupport = true        },        diagnostic = {          dynamicRegistration = false        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        formatting = {          dynamicRegistration = true        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = true        },        implementation = {          linkSupport = true        },        inlayHint = {          dynamicRegistration = true,          resolveSupport = {            properties = { \"textEdits\", \"tooltip\", \"location\", \"command\" }          }        },        publishDiagnostics = {          dataSupport = true,          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        rangeFormatting = {          dynamicRegistration = true        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = true,          prepareSupport = true        },        semanticTokens = {          augmentsSyntaxTokens = true,          dynamicRegistration = false,          formats = { \"relative\" },          multilineTokenSupport = false,          overlappingTokenSupport = true,          requests = {            full = {              delta = true            },            range = false          },          serverCancelSupport = false,          tokenModifiers = { \"declaration\", \"definition\", \"readonly\", \"static\", \"deprecated\", \"abstract\", \"async\", \"modification\", \"documentation\", \"defaultLibrary\" },          tokenTypes = { \"namespace\", \"type\", \"class\", \"enum\", \"interface\", \"struct\", \"typeParameter\", \"parameter\", \"variable\", \"property\", \"enumMember\", \"event\", \"function\", \"method\", \"macro\", \"keyword\", \"modifier\", \"comment\", \"string\", \"number\", \"regexp\", \"operator\", \"decorator\" }        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { \"markdown\", \"plaintext\" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = true,          willSaveWaitUntil = true        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = true        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        didChangeConfiguration = {          dynamicRegistration = false        },        didChangeWatchedFiles = {          dynamicRegistration = false,          relativePatternSupport = true        },        inlayHint = {          refreshSupport = true        },        semanticTokens = {          refreshSupport = true        },        symbol = {          dynamicRegistration = false,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { \"rename\", \"create\", \"delete\" }        },        workspaceFolders = true      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.11.0-dev+ga18652ed6\"    },    processId = 16424,    rootPath = vim.NIL,    rootUri = vim.NIL,    trace = \"off\",    workDoneToken = \"1\",    workspaceFolders = vim.NIL  }}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      callHierarchyProvider = true,      codeActionProvider = {        codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" },        resolveProvider = true      },      codeLensProvider = vim.empty_dict(),      completionProvider = {        triggerCharacters = { \".\" }      },      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = vim.empty_dict(),      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"gopls.add_dependency\", \"gopls.add_import\", \"gopls.add_telemetry_counters\", \"gopls.apply_fix\", \"gopls.change_signature\", \"gopls.check_upgrades\", \"gopls.diagnose_files\", \"gopls.edit_go_directive\", \"gopls.fetch_vulncheck_result\", \"gopls.gc_details\", \"gopls.generate\", \"gopls.go_get_package\", \"gopls.list_imports\", \"gopls.list_known_packages\", \"gopls.maybe_prompt_for_telemetry\", \"gopls.mem_stats\", \"gopls.regenerate_cgo\", \"gopls.remove_dependency\", \"gopls.reset_go_mod_diagnostics\", \"gopls.run_go_work_command\", \"gopls.run_govulncheck\", \"gopls.run_tests\", \"gopls.start_debugging\", \"gopls.start_profile\", \"gopls.stop_profile\", \"gopls.test\", \"gopls.tidy\", \"gopls.toggle_gc_details\", \"gopls.update_go_sum\", \"gopls.upgrade_dependency\", \"gopls.vendor\", \"gopls.views\", \"gopls.workspace_stats\" }      },      foldingRangeProvider = true,      hoverProvider = true,      implementationProvider = true,      inlayHintProvider = vim.empty_dict(),      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = true,        legend = {          tokenModifiers = { \"declaration\", \"definition\", \"readonly\", \"static\", \"deprecated\", \"abstract\", \"async\", \"modification\", \"documentation\", \"defaultLibrary\" },          tokenTypes = { \"namespace\", \"type\", \"class\", \"enum\", \"interface\", \"struct\", \"typeParameter\", \"parameter\", \"variable\", \"property\", \"enumMember\", \"event\", \"function\", \"method\", \"macro\", \"keyword\", \"modifier\", \"comment\", \"string\", \"number\", \"regexp\", \"operator\", \"decorator\" }        },        range = true      },      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = vim.empty_dict()      },      typeDefinitionProvider = true,      workspace = {        workspaceFolders = {          changeNotifications = \"workspace/didChangeWorkspaceFolders\",          supported = true        }      },      workspaceSymbolProvider = true    },    serverInfo = {      name = \"gopls\",      version = '{\"GoVersion\":\"go1.22.0\",\"Path\":\"golang.org/x/tools/gopls\",\"Main\":{\"Path\":\"golang.org/x/tools/gopls\",\"Version\":\"v0.15.3\",\"Sum\":\"h1:zbdOidFrPTc8Bx0YrN5QKgJ0zCjyGi0L27sKQ/bDG5o=\",\"Replace\":null},\"Deps\":[{\"Path\":\"github.com/BurntSushi/toml\",\"Version\":\"v1.2.1\",\"Sum\":\"h1:9F2/+DoOYIOksmaJFPw1tGFy1eDnIJXg+UHjuD8lTak=\",\"Replace\":null},{\"Path\":\"github.com/google/go-cmp\",\"Version\":\"v0.6.0\",\"Sum\":\"h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\",\"Replace\":null},{\"Path\":\"golang.org/x/exp/typeparams\",\"Version\":\"v0.0.0-20221212164502-fae10dda9338\",\"Sum\":\"h1:2O2DON6y3XMJiQRAS1UWU+54aec2uopH3x7MAiqGW6Y=\",\"Replace\":null},{\"Path\":\"golang.org/x/mod\",\"Version\":\"v0.15.0\",\"Sum\":\"h1:SernR4v+D55NyBH2QiEQrlBAnj1ECL6AGrA5+dPaMY8=\",\"Replace\":null},{\"Path\":\"golang.org/x/sync\",\"Version\":\"v0.6.0\",\"Sum\":\"h1:5BMeUDZ7vkXGfEr1x9B4bRcTH4lpkTkpdh0T/J+qjbQ=\",\"Replace\":null},{\"Path\":\"golang.org/x/telemetry\",\"Version\":\"v0.0.0-20240209200032-7b892fcb8a78\",\"Sum\":\"h1:vcVnuftN4J4UKLRcgetjzfU9FjjgXUUYUc3JhFplgV4=\",\"Replace\":null},{\"Path\":\"golang.org/x/text\",\"Version\":\"v0.14.0\",\"Sum\":\"h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\",\"Replace\":null},{\"Path\":\"golang.org/x/tools\",\"Version\":\"v0.18.1-0.20240412183611-d92ae0781217\",\"Sum\":\"h1:uH9jJYgeLCvblH0S+03kFO0qUDxRkbLRLFiKVVDl7ak=\",\"Replace\":null},{\"Path\":\"golang.org/x/vuln\",\"Version\":\"v1.0.1\",\"Sum\":\"h1:KUas02EjQK5LTuIx1OylBQdKKZ9jeugs+HiqO5HormU=\",\"Replace\":null},{\"Path\":\"honnef.co/go/tools\",\"Version\":\"v0.4.6\",\"Sum\":\"h1:oFEHCKeID7to/3autwsWfnuv69j3NsfcXbvJKuIcep8=\",\"Replace\":null},{\"Path\":\"mvdan.cc/gofumpt\",\"Version\":\"v0.6.0\",\"Sum\":\"h1:G3QvahNDmpD+Aek/bNOLrFR2XC6ZAdo62dZu65gmwGo=\",\"Replace\":null},{\"Path\":\"mvdan.cc/xurls/v2\",\"Version\":\"v2.5.0\",\"Sum\":\"h1:lyBNOm8Wo71UknhUs4QTFUNNMyxy2JEIaKKo0RWOh+8=\",\"Replace\":null}],\"Settings\":[{\"Key\":\"-buildmode\",\"Value\":\"exe\"},{\"Key\":\"-compiler\",\"Value\":\"gc\"},{\"Key\":\"DefaultGODEBUG\",\"Value\":\"httplaxcontentlength=1,httpmuxgo121=1,panicnil=1,tls10server=1,tlsrsakex=1,tlsunsafeekm=1\"},{\"Key\":\"CGO_ENABLED\",\"Value\":\"1\"},{\"Key\":\"CGO_CFLAGS\",\"Value\":\"\"},{\"Key\":\"CGO_CPPFLAGS\",\"Value\":\"\"},{\"Key\":\"CGO_CXXFLAGS\",\"Value\":\"\"},{\"Key\":\"CGO_LDFLAGS\",\"Value\":\"\"},{\"Key\":\"GOARCH\",\"Value\":\"amd64\"},{\"Key\":\"GOOS\",\"Value\":\"linux\"},{\"Key\":\"GOAMD64\",\"Value\":\"v1\"}],\"Version\":\"v0.15.3\"}'    }  }}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = vim.empty_dict()}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"go\",      text = \"package main\\n\\nfunc main() {\\nprintln()\\n}\\n\\n\",      uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\",      version = 3    }  }}\r\n[INFO][2024-06-02 00:50:08] ...m/lsp/client.lua:620\t\"LSP[gopls]\"\t\"server_capabilities\"\t{  server_capabilities = {    callHierarchyProvider = true,    codeActionProvider = {      codeActionKinds = { \"quickfix\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source.fixAll\", \"source.organizeImports\" },      resolveProvider = true    },    codeLensProvider = vim.empty_dict(),    completionProvider = {      triggerCharacters = { \".\" }    },    definitionProvider = true,    documentFormattingProvider = true,    documentHighlightProvider = true,    documentLinkProvider = vim.empty_dict(),    documentSymbolProvider = true,    executeCommandProvider = {      commands = { \"gopls.add_dependency\", \"gopls.add_import\", \"gopls.add_telemetry_counters\", \"gopls.apply_fix\", \"gopls.change_signature\", \"gopls.check_upgrades\", \"gopls.diagnose_files\", \"gopls.edit_go_directive\", \"gopls.fetch_vulncheck_result\", \"gopls.gc_details\", \"gopls.generate\", \"gopls.go_get_package\", \"gopls.list_imports\", \"gopls.list_known_packages\", \"gopls.maybe_prompt_for_telemetry\", \"gopls.mem_stats\", \"gopls.regenerate_cgo\", \"gopls.remove_dependency\", \"gopls.reset_go_mod_diagnostics\", \"gopls.run_go_work_command\", \"gopls.run_govulncheck\", \"gopls.run_tests\", \"gopls.start_debugging\", \"gopls.start_profile\", \"gopls.stop_profile\", \"gopls.test\", \"gopls.tidy\", \"gopls.toggle_gc_details\", \"gopls.update_go_sum\", \"gopls.upgrade_dependency\", \"gopls.vendor\", \"gopls.views\", \"gopls.workspace_stats\" }    },    foldingRangeProvider = true,    hoverProvider = true,    implementationProvider = true,    inlayHintProvider = vim.empty_dict(),    referencesProvider = true,    renameProvider = {      prepareProvider = true    },    selectionRangeProvider = true,    semanticTokensProvider = {      full = true,      legend = {        tokenModifiers = { \"declaration\", \"definition\", \"readonly\", \"static\", \"deprecated\", \"abstract\", \"async\", \"modification\", \"documentation\", \"defaultLibrary\" },        tokenTypes = { \"namespace\", \"type\", \"class\", \"enum\", \"interface\", \"struct\", \"typeParameter\", \"parameter\", \"variable\", \"property\", \"enumMember\", \"event\", \"function\", \"method\", \"macro\", \"keyword\", \"modifier\", \"comment\", \"string\", \"number\", \"regexp\", \"operator\", \"decorator\" }      },      range = true    },    signatureHelpProvider = {      triggerCharacters = { \"(\", \",\" }    },    textDocumentSync = {      change = 2,      openClose = true,      save = vim.empty_dict()    },    typeDefinitionProvider = true,    workspace = {      workspaceFolders = {        changeNotifications = \"workspace/didChangeWorkspaceFolders\",        supported = true      }    },    workspaceSymbolProvider = true  }}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"744700557183600534\"  }}\r\n[DEBUG][2024-06-02 00:50:08] ...m/lsp/client.lua:678\t\"LSP[gopls]\"\t\"client.request\"\t1\t\"textDocument/semanticTokens/full\"\t{  textDocument = {    uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\"  }}\t<function 1>\t1\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"textDocument/semanticTokens/full\",  params = {    textDocument = {      uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\"    }  }}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:423\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  id = 1,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"744700557183600534\",    value = {      kind = \"begin\",      message = \"Loading packages...\",      title = \"Setting up workspace\"    }  }}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"workspace/configuration\",  params = {    items = { {        scopeUri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8\",        section = \"gopls\"      } }  }}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:423\t\"server_request: callback result\"\t{  result = { vim.NIL },  status = true}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  id = 2,  jsonrpc = \"2.0\",  result = { vim.NIL }}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2024/06/02 00:50:08 go info for /home/icholy/src/github.com/icholy/nvim-bug-8\\n(view type AdHocView)\\n(root dir /home/icholy/src/github.com/icholy/nvim-bug-8)\\n(go version go version go1.22.0 linux/amd64)\\n(build flags: [])\\n(go env: {GOOS:linux GOARCH:amd64 GOCACHE:/home/icholy/.cache/go-build GOMODCACHE:/home/icholy/go/pkg/mod GOPATH:/home/icholy/go GOPRIVATE: GOFLAGS: GO111MODULE: GoVersion:22 GoVersionOutput:go version go1.22.0 linux/amd64\\n GOWORK: GOPACKAGESDRIVER:})\\n(env overlay: map[])\\n\\n\",    type = 3  }}\r\n[INFO][2024-06-02 00:50:08] ...lsp/handlers.lua:628\t\"2024/06/02 00:50:08 go info for /home/icholy/src/github.com/icholy/nvim-bug-8\\n(view type AdHocView)\\n(root dir /home/icholy/src/github.com/icholy/nvim-bug-8)\\n(go version go version go1.22.0 linux/amd64)\\n(build flags: [])\\n(go env: {GOOS:linux GOARCH:amd64 GOCACHE:/home/icholy/.cache/go-build GOMODCACHE:/home/icholy/go/pkg/mod GOPATH:/home/icholy/go GOPRIVATE: GOFLAGS: GO111MODULE: GoVersion:22 GoVersionOutput:go version go1.22.0 linux/amd64\\n GOWORK: GOPACKAGESDRIVER:})\\n(env overlay: map[])\\n\\n\"\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2024/06/02 00:50:08 go/packages.Load #1\\n\\tsnapshot=0\\n\\tdirectory=file:///home/icholy/src/github.com/icholy/nvim-bug-8\\n\\tquery=[./ builtin]\\n\\tpackages=2\\n\",    type = 3  }}\r\n[INFO][2024-06-02 00:50:08] ...lsp/handlers.lua:628\t\"2024/06/02 00:50:08 go/packages.Load #1\\n\\tsnapshot=0\\n\\tdirectory=file:///home/icholy/src/github.com/icholy/nvim-bug-8\\n\\tquery=[./ builtin]\\n\\tpackages=2\\n\"\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"2024/06/02 00:50:08 go/packages.Load #1: updating metadata for 1 packages\\n\",    type = 3  }}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"744700557183600534\",    value = {      kind = \"end\",      message = \"Finished loading packages.\"    }  }}\r\n[INFO][2024-06-02 00:50:08] ...lsp/handlers.lua:628\t\"2024/06/02 00:50:08 go/packages.Load #1: updating metadata for 1 packages\\n\"\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  error = {    code = 0,    message = \"semantictokens are disabled\"  },  id = 2,  jsonrpc = \"2.0\"}\r\n[DEBUG][2024-06-02 00:50:08] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = {},    uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\",    version = 3  }}\r\n[DEBUG][2024-06-02 00:50:11] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didChange\",  params = {    contentChanges = { {        range = {          [\"end\"] = {            character = 0,            line = 3          },          start = {            character = 0,            line = 3          }        },        rangeLength = 0,        text = \" \"      }, {        range = {          [\"end\"] = {            character = 1,            line = 3          },          start = {            character = 1,            line = 3          }        },        rangeLength = 0,        text = \" \"      }, {        range = {          [\"end\"] = {            character = 2,            line = 3          },          start = {            character = 2,            line = 3          }        },        rangeLength = 0,        text = \" \"      }, {        range = {          [\"end\"] = {            character = 3,            line = 3          },          start = {            character = 3,            line = 3          }        },        rangeLength = 0,        text = \" \"      }, {        range = {          [\"end\"] = {            character = 4,            line = 3          },          start = {            character = 4,            line = 3          }        },        rangeLength = 0,        text = \" \"      }, {        range = {          [\"end\"] = {            character = 5,            line = 3          },          start = {            character = 5,            line = 3          }        },        rangeLength = 0,        text = \" \"      }, {        range = {          [\"end\"] = {            character = 6,            line = 3          },          start = {            character = 6,            line = 3          }        },        rangeLength = 0,        text = \" \"      }, {        range = {          [\"end\"] = {            character = 7,            line = 3          },          start = {            character = 7,            line = 3          }        },        rangeLength = 0,        text = \" \"      }, {        range = {          [\"end\"] = {            character = 11,            line = 3          },          start = {            character = 0,            line = 3          }        },        rangeLength = 11,        text = \"\\tprintln()\\0\"      } },    textDocument = {      uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\",      version = 12    }  }}\r\n[DEBUG][2024-06-02 00:50:11] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = { {        message = \"expected ';', found 'ILLEGAL'\",        range = {          [\"end\"] = {            character = 10,            line = 3          },          start = {            character = 10,            line = 3          }        },        severity = 1,        source = \"syntax\"      } },    uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\",    version = 12  }}\r\n[DEBUG][2024-06-02 00:50:11] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  jsonrpc = \"2.0\",  method = \"$/cancelRequest\",  params = {    id = 2  }}\r\n[DEBUG][2024-06-02 00:50:11] ...m/lsp/client.lua:678\t\"LSP[gopls]\"\t\"client.request\"\t1\t\"textDocument/semanticTokens/full\"\t{  textDocument = {    uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\"  }}\t<function 1>\t1\r\n[DEBUG][2024-06-02 00:50:11] .../vim/lsp/rpc.lua:286\t\"rpc.send\"\t{  id = 3,  jsonrpc = \"2.0\",  method = \"textDocument/semanticTokens/full\",  params = {    textDocument = {      uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\"    }  }}\r\n[DEBUG][2024-06-02 00:50:11] .../vim/lsp/rpc.lua:408\t\"rpc.receive\"\t{  error = {    code = 0,    message = \"semantictokens are disabled\"  },  id = 3,  jsonrpc = \"2.0\"}\r\n```\r\n\r\nThe `textDocument/didChange` is including a null terminator for some reason `\"\\tprintln()\\0\"`\r\n\r\n```\r\n{\r\n    jsonrpc = \"2.0\",\r\n    method = \"textDocument/didChange\",\r\n    params = {\r\n        contentChanges = {\r\n            {\r\n                range = {[\"end\"] = {character = 0, line = 3}, start = {character = 0, line = 3}},\r\n                rangeLength = 0,\r\n                text = \" \"\r\n            },\r\n            {\r\n                range = {[\"end\"] = {character = 1, line = 3}, start = {character = 1, line = 3}},\r\n                rangeLength = 0,\r\n                text = \" \"\r\n            },\r\n            {\r\n                range = {[\"end\"] = {character = 2, line = 3}, start = {character = 2, line = 3}},\r\n                rangeLength = 0,\r\n                text = \" \"\r\n            },\r\n            {\r\n                range = {[\"end\"] = {character = 3, line = 3}, start = {character = 3, line = 3}},\r\n                rangeLength = 0,\r\n                text = \" \"\r\n            },\r\n            {\r\n                range = {[\"end\"] = {character = 4, line = 3}, start = {character = 4, line = 3}},\r\n                rangeLength = 0,\r\n                text = \" \"\r\n            },\r\n            {\r\n                range = {[\"end\"] = {character = 5, line = 3}, start = {character = 5, line = 3}},\r\n                rangeLength = 0,\r\n                text = \" \"\r\n            },\r\n            {\r\n                range = {[\"end\"] = {character = 6, line = 3}, start = {character = 6, line = 3}},\r\n                rangeLength = 0,\r\n                text = \" \"\r\n            },\r\n            {\r\n                range = {[\"end\"] = {character = 7, line = 3}, start = {character = 7, line = 3}},\r\n                rangeLength = 0,\r\n                text = \" \"\r\n            },\r\n            {\r\n                range = {[\"end\"] = {character = 11, line = 3}, start = {character = 0, line = 3}},\r\n                rangeLength = 11,\r\n                text = \"\\tprintln()\\0\"\r\n            }\r\n        },\r\n        textDocument = {uri = \"file:///home/icholy/src/github.com/icholy/nvim-bug-8/main.go\", version = 12}\r\n    }\r\n}\r\n```",
            "created_at": "2024-06-02T05:00:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/29119#issuecomment-2143698068",
            "id": 2143698068,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29119",
            "node_id": "IC_kwDOAPphoM5_xjyU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143698068/reactions"
            },
            "updated_at": "2024-06-02T05:00:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143698068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The `on_lines` ranges are correct, it's `nvim_buf_lines` is returning bad data in the `on_lines` callback (putting it in a `vim.schedule` works correctly):\r\n\r\n**init.lua**\r\n``` lua\r\nvim.o.foldmethod = \"indent\"\r\nvim.o.softtabstop = -1\r\n\r\nvim.api.nvim_create_autocmd(\"BufEnter\", {\r\n    callback = function()\r\n        vim.api.nvim_buf_attach(0, false, {\r\n            on_lines = function (_, bufnr, _, firstline, _, new_lastline)\r\n                local lines = vim.api.nvim_buf_get_lines(bufnr, firstline, new_lastline, true) \r\n                vim.print(lines)\r\n            end\r\n        })\r\n    end\r\n})\r\n```\r\n\r\n**test.txt**\r\n``` plain\r\na\r\nb\r\n```\r\n\r\n**Steps:**\r\n* `nvim --clean -u init.lua test.txt`\r\n* `i<TAB>`\r\n* `:messages`\r\n\r\n**Output:**\r\n```\r\n{ \" a\" }\r\n{ \"  a\" }\r\n{ \"   a\" }\r\n{ \"    a\" }\r\n{ \"     a\" }\r\n{ \"      a\" }\r\n{ \"       a\" }\r\n{ \"        a\" }\r\n{ \"\\ta\\0     a\" }\r\n```",
            "created_at": "2024-06-02T05:42:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/29119#issuecomment-2143708589",
            "id": 2143708589,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29119",
            "node_id": "IC_kwDOAPphoM5_xmWt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143708589/reactions"
            },
            "updated_at": "2024-06-02T05:44:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143708589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The `ml_get_buf_len` function is returning the wrong value https://github.com/neovim/neovim/blob/05435a915a8446a8c2d824551fbea2dc1d7b5e98/src/nvim/api/buffer.c#L1426\r\n\r\nThe `bufstr` is `\\ta` but the `bufstrlen` is 3 which (incorrectly) includes the null terminator. The incorrect `buf->b_ml.ml_line_len` value is being set here: https://github.com/neovim/neovim/blob/05435a915a8446a8c2d824551fbea2dc1d7b5e98/src/nvim/memline.c#L1941\r\n\r\n```\r\nHardware watchpoint 2: -location buf->b_ml.ml_line_len\r\n\r\nOld value = 4\r\nNew value = 2\r\n0x0000560d9197021a in ml_get_buf_impl (buf=0x560d931046b0, lnum=1, will_change=false) at /home/icholy/src/github.com/neovim/neovim/src/nvim/memline.c:1941\r\n1941        buf->b_ml.ml_line_len = (colnr_T)(end - start);\r\n(gdb) bt\r\n#0  0x0000560d9197021a in ml_get_buf_impl (buf=0x560d931046b0, lnum=1, will_change=false) at /home/icholy/src/github.com/neovim/neovim/src/nvim/memline.c:1941\r\n#1  0x0000560d9196feb3 in ml_get_buf (buf=0x560d931046b0, lnum=1) at /home/icholy/src/github.com/neovim/neovim/src/nvim/memline.c:1820\r\n#2  0x0000560d919e3326 in plines_win_nofold (wp=0x560d931019d0, lnum=1) at /home/icholy/src/github.com/neovim/neovim/src/nvim/plines.c:768\r\n#3  0x0000560d918d07cc in checkSmall (wp=0x560d931019d0, fp=0x560d931a3790, lnum_off=0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/fold.c:1550\r\n#4  0x0000560d918d072a in check_closed (wp=0x560d931019d0, fp=0x560d931a3790, use_levelp=0x7ffeb379af1e, level=0, maybe_smallp=0x7ffeb379af1d, lnum_off=0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/fold.c:1524\r\n#5  0x0000560d918cdc43 in hasFoldingWin (win=0x560d931019d0, lnum=1, firstp=0x7ffeb379af74, lastp=0x0, cache=false, infop=0x0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/fold.c:226\r\n#6  0x0000560d917e0a91 in changed_common (buf=0x560d931046b0, lnum=1, col=0, lnume=2, xtra=0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/change.c:361\r\n#7  0x0000560d917e0dce in changed_bytes (lnum=1, col=0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/change.c:435\r\n#8  0x0000560d917e0f23 in inserted_bytes (lnum=1, start_col=0, old_col=2, new_col=1) at /home/icholy/src/github.com/neovim/neovim/src/nvim/change.c:471\r\n#9  0x0000560d918254f0 in ins_tab () at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:4433\r\n#10 0x0000560d9181d7da in insert_handle_key (s=0x7ffeb379b490) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:1036\r\n#11 0x0000560d9181cc59 in insert_execute (state=0x7ffeb379b490, key=9) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:697\r\n#12 0x0000560d91a78e8e in state_enter (s=0x7ffeb379b490) at /home/icholy/src/github.com/neovim/neovim/src/nvim/state.c:101\r\n#13 0x0000560d9181c153 in insert_enter (s=0x7ffeb379b490) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:346\r\n#14 0x0000560d9181de28 in edit (cmdchar=105, startln=false, count=1) at /home/icholy/src/github.com/neovim/neovim/src/nvim/edit.c:1296\r\n#15 0x0000560d919a2bbe in invoke_edit (cap=0x7ffeb379b680, repl=0, cmd=105, startln=0) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:6258\r\n#16 0x0000560d919a2b12 in nv_edit (cap=0x7ffeb379b680) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:6230\r\n#17 0x0000560d919970eb in normal_execute (state=0x7ffeb379b610, key=105) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:1230\r\n#18 0x0000560d91a78e8e in state_enter (s=0x7ffeb379b610) at /home/icholy/src/github.com/neovim/neovim/src/nvim/state.c:101\r\n#19 0x0000560d91995317 in normal_enter (cmdwin=false, noexmode=false) at /home/icholy/src/github.com/neovim/neovim/src/nvim/normal.c:519\r\n#20 0x0000560d9193b2db in main (argc=6, argv=0x7ffeb379b9e8) at /home/icholy/src/github.com/neovim/neovim/src/nvim/main.c:665\r\n```\r\n\r\nIt's being updated by the folding code. This checks out because `foldmethod=indent` is required to trigger this bug.",
            "created_at": "2024-06-02T06:28:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/29119#issuecomment-2143718396",
            "id": 2143718396,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29119",
            "node_id": "IC_kwDOAPphoM5_xov8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143718396/reactions"
            },
            "updated_at": "2024-06-02T06:29:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143718396",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
                "events_url": "https://api.github.com/users/icholy/events{/privacy}",
                "followers_url": "https://api.github.com/users/icholy/followers",
                "following_url": "https://api.github.com/users/icholy/following{/other_user}",
                "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/icholy",
                "id": 943597,
                "login": "icholy",
                "node_id": "MDQ6VXNlcjk0MzU5Nw==",
                "organizations_url": "https://api.github.com/users/icholy/orgs",
                "received_events_url": "https://api.github.com/users/icholy/received_events",
                "repos_url": "https://api.github.com/users/icholy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/icholy"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This change seems to fix the problem:\r\n```diff\r\ndiff --git a/src/nvim/edit.c b/src/nvim/edit.c\r\nindex 595b4da58..05ad0368f 100644\r\n--- a/src/nvim/edit.c\r\n+++ b/src/nvim/edit.c\r\n@@ -4430,6 +4430,7 @@ static bool ins_tab(void)\r\n         }\r\n         if (!(State & VREPLACE_FLAG)) {\r\n           curbuf->b_ml.ml_line_len -= i;\r\n+          curbuf->b_ml.ml_flags |= ML_LINE_DIRTY;\r\n           inserted_bytes(fpos.lnum, change_col,\r\n                          cursor->col - change_col, fpos.col - change_col);\r\n         }\r\n```",
            "created_at": "2024-06-02T06:53:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/29119#issuecomment-2143723715",
            "id": 2143723715,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29119",
            "node_id": "IC_kwDOAPphoM5_xqDD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143723715/reactions"
            },
            "updated_at": "2024-06-02T06:53:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2143723715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29119/comments",
    "created_at": "2024-05-31T21:45:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29119/events",
    "html_url": "https://github.com/neovim/neovim/issues/29119",
    "id": 2328628428,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 5826991063,
            "name": "insert-mode",
            "node_id": "LA_kwDOAPphoM8AAAABW1DT1w",
            "url": "https://api.github.com/repos/neovim/neovim/labels/insert-mode"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29119/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 37,
        "created_at": "2024-05-14T14:02:12Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/42",
        "id": 11051793,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/42/labels",
        "node_id": "MI_kwDOAPphoM4AqKMR",
        "number": 42,
        "open_issues": 5,
        "state": "open",
        "title": "0.10.1",
        "updated_at": "2024-06-03T00:15:21Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/42"
    },
    "node_id": "I_kwDOAPphoM6KzAzM",
    "number": 29119,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29119/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29119/timeline",
    "title": "LSP de-sync when using softtabstop=-1 with foldmethod=indent",
    "updated_at": "2024-06-02T07:37:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29119",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/943597?v=4",
        "events_url": "https://api.github.com/users/icholy/events{/privacy}",
        "followers_url": "https://api.github.com/users/icholy/followers",
        "following_url": "https://api.github.com/users/icholy/following{/other_user}",
        "gists_url": "https://api.github.com/users/icholy/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/icholy",
        "id": 943597,
        "login": "icholy",
        "node_id": "MDQ6VXNlcjk0MzU5Nw==",
        "organizations_url": "https://api.github.com/users/icholy/orgs",
        "received_events_url": "https://api.github.com/users/icholy/received_events",
        "repos_url": "https://api.github.com/users/icholy/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/icholy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/icholy/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/icholy"
    }
}