{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "I think `:UpdateRemotePlugins` should be deprecated.  The command is esoteric and generates issues that have little to do with runtime scripts and more to do with the user's environment.\n\nThis command literally generates vimscript that doesn't require special parsing and should be a responsibility left to the plugin developer.\n## Proposal\n- `:UpdateRemotePlugins` is turned into a `NOOP` (so that user configs aren't broken)\n  - Optionally generate a manifest for plugins that _aren't_ manually registered.\n  - Print a deprecation message after a couple releases.\n- A helper function (e.g. `remote#host#pluginSpec()`) is available to devs to generate a spec string for use in the `remote#host#RegisterPlugin()` function.\n  - ...or a separate SDK plugin that helps with generating the spec and provides simple debugging.\n  - Optionally make this something that can be done from the command line to write a bootstrap script (e.g. `plugin/manifest.vim`).\n- `remote#host#RegisterPlugin()` should be called by the plugin when it's loaded.\n  - Changes to a plugin's API spec will always be up to date when the user updates the plugin.\n\nPlugins manually registering themselves will effectively be backward compatible with older versions of nvim, [provided registration happens before a host starts](https://github.com/neovim/neovim/blob/714ec09c6d83295ef70becbbaf1c620761cbdac6/runtime/autoload/remote/host.vim#L86-L90).  Plugins may have to wrap it in a `try...endtry` [due to existing manifest files](https://github.com/neovim/neovim/blob/714ec09c6d83295ef70becbbaf1c620761cbdac6/runtime/autoload/remote/host.vim#L80-L84), but I think this is a small price to pay.\n## Pros\n- Users will have one less step for installing rplugins.\n- Problems about an rplugin not working will most likely be due to the user not having a host program.  This can be dealt with `:CheckHealth`.\n- Problems with registration are more likely to be reported by plugin devs who will have more specific information beyond \"it doesn't work.\"\n- The dev's environment will (or should) be already configured to generate the spec without fail.\n- Devs will have a more reasonable issue scope:\n  - Is the host program installed?\n  - Is the host client up to date?\n  - Is the plugin compatible with the host/client?\n  - Mainly: \"Did you run `:CheckHealth`?\" without the followup questions.\n## Cons\n- ???\n",
    "closed_at": "2024-03-20T15:33:53Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This has been discussed before. The question boils more or less down to: when should nvim asks a host and see if the registered commands have changed? Should nvim monitor the `rplugin/langX` directory and start up the host when a changed file is newer than the previous timestamp for that host?\n",
            "created_at": "2016-10-25T16:50:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-256092965",
            "id": 256092965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA5Mjk2NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256092965/reactions"
            },
            "updated_at": "2016-10-25T16:50:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256092965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Plugins may have to wrap it in a try...endtry due to existing manifest files, but I think this is a small price to pay.\n\nThis is an annoying bug (I would call it a bug) with `:UpdateRemotePlugins` which in principle could be fixed without changing much else. I think the reason is because the plan is to get rid of UpdateRemotePlugins eventually, otherwise this would probably have been fixed much earlier.\n",
            "created_at": "2016-10-25T16:54:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-256094251",
            "id": 256094251,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA5NDI1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256094251/reactions"
            },
            "updated_at": "2016-10-25T16:54:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256094251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "ref #4438 #4439\n",
            "created_at": "2016-10-25T17:00:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-256095703",
            "id": 256095703,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjA5NTcwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256095703/reactions"
            },
            "updated_at": "2016-10-25T17:00:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256095703",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The question boils more or less down to: when should nvim asks a host and see if the registered commands have changed?\n\nThe moment a plugin developer decides to refresh _the plugin's_ manifest file.  nvim shouldn't do anything else.  If errors are generated because of an out of date API spec, that's the plugin dev's fault without question.  As an example, @zchee generates the spec in [nvim-go](https://github.com/zchee/nvim-go/blob/aa6aaa92630dfff20a6da48ddf6709818a3f4a49/plugin/nvim-go.vim#L105-L140) and as a result, `:UpdateRemotePlugins` isn't needed.  He used [go-client](https://github.com/neovim/go-client/blob/71e25ff7b5d1244a40237662a359bd9c5f24d72a/nvim/plugin/plugin.go#L430-L473) to generate it.\n\n> This is an annoying bug (I would call it a bug) with :UpdateRemotePlugins which in principle could be fixed without changing much else.\n\nI agree.  I was only suggesting it because I'd like to see this be a backward compatible change.  Though, it might be cleaner to use a version check.\n",
            "created_at": "2016-10-25T19:19:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-256147884",
            "id": 256147884,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE0Nzg4NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256147884/reactions"
            },
            "updated_at": "2016-10-25T19:19:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256147884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Moving the responsibility from the end user to the plugin author would be a step forward and a step backward. Seems better to go directly to a fully automated solution. At least, intervention should only be needed in edge cases, not in normal usage _nor_ in normal development.\n\nWe could already update the spec for one host more or less cost-free when the host is started anyway, when the user starts an existing plugin using an existing command, but this won't cover the situation when the host would be started by a new command, which includes the situation of the first plugin added... This would be simpler with a machine-readable and modifiable format for the spec. Best is probably shada as @justinmk suggested the linked issues, there might be logic we could reuse for instance to merge changes according to timestamps, i e if instance 1 updated the specs for host A and instance 2  updated the specs for host B.\n",
            "created_at": "2016-10-25T19:33:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-256151816",
            "id": 256151816,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE1MTgxNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256151816/reactions"
            },
            "updated_at": "2016-10-25T19:33:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256151816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can't see the disadvantage of the spec being managed by the developer.  A plugin's spec might change after updating the plugin.  After plugins are updated, the most sane thing to do is restart nvim.  I'm not sure how being able to update the spec at runtime will change this unless it's a 100% pure remote plugin.  Even if it was, I would still restart either out of habit or because non-remote plugins were updated.\n\nIn the case for remote plugins that have no vimscript dependencies, I think it'd be great if they were able to auto-restart (and even auto-update) without user intervention.  However, what I mentioned in the proposal above could be achieved right now with minor modifications to the runtime scripts.  It shouldn't block future development into making this fully automated.  It also removes the user from a crucial step and shifts the burden to plugin developers who already have the burden of writing/maintaining the plugin in the first place.\n\nIf the time comes that the specs are auto-updated, manual plugin registration could be a noop in the case of irregularly maintained plugins.\n",
            "created_at": "2016-10-26T00:08:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-256214512",
            "id": 256214512,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjIxNDUxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256214512/reactions"
            },
            "updated_at": "2016-10-26T00:08:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256214512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The problem is that you suggest fixing the part of the system that is not broken. The rplugin host _already_ collects the (up-to-date) specs from the plugin sources every time the host starts, it must do this to be able to respond to rpc requests. Requiring any intervention here for the plugin author would purely be a step backwards.  The problem is that nvim just ignores this fresh information and insists on using an old cached copy that the user (sometimes the plugin manager) must update manually. It would likewise be a not too big change to update the manifest file when we have this opportunity to do so (when the host happen to be be started anyway), and also then using these fresh specs, this would greatly reduce the need for running `:UpdateRemotePlugins` if not completely eliminating it.\n\nI'm not suggesting nvim should support updating running plugins at runtime, just basic things like this should work:\n1. nvim is started (but the host for plugin X is not loaded)\n2. plugin X sources are changed\n3. the user invokes plugin X in the same instance\n\nThis should work regardless if the relevant host was started in another instance or not, in the meanwhile. If the plugin already was started, the end user already expects to need to restart nvim.\n",
            "created_at": "2016-10-26T06:55:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-256264563",
            "id": 256264563,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjI2NDU2Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256264563/reactions"
            },
            "updated_at": "2016-10-26T09:39:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/256264563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have tried [nvim-ascript](https://github.com/roxma/nvim-ascript). But as mentioned in the warnings that doesn't look like a neat implementation.\r\n\r\nMy current attempt is [nvim-yarp](https://github.com/roxma/nvim-yarp). This looks more straitforward to me.\r\n\r\nAnd if things goes well, it may be able to be run on vim8 after https://github.com/roxma/vim-hug-neovim-rpc/issues/4 is finished.\r\n",
            "created_at": "2017-10-13T14:48:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-336474810",
            "id": 336474810,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQ3NDgxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/336474810/reactions"
            },
            "updated_at": "2017-10-13T14:48:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/336474810",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4538941?v=4",
                "events_url": "https://api.github.com/users/roxma/events{/privacy}",
                "followers_url": "https://api.github.com/users/roxma/followers",
                "following_url": "https://api.github.com/users/roxma/following{/other_user}",
                "gists_url": "https://api.github.com/users/roxma/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roxma",
                "id": 4538941,
                "login": "roxma",
                "node_id": "MDQ6VXNlcjQ1Mzg5NDE=",
                "organizations_url": "https://api.github.com/users/roxma/orgs",
                "received_events_url": "https://api.github.com/users/roxma/received_events",
                "repos_url": "https://api.github.com/users/roxma/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roxma/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roxma/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roxma"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Alternative proposal/design:\r\n\r\n- https://github.com/neovim/neovim/issues/27949",
            "created_at": "2024-03-20T15:33:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/5532#issuecomment-2009861056",
            "id": 2009861056,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5532",
            "node_id": "IC_kwDOAPphoM53zAvA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009861056/reactions"
            },
            "updated_at": "2024-03-20T15:33:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2009861056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/5532/comments",
    "created_at": "2016-10-25T16:33:14Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/5532/events",
    "html_url": "https://github.com/neovim/neovim/issues/5532",
    "id": 185169294,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": null,
            "id": 242522707,
            "name": "rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/rpc"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 652698463,
            "name": "remote-plugin",
            "node_id": "MDU6TGFiZWw2NTI2OTg0NjM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/remote-plugin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/5532/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 1,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "",
        "due_on": "2024-10-31T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 19,
        "state": "open",
        "title": "0.11",
        "updated_at": "2024-03-22T08:09:09Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "MDU6SXNzdWUxODUxNjkyOTQ=",
    "number": 5532,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 19,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 19,
        "url": "https://api.github.com/repos/neovim/neovim/issues/5532/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/5532/timeline",
    "title": "remote plugins: deprecate :UpdateRemotePlugins",
    "updated_at": "2024-03-20T15:33:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/5532",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
        "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
        "followers_url": "https://api.github.com/users/tweekmonster/followers",
        "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
        "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tweekmonster",
        "id": 111942,
        "login": "tweekmonster",
        "node_id": "MDQ6VXNlcjExMTk0Mg==",
        "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
        "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
        "repos_url": "https://api.github.com/users/tweekmonster/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tweekmonster"
    }
}