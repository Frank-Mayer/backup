{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nStarted putting together a simple doc PR, things got more complicated.\n\nInitially:\n```diff\ndiff --git a/src/nvim/vvars.lua b/src/nvim/vvars.lua\n--- a/src/nvim/vvars.lua\n+++ b/src/nvim/vvars.lua\n@@ -173,2 +173,3 @@\n         chan             |channel-id|\n+        info             As returned by |nvim_get_chan_info()|.\n         cmdlevel         Level of cmdline.\n```\n\nThen saw some related cleanup in autocmd.txt, for `ChanInfo` and `ChanOpen`\n(but perhaps it's only a matter of style)\n\nA key of `chan_info` instead of `info` seems to make more sense. (breaking change)\n\nIn `autocmd.txt` removing the following for `ChanInfo` and `ChanOpen` is more consistent in docs.\n```\n        See |nvim_get_chan_info()| for the format of\n        the info Dictionary.\n```\nand then could (or not) mention value format with the key like\n```\n\t\t\t\tSets these |v:event| keys:\n                                    chan_info   as from |nvim_get_chan_info()|\n```\n\n-----\n\n_Back to the primary issue_\n\nThe particular: frequently there is no `ChanInfo` event.\nNot sure if it's a doc/code/spec/cockpit issue.\n\nIn develop.txt there's (twice)\n```\n- Call |nvim_set_client_info()| after connecting, so users and plugins can\n  detect the UI by handling the |ChanInfo| event. This avoids the need for ...\n```\nBut with `nvim-tui` the `ChanInfo` event is intermittent. With both `neovide`\nand `goneovim` the event never happens.\n\n\nAt https://neovim.io/doc/user/starting.html#--embed there's\n```\n--embed ... Waits for the ... nvim_ui_attach() before sourcing startup files\n... The client can do other requests before nvim_ui_attach (e.g. nvim_get_api_info\n```\n\n\n`ChanOpen` event is never seen. Might be my specific usage/environment.\n\nIn `autocmd.txt`\n```\nUIEnter\n    After a UI connects via |nvim_ui_attach()|,\n    or after builtin TUI is started.\n```\n```\nChanInfo\n    State of channel changed, for instance the\n    client of a RPC channel described itself.\n```\n\n\n### Steps to reproduce\n\nObservations using the script below\n\nWith `nvim-tui` either\n1. `UIEnter` without a later `ChanInfo`\n   In `UIEnter` handler `nvim_get_chan_info()` `client` value is populated.\n2. `UIEnter` followed by `ChanInfo`\n   In `UIEnter` handler `nvim_get_chan_info()` `client` value is empty dict.\n   In `ChanInfo` `vim.v.event.info` is populated as expected.\n\nWith `neovide` never see `ChanInfo` \n1. In `UIEnter` handler `nvim_get_chan_info()` value is populated.\n\n```lua\nvim.api.nvim_create_autocmd(\"ChanInfo\", {\n    callback = function(ev)\n        vim.print(string.format(\"ChanInfo: ev: %s\", vim.inspect(ev, {newline=\"\"})))\n        vim.print(string.format(\"ChanInfo: v:event info: %s\", vim.inspect(vim.v.event.info)))\n    end\n})\n\nvim.api.nvim_create_autocmd(\"UIEnter\", {\n    callback = function(ev)\n        vim.print(string.format(\"UIEnter: ev: %s\", vim.inspect(ev, {newline=\"\"})))\n        vim.print(string.format(\"UIEnter: v:event: %s\", vim.inspect(vim.v.event, {newline=\"\"})))\n        vim.print(string.format(\"UIEnter: chan info: %s\", vim.inspect(\n            vim.api.nvim_get_chan_info(vim.v.event.chan), {newline=\"\"})))\n    end\n})\n```\n\n\n### Expected behavior\n\nMore accurate descriptions; maybe in conjunction with code changes\n\n(@bfredl follow up on #31057)\n\n### Nvim version (nvim -v)\n\nhttps://github.com/neovim/neovim/commit/0da4d89558a05fb86186253e778510cfd859caea\n\n### Vim (not Nvim) behaves the same?\n\nNA\n\n### Operating system/version\n\nubuntu\n\n### Terminal name/version\n\ngnome-terminal\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nmake install",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk @zeertzjq This issue is fundamentally about `ChanInfo` docs. The first part of the OP is about a documentation cleanup PR for ChanInfo that could go so far as to include a breaking change (rename v:event key to `chan_info`  from `info` (too ambiguous)). I can do that PR with some guidance. The 2nd half of OP is about how `ChanInfo` behavior is described; probably more for future reference.",
            "created_at": "2024-11-04T14:45:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/31069#issuecomment-2454905258",
            "id": 2454905258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31069",
            "node_id": "IC_kwDOAPphoM6SUuGq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454905258/reactions"
            },
            "updated_at": "2024-11-04T14:45:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454905258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31069/comments",
    "created_at": "2024-11-04T07:06:46Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31069/events",
    "html_url": "https://github.com/neovim/neovim/issues/31069",
    "id": 2632014213,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 103834742,
            "name": "gui",
            "node_id": "MDU6TGFiZWwxMDM4MzQ3NDI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/gui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim startup sequence (`:h startup`)",
            "id": 870629450,
            "name": "startup",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/startup"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31069/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6c4VmF",
    "number": 31069,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31069/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31069/timeline",
    "title": "startup autocmd event documentation is inconsistent with how it behaves",
    "updated_at": "2024-11-04T14:45:40Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31069",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
        "events_url": "https://api.github.com/users/errael/events{/privacy}",
        "followers_url": "https://api.github.com/users/errael/followers",
        "following_url": "https://api.github.com/users/errael/following{/other_user}",
        "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/errael",
        "id": 20450427,
        "login": "errael",
        "node_id": "MDQ6VXNlcjIwNDUwNDI3",
        "organizations_url": "https://api.github.com/users/errael/orgs",
        "received_events_url": "https://api.github.com/users/errael/received_events",
        "repos_url": "https://api.github.com/users/errael/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/errael",
        "user_view_type": "public"
    }
}