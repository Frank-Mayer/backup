{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Creating this to track all the incompatibilities across vim and neovim lua compatibility based on the comment by @tjdevries at https://github.com/neovim/neovim/pull/12507#issuecomment-647891334.\r\n\r\nThis is the list I think we should try to maintain 100% compatibility here.\r\n\r\nLast table updated: September 17, 2022\r\n\r\n| Feature| Neovim | Vim | Notes |\r\n|---|---|---|---|\r\n| Add support for `require('plugin')` | Supported | Supported since [8.2.0858](https://github.com/vim/vim/commit/788fbb47079e6df4d4815d27273faf8390395029) | Neovim PR ported to vim |\r\n|`vim.call`| Supported since v0.5 | Supported since [8.2.0775](https://github.com/romainl/vim/commit/793251c24ec998f8addd81d041f14ec57d5e7f6a) | Neovim PR ported to Vim |\r\n|`vim.fn.*`| Supported since v0.5 | Supported since [8.2.0775](https://github.com/romainl/vim/commit/793251c24ec998f8addd81d041f14ec57d5e7f6a) | Neovim PR ported to Vim |\r\n| [Allow lua closures to be passed to vim script](https://github.com/vim/vim/pull/6246) | Supported in https://github.com/neovim/neovim/pull/12507 | Supported since [8.2.1054](https://github.com/vim/vim/commit/801ab069341c8652680d63c174530fd4feb2911e) | Vim PR ported to Neovim |\r\n| `vim.g.*` | Supported since 0.5 | Supported since [8.2.3288](https://github.com/vim/vim/commit/9dc4bef897a37a610a28d69cee6d30749db61296) | Neovim PR ported to Vim |\r\n| Allow vim functions to be passed to lua via luaeval | Not supported | Normal func ref supported since <8.0. [Lambdas supported since v8.2.2578](https://github.com/vim/vim/pull/7937)  |  |\r\n| `vim.eval` | Not supported | Supported < 8.0  | Workaround for neovim: use `vim.api.nvim_eval` instead of `vim.eval` |\r\n| `vim.command` | Not supported | Supported < 8.0  | Workaround for neovim: use `vim.api.nvim_command` instead of `vim.command` |\r\n| array index should start with 1 | prints `1` |  ~~prints `2`~~ prints `1` | ~~`let s:array = [1,2,3]  lua print(vim.api.nvim_eval('s:array')[1])`  This causes off by 1 bugs a lot in vim and neovim plugins.~~ Starting with [patch-8.2.1066](https://github.com/vim/vim/commit/bd84617d1a6766efd59c94aabebb044bef805b99). vim now behaves the same as lua and neovim. |\r\n| `vim.list({})` | Not supported | Supported < 8.0 | Neovim throws error |\r\n| `vim.dict({})` | Not supported | Supported < 8.0 | Neovim throws error |\r\n| `vim.funcref({})` | Supported in https://github.com/neovim/neovim/pull/12507 | Supported < 8.0 | Neovim throws error |\r\n| `vim.blob({})` | Not supported | Supported < 8.0 | Neovim throws error |\r\n| `type(vim.list({}))` | Returns table | Returns userdata | `let s:array = [1,2,3] lua print(type(vim.eval('s:array')))`\r\n| `vim.type()` | Throws error | Returns list | `let s:array = [1,2,3] lua print(vim.type(vim.eval('s:array')))`\r\n| `table.insert` and `table.remove` for vim arrays| [Partially supported](https://github.com/neovim/neovim/issues/12537#issuecomment-650650335) | Supported since [8.2.1081](https://github.com/vim/vim/commit/a1f9f8666ed3a462eb8a518e78418c57dc41bbd4) requires lua >= 5.3 |\r\n| `autocmd` apis | In PR https://github.com/neovim/neovim/pull/12378 | Not Supported | https://github.com/vim/vim/issues/6339 |\r\n\r\nNice to have incompatibilities that are not required but good to have in both. While I would love to have this in vim not sure if Bram will merge these changes so explicitly adding it as optional since almost all of them have a workaround.\r\n\r\n| Feature| Neovim | Vim| Notes |\r\n|---|---|---|---|\r\n| `v:lua` | Supported since v0.5 | Not supported | |\r\n| `init.lua` support | Supported | Not Supported | workaround: call `luafile init.lua` from vimrc |\r\n| `vim.wait` | Supported since 0.5 | Not supported | |\r\n| `vim.regex` | Supported since 0.5 | Not supported | |\r\n| `vim.stricmp` | Supported since 0.5 | Not supported | |\r\n| `vim.str_utfindex` | Supported since 0.5 | Not supported | useful for LSP |\r\n| `vim.str_byteindex` | Supported since 0.5 | Not supported | useful for LSP |\r\n| `vim.schedule` | Supported since 0.5 | Not supported | not applicable to vim since this is for libuv |\r\n| `vim.defer_fn` | Supported since 0.5 | Not supported | not applicable to vim since this is for libuv |\r\n| `vim.type_idx` | Supported since 0.5 | Not supported |  |\r\n| `vim.val_idx` | Supported since 0.5 | Not supported |  |\r\n| `vim.types` | Supported since 0.5 | Not supported |  |\r\n| `vim.window` | Not supported | Supported |  |\r\n| `vim.buffer` | Not supported | Supported |  |\r\n| utils functions | Supported since 0.5 | Not supported | Since lua is doesn't contain lot of basic apis, neovim ships with these so users don't need to write their own. |\r\n\r\n\r\nIt would really be good if neovim PRs are tagged with `lua`. Was a bit difficult to go through and I'm most likely missing lot more apis. Feel free to add more items to the table so we can use this as a way to track incompatibilities. \r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> `let s:array = [1,2,3] lua print(vim.api.nvim_eval('s:array')[1])` (this causes off by 1 bugs a lot in vim and neovim plugins)\r\n\r\nLua indices start at 1, so why should this be expected to print 2?",
            "created_at": "2020-06-26T02:43:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-649920577",
            "id": 649920577,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTkyMDU3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649920577/reactions"
            },
            "updated_at": "2020-06-26T02:43:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649920577",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "NONE",
            "body": "That is because vimscript array to lua array gets translated to userdata and not tables so and internally uses vimscript types. https://github.com/vim/vim/blob/fc838d6cb0f22c77a6ee2befd034b593e1c5ea06/src/if_lua.c#L869-L896\r\n\r\nlua to vim types seems to completely ignore tables in vim8. \r\n\r\nI will file an issue on vim. Since this has been there since ever I'm not sure if they will be open to change and neovim also may not be open to this change. The workaround to be usually has been to have offset.\r\n\r\n```vim\r\nlocal offset = if vim.fn.has('nvim') == 1 then 1 else 0 end\r\nlocal value = arr[0 + offset]\r\n```\r\n",
            "created_at": "2020-06-26T03:06:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-649929418",
            "id": 649929418,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTkyOTQxOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649929418/reactions"
            },
            "updated_at": "2020-06-26T03:06:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649929418",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "NONE",
            "body": "I filed an issue on this at https://github.com/vim/vim/issues/6342",
            "created_at": "2020-06-26T03:32:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-649938723",
            "id": 649938723,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTkzODcyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649938723/reactions"
            },
            "updated_at": "2020-06-26T03:32:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/649938723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "NONE",
            "body": " vim list index in lua are now fixed such that they align with lua and neovim arrays so it starts with `1` instead of `0`. https://github.com/vim/vim/commit/bd84617d1a6766efd59c94aabebb044bef805b99. Updated the table to reflect this change.",
            "created_at": "2020-06-27T17:33:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-650589643",
            "id": 650589643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDU4OTY0Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650589643/reactions"
            },
            "updated_at": "2020-06-27T17:33:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650589643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "NONE",
            "body": "Another bug found in neovim lua interop. Seems like changes made in lua for a vim object doesn't update the vim object.\r\n\r\n```vim\r\nlet s:array = [1,2]\r\nlua <<EOF\r\n    local a = vim.api.nvim_eval('s:array')\r\n    print(vim.inspect(a))\r\n    table.insert(a, 3)\r\n    print(vim.inspect(a))\r\nEOF\r\n\r\nechom json_encode(s:array)\r\n```\r\n\r\nactual:\r\n```\r\n{1,2}\r\n{1,2,3}\r\n[1,2]\r\n```\r\nexpected:\r\n```\r\n{1,2}\r\n{1,2,3}\r\n[1,2,3]\r\n```\r\n\r\nHow does neovim translate lua tables to vim dict/arrays? vim has `vim.dict({})` and `vim.list({})`.\r\n\r\nvim doesn't even support `table.insert` apis for `vim.list`. I have it working locally will send a PR soon for vim.",
            "created_at": "2020-06-27T23:47:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-650650335",
            "id": 650650335,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDY1MDMzNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650650335/reactions"
            },
            "updated_at": "2020-06-27T23:47:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650650335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just wanted to comment to let you know I've seen this and been thinking about it. Thanks for the hard work. I will try and tag you in each of the PRs I do related to these and to add the `lua` tag to them as well. Some should be very easy and make life easier for vim & neovim compat. Some might be difficult / irreconcilable. I will try and write up some info about them as we go.",
            "created_at": "2020-06-28T21:08:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-650822003",
            "id": 650822003,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDgyMjAwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650822003/reactions"
            },
            "updated_at": "2020-06-28T21:08:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650822003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "NONE",
            "body": "Updated the table:\r\n\r\n* `table.insert` and `table.remove` is now supported in vim [8.2.1081](https://github.com/vim/vim/commit/a1f9f8666ed3a462eb8a518e78418c57dc41bbd4). requires lua >= 5.3. More about the limitations at https://github.com/vim/vim/pull/6353.\r\n* moved `autocmd` to the first table I would like to have in vim. Looking at the code this one might take a bit more time. Not familiar with the code path. \r\n\r\n@tjdevries no worries. Take your time to have a look at the incompatibilities. Feel free to include me in the PRs. We could also have some test cases ported so we can remain compatible. Currently seems like vim master now has everything we need to create plugins in lua in vim. 2 big things missing in neovim are `vim.funcref` and the ability to pass lua closures with `register_cfunc`. Here is one I found while trying to search for github for anything related with vim and lua. https://github.com/junegunn/fzf/issues/1778.\r\n",
            "created_at": "2020-06-28T21:33:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-650824759",
            "id": 650824759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDgyNDc1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650824759/reactions"
            },
            "updated_at": "2020-06-28T21:33:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650824759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, perhaps a suite of tests that we could move into some specific test file would be great. That would simplify things a lot :)",
            "created_at": "2020-06-28T21:38:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-650825338",
            "id": 650825338,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDgyNTMzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650825338/reactions"
            },
            "updated_at": "2020-06-28T21:38:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/650825338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@prabirshrestha,\r\n\r\nThat is a power of work, many thanks indeed.\r\n\r\nMy curiosity is what happens on the Vim side with Vim 9?\r\n\r\nIt was my understanding that Vim 9 would drop all Python, Ruby and Lua interfaces. Yet, your PRs to Vim in regards to Lua are being integrated. I confuse easily :) Hopefully all these Lua changes (in both Neovim and Vim) have long-term benefit for plugin authors (aka Vim Lua enhancement stick around).",
            "created_at": "2020-06-29T08:04:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-651000334",
            "id": 651000334,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTAwMDMzNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/651000334/reactions"
            },
            "updated_at": "2020-06-29T08:04:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/651000334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@prabirshrestha There is also `vim.b`, `vim.w`, etc., not just `vim.g` for referencing `internal-variables`",
            "created_at": "2020-06-29T19:37:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-651318568",
            "id": 651318568,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTMxODU2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/651318568/reactions"
            },
            "updated_at": "2020-06-29T19:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/651318568",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@prabirshrestha is there any plan on vim side to make its lua api 100% compatible with neovim's lua api? To me it seems the only way vim and neovim can keep being compatible in the future, since I doubt neovim will ever expand vimscript capabilities (as vim still does). I ask because in this case even 99% compatibility wouldn't be enough, it would cause bugs in plugins that expect 100% compatibility to work, there should be some real effort to keep them on par.",
            "created_at": "2020-07-01T05:55:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-652208068",
            "id": 652208068,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjIwODA2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/652208068/reactions"
            },
            "updated_at": "2020-07-01T05:55:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/652208068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26169924?v=4",
                "events_url": "https://api.github.com/users/mg979/events{/privacy}",
                "followers_url": "https://api.github.com/users/mg979/followers",
                "following_url": "https://api.github.com/users/mg979/following{/other_user}",
                "gists_url": "https://api.github.com/users/mg979/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mg979",
                "id": 26169924,
                "login": "mg979",
                "node_id": "MDQ6VXNlcjI2MTY5OTI0",
                "organizations_url": "https://api.github.com/users/mg979/orgs",
                "received_events_url": "https://api.github.com/users/mg979/received_events",
                "repos_url": "https://api.github.com/users/mg979/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mg979/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mg979/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mg979"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What is the benefit of making Lua objects proxy actions to vim lists? Wouldn't it make sense that accessing vim objects makes a copy? I would like to see usage of this before adding a bunch of functionality for what seems like a very niche usecase. Making table.insert/etc. work with vim lists and proxying values seems odd to me. In particular, you're paying for conversion every time you do this. If you really want to update the original list, you can make a copy in lua (by referencing the value), do all of your changes, and then set the value at the end.\r\n\r\nThis seems saner to me then half supporting write magic to vim objects unless we plan to fully support it. This is because it would require a more complicated mental model to remember what is supported and what isn't rather than just assuming that working in vim and working in lua are separate modes, and access between them requires a copy. I guess we didn't make that exactly clear when we added support for `vim.g` which is the main inconsistency that I can think of. I personally forgot about accessing dicts. In the original PR, I would've made it illegal to modify a dict object entirely that is returned from a `vim.g` access, and I think that might be a good thing to do now as well.",
            "created_at": "2020-07-08T19:21:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-655707651",
            "id": 655707651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTcwNzY1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/655707651/reactions"
            },
            "updated_at": "2020-07-08T19:21:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/655707651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "author_association": "NONE",
            "body": "@prabirshrestha  For `vim.command`, don't we have `vim.cmd`?\r\n\r\nI'll echo your comments about missing `vim.funcref()`. I have Iron-E/nvim-libmodal#1 which can't be completed unless users can pass a function from Vimscript to Lua. Something else to note about this is that when using `v:lua` you can't `require()` _any_ Lua module that contains a `function` value— it will error. I don't know how well-known that is though.",
            "created_at": "2020-07-09T00:46:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-655830533",
            "id": 655830533,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTgzMDUzMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/655830533/reactions"
            },
            "updated_at": "2020-07-09T00:46:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/655830533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36409591?v=4",
                "events_url": "https://api.github.com/users/Iron-E/events{/privacy}",
                "followers_url": "https://api.github.com/users/Iron-E/followers",
                "following_url": "https://api.github.com/users/Iron-E/following{/other_user}",
                "gists_url": "https://api.github.com/users/Iron-E/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Iron-E",
                "id": 36409591,
                "login": "Iron-E",
                "node_id": "MDQ6VXNlcjM2NDA5NTkx",
                "organizations_url": "https://api.github.com/users/Iron-E/orgs",
                "received_events_url": "https://api.github.com/users/Iron-E/received_events",
                "repos_url": "https://api.github.com/users/Iron-E/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Iron-E/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Iron-E/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Iron-E"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @prabirshrestha For `vim.command`, don't we have `vim.cmd`?\r\n\r\nYeah, but we can probably just make `vim.command` alias to `vim.cmd` in nvim. It is a one-line fix / improvement.\r\n\r\n> I'll echo your comments about missing `vim.funcref()`. I have [Iron-E/nvim-libmodal#1](https://github.com/Iron-E/nvim-libmodal/issues/1) which can't be completed unless users can pass a function from Vimscript to Lua. Something else to note about this is that when using `v:lua` you can't `require()` _any_ Lua module that contains a `function` value— it will error. I don't know how well-known that is though.\r\n\r\nWill this use case be handled in #12507 ? (which will add `vim.funcref` as well). I'm hoping to merge that soon.\r\n\r\n",
            "created_at": "2020-07-09T03:05:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-655869666",
            "id": 655869666,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTg2OTY2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/655869666/reactions"
            },
            "updated_at": "2020-07-09T03:05:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/655869666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > @prabirshrestha For `vim.command`, don't we have `vim.cmd`?\r\n> \r\n> Yeah, but we can probably just make `vim.command` alias to `vim.cmd` in nvim. It is a one-line fix / improvement.\r\n\r\nOf course! I was just noting that it could be added to the chart since there were a few other workarounds noted up there too.\r\n\r\n> > I'll echo your comments about missing `vim.funcref()`. I have [Iron-E/nvim-libmodal#1](https://github.com/Iron-E/nvim-libmodal/issues/1) which can't be completed unless users can pass a function from Vimscript to Lua. Something else to note about this is that when using `v:lua` you can't `require()` _any_ Lua module that contains a `function` value— it will error. I don't know how well-known that is though.\r\n> \r\n> Will this use case be handled in #12507 ? (which will add `vim.funcref` as well). I'm hoping to merge that soon.\r\n\r\nYes! In the tests I see an example of [exactly](https://github.com/neovim/neovim/pull/12507/files#diff-02eca3e817993e37632915e52152b67dR289) what I need to be able to do. I'm unclear as to whether or not I can do this with an `s:`function, but if so that would cover [all of my cases](https://github.com/Iron-E/vim-libmodal/blob/master/examples/prompt-callback.vim).",
            "created_at": "2020-07-09T03:48:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-655881969",
            "id": 655881969,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTg4MTk2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/655881969/reactions"
            },
            "updated_at": "2020-07-09T03:49:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/655881969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36409591?v=4",
                "events_url": "https://api.github.com/users/Iron-E/events{/privacy}",
                "followers_url": "https://api.github.com/users/Iron-E/followers",
                "following_url": "https://api.github.com/users/Iron-E/following{/other_user}",
                "gists_url": "https://api.github.com/users/Iron-E/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Iron-E",
                "id": 36409591,
                "login": "Iron-E",
                "node_id": "MDQ6VXNlcjM2NDA5NTkx",
                "organizations_url": "https://api.github.com/users/Iron-E/orgs",
                "received_events_url": "https://api.github.com/users/Iron-E/received_events",
                "repos_url": "https://api.github.com/users/Iron-E/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Iron-E/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Iron-E/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Iron-E"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@prabirshrestha `vim.window` and `vim.buffer` is missing in vim table.",
            "created_at": "2020-09-30T02:51:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-701126086",
            "id": 701126086,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTEyNjA4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/701126086/reactions"
            },
            "updated_at": "2020-09-30T02:51:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/701126086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13142418?v=4",
                "events_url": "https://api.github.com/users/wsdjeg/events{/privacy}",
                "followers_url": "https://api.github.com/users/wsdjeg/followers",
                "following_url": "https://api.github.com/users/wsdjeg/following{/other_user}",
                "gists_url": "https://api.github.com/users/wsdjeg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wsdjeg",
                "id": 13142418,
                "login": "wsdjeg",
                "node_id": "MDQ6VXNlcjEzMTQyNDE4",
                "organizations_url": "https://api.github.com/users/wsdjeg/orgs",
                "received_events_url": "https://api.github.com/users/wsdjeg/received_events",
                "repos_url": "https://api.github.com/users/wsdjeg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wsdjeg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wsdjeg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wsdjeg"
            }
        },
        {
            "author_association": "NONE",
            "body": "@wsdjeg I have added it to nice to have since I personally prefer the `vim.fn.*` which is lot better since you can transfer your vimscript apis to lua without learning extra lua api. I personally think those apis should be deprecated but will let neovim folks answer it since it is currently missing in neovim.",
            "created_at": "2020-10-03T17:27:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-703136908",
            "id": 703136908,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzEzNjkwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/703136908/reactions"
            },
            "updated_at": "2020-10-03T17:27:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/703136908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have update table to reflect new api updates.\r\n\r\n@tjdevries Thanks for adding `vim.funcref`. This works great when in the lua world but not when coming from vim to lua.\r\n\r\nFor example the following code works in vim8 but fails in neovim as `cb` will be treated as `nil`.\r\n\r\n```vim\r\nlua <<EOF\r\n    function hello(a, cb)\r\n        print(a .. cb())\r\n    end\r\nEOF\r\n\r\nfunction! g:World() abort\r\n    return 'world'\r\nendfunction\r\n\r\ncall luaeval('hello(_A[1], _A[2])', ['hello', function('g:World')])\r\n```\r\n\r\nTo fix in neovim I need to use this.\r\n\r\n```vim\r\ncall luaeval('hello(_A[1], vim.fn[_A[2]])', ['hello', 'g:World'])\r\n```\r\n\r\nWhile global vars are ok, passing lambdas becomes interesting since it won't get garbage collected. \r\n\r\nSince all functions are internally a string would it be possible to auto convert it to to lua closures. Here is how vim does https://github.com/vim/vim/blob/608d78fb45077fbaf6dc880b754a1d8a54ac9999/src/if_lua.c#L568-L570 and https://github.com/vim/vim/blob/608d78fb45077fbaf6dc880b754a1d8a54ac9999/src/if_lua.c#L1280-L1367.\r\n\r\nVim doesn't seems to support lambdas.\r\n\r\n```lua\r\nlet s:world = {->'world'}\r\ncall luaeval('hello(_A[1], _A[2])', ['hello', s:world])\r\n```",
            "created_at": "2021-03-08T02:31:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-792417591",
            "id": 792417591,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjQxNzU5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/792417591/reactions"
            },
            "updated_at": "2021-03-08T02:31:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/792417591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sent a PR to vim to support passing lambdas from vimscript to lua. https://github.com/vim/vim/pull/7937",
            "created_at": "2021-03-08T05:04:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-792464786",
            "id": 792464786,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjQ2NDc4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/792464786/reactions"
            },
            "updated_at": "2021-03-08T05:04:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/792464786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is there an easy way to convert a \"dict object\" to a lua table?  One of the nice things about vim.fn.whatever in neovim is it's almost seamless.  But it seems in vim you run into problems with things like vim.fn.sign_getdefined('name').  A lua plugin that does this *almost* works except eventually you run into an assumption of table type, rather than \"list\" or \"dict.\"",
            "created_at": "2021-03-20T00:14:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-803203245",
            "id": 803203245,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzIwMzI0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803203245/reactions"
            },
            "updated_at": "2021-03-20T00:14:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803203245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6655373?v=4",
                "events_url": "https://api.github.com/users/andymass/events{/privacy}",
                "followers_url": "https://api.github.com/users/andymass/followers",
                "following_url": "https://api.github.com/users/andymass/following{/other_user}",
                "gists_url": "https://api.github.com/users/andymass/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andymass",
                "id": 6655373,
                "login": "andymass",
                "node_id": "MDQ6VXNlcjY2NTUzNzM=",
                "organizations_url": "https://api.github.com/users/andymass/orgs",
                "received_events_url": "https://api.github.com/users/andymass/received_events",
                "repos_url": "https://api.github.com/users/andymass/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andymass/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andymass/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andymass"
            }
        },
        {
            "author_association": "NONE",
            "body": "I need to understand how neovim does it. Haven't looked into it yet. I do know what for some function lua objects are natively supported. for vim Bram might not be happy about adding `if LUA` everywhere so I haven't sent any PRs to it yet but I have though to natively support some functions like `complete` func to support lua natively.\r\n\r\nOther way to solve is detecting tables and auto transforming it. Most people online have suggested to use something like cjson isarray https://github.com/mpx/lua-cjson/blob/e8972ac754788d3ef10a57a36016d6c3e85ba20d/lua/cjson/util.lua#L18-L34 but that is quite expensive. You can always override `vim.fn = mycustomvimfn`.\r\n\r\nI have been experimenting with `vimlist_new`, `vimlist_insert` and so on instead but this does mean you can't take advtanage of the existing lua ecosystem. https://github.com/prabirshrestha/asyncomplete.vim/blob/db79feef88f5c13480e4e3f385dfbfcb427f7b34/lua/asyncomplete/init.lua#L90-L100.\r\n\r\nUnfortunately no good solution unless Vim is open about lua but with vimscript9 don't think it will ever happen. My suggestion is if you want perf and lua use neovim. (I'm hoping lua plugins take off and vim in the future will be forced to use lua).",
            "created_at": "2021-03-20T00:44:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-803209571",
            "id": 803209571,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzIwOTU3MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803209571/reactions"
            },
            "updated_at": "2021-03-20T00:44:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/803209571",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
                "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
                "followers_url": "https://api.github.com/users/prabirshrestha/followers",
                "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
                "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/prabirshrestha",
                "id": 287744,
                "login": "prabirshrestha",
                "node_id": "MDQ6VXNlcjI4Nzc0NA==",
                "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
                "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
                "repos_url": "https://api.github.com/users/prabirshrestha/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/prabirshrestha"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@prabirshrestha thanks for the comprehensive response.  Based on your suggestion, I had really good luck overriding `vim.call` to have in and out type conversions.  Since `vim.fn` uses `vim.call` internally, this one works as well.  Efficiency aside, it seems I was able to create a POC compatibility layer, with an implementation of nvim's api.* which is actually able to run a couple of nvim-only lua plugins.  I was even able to get `luv` to work (seemingly) and compile vim with luajit (which is actually supported by vim's ./configure, but is not used for most distro builds).\r\n\r\nTo me it seems like the hardest sticking points are `v:lua` (this cannot be hacked up like `vim.api/vim.g/vim.o/etc`), and the fact most target plugins have a `has('nvim')` (but this is easily fixed if plugin authors used something like `luaeval('vim.api~=nil')`).",
            "created_at": "2021-04-02T14:25:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-812553449",
            "id": 812553449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjU1MzQ0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/812553449/reactions"
            },
            "updated_at": "2021-04-02T14:25:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/812553449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6655373?v=4",
                "events_url": "https://api.github.com/users/andymass/events{/privacy}",
                "followers_url": "https://api.github.com/users/andymass/followers",
                "following_url": "https://api.github.com/users/andymass/following{/other_user}",
                "gists_url": "https://api.github.com/users/andymass/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andymass",
                "id": 6655373,
                "login": "andymass",
                "node_id": "MDQ6VXNlcjY2NTUzNzM=",
                "organizations_url": "https://api.github.com/users/andymass/orgs",
                "received_events_url": "https://api.github.com/users/andymass/received_events",
                "repos_url": "https://api.github.com/users/andymass/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andymass/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andymass/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andymass"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@andymass  that's interesting. How did you get luv to cooperate with vim?",
            "created_at": "2021-04-02T15:24:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-812577377",
            "id": 812577377,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjU3NzM3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/812577377/reactions"
            },
            "updated_at": "2021-04-02T15:24:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/812577377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl note that there's a good chance I'm way off-base here.  But, all I did was build vim with luajit, install luv with luarocks+messing with cpath and `lua vim.loop = require'uv'`.  Then, I have a vim timer (via `timer_start()`) repeatedly calling a function which does `lua while uv.run('once') do end`.  Simple things like `defer_fn` (`vim.loop.new_timer`) already seem to work.",
            "created_at": "2021-04-02T22:38:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-812742798",
            "id": 812742798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjc0Mjc5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/812742798/reactions"
            },
            "updated_at": "2021-04-02T22:38:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/812742798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6655373?v=4",
                "events_url": "https://api.github.com/users/andymass/events{/privacy}",
                "followers_url": "https://api.github.com/users/andymass/followers",
                "following_url": "https://api.github.com/users/andymass/following{/other_user}",
                "gists_url": "https://api.github.com/users/andymass/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andymass",
                "id": 6655373,
                "login": "andymass",
                "node_id": "MDQ6VXNlcjY2NTUzNzM=",
                "organizations_url": "https://api.github.com/users/andymass/orgs",
                "received_events_url": "https://api.github.com/users/andymass/received_events",
                "repos_url": "https://api.github.com/users/andymass/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andymass/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andymass/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andymass"
            }
        },
        {
            "author_association": "NONE",
            "body": "How does libuv w/ luv compare to these strategies? https://github.com/vim-test/vim-test#strategies",
            "created_at": "2023-08-11T06:17:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/12537#issuecomment-1674258614",
            "id": 1674258614,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12537",
            "node_id": "IC_kwDOAPphoM5jyyi2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1674258614/reactions"
            },
            "updated_at": "2023-08-11T06:17:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1674258614",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/50891?v=4",
                "events_url": "https://api.github.com/users/westurner/events{/privacy}",
                "followers_url": "https://api.github.com/users/westurner/followers",
                "following_url": "https://api.github.com/users/westurner/following{/other_user}",
                "gists_url": "https://api.github.com/users/westurner/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/westurner",
                "id": 50891,
                "login": "westurner",
                "node_id": "MDQ6VXNlcjUwODkx",
                "organizations_url": "https://api.github.com/users/westurner/orgs",
                "received_events_url": "https://api.github.com/users/westurner/received_events",
                "repos_url": "https://api.github.com/users/westurner/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/westurner/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/westurner/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/westurner"
            }
        }
    ],
    "comments": 25,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12537/comments",
    "created_at": "2020-06-25T20:57:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12537/events",
    "html_url": "https://github.com/neovim/neovim/issues/12537",
    "id": 645846485,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "compatibility with Vim or older Neovim",
            "id": 109899712,
            "name": "compatibility",
            "node_id": "MDU6TGFiZWwxMDk4OTk3MTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/compatibility"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12537/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 190,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 221,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2023-08-09T14:08:25Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU2NDU4NDY0ODU=",
    "number": 12537,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 10,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 10,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12537/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12537/timeline",
    "title": "Vim and Neovim lua compatiblity",
    "updated_at": "2023-08-11T06:17:50Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12537",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/287744?v=4",
        "events_url": "https://api.github.com/users/prabirshrestha/events{/privacy}",
        "followers_url": "https://api.github.com/users/prabirshrestha/followers",
        "following_url": "https://api.github.com/users/prabirshrestha/following{/other_user}",
        "gists_url": "https://api.github.com/users/prabirshrestha/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/prabirshrestha",
        "id": 287744,
        "login": "prabirshrestha",
        "node_id": "MDQ6VXNlcjI4Nzc0NA==",
        "organizations_url": "https://api.github.com/users/prabirshrestha/orgs",
        "received_events_url": "https://api.github.com/users/prabirshrestha/received_events",
        "repos_url": "https://api.github.com/users/prabirshrestha/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/prabirshrestha/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/prabirshrestha/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/prabirshrestha"
    }
}