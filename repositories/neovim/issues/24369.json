{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nI'm trying to replace some of the completion sources I use with [null-ls](https://github.com/jose-elias-alvarez/null-ls.nvim) due to its impending archiving. Specifically, I'm trying to write a number of completion sources that responded to `textDocument/completion` with completion items.\r\n\r\nI've written a basic LSP server method that gets passed as the `cmd` key to `vim.lsp.start_client()`. But when I trigger omnicompletion (`<C-x><C-o>`), I get the following error in Neovim:\r\n\r\n~~~\r\nE5108: Error executing lua Vim:E565: Not allowed to change text or change window\r\nstack traceback:\r\n        [C]: in function 'complete'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:2318: in functio\r\nn 'handler'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:1499: in functio\r\nn 'done'\r\n        /home/andrew/minimal.lua:10: in function </home/andrew/minimal.lua:9>\r\n        /home/andrew/minimal.lua:20: in function 'request'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:1491: in functio\r\nn 'request'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:2116: in functio\r\nn 'buf_request'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:2290: in functio\r\nn <...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:2263>\r\nE5108: Error executing lua Vim:E565: Not allowed to change text or change window\r\nstack traceback:\r\n        [C]: in function 'complete'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:2318: in functio\r\nn 'handler'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:1499: in functio\r\nn 'done'\r\n        /home/andrew/minimal.lua:10: in function </home/andrew/minimal.lua:9>\r\n        /home/andrew/minimal.lua:20: in function 'request'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:1491: in functio\r\nn 'request'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:2116: in functio\r\nn 'buf_request'\r\n        ...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:2290: in functio\r\nn <...w/.local/nvim-linux64/share/nvim/runtime/lua/vim/lsp.lua:2263>\r\nPress ENTER or type command to continue\r\n~~~\r\n\r\nThe error happens twice each time. I think this is because `vim.lsp.omnifunc()` never gets to the line `return -2`, so completion continues.\r\n\r\nThe error is happen at the line `vim.fn.complete(startbyte + 1, items)` in [lsp.lua](https://github.com/neovim/neovim/blob/f660b794808ac809ee8cafe82ddd824840bc8e2c/runtime/lua/vim/lsp.lua#L2336).\r\n\r\nAs can be seen from the minimal-init.lua below, this happens regardless of the content returned by the handler for `textDocument/completion`.\r\n\r\nI'm likely missing something here, but I can't figure it out nor can I figure out why E565 is being triggered.\r\n\r\n\r\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\r\n\r\nOpen any file with the following `minimal_init.lua` (`nvim -u minimal_init.lua`) and type `<C-x><C-o>` to trigger omnicompletion.\r\n\r\n~~~lua\r\nlocal handlers = {\r\n  initialize = function(_, _, done)\r\n    done(nil, {\r\n      capabilities = {\r\n        completionProvider = true,\r\n      },\r\n    })\r\n  end,\r\n  [\"textDocument/completion\"] = function(_, _, done)\r\n    done(nil, {\r\n      { label = \"hello\" },\r\n    })\r\n  end,\r\n}\r\nlocal server = function(dispatchers)\r\n  local closing = false\r\n  return {\r\n    request = function(method, params, done)\r\n      if type(handlers[method]) == \"function\" then\r\n        handlers[method](method, params, done)\r\n      else\r\n        done()\r\n      end\r\n    end,\r\n    notify = function(...) end,\r\n    is_closing = function()\r\n      return closing\r\n    end,\r\n    terminate = function()\r\n      if not closing then\r\n        closing = true\r\n        dispatchers.on_exit(0, 0)\r\n      end\r\n    end,\r\n  }\r\nend\r\nvim.api.nvim_create_autocmd({ \"FileType\" }, {\r\n  callback = function()\r\n    local bufnr = vim.api.nvim_get_current_buf()\r\n\r\n    local id = vim.lsp.start_client({\r\n      cmd = server,\r\n      flags = { debounce_text_changes = 250 },\r\n      on_attach = function()\r\n        vim.bo.omnifunc = \"v:lua.vim.lsp.omnifunc\"\r\n      end,\r\n    })\r\n\r\n    if not id then\r\n      return\r\n    end\r\n\r\n    local did_attach = vim.lsp.buf_is_attached(bufnr, id) or vim.lsp.buf_attach_client(bufnr, id)\r\n    if not did_attach then\r\n      vim.print(\"Did not attach to buffer \" .. bufnr)\r\n    end\r\n  end,\r\n})\r\n-- # vim:ts=2:sw=2:sts=2:expandtab\r\n~~~\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-661+gef94fb69c\r\n\r\n### Language server name/version\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nLinux\r\n\r\n### Log file\r\n\r\n_No response_",
    "closed_at": "2023-07-19T05:10:13Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't see anything obvious. As you already surmised, the basic issue is that the completion popup is still active while something is trying to edit the buffer. \r\n\r\nFor troubleshooting, \r\n\r\n- try force-closing or canceling the completion popup before sending responses from your lsp server?\r\n- does playing with `debounce_text_changes` make a difference?\r\n\r\nE565 is also mentioned in https://github.com/neovim/neovim/issues/12390",
            "created_at": "2023-07-16T14:45:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/24369#issuecomment-1637111059",
            "id": 1637111059,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24369",
            "node_id": "IC_kwDOAPphoM5hlFUT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637111059/reactions"
            },
            "updated_at": "2023-07-16T14:46:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637111059",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The problem is that the omnifunc uses `lsp.buf_request` and triggers the handler _per_ client. So you have one `vim.fn.complete` call per client.\r\n\r\nThe solution is to change it to use `buf_request_all` and merge the results. (Or even better, loop over the clients to also generate the params per client with the right encoding, to fix the mixed encoding handling as well)\r\n\r\n",
            "created_at": "2023-07-16T14:58:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/24369#issuecomment-1637113969",
            "id": 1637113969,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24369",
            "node_id": "IC_kwDOAPphoM5hlGBx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637113969/reactions"
            },
            "updated_at": "2023-07-16T14:58:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637113969",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "NONE",
            "body": "I didn't entirely understand @mfussenegger's reply. I should be using a different `omnifunc` instead of the supplied one?\r\n\r\nI apologize for following up on a closed issue, but that doesn't make sense as null-ls is using really similar code to mine ([call to `vim.lsp.start_client()`](https://github.com/jose-elias-alvarez/null-ls.nvim/blob/db09b6c691def0038c456551e4e2772186449f35/lua/null-ls/client.lua#L74-L98) and [the definition of the function passed to `cmd`](https://github.com/jose-elias-alvarez/null-ls.nvim/blob/db09b6c691def0038c456551e4e2772186449f35/lua/null-ls/rpc.lua#L58-L145), but doesn't trigger this error. Also, with the minimal init file I supplied, my code is the only LSP client attached, so I don't understand how triggering `lsp.buf_request` per client would cause this error? Also, in my full config file, I have lua-ls and null-ls running as completion sources at the same time in lua files and omnicompletion works. So could there be something else causing the problem here?",
            "created_at": "2023-07-16T16:07:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/24369#issuecomment-1637128595",
            "id": 1637128595,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24369",
            "node_id": "IC_kwDOAPphoM5hlJmT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637128595/reactions"
            },
            "updated_at": "2023-07-16T16:07:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637128595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2666761?v=4",
                "events_url": "https://api.github.com/users/oncomouse/events{/privacy}",
                "followers_url": "https://api.github.com/users/oncomouse/followers",
                "following_url": "https://api.github.com/users/oncomouse/following{/other_user}",
                "gists_url": "https://api.github.com/users/oncomouse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oncomouse",
                "id": 2666761,
                "login": "oncomouse",
                "node_id": "MDQ6VXNlcjI2NjY3NjE=",
                "organizations_url": "https://api.github.com/users/oncomouse/orgs",
                "received_events_url": "https://api.github.com/users/oncomouse/received_events",
                "repos_url": "https://api.github.com/users/oncomouse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oncomouse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oncomouse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oncomouse"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't see how this is solved without a PR to change the omnifunc.",
            "created_at": "2023-07-16T21:44:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/24369#issuecomment-1637196586",
            "id": 1637196586,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24369",
            "node_id": "IC_kwDOAPphoM5hlaMq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637196586/reactions"
            },
            "updated_at": "2023-07-16T21:44:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637196586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "With `nvim -u minimal_init.lua` it still triggers ftplugins,  so one might have multiple clients - that kinda led me down the wrong path.\r\n\r\nIt is indeed also a problem with a single client (`nvim --clean -u minimal_init-lua`)\r\n\r\nI think the actual problem was that `vim.fn.complete` is triggered within a luv callback, not in the main thread.\r\n\r\nCould you try with https://github.com/neovim/neovim/pull/24381 ?\r\n\r\n---\r\n\r\nBtw, your FileType callback could be simpler by using `vim.lsp.start`:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd({ \"FileType\" }, {\r\n  callback = function()\r\n    vim.lsp.start({\r\n      name = \"dummy\",\r\n      cmd = server,\r\n      on_attach = function(client, bufnr)\r\n        vim.bo[bufnr].omnifunc = \"v:lua.vim.lsp.omnifunc\"\r\n      end,\r\n    })\r\n  end,\r\n})\r\n```\r\n\r\n(And the server implementation is also not 100% correct, see also https://github.com/neovim/neovim/pull/24338)",
            "created_at": "2023-07-17T17:35:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/24369#issuecomment-1638582044",
            "id": 1638582044,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24369",
            "node_id": "IC_kwDOAPphoM5hqscc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1638582044/reactions"
            },
            "updated_at": "2023-07-17T17:36:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1638582044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "NONE",
            "body": "#24381 does fix the problem. Thanks!\r\n\r\nAnd, thanks for the reminder about `vim.lsp.start()`.\r\n\r\nEDIT: Fwiw, wrapping `request()` in the server config in `vim.schedule_wrap` also solves the problem.",
            "created_at": "2023-07-18T19:24:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/24369#issuecomment-1640867177",
            "id": 1640867177,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24369",
            "node_id": "IC_kwDOAPphoM5hzaVp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1640867177/reactions"
            },
            "updated_at": "2023-07-18T19:25:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1640867177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2666761?v=4",
                "events_url": "https://api.github.com/users/oncomouse/events{/privacy}",
                "followers_url": "https://api.github.com/users/oncomouse/followers",
                "following_url": "https://api.github.com/users/oncomouse/following{/other_user}",
                "gists_url": "https://api.github.com/users/oncomouse/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oncomouse",
                "id": 2666761,
                "login": "oncomouse",
                "node_id": "MDQ6VXNlcjI2NjY3NjE=",
                "organizations_url": "https://api.github.com/users/oncomouse/orgs",
                "received_events_url": "https://api.github.com/users/oncomouse/received_events",
                "repos_url": "https://api.github.com/users/oncomouse/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oncomouse/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oncomouse/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oncomouse"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24369/comments",
    "created_at": "2023-07-16T14:18:52Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24369/events",
    "html_url": "https://github.com/neovim/neovim/issues/24369",
    "id": 1806599397,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, unlikely to cause distant/indirect damage",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains minimal reproducing steps",
            "id": 435851959,
            "name": "has:repro",
            "node_id": "MDU6TGFiZWw0MzU4NTE5NTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:repro"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24369/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 63,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 146,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-07-23T23:05:24Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM5rroTl",
    "number": 24369,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24369/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24369/timeline",
    "title": "LSP: E565 with vim.lsp.omnifunc and custom server",
    "updated_at": "2023-07-19T05:10:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24369",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2666761?v=4",
        "events_url": "https://api.github.com/users/oncomouse/events{/privacy}",
        "followers_url": "https://api.github.com/users/oncomouse/followers",
        "following_url": "https://api.github.com/users/oncomouse/following{/other_user}",
        "gists_url": "https://api.github.com/users/oncomouse/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/oncomouse",
        "id": 2666761,
        "login": "oncomouse",
        "node_id": "MDQ6VXNlcjI2NjY3NjE=",
        "organizations_url": "https://api.github.com/users/oncomouse/orgs",
        "received_events_url": "https://api.github.com/users/oncomouse/received_events",
        "repos_url": "https://api.github.com/users/oncomouse/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/oncomouse/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/oncomouse/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/oncomouse"
    }
}