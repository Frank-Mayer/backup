{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\n* If `foldmethod` is set to anything other than `manual`,\r\n* when `:edit`-ing an existing buffer,\r\n* in decoration provider `on_win` callback,\r\n* the `botline` parameter (or `vim.fn.line('w$')`) is wrong.\r\n\r\nThis may result in wrong treesitter highlighting for injections. But this is not very severe problem since redraw will be triggered with correct botline at some point. \r\n\r\n### Steps to reproduce\r\n\r\nAdd the following test case\r\n\r\n```diff\r\ndiff --git a/test/functional/ui/decorations_spec.lua b/test/functional/ui/decorations_spec.lua\r\nindex eea62140c..c864df8df 100644\r\n--- a/test/functional/ui/decorations_spec.lua\r\n+++ b/test/functional/ui/decorations_spec.lua\r\n@@ -785,6 +785,36 @@ describe('decorations providers', function()\r\n     ]])\r\n     eq(2, exec_lua([[return _G.cnt]]))\r\n   end)\r\n+\r\n+  it('provides correct botline regardless of foldmethod', function()\r\n+    command('set foldmethod=expr') -- any non-manual fdm\r\n+\r\n+    local file = t.tmpname()\r\n+    t.write_file(file, mulholland)\r\n+    command('edit ' .. file)\r\n+    command('enew')\r\n+\r\n+    exec_lua('_G.log = {}')\r\n+    setup_provider([[\r\n+      function on_do(event, win, buf, topline, botline)\r\n+        if event == 'win' and buf == 1 then\r\n+          table.insert(_G.log, {topline, botline})\r\n+        end\r\n+      end\r\n+    ]])\r\n+\r\n+    command('buffer 1')\r\n+    feed('<C-^>')\r\n+    command('edit ' .. file)\r\n+    command('redraw!')\r\n+    n.poke_eventloop()\r\n+\r\n+    eq({\r\n+      { 0, 6 }, -- :buffer\r\n+      { 0, 6 }, -- :edit\r\n+      { 0, 6 }, -- :redraw!\r\n+    }, exec_lua('return _G.log'))\r\n+  end)\r\n end)\r\n \r\n local example_text = [[\r\n```\r\n\r\nRun the test (`make TEST_FILE=test/functional/ui/decorations_spec.lua make functionaltest`).\r\n\r\nResult\r\n```\r\nPassed in:\r\n(table: 0x7c12c74fc3e8) {\r\n  [1] = {\r\n    [1] = 0\r\n    [2] = 6 }\r\n *[2] = {\r\n    [1] = 0\r\n   *[2] = 1 }\r\n  [3] = {\r\n    [1] = 0\r\n    [2] = 6 } }\r\nExpected:\r\n(table: 0x7c12c75c3238) {\r\n  [1] = {\r\n    [1] = 0\r\n    [2] = 6 }\r\n *[2] = {\r\n    [1] = 0\r\n   *[2] = 6 }\r\n  [3] = {\r\n    [1] = 0\r\n    [2] = 6 } }\r\n```\r\n\r\nThe correct value is passed for `:buffer`, but not for `:edit`. \r\n\r\n### Expected behavior\r\n\r\nThe test should pass.\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.10 032df963bb3fb0b5652e1817e9f4da986996fa6d\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nubuntu 22.04\r\n\r\n### Terminal name/version\r\n\r\nGNOME Terminal 3.44.0 using VTE 0.68.0 +BIDI +GNUTLS +ICU +SYSTEMD\r\n\r\n### $TERM environment variable\r\n\r\ntmux-256color\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": "2024-04-27T03:45:10Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This fixes this issue. \r\n```diff\r\ndiff --git a/src/nvim/window.c b/src/nvim/window.c\r\nindex 8232767e2..1a6c3f726 100644\r\n--- a/src/nvim/window.c\r\n+++ b/src/nvim/window.c\r\n@@ -2467,6 +2467,7 @@ void win_init_empty(win_T *wp)\r\n   wp->w_topline = 1;\r\n   wp->w_topfill = 0;\r\n   wp->w_botline = 2;\r\n+  wp->w_valid = 0;\r\n   wp->w_s = &wp->w_buffer->b_s;\r\n }\r\n \r\n```\r\n`win_init_empty` is invoked for the current existing window when running [`:edit`](https://github.com/neovim/neovim/blob/47dbda97d2f40729733b1c0d1d13d914065af23c/src/nvim/ex_cmds.c#L2552), whose `w_valid` may have `VALID_BOTLINE`. Resetting `w_botline` without marking it as invalid makes `validate_botline` in `decor_providers_invoke_win` no-op, resulting in wrong `botline` in `on_win`.\r\n\r\nVim has the same issue. I'll send a patch to Vim.",
            "created_at": "2024-04-26T11:13:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/28443#issuecomment-2079184155",
            "id": 2079184155,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28443",
            "node_id": "IC_kwDOAPphoM577dUb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079184155/reactions"
            },
            "updated_at": "2024-04-26T12:34:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079184155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Fixed by #28530",
            "created_at": "2024-04-27T03:45:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/28443#issuecomment-2080346155",
            "id": 2080346155,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28443",
            "node_id": "IC_kwDOAPphoM57_5Ar",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2080346155/reactions"
            },
            "updated_at": "2024-04-27T03:45:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2080346155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28443/comments",
    "created_at": "2024-04-21T15:27:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28443/events",
    "html_url": "https://github.com/neovim/neovim/issues/28443",
    "id": 2255132532,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 2598645343,
            "name": "folds",
            "node_id": "MDU6TGFiZWwyNTk4NjQ1MzQz",
            "url": "https://api.github.com/repos/neovim/neovim/labels/folds"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28443/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Gapd0",
    "number": 28443,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28443/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28443/timeline",
    "title": "non-manual foldmethod makes botline incorrect in decoration provider during :edit-ing existing buffer",
    "updated_at": "2024-04-27T03:45:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28443",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
        "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
        "followers_url": "https://api.github.com/users/tomtomjhj/followers",
        "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
        "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tomtomjhj",
        "id": 19489738,
        "login": "tomtomjhj",
        "node_id": "MDQ6VXNlcjE5NDg5NzM4",
        "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
        "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
        "repos_url": "https://api.github.com/users/tomtomjhj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tomtomjhj"
    }
}