{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "More specifically\r\n\r\n```\r\nError → ...ode/neovim/test/functional/terminal/ex_terminal_spec.lua @ 18\r\n:terminal does not interrupt Press-ENTER prompt #2748\r\n./test/functional/ui/screen.lua:298: Row 1 did not match.\r\nExpected:\r\n  |*X                                                 |\r\n  |X                                                 |\r\n  |^X                                                 |\r\n  |                                                  |\r\nActual:\r\n  |*Missing end to balance this while loop            |\r\n  |fish: while true; do echo X; done                 |\r\n  |^      ^                                           |\r\n  |                                                  |\r\n\r\nTo print the expect() call that would assert the current screen state, use\r\nscreen:snaphot_util(). In case of non-deterministic failures, use\r\nscreen:redraw_debug() to show all intermediate screen states.\r\n\r\nstack traceback:\r\n        ./test/functional/ui/screen.lua:298: in function 'wait'\r\n        ./test/functional/ui/screen.lua:209: in function 'expect'\r\n        ...ode/neovim/test/functional/terminal/ex_terminal_spec.lua:28: in function <...ode/neovim/test/functional/terminal/ex_terminal_spec.lua:18>\r\n\r\n\r\nError → ...nhooyr/code/neovim/test/functional/terminal/tui_spec.lua @ 179\r\ntui with non-tty file descriptors can handle pipes as stdout and stderr\r\n./test/functional/ui/screen.lua:298: Row 1 did not match.\r\nExpected:\r\n  |*:w testF                                          |\r\n  |:q                                                |\r\n  |abc                                               |\r\n  |                                                  |\r\n  |[Process exited 0]{1: }                               |\r\n  |                                                  |\r\n  |{3:-- TERMINAL --}                                    |\r\nActual:\r\n  |*                                                  |\r\n  |                                                  |\r\n  |                        ^                         |\r\n  |                                                  |\r\n  |                                                  |\r\n  |[Process exited 127]{1: }                             |\r\n  |{3:-- TERMINAL --}                                    |\r\n\r\nTo print the expect() call that would assert the current screen state, use\r\nscreen:snaphot_util(). In case of non-deterministic failures, use\r\nscreen:redraw_debug() to show all intermediate screen states.\r\n\r\nstack traceback:\r\n        ./test/functional/ui/screen.lua:298: in function 'wait'\r\n        ./test/functional/ui/screen.lua:209: in function 'expect'\r\n        ...nhooyr/code/neovim/test/functional/terminal/tui_spec.lua:182: in function <...nhooyr/code/neovim/test/functional/terminal/tui_spec.lua:179>\r\n\r\n\r\nError → ...rs/nhooyr/code/neovim/test/functional/ui/output_spec.lua @ 43\r\nshell command :! throttles shell-command output greater than ~10KB\r\n./test/functional/ui/screen.lua:298: Row 1 did not match.\r\nExpected:\r\n  |*XXXXXXXXXX 2996                                   |\r\n  |XXXXXXXXXX 2997                                   |\r\n  |XXXXXXXXXX 2998                                   |\r\n  |XXXXXXXXXX 2999                                   |\r\n  |XXXXXXXXXX 3000                                   |\r\n  |{10:Press ENTER or type command to continue}{1: }          |\r\n  |{3:-- TERMINAL --}                                    |\r\nActual:\r\n  |*fish: for i in $(seq 2 3000); do echo XXXXXXXXXX  |\r\n  |      ^                                           |\r\n  |                                                  |\r\n  |shell returned 127                                |\r\n  |                                                  |\r\n  |{10:Press ENTER or type command to continue}{1: }          |\r\n  |{3:-- TERMINAL --}                                    |\r\n\r\nTo print the expect() call that would assert the current screen state, use\r\nscreen:snaphot_util(). In case of non-deterministic failures, use\r\nscreen:redraw_debug() to show all intermediate screen states.\r\n\r\nstack traceback:\r\n        ./test/functional/ui/screen.lua:298: in function 'wait'\r\n        ./test/functional/ui/screen.lua:209: in function 'expect'\r\n        ...rs/nhooyr/code/neovim/test/functional/ui/output_spec.lua:58: in function <...rs/nhooyr/code/neovim/test/functional/ui/output_spec.lua:43>\r\n\r\n-- Output to stderr:\r\n\r\nCMake Error at /Users/nhooyr/code/neovim/cmake/RunTests.cmake:43 (message):\r\n  Running functional tests failed with error: 1.\r\n\r\n\r\nFAILED: CMakeFiles/functionaltest\r\n```\r\n\r\nThis could be really easily fixed by explicitly setting `$SHELL=bash` (or even `sh`) when running tests. I'm not sure how to do that though.",
    "closed_at": "2023-09-11T17:01:04Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "@nhooyr `nvim_argv` in `test/functional/helpers.lua`. One does not need to set `$SHELL`, it should be enough to set `&shell` option by altering an existing `:set` command there. Question is whether this is going to break anything on Windows, maybe it is better to devise a safer alternative. Like e.g.\r\n\r\n    nvim --headless --cmd \"for i in range(100) | echo 'XXXXX' i | endfor | echo ''\" --cmd qa\r\n\r\n(that prints to stderr, though you better not pick `-c` in place of `--cmd` because after UI is somewhat initialized it is no longer going to do so): double quotes are going to be safe enough for use in most shells, though it is needed to use `nvim_prog` from `test/functional/helpers.lua` and not `nvim`.",
            "created_at": "2017-02-25T00:34:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282442579",
            "id": 282442579,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ0MjU3OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282442579/reactions"
            },
            "updated_at": "2017-02-25T00:34:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282442579",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> you better not pick -c in place of --cmd because after UI is somewhat initialized it is no longer going to do so\r\n\r\nWrong, I just forgot to change `--cmd qa` to `-c qa`. Though it errors out regarding `syntax.vim` file unless I have it where expected before printing what I requested.",
            "created_at": "2017-02-25T00:36:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282442823",
            "id": 282442823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ0MjgyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282442823/reactions"
            },
            "updated_at": "2017-02-25T00:37:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282442823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does not error out with `-u NONE -i NONE` which is a good idea in any case.",
            "created_at": "2017-02-25T00:38:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282443040",
            "id": 282443040,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ0MzA0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282443040/reactions"
            },
            "updated_at": "2017-02-25T00:38:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282443040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Alright, thanks, I'll try to work on that later.\r\n\r\nI also noticed that changing the shell to bash actually gave me errors.\r\n\r\n```\r\n❯ env SHELL=bash make test\r\nninja  -C .deps\r\nninja: Entering directory `.deps'\r\n[2/2] cd /Users/nhooyr/code/neovim/.deps && /usr/local/Cellar/cmake/3.7.2/bin/cmake -E touch .third-party\r\nninja  -C build\r\nninja: Entering directory `build'\r\n[4/4] cd /Users/nhooyr/code/neovim/build/runtime && /usr/local/Cellar/cmake/3.7.2/bin/c.../code/neovim/build/bin/nvim -u NONE -i NONE -e --headless -c helptags\\ ++t\\ doc -c quit\r\nninja  -C build functionaltest\r\nninja: Entering directory `build'\r\n[0/1] cd /Users/nhooyr/code/neovim/build && /usr/local/Cellar/cmake/3.7.2/bin/cmake -DB..._TYPE=functional -DSYSTEM_NAME=Darwin -P /Users/nhooyr/code/neovim/cmake/RunTests.cmake\r\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\r\n●●●●●●●●●●●●●●●●●●●◌●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\r\n●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●◼●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●◌●●●●●●●●●●●●●◌●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●●\r\n●●●●●●●●●●●-- Output to stderr:\r\nUncaught Error: ...ovim/.deps/usr/share/lua/5.1/nvim/msgpack_rpc_stream.lua:84: invalid msgpack-rpc string\r\nstack traceback:\r\n        [C]: in function 'receive'\r\n        ...ovim/.deps/usr/share/lua/5.1/nvim/msgpack_rpc_stream.lua:84: in function 'cb'\r\n        ...im/.deps/usr/share/lua/5.1/nvim/child_process_stream.lua:43: in function <...im/.deps/usr/share/lua/5.1/nvim/child_process_stream.lua:39>\r\n        [C]: in function 'run'\r\n        ...oyr/code/neovim/.deps/usr/share/lua/5.1/nvim/session.lua:179: in function '_run'\r\n        ...oyr/code/neovim/.deps/usr/share/lua/5.1/nvim/session.lua:165: in function '_blocking_request'\r\n        ...oyr/code/neovim/.deps/usr/share/lua/5.1/nvim/session.lua:86: in function 'request'\r\n        ./test/functional/helpers.lua:83: in function 'request'\r\n        ./test/functional/helpers.lua:186: in function 'nvim_feed'\r\n        ./test/functional/helpers.lua:215: in function 'feed'\r\n        ...\r\n        ...oyr/code/neovim/.deps/usr/share/lua/5.1/busted/block.lua:150: in function 'execute'\r\n        ...ooyr/code/neovim/.deps/usr/share/lua/5.1/busted/init.lua:7: in function 'executor'\r\n        ...ooyr/code/neovim/.deps/usr/share/lua/5.1/busted/core.lua:276: in function <...ooyr/code/neovim/.deps/usr/share/lua/5.1/busted/core.lua:276>\r\n        [C]: in function 'xpcall'\r\n        ...ooyr/code/neovim/.deps/usr/share/lua/5.1/busted/core.lua:169: in function 'safe'\r\n        ...ooyr/code/neovim/.deps/usr/share/lua/5.1/busted/core.lua:276: in function 'execute'\r\n        ...r/code/neovim/.deps/usr/share/lua/5.1/busted/execute.lua:37: in function 'execute'\r\n        ...yr/code/neovim/.deps/usr/share/lua/5.1/busted/runner.lua:167: in function <...yr/code/neovim/.deps/usr/share/lua/5.1/busted/runner.lua:10>\r\n        ...deps/usr/lib/luarocks/rocks/busted/2.0.rc11-0/bin/busted:3: in main chunk\r\n        [C]: at 0x0100001760\r\n\r\nCMake Error at /Users/nhooyr/code/neovim/cmake/RunTests.cmake:43 (message):\r\n  Running functional tests failed with error: 1.\r\n\r\n\r\nFAILED: CMakeFiles/functionaltest\r\n```\r\n\r\nIs this intended or indicative of some underlying bug?",
            "created_at": "2017-02-25T01:02:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282445829",
            "id": 282445829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ0NTgyOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282445829/reactions"
            },
            "updated_at": "2017-02-25T01:03:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282445829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\"invalid msgpack string\" usually means something was printed to stdout which breaks the channel.\r\n\r\nshell should be `sh` not bash. We do not (or should not) use bash features in tests.",
            "created_at": "2017-02-25T10:12:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282474455",
            "id": 282474455,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ3NDQ1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282474455/reactions"
            },
            "updated_at": "2017-02-25T10:12:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282474455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tried `sh` too, same error.",
            "created_at": "2017-02-25T19:23:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282506153",
            "id": 282506153,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUwNjE1Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282506153/reactions"
            },
            "updated_at": "2017-02-25T19:23:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282506153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> env SHELL=bash make test\r\n\r\nIf you're doing this from fish, that could be a problem. As @ZyX-I mentioned setting `$SHELL` is not needed, only the 'shell' option of the nvim test instances.\r\n\r\nMight want to set BUSTED_OUTPUT_TYPE to gtest to get more visibility.\r\n",
            "created_at": "2017-02-25T21:33:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282514044",
            "id": 282514044,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUxNDA0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282514044/reactions"
            },
            "updated_at": "2017-02-25T21:33:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282514044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I've tried that as well, but it didn't fix it. I noticed that the error appears only sometimes, sometimes the tests pass flawlessly. I also got another different error from a test, but that too only occurred sometimes. Sometimes tests passed without fail.\r\n\r\nHere is the new error:\r\n\r\n```\r\nError → ...ooyr/code/neovim/test/functional/ex_cmds/ctrl_c_spec.lua @ 11\r\nCTRL-C (mapped) interrupts :global\r\n./test/functional/helpers.lua:187: attempt to perform arithmetic on local 'written' (a nil value)\r\n\r\nstack traceback:\r\n\t./test/functional/helpers.lua:187: in function 'nvim_feed'\r\n\t./test/functional/helpers.lua:215: in function 'feed'\r\n\t...ooyr/code/neovim/test/functional/ex_cmds/ctrl_c_spec.lua:43: in function 'test_ctrl_c'\r\n\t...ooyr/code/neovim/test/functional/ex_cmds/ctrl_c_spec.lua:56: in function <...ooyr/code/neovim/test/functional/ex_cmds/ctrl_c_spec.lua:11>\r\n\r\n-- Output to stderr:\r\n\r\nCMake Error at /Users/nhooyr/code/neovim/cmake/RunTests.cmake:43 (message):\r\n  Running functional tests failed with error: 1.\r\n\r\n\r\nFAILED: CMakeFiles/functionaltest\r\n```\r\n\r\nI have no idea why the `written` variable would be nil in `nvim_feed` so I'm not sure what is causing this.\r\n\r\nI also get this message when the \"invalid msgpack-rpc string\" error does not happen\r\n\r\n```\r\nWarning: Screen changes have been received after the expected state was seen.\r\nThis is probably due to an indeterminism in the test. Try adding\r\n`wait()` (or even a separate `screen:expect(...)`) at a point of possible\r\nindeterminism, typically in between a `feed()` or `execute()` which is non-\r\nsynchronous, and a synchronous api call.\r\n\r\nNote that sometimes a `wait` can trigger redraws and consequently generate more\r\nindeterminism. If adding `wait` calls seems to increase the frequency of these\r\nmessages, try removing every `wait` call in the test.\r\n\r\nIf everything else fails, use Screen:redraw_debug to help investigate what is\r\n  causing the problem.\r\n\r\nstack traceback:\r\n\t./test/functional/ui/screen.lua:292: in function 'wait'\r\n\t./test/functional/ui/screen.lua:209: in function 'expect'\r\n\t...hooyr/code/neovim/test/functional/ui/inccommand_spec.lua:808: in function <...hooyr/code/neovim/test/functional/ui/inccommand_spec.lua:804>\r\n```\r\n\r\nbut the code in question already has a `wait()` call.",
            "created_at": "2017-02-25T22:07:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282515960",
            "id": 282515960,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUxNTk2MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282515960/reactions"
            },
            "updated_at": "2017-02-25T22:07:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282515960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Some tests have their own arguments list passed to nvim, so there may be more then one place to set `shell`.\r\n\r\n---\r\n\r\nIf I am not mistaking, `nil`s may be returned if Neovim crashed. There is a question why it would crash though and whether it actually did. Try running only the failing test with GDB=1 (note: you will need to attach to the gdbserver to make nvim actually run or test will hang indefinitely).",
            "created_at": "2017-02-25T22:34:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282517537",
            "id": 282517537,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUxNzUzNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282517537/reactions"
            },
            "updated_at": "2017-02-25T22:34:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282517537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yup, there is one more, I have it set in the PR.\r\n\r\nI'll try `BUSTED_OUTPUT_TYPE` set to `gtest` and then i'll also try `GDB=1` and let you guys know soon.",
            "created_at": "2017-02-25T22:43:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282518028",
            "id": 282518028,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUxODAyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282518028/reactions"
            },
            "updated_at": "2017-02-25T22:43:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282518028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
                "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
                "followers_url": "https://api.github.com/users/nhooyr/followers",
                "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
                "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nhooyr",
                "id": 10180857,
                "login": "nhooyr",
                "node_id": "MDQ6VXNlcjEwMTgwODU3",
                "organizations_url": "https://api.github.com/users/nhooyr/orgs",
                "received_events_url": "https://api.github.com/users/nhooyr/received_events",
                "repos_url": "https://api.github.com/users/nhooyr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nhooyr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The inccommand_spec indeterminism is a known issue. (update: fixed in #6592)",
            "created_at": "2017-02-26T08:13:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-282540398",
            "id": 282540398,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU0MDM5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282540398/reactions"
            },
            "updated_at": "2017-04-26T15:52:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282540398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For reference: initial work was done in https://github.com/neovim/neovim/pull/6176.",
            "created_at": "2019-06-12T17:22:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/6172#issuecomment-501374275",
            "id": 501374275,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6172",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTM3NDI3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/501374275/reactions"
            },
            "updated_at": "2019-06-12T17:22:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/501374275",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/6172/comments",
    "created_at": "2017-02-25T00:15:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/6172/events",
    "html_url": "https://github.com/neovim/neovim/issues/6172",
    "id": 210191401,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 110418643,
            "name": "test",
            "node_id": "MDU6TGFiZWwxMTA0MTg2NDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/test"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, unlikely to cause distant/indirect damage",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/6172/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 578,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 413,
        "state": "open",
        "title": "backlog",
        "updated_at": "2023-09-11T17:01:04Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUyMTAxOTE0MDE=",
    "number": 6172,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/6172/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/6172/timeline",
    "title": "some tests fail with $SHELL = fish",
    "updated_at": "2023-09-11T17:01:04Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/6172",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10180857?v=4",
        "events_url": "https://api.github.com/users/nhooyr/events{/privacy}",
        "followers_url": "https://api.github.com/users/nhooyr/followers",
        "following_url": "https://api.github.com/users/nhooyr/following{/other_user}",
        "gists_url": "https://api.github.com/users/nhooyr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nhooyr",
        "id": 10180857,
        "login": "nhooyr",
        "node_id": "MDQ6VXNlcjEwMTgwODU3",
        "organizations_url": "https://api.github.com/users/nhooyr/orgs",
        "received_events_url": "https://api.github.com/users/nhooyr/received_events",
        "repos_url": "https://api.github.com/users/nhooyr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nhooyr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nhooyr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nhooyr"
    }
}