{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nRight now, `clojure-lsp` relies on the microsoft lsp specification that delegates the `Work Done progress token` creation to the sender. \r\n\r\nhttps://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#initiatingWorkDoneProgress\r\n> Work Done progress can be initiated in two different ways:\r\n> \r\n> 1. by the sender of a request (mostly clients) using the predefined workDoneToken property in the requests parameter literal. The document will refer to this kind of progress as client initiated progress.\r\n\r\nThe problem is their implementation ignores the `$/progress` publication when this is not present, this way none `lsp-status` tool  works correctly to give to user feedback, what is bad since we don't really know when the processing is finished and can take a while. \r\nOthers LSP (luals, golsp, etc...) just sets a random value `(string | int)` when it's not present and everything is working.\r\n\r\nBut in this case (maybe other LSP also relies in this definitions) it's just is ignored. \r\n\r\nTo resolve this, in my local neovim build updated the `function Client:initialize()` implementation to also sent the property `workDoneToken = \"foobar\"` inside the `initialize_params`. Since this is the same approach used by `vscode` and `emacs`.\r\nAfter this change the `$/progress` starts to receive every progress update, thus `lsp-status` and `fidget` was working just fine.\r\n\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\n```\r\nvim.lsp.set_log_level(\"debug\")\r\nvim.lsp.start_client({\r\n  name = 'my-server-name',\r\n  cmd = { 'clojure-lsp' },\r\n  root_dir = vim.fn.getcwd()\r\n})\r\n\r\n```\r\n\n\n### Expected behavior\n\nshould contains the `$/progress` in the lsp debug logs\r\n\r\n```\r\n-- [DEBUG][2024-03-19 18:26:22] .../vim/lsp/rpc.lua:403\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params  = {    token = \"foobar\",    value = {      kind = \"begin\",      percentage = 0,      title = \"clojure-lsp\"    }  }}\r\n-- [DEBUG][2024-03-19 18:26:22] .../vim/lsp/rpc.lua:403\t\"rpc.receive\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"foobar\",    value = {      kind = \"report\",      message = \"Finding kondo config\",      percentage = 5    }  }}\r\n```\n\n### Neovim version (nvim -v)\n\nNvim 0.9.5\n\n### Language server name/version\n\nclojure-lsp/2024.02.01-11.01.59\n\n### Operating system/version\n\nmacos/14.2.1  (sonoma)\n\n### Log file\n\n_No response_",
    "closed_at": "2024-04-05T11:24:40Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "should this be a config parameter for each language server, or should Neovim always create the progress token itself? Are there downsides to creating / not creating the token as the client?",
            "created_at": "2024-03-27T11:26:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/27938#issuecomment-2022537705",
            "id": 2022537705,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27938",
            "node_id": "IC_kwDOAPphoM54jXnp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2022537705/reactions"
            },
            "updated_at": "2024-03-27T11:26:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2022537705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hello @rudiejd  \r\nLooking at other implementations, there basic two scenarios for the `language servers`. Or they expect for the server to send this like the `clojure-lsp` case, or  they ignore the one sent and create a new every time like `goplp` and `lua_ls`.\r\n\r\nFrom what i saw, when the server creates it by itself this creates no effect on the expected behavior. But for the ones where this is expected this change will enables to fully work.\r\n\r\nSince this is expected based on the specification for LSP in general, i don't believe it should be for each language server, but  a implementation for the protocol itself. [VSCode](https://github.com/microsoft/vscode-languageserver-node/blob/e1345cca06095d61d3c5c0ff961472d55cbcf798/client/src/common/client.ts#L1226) for example always send a generated UUID in the init call. [Emacs](https://github.com/emacs-lsp/lsp-mode/blob/71a5eb3d4a1f30e5068cdf9aad7dcad543e79f4c/lsp-mode.el#L7739) in the other hand just send a fixed string \"1\".\r\n\r\nBottom line is, receive this parameter is already expected from the LSPs since it's part of the specification. Some servers will ignore it and others will use the received one. So theres no real downside in this.",
            "created_at": "2024-03-28T00:02:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/27938#issuecomment-2024174607",
            "id": 2024174607,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27938",
            "node_id": "IC_kwDOAPphoM54pnQP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2024174607/reactions"
            },
            "updated_at": "2024-03-28T00:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2024174607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34526229?v=4",
                "events_url": "https://api.github.com/users/vilelamarcospaulo/events{/privacy}",
                "followers_url": "https://api.github.com/users/vilelamarcospaulo/followers",
                "following_url": "https://api.github.com/users/vilelamarcospaulo/following{/other_user}",
                "gists_url": "https://api.github.com/users/vilelamarcospaulo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vilelamarcospaulo",
                "id": 34526229,
                "login": "vilelamarcospaulo",
                "node_id": "MDQ6VXNlcjM0NTI2MjI5",
                "organizations_url": "https://api.github.com/users/vilelamarcospaulo/orgs",
                "received_events_url": "https://api.github.com/users/vilelamarcospaulo/received_events",
                "repos_url": "https://api.github.com/users/vilelamarcospaulo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vilelamarcospaulo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vilelamarcospaulo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vilelamarcospaulo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thank you for the detailed response! I noticed VSCode makes this configurable, so I chose to make it configurable just in case. I'm not sure if there are any benefits of sending a UUID, so I just sent \"1\" for now similar to emacs. Let me know if my branch works for you",
            "created_at": "2024-03-28T12:43:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/27938#issuecomment-2025099403",
            "id": 2025099403,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27938",
            "node_id": "IC_kwDOAPphoM54tJCL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2025099403/reactions"
            },
            "updated_at": "2024-03-28T12:43:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2025099403",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "NONE",
            "body": "@rudiejd Thanks for doing this  implementation, after taking a fast look it looks pretty much ok to me. Right now i'm also working with a fixed string in my local build, and it's just fine, so i believe sending fixed \"1\" as emacs will be the best choice.",
            "created_at": "2024-03-28T13:09:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/27938#issuecomment-2025147572",
            "id": 2025147572,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27938",
            "node_id": "IC_kwDOAPphoM54tUy0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2025147572/reactions"
            },
            "updated_at": "2024-03-28T13:09:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2025147572",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34526229?v=4",
                "events_url": "https://api.github.com/users/vilelamarcospaulo/events{/privacy}",
                "followers_url": "https://api.github.com/users/vilelamarcospaulo/followers",
                "following_url": "https://api.github.com/users/vilelamarcospaulo/following{/other_user}",
                "gists_url": "https://api.github.com/users/vilelamarcospaulo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vilelamarcospaulo",
                "id": 34526229,
                "login": "vilelamarcospaulo",
                "node_id": "MDQ6VXNlcjM0NTI2MjI5",
                "organizations_url": "https://api.github.com/users/vilelamarcospaulo/orgs",
                "received_events_url": "https://api.github.com/users/vilelamarcospaulo/received_events",
                "repos_url": "https://api.github.com/users/vilelamarcospaulo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vilelamarcospaulo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vilelamarcospaulo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vilelamarcospaulo"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27938/comments",
    "created_at": "2024-03-19T21:29:49Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27938/events",
    "html_url": "https://github.com/neovim/neovim/issues/27938",
    "id": 2196060492,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27938/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 603,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 516,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-04-07T23:49:30Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6C5TlM",
    "number": 27938,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27938/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27938/timeline",
    "title": "Missing `work done progress token` from client init",
    "updated_at": "2024-04-05T11:24:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27938",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/34526229?v=4",
        "events_url": "https://api.github.com/users/vilelamarcospaulo/events{/privacy}",
        "followers_url": "https://api.github.com/users/vilelamarcospaulo/followers",
        "following_url": "https://api.github.com/users/vilelamarcospaulo/following{/other_user}",
        "gists_url": "https://api.github.com/users/vilelamarcospaulo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vilelamarcospaulo",
        "id": 34526229,
        "login": "vilelamarcospaulo",
        "node_id": "MDQ6VXNlcjM0NTI2MjI5",
        "organizations_url": "https://api.github.com/users/vilelamarcospaulo/orgs",
        "received_events_url": "https://api.github.com/users/vilelamarcospaulo/received_events",
        "repos_url": "https://api.github.com/users/vilelamarcospaulo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vilelamarcospaulo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vilelamarcospaulo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vilelamarcospaulo"
    }
}