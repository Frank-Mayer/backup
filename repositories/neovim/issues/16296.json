{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\nFirst let me acknowledge that this feature would be a bit of a departure from base vim behavior, but I think that it should be fine as long as it is a boolean option that is not the default. \r\n\r\nconsider this short snippet of text:\r\n\r\n```\r\n(short text)\r\n(long text long text long text)\r\n```\r\nWith the cursor starting on the `t` of short entering the command `vi(U` capitalizes the text in the first parentheses. But then pressing `.` while in the second set of parentheses doesn't capitalize everything inside the parentheses, only a segment of text the same size of the content of the first parentheses.  \r\n\r\nMy feature request is for the `.` command do replay visual mode commands as if one were typing out the same key sequence from the cursor position where the `.` command is called.\r\n\r\n\r\nI haven't found a plugin that can do this. I don't know Vimscript or Lua well enough to write one (working on it).  In any case since `.` is such a fundamental operator making a good plugin for it might be difficult. \r\n\r\nOk! That's the request.  Some say it might not be 'the Vim way' but I think it would be a very user friendly and user centric feature.  I know that `gUib` followed by `j.`  would also accomplish what I want in the example above, but it is just an example to demonstrate the potential for a different workflow.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't  think it makes sense to conflate repeat and macros. Dot-repeat repeats the operations; if you want to replay the exact sequence, you should record it as a macro.",
            "created_at": "2021-11-12T09:42:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/16296#issuecomment-966961575",
            "id": 966961575,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16296",
            "node_id": "IC_kwDOAPphoM45oqmn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/966961575/reactions"
            },
            "updated_at": "2021-11-12T09:42:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/966961575",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "Another alternative is to allocate a special register for last visual mode action. So macro is recorded on some special register automatically when we enter visual mode. I try to write my own plugin to do this, but it doesn't work with some surround plugin, since I use ModeChanged `*:n` to automatically exit the macro recording. Some surround plugin like mini surround, go back to normal mode, then use command line mode to execute the action. Maybe the problem is surround is not built in command as well.",
            "created_at": "2023-11-21T12:38:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/16296#issuecomment-1820848428",
            "id": 1820848428,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16296",
            "node_id": "IC_kwDOAPphoM5sh_Es",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1820848428/reactions"
            },
            "updated_at": "2023-11-21T14:35:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1820848428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7076807?v=4",
                "events_url": "https://api.github.com/users/kevyuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/kevyuu/followers",
                "following_url": "https://api.github.com/users/kevyuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/kevyuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kevyuu",
                "id": 7076807,
                "login": "kevyuu",
                "node_id": "MDQ6VXNlcjcwNzY4MDc=",
                "organizations_url": "https://api.github.com/users/kevyuu/orgs",
                "received_events_url": "https://api.github.com/users/kevyuu/received_events",
                "repos_url": "https://api.github.com/users/kevyuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kevyuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kevyuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kevyuu"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16296/comments",
    "created_at": "2021-11-12T09:39:07Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/16296/events",
    "html_url": "https://github.com/neovim/neovim/issues/16296",
    "id": 1051767216,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim core functionality or code",
            "id": 858327504,
            "name": "core",
            "node_id": "MDU6TGFiZWw4NTgzMjc1MDQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/core"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/16296/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM4-sLGw",
    "number": 16296,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/16296/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/16296/timeline",
    "title": "dot \".\" repeat visual mode",
    "updated_at": "2023-11-21T14:35:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/16296",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2414185?v=4",
        "events_url": "https://api.github.com/users/jam1015/events{/privacy}",
        "followers_url": "https://api.github.com/users/jam1015/followers",
        "following_url": "https://api.github.com/users/jam1015/following{/other_user}",
        "gists_url": "https://api.github.com/users/jam1015/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jam1015",
        "id": 2414185,
        "login": "jam1015",
        "node_id": "MDQ6VXNlcjI0MTQxODU=",
        "organizations_url": "https://api.github.com/users/jam1015/orgs",
        "received_events_url": "https://api.github.com/users/jam1015/received_events",
        "repos_url": "https://api.github.com/users/jam1015/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jam1015/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jam1015/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jam1015"
    }
}