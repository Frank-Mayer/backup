{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nFor MS Windows there are multiple file extensions for executable files, like\n\n- exe\n- bat\n- cmd\n- com\n\nThese executable will be automatically found by the Windows system itself, like:\n\n```sh\n$ where winrm\n\nC:\\Windows\\System32\\winrm.cmd\nC:\\Windows\\System32\\winrm.vbs\n```\n\nthe first one found in `%PATH%` or local directory will be run.\n\nNormal \"vim\" implementation also respect these correctly (also when called from lua):\n\n```vim\n: lua print(vim.fn.executable(\"winrm\"))\n\n1\n```\n\nor\n\n```vim\n:lua print(vim.fn.system({\"winrm\"}))\n\nBefehlszeilenprogramm zur Windows-Remoteverwaltung\n\nDie Windows-Remoteverwaltung (WinRM) ist die Microsoft-Implementierung \ndes WS-Verwaltungsprotokolls, das eine sichere Kommunikation \n...\n```\n\nBUT using `vim.system` there will be a self implemented check for the executable file which does not correctly test for all valid extensions (at least not for `.cmd`) :\n\n```vim\n:lua print(vim.inspect(vim.system({\"winrm\"})))\n\nE5108: Error executing lua ...gram Files/Neovim/share/nvim/runtime/lua/vim/_system.lua:244: ENOENT: no such file or directory\nstack traceback:\n\t[C]: in function 'error'\n\t...gram Files/Neovim/share/nvim/runtime/lua/vim/_system.lua:244: in function 'spawn'\n\t...gram Files/Neovim/share/nvim/runtime/lua/vim/_system.lua:335: in function 'system'\n\t[string \":lua\"]:1: in main chunk\n```\n\nwhile giving the full executable with extensions runs fine:\n\n```vim\n:lua print(vim.inspect(vim.system({\"winrm.cmd\"})))\n\n{\n  _state = {\n    cmd = <1>{ \"winrm.cmd\" },\n    done = false,\n    handle = <userdata 1>,\n    pid = 47000,\n    stderr = <userdata 2>,\n    stderr_data = {},\n    stdout = <userdata 3>,\n    stdout_data = {}\n  },\n  cmd = <table 1>,\n  pid = 47000,\n  <metatable> = {\n    __index = {\n      _timeout = <function 1>,\n      is_closing = <function 2>,\n      kill = <function 3>,\n      wait = <function 4>,\n      write = <function 5>\n    }\n  }\n}\n```\n\nAlso the vim function `vim.fn.exepath` behaves normal and gives you the correct path:\n\n```vim\n:lua print(vim.fn.exepath(\"winrm\"))\n\nC:\\Windows\\system32\\winrm.CMD\n```\n\n### Steps to reproduce\n\nsee above\n\n### Expected behavior\n\nAll default executable extensions must be respected.\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-226+g721551210\n\n### Vim (not Nvim) behaves the same?\n\nn/a\n\n### Operating system/version\n\nMS Windows 11\n\n### Terminal name/version\n\nwezterm 20241007-103714-ed430415\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nrepo",
    "closed_at": "2024-11-08T16:29:45Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think this is expected behaviour. `vim.system` is just a wrapper around `vim.uv.spawn`, and I see no reason to give windows special treatment here.\n\n@dundargoc WDYT?",
            "created_at": "2024-11-07T15:38:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/31107#issuecomment-2462552838",
            "id": 2462552838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31107",
            "node_id": "IC_kwDOAPphoM6Sx5MG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2462552838/reactions"
            },
            "updated_at": "2024-11-07T15:40:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2462552838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@lewis6991 This is fundamental IMHO for creating plugins to run on all systems.\n\nLet's assume you want to execute \"npm\" or \"node\" to run some stuff, you'll write\n\n```lua\nvim.system({\"npm\", \"-l\", \"someargs\"})\n```\n\nand everywhere it runs fine (cause alls Un*x favours incl. MacOS) executables names are identical to the callled name.\nWindows needs (like DOS) a fileextension to *mark* what filetype it is and if it should be executable.\n\nSo all executables (binary excutable / script executable) will have a different name on Windows BUT would be called the same.\n\nNo plugin developer will know if it is a .CMD / .BAT wrapper or compiled to .EXE.\n\nTo make it runable everyone needs to call `vim.fn.exepath` in front.\n\nI'm with you it to fix at at `vim.uv.spawn` level!",
            "created_at": "2024-11-07T15:52:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/31107#issuecomment-2462587307",
            "id": 2462587307,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31107",
            "node_id": "IC_kwDOAPphoM6SyBmr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2462587307/reactions"
            },
            "updated_at": "2024-11-07T15:52:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2462587307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15885926?v=4",
                "events_url": "https://api.github.com/users/Grueslayer/events{/privacy}",
                "followers_url": "https://api.github.com/users/Grueslayer/followers",
                "following_url": "https://api.github.com/users/Grueslayer/following{/other_user}",
                "gists_url": "https://api.github.com/users/Grueslayer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Grueslayer",
                "id": 15885926,
                "login": "Grueslayer",
                "node_id": "MDQ6VXNlcjE1ODg1OTI2",
                "organizations_url": "https://api.github.com/users/Grueslayer/orgs",
                "received_events_url": "https://api.github.com/users/Grueslayer/received_events",
                "repos_url": "https://api.github.com/users/Grueslayer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Grueslayer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Grueslayer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Grueslayer",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Needing to provide a .bat suffix isn't uncommon in general, although it's annoying because it adds friction to cross platform solutions like mentioned. I think it should be \"fixed\", but I'm unsure at what level. Might be worth taking a look at exepath to see what it does to circumvent this. Sorry for the vague non-answer, I'd need to do more research first before saying anything definitively.",
            "created_at": "2024-11-08T07:06:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/31107#issuecomment-2463921167",
            "id": 2463921167,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31107",
            "node_id": "IC_kwDOAPphoM6S3HQP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2463921167/reactions"
            },
            "updated_at": "2024-11-08T07:08:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2463921167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31107/comments",
    "created_at": "2024-11-07T12:00:28Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31107/events",
    "html_url": "https://github.com/neovim/neovim/issues/31107",
    "id": 2640821171,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 109461219,
            "name": "platform:windows",
            "node_id": "MDU6TGFiZWwxMDk0NjEyMTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:windows"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31107/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6dZ7uz",
    "number": 31107,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31107/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31107/timeline",
    "title": "vim.system does not respect executable file extensions for MS Windows",
    "updated_at": "2024-11-08T16:29:46Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31107",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15885926?v=4",
        "events_url": "https://api.github.com/users/Grueslayer/events{/privacy}",
        "followers_url": "https://api.github.com/users/Grueslayer/followers",
        "following_url": "https://api.github.com/users/Grueslayer/following{/other_user}",
        "gists_url": "https://api.github.com/users/Grueslayer/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Grueslayer",
        "id": 15885926,
        "login": "Grueslayer",
        "node_id": "MDQ6VXNlcjE1ODg1OTI2",
        "organizations_url": "https://api.github.com/users/Grueslayer/orgs",
        "received_events_url": "https://api.github.com/users/Grueslayer/received_events",
        "repos_url": "https://api.github.com/users/Grueslayer/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Grueslayer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Grueslayer/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Grueslayer",
        "user_view_type": "public"
    }
}