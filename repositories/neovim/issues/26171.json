{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\n```\r\n#1  0x00007f1f99fb915f in __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78\r\n#2  0x00007f1f99f6b472 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\r\n#3  0x00007f1f99f554b2 in __GI_abort () at ./stdlib/abort.c:79\r\n#4  0x00007f1f99f553d5 in __assert_fail_base (fmt=0x7f1f9a0c9dc8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x564a1bc65a40 \"kv_size(decor_state.active) == 0\", \r\n    file=file@entry=0x564a1bc659d8 \".../src/nvim/decoration_provider.c\", line=line@entry=127, function=function@entry=0x564a1bc06590 <__PRETTY_FUNCTION__.1.lto_priv.12> \"decor_providers_invoke_win\")\r\n    at ./assert/assert.c:92\r\n#5  0x00007f1f99f643a2 in __assert_fail (assertion=assertion@entry=0x564a1bc65a40 \"kv_size(decor_state.active) == 0\", file=file@entry=0x564a1bc659d8 \".../src/nvim/decoration_provider.c\", line=line@entry=127, \r\n    function=function@entry=0x564a1bc06590 <__PRETTY_FUNCTION__.1.lto_priv.12> \"decor_providers_invoke_win\") at ./assert/assert.c:101\r\n#6  0x0000564a1b8fe2a1 in decor_providers_invoke_win (wp=<optimized out>, providers=<optimized out>, line_providers=0x7fff83d4f060) at .../src/nvim/decoration_provider.c:127\r\n#7  0x0000564a1b90f4af in win_update (wp=wp@entry=0x564a1bdf9be0, providers=providers@entry=0x7fff83d4f0f0) at .../src/nvim/drawscreen.c:2338\r\n#8  0x0000564a1b910106 in update_screen () at .../src/nvim/drawscreen.c:645\r\n#9  0x0000564a1b9fe9ab in normal_redraw (s=s@entry=0x7fff83d4f1d0) at .../src/nvim/normal.c:1347\r\n#10 0x0000564a1ba00630 in normal_check (state=0x7fff83d4f1d0) at .../src/nvim/normal.c:1443\r\n#11 0x0000564a1ba9ec53 in state_enter (s=0x7fff83d4f1d0) at .../src/nvim/state.c:35\r\n#12 0x0000564a1b9fe20a in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at .../src/nvim/normal.c:508\r\n#13 0x0000564a1b88c091 in main (argc=3, argv=<optimized out>) at .../src/nvim/main.c:630\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nWith the following `init.lua`\r\n```lua\r\nlocal thisInitFile = debug.getinfo(1).source:match('@?(.*)')\r\nlocal configDir = vim.fs.dirname(thisInitFile)\r\n\r\nvim.env['XDG_CONFIG_HOME'] = configDir\r\nvim.env['XDG_DATA_HOME'] = vim.fs.joinpath(configDir, '.xdg/data')\r\nvim.env['XDG_STATE_HOME'] = vim.fs.joinpath(configDir, '.xdg/state')\r\nvim.env['XDG_CACHE_HOME'] = vim.fs.joinpath(configDir, '.xdg/cache')\r\nlocal stdPathConfig = vim.fn.stdpath('config')\r\n\r\nvim.opt.runtimepath:prepend(stdPathConfig)\r\nvim.opt.packpath:prepend(stdPathConfig)\r\n\r\nlocal function gitClone(url, installPath, branch)\r\n  if vim.fn.isdirectory(installPath) ~= 0 then\r\n    return\r\n  end\r\n\r\n  local command = {'git', 'clone', '--depth=1', '--', url, installPath}\r\n  if branch then\r\n    table.insert(command, 3, '--branch')\r\n    table.insert(command, 4, branch)\r\n  end\r\n  local sysObj = vim.system(command, {}):wait()\r\n  if sysObj.code ~= 0 then\r\n    error(sysObj.stderr)\r\n  end\r\n  vim.notify(sysObj.stdout)\r\n  vim.notify(sysObj.stderr, vim.log.levels.WARN)\r\nend\r\n\r\nlocal pluginsPath = 'plugins'\r\nvim.fn.mkdir(pluginsPath, 'p')\r\npluginsPath = vim.uv.fs_realpath(pluginsPath)\r\n\r\nlocal plugins = {\r\n  ['statuscol.nvim'] = {url = 'https://github.com/luukvbaal/statuscol.nvim', branch = 'main'},\r\n}\r\n\r\nfor name, repo in pairs(plugins) do\r\n  local installPath = vim.fs.joinpath(pluginsPath, name)\r\n  gitClone(repo.url, installPath, repo.branch)\r\n  vim.opt.runtimepath:append(installPath)\r\nend\r\n\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = {'lua'},\r\n  group = vim.api.nvim_create_augroup('luals', {}),\r\n  callback = function (args)\r\n    vim.treesitter.start(args.buf, 'lua')\r\n    vim.lsp.start({\r\n      name = 'luals',\r\n      filetype = 'lua',\r\n      cmd = {'lua-language-server'},\r\n      root_dir = vim.fs.dirname(vim.fs.find({'.luarc.jsonc', '.git'}, {path = args.file, upward = true})[1]),\r\n      single_file_support = true,\r\n      log_level = vim.lsp.protocol.MessageType.Warning,\r\n    })\r\n  end,\r\n})\r\n\r\nvim.api.nvim_create_autocmd('BufEnter', {\r\n  callback = function (args)\r\n    local ns = vim.api.nvim_create_namespace('signs')\r\n    vim.api.nvim_buf_set_extmark(args.buf, ns, 0, 0, {\r\n      sign_text = 'X',\r\n      id = 2,\r\n      sign_hl_group = 'DiagnosticError',\r\n    })\r\n  end\r\n})\r\n\r\nlocal function init()\r\n  vim.opt.number = true\r\n  vim.cmd.colorscheme 'habamax'\r\n  require('statuscol').setup({\r\n    segments = {\r\n      {\r\n        sign = {name = {'.*'}, maxwidth = 1, colwidth = 1, auto = true},\r\n        click = 'v:lua.ScSa'\r\n      },\r\n    }\r\n  })\r\nend\r\n\r\nvim.api.nvim_create_autocmd('UIEnter', {\r\n  once = true,\r\n  callback = init,\r\n})\r\n```\r\nand `nvim --clean -u init.lua init.lua` nvim dies immediately for me. \r\n\r\nThe master branch of statuscol.nvim was left intentionally here. I know `0.10` should be used to trying the recent changes but that's a different topic.\r\n\r\n### Expected behavior\r\n\r\nNo crash\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1630+gc126a3756\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\n-\r\n\r\n### Operating system/version\r\n\r\nDebian Sid\r\n\r\n### Terminal name/version\r\n\r\nkitty 0.31 + tmux 3.3a-5\r\n\r\n### $TERM environment variable\r\n\r\ntmux-256color\r\n\r\n### Installation\r\n\r\nfrom repo\r\n\r\nedit: commented below",
    "closed_at": "2023-11-23T16:27:18Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I didn't noticed quick copy-paste error from some my previous repro. There is a pointless thing there (`require` below `callback`) but it makes the crash :grin: \r\n\r\nFixed version still reproduces the crash so I made the changes above. ",
            "created_at": "2023-11-23T14:31:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/26171#issuecomment-1824533047",
            "id": 1824533047,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26171",
            "node_id": "IC_kwDOAPphoM5swCo3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824533047/reactions"
            },
            "updated_at": "2023-11-23T14:36:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824533047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Minimal repro:\r\n```lua\r\nlocal ns = vim.api.nvim_create_namespace('')\r\n\r\nvim.api.nvim_set_decoration_provider(ns, {\r\n  on_win = function(_, _, _, _, _)\r\n    vim.api.nvim_buf_set_extmark(0, ns, 0, 0, {\r\n      virt_text = { { 'foo' } },\r\n      ephemeral = true,\r\n    })\r\n  end\r\n})\r\n\r\nvim.api.nvim_buf_set_lines(0, 0, -1, true, { '', '' })\r\n\r\nvim.o.number = true\r\nvim.o.statuscolumn = [[%{repeat('#', float2nr(10 / v:lnum))}]]\r\n```",
            "created_at": "2023-11-23T14:51:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/26171#issuecomment-1824562495",
            "id": 1824562495,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26171",
            "node_id": "IC_kwDOAPphoM5swJ0_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824562495/reactions"
            },
            "updated_at": "2023-11-23T14:53:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824562495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26171/comments",
    "created_at": "2023-11-23T14:21:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26171/events",
    "html_url": "https://github.com/neovim/neovim/issues/26171",
    "id": 2008326869,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains minimal reproducing steps",
            "id": 435851959,
            "name": "has:repro",
            "node_id": "MDU6TGFiZWw0MzU4NTE5NTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:repro"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "sign/number column",
            "id": 2962322085,
            "name": "column",
            "node_id": "MDU6TGFiZWwyOTYyMzIyMDg1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/column"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26171/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 190,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 131,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-11-23T22:52:52Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM53tKLV",
    "number": 26171,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26171/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26171/timeline",
    "title": "crash: decor_providers_invoke_win: Assertion `kv_size(decor_state.active) == 0' failed.  ",
    "updated_at": "2023-11-23T16:27:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26171",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia"
    }
}