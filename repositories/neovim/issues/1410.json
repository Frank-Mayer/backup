{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "clang-format in Neovim is noticeable slower when used on big files compared to Vim.\n\nTesting on src/nvim/eval.c, formating the whole file:\n\n``` vim\n:let start=reltime()| execute \"1,$ pyf /path/to/clang-format.py\" |echo 'system() = ' . reltimestr(reltime(start))\n```\n\nNeovim: ~12.9s\nVim      : ~0.6s\n\nWhere does this slowdown come from?\n\nNeovim version: 4cc26fba249361cccd791a76fc35c46d851096a5\nBuild command: rm -rf build/ && make cmake CFLAGS='-Wno-error -DNDEBUG -O3 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1' && make -j5\n\nclang-format version 3.6.0 (http://llvm.org/git/clang.git f65002072fe308f93a0ef04054b56218b00c2a34) (http://llvm.org/git/llvm.git 84dc1b5c92becc0c7f87d0e16afa57e0bcf84dd4)\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "From a first look, I can't spot anything in that PR that could affect the performance of a python plugin designed for vim(they don't even use notifications), is clang-format.py fast in @5f99be1efe7eff66c947e10eeb6138bb06f070d2 (the commit which enabled ranges in `pyfile`)?\n",
            "created_at": "2014-11-06T09:05:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-61946370",
            "id": 61946370,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQ2Mzcw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61946370/reactions"
            },
            "updated_at": "2014-11-06T09:05:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61946370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Before @5f99be1 clang-format could not be used with Neovim. No speed changes (slow) at this commit compared to newer commits.\n",
            "created_at": "2014-11-06T09:15:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-61947343",
            "id": 61947343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQ3MzQz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61947343/reactions"
            },
            "updated_at": "2014-11-06T09:15:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61947343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, I misunderstood your comment.\n\nI believe this may be a problem with the python client. Can you test if this patch(on the python client) fixes the problem? You can apply it directly to the place where the pip/neovim module is installed:\n\n``` diff\ndiff --git a/neovim/api/buffer.py b/neovim/api/buffer.py\nindex b3ba292..20e2423 100644\n--- a/neovim/api/buffer.py\n+++ b/neovim/api/buffer.py\n@@ -181,8 +181,11 @@ class Range(object):\n         self._buffer[start:end] = lines\n\n     def __iter__(self):\n-        for i in range(self.start, self.end):\n-            yield self._buffer[i]\n+        lines = self._session.request('buffer_get_line_slice',\n+                                      self._buffer, self.start,\n+                                      self.end, True, True)\n+        for line in lines:\n+            yield line\n\n     def append(self, lines, i=None):\n         i = self._normalize_index(i)\n```\n",
            "created_at": "2014-11-06T09:17:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-61947643",
            "id": 61947643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQ3NjQz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61947643/reactions"
            },
            "updated_at": "2014-11-06T09:17:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61947643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "clang-format is still slow after applying this patch.\n",
            "created_at": "2014-11-06T09:38:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-61950578",
            "id": 61950578,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTUwNTc4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61950578/reactions"
            },
            "updated_at": "2014-11-06T09:38:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61950578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> clang-format is still slow after applying this patch.\n\nOk, later I will install this plugin run a profiler and try to find the bottleneck.\n",
            "created_at": "2014-11-06T13:12:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-61976382",
            "id": 61976382,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTc2Mzgy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61976382/reactions"
            },
            "updated_at": "2014-11-06T13:12:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/61976382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just a sanity check: is neovim compiled with at least `-O2` optimization?\n",
            "created_at": "2014-11-06T18:55:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-62030809",
            "id": 62030809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDMwODA5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62030809/reactions"
            },
            "updated_at": "2014-11-06T18:55:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62030809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38515?v=4",
                "events_url": "https://api.github.com/users/splinterofchaos/events{/privacy}",
                "followers_url": "https://api.github.com/users/splinterofchaos/followers",
                "following_url": "https://api.github.com/users/splinterofchaos/following{/other_user}",
                "gists_url": "https://api.github.com/users/splinterofchaos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/splinterofchaos",
                "id": 38515,
                "login": "splinterofchaos",
                "node_id": "MDQ6VXNlcjM4NTE1",
                "organizations_url": "https://api.github.com/users/splinterofchaos/orgs",
                "received_events_url": "https://api.github.com/users/splinterofchaos/received_events",
                "repos_url": "https://api.github.com/users/splinterofchaos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/splinterofchaos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/splinterofchaos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/splinterofchaos"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, build command contains `-O3`.\n",
            "created_at": "2014-11-06T18:56:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-62031068",
            "id": 62031068,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDMxMDY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62031068/reactions"
            },
            "updated_at": "2014-11-06T18:56:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62031068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Yes, build command contains -O3.\n\nJust as an aside, I've seen some gcc version output some pretty weird stuff with `-O3`, and sometimes downright incorrect things. Granted, this was with C++, which is notably more difficult to compile. Still, I'd go for either `-O2` or `-Os`, perhaps with a `-march=native` switch for that extra speed-boost.\n",
            "created_at": "2014-11-07T10:32:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-62124915",
            "id": 62124915,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTI0OTE1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62124915/reactions"
            },
            "updated_at": "2014-11-07T10:32:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62124915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Just as an aside, I've seen some gcc version output some pretty weird stuff with -O3, and sometimes downright incorrect things.\n\nI've seen that too, and am (still) surprised that CMake chooses to use -O3 by default for release builds.  I've been tempted to do the following in Neovim for a while:\n\n``` cmake\nset(CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE} -O2\")\n```\n\nIt ends up with slightly confusing output because you'll see the `-O3` in there, but if you continue looking you'll see the `-O2` come slightly later.  I do this on several projects at work using CMake.  How would you feel about us doing that in our build?\n",
            "created_at": "2014-11-07T10:39:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-62125592",
            "id": 62125592,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTI1NTky",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62125592/reactions"
            },
            "updated_at": "2014-11-07T10:39:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62125592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/448087?v=4",
                "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}",
                "followers_url": "https://api.github.com/users/jszakmeister/followers",
                "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}",
                "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jszakmeister",
                "id": 448087,
                "login": "jszakmeister",
                "node_id": "MDQ6VXNlcjQ0ODA4Nw==",
                "organizations_url": "https://api.github.com/users/jszakmeister/orgs",
                "received_events_url": "https://api.github.com/users/jszakmeister/received_events",
                "repos_url": "https://api.github.com/users/jszakmeister/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jszakmeister"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It ends up with slightly confusing output because you'll see the -O3 in there, but if you continue looking you'll see the -O2 come slightly later. I do this on several projects at work using CMake. How would you feel about us doing that in our build?\n\nEven thought it looks a tad bit uglier, I think it's a worthwhile thing to rule out most compiler errors. Also, standard vim seems to understand release mode as `-Os`, perhaps because that's good for the type of code we have in Vim. Both seem good.\n",
            "created_at": "2014-11-07T10:42:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-62125837",
            "id": 62125837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTI1ODM3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62125837/reactions"
            },
            "updated_at": "2014-11-07T10:42:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62125837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Even thought it looks a tad bit uglier, I think it's a worthwhile thing to rule out most compiler errors. Also, standard vim seems to understand release mode as -Os, perhaps because that's good for the type of code we have in Vim. Both seem good.\n\nI personally would rather use `-O2`.  `-Os` leaves out a few things to save space, and the little extra speed bump is nice--though modern processors are closing the gap these days. :-)\n",
            "created_at": "2014-11-07T10:44:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-62126133",
            "id": 62126133,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTI2MTMz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62126133/reactions"
            },
            "updated_at": "2014-11-07T10:44:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/62126133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/448087?v=4",
                "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}",
                "followers_url": "https://api.github.com/users/jszakmeister/followers",
                "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}",
                "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jszakmeister",
                "id": 448087,
                "login": "jszakmeister",
                "node_id": "MDQ6VXNlcjQ0ODA4Nw==",
                "organizations_url": "https://api.github.com/users/jszakmeister/orgs",
                "received_events_url": "https://api.github.com/users/jszakmeister/received_events",
                "repos_url": "https://api.github.com/users/jszakmeister/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jszakmeister"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@oni-link Is this still an issue?\n",
            "created_at": "2015-08-18T02:16:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-132037641",
            "id": 132037641,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjAzNzY0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/132037641/reactions"
            },
            "updated_at": "2015-08-18T02:16:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/132037641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes, it is. New measurements for nvim with 'Debug' and 'Release' mode give `14.0` seconds, for vim I get `0.7` seconds.\n",
            "created_at": "2015-08-18T07:31:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-132102676",
            "id": 132102676,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjEwMjY3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/132102676/reactions"
            },
            "updated_at": "2015-08-18T07:31:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/132102676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Measuring the time for formating all of `eval.c` directly in the [clang-format.py](https://github.com/llvm-mirror/clang/blob/master/tools/clang-format/clang-format.py), I found that the following loop accounts for nearly the total time of `14s`:\n\n``` py\n    sequence = difflib.SequenceMatcher(None, vim.current.buffer, lines)\n    for op in reversed(sequence.get_opcodes()):\n      if op[0] is not 'equal':\n        vim.current.buffer[op[1]:op[2]] = lines[op[3]:op[4]]\n```\n\nEvery use of `vim.current.buffer` takes approx. `10^-4s` ( for vim it is `10^-5s...10^-7s`) and accounts for `0.1s` ( ~`1000` times called).\nLooks like the use of `vim.current.buffer` in `sequence = difflib.SequenceMatcher(None, vim.current.buffer, lines)` is the problem here.\nTo speed up the computation of `op`, I replaced `vim.current.buffer` with the buffer content in `difflib.Sequence(...)`:\n\n``` diff\ndiff --git a/tools/clang-format/clang-format.py b/tools/clang-format/clang-format.py\nindex 5cb41fc..4c2dd75 100644\n--- a/tools/clang-format/clang-format.py\n+++ b/tools/clang-format/clang-format.py\n@@ -49,8 +49,8 @@ if vim.eval('exists(\"g:clang_format_fallback_style\")') == \"1\":\n\n def main():\n   # Get the current text.\n-  buf = vim.current.buffer\n-  text = '\\n'.join(buf)\n+  buf_lines = vim.current.buffer[:]\n+  text = '\\n'.join(buf_lines)\n\n   # Determine range to format.\n   if vim.eval('exists(\"l:lines\")') == '1':\n@@ -95,7 +95,7 @@ def main():\n     lines = stdout.split('\\n')\n     output = json.loads(lines[0])\n     lines = lines[1:]\n-    sequence = difflib.SequenceMatcher(None, vim.current.buffer, lines)\n+    sequence = difflib.SequenceMatcher(None, buf_lines, lines)\n     for op in reversed(sequence.get_opcodes()):\n       if op[0] is not 'equal':\n         vim.current.buffer[op[1]:op[2]] = lines[op[3]:op[4]]\n```\n\nThat brought the total time down from `14.55s` to `0.807s`. That is comparable with vims `0.703s`.\n\nDo we have a problem with slow API functions? Is this fixable in neovim?\n",
            "created_at": "2016-07-03T11:41:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-230149087",
            "id": 230149087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE0OTA4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/230149087/reactions"
            },
            "updated_at": "2016-07-03T11:41:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/230149087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do we have a problem with slow API functions? Is this fixable in neovim?\n\nTL;DR It might be possible to fix in the python host.\n\nIt seems the difference is caused by the overhead of IPC(serialization/copy/deserialization), and if so, the clang script has hit a limitation of Neovim emulation of vim's python API: A plugin can't send IPC requests in a loop as if it was calling a function in the same process.\n\nI once had the same problem with another plugin(I think it was YCM) that used `:pydo` to process lines, my solution was to cache the lines in the python process to mitigate the IPC overhead: https://github.com/neovim/python-client/blob/4f9d930ebb110eeeacc7129366bfde3c86c72448/neovim/plugin/script_host.py#L108-L111\n\nThe caching approach is relatively safe because when nvim is sending requests to a plugin host, it blocks until the initial request returns and only handles requests from the host which received the request, so it is very unlikely that the buffer will have its contents changed.\n\nI say unlikely because it is still possible for the plugin to execute a command that is implemented by another plugin host, which could modify the contents before the request to the python host is finished(Neovim would temporarily switch to handling requests from the new host), causing the cache to be outdated.\n\nA way to make the caching approach more robust would be to have neovim send an \"invalidate\" notification to all hosts that are currently processing a request but are not the active plugin host, such notification could be used to invalidate the host caches.\n",
            "created_at": "2016-07-03T12:20:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-230150669",
            "id": 230150669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE1MDY2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/230150669/reactions"
            },
            "updated_at": "2016-07-03T12:20:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/230150669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> the overhead of IPC(serialization/copy/deserialization), \n\nThere is also the cost of roundtrips (context switches in this case). That `SequenceMatcher` would have two context-switches not only per line, but per _line_ _access_, which probably dwarfs the cost of just copying the data.\n\n> send an \"invalidate\" notification to all hosts.\n\nAlso for `vim.current` it seems reasonable to use update notifications (in this case not only \"invalidation\", but the actual value) instead of two context switches per `vim.current.buffer`. In an async context we are, well, async anyway and it is enough to be \"eventually consistent\" and for sync requests we need to make sure to send the notification to that client before the request itself, and if the value was changed in a nested request, before the reply is sent to the client. For a naive plugin that does `vim.current.buffer[i]` this will already halve the cost.\n",
            "created_at": "2016-07-03T16:52:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-230163006",
            "id": 230163006,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDE2MzAwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/230163006/reactions"
            },
            "updated_at": "2016-07-03T16:52:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/230163006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "Any workarounds yet? I am still seeing this on Ubuntu 18, with NVIM v0.4.4.",
            "created_at": "2020-08-27T23:12:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-682237040",
            "id": 682237040,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjIzNzA0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/682237040/reactions"
            },
            "updated_at": "2020-08-27T23:12:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/682237040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1426352?v=4",
                "events_url": "https://api.github.com/users/amandeepgautam/events{/privacy}",
                "followers_url": "https://api.github.com/users/amandeepgautam/followers",
                "following_url": "https://api.github.com/users/amandeepgautam/following{/other_user}",
                "gists_url": "https://api.github.com/users/amandeepgautam/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amandeepgautam",
                "id": 1426352,
                "login": "amandeepgautam",
                "node_id": "MDQ6VXNlcjE0MjYzNTI=",
                "organizations_url": "https://api.github.com/users/amandeepgautam/orgs",
                "received_events_url": "https://api.github.com/users/amandeepgautam/received_events",
                "repos_url": "https://api.github.com/users/amandeepgautam/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amandeepgautam/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amandeepgautam/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amandeepgautam"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@amandeepgautam [clang_format.py](https://github.com/llvm-mirror/clang/blob/master/tools/clang-format/clang-format.py) is pretty simple, so a reasonable workaround would be to rewrite it in Lua (which runs in-process in Nvim, unless Python).",
            "created_at": "2020-08-30T04:53:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-683376196",
            "id": 683376196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzM3NjE5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/683376196/reactions"
            },
            "updated_at": "2020-08-30T04:53:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/683376196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk Would plugins be any different? ex: https://github.com/andreyorst/SimpleClangFormat.vim or https://github.com/sbdchd/neoformat or https://vimawesome.com/plugin/vim-clang-format.",
            "created_at": "2020-08-30T05:34:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-683378932",
            "id": 683378932,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzM3ODkzMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/683378932/reactions"
            },
            "updated_at": "2020-08-30T05:35:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/683378932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1426352?v=4",
                "events_url": "https://api.github.com/users/amandeepgautam/events{/privacy}",
                "followers_url": "https://api.github.com/users/amandeepgautam/followers",
                "following_url": "https://api.github.com/users/amandeepgautam/following{/other_user}",
                "gists_url": "https://api.github.com/users/amandeepgautam/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amandeepgautam",
                "id": 1426352,
                "login": "amandeepgautam",
                "node_id": "MDQ6VXNlcjE0MjYzNTI=",
                "organizations_url": "https://api.github.com/users/amandeepgautam/orgs",
                "received_events_url": "https://api.github.com/users/amandeepgautam/received_events",
                "repos_url": "https://api.github.com/users/amandeepgautam/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amandeepgautam/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amandeepgautam/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amandeepgautam"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would plugins be any different? ex: https://github.com/andreyorst/SimpleClangFormat.vim or https://github.com/sbdchd/neoformat or https://vimawesome.com/plugin/vim-clang-format.\r\n\r\nthis issue is specifically about clang_format.py which is calling back-and-forth many times between nvim and python.  If those plugins use clang_format.py then they will have the same issue...",
            "created_at": "2020-08-30T05:50:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-683379898",
            "id": 683379898,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzM3OTg5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/683379898/reactions"
            },
            "updated_at": "2020-08-30T05:50:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/683379898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is this really an issue still?\r\n\r\nI ran the command on eval.c with the latest [clang-format.py](https://github.com/llvm/llvm-project/blob/main/clang/tools/clang-format/clang-format.py) and I get ~4s on eval.c in both neovim and vim. And after formated once i get ~1s",
            "created_at": "2024-04-14T15:23:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/1410#issuecomment-2054096779",
            "id": 2054096779,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/1410",
            "node_id": "IC_kwDOAPphoM56bweL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2054096779/reactions"
            },
            "updated_at": "2024-04-14T15:23:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2054096779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53407525?v=4",
                "events_url": "https://api.github.com/users/OscarCreator/events{/privacy}",
                "followers_url": "https://api.github.com/users/OscarCreator/followers",
                "following_url": "https://api.github.com/users/OscarCreator/following{/other_user}",
                "gists_url": "https://api.github.com/users/OscarCreator/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/OscarCreator",
                "id": 53407525,
                "login": "OscarCreator",
                "node_id": "MDQ6VXNlcjUzNDA3NTI1",
                "organizations_url": "https://api.github.com/users/OscarCreator/orgs",
                "received_events_url": "https://api.github.com/users/OscarCreator/received_events",
                "repos_url": "https://api.github.com/users/OscarCreator/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/OscarCreator/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/OscarCreator/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/OscarCreator"
            }
        }
    ],
    "comments": 21,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/1410/comments",
    "created_at": "2014-11-06T08:35:29Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/1410/events",
    "html_url": "https://github.com/neovim/neovim/issues/1410",
    "id": 47935374,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 144672485,
            "name": "provider",
            "node_id": "MDU6TGFiZWwxNDQ2NzI0ODU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/provider"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "waiting for reply from the author",
            "id": 248229439,
            "name": "needs:response",
            "node_id": "MDU6TGFiZWwyNDgyMjk0Mzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:response"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/1410/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 220,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 236,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2024-04-15T10:49:18Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU0NzkzNTM3NA==",
    "number": 1410,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/1410/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/1410/timeline",
    "title": "clang-format slow on big files compared to vim",
    "updated_at": "2024-04-14T15:55:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/1410",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
        "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
        "followers_url": "https://api.github.com/users/oni-link/followers",
        "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
        "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/oni-link",
        "id": 2077655,
        "login": "oni-link",
        "node_id": "MDQ6VXNlcjIwNzc2NTU=",
        "organizations_url": "https://api.github.com/users/oni-link/orgs",
        "received_events_url": "https://api.github.com/users/oni-link/received_events",
        "repos_url": "https://api.github.com/users/oni-link/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/oni-link"
    }
}