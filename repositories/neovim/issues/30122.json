{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nWhen calling `vim.lsp.buf.incoming_calls()` or `vim.lsp.buf.outgoing_calls()` when more than one candidate symbol matches at the cursor, `runtime/lua/vim/lsp/buf.lua::pick_call_hierarchy_item()` asks the user to select one via `vim.fn.inputlist()`, then returns the index instead of the value, which gets passed to the language server, triggering an error like this:\r\n```\r\nbugged-ls: -32602: Failed to deserialize callHierarchy/incomingCalls: invalid type: integer `1`, expected struct CallHierarchyItem; {\"item\":1}\r\n```\r\nThis error comes from `rust-analyzer`, but most or all language servers are likely to complain in some way, for obvious reasons.\r\n\r\nThe offending line is line 467 here:\r\nhttps://github.com/neovim/neovim/blob/6af9ca4926e05ac698d828ab6aeef2f45ccccdf8/runtime/lua/vim/lsp/buf.lua#L463-L467\r\n\r\nThis patch fixes the issue:\r\n```patch\r\n--- runtime/lua/vim/lsp/buf.lua\t2024-08-23 14:33:38.790772646 +1200\r\n+++ runtime/lua/vim/lsp/buf.lua\t2024-08-23 14:35:39.631982250 +1200\r\n@@ -464,7 +464,7 @@\r\n   if choice < 1 or choice > #items then\r\n     return\r\n   end\r\n-  return choice\r\n+  return call_hierarchy_items[choice]\r\n end\r\n \r\n --- @param method string\r\n```\r\n\r\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\r\n\r\nThis assumes `rust-analyzer` is installed and accessible in `$PATH`, but the issue should be reproducible with any language server, provided the language you are testing with can express a function call with more than one possible symbol resolution.\r\n\r\nIn a suitable scratch directory, create these files:\r\n\r\n`minimal_init.lua`\r\n```lua\r\nlocal pattern = 'rust'\r\nlocal cmd = {'rust-analyzer'}\r\nlocal root_marker = 'Cargo.toml'\r\n\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = pattern,\r\n  callback = function(args)\r\n    local match = vim.fs.find(root_marker, { path = args.file, upward = true })[1]\r\n    local root_dir = match and vim.fn.fnamemodify(match, ':p:h') or nil\r\n    vim.lsp.start({\r\n      name = 'bugged-ls',\r\n      cmd = cmd,\r\n      root_dir = root_dir,\r\n    })\r\n  end\r\n})\r\n```\r\n\r\n`Cargo.toml`\r\n```toml\r\n[package]\r\nname = \"nvim_lsp_repro\"\r\nversion = \"0.1.0\"\r\nedition = \"2021\"\r\n```\r\n\r\n`src/lib.rs`\r\n```rust\r\nmacro_rules! make_fn {\r\n    ($block:block) => {\r\n        pub fn foo_func() $block\r\n    }\r\n}\r\n\r\nmake_fn!({});\r\n\r\npub fn calls_func() {\r\n    foo_func();\r\n}\r\n```\r\n\r\nRun `nvim --clean -u minimal_init.lua src/lib.rs`, then:\r\n1. Place the cursor on the call to `foo_func()` (`131go`)\r\n2. Run `:lua vim.lsp.buf.incoming_calls()`\r\n3. Select either of the two list items with `1<cr>` or `2<cr>`\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.10.1\r\n\r\n### Language server name/version\r\n\r\nrust-analyzer 1.80.0-nightly (791adf7 2024-05-21)\r\n\r\n### Operating system/version\r\n\r\nArch Linux up-to-date as of 2024-08-18\r\n\r\n### Log file\r\n\r\n_No response_",
    "closed_at": "2024-08-26T15:37:37Z",
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30122/comments",
    "created_at": "2024-08-23T05:01:35Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30122/events",
    "html_url": "https://github.com/neovim/neovim/issues/30122",
    "id": 2482314240,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30122/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6T9RwA",
    "number": 30122,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30122/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30122/timeline",
    "title": "LSP incoming/outgoing calls triggers error when selecting from multiple symbols at cursor",
    "updated_at": "2024-08-26T15:37:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30122",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/42310725?v=4",
        "events_url": "https://api.github.com/users/Diomendius/events{/privacy}",
        "followers_url": "https://api.github.com/users/Diomendius/followers",
        "following_url": "https://api.github.com/users/Diomendius/following{/other_user}",
        "gists_url": "https://api.github.com/users/Diomendius/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Diomendius",
        "id": 42310725,
        "login": "Diomendius",
        "node_id": "MDQ6VXNlcjQyMzEwNzI1",
        "organizations_url": "https://api.github.com/users/Diomendius/orgs",
        "received_events_url": "https://api.github.com/users/Diomendius/received_events",
        "repos_url": "https://api.github.com/users/Diomendius/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Diomendius/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Diomendius/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Diomendius"
    }
}