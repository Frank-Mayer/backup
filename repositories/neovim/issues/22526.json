{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nWhen adding text with `vim.api.nvim_buf_set_text()` just to the left of cursor, it doesn't adjust cursor to stay relative to the same character. When adding text in any other place, this holds true.\n\n### Steps to reproduce\n\n1. `nvim --clean -u NONE`\r\n2. Create text `abcd` and place cursor on `c`.\r\n3. Execute one of the following:\r\n    3.1 `:lua vim.api.nvim_buf_set_text(0, 0, 0, 0, 0, { 'xxx' })`. This results into `xxxabcd` and cursor still on `c`.\r\n    3.2 `:lua vim.api.nvim_buf_set_text(0, 0, 1, 0, 1, { 'xxx' })`. This results into `axxxbcd` and cursor still on `c`.\r\n    3.3 `:lua vim.api.nvim_buf_set_text(0, 0, 2, 0, 2, { 'xxx' })`. This results into `abxxxcd` **but cursor is on first `x`**.\r\n    3.4 `:lua vim.api.nvim_buf_set_text(0, 0, 3, 0, 3, { 'xxx' })`. This results into `abcxxxd` and cursor still on `c`.\n\n### Expected behavior\n\nCursor is always adjusted to stay on its relative initial position.\n\n### Neovim version (nvim -v)\n\nNVIM v0.9.0-dev-1100+g1dd2424b1\n\n### Vim (not Nvim) behaves the same?\n\nNo (doesn't have this functionality)\n\n### Operating system/version\n\nEndeavourOS Linux x86_64 (6.1.12-arch1-1)\n\n### Terminal name/version\n\nst-0.9\n\n### $TERM environment variable\n\nst-256color\n\n### Installation\n\nappimage",
    "closed_at": "2023-09-11T08:45:51Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Unfortunately there is no gravity behavior which is universally correct. the current behavior preserves the position used by `i` (and already being in insert mode), but not of `a` or `x` (the latter of which the cursor being \"on\" a character interpretation makes sense). We can flip the behavior if we so want, but then the situation would be the reverse (`i` and insert mode would no longer be on the \"same character\" anymore).",
            "created_at": "2023-03-04T19:24:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/22526#issuecomment-1454848962",
            "id": 1454848962,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22526",
            "node_id": "IC_kwDOAPphoM5WtzvC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1454848962/reactions"
            },
            "updated_at": "2023-03-04T19:24:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1454848962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Unfortunately there is no gravity behavior which is universally correct. the current behavior preserves the position used by `i` (and already being in insert mode), but not of `a` or `x` (the latter of which the cursor being \"on\" a character interpretation makes sense). We can flip the behavior if we so want, but then the situation would be the reverse (`i` and insert mode would no longer be on the \"same character\" anymore).\r\n\r\nYes, I see the reasoning. And indeed, if done when in Insert mode, it does behave coherent.\r\n\r\nI would argue that more frequent use case for `nvim_buf_set_test()` is not for when Insert mode is active, though. Might be wrong, but this is my experience.\r\n\r\nAlso I would argue that having cursor shifted even in Insert mode is least unexpected than not shifted in Normal mode. Like this is also acceptable when executing `vim.api.nvim_buf_set_text(0, 0, 2, 0, 2, {'xxx'})` and cursor is `c` in Insert mode:\r\n\r\n```\r\n  ⎸          ⎸ \r\nabcd -> abxxxcd\r\n```",
            "created_at": "2023-03-04T19:42:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/22526#issuecomment-1454853684",
            "id": 1454853684,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22526",
            "node_id": "IC_kwDOAPphoM5Wt040",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1454853684/reactions"
            },
            "updated_at": "2023-03-04T19:42:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1454853684",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "that doesn't apply to deleting in insert mode tho.",
            "created_at": "2023-03-04T19:53:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/22526#issuecomment-1454856404",
            "id": 1454856404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22526",
            "node_id": "IC_kwDOAPphoM5Wt1jU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1454856404/reactions"
            },
            "updated_at": "2023-03-04T19:53:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1454856404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> that doesn't apply to deleting in insert mode tho.\r\n\r\nNot sure what you meant here, but did some additional tests for delete/replace in Insert mode. And there are also some inconsistencies there.\r\n\r\n1. Create mapping `:inoremap <M-m> <Cmd>lua vim.api.nvim_buf_set_text(0, 0, 1, 0, 2, {'xxx'})<CR>`\r\n2. Create `abcd` text, put cursor on `c`, and start Insert mode with `i`.\r\n3. Press `<M-m>`. Text becomes `axxxcd` and cursor is before second `x`, i.e. not adjusted. While if on `d` originally, it is adjusted.\r\n\r\nNow, I understand that this seems to be a result of a compromise choice. This is just to have this documented.",
            "created_at": "2023-03-04T20:01:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/22526#issuecomment-1454858702",
            "id": 1454858702,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22526",
            "node_id": "IC_kwDOAPphoM5Wt2HO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1454858702/reactions"
            },
            "updated_at": "2023-03-04T20:02:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1454858702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Unfortunately there is no gravity behavior which is universally correct. the current behavior preserves the position used by `i` (and already being in insert mode), but not of `a` or `x` (the latter of which the cursor being \"on\" a character interpretation makes sense). We can flip the behavior if we so want, but then the situation would be the reverse (`i` and insert mode would no longer be on the \"same character\" anymore).\r\n\r\nI apologize in advance if this is a silly question, but would it make sense to adjust this behavior based on current mode? So that, for example, adding text exactly at cursor position would not move cursor forward only in INSERT mode in the current window, but in other modes and other windows it would.\r\n\r\nRight now I'm trying to solve the following problem. The basic idea is being able to run the buffer contents through a formatter like `stylua`, to which an entire buffer content is passed through stdin and it gives new content back through stdout.\r\n\r\nIn that case just replacing the whole buffer causes all kinds of problems, like losing marks and extmarks together with cursor positions in all windows, messed up diagnostic signs, opening folds etc. But `vim.diff` can help in figuring out exactly which lines have changed. And with hunks that either only remove lines or only add lines `nvim_buf_set_lines` gets job done perfectly well, cursors in all windows shift as they should, extmarks for remaining lines are not lost, etc.\r\n\r\nThen in case of a \"replacement\" hunk, especially if one line was turned into a few or vice versa, it seems like the only option is to go deeper on character level diffs to figure out minimal edits being made by the formatter and use `nvim_buf_set_text` to apply those edits. But given that it does not always adjust cursor position in a natural way, it becomes necessary to at least adjust cursor position manually for each window for that buffer, then probably also adjust extmarks positions, the list goes on. But even with cursors alone, if they are adjusted manually, a simple undo/redo cycle after formatting wipes out those adjustments.\r\n\r\nIn the end, I think it would be much easier to be able to just figure out necessary edits and apply them using `nvim_buf_set_text` and expect that marks, cursors and extmarks would be properly shifted. And I suppose it would then require no manual adjustments to the cursor position after applying text edits from LSP. At least my understanding is that they are necessary for the same reason https://github.com/neovim/neovim/blob/5d8ab32f3871b0232972cac1116ac7cba98389e5/runtime/lua/vim/lsp/util.lua#L564-L571\r\n\r\nI guess this issue can be related to these adjustments as well https://github.com/neovim/neovim/issues/24297\r\n\r\nIf this sounds reasonable, I would be happy to try to implement those changes, but I know nothing about neovim codebase and I don't have a lot of experience writing C.",
            "created_at": "2023-08-25T20:42:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/22526#issuecomment-1693906375",
            "id": 1693906375,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22526",
            "node_id": "IC_kwDOAPphoM5k9vXH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1693906375/reactions"
            },
            "updated_at": "2023-08-25T20:42:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1693906375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/22526/comments",
    "created_at": "2023-03-04T18:39:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/22526/events",
    "html_url": "https://github.com/neovim/neovim/issues/22526",
    "id": 1609897848,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/22526/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 127,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 140,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-09-11T14:35:34Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM5f9Rd4",
    "number": 22526,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/22526/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/22526/timeline",
    "title": "`nvim_buf_set_text()` doesn't always adjust cursor to stay on same character",
    "updated_at": "2023-09-11T09:14:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/22526",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski"
    }
}