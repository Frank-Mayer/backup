{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nI noticed that expanding snippet can crash nvim in some cases. \r\n```cpp\r\n#1  0x000055857a750dc3 in fastforward_buf_to_lnum (s=s@entry=0x7f325ebfd378, lnum=2) at .../src/nvim/linematch.c:149\r\n#2  0x000055857a750f0f in try_possible_paths (df_iters=df_iters@entry=0x7f325ebfd7c0, paths=paths@entry=0x7f325ebfd570, npaths=npaths@entry=1, path_idx=path_idx@entry=1, choice=choice@entry=0x7f325ebfd56c,\r\n    diffcmppath=diffcmppath@entry=0x7f324c006df0, diff_len=0x7f325ebfd838, ndiffs=2, diff_blk=0x7f325ebfd840, iwhite=false) at .../src/nvim/linematch.c:184\r\n#3  0x000055857a750e79 in try_possible_paths (df_iters=df_iters@entry=0x7f325ebfd7c0, paths=paths@entry=0x7f325ebfd570, npaths=npaths@entry=1, path_idx=path_idx@entry=0, choice=choice@entry=0x7f325ebfd56c,\r\n    diffcmppath=diffcmppath@entry=0x7f324c006df0, diff_len=0x7f325ebfd838, ndiffs=2, diff_blk=0x7f325ebfd840, iwhite=false) at .../src/nvim/linematch.c:209\r\n#4  0x000055857a75110e in populate_tensor (df_iters=df_iters@entry=0x7f325ebfd7c0, ch_dim=ch_dim@entry=2, diffcmppath=diffcmppath@entry=0x7f324c006df0, diff_len=diff_len@entry=0x7f325ebfd838, ndiffs=ndiffs@entry=2,\r\n    diff_blk=diff_blk@entry=0x7f325ebfd840, iwhite=false) at .../src/nvim/linematch.c:263\r\n#5  0x000055857a75107c in populate_tensor (df_iters=df_iters@entry=0x7f325ebfd7c0, ch_dim=ch_dim@entry=1, diffcmppath=diffcmppath@entry=0x7f324c006df0, diff_len=diff_len@entry=0x7f325ebfd838, ndiffs=ndiffs@entry=2,\r\n    diff_blk=diff_blk@entry=0x7f325ebfd840, iwhite=false) at .../src/nvim/linematch.c:270\r\n#6  0x000055857a75107c in populate_tensor (df_iters=df_iters@entry=0x7f325ebfd7c0, ch_dim=ch_dim@entry=0, diffcmppath=diffcmppath@entry=0x7f324c006df0, diff_len=diff_len@entry=0x7f325ebfd838, ndiffs=ndiffs@entry=2,\r\n    diff_blk=diff_blk@entry=0x7f325ebfd840, iwhite=false) at .../src/nvim/linematch.c:270\r\n#7  0x000055857a7512df in linematch_nbuffers (diff_blk=0x7f325ebfd840, diff_len=0x7f325ebfd838, ndiffs=2, decisions=0x7f325ebfd830, iwhite=false) at .../src/nvim/linematch.c:356\r\n#8  0x000055857a779e7c in get_linematch_results (lstate=0x7f325f780380, ma=<optimized out>, mb=<optimized out>, start_a=50, count_a=<optimized out>, start_b=51, count_b=15, iwhite=false)\r\n    at .../src/nvim/lua/xdiff.c:77\r\n#9  0x000055857a779f91 in hunk_locations_cb (start_a=<optimized out>, count_a=<optimized out>, start_b=<optimized out>, count_b=<optimized out>, cb_data=<optimized out>) at .../src/nvim/lua/xdiff.c:133\r\n#10 0x000055857a8d1182 in xdl_call_hunk_func (xe=<optimized out>, xscr=<optimized out>, ecb=0x7f325ebfda80, xecfg=0x7f325ebfdaf0) at .../src/xdiff/xdiffi.c:993\r\n#11 0x000055857a8d3dad in xdl_diff (mf1=<optimized out>, mf2=<optimized out>, xpp=0x7f325ebfdaa0, xecfg=0x7f325ebfdaf0, ecb=0x7f325ebfda80) at .../src/xdiff/xdiffi.c:1090\r\n#12 0x000055857a77a44e in nlua_xdl_diff (lstate=0x7f325f780380) at .../src/nvim/lua/xdiff.c:341\r\n#13 0x000055857a94cfe6 in lj_BC_FUNCC ()\r\n#14 0x000055857a93889d in lua_pcall (L=L@entry=0x7f325f780380, nargs=nargs@entry=5, nresults=nresults@entry=-1, errfunc=errfunc@entry=0) at lj_api.c:1122\r\n#15 0x000055857a76f1c0 in nlua_luv_thread_common_cfpcall (lstate=0x7f325f780380, nargs=5, nresult=-1, flags=1, is_callback=is_callback@entry=false) at .../src/nvim/lua/executor.c:264\r\n#16 0x000055857a76f345 in nlua_luv_thread_cfpcall (lstate=<optimized out>, nargs=<optimized out>, nresult=<optimized out>, flags=<optimized out>) at .../src/nvim/lua/executor.c:245\r\n#17 0x000055857a8e3b7c in luv_work_cb ()\r\n#18 0x000055857a94cfe6 in lj_BC_FUNCC ()\r\n#19 0x000055857a93889d in lua_pcall (L=L@entry=0x7f325f780380, nargs=nargs@entry=1, nresults=nresults@entry=0, errfunc=errfunc@entry=0) at lj_api.c:1122\r\n#20 0x000055857a76f1c0 in nlua_luv_thread_common_cfpcall (lstate=lstate@entry=0x7f325f780380, nargs=nargs@entry=1, nresult=nresult@entry=0, flags=flags@entry=1, is_callback=is_callback@entry=false)\r\n    at .../src/nvim/lua/executor.c:264\r\n#21 0x000055857a76f345 in nlua_luv_thread_cfpcall (lstate=lstate@entry=0x7f325f780380, nargs=nargs@entry=1, nresult=nresult@entry=0, flags=flags@entry=1) at .../src/nvim/lua/executor.c:245\r\n#22 0x000055857a76f37f in nlua_luv_thread_cfcpcall (lstate=0x7f325f780380, func=<optimized out>, ud=0x558595e71500, flags=1) at .../src/nvim/lua/executor.c:253\r\n#23 0x000055857a8e39e4 in luv_work_cb_wrapper ()\r\n#24 0x000055857a997735 in worker ()\r\n#25 0x00007f3260ade732 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:447\r\n#26 0x00007f3260b592b8 in __GI___clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:78\r\n```\r\n\r\nAt the moment the following `init.lua` is as minimal as I can create. I have not analyzed what happens on the gitsigns side. \r\n\r\ncc: @lewis6991 @jwhite510 \r\n\r\n### Steps to reproduce\r\n\r\n- `git clone https://github.com/przepompownia/repro.nvim xdiff-linematch-error && cd xdiff-linematch-error`\r\n\r\n- replace `init.lua` with:\r\n```lua\r\nlocal thisInitFile = debug.getinfo(1).source:match('@?(.*)')\r\nlocal cwd = vim.fs.dirname(thisInitFile)\r\nlocal appname = vim.env.NVIM_APPNAME or 'nvim'\r\n\r\nvim.env.XDG_CONFIG_HOME = cwd\r\nvim.env.XDG_DATA_HOME = vim.fs.joinpath(cwd, '.xdg', 'data')\r\nvim.env.XDG_STATE_HOME = vim.fs.joinpath(cwd, '.xdg', 'state')\r\nvim.env.XDG_CACHE_HOME = vim.fs.joinpath(cwd, '.xdg', 'cache')\r\nvim.fn.mkdir(vim.fs.joinpath(vim.env.XDG_CACHE_HOME, appname), 'p')\r\nlocal stdPathConfig = vim.fn.stdpath('config')\r\n\r\nvim.opt.runtimepath:prepend(stdPathConfig)\r\nvim.opt.packpath:prepend(stdPathConfig)\r\n\r\nlocal function gitClone(url, installPath, branch)\r\n  if vim.fn.isdirectory(installPath) ~= 0 then\r\n    return\r\n  end\r\n\r\n  local command = {'git', 'clone', '--', url, installPath}\r\n  if branch then\r\n    table.insert(command, 3, '--branch')\r\n    table.insert(command, 4, branch)\r\n  end\r\n\r\n  vim.notify(('Cloning %s dependency into %s...'):format(url, installPath), vim.log.levels.INFO, {})\r\n  local sysObj = vim.system(command, {}):wait()\r\n  if sysObj.code ~= 0 then\r\n    error(sysObj.stderr)\r\n  end\r\n  vim.notify(sysObj.stdout)\r\n  vim.notify(sysObj.stderr, vim.log.levels.WARN)\r\nend\r\n\r\nlocal pluginsPath = vim.fs.joinpath(cwd, 'nvim/pack/plugins/opt')\r\nvim.fn.mkdir(pluginsPath, 'p')\r\npluginsPath = vim.uv.fs_realpath(pluginsPath)\r\n--- @type table<string, {url:string, branch: string?}>\r\nlocal plugins = {\r\n  ['gitsigns'] = {url = 'https://github.com/lewis6991/gitsigns.nvim'},\r\n}\r\nfor name, repo in pairs(plugins) do\r\n  local installPath = vim.fs.joinpath(pluginsPath, name)\r\n  gitClone(repo.url, installPath, repo.branch)\r\n  vim.cmd.packadd({args = {name}, bang = true})\r\nend\r\n\r\nvim.o.swapfile = false -- convenient after crash here\r\n\r\nrequire('gitsigns').setup({})\r\n\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = {'lua'},\r\n  group = vim.api.nvim_create_augroup('luals', {}),\r\n  callback = function ()\r\n    vim.lsp.start({\r\n      name = 'luals',\r\n      filetype = 'lua',\r\n      cmd = {'lua-language-server'},\r\n      root_dir = vim.uv.cwd(),\r\n      settings = {\r\n        Lua = {\r\n          runtime = {\r\n            path = {\r\n              '?.lua',\r\n              '?/init.lua',\r\n            },\r\n            version = 'LuaJIT',\r\n            pathStrict = true,\r\n          },\r\n          workspace = {\r\n            ignoreDir = {'lua'},\r\n            checkThirdParty = false,\r\n            library = {\r\n              vim.fs.joinpath(vim.env.VIMRUNTIME, 'lua'),\r\n              vim.fs.joinpath('${3rd}/luv/library', 'lua'),\r\n            },\r\n          },\r\n          diagnostics = {\r\n            globals = {'vim'},\r\n          },\r\n        },\r\n      },\r\n    })\r\n  end,\r\n})\r\n\r\nvim.api.nvim_create_autocmd('LspAttach', {\r\n  group = vim.api.nvim_create_augroup('arctgx.completion', {clear = true}),\r\n  callback = function (args)\r\n    vim.lsp.completion.enable(true, args.data.client_id, args.buf, {autotrigger = true})\r\n\r\n    vim.keymap.set({'i'}, '<C-Space>', function ()\r\n      vim.lsp.completion.trigger()\r\n    end, {buffer = args.buf})\r\n  end\r\n})\r\n\r\n-- vim.opt.diffopt:append('vertical') -- not necessary\r\nvim.opt.diffopt:append('linematch:60')\r\n```\r\n- `nvim --clean -u init.lua init.lua`\r\n- after loading luals type `Oif<C-Space>` then try to expand the snippet `if  then^@  ^@end`. For me nvim crashes before expansion. \r\n\r\n### Expected behavior\r\n\r\nNo crash\r\n\r\n### Nvim version (nvim -v)\r\n\r\nNVIM v0.11.0-dev-828+g052875b9d Build type: RelWithDebInfo LuaJIT 2.1.1724512491\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nn/a\r\n\r\n### Operating system/version\r\n\r\nDebian Sid\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.14.0-dev (8dfd2e56), tmux 3.4\r\n\r\n### $TERM environment variable\r\n\r\ntmux-256color\r\n\r\n### Installation\r\n\r\nfrom repo",
    "closed_at": "2024-09-30T11:09:37Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "cc @jwhite510 \r\n\r\n@przepompownia if you are able to reproduce this consistently, could you see if https://github.com/neovim/neovim/pull/23569 fixes it?",
            "created_at": "2024-09-25T09:21:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2373536188",
            "id": 2373536188,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NeUm8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2373536188/reactions"
            },
            "updated_at": "2024-09-25T09:21:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2373536188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "With the above init.lua I can reproduce this failure both on master and #23569 (after merge master into).\r\n\r\nI see I missed one thing needed for reproduction: the existing signs are relevant. Overriding `init.lua` inside the clone of https://github.com/przepompownia/repro.nvim with the above `init.lua` should be sufficient (I'll modify the original post). \r\n\r\n",
            "created_at": "2024-09-25T11:14:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2373788784",
            "id": 2373788784,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NfSRw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2373788784/reactions"
            },
            "updated_at": "2024-09-25T11:14:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2373788784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "```lua\r\nvim.keymap.set({'i'}, '<A-s>', function ()\r\n  vim.snippet.expand('if $1 then\\\r\n\\t$0\\\r\nend')\r\nend)\r\n```\r\nSimilar snippet defined manually like the above does not trigger the failure. Is it possible that the built-in LSP and snippet code generates some special character (such as visualized by `^@`) that exposes the error (and maybe Gitsigns performs some calculations that may be premature)?",
            "created_at": "2024-09-25T12:23:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2373937431",
            "id": 2373937431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6Nf2kX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2373937431/reactions"
            },
            "updated_at": "2024-09-25T12:23:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2373937431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I was able to reproduce the crash.\r\nlinematch_nbuffers is getting called with a null pointer as one of the text inputs. \r\n\r\nit is given this input through a lua function call:\r\n0x7749723c5359 \"vim.api.nvim_create_autocmd('UIEnter', {\\n  once = true,\\n  callback = init,\\n})\\n\"\r\nas a length of 3, which makes sense because I see 3 newline characters in that\r\nand it is given a null char* with an expected length of 36. so when it tries to retrieve a line from that null pointer at any position, it dereferences the null pointer and crashes.\r\n\r\n![linematchcrash](https://github.com/user-attachments/assets/821427b8-4b61-4c25-b654-81f8bfd60852)\r\n\r\nto resolve the crash, I can add in some assert statements to check that the input is not null and actually matches the length specified\r\n\r\nnot quite sure why linematch is given a null char  pointer with a length of 36.",
            "created_at": "2024-09-25T13:10:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374046877",
            "id": 2374046877,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NgRSd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374046877/reactions"
            },
            "updated_at": "2024-09-25T13:10:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374046877",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The call is comings from `vim.diff()`\r\n\r\n```\r\n#7  0x000055857a7512df in linematch_nbuffers (diff_blk=0x7f325ebfd840, diff_len=0x7f325ebfd838, ndiffs=2, decisions=0x7f325ebfd830, iwhite=false) at .../src/nvim/linematch.c:356\r\n#8  0x000055857a779e7c in get_linematch_results (lstate=0x7f325f780380, ma=<optimized out>, mb=<optimized out>, start_a=50, count_a=<optimized out>, start_b=51, count_b=15, iwhite=false)\r\n    at .../src/nvim/lua/xdiff.c:77\r\n#9  0x000055857a779f91 in hunk_locations_cb (start_a=<optimized out>, count_a=<optimized out>, start_b=<optimized out>, count_b=<optimized out>, cb_data=<optimized out>) at .../src/nvim/lua/xdiff.c:133\r\n#10 0x000055857a8d1182 in xdl_call_hunk_func (xe=<optimized out>, xscr=<optimized out>, ecb=0x7f325ebfda80, xecfg=0x7f325ebfdaf0) at .../src/xdiff/xdiffi.c:993\r\n#11 0x000055857a8d3dad in xdl_diff\r\n\r\n```\r\n\r\nSo something in that chain is passing a NULL pointer.",
            "created_at": "2024-09-25T13:27:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374088755",
            "id": 2374088755,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6Ngbgz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374088755/reactions"
            },
            "updated_at": "2024-09-25T13:27:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374088755",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I re compiled with https://github.com/neovim/neovim/pull/30512\r\nand the test case described by [przepompownia](https://github.com/przepompownia) no longer crashed",
            "created_at": "2024-09-25T13:35:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374109029",
            "id": 2374109029,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6Nggdl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374109029/reactions"
            },
            "updated_at": "2024-09-25T13:35:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374109029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The current version of #30512 at least protects against the failure.",
            "created_at": "2024-09-25T15:12:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374378290",
            "id": 2374378290,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NhiMy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374378290/reactions"
            },
            "updated_at": "2024-09-25T15:12:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374378290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "But also masks/hides it 😞 .",
            "created_at": "2024-09-25T15:14:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374385180",
            "id": 2374385180,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6Nhj4c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374385180/reactions"
            },
            "updated_at": "2024-09-25T15:14:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374385180",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "\r\nI did a little more investigating. I believe now the null pointer is coming\r\nstrchr inside fastforward_buf_to_lnum. when the completion is initially added\r\nafter typing \"Oif<C-Space>\", the content of the file passed to\r\nget_linematch_results contains the string terminator '\\0'\r\n\r\nthe fastforward_buf_to_lnum will use strchr repeatedly find '\\n' to get to the\r\nline number of the diff hunk, and when it sees a '\\0', it will return NULL\r\n\r\n\r\n```\r\nstatic void get_linematch_results(lua_State *lstate, mmfile_t *ma, mmfile_t *mb, int start_a,\r\n                                  int count_a, int start_b, int count_b, bool iwhite)\r\n{\r\n  // get the pointer to char of the start of the diff to pass it to linematch algorithm\r\n  const char *diff_begin[2] = { ma->ptr, mb->ptr };\r\n  int diff_length[2] = { count_a, count_b };\r\n\r\n  fastforward_buf_to_lnum(&diff_begin[0], (linenr_T)start_a + 1);\r\n  fastforward_buf_to_lnum(&diff_begin[1], (linenr_T)start_b + 1);\r\n\r\n  int *decisions = NULL;\r\n  size_t decisions_length = linematch_nbuffers(diff_begin, diff_length, 2, &decisions, iwhite);\r\n  ...\r\n```\r\n\r\n```\r\nvoid fastforward_buf_to_lnum(const char **s, linenr_T lnum)\r\n{\r\n  for (int i = 0; i < lnum - 1; i++) {\r\n    *s = strchr(*s, '\\n');\r\n    if (!*s) {\r\n      return;\r\n    }\r\n    (*s)++;\r\n  }\r\n}\r\n```\r\n```\r\nstatic size_t line_len(const char *s)\r\n{\r\n  char *end = strchr(s, '\\n');\r\n  if (end) {\r\n    return (size_t)(end - s);\r\n  }\r\n  return strlen(s);\r\n}\r\n```\r\n\r\nso one solution would be to preprocess the input to remove the string terminating character '\\0' from the input. \r\n\r\nOr else fastforward_buf_to_lnum (and linematch.c:line_len) would need to be modified to accomodate '\\0' characters in the algorithm. They need to have a 'strchr' that continues the search past '\\0' characterss",
            "created_at": "2024-09-25T18:19:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374848190",
            "id": 2374848190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NjU6-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374848190/reactions"
            },
            "updated_at": "2024-09-25T18:19:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374848190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Are you able to determine why the string has a NUL character? Is it contained in the string that is passed to `vim.diff()`? Is the snippet engine inserting NUL characters?\n\n@MariaSolOs @mfussenegger do either of you know?",
            "created_at": "2024-09-25T18:50:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374904660",
            "id": 2374904660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NjitU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374904660/reactions"
            },
            "updated_at": "2024-09-25T18:51:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374904660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It looks like the plugin that is making the completion is inserting the NULL character in the text file. But regardless, neovim should be able to handle files with \\0 character in it. I just checked running linematch (with normal diff mode, no lua plugins) with '\\0' inside a diff hunk doesnt crash it, but it it cant compare properly and messes up the results.  Seems to me an alternate strchr implementation would be the proper fix.",
            "created_at": "2024-09-25T18:58:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374919761",
            "id": 2374919761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NjmZR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374919761/reactions"
            },
            "updated_at": "2024-09-25T18:58:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374919761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "https://github.com/neovim/neovim/pull/30517",
            "created_at": "2024-09-25T19:02:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2374934769",
            "id": 2374934769,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NjqDx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374934769/reactions"
            },
            "updated_at": "2024-09-25T19:02:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2374934769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "~Neovim buffers are utf-8 encoded which means they cannot contain NUL characters.~ EDIT: this is false, sorry.\n\n",
            "created_at": "2024-09-25T19:21:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2375037910",
            "id": 2375037910,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NkDPW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2375037910/reactions"
            },
            "updated_at": "2024-09-25T20:00:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2375037910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is the snippet engine inserting NUL characters?\r\n> @MariaSolOs @mfussenegger do either of you know?\r\n\r\nThe snippet expansion shouldn't, but the display of the completion candidates can afaik temporarily lead to NUL characters getting inserted.\r\nSee https://github.com/neovim/neovim/pull/30359#issuecomment-2348647089\r\n",
            "created_at": "2024-09-25T19:50:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2375119992",
            "id": 2375119992,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6NkXR4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2375119992/reactions"
            },
            "updated_at": "2024-09-25T19:50:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2375119992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Raised #30526 as a comprehensive fix.",
            "created_at": "2024-09-26T15:21:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2377276918",
            "id": 2377276918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6Nsl32",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2377276918/reactions"
            },
            "updated_at": "2024-09-26T15:21:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2377276918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Minimal reproducer:\r\n\r\n```lua\r\nvim.diff(\"\\n\", \"\\0\\n\\n\\nb\", { linematch = true, result_type = \"indices\" })\r\n```",
            "created_at": "2024-09-29T09:31:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2381283002",
            "id": 2381283002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6N7366",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381283002/reactions"
            },
            "updated_at": "2024-09-29T09:31:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381283002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thank you all for investigating!",
            "created_at": "2024-09-30T22:23:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/30505#issuecomment-2384284400",
            "id": 2384284400,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30505",
            "node_id": "IC_kwDOAPphoM6OHUrw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2384284400/reactions"
            },
            "updated_at": "2024-09-30T22:23:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2384284400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        }
    ],
    "comments": 17,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30505/comments",
    "created_at": "2024-09-25T00:26:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30505/events",
    "html_url": "https://github.com/neovim/neovim/issues/30505",
    "id": 2546638056,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 3010934759,
            "name": "diff",
            "node_id": "MDU6TGFiZWwzMDEwOTM0NzU5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diff"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30505/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2024-09-30T11:50:20Z",
        "closed_issues": 39,
        "created_at": "2024-07-21T14:36:47Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/44",
        "id": 11339669,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/44/labels",
        "node_id": "MI_kwDOAPphoM4ArQeV",
        "number": 44,
        "open_issues": 0,
        "state": "closed",
        "title": "0.10.2",
        "updated_at": "2024-09-30T14:01:52Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/44"
    },
    "node_id": "I_kwDOAPphoM6Xypzo",
    "number": 30505,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30505/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30505/timeline",
    "title": "linematch.c crashes when processing strings with embedded `NUL` characters",
    "updated_at": "2024-09-30T22:23:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30505",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia"
    }
}