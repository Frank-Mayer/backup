{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\n\"Invalid node type\" error is constantly raised, preventing use of the editor.\r\n\r\n```\r\nError in decoration provider treesitter/highlighter.win:\r\nError executing lua: ./runtime/lua/vim/treesitter/query.lua:248: Query error at 51:3. Invalid node type \"note\":\r\n((note) @comment.note\r\n  ^\r\n\r\nstack traceback:\r\n        [C]: in function '_ts_parse_query'\r\n        ./runtime/lua/vim/treesitter/query.lua:248: in function 'fn'\r\n        ./runtime/lua/vim/func/_memoize.lua:54: in function 'fn'\r\n        ./runtime/lua/vim/func/_memoize.lua:54: in function 'get'\r\n        ./runtime/lua/vim/treesitter/highlighter.lua:28: in function 'new'\r\n        ./runtime/lua/vim/treesitter/highlighter.lua:240: in function 'get_query'\r\n        ./runtime/lua/vim/treesitter/highlighter.lua:187: in function 'fn'\r\n        ./runtime/lua/vim/treesitter/languagetree.lua:489: in function 'for_each_tree'\r\n        ./runtime/lua/vim/treesitter/highlighter.lua:174: in function 'prepare_highlight_states'\r\n        ./runtime/lua/vim/treesitter/highlighter.lua:351: in function <./runtime/lua/vim/treesitter/highlighter.lua:345>\r\n```\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Place an old vimdoc.so parser (which does _not_ ([define](https://github.com/neovim/tree-sitter-vimdoc/commit/4f8ba9e39c8b3fbaf0bb5f70ac255474a9099359) `(note)`)) at `~/.config/nvim/parser/vimdoc.so` so that it will load when treesitter parses a `:help` file.\r\n2. Open a vimdoc buffer: `:help lua`.\r\n3. The error occurs continually (can't dismiss it, it reappears).\r\n    - `runtime/queries/vimdoc/highlights.scm` references `note`: https://github.com/neovim/neovim/blob/2cd76a758b4511748d9482e5af58162a608516b4/runtime/queries/vimdoc/highlights.scm#L51-L52\r\n    - but the \"old\" parser from step (1) does not have `note`.\r\n\r\n\r\n### Expected behavior\r\n\r\n- Error for the _same_ parser/node pair, should only be reported _once_. For example in this case, `Invalid node type \"note\"` should be reported at most once, for the `vimdoc` parser.\r\n- Error should mention the parser _file location_. It wasn't obvious that I had a `~/.config/nvim/parser/` that was overriding the builtin parser.\r\n- `vim.treesitter.get_parser()` should return the parser file location.\r\n\r\n### Neovim version (nvim -v)\r\n\r\n2cd76a758b45\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nmacOS\r\n\r\n### Terminal name/version\r\n\r\nkitty\r\n\r\n### $TERM environment variable\r\n\r\ntmux-256color\r\n\r\n### Installation\r\n\r\nsource",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "The issue here is that this is happening in the ephemeral decoration provider, which means there are limits to the sort of state you can save. (There's been _very_ heated discussions about proper error handling in the decorator before, triggered by the same issue...)\r\n\r\nBut sure, better error messages are always a good idea. And _maybe_ we can have proper parser introspection in the next tree-sitter version that would allow catching mismatches _before_ errors are thrown. (A boy can dream...)\r\n\r\nNeedless to say, this is an issue we've been keenly aware of but currently lack the tools to handle.",
            "created_at": "2024-01-28T00:20:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1913382795",
            "id": 1913382795,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5yC-eL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913382795/reactions"
            },
            "updated_at": "2024-01-28T00:20:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913382795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `vim.treesitter.get_parser()` should return the parser file location.\r\n\r\nThis at least would be a fairly cheap improvement? Or is it already available somewhere I missed?",
            "created_at": "2024-01-28T00:39:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1913388271",
            "id": 1913388271,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5yC_zv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913388271/reactions"
            },
            "updated_at": "2024-01-28T00:39:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913388271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This at least would be a fairly cheap improvement?\r\n\r\nAs it already has a return value, that requires thought to make things not break everywhere else. (`get_parser()` is only the top of a rather deep stack of functions, with the actual loading etc. being done in C.)",
            "created_at": "2024-01-28T08:54:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1913520473",
            "id": 1913520473,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5yDgFZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913520473/reactions"
            },
            "updated_at": "2024-01-28T08:54:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913520473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And for the record: \r\n\r\n> The error occurs continually (can't dismiss it, it reappears).\r\n\r\n`<ctrl-c>` followed directly by `:lua vim.treesitter.stop()` works. not a workaround, of course, but at least gets you back to a responsive editor.",
            "created_at": "2024-01-28T16:54:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1913658641",
            "id": 1913658641,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5yEB0R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913658641/reactions"
            },
            "updated_at": "2024-01-28T16:54:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1913658641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's already supposed to go away after you press enter three times:\r\n\r\n```\r\n\r\n  if (ERROR_SET(&err)) {\r\n    decor_provider_error(provider, name, err.msg);\r\n    provider->error_count++;\r\n\r\n    if (provider->error_count >= DP_MAX_ERROR) {  // DP_MAX_ERROR == 3\r\n      provider->state = kDecorProviderDisabled;\r\n    }\r\n  }\r\n```\r\n\r\nIf this somehow broke, it is a bug.",
            "created_at": "2024-02-07T12:14:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1931923069",
            "id": 1931923069,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5zJs59",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931923069/reactions"
            },
            "updated_at": "2024-02-07T12:14:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931923069",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, that broke. Enter does nothing. (The error is not blocking, but it never goes away.)",
            "created_at": "2024-02-07T12:19:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1931930975",
            "id": 1931930975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5zJu1f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931930975/reactions"
            },
            "updated_at": "2024-02-07T12:21:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931930975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think it may be because:\r\n\r\n```c\r\n  if (!ERROR_SET(&err)\r\n      && api_object_to_bool(ret, \"provider %s retval\", default_true, &err)) {\r\n    provider->error_count = 0;\r\n    return true;\r\n  }\r\n```\r\n\r\nWhich means the provider is only disabled if 3 callbacks in a row fail. I think this won't work for `on_win` failing, since it will do something like.\r\n\r\n```\r\n->start\r\n->buf\r\n->win (fail, error_count=1)\r\n(line is skipped)\r\n->end (error_count=0)\r\n```",
            "created_at": "2024-02-07T12:29:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1931946894",
            "id": 1931946894,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5zJyuO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931946894/reactions"
            },
            "updated_at": "2024-02-07T12:31:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931946894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is there any scenario where we expect a transient failure that _should_ not disable the provider? If so, how likely is that? (I feel like the current retry-approach is optimizing for the wrong path...)",
            "created_at": "2024-02-07T12:31:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1931950583",
            "id": 1931950583,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5zJzn3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931950583/reactions"
            },
            "updated_at": "2024-02-07T12:31:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931950583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The initial goal of the `error_count` thing was do temper down the `line` callback failures, the other callbacks weren't considered.\r\n\r\nWe could change it so `error_count` is never reset? Or only reset if the whole cycle didn't error?",
            "created_at": "2024-02-07T12:33:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1931953847",
            "id": 1931953847,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5zJ0a3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931953847/reactions"
            },
            "updated_at": "2024-02-07T12:33:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931953847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "IMO the `error_count` thing in C should be a last resort thing which _always_ disables the provider, no matter which specific callbacks contributes to the error. it is then up to the specific provider to handle more fine-grained fallbacks (like disabling only a specific query, all highlights for a specific buffer, or whatever makes sense that depends on actual TS semantics). ",
            "created_at": "2024-02-07T12:38:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1931961194",
            "id": 1931961194,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5zJ2Nq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931961194/reactions"
            },
            "updated_at": "2024-02-07T12:38:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931961194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So never reset?",
            "created_at": "2024-02-07T12:40:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-1931964485",
            "id": 1931964485,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM5zJ3BF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931964485/reactions"
            },
            "updated_at": "2024-02-07T12:40:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1931964485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "Any update on that error? Having a similar error message:\r\n\r\n```\r\nInvalid node type \"function_expression\"\r\n```",
            "created_at": "2024-06-17T22:15:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/27235#issuecomment-2174526767",
            "id": 2174526767,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27235",
            "node_id": "IC_kwDOAPphoM6BnKUv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174526767/reactions"
            },
            "updated_at": "2024-06-17T22:38:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174526767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/47952043?v=4",
                "events_url": "https://api.github.com/users/noghartt/events{/privacy}",
                "followers_url": "https://api.github.com/users/noghartt/followers",
                "following_url": "https://api.github.com/users/noghartt/following{/other_user}",
                "gists_url": "https://api.github.com/users/noghartt/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noghartt",
                "id": 47952043,
                "login": "noghartt",
                "node_id": "MDQ6VXNlcjQ3OTUyMDQz",
                "organizations_url": "https://api.github.com/users/noghartt/orgs",
                "received_events_url": "https://api.github.com/users/noghartt/received_events",
                "repos_url": "https://api.github.com/users/noghartt/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noghartt/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noghartt/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noghartt"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27235/comments",
    "created_at": "2024-01-27T23:03:25Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27235/events",
    "html_url": "https://github.com/neovim/neovim/issues/27235",
    "id": 2103853854,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "user experience",
            "id": 151718455,
            "name": "ux",
            "node_id": "MDU6TGFiZWwxNTE3MTg0NTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ux"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, self-contained. Do NOT ask \"can I work on this\", just read CONTRIBUTING.md",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27235/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 624,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 545,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-06-17T21:30:13Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM59ZkMe",
    "number": 27235,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 12,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 13,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27235/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27235/timeline",
    "title": "treesitter: noisy \"Invalid node type\" error",
    "updated_at": "2024-06-17T22:38:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27235",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}