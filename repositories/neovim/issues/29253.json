{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
        "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/dundargoc/followers",
        "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dundargoc",
        "id": 33953936,
        "login": "dundargoc",
        "node_id": "MDQ6VXNlcjMzOTUzOTM2",
        "organizations_url": "https://api.github.com/users/dundargoc/orgs",
        "received_events_url": "https://api.github.com/users/dundargoc/received_events",
        "repos_url": "https://api.github.com/users/dundargoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dundargoc"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
            "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
            "followers_url": "https://api.github.com/users/dundargoc/followers",
            "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dundargoc",
            "id": 33953936,
            "login": "dundargoc",
            "node_id": "MDQ6VXNlcjMzOTUzOTM2",
            "organizations_url": "https://api.github.com/users/dundargoc/orgs",
            "received_events_url": "https://api.github.com/users/dundargoc/received_events",
            "repos_url": "https://api.github.com/users/dundargoc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dundargoc"
        }
    ],
    "author_association": "MEMBER",
    "body": "### Problem\n\nWhen using `options` context in `vim._with()`, it can result into unwanted side effects.\n\n### Steps to reproduce\n\n1. Create the 'script.lua' file with the following content:\r\n    ```lua\r\n    vim.go.commentstring, vim.bo.commentstring = '- %s', '-- %s'\r\n\r\n    _G.log = {}\r\n    table.insert(_G.log, { 'Before', go = vim.go.commentstring, bo = vim.bo.commentstring })\r\n    vim._with({ options = { commentstring = '## %s' } }, function()\r\n      table.insert(_G.log, { 'Inside', go = vim.go.commentstring, bo = vim.bo.commentstring })\r\n    end)\r\n    table.insert(_G.log, { 'After', go = vim.go.commentstring, bo = vim.bo.commentstring })\r\n    ```\r\n2. `nvim --clean -- script.lua`\r\n3. `:source`\r\n4. `:=log`.\r\n\r\nThe output now (notice difference in `go` values):\r\n\r\n```\r\n:=log\r\n{ { \"Before\",\r\n    bo = \"-- %s\",\r\n    go = \"- %s\"\r\n  }, { \"Inside\",\r\n    bo = \"## %s\",\r\n    go = \"## %s\"\r\n  }, { \"After\",\r\n    bo = \"-- %s\",\r\n    go = \"-- %s\"\r\n  } }\r\n```\r\n\n\n### Expected behavior\n\nBoth global and local option values are the same after executing `vim._with()` as they were before it.\n\n### Neovim version (nvim -v)\n\nNVIM v0.11.0-dev-200+g9afa1fd35\n\n### Vim (not Nvim) behaves the same?\n\nNo (doesn't have this functionality)\n\n### Operating system/version\n\nEndeavourOS Linux x86_64 (6.9.3-arch1-1)\n\n### Terminal name/version\n\nst-0.9\n\n### $TERM environment variable\n\nst-256color\n\n### Installation\n\nappimage",
    "closed_at": "2024-06-26T10:23:36Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I _think_ the better design might be to have explicit `go`, `wo`, `bo`, maybe `o`, and maybe `env` as separate context tables instead of a single `options`. This will allow temporarily setting options (and environment variables) with as much precision as user/callback wants.",
            "created_at": "2024-06-09T12:39:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/29253#issuecomment-2156517477",
            "id": 2156517477,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29253",
            "node_id": "IC_kwDOAPphoM6Aidhl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2156517477/reactions"
            },
            "updated_at": "2024-06-09T12:39:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2156517477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I _think_ the better design might be to have explicit `go`, `wo`, `bo`, maybe `o`, and maybe `env` as separate context tables instead of a single `options`. This will allow temporarily setting options (and environment variables) with as much precision as user/callback wants.\r\n\r\nI'm cautiously optimistic about this suggestion. My only worry is that it will sacrifice convenience over maximal flexibility. I assume one would in majority of the cases want to change the options of the buffer you switched to rather than another buffer.\r\n\r\nI'm guessing you were thinking something like the following signature?\r\n\r\n```lua\r\nvim._with({buf = 1, bo = {buf = 2, options = { comments = spelllang= 'fr'}}}, function()\r\nend)\r\n```\r\n\r\nIt is for sure more flexible. I don't mind testing this out and see if it's something we like.\r\n\r\n---\r\n\r\nI was wondering though if this couldn't be achieved with the current approach already? I haven't tested this out but something like the following should work (or at least be made to work):\r\n\r\n```lua\r\nvim._with({buf = 2, options = { comments = spelllang= 'fr'}}}, function()\r\n        vim._with({buf = 1}, function()\r\n        end)\r\nend)\r\n```\r\n\r\nThere is about as much code, but we'd be avoiding the `o`, `bo`, `go`, `wo` spaghetti.",
            "created_at": "2024-06-10T09:48:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/29253#issuecomment-2157876665",
            "id": 2157876665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29253",
            "node_id": "IC_kwDOAPphoM6AnpW5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2157876665/reactions"
            },
            "updated_at": "2024-06-10T10:25:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2157876665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm guessing you were thinking something like the following signature?\r\n> \r\n> ```lua\r\n> vim._with({buf = 1, bo = {buf = 2, options = { comments = spelllang= 'fr'}}}, function()\r\n> end)\r\n> ```\r\n\r\nNo, not quite. I had in mind one nesting level less:\r\n\r\n```lua\r\nvim._with({ buf = 1, bo = { commentstring = '## %s' }, go = { spelllang = 'fr' } }, callback)\r\n```\r\n\r\nWhich is essentially a thin wrapper for the following:\r\n\r\n```lua\r\nvim._with({ buf = 1 }, function()\r\n  local cache_bo_cms, cache_go_spl = vim.bo.commentstring, vim.go.spelllang\r\n  vim.bo.commentstring, vim.go.spelllang = '## %s', 'fr'\r\n  callback()\r\n  vim.bo.commentstring, vim.go.spelllang = cache_bo_cms, cache_go_spl\r\nend)\r\n```\r\n\r\nThis both reuses existing notation for global-local options and allows precise explicit intention on which option is meant to be used in context.",
            "created_at": "2024-06-10T10:25:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/29253#issuecomment-2157965614",
            "id": 2157965614,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29253",
            "node_id": "IC_kwDOAPphoM6An_Eu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2157965614/reactions"
            },
            "updated_at": "2024-06-10T10:25:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2157965614",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29253/comments",
    "created_at": "2024-06-09T12:36:27Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29253/events",
    "html_url": "https://github.com/neovim/neovim/issues/29253",
    "id": 2342210802,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29253/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Lm0zy",
    "number": 29253,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29253/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29253/timeline",
    "title": "`vim._with()` does not properly restore global-local options",
    "updated_at": "2024-06-26T10:23:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29253",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski"
    }
}