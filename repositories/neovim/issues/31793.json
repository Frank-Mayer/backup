{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI'm working on an AI / LLM plugin, written in bun.\n\nI'm starting the bun process via jobstart [code](https://github.com/dlants/magenta.nvim/blob/main/lua/magenta/init.lua#L27)\n\nI'm then using the [bunvim driver](https://github.com/wallpants/bunvim) to drive the neovim process.\n\nWhen the LLM wants to apply some edits to a file, I do the following:\n- make sure the file is open in a buffer\n- take the contents of the buffer. Apply the edits (in-memory, in bun).\n- create a new scratch buffer, and use nvim_buffer_set_lines [code](https://github.com/dlants/magenta.nvim/blob/main/bun/tools/diff.ts#L128) to populate it.\n- use diffthis on the original buffer and the scratch buffer to display the diff.\n\nFor smaller files this works fine, however for larger files I am running into a weird issue. Here's a sample RPC log:\n```\ndebug 15:16:18.875\n{\n  message: {\n    OUTGOING_RPC_REQUEST: {\n      reqId: 622,\n      method: 'nvim_buf_set_lines',\n      params: [\n        131,\n        0,\n        -1,\n        false,\n        [\n        ... 600 lines or so\n        ]\n      ]\n    }\n  }\n}\n\ndebug 15:16:18.876\n{\n  message: { INCOMING_RPC_RESPONSE: { reqId: 621, error: null, result: null } }\n}\n\ndebug 15:16:18.876\n{\n  message: {\n    OUTGOING_RPC_REQUEST: {\n      reqId: 623,\n      method: 'nvim_buf_set_option',\n      params: [ 49, 'modifiable', true ]\n    }\n  }\n}\n\ndebug 15:22:07.323\n{\n  message: {\n    INCOMING_RPC_NOTIFICATION: { event: 'magentaKey', args: [ '<CR>' ] }\n  }\n}\n\ndebug 15:22:07.324\n{\n  message: {\n    OUTGOING_RPC_REQUEST: { reqId: 625, method: 'nvim_get_current_win', params: [] }\n  }\n}\n```\nAs you can see, reqId 622 never receives a response. Also, no subsequent requests receive responses, even though the bun process is still live, and is still sending requests. Also, the neovim process is able to send notifications, which I still receive on the bunvim side, which tells me the socket, and the bunvim code responsible for receving the notifications is running.\n\nThis leads me to believe that the neovim code that's responsible for responding to the rpc requests is the part that becomes busted.\n\nI'm not sure what other monitoring I can do to help understand where this might be breaking. I don't see any error messages in the rpc log, or in neovim :messages.\n\n\n\n### Steps to reproduce\n\nI'll try and come up with a test case, but wanted to open the issue to track my thinking/progress and maybe get some advise on how to debug further.\n\n### Expected behavior\n\nThe size of the set_lines request shouldn't matter.\n\n### Nvim version (nvim -v)\n\n0.10.3\n\n### Vim (not Nvim) behaves the same?\n\nn/a, using neovim api\n\n### Operating system/version\n\nMacOS 14.6.1\n\n### Terminal name/version\n\nghostty 1.0\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nbrew",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "OK, so a bit of progress. I was able to set up a test to reliably crash it from the bun side, using a large file that I noticed crashed it within the codebase.\n\nhttps://github.com/dlants/magenta.nvim/blob/main/bun/tools/diff.spec.ts#L69\n\nI also tried just running the nvim_buf_set_lines command with the contents of the same file, which worked fine:\n\n```\nfunction LoadFixture()\n  local filename = \"bun/test/fixtures/toolManager.ts\"\n  local file = io.open(filename, \"r\")\n  if not file then return end\n\n  local contents = file:read(\"*a\")\n  file:close()\n\n  local buf = vim.api.nvim_create_buf(false, true)\n  vim.api.nvim_buf_set_lines(buf, 0, -1, false, vim.split(contents, \"\\n\"))\n  vim.api.nvim_set_current_buf(buf)\nend\n```\n\nNext I'll try invoking the nvim_buf_set_lines via rpc and reduce from there.",
            "created_at": "2024-12-31T00:45:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/31793#issuecomment-2566041972",
            "id": 2566041972,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31793",
            "node_id": "IC_kwDOAPphoM6Y8rF0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566041972/reactions"
            },
            "updated_at": "2024-12-31T00:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566041972",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1186977?v=4",
                "events_url": "https://api.github.com/users/dlants/events{/privacy}",
                "followers_url": "https://api.github.com/users/dlants/followers",
                "following_url": "https://api.github.com/users/dlants/following{/other_user}",
                "gists_url": "https://api.github.com/users/dlants/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dlants",
                "id": 1186977,
                "login": "dlants",
                "node_id": "MDQ6VXNlcjExODY5Nzc=",
                "organizations_url": "https://api.github.com/users/dlants/orgs",
                "received_events_url": "https://api.github.com/users/dlants/received_events",
                "repos_url": "https://api.github.com/users/dlants/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dlants/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dlants/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dlants",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31793/comments",
    "created_at": "2024-12-30T23:46:03Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31793/events",
    "html_url": "https://github.com/neovim/neovim/issues/31793",
    "id": 2763808131,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "We need minimal steps to reproduce the issue",
            "id": 298863445,
            "name": "needs:repro",
            "node_id": "MDU6TGFiZWwyOTg4NjM0NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:repro"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31793/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6kvF2D",
    "number": 31793,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31793/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31793/timeline",
    "title": "rpc connection becomes non-responsive after large nvim_buf_set_lines request",
    "updated_at": "2024-12-31T00:45:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31793",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1186977?v=4",
        "events_url": "https://api.github.com/users/dlants/events{/privacy}",
        "followers_url": "https://api.github.com/users/dlants/followers",
        "following_url": "https://api.github.com/users/dlants/following{/other_user}",
        "gists_url": "https://api.github.com/users/dlants/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dlants",
        "id": 1186977,
        "login": "dlants",
        "node_id": "MDQ6VXNlcjExODY5Nzc=",
        "organizations_url": "https://api.github.com/users/dlants/orgs",
        "received_events_url": "https://api.github.com/users/dlants/received_events",
        "repos_url": "https://api.github.com/users/dlants/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dlants/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dlants/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dlants",
        "user_view_type": "public"
    }
}