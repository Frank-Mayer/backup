{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nThis issue is a bit hard to reproduce without following exactly steps.\r\n\r\nWhen typing `/**` comment in vue files, the input lag is noticeable.\r\n\r\n\r\n### Steps to reproduce\r\n\r\nput `slow-ts.lua` in `/tmp`:\r\n\r\n```lua\r\nvim.g.mapleader = \" \"\r\nvim.g.maplocalleader = \",\"\r\nvim.opt.number = true\r\n\r\nfor name, url in pairs({\r\n\t-- ADD PLUGINS _NECESSARY_ TO REPRODUCE THE ISSUE, e.g:\r\n\t-- some_plugin = 'https://github.com/author/plugin.nvim'\r\n\ttreesitter = \"https://github.com/nvim-treesitter/nvim-treesitter\",\r\n}) do\r\n\tlocal install_path = vim.fn.fnamemodify(\"slow_ts/\" .. name, \":p\")\r\n\tif vim.fn.isdirectory(install_path) == 0 then\r\n\t\tif name == \"treesitter\" then\r\n\t\t\tvim.fn.system({ \"git\", \"clone\", \"--branch\", \"main\", \"--depth=1\", url, install_path })\r\n\t\telse\r\n\t\t\tvim.fn.system({ \"git\", \"clone\", \"--depth=1\", url, install_path })\r\n\t\tend\r\n\tend\r\n\tvim.opt.runtimepath:append(install_path)\r\nend\r\n\r\n-- ===============\r\n\r\nrequire(\"nvim-treesitter\").setup({\r\n\tensure_install = { \"vue\", \"javascript\", \"typescript\", \"comment\", \"jsdoc\" },\r\n\tauto_install = false,\r\n\tinstall_dir = vim.fn.fnamemodify(\"slow_ts/.site\", \":p\"),\r\n})\r\n\r\nlocal ftau = vim.api.nvim_create_augroup(\"option_ft\", { clear = true })\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n\tgroup = ftau,\r\n\tpattern = { \"*\" },\r\n\tcallback = function(args)\r\n\t\tlocal buf = args.buf\r\n\t\t-- start highlighter.\r\n\t\tif not pcall(vim.treesitter.start, buf) then\r\n\t\t\tprint(\"ERROR! highlight not started\")\r\n\t\t\treturn\r\n\t\tend\r\n\tend,\r\n})\r\n\r\nvim.cmd(\"colorscheme default\")\r\n```\r\n\r\nPut a `test.vue` file along side with `slow-ts.lua`:\r\n\r\nfile content: https://gist.github.com/towry/74d6ff3312e18c6fd39367d1b4e477cf#file-test-vue\r\n\r\nSteps to repro it:\r\n\r\n1. `nvim --clean -u slow-ts.lua`, wait for the nvim-treesitter setup is done.\r\n2. make sure `vue`, `comment` parsers is installed.\r\n3. `nvim --clean -u slow-ts.lua test.vue`\r\n4. (important) press `ctrl-d` multiple times to move cursor down and press `ctrl-u` to make sure line 26 is visible and move cursor to line 26 with `j/k`.\r\n5. start insert comment with content `/***` above line 26.\r\n\r\nNote: it seems if I press `:26` to directly move cursor to line 26, this bug will not be triggered.\r\n\r\nA lag demo can be seen here: https://github.com/neovim/neovim/issues/25074#issuecomment-1713502035\r\n\r\n\r\n### Expected behavior\r\n\r\nNo lag in comment.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1088+g6b5f44817\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nno\r\n\r\n### Operating system/version\r\n\r\nmacos\r\n\r\n### Terminal name/version\r\n\r\nkitty + macos terminal\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Better way to get to line 26: `26ggzt` (the reason `:26` did not work for you is that it did not capture the right viewport, which `zt` fixes). C-d is a bit annoying since dependent on screen size.\r\n\r\n`init.lua` can be shortened and still reproduces:\r\n```lua\r\nlocal install_path = vim.fn.fnamemodify(\"slow_ts/treesitter\", \":p\")\r\nlocal url = \"https://github.com/nvim-treesitter/nvim-treesitter\"\r\nvim.fn.system({ \"git\", \"clone\", \"--branch\", \"main\", \"--depth=1\", url, install_path })\r\nif vim.fn.isdirectory(install_path) == 0 then\r\n  vim.opt.runtimepath:append(install_path)\r\nend\r\n\r\nrequire(\"nvim-treesitter\").setup({\r\n  ensure_install = { \"vue\", \"javascript\", \"typescript\", \"comment\", \"jsdoc\" },\r\n  auto_install = false,\r\n  install_dir = vim.fn.fnamemodify(\"slow_ts/.site\", \":p\"),\r\n})\r\n\r\n-- ^ not core to repro; only for installing parsers --\r\n\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n  pattern = { \"*\" },\r\n  callback = function() vim.treesitter.start() end,\r\n})\r\n```",
            "created_at": "2023-09-12T09:21:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715341574",
            "id": 1715341574,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mPgkG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715341574/reactions"
            },
            "updated_at": "2023-09-12T09:28:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715341574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "BTW from a cursory look, the symptoms seem the same as in #25088 (same flamegraph), just without needing `nvim-treesitter`'s indent to trigger. I'll add the print statements to make sure.",
            "created_at": "2023-09-12T09:25:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715347852",
            "id": 1715347852,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mPiGM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715347852/reactions"
            },
            "updated_at": "2023-09-12T09:26:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715347852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm pretty sure this is because there is a nested injection that occupies most of the buffer. Every edit will destroy and recreate the tree without any incremental parsing.",
            "created_at": "2023-09-12T09:27:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715350227",
            "id": 1715350227,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mPirT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715350227/reactions"
            },
            "updated_at": "2023-09-12T09:27:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715350227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I'm pretty sure this is because there is a nested injection that occupies most of the buffer. Every edit will destroy and recreate the tree without any incremental parsing.\r\n\r\nActually the parse is still really fast. It's the highlighter query results for `comment` that's slow to iterate over (there are too many results - around 4000). You can also observe this by just pressing C-L on the file with the opening comment tag added (no edit necessary).\r\n\r\nFor example, the following doesn't affect parsing, yet it removes the slowdown:\r\n```diff\r\ndiff --git a/runtime/lua/vim/treesitter/highlighter.lua b/runtime/lua/vim/treesitter/highlighter.lua\r\nindex 8d4d6a933..88e7a2781 100644\r\n--- a/runtime/lua/vim/treesitter/highlighter.lua\r\n+++ b/runtime/lua/vim/treesitter/highlighter.lua\r\n@@ -240,45 +240,6 @@ local function on_line_impl(self, buf, line, is_spell_nav)\r\n         highlighter_query:query():iter_captures(root_node, self.bufnr, line, root_end_row + 1)\r\n     end\r\n \r\n-    while line >= state.next_row do\r\n-      local capture, node, metadata = state.iter()\r\n-\r\n-      if capture == nil then\r\n-        break\r\n-      end\r\n-\r\n-      local range = vim.treesitter.get_range(node, buf, metadata[capture])\r\n-      local start_row, start_col, end_row, end_col = Range.unpack4(range)\r\n-      local hl = highlighter_query.hl_cache[capture]\r\n-\r\n-      local capture_name = highlighter_query:query().captures[capture]\r\n-      local spell = nil ---@type boolean?\r\n-      if capture_name == 'spell' then\r\n-        spell = true\r\n-      elseif capture_name == 'nospell' then\r\n-        spell = false\r\n-      end\r\n-\r\n-      -- Give nospell a higher priority so it always overrides spell captures.\r\n-      local spell_pri_offset = capture_name == 'nospell' and 1 or 0\r\n-\r\n-      if hl and end_row >= line and (not is_spell_nav or spell ~= nil) then\r\n-        local priority = (tonumber(metadata.priority) or vim.highlight.priorities.treesitter)\r\n-          + spell_pri_offset\r\n-        api.nvim_buf_set_extmark(buf, ns, start_row, start_col, {\r\n-          end_line = end_row,\r\n-          end_col = end_col,\r\n-          hl_group = hl,\r\n-          ephemeral = true,\r\n-          priority = priority,\r\n-          conceal = metadata.conceal,\r\n-          spell = spell,\r\n-        })\r\n-      end\r\n-      if start_row > line then\r\n-        state.next_row = start_row\r\n-      end\r\n-    end\r\n   end)\r\n end\r\n```\r\n\r\nMaybe that particular query just needs to be optimized. It's matching every single token (\"this\", \".\", \"treeStepsGroups\", \"=\", \"transSesoups\", etc), which seems suboptimal.",
            "created_at": "2023-09-12T10:30:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715464920",
            "id": 1715464920,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mP-rY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 4,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715464920/reactions"
            },
            "updated_at": "2023-09-12T10:30:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715464920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thousands of comment injections is a well-known pain point (that incremental injections were meant to solve -- and have solved for the vast majority of reported cases).\r\n\r\nIn the meantime, I consider \"don't install the comment parser\" a reasonable workaround, as its value is vanishingly small, compared to the headaches it creates.",
            "created_at": "2023-09-12T10:33:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715470173",
            "id": 1715470173,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mP_9d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715470173/reactions"
            },
            "updated_at": "2023-09-12T10:33:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715470173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Then we can probably close this and file it under https://github.com/nvim-treesitter/nvim-treesitter/issues/5057.\r\n\r\nAlthough one thing I wonder about is why highlighter's `on_line_impl` iterates to the `root_end_row` and not the window end row.",
            "created_at": "2023-09-12T10:39:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715478509",
            "id": 1715478509,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQB_t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715478509/reactions"
            },
            "updated_at": "2023-09-12T10:40:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715478509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just because the comment parser is a bad idea doesn't mean that there aren't performance issues worth fixing.",
            "created_at": "2023-09-12T10:41:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715480472",
            "id": 1715480472,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQCeY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715480472/reactions"
            },
            "updated_at": "2023-09-12T10:41:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715480472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Although one thing I wonder about is why highlighter's on_line_impl iterates to the root_end_row and not the window end row.\r\n\r\nIt doesn't iterate to `root_end_row`, it creates an iterator that can go to `root_end_row`. If a match exceeds `line`, then `on_line_imp` returns.",
            "created_at": "2023-09-12T10:42:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715482463",
            "id": 1715482463,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQC9f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715482463/reactions"
            },
            "updated_at": "2023-09-12T10:44:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715482463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It doesn't iterate to `root_end_row`\r\n\r\nI must've accused the wrong thing then, my bad.\r\n\r\nFor one reason or another, iter() is getting called on matches on line 170 when I'm on line 26 and my viewport only goes up to line 74. Not that it's a huge deal, as it's only a 3x factor difference",
            "created_at": "2023-09-12T10:49:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715491219",
            "id": 1715491219,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQFGT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715491219/reactions"
            },
            "updated_at": "2023-09-12T10:49:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715491219",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> For one reason or another, iter() is getting called on matches on line 170 when I'm on line 26 and my viewport only goes up to line 74. Not that it's a huge deal, as it's only a 3x factor difference\r\n\r\nFrom how I understand it works, `on_line_impl` will process up-to one match after `line`, but will then return:\r\n\r\n```lua\r\n    while line >= state.next_row do\r\n      ...\r\n      if hl and end_row >= line and (not is_spell_nav or spell ~= nil) then\r\n        ...\r\n        api.nvim_buf_set_extmark(buf, ns, start_row, start_col, {\r\n          end_line = end_row,\r\n          end_col = end_col,\r\n          ...\r\n        })\r\n      end\r\n      if start_row > line then\r\n        state.next_row = start_row\r\n      end\r\n    end\r\n\r\n```\r\n\r\nThis could be re-ordered so this doesn't happen but I don't think it's a big deal since you still need to call `iter()` the same number of times. Applying extmarks is cheap.",
            "created_at": "2023-09-12T10:56:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715502595",
            "id": 1715502595,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQH4D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715502595/reactions"
            },
            "updated_at": "2023-09-12T10:58:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715502595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Right, got it, it won't help because the issue isn't the matches but the number of non-matches that are captured.\r\n\r\nActually I wonder if this is really held back by the comment parser being a \"bad idea\". I buy it for some files, but on this particular file, only the comment *query* seems to be a bad idea, in its current state. And I feel like that might be fixable?\r\n\r\nIt looks like someone had luck removing some captures: https://github.com/nvim-treesitter/nvim-treesitter/issues/5057#issuecomment-1617833491. The kind of annoying thing is that I can't seem to get an `:InspectTree` up for `comment` filetype, so I can't improve it further",
            "created_at": "2023-09-12T11:02:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715510320",
            "id": 1715510320,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQJww",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715510320/reactions"
            },
            "updated_at": "2023-09-12T11:04:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715510320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is beside the point, though. The first order of business is to find out _what_ is slow here. If it's the languagetree/highlighter, that needs to be improved. If it's (just) the comment parser/queries, we're done here, and improvements need to be made elsewhere. \r\n\r\n> The kind of annoying thing is that I can't seem to get an :InspectTree up for comment filetype, so I can't improve it further\r\n\r\nThere _is_ no \"comment\" filetype. You can make `:InspectTree` show the injected nodes (rather, their language) by pressing `I`, though.\r\n\r\n",
            "created_at": "2023-09-12T11:05:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715514505",
            "id": 1715514505,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQKyJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715514505/reactions"
            },
            "updated_at": "2023-09-12T11:07:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715514505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The first order of business is to find out what is slow here.\r\n\r\nWe figured it out earlier, it's `iter_captures` because there are too many captures. There are a few defensive programming options from the Neovim side:\r\n* smarter caching - this could speed things up if you're editing outside of the big comment block\r\n* an config option to limit the number of captures processed\r\n\r\nBut unless there are more clever things `iter_captures` can do, I'm inclined to think that\r\n\r\n> we're done here, and improvements need to be made elsewhere.\r\n\r\napplies here, and \"elsewhere\" is specifically this file: https://github.com/nvim-treesitter/nvim-treesitter/blob/0ba881b7a2af0e24962e4522cf15ebd642261a90/queries/comment/highlights.scm. There's only so much Neovim can do if it receives a black box of 4000 captures which might be legitimate fresh matches.",
            "created_at": "2023-09-12T11:15:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715529736",
            "id": 1715529736,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQOgI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715529736/reactions"
            },
            "updated_at": "2023-09-12T11:16:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715529736",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`(_) @spell` looks like something that could produce a lot of captures.",
            "created_at": "2023-09-12T11:29:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715548267",
            "id": 1715548267,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQTBr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715548267/reactions"
            },
            "updated_at": "2023-09-12T11:29:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715548267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "LOL, great catch. This is almost certainly not the right way to do spell-checking.",
            "created_at": "2023-09-12T11:34:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715555103",
            "id": 1715555103,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mQUsf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715555103/reactions"
            },
            "updated_at": "2023-09-12T11:34:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715555103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> `(_) @spell`\r\n\r\nThis query doesn't seem to be necessary, because the parent language usually have something like `(comment) @comment @spell` already",
            "created_at": "2023-09-12T14:42:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1715862942",
            "id": 1715862942,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mRf2e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715862942/reactions"
            },
            "updated_at": "2023-09-12T14:42:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715862942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> `(_) @spell`\r\n\r\nTurns out this wasn't the only chatty query. Each of the following return 801 matches (matching every text node basically), for a total of 4005 matches.\r\n\r\n```scm\r\n(\"text\" @text.todo @nospell\r\n (#any-of? @text.todo \"TODO\" \"WIP\"))\r\n\r\n(\"text\" @text.note @nospell\r\n (#any-of? @text.note \"NOTE\" \"XXX\" \"INFO\" \"DOCS\" \"PERF\" \"TEST\"))\r\n\r\n(\"text\" @text.warning @nospell\r\n (#any-of? @text.warning \"HACK\" \"WARNING\" \"WARN\" \"FIX\"))\r\n\r\n(\"text\" @text.danger @nospell\r\n (#any-of? @text.danger \"FIXME\" \"BUG\" \"ERROR\"))\r\n\r\n(\"text\" @number\r\n (#lua-match? @number \"^#[0-9]+$\"))\r\n```\r\n\r\nPossible lead: https://tree-sitter.github.io/tree-sitter/using-parsers#:~:text=Note%20%E2%80%94%20Predicates%20are%20not%20handled\r\n\r\n> Note — Predicates are not handled directly by the Tree-sitter C library. They are just exposed in a structured form so that higher-level code can perform the filtering. However, higher-level bindings to Tree-sitter like [the Rust Crate](https://github.com/tree-sitter/tree-sitter/tree/master/lib/binding_rust) or the [WebAssembly binding](https://github.com/tree-sitter/tree-sitter/tree/master/lib/binding_web) do implement a few common predicates like the #eq?, #match?, and #any-of? predicates explained above.\r\n\r\n---\r\n\r\n> You can make :InspectTree show the injected nodes (rather, their language) by pressing I, though.\r\n\r\nThanks for the tip. In this case, `style_element > raw_text` is expanded, so I can see the injected `scss` nodes, but `script_element > raw_text` is unexpanded, there is no `javascript` subtree. Maybe `:InspectTree` has its own `LanguageTree` that is more lazy than the highlighter?",
            "created_at": "2023-09-12T19:16:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716282667",
            "id": 1716282667,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTGUr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716282667/reactions"
            },
            "updated_at": "2023-09-12T19:38:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716282667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Note — Predicates are not handled directly by the Tree-sitter C library.\r\n\r\nAh this is indeed exactly what's happening:\r\n\r\nhttps://github.com/neovim/neovim/blob/1f551e068f728ff38bd7fdcfa3a6daf362bab9da/runtime/lua/vim/treesitter/query.lua#L608\r\n\r\nPredicates are happening on the Lua side, so even though there are no e.g. TODO comments, every word is checked on the Lua side for whether it is e.g. \"TODO\". \r\n\r\nWould it be faster if it were in C? Also should only be re-checked for changed nodes if possible, but I'm not sure if Tree-sitter does the min-edit optimally here",
            "created_at": "2023-09-12T19:41:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716314217",
            "id": 1716314217,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTOBp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716314217/reactions"
            },
            "updated_at": "2023-09-12T19:43:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716314217",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would it be faster if it were in C\n\nMost definitely but also quite non-trivial.\n\n> Also should only be re-checked for changed nodes if possible, but I'm not sure if Tree-sitter does the min-edit optimally here\n\nEven more non-trivial ",
            "created_at": "2023-09-12T19:44:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716317055",
            "id": 1716317055,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTOt_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716317055/reactions"
            },
            "updated_at": "2023-09-12T19:45:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716317055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not only not trivial, but also not desired -- predicates and directives are meant to be user customizable.",
            "created_at": "2023-09-12T19:47:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716320882",
            "id": 1716320882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTPpy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716320882/reactions"
            },
            "updated_at": "2023-09-12T19:47:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716320882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> predicates and directives are meant to be user customizable.\n\nI thought user-definable, not customizable?\n\nI don't see why we couldn't implement some of the predicates directly in C.",
            "created_at": "2023-09-12T19:57:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716337949",
            "id": 1716337949,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTT0d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716337949/reactions"
            },
            "updated_at": "2023-09-12T19:57:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716337949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Either, we can avoid the need to do this by fixing (or killing) the comment parser. A lot of these queries should be parsed directly.",
            "created_at": "2023-09-12T19:59:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716339675",
            "id": 1716339675,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTUPb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716339675/reactions"
            },
            "updated_at": "2023-09-12T19:59:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716339675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I thought user-definable, not customizable?\r\n\r\nThere is some commentary (which I don't fully grok) under the `match_preds` implementation that suggests that maybe users want to hook into the implementation details?\r\n\r\nhttps://github.com/neovim/neovim/blob/1f551e068f728ff38bd7fdcfa3a6daf362bab9da/runtime/lua/vim/treesitter/query.lua#L612-L615\r\n\r\n> A lot of these queries should be parsed directly.\r\n\r\nA non-TS comment highlighter might still need to be filtered by the lang from the TS language tree but would definitely be more efficient if can just search the changed range (it's not really a parser just an equality check). All doable if the APIs are there.\r\n\r\n> Either, we can avoid the need to do this by fixing (or killing) the comment parser.\r\n\r\nDo we think the comment query will be the last time a query wants to evaluate predicates on a large number of nodes?",
            "created_at": "2023-09-12T20:16:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716364051",
            "id": 1716364051,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTaMT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716364051/reactions"
            },
            "updated_at": "2023-09-12T20:20:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716364051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Not only not trivial, but also not desired -- predicates and directives are meant to be user customizable.\r\n\r\nI'm sure `_rawquery` could take a flag to optionally pre-filter matches, so that the user can take the faster pre-filter, or do custom filtering themselves\r\n\r\nThat being said, point understood re: doing it in C not necessarily being the answer right now.\r\n",
            "created_at": "2023-09-12T20:26:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716379104",
            "id": 1716379104,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTd3g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716379104/reactions"
            },
            "updated_at": "2023-09-12T20:27:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716379104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do we think the comment query will be the last time a query wants to evaluate predicates on a large number of nodes?\n\nThe comment parser is usually the reason for a lot of issues.\n\nThe issue here with the comment parser is that the queries are just too general, almost pointlessly so. What is the parser even parsing?",
            "created_at": "2023-09-12T20:41:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716400494",
            "id": 1716400494,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTjFu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716400494/reactions"
            },
            "updated_at": "2023-09-12T20:41:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716400494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The issue here with the comment parser is that the queries are just too general, almost pointlessly so. What is the parser even parsing?\r\n\r\nThe answer is nothing: https://github.com/stsewd/tree-sitter-comment/blob/master/src/grammar.json . It's just a glorified string split + one paren match. It could be replaced by `/(todo|fixme)\\(([^()]*)\\)/`\r\n\r\nI suspect it's only there just because it's a convenient API. It should probably be deprecated from nvim-treesitter, regardless of async parsing.",
            "created_at": "2023-09-12T21:03:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716434112",
            "id": 1716434112,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTrTA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716434112/reactions"
            },
            "updated_at": "2023-09-12T21:04:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716434112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To be perfectly fair, nobody is forcing you to install it. And I've been _very_ vocal about just installing every parser under the sun getting you what you deserve.",
            "created_at": "2023-09-12T21:06:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716438655",
            "id": 1716438655,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTsZ_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716438655/reactions"
            },
            "updated_at": "2023-09-12T21:06:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716438655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> A lot of these queries should be parsed directly.\r\n\r\nI think you could probably just do\r\n\r\n```lua\r\nedit_range = -- from some callback\r\nfor_each_tree(function(ts_tree, lang_tree)\r\n  if tree:lang() == 'comment'\r\n    -- update extmarks in overlap(edit_range, ts_tree) using user-configured/plugin-configured regex\r\n  end\r\nend)\r\n```\r\n\r\nI could try making a plugin for it although I'm very unfamiliar with the relevant APIs.",
            "created_at": "2023-09-12T21:15:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716452359",
            "id": 1716452359,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTvwH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716452359/reactions"
            },
            "updated_at": "2023-09-12T21:15:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716452359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No. We will not add workarounds for ill-behaved parsers. Just don't install them; problem solved.",
            "created_at": "2023-09-12T21:16:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716453140",
            "id": 1716453140,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mTv8U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716453140/reactions"
            },
            "updated_at": "2023-09-12T21:16:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716453140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> add workarounds\r\n\r\nThat's not what I'm saying - I'm agreeing that the parser shouldn't be installed and pointing out that highlighting can be solved in userspace (plugins). Anyway, I think this issue can be closed.\r\n\r\n> I've been very vocal\r\n\r\nNot key to this issue, but probably the signposting could be more than just GitHub issue comments. Some of the items in the README say \"experimental, \", could we not put \"slow, \" next to this one? https://github.com/nvim-treesitter/nvim-treesitter/pull/5386",
            "created_at": "2023-09-12T21:28:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/25113#issuecomment-1716476371",
            "id": 1716476371,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25113",
            "node_id": "IC_kwDOAPphoM5mT1nT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716476371/reactions"
            },
            "updated_at": "2023-09-12T21:29:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1716476371",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        }
    ],
    "comments": 30,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25113/comments",
    "created_at": "2023-09-12T09:21:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25113/events",
    "html_url": "https://github.com/neovim/neovim/issues/25113",
    "id": 1892065066,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25113/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5wxp8q",
    "number": 25113,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25113/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25113/timeline",
    "title": "Lag is noticeable within comment while the treesitter highlight is enabled.",
    "updated_at": "2023-09-12T21:29:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25113",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8279858?v=4",
        "events_url": "https://api.github.com/users/towry/events{/privacy}",
        "followers_url": "https://api.github.com/users/towry/followers",
        "following_url": "https://api.github.com/users/towry/following{/other_user}",
        "gists_url": "https://api.github.com/users/towry/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/towry",
        "id": 8279858,
        "login": "towry",
        "node_id": "MDQ6VXNlcjgyNzk4NTg=",
        "organizations_url": "https://api.github.com/users/towry/orgs",
        "received_events_url": "https://api.github.com/users/towry/received_events",
        "repos_url": "https://api.github.com/users/towry/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/towry/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/towry/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/towry"
    }
}