{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nMethods relying on the default `location_handler` don't send `context` object to custom `on_list` handler.\r\n\r\n1. `textDocument/declaration`\r\n2. `textDocument/definition`\r\n3. `textDocument/typeDefinition`\r\n4. `textDocument/implementation`\r\n\r\n<https://github.com/neovim/neovim/blob/8df37423781493f58de060e1c9219cd1c3768130/runtime/lua/vim/lsp/handlers.lua#L425>\r\n_Ref 1. Other default handlers pass the table element `context = ctx`, which is available in this handler as well._\r\n\r\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\r\n\r\n**`minimal-init.lua`**\r\n\r\n~~~lua\r\nlocal pattern = 'lua'\r\nlocal cmd = {'lua-language-server'}  -- which is in `$PATH`.\r\nlocal root_markers = {'.git', '.luarc.json'}  -- which is a sufficient subset of `{ \".luarc.json\", \".luarc.jsonc\", \".luacheckrc\", \".stylua.toml\", \"stylua.toml\", \"selene.toml\", \"selene.yml\", \".git\" }`.\r\nlocal settings = vim.empty_dict()\r\n\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = pattern,\r\n  callback = function(args)\r\n    local match = vim.fs.find(root_markers, { path = args.file, upward = true })[1]\r\n    local root_dir = match and vim.fn.fnamemodify(match, ':p:h') or nil\r\n    print(vim.lsp.start({\r\n      name = 'luals',\r\n      cmd = cmd,\r\n      root_dir = root_dir,\r\n      settings = settings\r\n    }))\r\n  end\r\n})\r\n~~~\r\n\r\n**`test.lua`**\r\n\r\n~~~lua\r\nlocal function test()\r\n  return \"Hello world\"\r\nend\r\n~~~\r\n\r\nAfter ensuring cursor is pointing to `test()`.\r\n\r\n~~~vim\r\n:lua vim.lsp.buf.definition({ on_list = function(what) print(what.context) end })\r\n~~~\r\n\r\n### Expected behavior\r\n\r\nExpected `context` object to be populated for methods using `location_handler`, similar to other LSP methods such as `textDocument/references`.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.9.4; Build type: Release; LuaJIT 2.1.1699524327\r\n\r\n### Language server name/version\r\n\r\nLuaLS/lua-language-server (v3.7.2) but assuming applies to all servers\r\n\r\n### Operating system/version\r\n\r\nmacOS 14.2.1 (23C71) but assuming applies to all operating systems\r\n\r\n### Log file\r\n\r\n_No response_\r\n\r\n### Contributing checklist\r\n\r\nThanks in advance for looking at report ðŸ™‚ .\r\n\r\n1. Checked FAQ.\r\n1. Searched for issues: `is:issue lsp context method`.\r\n1. Not a usage question.\r\n1. Tried minimal config.\r\n1. Followed `git-blame` for `runtime/lua/vim/lsp/handlers.lua`. `context` never seems to have been passed in.\r\n    1. [First blame for commit `3ded2ab`](https://github.com/neovim/neovim/blame/43cd91a4f4276da2b9cb231032ca63e47e7f32a2/runtime/lua/vim/lsp/handlers.lua#L359) (feat(lsp): allow passing custom list handler to LSP functions that return lists, 2022-06-26)\r\n    1. [Latest blame for commit `adbe7f3`](https://github.com/neovim/neovim/blame/8df37423781493f58de060e1c9219cd1c3768130/runtime/lua/vim/lsp/handlers.lua#L425) (fix(lsp): call `on_list()` even for single location, 2023-11-01)",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "See also the discussion in https://github.com/neovim/neovim/pull/26507#discussion_r1434951201 - going forward with multi client support there likely won't be a `context` property anymore on the `on_list` handler.",
            "created_at": "2024-01-08T18:58:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/26936#issuecomment-1881653522",
            "id": 1881653522,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26936",
            "node_id": "IC_kwDOAPphoM5wJ8ES",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881653522/reactions"
            },
            "updated_at": "2024-01-08T18:58:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881653522",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "NONE",
            "body": "Oh, interesting. Thanks for linking that discussion ðŸ™‚ .\r\n\r\nIf it helps, my usecase is deciding whether to open the location list based on the LSP method.\r\n\r\n~~~lua\r\n-- Link: `:help lsp-on-list-handler`\r\nlocal function on_list(what)\r\n\tvim.fn.setloclist(0, {}, ' ', what)\r\n\t-- Similar to `:lgrep` behaviour.\r\n\tvim.cmd.ll()\r\n\t-- Link: [`textDocument/definition` doesn't send `context` to `on_list` handler](https://github.com/neovim/neovim/issues/26936)\r\n\tif what.context and (\r\n\t\t    what.context.method == 'textDocument/references' or\r\n\t\t    what.context.method == 'textDocument/documentSymbol')\r\n\tthen\r\n\t\tvim.cmd.lopen()\r\n\tend\r\nend\r\n~~~\r\n\r\nBut I easily see an alternative, by adding another parameter to `on_list`, so wouldn't be a concern if `context` was removed entirely.\r\n\r\n~~~lua\r\n-- @type method string\r\nlocal function on_list(_, method)\r\n    -- ...\r\nend\r\n\r\nlocal function on_attach()\r\n    vim.keymap.set('n', 'gd', function()\r\n        vim.lsp.buf.definition({ on_list = function(what)\r\n            on_list(what, 'textDocument/definition')\r\n        end })\r\nend",
            "created_at": "2024-01-08T19:23:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/26936#issuecomment-1881690190",
            "id": 1881690190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26936",
            "node_id": "IC_kwDOAPphoM5wKFBO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881690190/reactions"
            },
            "updated_at": "2024-01-08T19:23:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881690190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
                "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
                "followers_url": "https://api.github.com/users/ss-raicangu/followers",
                "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
                "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ss-raicangu",
                "id": 49044752,
                "login": "ss-raicangu",
                "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
                "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
                "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
                "repos_url": "https://api.github.com/users/ss-raicangu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ss-raicangu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If it helps, my usecase is deciding whether to open the location list based on the LSP method.\r\n\r\nThat's something we can actually keep. It's the `client_id` property that is becoming a problem.",
            "created_at": "2024-01-08T19:26:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/26936#issuecomment-1881694116",
            "id": 1881694116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26936",
            "node_id": "IC_kwDOAPphoM5wKF-k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881694116/reactions"
            },
            "updated_at": "2024-01-08T19:26:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881694116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ah, nice (re: LSP method).\r\n\r\nYea, agreed (re: client_id). I have no good ideas either. To throw out one:\r\n\r\n1. On context table, `client_id = (number | nil), client_ids = (table)`\r\n   1. Breaking change for client_id\r\n   2. nil indicates multi-client response\r\n   3. Examples: `client_id = nil, client_ids = { 1, 2, 3 }`, `client_id = 1, client_ids = { 1 }`\r\n   4. But at this point, might as well have `client_ids` be the only property and let `#client_ids` decide whether there's multiple servers ðŸ¤· .",
            "created_at": "2024-01-08T19:46:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/26936#issuecomment-1881719379",
            "id": 1881719379,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26936",
            "node_id": "IC_kwDOAPphoM5wKMJT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881719379/reactions"
            },
            "updated_at": "2024-01-08T19:47:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881719379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
                "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
                "followers_url": "https://api.github.com/users/ss-raicangu/followers",
                "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
                "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ss-raicangu",
                "id": 49044752,
                "login": "ss-raicangu",
                "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
                "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
                "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
                "repos_url": "https://api.github.com/users/ss-raicangu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ss-raicangu"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26936/comments",
    "created_at": "2024-01-07T08:01:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26936/events",
    "html_url": "https://github.com/neovim/neovim/issues/26936",
    "id": 2069032410,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26936/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM57Uu3a",
    "number": 26936,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26936/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26936/timeline",
    "title": "`textDocument/definition` doesn't send `context` to `on_list` handler",
    "updated_at": "2024-01-08T19:47:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26936",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/49044752?v=4",
        "events_url": "https://api.github.com/users/ss-raicangu/events{/privacy}",
        "followers_url": "https://api.github.com/users/ss-raicangu/followers",
        "following_url": "https://api.github.com/users/ss-raicangu/following{/other_user}",
        "gists_url": "https://api.github.com/users/ss-raicangu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ss-raicangu",
        "id": 49044752,
        "login": "ss-raicangu",
        "node_id": "MDQ6VXNlcjQ5MDQ0NzUy",
        "organizations_url": "https://api.github.com/users/ss-raicangu/orgs",
        "received_events_url": "https://api.github.com/users/ss-raicangu/received_events",
        "repos_url": "https://api.github.com/users/ss-raicangu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ss-raicangu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ss-raicangu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ss-raicangu"
    }
}