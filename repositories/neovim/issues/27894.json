{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\ndebug.traceback is ignored\r\n\r\n### Steps to reproduce\r\n\r\n    $ echo \"_G.debug.traceback = function() return 'foo' end\\nprint(1 + '')\" > test.lua && nvim --clean -l test.lua\r\n\r\n### Expected behavior\r\n\r\nshows \"foo\" as traceback\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.9.5 Release\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nn/a\r\n\r\n### Operating system/version\r\n\r\nmacos 13.2.1\r\n\r\n### Terminal name/version\r\n\r\nn/a\r\n\r\n### $TERM environment variable\r\n\r\nn/a\r\n\r\n### Installation\r\n\r\nbrew",
    "closed_at": "2024-03-17T07:42:00Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think this is a limitation of Lua C API. The error handler function of `lua_pcall()` needs to be available before calling `lua_pcall()`, so it's not possible to change it in the middle of a script.\r\n```\r\nlua_pcall                                                          *lua_pcall()*\r\n>c\r\n    lua_pcall (lua_State *L, int nargs, int nresults, int errfunc);\r\n<\r\n        Calls a function in protected mode.\r\n\r\n        Both `nargs` and `nresults` have the same meaning as in `lua_call`\r\n        (see |lua_call()|). If there are no errors during the call,\r\n        `lua_pcall` behaves exactly like `lua_call`. However, if there is any\r\n        error, `lua_pcall` catches it, pushes a single value on the stack (the\r\n        error message), and returns an error code. Like `lua_call`,\r\n        `lua_pcall` always removes the function and its arguments from the\r\n        stack.\r\n\r\n        If `errfunc` is 0, then the error message returned on the stack is\r\n        exactly the original error message. Otherwise, `errfunc` is the stack\r\n        index of an `error` `handler function`. (In the current\r\n        implementation, this index cannot be a pseudo-index.) In case of\r\n        runtime errors, this function will be called with the error message\r\n        and its return value will be the message returned on the stack by\r\n        `lua_pcall`.\r\n\r\n        Typically, the error handler function is used to add more debug\r\n        information to the error message, such as a stack traceback. Such\r\n        information cannot be gathered after the return of `lua_pcall`, since\r\n        by then the stack has unwound.\r\n```",
            "created_at": "2024-03-17T07:26:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/27894#issuecomment-2002344404",
            "id": 2002344404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27894",
            "node_id": "IC_kwDOAPphoM53WVnU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002344404/reactions"
            },
            "updated_at": "2024-03-17T07:26:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002344404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This can be achieved by overriding `debug.traceback` from a separate script that is sourced before `-l`, e.g. a script sourced inside a `--cmd` command.\r\n\r\nIf you are OK with having an extra level in the traceback, you can also invoke the script recursively:\r\n```lua\r\nlocal function traceback() return 'foo' end\r\nif debug.traceback ~= traceback then\r\n  debug.traceback = traceback\r\n  vim.cmd.luafile(_G.arg[0])\r\n  return\r\nend\r\nprint(1 + '')\r\n```",
            "created_at": "2024-03-17T07:44:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/27894#issuecomment-2002348627",
            "id": 2002348627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27894",
            "node_id": "IC_kwDOAPphoM53WWpT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002348627/reactions"
            },
            "updated_at": "2024-03-17T07:44:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002348627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "> This can be achieved by overriding `debug.traceback` from a separate script that is sourced before `-l`, e.g. a script sourced inside a `--cmd` command.\r\n> \r\n> If you are OK with having an extra level in the traceback, you can also invoke the script recursively:\r\n> \r\n> ```lua\r\n> local function traceback() return 'foo' end\r\n> if debug.traceback ~= traceback then\r\n>   debug.traceback = traceback\r\n>   vim.cmd.luafile(_G.arg[0])\r\n>   return\r\n> end\r\n> print(1 + '')\r\n> ```\r\n\r\nthanks for all the help",
            "created_at": "2024-03-17T13:14:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/27894#issuecomment-2002461608",
            "id": 2002461608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27894",
            "node_id": "IC_kwDOAPphoM53WyOo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002461608/reactions"
            },
            "updated_at": "2024-03-17T13:14:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002461608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/83528263?v=4",
                "events_url": "https://api.github.com/users/jake-stewart/events{/privacy}",
                "followers_url": "https://api.github.com/users/jake-stewart/followers",
                "following_url": "https://api.github.com/users/jake-stewart/following{/other_user}",
                "gists_url": "https://api.github.com/users/jake-stewart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jake-stewart",
                "id": 83528263,
                "login": "jake-stewart",
                "node_id": "MDQ6VXNlcjgzNTI4MjYz",
                "organizations_url": "https://api.github.com/users/jake-stewart/orgs",
                "received_events_url": "https://api.github.com/users/jake-stewart/received_events",
                "repos_url": "https://api.github.com/users/jake-stewart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jake-stewart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jake-stewart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jake-stewart"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27894/comments",
    "created_at": "2024-03-17T04:36:26Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27894/events",
    "html_url": "https://github.com/neovim/neovim/issues/27894",
    "id": 2190476178,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27894/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6CkAOS",
    "number": 27894,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27894/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27894/timeline",
    "title": "use debug.traceback for lua traceback",
    "updated_at": "2024-03-17T13:14:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27894",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/83528263?v=4",
        "events_url": "https://api.github.com/users/jake-stewart/events{/privacy}",
        "followers_url": "https://api.github.com/users/jake-stewart/followers",
        "following_url": "https://api.github.com/users/jake-stewart/following{/other_user}",
        "gists_url": "https://api.github.com/users/jake-stewart/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jake-stewart",
        "id": 83528263,
        "login": "jake-stewart",
        "node_id": "MDQ6VXNlcjgzNTI4MjYz",
        "organizations_url": "https://api.github.com/users/jake-stewart/orgs",
        "received_events_url": "https://api.github.com/users/jake-stewart/received_events",
        "repos_url": "https://api.github.com/users/jake-stewart/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jake-stewart/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jake-stewart/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jake-stewart"
    }
}