{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\n### TL;DR\r\n`xpcall` doesn't fail on LuaJIT when called as\r\n```lua\r\nxpcall(func, handler, arg1, arg2, ...)\r\n```\r\nbut _does_ fail when compiled against Lua 5.1\r\n\r\n---\r\n\r\nAssume the following lua code.\r\n```lua\r\nfunction add(a, b)\r\n  return a + b\r\nend\r\nfunction handler(err)\r\n  print(err)\r\nend\r\n```\r\n\r\nNow, `:h luaref-xpcall()` states -\r\n```vimhelp\r\nxpcall({f}, {err})                                             *luaref-xpcall()*\r\n        This function is similar to `pcall` (see |luaref-pcall()|), except that\r\n        you can set a new error handler.\r\n```\r\n`:h luaref-pcall()`\r\n```vimhelp\r\npcall({f}, {arg1}, {...})                                       *luaref-pcall()*\r\n        Calls function {f} with the given arguments in `protected mode`. This\r\n```\r\n\r\nSo according to the documentation, this is valid lua code -\r\n```lua\r\npcall(add, 1, 2)\r\n```\r\n\r\nSo far so good.\r\n\r\n---\r\nNow here comes the problem. \r\n \r\nNote that the `xpcall` documentation said\r\n> This function is similar to `pcall`, except that\r\n>        you can set a new error handler.\r\n\r\nSo people may assume that it means xpcall is the same as pcall, except with an error handler function after `func` and **before the arguments.**\r\n\r\nNow, the function signature of xpcall is written as `xpcall(f, err)`, (which is correct)  \r\nbut this piece of information directly contradicts the previous assumption made by the reader!\r\n\r\nSo what do they do? They, like a sensible person, test it out for themselves!  \r\nThey download an official version of neovim (from any of the relevant sources) and run -\r\n```lua\r\nprint(xpcall(add, handler, 1, 2))\r\n```\r\nit prints -\r\n```\r\ntrue\r\n3\r\n```\r\nSo, they conclude their assumption was correct! `xpcall` _does_ take extra arguments (that are then passed to `f`). The documention just hasn't been updated, they think. And they go there merry way making lua plugins.\r\n\r\nNow what they _didn't_ know is that the same `xpcall` call would **fail** if neovim was compiled with the official Lua 5.1 release. They write a plugin based on that false assumption, and somebody writes their own plugin that depends on that plugin,  \r\n...  \r\nand now suddenly there's a neovim plugin that fails _silently_ when it's run on a neovim distribution that's compiled on Lua 5.1 (probably due to LuaJIT not being available).\r\n\r\nThe plugin user files a bug report, but neither parties have any idea what might be failing, because there's no error message! How am I supposed to debug an error if there _is_ no error?!\r\n\r\n---\r\n\r\n### Steps to reproduce\r\n\r\nSee above.\r\n\r\n### Expected behavior\r\n\r\nTwo options -\r\n1. Make LuaJIT-compiled neovim's `xpcall` fail when provided more/less than 2 arguments\r\n2. Make Lua-compiled neovim transparently accept the additional arguments, and update documention to reflect the same.\r\n\r\n**NOTE:**  \r\nJust updating the documention without fixing the behaviour should NOT be an option IMHO/\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.9.5\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nany\r\n\r\n### Terminal name/version\r\n\r\nany\r\n\r\n### $TERM environment variable\r\n\r\nany\r\n\r\n### Installation\r\n\r\nany",
    "closed_at": "2024-02-01T15:50:19Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't see what this has to do with Neovim; this is purely about LuaJIT/PUC Lua differences. You get the interpreter you (or the person who built for you) chose.\r\n\r\nAnd this _is_ documented: https://luajit.org/extensions.html",
            "created_at": "2024-02-01T15:49:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/27289#issuecomment-1921635518",
            "id": 1921635518,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27289",
            "node_id": "IC_kwDOAPphoM5yidS-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921635518/reactions"
            },
            "updated_at": "2024-02-01T15:50:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921635518",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As long as there isn't any code in our runtime that depends on this, there isn't an issue here.",
            "created_at": "2024-02-01T19:50:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/27289#issuecomment-1922111973",
            "id": 1922111973,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27289",
            "node_id": "IC_kwDOAPphoM5ykRnl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1922111973/reactions"
            },
            "updated_at": "2024-02-01T19:50:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1922111973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27289/comments",
    "created_at": "2024-02-01T15:46:47Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27289/events",
    "html_url": "https://github.com/neovim/neovim/issues/27289",
    "id": 2112834503,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "current behavior is by design, and change is not desired",
            "id": 77997479,
            "name": "closed:wontfix",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27289/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5970vH",
    "number": 27289,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27289/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27289/timeline",
    "title": "Invalid xpcall fails silently when neovim is built against lua 5.1",
    "updated_at": "2024-02-01T22:14:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27289",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/56714626?v=4",
        "events_url": "https://api.github.com/users/subnut/events{/privacy}",
        "followers_url": "https://api.github.com/users/subnut/followers",
        "following_url": "https://api.github.com/users/subnut/following{/other_user}",
        "gists_url": "https://api.github.com/users/subnut/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/subnut",
        "id": 56714626,
        "login": "subnut",
        "node_id": "MDQ6VXNlcjU2NzE0NjI2",
        "organizations_url": "https://api.github.com/users/subnut/orgs",
        "received_events_url": "https://api.github.com/users/subnut/received_events",
        "repos_url": "https://api.github.com/users/subnut/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/subnut/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/subnut/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/subnut"
    }
}