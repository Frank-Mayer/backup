{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal"
        }
    ],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nAfter 7626f431d84fc3a6eb82d0d23d436e3e31e991ce executing `:highlight clear` inside a headless process can lead to not proper screen state.\r\n\r\n### Steps to reproduce\r\n\r\n1. Source the following script with `nvim` executable pointing to the latest `main`:\r\n```lua\r\n-- Set up headless child process\r\nlocal pipe = vim.fn.tempname()\r\nlocal args = { 'nvim', '--clean', '-n', '--listen', pipe, '--headless', '--cmd', 'set lines=10 columns=40' }\r\nvim.fn.jobstart(args)\r\n\r\nvim.loop.sleep(100)\r\nlocal channel = vim.fn.sockconnect('pipe', pipe, { rpc = true })\r\n\r\n-- Execute `hi clear` command\r\nvim.rpcrequest(channel, 'nvim_command', 'highlight clear')\r\n\r\n-- Get screenshot\r\nlocal get_screenshot_lua_cmd = [[\r\n  local text = {}\r\n  for i = 1, vim.o.lines do\r\n    local text_line = {}\r\n    for j = 1, vim.o.columns do\r\n      table.insert(text_line, vim.fn.screenstring(i, j))\r\n    end\r\n    table.insert(text, table.concat(text_line))\r\n  end\r\n  return text\r\n]]\r\nlocal screenshot = vim.rpcrequest(channel, 'nvim_exec_lua', get_screenshot_lua_cmd, {})\r\n\r\n-- Close child process\r\nvim.rpcnotify(channel, 'nvim_command', 'qall!')\r\n\r\n-- Show screenshot lines\r\nvim.cmd('enew')\r\nvim.api.nvim_buf_set_lines(0, 0, -1, false, screenshot)\r\n```\r\n\r\nOn `main` (4625394a767fab311f75ef40f4f15c661156e071) this gives me the following output:\r\n```\r\n                                        \r\n~                                       \r\n~                                       \r\n~                                       \r\n~                                       \r\n~                                       \r\n~                                       \r\n~                                       \r\n[No Name]             0,0-1          All\r\n[No Name]             0,0-1          All\r\n```\r\n\r\n------\r\n\r\nApplying the following patch (basically negating the change in 7626f431d84fc3a6eb82d0d23d436e3e31e991ce) fixes this issue:\r\n\r\n```patch\r\ndiff --git a/src/nvim/ui.c b/src/nvim/ui.c\r\nindex 27458d588b..af6fc1b503 100644\r\n--- a/src/nvim/ui.c\r\n+++ b/src/nvim/ui.c\r\n@@ -194,6 +194,10 @@ void ui_refresh(void)\r\n     abort();\r\n   }\r\n \r\n+  if (!ui_active()) {\r\n+    return;\r\n+  }\r\n+\r\n   int width = INT_MAX;\r\n   int height = INT_MAX;\r\n   bool ext_widgets[kUIExtCount];\r\n@@ -232,10 +236,6 @@ void ui_refresh(void)\r\n     }\r\n   }\r\n \r\n-  if (!ui_active()) {\r\n-    return;\r\n-  }\r\n-\r\n   if (updating_screen) {\r\n     ui_schedule_refresh();\r\n     return;\r\n```\r\n\r\nNow the script output is as expected (there is an empty line in place of Command line):\r\n```\r\n                                        \r\n~                                       \r\n~                                       \r\n~                                       \r\n~                                       \r\n~                                       \r\n~                                       \r\n~                                       \r\n[No Name]             0,0-1          All\r\n                                        \r\n```\r\n\r\n### Expected behavior\r\n\r\nExecuting `:highlight clear` never results into an improper screen state.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-3026+ga41546d4a\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNo (doesn't have this functionality)\r\n\r\n### Operating system/version\r\n\r\nEndeavourOS Linux x86_64 (6.8.7-arch1-2)\r\n\r\n### Terminal name/version\r\n\r\nst-0.9\r\n\r\n### $TERM environment variable\r\n\r\nst-256color\r\n\r\n### Installation\r\n\r\nBoth appimage and from source",
    "closed_at": "2024-04-29T00:51:34Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Right, https://github.com/neovim/neovim/commit/7626f431d84fc3a6eb82d0d23d436e3e31e991ce incorrectly assumed the first 2 for loops in `ui_refresh()` would have no effect with `ui_count == 0`. I think this should fix the issue:\r\n\r\n```diff\r\n--- a/src/nvim/ui.c\r\n+++ b/src/nvim/ui.c\r\n@@ -198,7 +198,7 @@ void ui_refresh(void)\r\n   int height = INT_MAX;\r\n   bool ext_widgets[kUIExtCount];\r\n   for (UIExtension i = 0; (int)i < kUIExtCount; i++) {\r\n-    ext_widgets[i] = true;\r\n+    ext_widgets[i] = ui_active();\r\n   }\r\n\r\n   bool inclusive = ui_override();\r\n```\r\n\r\nAlthough it might be cleaner to just break out activating internalized UI capabilities from `ui_refresh()`. I'm not sure anything but that is necessary for `vim.ui_attach()`. ",
            "created_at": "2024-04-28T18:46:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/28549#issuecomment-2081597937",
            "id": 2081597937,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28549",
            "node_id": "IC_kwDOAPphoM58Eqnx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081597937/reactions"
            },
            "updated_at": "2024-04-28T23:46:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081597937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Right, [7626f43](https://github.com/neovim/neovim/commit/7626f431d84fc3a6eb82d0d23d436e3e31e991ce) incorrectly assumed the first 2 for loops for in `ui_refresh()` would have no effect with `ui_count == 0`. I think this should fix the issue:\r\n> \r\n> ```diff\r\n> --- a/src/nvim/ui.c\r\n> +++ b/src/nvim/ui.c\r\n> @@ -198,7 +198,7 @@ void ui_refresh(void)\r\n>    int height = INT_MAX;\r\n>    bool ext_widgets[kUIExtCount];\r\n>    for (UIExtension i = 0; (int)i < kUIExtCount; i++) {\r\n> -    ext_widgets[i] = true;\r\n> +    ext_widgets[i] = ui_active();\r\n>    }\r\n> \r\n>    bool inclusive = ui_override();\r\n> ```\r\n\r\nI can (cautiously) confirm that this patch fixes the reported issue and all the real ones I have on current Nightly.",
            "created_at": "2024-04-28T18:58:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/28549#issuecomment-2081601873",
            "id": 2081601873,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28549",
            "node_id": "IC_kwDOAPphoM58ErlR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081601873/reactions"
            },
            "updated_at": "2024-04-28T18:58:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081601873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks, Luuk! Latest Nightly build indeed does not have the \"real world\" issues I saw earlier.",
            "created_at": "2024-04-29T08:12:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/28549#issuecomment-2082121318",
            "id": 2082121318,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28549",
            "node_id": "IC_kwDOAPphoM58GqZm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2082121318/reactions"
            },
            "updated_at": "2024-04-29T08:12:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2082121318",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28549/comments",
    "created_at": "2024-04-28T14:09:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28549/events",
    "html_url": "https://github.com/neovim/neovim/issues/28549",
    "id": 2267587562,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "f9d0c4",
            "default": false,
            "description": "wrong behavior that was introduced in a previous commit (please bisect)",
            "id": 619474658,
            "name": "bug-regression",
            "node_id": "MDU6TGFiZWw2MTk0NzQ2NTg=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-regression"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol",
            "id": 640132777,
            "name": "ui-extensibility",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-extensibility"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28549/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6HKKPq",
    "number": 28549,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28549/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28549/timeline",
    "title": "Executing `:highlight clear` in headless process can lead to not proper screen state",
    "updated_at": "2024-04-29T08:12:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28549",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski"
    }
}