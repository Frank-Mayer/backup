{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "I am cheating as this is not really a feature request... But anyway.\r\n\r\nI recently have been working quite a bit on treesitter integration, and we are making progress in @bfredl roadmap.\r\nThe big milestone I want to achieve is builtin, and smooth, syntax highlighting using treesitter.\r\nTo achieve that we need to have a way to write and use highlight queries.\r\n\r\nHere is some proposals we discussed with @tjdevries :\r\n\r\n- Pure `lua` query generation : it might be a bit tricky to do complex queries (tested by @kyazdani42 [here](https://github.com/nvim-treesitter/highlight.lua) )\r\n- Plain `scheme` : it might be a bit tricky for users to extend the queries (is tested [here](https://github.com/nvim-treesitter/nvim-treesitter) )\r\n- Hybrid `fennel` : here comes the debate, it requires to include the fennel compiler, BUT it might be better to build customizable queries without to much effort (not tested anywhere, just an idea, and a gut feeling).\r\n\r\nI think I exposed everything.\r\n",
    "closed_at": "2021-04-06T12:14:38Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
        "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
        "followers_url": "https://api.github.com/users/vigoux/followers",
        "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
        "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vigoux",
        "id": 39092278,
        "login": "vigoux",
        "node_id": "MDQ6VXNlcjM5MDkyMjc4",
        "organizations_url": "https://api.github.com/users/vigoux/orgs",
        "received_events_url": "https://api.github.com/users/vigoux/received_events",
        "repos_url": "https://api.github.com/users/vigoux/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vigoux"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I had trouble finding an example of how to queries were built with lua, but I suspect it could be done in a nice way given how simple most queries are. Do you have a good example of that one?\r\n\r\nscheme is the default that our tree sitter can support via `vim.treesitter.parse_query(lang, query)`.\r\n\r\nIs there actually a way to make queries directly without making scheme to pass to parse_query?",
            "created_at": "2020-07-10T18:17:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/12619#issuecomment-656815434",
            "id": 656815434,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12619",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjgxNTQzNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/656815434/reactions"
            },
            "updated_at": "2020-07-10T18:17:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/656815434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The only way for a query to be used by treesitter is through parsing scheme-like things.\nThe question is how we generate them, either by hand (using scheme files), by direct Lua, or using fennel.\nI thought that there was a example in highlight.lua, I will try finding that, and in any case, I will provide some examples of all of the three ways (no time now though...) ",
            "created_at": "2020-07-10T18:49:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/12619#issuecomment-656829454",
            "id": 656829454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12619",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjgyOTQ1NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/656829454/reactions"
            },
            "updated_at": "2020-07-10T18:49:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/656829454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "My opinion: stay with the scheme queries as long as we have a solid foundation using tree-sitter. We do not have to maintain it as long as we just want to have the basics, it is used by atom users, emacs users and us. It is still extendable by some adventurers that want to explore new use cases.\r\n\r\nIf we have tree-sitter integrated in stable Neovim and we don't  have the maintenance burden we can add our own magic. We have to be ensure that each feature that deviates from standard tree-sitter has to have people that maintain it on a long run. I would see priority in making tree-sitter stable and this should be easiest by sharing maintenance effort with communities from other editors.\r\n\r\nPS: and yes like the idea of integrating fennel in nvim. But maybe it's the turn for plugin authors to make good or bad experiences with it (where it is not as important as here to be maintained).",
            "created_at": "2020-07-10T18:57:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/12619#issuecomment-656832733",
            "id": 656832733,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12619",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjgzMjczMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/656832733/reactions"
            },
            "updated_at": "2020-07-10T19:00:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/656832733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "NONE",
            "body": "Probably not super relevant to the tree-sitter side, but I've been deeply integrating Fennel into my Neovim via [Aniseed](https://github.com/Olical/aniseed) for a while now. All of my nvim configuration (dotfiles) and plugins ([Conjure](https://github.com/Olical/conjure)) are written in Fennel, I can highly recommend it as an area of investigation :smile:\r\n\r\nThe fennel compiler is a single Lua module (file) which makes embedding it reaaaaaly smooth, for what it's worth.",
            "created_at": "2020-07-15T09:09:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/12619#issuecomment-658647392",
            "id": 658647392,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12619",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODY0NzM5Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/658647392/reactions"
            },
            "updated_at": "2020-07-15T09:09:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/658647392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/315229?v=4",
                "events_url": "https://api.github.com/users/Olical/events{/privacy}",
                "followers_url": "https://api.github.com/users/Olical/followers",
                "following_url": "https://api.github.com/users/Olical/following{/other_user}",
                "gists_url": "https://api.github.com/users/Olical/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Olical",
                "id": 315229,
                "login": "Olical",
                "node_id": "MDQ6VXNlcjMxNTIyOQ==",
                "organizations_url": "https://api.github.com/users/Olical/orgs",
                "received_events_url": "https://api.github.com/users/Olical/received_events",
                "repos_url": "https://api.github.com/users/Olical/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Olical/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Olical/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Olical"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For the record and before closing this issue : we ended up using plain scheme together with some additional preprocessing to include and extend other queries.\n",
            "created_at": "2021-04-06T12:14:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/12619#issuecomment-814071606",
            "id": 814071606,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12619",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDA3MTYwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814071606/reactions"
            },
            "updated_at": "2021-04-06T12:14:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814071606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12619/comments",
    "created_at": "2020-07-10T16:02:48Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12619/events",
    "html_url": "https://github.com/neovim/neovim/issues/12619",
    "id": 654881467,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12619/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2NTQ4ODE0Njc=",
    "number": 12619,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 4,
        "hooray": 0,
        "laugh": 0,
        "rocket": 1,
        "total_count": 5,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12619/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12619/timeline",
    "title": "How should we tackle treesitter queries ?",
    "updated_at": "2024-09-04T14:00:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12619",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
        "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
        "followers_url": "https://api.github.com/users/vigoux/followers",
        "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
        "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vigoux",
        "id": 39092278,
        "login": "vigoux",
        "node_id": "MDQ6VXNlcjM5MDkyMjc4",
        "organizations_url": "https://api.github.com/users/vigoux/orgs",
        "received_events_url": "https://api.github.com/users/vigoux/received_events",
        "repos_url": "https://api.github.com/users/vigoux/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vigoux"
    }
}