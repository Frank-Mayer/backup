{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nOSC 11 request doesn't work in terminal opened by `nvim_open_term`. It causes an error and doesn't receive a response.\n\n### Steps to reproduce\n\n1. Run `nvim --clean`\r\n2. Source the following Lua file:\r\n```lua\r\n_G.input = ''\r\nlocal chan = vim.api.nvim_open_term(0, {\r\n  on_input = function(_, _, _, data)\r\n    _G.input = _G.input .. data\r\n  end,\r\n})\r\nvim.api.nvim_chan_send(chan, '\\027]11;?\\027\\\\')\r\nprint(_G.input)\r\n```\r\n3. Error:\r\n```\r\nError detected while processing TermRequest Autocommands for \"*\":\r\nError executing lua callback: vim/_defaults.lua:0: E900: Invalid channel id\r\nstack traceback:\r\n        [C]: in function 'nvim_chan_send'\r\n        vim/_defaults.lua: in function <vim/_defaults.lua:0>\r\n```\n\n### Expected behavior\n\nNo error and `_G.input` contains an OSC response.\n\n### Neovim version (nvim -v)\n\nv0.10.0-dev-2427+geb4783fb6c\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nkitty 0.31.0\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nbuild from repo",
    "closed_at": "2024-02-26T17:33:17Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This cannot be solved purely in Lua, as there is currently no way to retrieve a terminal's `on_input` callback.\r\n\r\ncc @justinmk @gpanders",
            "created_at": "2024-02-23T06:37:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/27587#issuecomment-1960803039",
            "id": 1960803039,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27587",
            "node_id": "IC_kwDOAPphoM5033rf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1960803039/reactions"
            },
            "updated_at": "2024-02-23T06:59:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1960803039",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another example that runs a nested Nvim in a terminal opened by `nvim_open_term`:\r\n```lua\r\nlocal job\r\n\r\nlocal term = vim.api.nvim_open_term(0, {\r\n  on_input = function(_, _, _, data)\r\n    vim.api.nvim_chan_send(job, data)\r\n  end,\r\n  force_crlf = false,\r\n})\r\n\r\njob = vim.fn.jobstart({ 'nvim', '--clean' }, {\r\n  pty = true,\r\n  on_stdout = function(_, data, _)\r\n    vim.api.nvim_chan_send(term, table.concat(data, '\\n'))\r\n  end,\r\n})\r\n```\r\n\r\nThis errors immediately in the default `TermRequest` autocommand when the nested Nvim is launched, but after that the nested Nvim works fine.",
            "created_at": "2024-02-23T06:49:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/27587#issuecomment-1960813029",
            "id": 1960813029,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27587",
            "node_id": "IC_kwDOAPphoM5036Hl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1960813029/reactions"
            },
            "updated_at": "2024-02-23T07:08:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1960813029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "At the very least we can add a check to make sure `'channel'` is valid: https://github.com/neovim/neovim/blob/cb5ae22eab1fbb3162d0f7440a48ad49c7b3c48e/runtime/lua/vim/_defaults.lua#L160-L161\r\n\r\n~~But what is the expected behavior of sending a OSC 11 request to the embedded instance? Usually it is the other way around. If `'channel'` is invalid, should it write to stdout instead?~~\r\n\r\n**EDIT:** I forgot `nvim_open_term` is different than `termopen()`.",
            "created_at": "2024-02-23T15:33:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/27587#issuecomment-1961544203",
            "id": 1961544203,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27587",
            "node_id": "IC_kwDOAPphoM506soL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1961544203/reactions"
            },
            "updated_at": "2024-02-23T17:58:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1961544203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27587/comments",
    "created_at": "2024-02-23T06:35:41Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27587/events",
    "html_url": "https://github.com/neovim/neovim/issues/27587",
    "id": 2150453691,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "issues or PRs involving changing the defaults",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27587/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 301,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-04-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 132,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-02-26T17:33:18Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM6ALVG7",
    "number": 27587,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27587/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27587/timeline",
    "title": "OSC 11 request doesn't work in terminal opened by nvim_open_term",
    "updated_at": "2024-02-26T17:33:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27587",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq"
    }
}