{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nRun `vim.cmd.commad()` in a lua script, the `command` can not be repeated by `@:`.\n\n### Expected behavior\n\n`vim.cmd.commad()` support repeat the command by `@:` optional.\r\n\r\n```lua\r\n-- maybe like this\r\nvim.cmd.commad({repeatable=true})\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is this referring to a bug? If so, please write a more precise reproducible example using the bug report template.\r\n\r\n```\r\n:lua vim.cmd.command()\r\n```\r\nand then `@:` works for me OK. (It runs `:command` again)",
            "created_at": "2023-12-10T10:33:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/26503#issuecomment-1848923893",
            "id": 1848923893,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26503",
            "node_id": "IC_kwDOAPphoM5uNFb1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848923893/reactions"
            },
            "updated_at": "2023-12-10T10:33:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848923893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "@wookayin what gets repeated is `lua vim.cmd.command` not `command` u can check if with `registers :`\r\nand here is a repro\r\n```lua\r\nif did_run then\r\n   print('you resourced')\r\n   return\r\nend\r\ndid_run = true\r\nvim.cmd.command()\r\n```\r\nSource this file and `:so` becomes the last command.",
            "created_at": "2023-12-10T11:22:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/26503#issuecomment-1848936242",
            "id": 1848936242,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26503",
            "node_id": "IC_kwDOAPphoM5uNIcy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848936242/reactions"
            },
            "updated_at": "2023-12-10T11:22:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848936242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130783534?v=4",
                "events_url": "https://api.github.com/users/Sam-programs/events{/privacy}",
                "followers_url": "https://api.github.com/users/Sam-programs/followers",
                "following_url": "https://api.github.com/users/Sam-programs/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sam-programs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Sam-programs",
                "id": 130783534,
                "login": "Sam-programs",
                "node_id": "U_kgDOB8uZLg",
                "organizations_url": "https://api.github.com/users/Sam-programs/orgs",
                "received_events_url": "https://api.github.com/users/Sam-programs/received_events",
                "repos_url": "https://api.github.com/users/Sam-programs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Sam-programs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sam-programs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Sam-programs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "```\r\n\t\t\t\t\t\t\t*@:*\r\n@:\t\t\tRepeat last command-line [count] times.\r\n```\r\n\r\nThat's what exactly `@:` is supposed to do -- to repeat what was typed in the \"command line\" (`:`), in your example `:so`. This would not include lua statements.\r\n\r\nLua's `vim.cmd \"command\"` would execute the string as vim commands. It's not exactly the same as if you would type the keys `:command<CR>` --- which not only executes the command but also has some other side effects, such as (i) update the `:` register, (ii) trigger `CmdlineEnter` events, (iii) add the command in the \"command line history\" (in ShaDa), etc. to name a few.\r\n\r\nIf you want to have them saved in the `:` register so that it can be repeated, you could save the command into the register explicitly using `vim.fn.setreg(\":\", command_string)`. Or using `vim.api.nvim_feedkeys()` would be another option.",
            "created_at": "2023-12-10T11:27:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/26503#issuecomment-1848937367",
            "id": 1848937367,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26503",
            "node_id": "IC_kwDOAPphoM5uNIuX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848937367/reactions"
            },
            "updated_at": "2023-12-10T11:38:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848937367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "> you could save the command into the register explicitly using `vim.fn.setreg(\":\", command_string)`.\r\n\r\n`:h registers` says the `:` register is a read-only register.",
            "created_at": "2023-12-10T12:04:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/26503#issuecomment-1848945562",
            "id": 1848945562,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26503",
            "node_id": "IC_kwDOAPphoM5uNKua",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848945562/reactions"
            },
            "updated_at": "2023-12-10T12:04:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848945562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46311996?v=4",
                "events_url": "https://api.github.com/users/gh-liu/events{/privacy}",
                "followers_url": "https://api.github.com/users/gh-liu/followers",
                "following_url": "https://api.github.com/users/gh-liu/following{/other_user}",
                "gists_url": "https://api.github.com/users/gh-liu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gh-liu",
                "id": 46311996,
                "login": "gh-liu",
                "node_id": "MDQ6VXNlcjQ2MzExOTk2",
                "organizations_url": "https://api.github.com/users/gh-liu/orgs",
                "received_events_url": "https://api.github.com/users/gh-liu/received_events",
                "repos_url": "https://api.github.com/users/gh-liu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gh-liu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gh-liu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gh-liu"
            }
        },
        {
            "author_association": "NONE",
            "body": "> using `vim.api.nvim_feedkeys()` would be another option.\r\n\r\nI have tried this, it did not work as expected.\r\n\r\n```lua\r\n-- script.lua\r\nlocal cr = vim.api.nvim_replace_termcodes(\"<cr>\", true, false, true)\r\nvim.api.nvim_feedkeys(\":ls\" .. cr, \"n\", false)\r\n````\r\nSource this file and `:so script.lua` still is the content of `:` register.",
            "created_at": "2023-12-10T12:16:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/26503#issuecomment-1848948280",
            "id": 1848948280,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26503",
            "node_id": "IC_kwDOAPphoM5uNLY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848948280/reactions"
            },
            "updated_at": "2023-12-10T12:16:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848948280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46311996?v=4",
                "events_url": "https://api.github.com/users/gh-liu/events{/privacy}",
                "followers_url": "https://api.github.com/users/gh-liu/followers",
                "following_url": "https://api.github.com/users/gh-liu/following{/other_user}",
                "gists_url": "https://api.github.com/users/gh-liu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gh-liu",
                "id": 46311996,
                "login": "gh-liu",
                "node_id": "MDQ6VXNlcjQ2MzExOTk2",
                "organizations_url": "https://api.github.com/users/gh-liu/orgs",
                "received_events_url": "https://api.github.com/users/gh-liu/received_events",
                "repos_url": "https://api.github.com/users/gh-liu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gh-liu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gh-liu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gh-liu"
            }
        },
        {
            "author_association": "NONE",
            "body": "`'t'` mode works for feedkeys.\r\nI think `'tn'` should be used to avoid mappings,\r\nHowever this causes flickering in the command line.\r\nMaybe allowing writing to the register would be a nice fix?",
            "created_at": "2023-12-10T12:29:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/26503#issuecomment-1848951483",
            "id": 1848951483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26503",
            "node_id": "IC_kwDOAPphoM5uNMK7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848951483/reactions"
            },
            "updated_at": "2023-12-10T12:46:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848951483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130783534?v=4",
                "events_url": "https://api.github.com/users/Sam-programs/events{/privacy}",
                "followers_url": "https://api.github.com/users/Sam-programs/followers",
                "following_url": "https://api.github.com/users/Sam-programs/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sam-programs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Sam-programs",
                "id": 130783534,
                "login": "Sam-programs",
                "node_id": "U_kgDOB8uZLg",
                "organizations_url": "https://api.github.com/users/Sam-programs/orgs",
                "received_events_url": "https://api.github.com/users/Sam-programs/received_events",
                "repos_url": "https://api.github.com/users/Sam-programs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Sam-programs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sam-programs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Sam-programs"
            }
        },
        {
            "author_association": "NONE",
            "body": "> `'t'` mode works for feedkeys.\r\n\r\nThanks, it works.\r\n\r\n",
            "created_at": "2023-12-10T13:17:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/26503#issuecomment-1848963264",
            "id": 1848963264,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26503",
            "node_id": "IC_kwDOAPphoM5uNPDA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848963264/reactions"
            },
            "updated_at": "2023-12-10T13:17:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848963264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46311996?v=4",
                "events_url": "https://api.github.com/users/gh-liu/events{/privacy}",
                "followers_url": "https://api.github.com/users/gh-liu/followers",
                "following_url": "https://api.github.com/users/gh-liu/following{/other_user}",
                "gists_url": "https://api.github.com/users/gh-liu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gh-liu",
                "id": 46311996,
                "login": "gh-liu",
                "node_id": "MDQ6VXNlcjQ2MzExOTk2",
                "organizations_url": "https://api.github.com/users/gh-liu/orgs",
                "received_events_url": "https://api.github.com/users/gh-liu/received_events",
                "repos_url": "https://api.github.com/users/gh-liu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gh-liu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gh-liu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gh-liu"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26503/comments",
    "created_at": "2023-12-10T09:58:00Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26503/events",
    "html_url": "https://github.com/neovim/neovim/issues/26503",
    "id": 2034299556,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26503/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM55QPKk",
    "number": 26503,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26503/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26503/timeline",
    "title": "vim.cmd can be repeat by `@:`",
    "updated_at": "2023-12-10T13:17:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26503",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/46311996?v=4",
        "events_url": "https://api.github.com/users/gh-liu/events{/privacy}",
        "followers_url": "https://api.github.com/users/gh-liu/followers",
        "following_url": "https://api.github.com/users/gh-liu/following{/other_user}",
        "gists_url": "https://api.github.com/users/gh-liu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gh-liu",
        "id": 46311996,
        "login": "gh-liu",
        "node_id": "MDQ6VXNlcjQ2MzExOTk2",
        "organizations_url": "https://api.github.com/users/gh-liu/orgs",
        "received_events_url": "https://api.github.com/users/gh-liu/received_events",
        "repos_url": "https://api.github.com/users/gh-liu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gh-liu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gh-liu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gh-liu"
    }
}