{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nExiting floating prompt buffer window **while in insert mode** with a particular `BufWinLeave` autocmd & multiple buffers exists, unexpectedly results in returning to the original buffer/window in insert mode.\r\n\r\n\r\ndownstream issue: https://github.com/nvim-telescope/telescope.nvim/issues/2766\r\n\r\nrelevant info from the issue\r\n\r\n- For some reason it's important to have at least two files open. If you start Neovim with one or no files, then the issue does not reproduce.\r\n- It is access to buffer option via `nvim_get_option_value` that leads to reproduction. Calling other functions such as `nvim_buf_get_name` is okay.\r\n- Note that there is a loop over buffers in MRE. When I just called `nvim_get_option_value` on current buffer, the issue did not reproduce. So it is access to some other buffer that causes trouble. \r\n\r\nMaybe helpful:\r\nThere's a workaround involving `schedule_wrap`ing the callback for `BufWinLeave`.\r\n\r\n\n\n### Steps to reproduce\n\n1. Create `repro.lua` with the following\r\n```lua\r\nlocal function win_fun()\r\n  local bufnr = vim.api.nvim_create_buf(false, true)\r\n\r\n  local win_opts = {\r\n    relative = \"editor\",\r\n    width = 10,\r\n    height = 10,\r\n    row = 10,\r\n    col = 10,\r\n    style = \"minimal\",\r\n  }\r\n\r\n  vim.api.nvim_open_win(bufnr, true, win_opts)\r\n  vim.api.nvim_set_option_value(\"buftype\", \"prompt\", { buf = bufnr })\r\n\r\n  vim.keymap.set({ \"n\", \"i\" }, \"<esc>\", function()\r\n    vim.api.nvim_buf_delete(bufnr, { force = true })\r\n  end, { buffer = bufnr })\r\nend\r\n\r\nvim.api.nvim_create_autocmd(\"BufWinLeave\", {\r\n  callback = function()\r\n    print(\"BufWinLeave callback\")\r\n    for _, bufnr in ipairs(vim.api.nvim_list_bufs()) do\r\n      print(bufnr, \" type: \", vim.api.nvim_get_option_value(\"buftype\", { buf = bufnr }))\r\n    end\r\n  end,\r\n})\r\n\r\nvim.api.nvim_create_user_command(\"WinFun\", win_fun, {})\r\n```\r\n2. Create some dummy files `touch file1 file2`\r\n3. Start neovim with `nvim --clean +'so repro.lua' file1 file2`\r\n4. Open floating prompt buffer window `:WinFun`\r\n5. Enter insert mode in the floating window buffer\r\n6. Exit the window/buffer with the `<esc>` mapping (while in insert mode)\n\n### Expected behavior\n\nReturn to the original buffer/window in normal mode rather than staying in insert mode. This is the behavior when `nvim_get_option_value` isn't called against all buffers in a loop in the `BufWinLeave` autocmd.\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0-dev-2096+g267e90f31\n\n### Vim (not Nvim) behaves the same?\n\nnot sure, probably yes but I'm using lua API\n\n### Operating system/version\n\nLinux archlinux 6.6.10-arch1-1\n\n### Terminal name/version\n\nkitty 0.31.0\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nbuild from repo",
    "closed_at": "2024-01-17T00:18:53Z",
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27038/comments",
    "created_at": "2024-01-16T03:16:20Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27038/events",
    "html_url": "https://github.com/neovim/neovim/issues/27038",
    "id": 2082948093,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue is fixed in vim and patch needs to be ported",
            "id": 152276149,
            "name": "has:vim-patch",
            "node_id": "MDU6TGFiZWwxNTIyNzYxNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:vim-patch"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "wrong behavior inherited from vim",
            "id": 154310492,
            "name": "bug-vim",
            "node_id": "MDU6TGFiZWwxNTQzMTA0OTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-vim"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27038/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM58J0P9",
    "number": 27038,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27038/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27038/timeline",
    "title": "Exiting floating prompt buffer window with `BufWinLeave` autocmd unexpectedly stays in insert mode",
    "updated_at": "2024-01-17T00:18:53Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27038",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
        "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
        "followers_url": "https://api.github.com/users/jamestrew/followers",
        "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
        "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jamestrew",
        "id": 66286082,
        "login": "jamestrew",
        "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
        "organizations_url": "https://api.github.com/users/jamestrew/orgs",
        "received_events_url": "https://api.github.com/users/jamestrew/received_events",
        "repos_url": "https://api.github.com/users/jamestrew/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jamestrew"
    }
}