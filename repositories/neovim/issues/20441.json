{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Neovim version (nvim -v)\n\nNVIM v0.9.0-dev-1-g4396c3ef2c\n\n### Vim (not Nvim) behaves the same?\n\nNA\n\n### Operating system/version\n\nArch Kernel 5.15.71-1 LTS\n\n### Terminal name/version\n\nKonsole 22.08.1\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\naur/neovim-git\n\n### How to reproduce the issue\n\n- Open any Spring boot project\r\n- Then execute `Telescope lsp_implementations` \r\n\r\n\r\nHere is my ftplugin/java.lua configuration:\r\n```\r\nlocal status, jdtls = pcall(require, \"jdtls\")\r\nif not status then\r\n  return\r\nend\r\n\r\n\r\nlocal extendedClientCapabilities = jdtls.extendedClientCapabilities\r\nextendedClientCapabilities.resolveAdditionalTextEditsSupport = true\r\n\r\n\r\nlocal home = os.getenv \"HOME\"\r\nlocal project_name = vim.fn.fnamemodify(vim.fn.getcwd(), \":p:h:t\")\r\nlocal workspace_dir = home .. \"/workspace/\" .. project_name\r\n\r\n\r\n\r\n---------- Bundle\r\nlocal bundles = {}\r\nlocal jar_patterns = {\r\n  \"/.local/share/nvim/java-debug/com.microsoft.java.debug.plugin-*.jar\",\r\n  \"/.local/share/nvim/java-test/*.jar\",\r\n  \"/.local/share/nvim/vscode-java-decompiler/server/*.jar\"\r\n}\r\n\r\nfor _, jar_pattern in ipairs(jar_patterns) do\r\n  for _, bundle in ipairs(vim.split(vim.fn.glob(home .. jar_pattern), '\\n')) do\r\n    table.insert(bundles, bundle)\r\n  end\r\nend\r\n------- End Bundle\r\n\r\n\r\n-- See `:help vim.lsp.start_client` for an overview of the supported `config` options.\r\nlocal config = {\r\n  -- The command that starts the language server\r\n  -- See: https://github.com/eclipse/eclipse.jdt.ls#running-from-the-command-line\r\n  cmd = {\r\n\r\n    -- ðŸ’€\r\n    '/usr/lib/jvm/java-18-jdk/bin/java', -- or '/path/to/java17_or_newer/bin/java'\r\n    -- depends on if `java` is in your $PATH env variable and if it points to the right version.\r\n\r\n    '-Declipse.application=org.eclipse.jdt.ls.core.id1',\r\n    '-Dosgi.bundles.defaultStartLevel=4',\r\n    '-Declipse.product=org.eclipse.jdt.ls.core.product',\r\n    '-Dlog.protocol=true',\r\n    '-Dlog.level=ALL',\r\n    '-javaagent:' .. home .. '/.local/share/nvim/mason/packages/jdtls/lombok.jar',\r\n    -- '-Xms1g',\r\n    '--add-modules=ALL-SYSTEM',\r\n    '--add-opens', 'java.base/java.util=ALL-UNNAMED',\r\n    '--add-opens', 'java.base/java.lang=ALL-UNNAMED',\r\n\r\n    -- Test vscode default\r\n    '-XX:+UseParallelGC',\r\n    '-XX:GCTimeRatio=4',\r\n    '-XX:AdaptiveSizePolicyWeight=90',\r\n    '-Dsun.zip.disableMemoryMapping=true',\r\n    '-Xms100m',\r\n    -- End Test vscode default\r\n\r\n    -- ðŸ’€\r\n    '-jar',\r\n    vim.fn.glob(home .. '/.local/share/nvim/mason/packages/jdtls/plugins/org.eclipse.equinox.launcher_*.jar'),\r\n    -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                       ^^^^^^^^^^^^^^\r\n    -- Must point to the                                                     Change this to\r\n    -- eclipse.jdt.ls installation                                           the actual version\r\n\r\n\r\n    -- ðŸ’€\r\n    '-configuration',\r\n    home .. '/.local/share/nvim/mason/packages/jdtls/config_linux/',\r\n    -- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        ^^^^^^\r\n    -- Must point to the                      Change to one of `linux`, `win` or `mac`\r\n    -- eclipse.jdt.ls installation            Depending on your system.\r\n\r\n\r\n    -- ðŸ’€\r\n    -- See `data directory configuration` section in the README\r\n    '-data',\r\n    workspace_dir\r\n  },\r\n\r\n  -- ðŸ’€\r\n  -- This is the default if not provided, you can remove it. Or adjust as needed.\r\n  -- One dedicated LSP server & client will be started per unique root_dir\r\n  root_dir = require('jdtls.setup').find_root({ '.git', 'mvnw', 'gradlew', 'pom.xml', 'build.grandle' }),\r\n\r\n  -- Here you can configure eclipse.jdt.ls specific settings\r\n  -- See https://github.com/eclipse/eclipse.jdt.ls/wiki/Running-the-JAVA-LS-server-from-the-command-line#initialize-request\r\n  -- for a list of options\r\n  settings = {\r\n    java = {\r\n      eclipse = {\r\n        downloadSources = true,\r\n      },\r\n      configuration = {\r\n        updateBuildConfiguration = \"automatic\",\r\n      },\r\n      maven = {\r\n        downloadSources = true,\r\n      },\r\n      implementationsCodeLens = {\r\n        enabled = true,\r\n      },\r\n      referencesCodeLens = {\r\n        enabled = true,\r\n      },\r\n      references = {\r\n        includeDecompiledSources = true,\r\n      },\r\n      inlayHints = {\r\n        parameterNames = {\r\n          enabled = \"all\", -- literals, all, none\r\n        },\r\n      },\r\n      format = {\r\n        enabled = false, -- let editor config do the job. Below xml doesn't seem to work...\r\n      },\r\n    },\r\n    autobuild = { enabled = true },\r\n    signatureHelp = { enabled = true, description = { enabled = true } },\r\n    progressReports = { enabled = true },\r\n    selectionRange = { enabled = true },\r\n    completion = {\r\n      enabled = true,\r\n      guessMethodArguments = true,\r\n      favoriteStaticMembers = {\r\n        \"org.junit.Assert.*\",\r\n        \"org.junit.Assume.*\",\r\n        \"org.junit.jupiter.api.Assertions.*\",\r\n        \"org.junit.jupiter.api.Assumptions.*\",\r\n        \"org.junit.jupiter.api.DynamicContainer.*\",\r\n        \"org.junit.jupiter.api.DynamicTest.*\",\r\n        \"org.hamcrest.MatcherAssert.assertThat\",\r\n        \"org.hamcrest.Matchers.*\",\r\n        \"org.hamcrest.CoreMatchers.*\",\r\n        \"org.junit.jupiter.api.Assertions.*\",\r\n        \"java.util.Objects.requireNonNull\",\r\n        \"java.util.Objects.requireNonNullElse\",\r\n        \"org.mockito.Mockito.*\",\r\n        \"org.assertj.core.api.Assertions.assertThat\",\r\n        \"org.assertj.core.api.Assertions.assertThatThrownBy\",\r\n        \"org.assertj.core.api.Assertions.assertThatExceptionOfType\",\r\n        \"org.assertj.core.api.Assertions.catchThrowable\",\r\n      },\r\n      filteredTypes = {\r\n        \"com.sun.*\",\r\n        \"io.micrometer.shaded.*\",\r\n        \"java.awt.*\",\r\n        \"jdk.*\",\r\n        \"sun.*\",\r\n      },\r\n    },\r\n    contentProvider = { preferred = \"fernflower\" }, -- fernflower already the default\r\n    capabilities = default_config.capabilities,\r\n    extendedClientCapabilities = extendedClientCapabilities,\r\n    sources = {\r\n      organizeImports = {\r\n        starThreshold = 9999,\r\n        staticStarThreshold = 9999,\r\n      },\r\n    },\r\n    codeGeneration = {\r\n      useBlocks = true,\r\n      generateComments = true,\r\n    },\r\n  },\r\n  flags = {\r\n    allow_incremental_sync = true,\r\n  },\r\n\r\n  -- Language server `initializationOptions`\r\n  -- You need to extend the `bundles` with paths to jar files\r\n  -- if you want to use additional eclipse.jdt.ls plugins.\r\n  --\r\n  -- See https://github.com/mfussenegger/nvim-jdtls#java-debug-installation\r\n  --\r\n  -- If you don't plan on using the debugger or other eclipse.jdt.ls plugins you can remove this\r\n  init_options = {\r\n    bundles = bundles\r\n  },\r\n}\r\n\r\n\r\n\r\n\r\nconfig['on_attach'] = function(client, bufnr)\r\n  -- With `hotcodereplace = 'auto' the debug adapter will try to apply code changes\r\n  -- you make during a debug session immediately.\r\n  -- Remove the option if you do not want that.\r\n  vim.lsp.codelens.refresh()\r\n  jdtls.setup_dap({ hotcodereplace = 'auto' })\r\n  jdtls.setup.add_commands() -- This one must call within on_attach() and after setup_dap()\r\n\r\n  require('jdtls.dap').setup_dap_main_class_configs()\r\n\r\n\r\n\r\n\r\n  default_config.on_attach(client, bufnr)\r\nend\r\n\r\n\r\n\r\n-- This starts a new client & server,\r\n-- or attaches to an existing client & server depending on the `root_dir`.\r\n```\r\n\r\n\r\nhttps://user-images.githubusercontent.com/27724011/192288729-e5aba290-61d1-4c99-be0d-00256c567053.mp4\r\n\r\n(original post at https://github.com/mfussenegger/nvim-jdtls/discussions/331)\r\n\n\n### Expected behavior\n\nResponse should be fast enough. I have tried it on Emacs and VSCode which response instantly.\n\n### Actual behavior\n\nThe process block Neovim and took quite a long time before response.",
    "closed_at": "2023-08-28T01:47:18Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Is this still an issue?",
            "created_at": "2023-07-29T00:50:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/20441#issuecomment-1656493882",
            "id": 1656493882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20441",
            "node_id": "IC_kwDOAPphoM5ivBc6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656493882/reactions"
            },
            "updated_at": "2023-07-29T00:50:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656493882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This has been closed since a request for information has not been answered for 30 days. It can be reopened when the requested information is provided.",
            "created_at": "2023-08-28T01:47:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/20441#issuecomment-1694875456",
            "id": 1694875456,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20441",
            "node_id": "IC_kwDOAPphoM5lBb9A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694875456/reactions"
            },
            "updated_at": "2023-08-28T01:47:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694875456",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/github-actions",
                "id": 41898282,
                "login": "github-actions[bot]",
                "node_id": "MDM6Qm90NDE4OTgyODI=",
                "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/github-actions%5Bbot%5D"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20441/comments",
    "created_at": "2022-10-02T08:46:53Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20441/events",
    "html_url": "https://github.com/neovim/neovim/issues/20441",
    "id": 1393690666,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "waiting for reply from the author",
            "id": 248229439,
            "name": "needs:response",
            "node_id": "MDU6TGFiZWwyNDgyMjk0Mzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:response"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20441/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5TEggq",
    "number": 20441,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20441/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20441/timeline",
    "title": "Neovim took too long when trying to implementation class",
    "updated_at": "2023-08-28T01:47:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20441",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/27724011?v=4",
        "events_url": "https://api.github.com/users/VisionaryAppDev/events{/privacy}",
        "followers_url": "https://api.github.com/users/VisionaryAppDev/followers",
        "following_url": "https://api.github.com/users/VisionaryAppDev/following{/other_user}",
        "gists_url": "https://api.github.com/users/VisionaryAppDev/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/VisionaryAppDev",
        "id": 27724011,
        "login": "VisionaryAppDev",
        "node_id": "MDQ6VXNlcjI3NzI0MDEx",
        "organizations_url": "https://api.github.com/users/VisionaryAppDev/orgs",
        "received_events_url": "https://api.github.com/users/VisionaryAppDev/received_events",
        "repos_url": "https://api.github.com/users/VisionaryAppDev/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/VisionaryAppDev/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/VisionaryAppDev/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/VisionaryAppDev"
    }
}