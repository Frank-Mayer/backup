{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\nIt would be really helpful to allow getting actual Lua function from RPC call to another Neovim process. Currently, this gives an error `E5108: Error executing lua Cannot convert given lua type`. I don't think that it is possible to full extent, but it seems to be doable for some simple cases with `string.dump` and `loadstring`.\r\n\r\nDetails:\r\n- Create Neovim server: `nvim --clean --listen /tmp/nvim.pipe`.\r\n- Create Neovim client: `nvim`.\r\n- In Neovim client run:\r\n    - `:lua channel = vim.fn.sockconnect('pipe', '/tmp/nvim.pipe', { rpc = true })`\r\n    - Try running `:lua f = vim.rpcrequest(channel, 'nvim_exec_lua', 'return function() print(\"New function\") end', {})`. It gives `E5108` error.\r\n    - `:lua f_dump = vim.rpcrequest(channel, 'nvim_exec_lua', 'return string.dump(function() print(\"New function\") end)', {})`.\r\n    - `:lua f = loadstring(f_dump); f()`. Should print `New function`.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would this be same thing as passing `callback = function(ev) .... end` to `nvim_create_autocmd` over rpc?",
            "created_at": "2024-04-19T19:18:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/18035#issuecomment-2067155877",
            "id": 2067155877,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18035",
            "node_id": "IC_kwDOAPphoM57Nkul",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067155877/reactions"
            },
            "updated_at": "2024-04-19T19:18:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067155877",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4594126?v=4",
                "events_url": "https://api.github.com/users/vhakulinen/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhakulinen/followers",
                "following_url": "https://api.github.com/users/vhakulinen/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhakulinen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhakulinen",
                "id": 4594126,
                "login": "vhakulinen",
                "node_id": "MDQ6VXNlcjQ1OTQxMjY=",
                "organizations_url": "https://api.github.com/users/vhakulinen/orgs",
                "received_events_url": "https://api.github.com/users/vhakulinen/received_events",
                "repos_url": "https://api.github.com/users/vhakulinen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhakulinen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhakulinen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhakulinen"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> it seems to be doable for some simple cases with `string.dump` and `loadstring`\r\n\r\nAnother way to frame this is \"I want to to serialize functions\". We could offer a `serialize()` util, or `vim.mpack.encode()` could accept functions, etc. That may be less surprising than trying to implicitly support this for any RPC parameter. And it's a required first step in any case.\r\n\r\nNote that the inverse of this request is \"I want to exchange Nvim state between Nvim peers\". Then the peer can operate on the state and return a result. This is what `:help context` was intended for, though it is not fully formed.",
            "created_at": "2024-04-19T22:35:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/18035#issuecomment-2067359361",
            "id": 2067359361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18035",
            "node_id": "IC_kwDOAPphoM57OWaB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067359361/reactions"
            },
            "updated_at": "2024-04-19T22:36:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067359361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would be nice if that `serialize` could also accept directories, so a rpc client could provide complete set of runtime files (including docs).",
            "created_at": "2024-04-20T11:43:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/18035#issuecomment-2067648525",
            "id": 2067648525,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18035",
            "node_id": "IC_kwDOAPphoM57PdAN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067648525/reactions"
            },
            "updated_at": "2024-04-20T11:43:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067648525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4594126?v=4",
                "events_url": "https://api.github.com/users/vhakulinen/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhakulinen/followers",
                "following_url": "https://api.github.com/users/vhakulinen/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhakulinen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhakulinen",
                "id": 4594126,
                "login": "vhakulinen",
                "node_id": "MDQ6VXNlcjQ1OTQxMjY=",
                "organizations_url": "https://api.github.com/users/vhakulinen/orgs",
                "received_events_url": "https://api.github.com/users/vhakulinen/received_events",
                "repos_url": "https://api.github.com/users/vhakulinen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhakulinen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhakulinen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhakulinen"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would be nice if that `serialize` could also accept directories, so a rpc client could provide complete set of runtime files (including docs).\r\n\r\n\r\n\r\nThat essentially is the `:help context` concept mentioned above.",
            "created_at": "2024-04-20T11:55:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/18035#issuecomment-2067650944",
            "id": 2067650944,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18035",
            "node_id": "IC_kwDOAPphoM57PdmA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067650944/reactions"
            },
            "updated_at": "2024-04-20T11:55:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2067650944",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/18035/comments",
    "created_at": "2022-04-08T07:37:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/18035/events",
    "html_url": "https://github.com/neovim/neovim/issues/18035",
    "id": 1196955278,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": null,
            "id": 242522707,
            "name": "rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/rpc"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/18035/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 220,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 242,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2024-04-21T16:31:45Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM5HWBaO",
    "number": 18035,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/18035/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/18035/timeline",
    "title": "pass Lua functions through RPC",
    "updated_at": "2024-04-20T11:55:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/18035",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski"
    }
}