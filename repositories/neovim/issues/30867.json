{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI'm trying to keep my quickfix list in sync with Neovim's diagnostics through a `DiagnosticChanged` autocmd that calls `vim.diagnostic.setqflist`. This mostly works, but when closing Neovim,I get the following error:\n\n```\nError executing vim.schedule lua callback: Vim:E685: Internal error: qf_fill_buffer()\nstack traceback:\n        [C]: in function 'setqflist'\n        ...wrapped-0.10.2/share/nvim/runtime/lua/vim/diagnostic.lua:808: in function 'set_list'\n        ...wrapped-0.10.2/share/nvim/runtime/lua/vim/diagnostic.lua:1963: in function 'setqflist'\n        ...eremy/sync/scratch/jfly/2024-10-18-vim-crash/minimal.lua:43: in function <...eremy/sync/scratch/jfly/2024-10-18-vim-crash/minimal.lua:41>\n```\n\nIt feels like this callback is getting invoked sometime during Vim's shutdown lifecycle when the quickfix list can no longer be written to?\n\n### Steps to reproduce\n\n<details>\n<summary>minimal.lua</summary>\n\n```lua\n-- Run this file as `nvim --clean -u ./minimal.lua hgttg.py\n\nfor name, url in pairs {\n  nonels = 'https://github.com/nvimtools/none-ls.nvim',\n  plenary = 'https://github.com/nvim-lua/plenary.nvim.git', -- none-ls depends on this\n  \n  lspconfig = 'https://github.com/neovim/nvim-lspconfig',\n} do\n  local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\n  if vim.fn.isdirectory(install_path) == 0 then\n    vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\n  end\n  vim.opt.runtimepath:append(install_path)\nend\n\n-- ADD INIT.LUA SETTINGS _NECESSARY_ FOR REPRODUCING THE ISSUE\n\nvim.lsp.set_log_level(\"debug\")\n\nrequire('lspconfig').ruff.setup {}\n\nlocal null_ls = require(\"null-ls\")\nnull_ls.setup({\n    debug = true,\n    sources = {\n      null_ls.builtins.formatting.black,\n    },\n})\n\nvim.api.nvim_create_autocmd('DiagnosticChanged', {\n  callback = function(args)\n    local window_height = vim.api.nvim_win_get_height(0)\n    for i = 1, window_height do\n        vim.print(i .. \"/\" .. window_height .. \" filling up the screen\")\n    end\n    vim.print(vim.inspect(args))\n\n    vim.schedule(function()\n      vim.diagnostic.setqflist({ open = false })\n    end)\n  end,\n})\n\nvim.cmd \"copen\"\n```\n</details>\n\n<details>\n<summary>hgttg.py</summary>\n\n```\nprint(f\"don't panic\")\nprint(f\"don't panic\")\nprint(f\"don't panic\"  )\nprint(f\"don't panic\")\nprint(f\"don't panic\")\n\n```\n</details>\n\nRun with both `ruff` and `black` on your PATH:\n\n```\nnvim --clean -u ./minimal.lua hgttg.py\n```\n\nThis will open Neovim with a quickfix list that looks something like this:\n\n![Image](https://github.com/user-attachments/assets/b41ad2c6-56e2-452e-ad13-276a42b6cc6f)\n\nThen, close Neovim with `:qa`. Scroll down through the output until you see the error:\n\n![Image](https://github.com/user-attachments/assets/17f3afc9-e793-4198-9430-eb6208f4ebbb)\n\n<hr>\n\nSorry for such a complicated \"minimal\" repo. I've spent many hours trying to simplify this, and just don't have a good enough mental model of Neovim's exit lifecycle to simplify this. Happy to investigate more if folks point me in the right direction.\n\n### Expected behavior\n\nI would expect Neovim to not crash here. In other words: ideally the quickfix buffer would be writeable whenever `DiagnosticChanged` events fire. If that's not feasible, I'd love to know what the right way is to check if the quickfix list is writeable, I haven't been able to find anything that works.\n\n### Nvim version (nvim -v)\n\nI can repro this issue on both `master` (4833a63929a83c11379036ead33913711134015b at time of writing) and Neovim 0.10.2\n\n### Vim (not Nvim) behaves the same?\n\nN/A, this is LSP specific\n\n### Operating system/version\n\nNixOS\n\n### Terminal name/version\n\nAlacritty\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nboth build from repo and nixpkgs",
    "closed_at": "2024-10-20T23:22:43Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq",
        "user_view_type": "public"
    },
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30867/comments",
    "created_at": "2024-10-19T18:55:10Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30867/events",
    "html_url": "https://github.com/neovim/neovim/issues/30867",
    "id": 2599491556,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 520282574,
            "name": "event-loop",
            "node_id": "MDU6TGFiZWw1MjAyODI1NzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/event-loop"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 6937717172,
            "name": "quickfix",
            "node_id": "LA_kwDOAPphoM8AAAABnYUptA",
            "url": "https://api.github.com/repos/neovim/neovim/labels/quickfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30867/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6a8Rfk",
    "number": 30867,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30867/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30867/timeline",
    "title": "`Internal error: qf_fill_buffer()` when updating quickfix list inside of `DiagnosticChanged` callback",
    "updated_at": "2024-10-20T23:22:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30867",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
        "events_url": "https://api.github.com/users/jfly/events{/privacy}",
        "followers_url": "https://api.github.com/users/jfly/followers",
        "following_url": "https://api.github.com/users/jfly/following{/other_user}",
        "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jfly",
        "id": 277474,
        "login": "jfly",
        "node_id": "MDQ6VXNlcjI3NzQ3NA==",
        "organizations_url": "https://api.github.com/users/jfly/orgs",
        "received_events_url": "https://api.github.com/users/jfly/received_events",
        "repos_url": "https://api.github.com/users/jfly/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jfly",
        "user_view_type": "public"
    }
}