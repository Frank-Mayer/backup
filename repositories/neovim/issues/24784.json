{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nThe stderr stream is often used for any output which is not intended for consumption by the calling application. I.e.: messages sent to stderr are not necessarily errors. One good example of this is visible at https://github.com/hashicorp/terraform-ls/issues/1271.\r\n\r\nWhile the `terraform-ls project` is working on their log mechanism, the current treatment of stderr is particularly harsh for language servers which follow common recommendations for outputting diagnostic information to stderr:\r\nhttps://www.gnu.org/software/libc/manual/html_node/Standard-Streams.html\r\n\r\n>    Variable: FILE * stderr\r\n>\r\n>       The standard error stream, which is used for error messages **and diagnostics** issued by the program. \r\n\r\nThe current behavior has the downside of the LSP Log growing to extremely large sizes in some cases, in addition to confusion as to the true meaning of its contents.\r\n\r\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\r\n\r\n1. Configure an affected terraform-ls language server, such as terraform-ls or taplo\r\n2. Edit associated files for a while\r\n4. Run `:LspLog`\r\n\r\n### Expected behavior\r\n\r\nMinimal: Do not assume every output to stderr is an error.\r\n\r\nStretch goal: Potentially allow for custom handling of stderr output based on its contents to avoid the log file growing out of control.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-376+g677e02be4-Homebrew Build type: Release LuaJIT 2.1.0-beta3\r\n\r\n### Language server name/version\r\n\r\nMultiple, including terraform-ls, taplo\r\n\r\n### Operating system/version\r\n\r\nmacOS 13\r\n\r\n### Log file\r\n\r\nExample:\r\n```\r\n[ERROR][2023-08-18 09:33:24] .../vim/lsp/rpc.lua:734\t\"rpc\"\t\"/Users/bgshacklett/.local/bin/taplo\"\t\"stderr\"\t' INFO taplo: registered request handler method=\"initialize\"\\n INFO taplo: registered request handler method=\"textDocument/documentSymbol\"\\n INFO taplo: registered request handler method=\"textDocument/foldingRange\"\\n INFO taplo: registered request handler method=\"textDocument/formatting\"\\n INFO taplo: registered request handler method=\"textDocument/completion\"\\n INFO taplo: registered request handler method=\"textDocument/hover\"\\n INFO taplo: registered request handler method=\"textDocument/documentLink\"\\n INFO taplo: registered request handler method=\"textDocument/semanticTokens/full\"\\n INFO taplo: registered request handler method=\"textDocument/prepareRename\"\\n INFO taplo: registered request handler method=\"textDocument/rename\"\\n INFO taplo: registered notification handler method=\"textDocument/didOpen\"\\n INFO taplo: registered notification handler method=\"initialized\"\\n INFO taplo: registered notification handler method=\"textDocument/didClose\"\\n INFO taplo: registered notification handler method=\"textDocument/didChange\"\\n INFO taplo: registered request handler method=\"taplo/convertToJson\"\\n INFO taplo: registered request handler method=\"taplo/convertToToml\"\\n INFO taplo: registered request handler method=\"taplo/listSchemas\"\\n INFO taplo: registered notification handler method=\"workspace/didChangeConfiguration\"\\n INFO taplo: registered notification handler method=\"workspace/didChangeWorkspaceFolders\"\\n INFO taplo: registered request handler method=\"taplo/associatedSchema\"\\n INFO taplo: registered notification handler method=\"taplo/associateSchema\"\\n INFO taplo: registered notification handler method=\"textDocument/didSave\"\\n INFO taplo: LSP server listening transport=\"stdio\"\\n'\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> harsh for language servers which follow common recommendations for outputting diagnostic information to stderr:\r\n\r\nI do not think it is a common recommendation for unix programs to flood stderr with a lot of unwanted diagnostic data unless _either_ something really got wrong or some kind of `--verbose` flag is supplied.\r\n\r\nBut regardless, as the usage of stderr is not mandated in the LSP spec, so the reasonable thing for do would be able to specify how it should be handled per server. I don't think the default behavior of storing it in the log is unreasonable tho.",
            "created_at": "2023-08-18T13:45:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/24784#issuecomment-1683944417",
            "id": 1683944417,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24784",
            "node_id": "IC_kwDOAPphoM5kXvPh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683944417/reactions"
            },
            "updated_at": "2023-08-18T13:45:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683944417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "Agreed on all counts. The fact that the `terraform-ls` server outputs as much diagnostic output as it does _is_ abnormal, and the default behavior of logging it is likely the a better option than dropping it, unless further flexibility can be made available. Allowing for this output to be treated differently depending upon the language server would certainly be a step in the right direction. The nvim-lspconfig would be a great place to insert \"sane\" defaults on a per-server basis, IMO.\r\n\r\nI maintain, however, that marking all output written to stderr with an \"Error\" prefix is not an ideal default. In the case of the included output from the `taplo` language server, the output, itself, is marked as \"INFO\", but it is prefixed with Error by the language server client.",
            "created_at": "2023-08-18T16:20:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/24784#issuecomment-1684147386",
            "id": 1684147386,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24784",
            "node_id": "IC_kwDOAPphoM5kYgy6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1684147386/reactions"
            },
            "updated_at": "2023-08-18T16:20:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1684147386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/583359?v=4",
                "events_url": "https://api.github.com/users/bgshacklett/events{/privacy}",
                "followers_url": "https://api.github.com/users/bgshacklett/followers",
                "following_url": "https://api.github.com/users/bgshacklett/following{/other_user}",
                "gists_url": "https://api.github.com/users/bgshacklett/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bgshacklett",
                "id": 583359,
                "login": "bgshacklett",
                "node_id": "MDQ6VXNlcjU4MzM1OQ==",
                "organizations_url": "https://api.github.com/users/bgshacklett/orgs",
                "received_events_url": "https://api.github.com/users/bgshacklett/received_events",
                "repos_url": "https://api.github.com/users/bgshacklett/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bgshacklett/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bgshacklett/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bgshacklett"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24784/comments",
    "created_at": "2023-08-18T13:32:48Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24784/events",
    "html_url": "https://github.com/neovim/neovim/issues/24784",
    "id": 1856735227,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24784/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5uq4f7",
    "number": 24784,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24784/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24784/timeline",
    "title": "LSP: make stderr handling configurable per server",
    "updated_at": "2023-08-18T16:20:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24784",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/583359?v=4",
        "events_url": "https://api.github.com/users/bgshacklett/events{/privacy}",
        "followers_url": "https://api.github.com/users/bgshacklett/followers",
        "following_url": "https://api.github.com/users/bgshacklett/following{/other_user}",
        "gists_url": "https://api.github.com/users/bgshacklett/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bgshacklett",
        "id": 583359,
        "login": "bgshacklett",
        "node_id": "MDQ6VXNlcjU4MzM1OQ==",
        "organizations_url": "https://api.github.com/users/bgshacklett/orgs",
        "received_events_url": "https://api.github.com/users/bgshacklett/received_events",
        "repos_url": "https://api.github.com/users/bgshacklett/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bgshacklett/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bgshacklett/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bgshacklett"
    }
}