{
    "active_lock_reason": "resolved",
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    ],
    "author_association": "MEMBER",
    "body": "https://gitter.im/neovim/neovim?at=55f81362fe4ca46810e1bd53\r\n\r\n> It is totally technically possible for `\"+p` to ask the terminal what the state of the clipboard is, over an OSC\r\n> They're also really easy to probe for and ask if it's supported, so you can fall back on some other mechanism if they're not\r\n\r\n- Supported by xterm, iTerm2, possibly many others. \r\n- Note that this is different than \"bracketed paste mode\" which we already implement.\r\n\r\nTest case for yank (set local OS clipboard from remote terminal):\r\n\r\n    echo -e \"\\033]52;c;$(base64 <<< hello)\\a\"",
    "closed_at": "2023-11-07T14:47:29Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "+1  :)\n",
            "created_at": "2015-09-15T12:51:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-140378580",
            "id": 140378580,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDM3ODU4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140378580/reactions"
            },
            "updated_at": "2015-09-15T12:51:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140378580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/350941?v=4",
                "events_url": "https://api.github.com/users/leonerd/events{/privacy}",
                "followers_url": "https://api.github.com/users/leonerd/followers",
                "following_url": "https://api.github.com/users/leonerd/following{/other_user}",
                "gists_url": "https://api.github.com/users/leonerd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leonerd",
                "id": 350941,
                "login": "leonerd",
                "node_id": "MDQ6VXNlcjM1MDk0MQ==",
                "organizations_url": "https://api.github.com/users/leonerd/orgs",
                "received_events_url": "https://api.github.com/users/leonerd/received_events",
                "repos_url": "https://api.github.com/users/leonerd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leonerd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leonerd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leonerd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@leonerd What would be the sane behavior for a terminal multiplexer such a tmux that aims to support this in the case multiple clients are connected?\n",
            "created_at": "2015-09-15T16:38:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-140456295",
            "id": 140456295,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQ1NjI5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140456295/reactions"
            },
            "updated_at": "2015-09-15T16:38:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140456295",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tarruda that is an excitingly-interesting question indeed.\n\nI could imagine that a simple multiplexer that is unaware of the content of OSCs might simply pass them through transparently. In such a case, a \"foreground\" neovim that had the user's input focus would react much as it would were the muxer not there, and all would be well and good for it. Other instances that were running on hidden windows would have this output suppressed and as such could not mutate the eventual terminal's clipboard, nor would they receive any response to a query for the current value. This is unlikely to matter, as such an unattended neovim is unlikely to want to interact with the clipboard without the user's specific request.\n\nA slightly less naïve muxer that actually interpreted the sequences could do a little better here. It could realise that a query for the current value can be handled safely even by hidden windows, though it might want to leave to user policy via some configuration setting whether hidden windows can mutate the current value of the clipboard without being seen or interacted with directly by the user.\n\nOne key advantage of having the muxer understand these sequences is that it can work nicely during detach/reättach later on, without requiring the subtle and breakage-prone issues associated with X11 forwarding or other techniques used to access the clipboards. Without an attached terminal instance at all, the muxer would likely just drop any request to mutate the clipboard, and could give an error response to queries requesting it. This is also unlikely to matter to neovim, since again it's unlikely to make requests about the clipboard when not attended by a user attached via a terminal telling it to.\n",
            "created_at": "2015-09-15T16:53:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-140460959",
            "id": 140460959,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQ2MDk1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140460959/reactions"
            },
            "updated_at": "2015-09-15T16:53:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140460959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/350941?v=4",
                "events_url": "https://api.github.com/users/leonerd/events{/privacy}",
                "followers_url": "https://api.github.com/users/leonerd/followers",
                "following_url": "https://api.github.com/users/leonerd/following{/other_user}",
                "gists_url": "https://api.github.com/users/leonerd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leonerd",
                "id": 350941,
                "login": "leonerd",
                "node_id": "MDQ6VXNlcjM1MDk0MQ==",
                "organizations_url": "https://api.github.com/users/leonerd/orgs",
                "received_events_url": "https://api.github.com/users/leonerd/received_events",
                "repos_url": "https://api.github.com/users/leonerd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leonerd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leonerd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leonerd"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "However - that all being said, there are terminal muxers that support the idea that multiple terminals can be attached at once, giving multiple views on the same application. A request to set the clipboard is simple enough to handle here; that can be broadcast among them all much the same that any other side-effecting unresponded request is done. The only awkward case is how to handle a query for the clipboard when multiple terminals are attached.\n\nThere's no easy answer here, but I suspect that a clipboard query is not the only kind of query that such a muxer has to deal with - there are many more queries of \"general state of the surroundings and context of the terminal\" that a muxer also has to cope with. However it handles it, should be chosen in a consistent manner with respect to these other queries.\n",
            "created_at": "2015-09-15T16:55:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-140461736",
            "id": 140461736,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQ2MTczNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140461736/reactions"
            },
            "updated_at": "2015-09-15T16:55:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140461736",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/350941?v=4",
                "events_url": "https://api.github.com/users/leonerd/events{/privacy}",
                "followers_url": "https://api.github.com/users/leonerd/followers",
                "following_url": "https://api.github.com/users/leonerd/following{/other_user}",
                "gists_url": "https://api.github.com/users/leonerd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/leonerd",
                "id": 350941,
                "login": "leonerd",
                "node_id": "MDQ6VXNlcjM1MDk0MQ==",
                "organizations_url": "https://api.github.com/users/leonerd/orgs",
                "received_events_url": "https://api.github.com/users/leonerd/received_events",
                "repos_url": "https://api.github.com/users/leonerd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/leonerd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leonerd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/leonerd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> There's no easy answer here, but I suspect that a clipboard query is not the only kind of query that such a muxer has to deal with - there are many more queries of \"general state of the surroundings and context of the terminal\" that a muxer also has to cope with. However it handles it, should be chosen in a consistent manner with respect to these other queries.\n\nThat is exactly the part I was interested in because I wondered about this myself when putting together nvim client/server model: At first I wanted to implement the clipboard register by simply asking the attached UI for clipboard data, but there was the complicated scenario of multiple UIs attached and so I decided to use the \"clipboard provider\" approach, where any piece of vimscript can register a handler for returning clipboard data. This gave me more flexibility to deal with the problem later.\n\nRight now the only implementation of the clipboard provider is a piece of vimscript that calls a program such as `xclip` or `xsel` to return the data, but later we can implement one that sends the request to the first attached UI for example(Since it would make little sense to ask for clipboard data from multiple clients)\n",
            "created_at": "2015-09-15T17:05:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-140464338",
            "id": 140464338,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDQ2NDMzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140464338/reactions"
            },
            "updated_at": "2015-09-15T17:05:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/140464338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "NONE",
            "body": "> What would be the sane behavior for a terminal multiplexer such a tmux that aims to support this in the case multiple clients are connected?\r\n\r\nThis question seems answered for the tmux case: https://github.com/tmux/tmux/commit/c88e945bc5e59bed8eaa41f1e66a9b03a2dad807\r\ntmux has support for OSC 52 since 2018 aka version 2.9a.",
            "created_at": "2021-06-15T14:56:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-861570673",
            "id": 861570673,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTU3MDY3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/861570673/reactions"
            },
            "updated_at": "2021-06-15T14:56:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/861570673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1961699?v=4",
                "events_url": "https://api.github.com/users/rumpelsepp/events{/privacy}",
                "followers_url": "https://api.github.com/users/rumpelsepp/followers",
                "following_url": "https://api.github.com/users/rumpelsepp/following{/other_user}",
                "gists_url": "https://api.github.com/users/rumpelsepp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rumpelsepp",
                "id": 1961699,
                "login": "rumpelsepp",
                "node_id": "MDQ6VXNlcjE5NjE2OTk=",
                "organizations_url": "https://api.github.com/users/rumpelsepp/orgs",
                "received_events_url": "https://api.github.com/users/rumpelsepp/received_events",
                "repos_url": "https://api.github.com/users/rumpelsepp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rumpelsepp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rumpelsepp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rumpelsepp"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Supported by xterm, iTerm2, possibly many others.\r\n\r\nSupported terminal emulators, source: https://github.com/ojroques/vim-oscyank\r\n\r\n| Terminal | OSC52 support |\r\n|----------|:-------------:|\r\n| [Alacritty](https://github.com/alacritty/alacritty) | **yes** |\r\n| [GNOME Terminal](https://github.com/GNOME/gnome-terminal) (and other VTE-based terminals) | [not yet](https://bugzilla.gnome.org/show_bug.cgi?id=795774) |\r\n| [hterm (Chromebook)](https://chromium.googlesource.com/apps/libapps/+/master/README.md) | [**yes**](https://chromium.googlesource.com/apps/libapps/+/master/nassh/doc/FAQ.md#Is-OSC-52-aka-clipboard-operations_supported) |\r\n| [iTerm2](https://iterm2.com/) | **yes** |\r\n| [foot](https://codeberg.org/dnkl/foot) | **yes** |\r\n| [kitty](https://github.com/kovidgoyal/kitty) | [**yes**](https://sw.kovidgoyal.net/kitty/protocol-extensions.html#pasting-to-clipboard) |\r\n| [screen](https://www.gnu.org/software/screen/) | **yes** |\r\n| [tmux](https://github.com/tmux/tmux) | **yes** |\r\n| [Windows Terminal](https://github.com/microsoft/terminal) | **yes** |\r\n| [rxvt](http://rxvt.sourceforge.net/) | **yes** (to be confirmed) |\r\n| [urxvt](http://software.schmorp.de/pkg/rxvt-unicode.html) | **yes** (with a script, see [here](https://github.com/ojroques/vim-oscyank/issues/4)) |\r\n",
            "created_at": "2021-06-15T14:58:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-861572370",
            "id": 861572370,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTU3MjM3MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/861572370/reactions"
            },
            "updated_at": "2021-06-15T14:58:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/861572370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1961699?v=4",
                "events_url": "https://api.github.com/users/rumpelsepp/events{/privacy}",
                "followers_url": "https://api.github.com/users/rumpelsepp/followers",
                "following_url": "https://api.github.com/users/rumpelsepp/following{/other_user}",
                "gists_url": "https://api.github.com/users/rumpelsepp/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rumpelsepp",
                "id": 1961699,
                "login": "rumpelsepp",
                "node_id": "MDQ6VXNlcjE5NjE2OTk=",
                "organizations_url": "https://api.github.com/users/rumpelsepp/orgs",
                "received_events_url": "https://api.github.com/users/rumpelsepp/received_events",
                "repos_url": "https://api.github.com/users/rumpelsepp/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rumpelsepp/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rumpelsepp/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rumpelsepp"
            }
        },
        {
            "author_association": "NONE",
            "body": "+1",
            "created_at": "2022-06-29T04:35:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1169524188",
            "id": 1169524188,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5FtYXc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169524188/reactions"
            },
            "updated_at": "2022-06-29T13:21:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169524188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41653104?v=4",
                "events_url": "https://api.github.com/users/nexplor/events{/privacy}",
                "followers_url": "https://api.github.com/users/nexplor/followers",
                "following_url": "https://api.github.com/users/nexplor/following{/other_user}",
                "gists_url": "https://api.github.com/users/nexplor/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nexplor",
                "id": 41653104,
                "login": "nexplor",
                "node_id": "MDQ6VXNlcjQxNjUzMTA0",
                "organizations_url": "https://api.github.com/users/nexplor/orgs",
                "received_events_url": "https://api.github.com/users/nexplor/received_events",
                "repos_url": "https://api.github.com/users/nexplor/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nexplor/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nexplor/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nexplor"
            }
        },
        {
            "author_association": "NONE",
            "body": "The copying part is really simple to implement:\r\n```lua\r\nfunction copy(sel)\r\n  return function(lines, _)\r\n    local data = vim.fn.system([[base64 | tr -d '\\n']], lines)\r\n    io.stdout:write('\\027]52;'..sel..';'..data..'\\a')\r\n  end\r\nend\r\n\r\nvim.g.clipboard = {name='OSC-52', copy={['*']=copy's', ['+']=copy'c'}}\r\n```\r\nPasting, on the other hand, is pretty involved: to do it properly you have to read from `/dev/tty` (without blocking!) for the reply from the terminal emulator. Also the screen settings must be changed to prevent the reply from messing up the output (disabling echo and such). \r\nI don't think it's possible to do it from lua/vimL, it probably has to be implemented in neovim or an external tool.",
            "created_at": "2022-07-11T16:42:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1180632283",
            "id": 1180632283,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5GXwTb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1180632283/reactions"
            },
            "updated_at": "2022-07-11T16:42:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1180632283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2817565?v=4",
                "events_url": "https://api.github.com/users/rnhmjoj/events{/privacy}",
                "followers_url": "https://api.github.com/users/rnhmjoj/followers",
                "following_url": "https://api.github.com/users/rnhmjoj/following{/other_user}",
                "gists_url": "https://api.github.com/users/rnhmjoj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rnhmjoj",
                "id": 2817565,
                "login": "rnhmjoj",
                "node_id": "MDQ6VXNlcjI4MTc1NjU=",
                "organizations_url": "https://api.github.com/users/rnhmjoj/orgs",
                "received_events_url": "https://api.github.com/users/rnhmjoj/received_events",
                "repos_url": "https://api.github.com/users/rnhmjoj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rnhmjoj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rnhmjoj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rnhmjoj"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm working on this now. There are a few prerequisites:\r\n\r\n- [x] Base64 encoding/decoding support (https://github.com/neovim/neovim/pull/25843)\r\n- [x] Ability for plugins to read terminal responses (https://github.com/neovim/neovim/pull/25868)",
            "created_at": "2023-10-31T16:53:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1787609566",
            "id": 1787609566,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5qjMHe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 9,
                "total_count": 9,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1787609566/reactions"
            },
            "updated_at": "2023-11-06T18:42:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1787609566",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It is totally technically possible for \"+p to ask the terminal what the state of the clipboard is, over an OSC\r\nThey're also really easy to probe for and ask if it's supported,\r\n\r\n@leonerd is there any way to \"ask if OSC 52 is supported\" other than actually trying to read/write to the clipboard? (which [may cause a dialog](https://github.com/neovim/neovim/pull/25872#issuecomment-1798864275))",
            "created_at": "2023-11-13T17:29:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1808641257",
            "id": 1808641257,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5rzazp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808641257/reactions"
            },
            "updated_at": "2023-11-13T17:29:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808641257",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Some terminals include an `Ms` terminfo entry (WezTerm, kitty, Ghostty, and iTerm2 all do, perhaps others). We _could_ try that. However, terminfo is an especially bad method in this particular case because the primary use case of OSC 52 is in remote terminal sessions, where the terminfo entry of the host terminal emulator may not always be present (or up to date).",
            "created_at": "2023-11-13T17:41:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1808661706",
            "id": 1808661706,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5rzfzK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808661706/reactions"
            },
            "updated_at": "2023-11-13T17:41:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808661706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "Maybe `XTGETTCAP` can help? See https://codeberg.org/dnkl/foot#xtgettcap",
            "created_at": "2023-11-13T17:51:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1808677428",
            "id": 1808677428,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5rzjo0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808677428/reactions"
            },
            "updated_at": "2023-11-13T17:51:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808677428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506932?v=4",
                "events_url": "https://api.github.com/users/emersion/events{/privacy}",
                "followers_url": "https://api.github.com/users/emersion/followers",
                "following_url": "https://api.github.com/users/emersion/following{/other_user}",
                "gists_url": "https://api.github.com/users/emersion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/emersion",
                "id": 506932,
                "login": "emersion",
                "node_id": "MDQ6VXNlcjUwNjkzMg==",
                "organizations_url": "https://api.github.com/users/emersion/orgs",
                "received_events_url": "https://api.github.com/users/emersion/received_events",
                "repos_url": "https://api.github.com/users/emersion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/emersion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/emersion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/emersion"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "XTGETTCAP could work. I'll put together a prototype.",
            "created_at": "2023-11-13T17:56:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1808711226",
            "id": 1808711226,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5rzr46",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808711226/reactions"
            },
            "updated_at": "2023-11-13T17:56:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808711226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "_Even if_ we can determine OSC 52 support automatically (via XTGETTCAP or other means) I am still unconvinced we should enable it by default, at least unconditionally. OSC 52 has security implications that other clipboard providers don't have. And some terminal emulators (e.g. Alacritty) simply disable reading via OSC 52 by default. So a user would have to know to first enable that feature in their terminal emulator. Other terminals show a prompt by default, but that's still more intrusive than other clipboard providers.",
            "created_at": "2023-11-13T18:09:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1808730602",
            "id": 1808730602,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5rzwnq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808730602/reactions"
            },
            "updated_at": "2023-11-13T18:09:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808730602",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "The security implications are to be managed by a good terminal emulator IMHO. Under Wayland, only focused windows can interact with the clipboard anyways.",
            "created_at": "2023-11-13T18:30:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1808764692",
            "id": 1808764692,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5rz48U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808764692/reactions"
            },
            "updated_at": "2023-11-13T18:30:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1808764692",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506932?v=4",
                "events_url": "https://api.github.com/users/emersion/events{/privacy}",
                "followers_url": "https://api.github.com/users/emersion/followers",
                "following_url": "https://api.github.com/users/emersion/following{/other_user}",
                "gists_url": "https://api.github.com/users/emersion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/emersion",
                "id": 506932,
                "login": "emersion",
                "node_id": "MDQ6VXNlcjUwNjkzMg==",
                "organizations_url": "https://api.github.com/users/emersion/orgs",
                "received_events_url": "https://api.github.com/users/emersion/received_events",
                "repos_url": "https://api.github.com/users/emersion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/emersion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/emersion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/emersion"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "OSC 52 is conditionally enabled by default as of https://github.com/neovim/neovim/pull/26064.",
            "created_at": "2023-11-16T18:24:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1815003850",
            "id": 1815003850,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5sLsLK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 3,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815003850/reactions"
            },
            "updated_at": "2023-11-16T18:24:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1815003850",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there a way to use OSC-52 such that yank/cut will automatically use it? In other words, I'd like to use `unnamedplus` in an SSH session, so that yanking/cutting on the remote computer automatically copies it to my local computer's clipboard. So far I've only been able to use `\"+y`.",
            "created_at": "2023-12-04T19:52:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1839371466",
            "id": 1839371466,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5topTK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839371466/reactions"
            },
            "updated_at": "2023-12-04T20:14:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839371466",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14161807?v=4",
                "events_url": "https://api.github.com/users/schiegl/events{/privacy}",
                "followers_url": "https://api.github.com/users/schiegl/followers",
                "following_url": "https://api.github.com/users/schiegl/following{/other_user}",
                "gists_url": "https://api.github.com/users/schiegl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/schiegl",
                "id": 14161807,
                "login": "schiegl",
                "node_id": "MDQ6VXNlcjE0MTYxODA3",
                "organizations_url": "https://api.github.com/users/schiegl/orgs",
                "received_events_url": "https://api.github.com/users/schiegl/received_events",
                "repos_url": "https://api.github.com/users/schiegl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/schiegl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/schiegl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/schiegl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a way to use OSC-52 ... I'd like to use `unnamedplus`\r\n\r\nBy default it's skipped if 'clipboard' is set: https://github.com/neovim/neovim/blob/e5d7003b02c9af96c51ea5638e07eea25057a216/runtime/plugin/osc52.lua#L5\r\n\r\nBut you can easily configure it like so:\r\n\r\nhttps://github.com/neovim/neovim/blob/e5d7003b02c9af96c51ea5638e07eea25057a216/runtime/plugin/osc52.lua#L23-L35",
            "created_at": "2023-12-04T20:14:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1839402357",
            "id": 1839402357,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5tow11",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839402357/reactions"
            },
            "updated_at": "2023-12-04T20:14:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839402357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "> But you can easily configure it like so:\r\n\r\nYes, I already tried that based on the documentation provided at: https://neovim.io/doc/user/provider.html#clipboard-osc52.\r\n\r\n`:echo g:clipboard` shows the OSC 52 configuration you provided. However, only `\"+y` and right click copy (from the neovim dropdown) yanks into the local clipboard for me, but not a simple yank with `y`. I tried it in Kitty and MacOS Terminal.app with version v0.10.0-dev.",
            "created_at": "2023-12-04T20:46:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1839448140",
            "id": 1839448140,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5to8BM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839448140/reactions"
            },
            "updated_at": "2023-12-04T20:47:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839448140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14161807?v=4",
                "events_url": "https://api.github.com/users/schiegl/events{/privacy}",
                "followers_url": "https://api.github.com/users/schiegl/followers",
                "following_url": "https://api.github.com/users/schiegl/following{/other_user}",
                "gists_url": "https://api.github.com/users/schiegl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/schiegl",
                "id": 14161807,
                "login": "schiegl",
                "node_id": "MDQ6VXNlcjE0MTYxODA3",
                "organizations_url": "https://api.github.com/users/schiegl/orgs",
                "received_events_url": "https://api.github.com/users/schiegl/received_events",
                "repos_url": "https://api.github.com/users/schiegl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/schiegl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/schiegl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/schiegl"
            }
        },
        {
            "author_association": "NONE",
            "body": "There's a `TextYankPost` autocommand that you should be able to use to call the OSC 52 copy function.",
            "created_at": "2023-12-05T03:20:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1839934887",
            "id": 1839934887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5tqy2n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839934887/reactions"
            },
            "updated_at": "2023-12-05T03:20:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1839934887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/465527?v=4",
                "events_url": "https://api.github.com/users/majutsushi/events{/privacy}",
                "followers_url": "https://api.github.com/users/majutsushi/followers",
                "following_url": "https://api.github.com/users/majutsushi/following{/other_user}",
                "gists_url": "https://api.github.com/users/majutsushi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/majutsushi",
                "id": 465527,
                "login": "majutsushi",
                "node_id": "MDQ6VXNlcjQ2NTUyNw==",
                "organizations_url": "https://api.github.com/users/majutsushi/orgs",
                "received_events_url": "https://api.github.com/users/majutsushi/received_events",
                "repos_url": "https://api.github.com/users/majutsushi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/majutsushi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/majutsushi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/majutsushi"
            }
        },
        {
            "author_association": "NONE",
            "body": "@majutsushi Thank you for the tip. But, I ended up using [smart-yank](https://github.com/ibhagwan/smartyank.nvim) with 0.9.4 since 0.10 is still too unstable for me.",
            "created_at": "2023-12-06T17:46:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1843375539",
            "id": 1843375539,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5t362z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1843375539/reactions"
            },
            "updated_at": "2023-12-06T17:46:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1843375539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14161807?v=4",
                "events_url": "https://api.github.com/users/schiegl/events{/privacy}",
                "followers_url": "https://api.github.com/users/schiegl/followers",
                "following_url": "https://api.github.com/users/schiegl/following{/other_user}",
                "gists_url": "https://api.github.com/users/schiegl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/schiegl",
                "id": 14161807,
                "login": "schiegl",
                "node_id": "MDQ6VXNlcjE0MTYxODA3",
                "organizations_url": "https://api.github.com/users/schiegl/orgs",
                "received_events_url": "https://api.github.com/users/schiegl/received_events",
                "repos_url": "https://api.github.com/users/schiegl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/schiegl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/schiegl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/schiegl"
            }
        },
        {
            "author_association": "NONE",
            "body": "by default nvim copies into the 'unnamed' buffer, not into 'plus', if you set `vim.opt.clipboard=unnamedplus`, then it will work as you expected it to without a plugin",
            "created_at": "2023-12-21T10:51:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1866046070",
            "id": 1866046070,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM5vOZp2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1866046070/reactions"
            },
            "updated_at": "2023-12-21T10:51:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1866046070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/58662350?v=4",
                "events_url": "https://api.github.com/users/Aonodensetsu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Aonodensetsu/followers",
                "following_url": "https://api.github.com/users/Aonodensetsu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Aonodensetsu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Aonodensetsu",
                "id": 58662350,
                "login": "Aonodensetsu",
                "node_id": "MDQ6VXNlcjU4NjYyMzUw",
                "organizations_url": "https://api.github.com/users/Aonodensetsu/orgs",
                "received_events_url": "https://api.github.com/users/Aonodensetsu/received_events",
                "repos_url": "https://api.github.com/users/Aonodensetsu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Aonodensetsu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Aonodensetsu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Aonodensetsu"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hi @justinmk, I'm not sure if I need to open a new issue, but it seems that block pasting doesn't work with the osc52 provider. This is the same behavior as described in #1822, but for osc52. My understanding is that an internal mechanism was previously added to Neovim to mark a block clipboard, but this doesn't seem to work for osc52?",
            "created_at": "2024-03-01T13:14:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1973177185",
            "id": 1973177185,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM51nEth",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973177185/reactions"
            },
            "updated_at": "2024-03-01T13:14:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973177185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/72071763?v=4",
                "events_url": "https://api.github.com/users/name-snrl/events{/privacy}",
                "followers_url": "https://api.github.com/users/name-snrl/followers",
                "following_url": "https://api.github.com/users/name-snrl/following{/other_user}",
                "gists_url": "https://api.github.com/users/name-snrl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/name-snrl",
                "id": 72071763,
                "login": "name-snrl",
                "node_id": "MDQ6VXNlcjcyMDcxNzYz",
                "organizations_url": "https://api.github.com/users/name-snrl/orgs",
                "received_events_url": "https://api.github.com/users/name-snrl/received_events",
                "repos_url": "https://api.github.com/users/name-snrl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/name-snrl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/name-snrl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/name-snrl"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just to be clear. I'm using `unnamedplus`. And when I added this snippet to the cfg, the block pasting stopped working correctly inside Neovim.\r\n\r\n```lua\r\nvim.g.clipboard = {\r\n  name = 'OSC 52',\r\n  copy = {\r\n    ['+'] = require('vim.ui.clipboard.osc52').copy '+',\r\n    ['*'] = require('vim.ui.clipboard.osc52').copy '*',\r\n  },\r\n  paste = {\r\n    ['+'] = require('vim.ui.clipboard.osc52').paste '+',\r\n    ['*'] = require('vim.ui.clipboard.osc52').paste '*',\r\n  },\r\n}\r\n```",
            "created_at": "2024-03-01T13:25:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1973199328",
            "id": 1973199328,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM51nKHg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973199328/reactions"
            },
            "updated_at": "2024-03-01T13:26:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973199328",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/72071763?v=4",
                "events_url": "https://api.github.com/users/name-snrl/events{/privacy}",
                "followers_url": "https://api.github.com/users/name-snrl/followers",
                "following_url": "https://api.github.com/users/name-snrl/following{/other_user}",
                "gists_url": "https://api.github.com/users/name-snrl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/name-snrl",
                "id": 72071763,
                "login": "name-snrl",
                "node_id": "MDQ6VXNlcjcyMDcxNzYz",
                "organizations_url": "https://api.github.com/users/name-snrl/orgs",
                "received_events_url": "https://api.github.com/users/name-snrl/received_events",
                "repos_url": "https://api.github.com/users/name-snrl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/name-snrl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/name-snrl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/name-snrl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@name-snrl Yes, please open a new issue with reproduction steps.",
            "created_at": "2024-03-01T15:13:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/3344#issuecomment-1973368484",
            "id": 1973368484,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3344",
            "node_id": "IC_kwDOAPphoM51nzak",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973368484/reactions"
            },
            "updated_at": "2024-03-01T15:13:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973368484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments": 26,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/3344/comments",
    "created_at": "2015-09-15T12:49:41Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/3344/events",
    "html_url": "https://github.com/neovim/neovim/issues/3344",
    "id": 106548571,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "clipboard, paste",
            "id": 186192409,
            "name": "clipboard",
            "node_id": "MDU6TGFiZWwxODYxOTI0MDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/clipboard"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk. Do NOT ask \"can I work on this\", just read CONTRIBUTING.md",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/3344/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 302,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-04-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 132,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-03-04T06:24:11Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "MDU6SXNzdWUxMDY1NDg1NzE=",
    "number": 3344,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 28,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 28,
        "url": "https://api.github.com/repos/neovim/neovim/issues/3344/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/3344/timeline",
    "title": "TUI: use OSC 52 for copy/paste",
    "updated_at": "2024-03-01T15:13:40Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/3344",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}