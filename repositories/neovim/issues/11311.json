{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "@norcalli suggested:\r\n\r\n> Do we have any style guides for Lua on returning nil vs asserting inside\r\n> a function? Idiomatic lua would return nil and maybe a message as a second\r\n> parameter so that the caller can do `local value = assert(fn())`, which is what\r\n> I would recommend\r\n\r\nWe should:\r\n\r\n- Document the `local value = assert(fn())` idiom in `:help lua`\r\n- Document guidelines in `:help lua` and/or `:help dev-lua`\r\n- Consider this policy/guideline for the project:\r\n  - ~~\"Library functions\" should \"return `nil` + message\". Examples: `trim()`, `first()`~~\r\n  - **Guideline:** `assert()` or `error()` (\"fail early\", avoid silent/distant failure) for invalid usage (analogous to syntax error)\r\n  - Return `nil` + message for expected failure modes (failed requests, etc.): when caller is expected to handle the failure (control-flow)\r\n",
    "closed_at": "2024-09-05T14:49:41Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> \"Library functions\" should \"return nil + message\"  Examples: trim(), first(), ...\r\n\r\nUsing `if err != nil` error handling in every single utility function would just turn the code into a mess for no gain. In general, these functions will fail because there was something wrong with the arguments the caller sent in. There is nothing a plugin really can do about such an error than fix their code so it won't happen again in the first place, so adding explicit `assert()` at every call site is just redundant.\r\n\r\nRather, I think should use `value, err` return for functions where we explicitly \"expect the unexpected\", for instance when we communicate with the external world. When doing a LSP request it is _expected_ that the server might return an error (especially when dealing with multiple unknown servers) even if we did every thing right locally.\r\n\r\nAlso, errors should not be used in lua for expected sentinel conditions. @norcalli mentioned `nvim.api.nvim_get_var` throwing an error on missing var, which is not idomatic lua for sure but rather a mismatch of API conventions (in the API every error is already \"value, err\" internally) with lua conventions. A new `vim.g.my_var` interface should instead return `vim.NIL` (from #11310 ) for `g:my_var = v:null` and `nil` when it is missing.",
            "created_at": "2019-10-29T07:30:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-547292227",
            "id": 547292227,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI5MjIyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/547292227/reactions"
            },
            "updated_at": "2019-10-29T07:30:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/547292227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "updated, thanks!",
            "created_at": "2019-10-29T07:49:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-547297185",
            "id": 547297185,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI5NzE4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/547297185/reactions"
            },
            "updated_at": "2021-08-27T12:19:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/547297185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "For the record I agree with @bfredl on his refinement of the conditions and would add the summary of `If the user is using the library function wrong, that's a fatal error` as a guideline. This would include things like type errors which could go silently undetected otherwise. ",
            "created_at": "2019-10-29T07:52:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-547298066",
            "id": 547298066,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzI5ODA2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/547298066/reactions"
            },
            "updated_at": "2021-08-27T12:20:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/547298066",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/296363?v=4",
                "events_url": "https://api.github.com/users/norcalli/events{/privacy}",
                "followers_url": "https://api.github.com/users/norcalli/followers",
                "following_url": "https://api.github.com/users/norcalli/following{/other_user}",
                "gists_url": "https://api.github.com/users/norcalli/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/norcalli",
                "id": 296363,
                "login": "norcalli",
                "node_id": "MDQ6VXNlcjI5NjM2Mw==",
                "organizations_url": "https://api.github.com/users/norcalli/orgs",
                "received_events_url": "https://api.github.com/users/norcalli/received_events",
                "repos_url": "https://api.github.com/users/norcalli/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/norcalli/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/norcalli/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/norcalli"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> add the summary of `If the user is using the library function wrong, that's a fatal error` as a guideline\r\n\r\nI did: see \"invalid usage\".",
            "created_at": "2019-10-29T08:13:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-547304749",
            "id": 547304749,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzMwNDc0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/547304749/reactions"
            },
            "updated_at": "2021-08-27T12:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/547304749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not sure if there's anything to be done here. Errors are called with `error` or `assert`. API's that work with an external interface (e.g. `uv`) usually return something like `nil, err` as they should be specifically handled.",
            "created_at": "2024-09-04T10:30:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2328508806",
            "id": 2328508806,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6KyjmG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328508806/reactions"
            },
            "updated_at": "2024-09-04T10:30:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328508806",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`:help dev-lua` now mentions:\r\n\r\n```\r\n  - when a result-or-error interface is needed, return `result|nil, nil|errmsg`: >\r\n    ---@return Foo|nil # Result object, or nil if not found.\r\n    ---@return nil|string # Error message on failure, or nil on success.\r\n<\r\n    - Examples: |vim.ui.open()| |io.open()| |luv-error-handling|\r\n```\r\n\r\nhowever we don't mention the `foo = assert(...)` idiom anywhere (`:help lua-guide` or `:help lua-concepts`).",
            "created_at": "2024-09-04T10:55:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2328573588",
            "id": 2328573588,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6KyzaU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328573588/reactions"
            },
            "updated_at": "2024-09-04T10:55:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328573588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Do we really need to? Our codebase uses a lot of common Lua idioms and `foo = assert(...)` is one. Why is this one special enough to document specifically?",
            "created_at": "2024-09-04T11:23:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2328660441",
            "id": 2328660441,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6KzInZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328660441/reactions"
            },
            "updated_at": "2024-09-04T11:23:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328660441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ":help lua-guide or :help lua-concepts exist to introduce users to Lua idioms that we recommend.\r\n\r\nI will address this in https://github.com/neovim/neovim/pull/30240",
            "created_at": "2024-09-04T12:18:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2328827685",
            "id": 2328827685,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6Kzxcl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328827685/reactions"
            },
            "updated_at": "2024-09-04T12:18:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2328827685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "In relation to this, can I ask here about the API for `vim.system`? Unlike `uv`, `vim.system` potentially throws an error rather than returning `result|nil, nil|errmsg`. As a result, it's a bit more complicated to use since plugin authors (I think) have to wrap any call to `vim.system` in `pcall`. (I can show an example if this isn't clear.)\r\n\r\nIs it possible to revisit the API of `vim.system` so that it doesn't throw errors (but rather returns error messages)? Or is it too late now? ",
            "created_at": "2024-09-04T14:36:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329244669",
            "id": 2329244669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K1XP9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329244669/reactions"
            },
            "updated_at": "2024-09-04T14:38:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329244669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is it possible to revisit the API of `vim.system` so that it doesn't throw errors (but rather returns error messages)?\r\n\r\nOpen a new issue. We absolutely want to get vim.system in perfect shape to avoid yet another variant in the future. ",
            "created_at": "2024-09-04T14:37:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329248722",
            "id": 2329248722,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K1YPS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329248722/reactions"
            },
            "updated_at": "2024-09-04T14:38:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329248722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim.system` only errors if setup logic in the function itself fails for some reason. If the process launched and errors, then the return code is set. This is intentional.",
            "created_at": "2024-09-04T14:52:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329283174",
            "id": 2329283174,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K1gpm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329283174/reactions"
            },
            "updated_at": "2024-09-04T14:52:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329283174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@lewis6991 Okay, I am probably confused then. If, for example, I try to run a command that does not exist (say, I typo the name), are you saying that `vim.system` will not throw an error? I thought it would, and that forced me to wrap everything in `pcall`.",
            "created_at": "2024-09-04T14:55:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329290864",
            "id": 2329290864,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K1ihw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329290864/reactions"
            },
            "updated_at": "2024-09-05T14:54:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329290864",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It will error because the invocation of `uv.spawn` fails and no process is spawned.",
            "created_at": "2024-09-04T14:58:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329297421",
            "id": 2329297421,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K1kIN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329297421/reactions"
            },
            "updated_at": "2024-09-04T14:58:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329297421",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It will error because the invocation of `uv.spawn` fails, and no process is spawned.\r\n\r\nOkay, but in the parallel case `uv.spawn` does *not* throw an error, right? This is (for me) the sticking point. Because `vim.system` can error, it seems like many (most?) uses of it must be wrapped in `pcall`. I think that's not ideal, but I may not be seeing the larger issues or choices. In any case, it sounds like I should open a new issue to discuss this. I'll do that.",
            "created_at": "2024-09-04T14:59:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329301458",
            "id": 2329301458,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K1lHS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329301458/reactions"
            },
            "updated_at": "2024-09-05T14:54:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329301458",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If, for example, I try to run a command that does not exist (say, I typo the name) ... that forced me to wrap everything in pcall\r\n\r\ntypos and validation errors are essentially \"syntax errors\" or compile-time errors. They should not be handled by pcall unless you are passing user input, but that's again a validation issue.\r\n",
            "created_at": "2024-09-04T15:09:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329329191",
            "id": 2329329191,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K1r4n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329329191/reactions"
            },
            "updated_at": "2024-09-04T15:09:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329329191",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Okay, but in the parallel case uv.spawn does not throw an error, right?\r\n\r\nNo it doesn't. That's a lower level function. `vim.system` is a higher level function with a different interface and specifically never returns `nil, err`. The default handlers will also cause an error if they fail to setup correctly and `obj:write` can also throw an error.\r\n\r\n> it seems like many (most?) uses of it must be wrapped in pcall\r\n\r\nI've used it in a large handful of plugins and never once required to use it with `pcall`. The Nvim codebase also never does this.\r\n\r\nI'm not sure why using `pcall` is a sticking point anyway. And why can't you check if an executable is present by using `vim.fn.executable`? Then you don't have to worry about parsing whatever you get back from an error string.",
            "created_at": "2024-09-04T15:12:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329340508",
            "id": 2329340508,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K1upc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329340508/reactions"
            },
            "updated_at": "2024-09-04T15:12:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329340508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> typos and validation errors are essentially \"syntax errors\" or compile-time errors. They should not be handled by pcall unless you are passing user input, but that's again a validation issue.\r\n\r\n> I've used it in a large handful of plugins and never once required to use it with `pcall`. The Nvim codebase also never does this.\r\n\r\nOkay, this is helpful for me to think about. As a (prospective) plugin author, I assumed that I had to use `pcall` because otherwise the error that reaches the user is ugly and hard to decipher. What both of you say good sense to me though. If I handle the potential problem as validation (e.g., checking with `vim.fn.executable`), I should be able to catch the problem early and present it to the user more clearly.\r\n\r\n> I'm not sure why using `pcall` is a sticking point anyway.\r\n\r\nProbably this is subjective, but I find the `vim.system` call *already* complicated. To my eyes, the version wrapped by `pcall` is even worse. E.g.,\r\n\r\n```lua\r\n    local ok = pcall(\r\n        vim.system,\r\n        cmd,\r\n        { text = true },\r\n        vim.schedule_wrap(function(o)\r\n            local stream = nil\r\n            if l_cfg.stream == \"stdout\" then\r\n                stream = o.stdout\r\n            elseif l_cfg.stream == \"stderr\" then\r\n                stream = o.stderr\r\n            end\r\n            on_exit(stream, title, efm)\r\n        end)\r\n    )\r\n\r\n    if not ok then\r\n        -- ...\r\n    end\r\n```\r\n\r\nIn any case, this sounds like it is working as intended, and I need to rethink how I handle (potential) error cases. Thanks for the feedback.",
            "created_at": "2024-09-04T17:43:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2329643437",
            "id": 2329643437,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K24mt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329643437/reactions"
            },
            "updated_at": "2024-09-05T14:54:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2329643437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I will address this in #30240\r\n\r\ndone",
            "created_at": "2024-09-05T14:49:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/11311#issuecomment-2331912676",
            "id": 2331912676,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/11311",
            "node_id": "IC_kwDOAPphoM6K_ink",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2331912676/reactions"
            },
            "updated_at": "2024-09-05T14:49:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2331912676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 18,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/11311/comments",
    "created_at": "2019-10-29T04:33:27Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/11311/events",
    "html_url": "https://github.com/neovim/neovim/issues/11311",
    "id": 513687605,
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/11311/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 645,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 566,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-09-09T18:06:19Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU1MTM2ODc2MDU=",
    "number": 11311,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/11311/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/11311/timeline",
    "title": "Lua stdlib: guidelines for raising errors",
    "updated_at": "2024-09-05T14:54:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/11311",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}