{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nSome api requires a function parameter:\r\n```lua\r\nlocal timer=vim.uv.new_timer()\r\n-- I believe there's more empty function define like this.\r\nlocal empty_fn=function() end\r\n--- This function needs to wait 1s for every call, otherwise it does nothing.\r\n--- It use timer, but timer needs a callback function.\r\n--- This is a real problem I met.\r\nlocal function fn_for_second()\r\n if timer:is_active() then\r\n  return\r\n end\r\n timer:start(1000,0,empty_fn)\r\n --- do somethings that needs to wait a second every time\r\nend\r\n```\r\nAnd it's quite often that a empty function is needed in lua. (For keep things callable or making lua_ls annotation I assume.)\r\n\r\n![image](https://github.com/neovim/neovim/assets/32760059/488a09af-4f1d-445f-8c62-cd079e2f95ab)\r\n\r\n\r\nThe frozen table is for the same purpose, to prevent creating empty table multiple times.\r\nAnd I think it's more readable because:\r\n```lua\r\nfn(arg,{}) -- This {} is confuse and useless if it will never be accessed.\r\nfn(arg,vim.empty_tbl) -- If this parameter can't be nil, use this empty_tbl will be better.\r\n```\r\n\r\nThis is just a simple idea come out of my mind that I see multiple empty function definition and table that never be accessed, I think it's may not necessary, but will make things little better.\r\n\r\n### Expected behavior\r\n\r\nThe lua code may seems like this.\r\n```lua\r\n--- Function that does nothing.\r\nvim.empty_f=function() end\r\n--- Table that always empty.\r\nvim.empty_t=setmetatable({},{\r\n __index=vim.empty_f,\r\n __newindex=vim.empty_f,\r\n})\r\n```",
    "closed_at": "2024-02-20T11:37:43Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`function() end` is 14 bytes and self explanatory. `vim.empty_f` is three bytes shorter and has a definition which needs to be looked up. Is it really an improvement?",
            "created_at": "2024-02-20T10:38:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/27550#issuecomment-1953928207",
            "id": 1953928207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27550",
            "node_id": "IC_kwDOAPphoM50dpQP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1953928207/reactions"
            },
            "updated_at": "2024-02-20T10:38:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1953928207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\"frozen dict\" might be useful for some things but it has **nothing** to do with using `{}` as a value. there is already a natural spelling for that, which is: `{}` .",
            "created_at": "2024-02-20T10:39:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/27550#issuecomment-1953930592",
            "id": 1953930592,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27550",
            "node_id": "IC_kwDOAPphoM50dp1g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1953930592/reactions"
            },
            "updated_at": "2024-02-20T10:39:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1953930592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "> function() end is 14 bytes and self explanatory.\r\n\r\nMy point is to reuse same things, I know it's not a **big usage** for  memories, but it is a improve, a improve for 14 bytes like you said.\r\n\r\n> \"frozen dict\" might be useful for some things but it has nothing to do with using {} as a value. there is already a natural spelling for that, which is: {} .\r\n\r\nIf it has to come with performance, I would say `{}` to create a new table is slower than `vim.empty_t` to getting a existing one, especially when this happens in a loop, and same to the `function() end`.\r\n\r\n> Is it really an improvement?\r\n\r\nI don't like extreme scenarios that much. But it is a improvement if the `std` itself is creating `{}` all the time. My point is about reuse although but it sure did some improve:\r\n\r\n`test.lua`\r\n```lua\r\nlocal function testrun(fn,t,...)\r\n local s=os.clock()\r\n for _=1,t do\r\n  fn(...)\r\n end\r\n local e=os.clock()\r\n return e-s\r\nend\r\nlocal t=10000000\r\nstd={}\r\nstd.empty_f=function() end\r\nstd.empty_t=setmetatable({},{\r\n __index=std.empty_f,\r\n __newindex=std.empty_f,\r\n})\r\nlocal fn1=function()\r\n return {}\r\nend\r\nlocal fn2=function()\r\n return std.empty_t\r\nend\r\nprint(1,testrun(fn1,t)) ---\r\nprint(2,testrun(fn2,t))\r\n```\r\n```\r\n~ luajit test.lua\r\n1       0.54513\r\n2       0.151067\r\n```\r\n\r\nThis thing is not really necessary, but it's not useless too. In my word: \"Will make things little better.\".",
            "created_at": "2024-02-20T11:27:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/27550#issuecomment-1954015576",
            "id": 1954015576,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27550",
            "node_id": "IC_kwDOAPphoM50d-lY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1954015576/reactions"
            },
            "updated_at": "2024-02-20T11:27:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1954015576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/abcdefg233/events{/privacy}",
                "followers_url": "https://api.github.com/users/abcdefg233/followers",
                "following_url": "https://api.github.com/users/abcdefg233/following{/other_user}",
                "gists_url": "https://api.github.com/users/abcdefg233/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/abcdefg233",
                "id": 32760059,
                "login": "abcdefg233",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/abcdefg233/orgs",
                "received_events_url": "https://api.github.com/users/abcdefg233/received_events",
                "repos_url": "https://api.github.com/users/abcdefg233/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/abcdefg233/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/abcdefg233/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/abcdefg233"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I would say {} to create a new table is slower than vim.empty_t to getting a existing one, especially when this happens in a loop, and same to the function() end.\r\n\r\nSure but you can just bind this locally yourself outside the loop. Every trick in the book doesn't need to have a \"name\" and an official fanfare, you can just use it.",
            "created_at": "2024-02-20T11:37:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/27550#issuecomment-1954031094",
            "id": 1954031094,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27550",
            "node_id": "IC_kwDOAPphoM50eCX2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1954031094/reactions"
            },
            "updated_at": "2024-02-20T11:37:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1954031094",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for providing benchmarks. Even in the scenario that you provided where a loop is run 10 million times, there's only a 3x speedup. And that's in a case where the loop is doing absolutely nothing else except creating an object. If such a loop needs to be optimized, luajit's own guidance says you should store a local for your own purposes, to avoid unnecessary garbage.\r\n\r\nMeanwhile in real-world code, this micro-optimization won't change anything. And it's a very specific micro-optimization, it doesn't help for any other case.\r\n\r\nI see something about \"frozen\" structure, which implies immutability. And that would indeed be useful, but it's a much larger, separate topic.",
            "created_at": "2024-02-20T11:37:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/27550#issuecomment-1954031942",
            "id": 1954031942,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27550",
            "node_id": "IC_kwDOAPphoM50eClG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1954031942/reactions"
            },
            "updated_at": "2024-02-20T11:37:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1954031942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27550/comments",
    "created_at": "2024-02-20T10:32:58Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27550/events",
    "html_url": "https://github.com/neovim/neovim/issues/27550",
    "id": 2144056612,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27550/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5_y7Uk",
    "number": 27550,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27550/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27550/timeline",
    "title": "Add empty function and a frozen table to Lua stdlib",
    "updated_at": "2024-02-20T11:38:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27550",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
        "events_url": "https://api.github.com/users/abcdefg233/events{/privacy}",
        "followers_url": "https://api.github.com/users/abcdefg233/followers",
        "following_url": "https://api.github.com/users/abcdefg233/following{/other_user}",
        "gists_url": "https://api.github.com/users/abcdefg233/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/abcdefg233",
        "id": 32760059,
        "login": "abcdefg233",
        "node_id": "MDQ6VXNlcjMyNzYwMDU5",
        "organizations_url": "https://api.github.com/users/abcdefg233/orgs",
        "received_events_url": "https://api.github.com/users/abcdefg233/received_events",
        "repos_url": "https://api.github.com/users/abcdefg233/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/abcdefg233/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/abcdefg233/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/abcdefg233"
    }
}