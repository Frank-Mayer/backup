{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nCurrently the `vim.secure` module is very restrictive. The only way to check a file is to try to read it, and there is no automated way to allow a file. This is a problem in automated testing where I want to create and destroy a trust DB on the fly.\n\n### Expected behavior\n\nI would like a way to perform these actions:\r\n\r\n- Check whether a file is trusted without performing any side effects like reading\r\n- Allow a file without asking for confirmation\r\n\r\nI think the first point is not controversial at all. However, the second point might be. In the discussions over at #27627 this was considered a vulnerability, but I disagree. Case in point, in [a test](https://github.com/HiPhish/neotest-busted/blob/f4b3ad0d1af90961b6bd903c94e5a6922c1e8ece/test/integration/config-detection.lua#L15) of mine I manually compute the hashes and create a trust DB file, so if I can circumvent `vim.secure` then so can any malicious plugin.\r\n\r\nMy understanding is that `vim.secure.read` exists to prevent executing *unexpected* code from *unknown* files like in the `exrc` option. For example, when I download a codebase and open the code in my editor to inspect it, I don't want to start executing code from that repo without confirmation. However, when I install a plugin I have made a deliberate choice. At this point the plugin can just append a line directly to the trust DB, it does not have to go through `vim.secure`. Not to mention that the plugin can do damage directly, whitelisting a foreign file which the user may or may not ever open is a pointlessly roundabout attack.",
    "closed_at": "2024-03-01T15:49:09Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": ">  Check whether a file is trusted without performing any side effects like reading\r\n\r\nThat is a completely reasonable task for a test to perform, doesn't justify extra API imo.\r\n\r\n>  Allow a file without asking for confirmation\r\n\r\nIt's not necessarily an attack vector, but it does _defeat the purpose_ of `:trust`.",
            "created_at": "2024-03-01T15:49:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/27686#issuecomment-1973425550",
            "id": 1973425550,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27686",
            "node_id": "IC_kwDOAPphoM51oBWO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973425550/reactions"
            },
            "updated_at": "2024-03-01T16:30:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973425550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's not necessary an attack vector, but it does _defeat the purpose_ of `:trust`.\r\n\r\nCan you please elaborate what the purpose of `:trust` is then? Is my understanding of `exrc` wrong? I am trying to understand why I cannot allow a file through scripting, but have to do it manually.",
            "created_at": "2024-03-01T15:55:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/27686#issuecomment-1973437066",
            "id": 1973437066,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27686",
            "node_id": "IC_kwDOAPphoM51oEKK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973437066/reactions"
            },
            "updated_at": "2024-03-01T15:55:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973437066",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
                "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
                "followers_url": "https://api.github.com/users/HiPhish/followers",
                "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
                "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HiPhish",
                "id": 4954650,
                "login": "HiPhish",
                "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
                "organizations_url": "https://api.github.com/users/HiPhish/orgs",
                "received_events_url": "https://api.github.com/users/HiPhish/received_events",
                "repos_url": "https://api.github.com/users/HiPhish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HiPhish"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> elaborate what the purpose of `:trust` is then?\r\n\r\nSame as Windows UAC :) It explicitly asks the user if they want to run a script. Automating that defeats its purpose.\r\n\r\n> I am trying to understand why I cannot allow a file through scripting\r\n\r\nscripts can call `:trust` , which accepts a `[file]` arg.\r\n",
            "created_at": "2024-03-01T16:29:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/27686#issuecomment-1973496188",
            "id": 1973496188,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27686",
            "node_id": "IC_kwDOAPphoM51oSl8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973496188/reactions"
            },
            "updated_at": "2024-03-01T16:29:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973496188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> scripts can call `:trust` , which accepts a `[file]` arg.\r\n\r\nI tried that, I get `E475: Invalid argument: src/arithmetic.fnl` (or whatever the file is), otherwise I would have used that. Is this a bug?\r\n\r\nTo provide some context, I recently wrote [HiPhish/neotest-busted](https://github.com/HiPhish/neotest-busted), which loads the `.busted` file to read in the user's settings. Since `.busted` can contain arbitrary Lua code I use `trust.read` to first ask the user for confirmation. Of course I also need to test whether the feature actually works, so in one of my integration tests I generate a trust DB which has some files allowed and some not, and then use that trust DB during testing.",
            "created_at": "2024-03-01T17:46:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/27686#issuecomment-1973623351",
            "id": 1973623351,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27686",
            "node_id": "IC_kwDOAPphoM51oxo3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973623351/reactions"
            },
            "updated_at": "2024-03-01T17:46:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973623351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
                "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
                "followers_url": "https://api.github.com/users/HiPhish/followers",
                "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
                "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HiPhish",
                "id": 4954650,
                "login": "HiPhish",
                "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
                "organizations_url": "https://api.github.com/users/HiPhish/orgs",
                "received_events_url": "https://api.github.com/users/HiPhish/received_events",
                "repos_url": "https://api.github.com/users/HiPhish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HiPhish"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\r\n> I tried that, I get `E475: Invalid argument: src/arithmetic.fnl` (or whatever the file is), otherwise I would have used that. Is this a bug?\r\n\r\nwhat exact code did you try? we have tests: https://github.com/neovim/neovim/blob/5d4e1693cb415e8b76749e833e28f00f14630b87/test/functional/ex_cmds/trust_spec.lua#L59\r\n\r\nIt's possible that we require you to be viewing the file before trusting it.",
            "created_at": "2024-03-01T17:59:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/27686#issuecomment-1973641651",
            "id": 1973641651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27686",
            "node_id": "IC_kwDOAPphoM51o2Gz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973641651/reactions"
            },
            "updated_at": "2024-03-01T17:59:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973641651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> what exact code did you try?\r\n\r\nI executed `:trust src/arithmetic.fnl` or `:trust %`, both throw the same error, regardless of whether the file is in the current buffer or not. Executing `:trust` without any argument works fine.\r\n\r\nNeovim version 0.9.5",
            "created_at": "2024-03-01T18:02:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/27686#issuecomment-1973650682",
            "id": 1973650682,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27686",
            "node_id": "IC_kwDOAPphoM51o4T6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973650682/reactions"
            },
            "updated_at": "2024-03-01T18:02:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973650682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
                "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
                "followers_url": "https://api.github.com/users/HiPhish/followers",
                "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
                "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HiPhish",
                "id": 4954650,
                "login": "HiPhish",
                "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
                "organizations_url": "https://api.github.com/users/HiPhish/orgs",
                "received_events_url": "https://api.github.com/users/HiPhish/received_events",
                "repos_url": "https://api.github.com/users/HiPhish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HiPhish"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "yes `:help :trust` makes it clear, the `[file]` argument is only relevant for ++deny/++remove. So `:edit` the file first. Scripts can do that :)",
            "created_at": "2024-03-01T20:39:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/27686#issuecomment-1973882559",
            "id": 1973882559,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27686",
            "node_id": "IC_kwDOAPphoM51pw6_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973882559/reactions"
            },
            "updated_at": "2024-03-01T20:39:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1973882559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Scripts can do that :)\r\n\r\nYes, but only by mutating the editor state, which means I can only use that approach in end-to-end tests, not unit tests. I think I'll just stick to writing to the trust DB file directly instead.",
            "created_at": "2024-03-04T19:52:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/27686#issuecomment-1977345788",
            "id": 1977345788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27686",
            "node_id": "IC_kwDOAPphoM512-b8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1977345788/reactions"
            },
            "updated_at": "2024-03-04T19:52:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1977345788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
                "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
                "followers_url": "https://api.github.com/users/HiPhish/followers",
                "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
                "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HiPhish",
                "id": 4954650,
                "login": "HiPhish",
                "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
                "organizations_url": "https://api.github.com/users/HiPhish/orgs",
                "received_events_url": "https://api.github.com/users/HiPhish/received_events",
                "repos_url": "https://api.github.com/users/HiPhish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HiPhish"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27686/comments",
    "created_at": "2024-03-01T12:30:51Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27686/events",
    "html_url": "https://github.com/neovim/neovim/issues/27686",
    "id": 2163303903,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27686/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6A8WXf",
    "number": 27686,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27686/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27686/timeline",
    "title": "A less black-boxy `vim.secure`",
    "updated_at": "2024-03-04T19:52:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27686",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
        "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
        "followers_url": "https://api.github.com/users/HiPhish/followers",
        "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
        "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/HiPhish",
        "id": 4954650,
        "login": "HiPhish",
        "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
        "organizations_url": "https://api.github.com/users/HiPhish/orgs",
        "received_events_url": "https://api.github.com/users/HiPhish/received_events",
        "repos_url": "https://api.github.com/users/HiPhish/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/HiPhish"
    }
}