{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "## Problem\r\n\r\nIf multiple LSP servers are attached to a buffer, when you trigger omni-completion there will be multiple `CompletionDone` events fired for each server. \r\n\r\n- Related: https://github.com/neovim/neovim/issues/17712\r\n- Found while debugging #13414. \r\n- This seems to be a similar issue to what @tjdevries fixed in #12655 \r\n\r\n## Expected behaviour\r\n\r\nWhen completion is finished, it should only fire CompletionDone once for all servers attached. \r\n",
    "closed_at": "2024-12-31T12:24:44Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Isn't this expected? vim.fn.complete is called once per server completion result in the callback function passed to the buf request, each of which should trigger `CompleteDone`\r\n\r\nhttps://github.com/mjlbach/neovim/blob/3d25a72a60323c9d6eab2daf9dbd4920b94b8a94/runtime/lua/vim/lsp.lua#L1233-L1239",
            "created_at": "2021-04-01T14:42:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/13766#issuecomment-811956164",
            "id": 811956164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13766",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTk1NjE2NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811956164/reactions"
            },
            "updated_at": "2021-04-01T14:42:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811956164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "yeah, it's to be expected with the current implementation. Though in other environments, this is not the case, like vscode. Requests are sent to the server and queued up before returning a response. So for N number of servers attached to a buffer, the requests will be made, a single table will be created with the results, and the call back will be called with a combined set of results. ",
            "created_at": "2021-04-01T14:56:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/13766#issuecomment-811965472",
            "id": 811965472,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13766",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTk2NTQ3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811965472/reactions"
            },
            "updated_at": "2021-04-01T14:56:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811965472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2835826?v=4",
                "events_url": "https://api.github.com/users/mhartington/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhartington/followers",
                "following_url": "https://api.github.com/users/mhartington/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhartington/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhartington",
                "id": 2835826,
                "login": "mhartington",
                "node_id": "MDQ6VXNlcjI4MzU4MjY=",
                "organizations_url": "https://api.github.com/users/mhartington/orgs",
                "received_events_url": "https://api.github.com/users/mhartington/received_events",
                "repos_url": "https://api.github.com/users/mhartington/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhartington/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhartington/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhartington",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Right, that's true, but the advantage of our current implementation is that vim.fn.complete is called as soon as the request returns, allowing async population of the return results. If we wait until each completion result returns, and then aggregate the results before populating the completion list, the bottleneck will be the slowest server. I'm not sure if complete_add triggers  CompleteDone, but one option would be to open the completion menu, and then call complete_add in the callback functions. The disadvantage being I'm not sure how slow complete_add is, because I believe it can only add a single completion result per call.",
            "created_at": "2021-04-01T15:10:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/13766#issuecomment-811974682",
            "id": 811974682,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13766",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTk3NDY4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811974682/reactions"
            },
            "updated_at": "2021-04-01T15:11:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/811974682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Instead of `CompleteDone`, should it not be `CompleteChanged`?\r\n```\r\nCompleteChanged \t\t\t\t\t*CompleteChanged*\r\n\t\t\t\tAfter each time the Insert mode completion\r\n\t\t\t\tmenu changed.  Not fired on popup menu hide,\r\n\t\t\t\tuse |CompleteDonePre| or |CompleteDone| for\r\n\t\t\t\tthat.\r\n```\r\n\r\nI agree with @mjlbach that async population of results is better. In my case (#14330), I work with a large project and tsserver can be a bit slow to provide code actions sometimes, but would still like to see the code actions from the other language server. I don't think this is clearly documented now though, because every LSP UI I've tried using, like lsp-saga, etc. assumes that there is only one handler call. Even the default `textDocument/codeAction` handler assumes that as it blocks for user input. I think it would help to clarify this so that users/plugin implementers know what to expect.",
            "created_at": "2021-04-13T02:01:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/13766#issuecomment-818375767",
            "id": 818375767,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13766",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODM3NTc2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818375767/reactions"
            },
            "updated_at": "2021-04-13T02:07:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818375767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/95201?v=4",
                "events_url": "https://api.github.com/users/MagicDuck/events{/privacy}",
                "followers_url": "https://api.github.com/users/MagicDuck/followers",
                "following_url": "https://api.github.com/users/MagicDuck/following{/other_user}",
                "gists_url": "https://api.github.com/users/MagicDuck/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MagicDuck",
                "id": 95201,
                "login": "MagicDuck",
                "node_id": "MDQ6VXNlcjk1MjAx",
                "organizations_url": "https://api.github.com/users/MagicDuck/orgs",
                "received_events_url": "https://api.github.com/users/MagicDuck/received_events",
                "repos_url": "https://api.github.com/users/MagicDuck/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MagicDuck/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MagicDuck/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MagicDuck",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think this was fixed with either https://github.com/neovim/neovim/commit/ff097f2091e7a970e5b12960683b4dade5563040 or https://github.com/neovim/neovim/commit/4c938f6d72710507db22074951eee23869ed49e0",
            "created_at": "2024-12-31T12:24:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/13766#issuecomment-2566406305",
            "id": 2566406305,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13766",
            "node_id": "IC_kwDOAPphoM6Y-ECh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566406305/reactions"
            },
            "updated_at": "2024-12-31T12:24:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2566406305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/13766/comments",
    "created_at": "2021-01-15T22:12:51Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/13766/events",
    "html_url": "https://github.com/neovim/neovim/issues/13766",
    "id": 787245881,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/13766/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3ODcyNDU4ODE=",
    "number": 13766,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/13766/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/13766/timeline",
    "title": "Duplicate \"CompletionDone\" events fired with multiple LSPs",
    "updated_at": "2024-12-31T12:24:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/13766",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2835826?v=4",
        "events_url": "https://api.github.com/users/mhartington/events{/privacy}",
        "followers_url": "https://api.github.com/users/mhartington/followers",
        "following_url": "https://api.github.com/users/mhartington/following{/other_user}",
        "gists_url": "https://api.github.com/users/mhartington/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mhartington",
        "id": 2835826,
        "login": "mhartington",
        "node_id": "MDQ6VXNlcjI4MzU4MjY=",
        "organizations_url": "https://api.github.com/users/mhartington/orgs",
        "received_events_url": "https://api.github.com/users/mhartington/received_events",
        "repos_url": "https://api.github.com/users/mhartington/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mhartington/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mhartington/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mhartington",
        "user_view_type": "public"
    }
}