{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nI closed my earlier issue #27150, since it seems the main problem was not as described there. I think I have narrowed down the issue further now.\r\n\r\nThe problem is that injected languages report a lot of false changes, when I make changes in the parent language (or even just when I scroll).\r\n\r\nTo reliably reproduce this, an easy way is to look at a large Lua file with a lot of LuaLS annotations. (I used https://github.com/HiPhish/rainbow-delimiters.nvim/blob/master/lua/rainbow-delimiters/strategy/global.lua, which you can save as `tmp2.lua` and try to edit scroll down to (via <C-d>) line 172 and edit some text under the `on_changedtree` line.\r\n\r\n### Steps to reproduce\r\n\r\nMake a file called `tmp.lua` with the following:\r\n```lua\r\n-- Install package manager\r\n--    https://github.com/folke/lazy.nvim\r\n--    `:help lazy.nvim.txt` for more info\r\nlocal lazypath = vim.fn.stdpath 'data' .. '/lazy/lazy.nvim'\r\nif not vim.loop.fs_stat(lazypath) then\r\n  vim.fn.system {\r\n    'git',\r\n    'clone',\r\n    '--filter=blob:none',\r\n    'https://github.com/folke/lazy.nvim.git',\r\n    '--branch=stable', -- latest stable release\r\n    lazypath,\r\n  }\r\nend\r\nvim.opt.rtp:prepend(lazypath)\r\n\r\nvim.opt.number = true\r\n\r\nrequire('lazy').setup({\r\n  {\r\n    -- Highlight, edit, and navigate code\r\n    'nvim-treesitter/nvim-treesitter',\r\n    build = ':TSUpdate',\r\n  },\r\n})\r\n\r\nrequire('nvim-treesitter.configs').setup {\r\n  -- Add languages to be installed here that you want installed for treesitter\r\n  ensure_installed = {\r\n    'lua',\r\n    'luadoc',\r\n  },\r\n}\r\n\r\n---@param parser LanguageTree\r\nlocal function print_helper(parser)\r\n\tparser:register_cbs({\r\n\t\ton_changedtree = function(changes, _tree)\r\n\t\t\tvim.print({parser:lang(), changes})\r\n\t\tend,\r\n\t\ton_child_added = function(child)\r\n\t\t\tprint_helper(child)\r\n\t\tend,\r\n\t})\r\nend\r\n\r\n---@param parser LanguageTree\r\n---@param thunk fun(p: LanguageTree)\r\nlocal function for_each_child(parser, thunk)\r\n\tthunk(parser)\r\n\tlocal children = parser:children()\r\n\tfor _, child in pairs(children) do\r\n\t\tfor_each_child(child, thunk)\r\n\tend\r\nend\r\n\r\nlocal buf_group = vim.api.nvim_create_augroup('MyBufEnter', { clear = true })\r\nvim.api.nvim_create_autocmd(\"BufEnter\", {\r\n  group = buf_group,\r\n  pattern = \"*\",\r\n  callback = function()\r\n\t\tlocal parser = vim.treesitter.get_parser()\r\n\t\tfor_each_child(parser, print_helper)\r\n  end\r\n})\r\n```\r\n\r\nThen do:\r\n`nvim --clean tmp.lua`\r\n`:so<CR>`\r\n`:e tmp2.lua` (or another similar file)\r\n\r\nScroll down via `<C-d>` a few times and write `:messages<CR>`. Note that we get:\r\n\r\n<img width=\"412\" alt=\"Screenshot 2024-01-23 at 17 22 15\" src=\"https://github.com/neovim/neovim/assets/7075380/8661c0eb-df61-434f-a00c-5602815d9deb\">\r\n\r\nTry to edit some text (without touching comment lines), and note that we get something like:\r\n\r\n<img width=\"409\" alt=\"Screenshot 2024-01-23 at 17 23 37\" src=\"https://github.com/neovim/neovim/assets/7075380/87b34c97-42f2-4178-931e-0e241e03fd41\">\r\n\r\n\r\n### Expected behavior\r\n\r\nDon't report changes in the injected language so often, when no changes are happening.\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.10.0 commit d994600\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nmacOS 14.2.1\r\n\r\n### Terminal name/version\r\n\r\nwezterm\r\n\r\n### $TERM environment variable\r\n\r\nwezterm\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": "2024-01-24T12:16:14Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Does the repo really require tree-sitter-context? (It certainly doesn't require nvim-treesitter.)",
            "created_at": "2024-01-23T16:28:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1906436364",
            "id": 1906436364,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xoekM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906436364/reactions"
            },
            "updated_at": "2024-01-23T16:28:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906436364",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Does the repo really require tree-sitter-context? (It certainly doesn't require nvim-treesitter.)\r\n\r\nNo, I thought that might be part of the problem earlier in my debugging, but it doesn't affect this. I have removed it.",
            "created_at": "2024-01-23T16:29:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1906439108",
            "id": 1906439108,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xofPE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906439108/reactions"
            },
            "updated_at": "2024-01-23T16:29:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906439108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I mean, as injections are now handled by whatever is shown on the screen, it makes sense that when an injection goes out of the viewport and new ones are added, the tree is now changed.",
            "created_at": "2024-01-23T16:56:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1906508039",
            "id": 1906508039,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xowEH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906508039/reactions"
            },
            "updated_at": "2024-01-23T16:56:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906508039",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I mean, as injections are now handled by whatever is shown on the screen, it makes sense that when an injection goes out of the viewport and new ones are added, the tree is now changed.\r\n\r\nI understand why the injections show up when I scroll then, but why do I see so many updates registered in the injections, when I am editing code in a code block not connected to the injections?",
            "created_at": "2024-01-23T18:00:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1906622360",
            "id": 1906622360,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xpL-Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906622360/reactions"
            },
            "updated_at": "2024-01-23T18:00:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1906622360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Atm each edit removes all injections.\r\n\r\nThis is really just an issue with the invalidation logic in the languagetree, which we are already aware of.",
            "created_at": "2024-01-24T11:05:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1907908302",
            "id": 1907908302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xuF7O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1907908302/reactions"
            },
            "updated_at": "2024-01-24T11:05:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1907908302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Atm each edit removes all injections.\r\n\r\nThat sounds like a lot of extra work for small code edits (especially since they can register multiple times while writing a short piece of code). Is this a problem with tree-sitter in neovim or more general?\r\n\r\n> This is really just an issue with the invalidation logic in the languagetree, which we are already aware of.\r\n\r\nGood to know, that you are aware of the issue. Should I close this as a duplicate of some other issue? Or is this the only neovim issue tracking this problem for now?",
            "created_at": "2024-01-24T11:27:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1907940117",
            "id": 1907940117,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xuNsV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1907940117/reactions"
            },
            "updated_at": "2024-01-24T11:27:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1907940117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That sounds like a lot of extra work for small code edits (especially since they can register multiple times while writing a short piece of code). Is this a problem with tree-sitter in neovim or more general?\r\n\r\nWith `runtime/lua/vim/treesitter/languagetree.lua`.\r\n\r\nEvery text edit will cause the buffer to be reparsed, and then injections will be applied for the visible line range. Every `luadoc` line is a separate injection.\r\n\r\nI suggest you use `LuaLS` semantic tokens over the `luadoc` parser.",
            "created_at": "2024-01-24T12:01:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1907989833",
            "id": 1907989833,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xuZ1J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1907989833/reactions"
            },
            "updated_at": "2024-01-24T12:01:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1907989833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Comment parsers are an antipattern (although I understand the argument for language-independent comment highlighting, this would really be better served by a -- treesitter-powered -- plugin that just applies regex-based highlights), especially since for languages without block comments, we need to inject in every comment line individually.\r\n\r\n(A similar argument applies to macro self-injections, which similarly tank performance -- although there the benefit is much larger and the alternatives fewer.)",
            "created_at": "2024-01-24T12:11:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1908005402",
            "id": 1908005402,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xudoa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908005402/reactions"
            },
            "updated_at": "2024-01-24T12:13:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908005402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> With `runtime/lua/vim/treesitter/languagetree.lua`.\r\n> \r\n> Every text edit will cause the buffer to be reparsed, and then injections will be applied for the visible line range. Every `luadoc` line is a separate injection.\r\n\r\nMakes sense, but this probably also affects other languages. E.g. rust uses macros pretty often, and they are handled as language injections (same for C/C++, though they might be a bit less common there). \r\n\r\n> I suggest you use `LuaLS` semantic tokens over the `luadoc` parser.\r\n\r\nI need the `luadoc` parser to have `rainbow-delimiters` work in the type annotations, so I will probably keep it on. This is not really a problem in normal use, it just caused a bit of confusion during some debugging I was doing on a highlighting problem. ",
            "created_at": "2024-01-24T12:11:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1908006488",
            "id": 1908006488,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xud5Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908006488/reactions"
            },
            "updated_at": "2024-01-24T12:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908006488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In any case, this is not a real issue (there's no \"false changes\", just eager re-parsings that possibly could be avoided), so I'm closing this issue. (The _real_ issue -- performance with many small injections -- is a more general \"treesitter performance issue\" that is already on our docket.)",
            "created_at": "2024-01-24T12:16:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1908012729",
            "id": 1908012729,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xufa5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908012729/reactions"
            },
            "updated_at": "2024-01-24T12:16:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908012729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> In any case, this is not a real issue (there's no \"false changes\", just eager re-parsings that possibly could be avoided), so I'm closing this issue. \r\n\r\nThat's fine with me. I just hope that we can get less eager re-parsing at some point.\r\n\r\n> (The _real_ issue -- performance with many small injections -- is a more general \"treesitter performance issue\" that is already on our docket.)\r\n\r\nIs there already an issue or pull request I can watch for changes on this? \r\n",
            "created_at": "2024-01-24T12:26:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1908027586",
            "id": 1908027586,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xujDC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908027586/reactions"
            },
            "updated_at": "2024-01-24T12:26:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908027586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That's fine with me. I just hope that we can get less eager re-parsing at some point.\r\n\r\nEveryone likes free performance...\r\n\r\n> Is there already an issue or pull request I can watch for changes on this?\r\n\r\nhttps://github.com/neovim/neovim/issues/22426",
            "created_at": "2024-01-24T12:29:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/27155#issuecomment-1908032254",
            "id": 1908032254,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27155",
            "node_id": "IC_kwDOAPphoM5xukL-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908032254/reactions"
            },
            "updated_at": "2024-01-24T12:29:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1908032254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27155/comments",
    "created_at": "2024-01-23T16:25:32Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27155/events",
    "html_url": "https://github.com/neovim/neovim/issues/27155",
    "id": 2096469588,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27155/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM589ZZU",
    "number": 27155,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27155/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27155/timeline",
    "title": "`LanguageTree:register_cbs { on_changedtree }` reports a lot of false changes for injected languages",
    "updated_at": "2024-01-24T12:29:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27155",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
        "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
        "followers_url": "https://api.github.com/users/Danielkonge/followers",
        "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
        "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Danielkonge",
        "id": 7075380,
        "login": "Danielkonge",
        "node_id": "MDQ6VXNlcjcwNzUzODA=",
        "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
        "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
        "repos_url": "https://api.github.com/users/Danielkonge/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Danielkonge"
    }
}