{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nThis was originally reported here causing a crash of Neovide due to the wrong window size being sent, but it turns out that Neovim itself crashes as well (a little bit later)\r\n* https://github.com/neovide/neovide/issues/2141\r\n\r\nNote I have debugged this a little bit and the width is -1 here\r\n<details><summary>callstack</summary>\r\n\r\n```\r\nwin_new_width(win_T * wp, int width) (/home/fredizzimo/proj/neovim/src/nvim/window.c:6703)\r\nframe_new_width(frame_T * topfrp, int width, _Bool leftfirst, _Bool wfw) (/home/fredizzimo/proj/neovim/src/nvim/window.c:3664)\r\nwin_equal_rec(win_T * next_curwin, _Bool current, frame_T * topfr, int dir, int col, int row, int width, int height) (/home/fredizzimo/proj/neovim/src/nvim/window.c:2205)\r\nwin_equal_rec(win_T * next_curwin, _Bool current, frame_T * topfr, int dir, int col, int row, int width, int height) (/home/fredizzimo/proj/neovim/src/nvim/window.c:2325)\r\nwin_equal(win_T * next_curwin, _Bool current, int dir) (/home/fredizzimo/proj/neovim/src/nvim/window.c:2166)\r\ndo_window(int nchar, long Prenum, int xchar) (/home/fredizzimo/proj/neovim/src/nvim/window.c:437)\r\nex_wincmd(exarg_T * eap) (/home/fredizzimo/proj/neovim/src/nvim/ex_docmd.c:5750)\r\nexecute_cmd0(int * retv, exarg_T * eap, char ** errormsg, _Bool preview) (/home/fredizzimo/proj/neovim/src/nvim/ex_docmd.c:1620)\r\ndo_one_cmd(char ** cmdlinep, int flags, cstack_T * cstack, LineGetter fgetline, void * cookie) (/home/fredizzimo/proj/neovim/src/nvim/ex_docmd.c:2279)\r\ndo_cmdline(char * cmdline, LineGetter fgetline, void * cookie, int flags) (/home/fredizzimo/proj/neovim/src/nvim/ex_docmd.c:578)\r\nex_listdo(exarg_T * eap) (/home/fredizzimo/proj/neovim/src/nvim/ex_cmds2.c:590)\r\nexecute_cmd0(int * retv, exarg_T * eap, char ** errormsg, _Bool preview) (/home/fredizzimo/proj/neovim/src/nvim/ex_docmd.c:1620)\r\ndo_one_cmd(char ** cmdlinep, int flags, cstack_T * cstack, LineGetter fgetline, void * cookie) (/home/fredizzimo/proj/neovim/src/nvim/ex_docmd.c:2279)\r\ndo_cmdline(char * cmdline, LineGetter fgetline, void * cookie, int flags) (/home/fredizzimo/proj/neovim/src/nvim/ex_docmd.c:578)\r\nsource_using_linegetter(void * cookie, LineGetter fgetline, const char * traceback_name) (/home/fredizzimo/proj/neovim/src/nvim/runtime.c:1906)\r\n```\r\n</details> \n\n### Steps to reproduce\n\nCreate the a file called `neotreecrash.lua` with the following contents\r\n```lua\r\nfor name, url in pairs{\r\n    neotree = 'https://github.com/nvim-neo-tree/neo-tree.nvim',\r\n    plenary = \"https://github.com/nvim-lua/plenary.nvim\",\r\n    webicons = \"https://github.com/nvim-tree/nvim-web-devicons\", -- not strictly required, but recommended\r\n    nui = \"https://github.com/MunifTanjim/nui.nvim\",\r\n} do\r\n  local install_path = vim.fn.fnamemodify(\"nvim_issue/\"..name, \":p\")\r\n  if vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { \"git\", \"clone\", \"--depth=1\", url, install_path }\r\n  end\r\n  vim.opt.runtimepath:append(install_path)\r\nend\r\n\r\nlocal function augroup(name)\r\n  return vim.api.nvim_create_augroup(\"lazyvim_\" .. name, { clear = true })\r\nend\r\n\r\nvim.api.nvim_create_autocmd({ \"VimResized\" }, {\r\n  group = augroup(\"resize_splits\"),\r\n  callback = function()\r\n    local current_tab = vim.fn.tabpagenr()\r\n    vim.cmd(\"tabdo wincmd =\")\r\n    vim.cmd(\"tabnext \" .. current_tab)\r\n  end,\r\n})\r\n\r\nvim.o.winminwidth=3\r\nvim.o.winwidth=10\r\n\r\nvim.api.nvim_create_autocmd({ \"VimEnter\" }, {\r\n    group = augroup(\"enter\"),\r\n    callback = function()\r\n    vim.cmd(\"Neotree\")\r\n    local timer = vim.loop.new_timer()\r\n    timer:start(1000, 0, vim.schedule_wrap(function()\r\n        -- Does not crash\r\n        -- vim.o.columns=vim.o.winminwidth + vim.o.winwidth + 1\r\n        -- This and a smaller value crashes\r\n        vim.o.columns=vim.o.winminwidth + vim.o.winwidth\r\n    end))\r\n    end,\r\n})\r\n```\r\n\r\nThen run `nvim --clean -u neotreecrash.lua` and notice that neovim crashes\n\n### Expected behavior\n\nIt should not crash, and not report invalid window sizes or cursor positions to UIs (it does all of that currently).\n\n### Neovim version (nvim -v)\n\n0.9.4\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nAlacritty/Neovide\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\npacman",
    "closed_at": "2023-11-23T21:59:07Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't know what Neotree does here that triggers this, since I can't reproduce it with just regular splits. But in any case it should not be possible for a plugin to crash Neovim like this.",
            "created_at": "2023-11-22T16:30:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1823097744",
            "id": 1823097744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5sqkOQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1823097744/reactions"
            },
            "updated_at": "2023-11-22T16:30:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1823097744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Already fixed by #23612",
            "created_at": "2023-11-23T07:52:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1823935852",
            "id": 1823935852,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5stw1s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1823935852/reactions"
            },
            "updated_at": "2023-11-23T07:52:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1823935852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "On main it crashes with what appears to be a memory corruption. In debug mode\r\n```\r\nlibc.so.6![Unknown/Just-In-Time compiled code] (Unknown Source:0)\r\nlibc.so.6!raise (Unknown Source:0)\r\nlibc.so.6!abort (Unknown Source:0)\r\nlibc.so.6![Unknown/Just-In-Time compiled code] (Unknown Source:0)\r\nlibc.so.6!malloc (Unknown Source:0)\r\nlibc.so.6!_IO_file_doallocate (Unknown Source:0)\r\nlibc.so.6!_IO_doallocbuf (Unknown Source:0)\r\nlibc.so.6!_IO_file_overflow (Unknown Source:0)\r\nlibc.so.6!_IO_file_xsputn (Unknown Source:0)\r\nlibc.so.6![Unknown/Just-In-Time compiled code] (Unknown Source:0)\r\nlibc.so.6!fprintf (Unknown Source:0)\r\nv_do_log_to_file(FILE * log_file, int log_level, const char * context, const char * func_name, int line_num, _Bool eol, const char * fmt, struct __va_list_tag * args) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\log.c:345)\r\nlogmsg(int log_level, const char * context, const char * func_name, int line_num, _Bool eol, const char * fmt) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\log.c:181)\r\ninbuf_poll(int ms, MultiQueue * events) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\os\\input.c:453)\r\nos_inchar(uint8_t * buf, int maxlen, int ms, int tb_change_cnt, MultiQueue * events) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\os\\input.c:124)\r\ninchar(uint8_t * buf, int maxlen, long wait_time) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\getchar.c:2862)\r\nvgetorpeek(_Bool advance) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\getchar.c:2696)\r\nvpeekc() (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\getchar.c:1673)\r\nstate_enter(VimState * s) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\state.c:56)\r\nnormal_enter(_Bool cmdwin, _Bool noexmode) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\normal.c:508)\r\nmain(int argc, char ** argv) (\\home\\fredizzimo\\proj\\neovim\\src\\nvim\\main.c:630)\r\n```",
            "created_at": "2023-11-23T08:48:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1824007376",
            "id": 1824007376,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5suCTQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824007376/reactions"
            },
            "updated_at": "2023-11-23T08:48:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824007376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not relevant",
            "created_at": "2023-11-23T08:53:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1824013348",
            "id": 1824013348,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5suDwk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824013348/reactions"
            },
            "updated_at": "2023-11-23T08:53:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824013348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "But it happens with the exact same steps, when setting the columns too small. The crash is just different.\r\n\r\nFurthermore, in release mode it does not seem to corrupt the memory but it still sends `grid_cursor_goto` with a cursor column of `-1` which crashes Neovide. \r\n\r\nThese two combined is the reason why I did not notice it was \"fixed\" in the latest master version, since it really isn't.\r\n\r\nThe patch seems to have fixed the release/0.9 branch though, but the master is still broken.",
            "created_at": "2023-11-23T09:11:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1824035628",
            "id": 1824035628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5suJMs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824035628/reactions"
            },
            "updated_at": "2023-11-23T09:11:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824035628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's the valgrind log for the memory corruption\r\n<details>\r\n\r\n```\r\n==2097511== Memcheck, a memory error detector\r\n==2097511== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.\r\n==2097511== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info\r\n==2097511== Command: /home/fredizzimo/proj/neovim/build/installed/bin/nvim --embed -p --clean -u neotreecrash.lua\r\n==2097511== Parent PID: 2097090\r\n==2097511==\r\n--2097511-- WARNING: unhandled amd64-linux syscall: 441\r\n--2097511-- You may be able to write your own handler.\r\n--2097511-- Read the file README_MISSING_SYSCALL_OR_IOCTL.\r\n--2097511-- Nevertheless we consider this a bug.  Please report\r\n--2097511-- it at http://valgrind.org/support/bug_reports.html.\r\n==2097511== Invalid read of size 4\r\n==2097511==    at 0x31C0F5: grid_put_linebuf (grid.c:756)\r\n==2097511==    by 0x31B5B5: grid_line_flush (grid.c:503)\r\n==2097511==    by 0x48C8AC: win_redr_status (statusline.c:168)\r\n==2097511==    by 0x259F2F: update_screen (drawscreen.c:651)\r\n==2097511==    by 0x3B0B9D: normal_redraw (normal.c:1347)\r\n==2097511==    by 0x3B0E05: normal_check (normal.c:1443)\r\n==2097511==    by 0x48B8B7: state_enter (state.c:35)\r\n==2097511==    by 0x3AEA38: normal_enter (normal.c:508)\r\n==2097511==    by 0x19CA51: main (main.c:630)\r\n==2097511==  Address 0x66767c0 is 0 bytes after a block of size 2,352 alloc'd\r\n==2097511==    at 0x4841848: malloc (vg_replace_malloc.c:431)\r\n==2097511==    by 0x38CFDE: try_malloc (memory.c:87)\r\n==2097511==    by 0x38D055: xmalloc (memory.c:121)\r\n==2097511==    by 0x31C3AD: grid_alloc (grid.c:806)\r\n==2097511==    by 0x25903E: default_grid_alloc (drawscreen.c:194)\r\n==2097511==    by 0x259415: screen_resize (drawscreen.c:300)\r\n==2097511==    by 0x3D4881: check_num_option_bounds (option.c:2815)\r\n==2097511==    by 0x3D6B7D: did_set_option (option.c:3616)\r\n==2097511==    by 0x3D75DC: set_option (option.c:3794)\r\n==2097511==    by 0x3D187C: do_one_set_option (option.c:1408)\r\n==2097511==    by 0x3D1A41: do_set (option.c:1457)\r\n==2097511==    by 0x3CFB03: ex_set (option.c:750)\r\n==2097511==\r\n==2097511== Invalid write of size 4\r\n==2097511==    at 0x31C136: grid_put_linebuf (grid.c:759)\r\n==2097511==    by 0x31B5B5: grid_line_flush (grid.c:503)\r\n==2097511==    by 0x48C8AC: win_redr_status (statusline.c:168)\r\n==2097511==    by 0x259F2F: update_screen (drawscreen.c:651)\r\n==2097511==    by 0x3B0B9D: normal_redraw (normal.c:1347)\r\n==2097511==    by 0x3B0E05: normal_check (normal.c:1443)\r\n==2097511==    by 0x48B8B7: state_enter (state.c:35)\r\n==2097511==    by 0x3AEA38: normal_enter (normal.c:508)\r\n==2097511==    by 0x19CA51: main (main.c:630)\r\n==2097511==  Address 0x66767c0 is 0 bytes after a block of size 2,352 alloc'd\r\n==2097511==    at 0x4841848: malloc (vg_replace_malloc.c:431)\r\n==2097511==    by 0x38CFDE: try_malloc (memory.c:87)\r\n==2097511==    by 0x38D055: xmalloc (memory.c:121)\r\n==2097511==    by 0x31C3AD: grid_alloc (grid.c:806)\r\n==2097511==    by 0x25903E: default_grid_alloc (drawscreen.c:194)\r\n==2097511==    by 0x259415: screen_resize (drawscreen.c:300)\r\n==2097511==    by 0x3D4881: check_num_option_bounds (option.c:2815)\r\n==2097511==    by 0x3D6B7D: did_set_option (option.c:3616)\r\n==2097511==    by 0x3D75DC: set_option (option.c:3794)\r\n==2097511==    by 0x3D187C: do_one_set_option (option.c:1408)\r\n==2097511==    by 0x3D1A41: do_set (option.c:1457)\r\n==2097511==    by 0x3CFB03: ex_set (option.c:750)\r\n==2097511==\r\n==2097511== Invalid write of size 4\r\n==2097511==    at 0x31C152: grid_put_linebuf (grid.c:760)\r\n==2097511==    by 0x31B5B5: grid_line_flush (grid.c:503)\r\n==2097511==    by 0x48C8AC: win_redr_status (statusline.c:168)\r\n==2097511==    by 0x259F2F: update_screen (drawscreen.c:651)\r\n==2097511==    by 0x3B0B9D: normal_redraw (normal.c:1347)\r\n==2097511==    by 0x3B0E05: normal_check (normal.c:1443)\r\n==2097511==    by 0x48B8B7: state_enter (state.c:35)\r\n==2097511==    by 0x3AEA38: normal_enter (normal.c:508)\r\n==2097511==    by 0x19CA51: main (main.c:630)\r\n==2097511==  Address 0x6678090 is 0 bytes after a block of size 2,352 alloc'd\r\n==2097511==    at 0x4841848: malloc (vg_replace_malloc.c:431)\r\n==2097511==    by 0x38CFDE: try_malloc (memory.c:87)\r\n==2097511==    by 0x38D055: xmalloc (memory.c:121)\r\n==2097511==    by 0x31C3C7: grid_alloc (grid.c:807)\r\n==2097511==    by 0x25903E: default_grid_alloc (drawscreen.c:194)\r\n==2097511==    by 0x259415: screen_resize (drawscreen.c:300)\r\n==2097511==    by 0x3D4881: check_num_option_bounds (option.c:2815)\r\n==2097511==    by 0x3D6B7D: did_set_option (option.c:3616)\r\n==2097511==    by 0x3D75DC: set_option (option.c:3794)\r\n==2097511==    by 0x3D187C: do_one_set_option (option.c:1408)\r\n==2097511==    by 0x3D1A41: do_set (option.c:1457)\r\n==2097511==    by 0x3CFB03: ex_set (option.c:750)\r\n==2097511==\r\n==2097511== Invalid write of size 4\r\n==2097511==    at 0x31C190: grid_put_linebuf (grid.c:769)\r\n==2097511==    by 0x31B5B5: grid_line_flush (grid.c:503)\r\n==2097511==    by 0x48C8AC: win_redr_status (statusline.c:168)\r\n==2097511==    by 0x259F2F: update_screen (drawscreen.c:651)\r\n==2097511==    by 0x3B0B9D: normal_redraw (normal.c:1347)\r\n==2097511==    by 0x3B0E05: normal_check (normal.c:1443)\r\n==2097511==    by 0x48B8B7: state_enter (state.c:35)\r\n==2097511==    by 0x3AEA38: normal_enter (normal.c:508)\r\n==2097511==    by 0x19CA51: main (main.c:630)\r\n==2097511==  Address 0x6679960 is 0 bytes after a block of size 2,352 alloc'd\r\n==2097511==    at 0x4841848: malloc (vg_replace_malloc.c:431)\r\n==2097511==    by 0x38CFDE: try_malloc (memory.c:87)\r\n==2097511==    by 0x38D055: xmalloc (memory.c:121)\r\n==2097511==    by 0x31C3DE: grid_alloc (grid.c:808)\r\n==2097511==    by 0x25903E: default_grid_alloc (drawscreen.c:194)\r\n==2097511==    by 0x259415: screen_resize (drawscreen.c:300)\r\n==2097511==    by 0x3D4881: check_num_option_bounds (option.c:2815)\r\n==2097511==    by 0x3D6B7D: did_set_option (option.c:3616)\r\n==2097511==    by 0x3D75DC: set_option (option.c:3794)\r\n==2097511==    by 0x3D187C: do_one_set_option (option.c:1408)\r\n==2097511==    by 0x3D1A41: do_set (option.c:1457)\r\n==2097511==    by 0x3CFB03: ex_set (option.c:750)\r\n==2097511==\r\n\r\nvalgrind: m_mallocfree.c:304 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.\r\nvalgrind: Heap block lo/hi size mismatch: lo = 2416, hi = 137438953504.\r\nThis is probably caused by your program erroneously writing past the\r\nend of a heap block and corrupting heap metadata.  If you fix any\r\ninvalid writes reported by Memcheck, this assertion failure will\r\nprobably go away.  Please try that before reporting this as a bug.\r\n\r\n\r\nhost stacktrace:\r\n==2097511==    at 0x58042C9A: show_sched_status_wrk (m_libcassert.c:406)\r\n==2097511==    by 0x58042DC7: report_and_quit (m_libcassert.c:477)\r\n==2097511==    by 0x58042F6B: vgPlain_assert_fail (m_libcassert.c:543)\r\n==2097511==    by 0x5804CCD8: get_bszB_as_is (m_mallocfree.c:304)\r\n==2097511==    by 0x5804CCD8: is_inuse_block (m_mallocfree.c:332)\r\n==2097511==    by 0x5804CCD8: vgPlain_describe_arena_addr (m_mallocfree.c:1614)\r\n==2097511==    by 0x5803B24A: vgPlain_describe_addr (m_addrinfo.c:185)\r\n==2097511==    by 0x5803996E: vgMemCheck_update_Error_extra (mc_errors.c:1224)\r\n==2097511==    by 0x5803E2B5: vgPlain_maybe_record_error (m_errormgr.c:822)\r\n==2097511==    by 0x58038B58: vgMemCheck_record_address_error (mc_errors.c:795)\r\n==2097511==    by 0x5800F508: mc_LOADVn_slow (mc_main.c:1562)\r\n==2097511==    by 0x1005AA8E0C: ???\r\n==2097511==    by 0x1003D9CF1F: ???\r\n\r\nsched status:\r\n  running_tid=1\r\n\r\nThread 1: status = VgTs_Runnable (lwpid 2097511)\r\n==2097511==    at 0x31BC96: grid_put_linebuf (grid.c:662)\r\n==2097511==    by 0x31B5B5: grid_line_flush (grid.c:503)\r\n==2097511==    by 0x48C982: win_redr_status (statusline.c:181)\r\n==2097511==    by 0x259F2F: update_screen (drawscreen.c:651)\r\n==2097511==    by 0x3B0B9D: normal_redraw (normal.c:1347)\r\n==2097511==    by 0x3B0E05: normal_check (normal.c:1443)\r\n==2097511==    by 0x48B8B7: state_enter (state.c:35)\r\n==2097511==    by 0x3AEA38: normal_enter (normal.c:508)\r\n==2097511==    by 0x19CA51: main (main.c:630)\r\nclient stack range: [0x1FFEFF6000 0x1FFF000FFF] client SP: 0x1FFEFFF1E0\r\nvalgrind stack range: [0x1003C9D000 0x1003D9CFFF] top usage: 10000 of 1048576\r\n\r\n\r\nNote: see also the FAQ in the source distribution.\r\nIt contains workarounds to several common problems.\r\nIn particular, if Valgrind aborted or crashed after\r\nidentifying problems in your program, there's a good chance\r\nthat fixing those problems will prevent Valgrind aborting or\r\ncrashing, especially if it happened in m_mallocfree.c.\r\n\r\nIf that doesn't help, please report this bug to: www.valgrind.org\r\n\r\nIn the bug report, send all the above text, the valgrind\r\nversion, and what OS and version you are using.  Thanks.\r\n```\r\n\r\n</details>\r\n\r\nIt definitely looks like it's related to using an invalid grid size",
            "created_at": "2023-11-23T11:41:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1824280025",
            "id": 1824280025,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5svE3Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824280025/reactions"
            },
            "updated_at": "2023-11-23T11:41:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824280025",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What is the size of the Neovide window?",
            "created_at": "2023-11-23T11:46:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1824286293",
            "id": 1824286293,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5svGZV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824286293/reactions"
            },
            "updated_at": "2023-11-23T11:46:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824286293",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It depends, there's no set size, but it needs to be bigger than `winminwidth + winwidth` at the start, and then it's crashing when resized using columns to something equal or less than that.",
            "created_at": "2023-11-23T11:49:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1824290270",
            "id": 1824290270,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5svHXe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824290270/reactions"
            },
            "updated_at": "2023-11-23T11:49:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824290270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "GDB backtrace:\r\n```\r\n#0  0x00007ffff7d0d83c in ?? () from /usr/lib/libc.so.6\r\n#1  0x00007ffff7cbd668 in raise () from /usr/lib/libc.so.6\r\n#2  0x00007ffff7ca54b8 in abort () from /usr/lib/libc.so.6\r\n#3  0x0000555556237091 in __sanitizer::Abort() ()\r\n#4  0x0000555556234832 in __sanitizer::Die() ()\r\n#5  0x0000555556215fc0 in __asan::ScopedInErrorReport::~ScopedInErrorReport() ()\r\n#6  0x000055555621574a in __asan::ReportGenericError(unsigned long, unsigned long, unsigned long, unsigned long, bool, unsigned long, unsigned int, bool) [clone .part.0] ()\r\n#7  0x000055555621694d in __asan_report_load4 ()\r\n#8  0x0000555556d013fe in grid_put_linebuf (grid=0x555557fc0980 <default_grid>, row=25, coloff=0, col=26, endcol=13, clear_width=40, rl=false, bg_attr=0, wrap=false) at **/src/nvim/grid.c:756\r\n#9  0x0000555556cfdebe in grid_line_flush () at **/src/nvim/grid.c:503\r\n#10 0x000055555777c2b8 in win_redr_status (wp=0x62600000c100) at **/src/nvim/statusline.c:168\r\n#11 0x0000555556789c41 in update_screen () at **/src/nvim/drawscreen.c:651\r\n#12 0x0000555556783e31 in screen_resize (width=13, height=27) at **/src/nvim/drawscreen.c:373\r\n#13 0x00005555572e68c1 in check_num_option_bounds (pp=0x5555591024a0 <p_columns>, old_value=101, errbuf=0x555559115120 <set_option_value[errbuf]> \"\", errbuflen=1025, errmsg=0x0) at **/src/nvim/option.c:2815\r\n#14 0x00005555572e401e in did_set_option (opt_idx=42, varp=0x5555591024a0 <p_columns>, old_value=..., new_value=..., opt_flags=0, value_checked=0x7ffff6336060, value_replaced=true, errbuf=0x555559115120 <set_option_value[errbuf]> \"\", errbuflen=1025) at **/src/nvim/option.c:3616\r\n#15 0x000055555728d33f in set_option (opt_idx=42, varp=0x5555591024a0 <p_columns>, value=..., opt_flags=0, value_replaced=true, errbuf=0x555559115120 <set_option_value[errbuf]> \"\", errbuflen=1025) at **/src/nvim/option.c:3794\r\n#16 0x000055555728b812 in set_option_value (name=0x6020000790b0 \"columns\", value=..., opt_flags=0) at **/src/nvim/option.c:3862\r\n#17 0x00005555563610b6 in set_option_value_for (name=0x6020000790b0 \"columns\", value=..., opt_flags=0, req_scope=kOptReqGlobal, from=0x0, err=0x7ffff6133020) at **/src/nvim/api/options.c:568\r\n#18 0x0000555556360399 in nvim_set_option_value (channel_id=9223372036854775809, name=..., value=..., opts=0x7ffff6133060, err=0x7ffff6133020) at **/src/nvim/api/options.c:253\r\n#19 0x00005555562995f8 in nlua_api_nvim_set_option_value (lstate=0x7ffff7896380) at **/build/src/nvim/auto/lua_api_c_bindings.generated.c:3107\r\n#20 0x0000555557cd2216 in lj_BC_FUNCC ()\r\n#21 0x0000555557cbc0ca in lua_pcall (L=0x1722, nargs=<optimized out>, nresults=<optimized out>, errfunc=<optimized out>) at lj_api.c:1150\r\n#22 0x0000555556e4b97e in nlua_pcall (lstate=0x7ffff7896380, nargs=0, nresults=0) at **/src/nvim/lua/executor.c:162\r\n#23 0x0000555556e5f853 in nlua_schedule_event (argv=0x7ffff608e528) at **/src/nvim/lua/executor.c:358\r\n#24 0x0000555557775c9a in state_handle_k_event () at **/src/nvim/state.c:114\r\n#25 0x00005555571a54da in nv_event (cap=0x7ffff6195090) at **/src/nvim/normal.c:6605\r\n#26 0x000055555716a156 in normal_execute (state=0x7ffff6195020, key=-26365) at **/src/nvim/normal.c:1219\r\n#27 0x0000555557775a52 in state_enter (s=0x7ffff6195020) at **/src/nvim/state.c:96\r\n#28 0x000055555714d0c9 in normal_enter (cmdwin=false, noexmode=false) at **/src/nvim/normal.c:508\r\n#29 0x0000555556257f59 in main (argc=7, argv=0x7fffffffe028) at **/src/nvim/main.c:630\r\n```",
            "created_at": "2023-11-23T13:11:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/26155#issuecomment-1824417260",
            "id": 1824417260,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26155",
            "node_id": "IC_kwDOAPphoM5svmXs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824417260/reactions"
            },
            "updated_at": "2023-11-23T13:11:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824417260",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 9,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26155/comments",
    "created_at": "2023-11-22T16:27:47Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26155/events",
    "html_url": "https://github.com/neovim/neovim/issues/26155",
    "id": 2006707148,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "tabline, winbar, statuscolumn",
            "id": 3385615828,
            "name": "statusline",
            "node_id": "LA_kwDOAPphoM7JzGXU",
            "url": "https://api.github.com/repos/neovim/neovim/labels/statusline"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26155/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM53m-vM",
    "number": 26155,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26155/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26155/timeline",
    "title": "Neovim crashes when resizing using neo-tree and using an autocommand to make the all windows equal",
    "updated_at": "2023-11-23T21:59:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26155",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo"
    }
}