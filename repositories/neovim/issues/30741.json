{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nThis is about a implementing a compatibility layer to provide `vim`'s `popup` API.\n\nWithout the option to consume the keys, `vim.on_key()` is not suitable for implementing a `popup`'s  `filter`.\n\nWith `vim.on_key()` there's also\n```\n{key} is the key after mappings have been applied, and {typed} is the\nkey(s) before mappings are applied\n```\nWhich also interferes with correct operation of `popup`'s  `filter`, since it may need to see each key as it's entered, not multiple keys.  This is likely related to the following.\n\nThere's a `popup` option `mapping` \n```\nIf the filter consumes all the keys, set the \"mapping\" property to zero\nso that mappings do not get in the way\n```\nIn the `vim` code, in `vgetc()` there's a check for `popup_no_mapping` which is missing in the following `neovim` code\n```\n  if (mod_mask) {           // no mapping after modifier has been read\n    no_mapping++;\n```\n(But my analysis could be flawed, since `no_mapping` can be set in various ways)\n\n-----\n\nThis is related to #30504 and #30542.\n\n\n### Expected behavior\n\nSome things that comes to mind around `vim.on_key()`. Change the signature to\n```\non_key(fn: function?, ns_id: integer? [, {options}]): bool?\n```\n\n1. Use the return value to indicate if the key should be discarded and/or has been handled\n2. Add `allow_mapping` option to `vim.on_key()`, default `true`\n   For when the `mapping` property on the `popup` is active.\n3. Add `enable_return_value_controls_discard` option to `vim.on_key()`\n   Only needed if there's compatibility concerns around (1)?\n   Could also be useful to insure that `on_key` callbacks that do not have this set are invoked first.\n\nThere's some weirdness possible since, in `vgetc()`, the mappings are done before the callback is executed. So, depending on implementation, when `allow_mapping` is `false` then other uses of `vim.on_key()` might see different arguments than they would otherwise have seen.\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Is using `getchar()` or `getcharstr()` in a loop not feasible for this specific case?",
            "created_at": "2024-10-09T22:45:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/30741#issuecomment-2403553453",
            "id": 2403553453,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30741",
            "node_id": "IC_kwDOAPphoM6PQ1Ct",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403553453/reactions"
            },
            "updated_at": "2024-10-09T22:52:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403553453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Is using `getchar()` or `getcharstr()` not feasible for this specific case?\n\nWhen I first looked at this, `getchar()` seemed a poor fit. Could either hang waiting for a char (not sure where it hangs and what would be prevented). Could have a timer loop checking for an available character, then get it when available.\n\nBut after getting the character, is the idea to use `feedkeys()` to put it back if it is not one you want? Wouldn't this potentially re-order the keys?\n\n`getchar` feels very messy.\n\nThere's also the question of preventing mapping.",
            "created_at": "2024-10-09T23:00:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/30741#issuecomment-2403570603",
            "id": 2403570603,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30741",
            "node_id": "IC_kwDOAPphoM6PQ5Or",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403570603/reactions"
            },
            "updated_at": "2024-10-09T23:02:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403570603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm, `feedkeys()` does have an `'i'` option, which might avoid re-ordering. Will `getchar()` pick this up for a get/put loop? ",
            "created_at": "2024-10-09T23:06:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/30741#issuecomment-2403581430",
            "id": 2403581430,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30741",
            "node_id": "IC_kwDOAPphoM6PQ732",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403581430/reactions"
            },
            "updated_at": "2024-10-09T23:06:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403581430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Right, `getchar()` won't work.",
            "created_at": "2024-10-09T23:47:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/30741#issuecomment-2403630365",
            "id": 2403630365,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30741",
            "node_id": "IC_kwDOAPphoM6PRH0d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403630365/reactions"
            },
            "updated_at": "2024-10-09T23:47:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2403630365",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Part of the work to implement \"multicursor\" support will be to \"atomize\" input so that its structure is exposed. That seems like a requirement for this, otherwise you end up re-implementing a mapping parser in `on_key` (which doesn't know if a key will resolve to a mapping / builtin normal command)?",
            "created_at": "2024-10-10T11:43:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/30741#issuecomment-2404867582",
            "id": 2404867582,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30741",
            "node_id": "IC_kwDOAPphoM6PV13-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2404867582/reactions"
            },
            "updated_at": "2024-10-10T11:43:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2404867582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, OP just wants:\n1. A way for `vim.on_key()` to consume a key\n2. A way temporarily disable all mappings",
            "created_at": "2024-10-10T12:39:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/30741#issuecomment-2404979918",
            "id": 2404979918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30741",
            "node_id": "IC_kwDOAPphoM6PWRTO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2404979918/reactions"
            },
            "updated_at": "2024-10-10T12:40:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2404979918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@zeertzjq This might not be directly related to multicursor but it contains relevant info. So please leave that label.",
            "created_at": "2024-10-13T20:05:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/30741#issuecomment-2409107573",
            "id": 2409107573,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30741",
            "node_id": "IC_kwDOAPphoM6PmBB1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2409107573/reactions"
            },
            "updated_at": "2024-10-13T20:05:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2409107573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30741/comments",
    "created_at": "2024-10-09T22:41:20Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30741/events",
    "html_url": "https://github.com/neovim/neovim/issues/30741",
    "id": 2577095796,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 396626349,
            "name": "input",
            "node_id": "MDU6TGFiZWwzOTY2MjYzNDk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/input"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1471818957,
            "name": "multicursor",
            "node_id": "MDU6TGFiZWwxNDcxODE4OTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/multicursor"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "key bindings",
            "id": 3304938718,
            "name": "mappings",
            "node_id": "MDU6TGFiZWwzMzA0OTM4NzE4",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mappings"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30741/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 246,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 267,
        "state": "open",
        "title": "needs-owner",
        "updated_at": "2024-10-14T19:27:30Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM6Zm1x0",
    "number": 30741,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30741/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30741/timeline",
    "title": "vim.on_key() can consume the key and prevent mapping",
    "updated_at": "2024-10-13T20:05:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30741",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
        "events_url": "https://api.github.com/users/errael/events{/privacy}",
        "followers_url": "https://api.github.com/users/errael/followers",
        "following_url": "https://api.github.com/users/errael/following{/other_user}",
        "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/errael",
        "id": 20450427,
        "login": "errael",
        "node_id": "MDQ6VXNlcjIwNDUwNDI3",
        "organizations_url": "https://api.github.com/users/errael/orgs",
        "received_events_url": "https://api.github.com/users/errael/received_events",
        "repos_url": "https://api.github.com/users/errael/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/errael"
    }
}