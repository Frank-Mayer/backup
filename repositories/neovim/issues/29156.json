{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nThe following warning is emitted when calling `vim.lsp.codelens.run`:\r\n\r\n> method textDocument/codeLens is not supported by any of the servers registered for the current buffer\r\n\r\nNeovim 0.10 changed the behavior of `vim.lsp.codelens.refresh` to refresh all buffers by default in https://github.com/neovim/neovim/pull/27253. The warning is written when an LSP client that does not support code lenses is attached to a different buffer at the time the code lens executes.\r\n\r\nThe source appears to be a call to `vim.lsp.codelens.refresh` out of the [`execute_lens` handler](https://github.com/neovim/neovim/blob/27fb62988e922c2739035f477f93cc052a4fee1e/runtime/lua/vim/lsp/codelens.lua#L53). Prior to 0.10, this would only refresh lenses for the current buffer but now it attempts to refresh lenses for all buffers.\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\n1. Open a file and attach an LSP that does not support code lenses (e.g. dockerls)\r\n2. Open a different file in another buffer and attach an LSP that does support code lenses\r\n3. Execute a code lens in the second buffer\r\n4. Observe that a warning is written\n\n### Expected behavior\n\nRunning a code lens should not result in warnings associated with unrelated clients that are not attached to the current buffer.\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0\n\n### Language server name/version\n\ngopls v0.15.3 and dockerls v0.12.0\n\n### Operating system/version\n\nmacOS Sonoma and Ubuntu Linux 22.04\n\n### Log file\n\nhttps://gist.github.com/sykesm/55a67323b8af9bea59d61ee7d9a0d7fe",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Im not at my computer, but doesn't the refresh function now let you pass in the buffer number? Would adding that fix the issue?",
            "created_at": "2024-06-04T03:56:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/29156#issuecomment-2146537822",
            "id": 2146537822,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29156",
            "node_id": "IC_kwDOAPphoM5_8ZFe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146537822/reactions"
            },
            "updated_at": "2024-06-04T03:56:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146537822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51029315?v=4",
                "events_url": "https://api.github.com/users/crwebb85/events{/privacy}",
                "followers_url": "https://api.github.com/users/crwebb85/followers",
                "following_url": "https://api.github.com/users/crwebb85/following{/other_user}",
                "gists_url": "https://api.github.com/users/crwebb85/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/crwebb85",
                "id": 51029315,
                "login": "crwebb85",
                "node_id": "MDQ6VXNlcjUxMDI5MzE1",
                "organizations_url": "https://api.github.com/users/crwebb85/orgs",
                "received_events_url": "https://api.github.com/users/crwebb85/received_events",
                "repos_url": "https://api.github.com/users/crwebb85/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/crwebb85/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/crwebb85/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/crwebb85"
            }
        },
        {
            "author_association": "NONE",
            "body": "@crwebb85 That's the \"fix\" to go back to the previous behaviour but why have the new behaviour if it's not usable as is? It feels like a pretty standard workflow to have more than one type of file opened in the same session.\r\n\r\nCould it instead refresh only the buffers with the right capability?",
            "created_at": "2024-06-04T07:55:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/29156#issuecomment-2146854302",
            "id": 2146854302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29156",
            "node_id": "IC_kwDOAPphoM5_9mWe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146854302/reactions"
            },
            "updated_at": "2024-06-04T07:55:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2146854302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/140537389?v=4",
                "events_url": "https://api.github.com/users/tmtd4c93aac/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmtd4c93aac/followers",
                "following_url": "https://api.github.com/users/tmtd4c93aac/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmtd4c93aac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmtd4c93aac",
                "id": 140537389,
                "login": "tmtd4c93aac",
                "node_id": "U_kgDOCGBuLQ",
                "organizations_url": "https://api.github.com/users/tmtd4c93aac/orgs",
                "received_events_url": "https://api.github.com/users/tmtd4c93aac/received_events",
                "repos_url": "https://api.github.com/users/tmtd4c93aac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmtd4c93aac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmtd4c93aac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmtd4c93aac"
            }
        },
        {
            "author_association": "NONE",
            "body": "receiving this in my case \r\n\r\n```\r\nError detected while processing InsertLeave Autocommands for \"*.go\":\r\nmethod textDocument/codeLens is not supported by any of the servers registered for the current buffer\r\n```",
            "created_at": "2024-06-13T14:38:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/29156#issuecomment-2165868851",
            "id": 2165868851,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29156",
            "node_id": "IC_kwDOAPphoM6BGIkz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2165868851/reactions"
            },
            "updated_at": "2024-06-13T14:38:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2165868851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/183364?v=4",
                "events_url": "https://api.github.com/users/alduro/events{/privacy}",
                "followers_url": "https://api.github.com/users/alduro/followers",
                "following_url": "https://api.github.com/users/alduro/following{/other_user}",
                "gists_url": "https://api.github.com/users/alduro/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alduro",
                "id": 183364,
                "login": "alduro",
                "node_id": "MDQ6VXNlcjE4MzM2NA==",
                "organizations_url": "https://api.github.com/users/alduro/orgs",
                "received_events_url": "https://api.github.com/users/alduro/received_events",
                "repos_url": "https://api.github.com/users/alduro/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alduro/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alduro/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alduro"
            }
        },
        {
            "author_association": "NONE",
            "body": "`refresh` is now accepting bufnr, so the only thing you have to do is to tell it refresh only the buf you are interested in, for example\r\n```\r\n        local function setup_codelens_refresh(client, bufnr)\r\n          local status_ok, codelens_supported = pcall(function()\r\n            return client.supports_method(\"textDocument/codeLens\")\r\n          end)\r\n          if not status_ok or not codelens_supported then\r\n            return\r\n          end\r\n          local group = \"lsp_code_lens_refresh\"\r\n          local cl_events = { \"BufEnter\", \"InsertLeave\" }\r\n          local ok, cl_autocmds = pcall(vim.api.nvim_get_autocmds, {\r\n            group = group,\r\n            buffer = bufnr,\r\n            event = cl_events,\r\n          })\r\n          if ok and #cl_autocmds > 0 then\r\n            return\r\n          end\r\n          local cb = function()\r\n            if vim.api.nvim_buf_is_loaded(bufnr) and vim.api.nvim_buf_is_valid(bufnr) then\r\n              vim.lsp.codelens.refresh({ bufnr = bufnr })\r\n            end\r\n          end\r\n          vim.api.nvim_create_augroup(group, { clear = false })\r\n          vim.api.nvim_create_autocmd(cl_events, {\r\n            group = group,\r\n            buffer = bufnr,\r\n            callback = cb,\r\n          })\r\n        end\r\n```\r\nand then  call this function in your `onattach`, it will check for the buffer availability, for codelens for availability for the lsp and created `au`s to automatically refresh only the specified buffers",
            "created_at": "2024-06-17T14:07:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/29156#issuecomment-2173514480",
            "id": 2173514480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29156",
            "node_id": "IC_kwDOAPphoM6BjTLw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2173514480/reactions"
            },
            "updated_at": "2024-06-17T14:07:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2173514480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207721?v=4",
                "events_url": "https://api.github.com/users/osleg/events{/privacy}",
                "followers_url": "https://api.github.com/users/osleg/followers",
                "following_url": "https://api.github.com/users/osleg/following{/other_user}",
                "gists_url": "https://api.github.com/users/osleg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/osleg",
                "id": 207721,
                "login": "osleg",
                "node_id": "MDQ6VXNlcjIwNzcyMQ==",
                "organizations_url": "https://api.github.com/users/osleg/orgs",
                "received_events_url": "https://api.github.com/users/osleg/received_events",
                "repos_url": "https://api.github.com/users/osleg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/osleg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/osleg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/osleg"
            }
        },
        {
            "author_association": "NONE",
            "body": "@osleg As I said before that is fine if what you want is reverting to the previous behaviour, but I still question the usefulness of the default behaviour.\r\n\r\nThe reasoning for the change in https://github.com/neovim/neovim/pull/27253 is the following:\r\n> ... given that the protocol documents [workspace/codeLens/refresh](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeLens_refresh) as \"refreshing the code lenses currently shown in editors\"\r\n\r\nI think it's fair to say that \"refreshing the code lenses currently shown in editors\" would be more useful if it meant it only refreshed the buffers with the right capabilities rather than raising a lot of warnings for the buffers without. ",
            "created_at": "2024-06-17T14:15:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/29156#issuecomment-2173543273",
            "id": 2173543273,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29156",
            "node_id": "IC_kwDOAPphoM6BjaNp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2173543273/reactions"
            },
            "updated_at": "2024-06-17T14:15:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2173543273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/140537389?v=4",
                "events_url": "https://api.github.com/users/tmtd4c93aac/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmtd4c93aac/followers",
                "following_url": "https://api.github.com/users/tmtd4c93aac/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmtd4c93aac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmtd4c93aac",
                "id": 140537389,
                "login": "tmtd4c93aac",
                "node_id": "U_kgDOCGBuLQ",
                "organizations_url": "https://api.github.com/users/tmtd4c93aac/orgs",
                "received_events_url": "https://api.github.com/users/tmtd4c93aac/received_events",
                "repos_url": "https://api.github.com/users/tmtd4c93aac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmtd4c93aac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmtd4c93aac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmtd4c93aac"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29156/comments",
    "created_at": "2024-06-03T02:23:20Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29156/events",
    "html_url": "https://github.com/neovim/neovim/issues/29156",
    "id": 2330032335,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29156/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6K4XjP",
    "number": 29156,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 16,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 16,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29156/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29156/timeline",
    "title": "Unsupported method warning issued when calling `vim.lsp.codelens.run`",
    "updated_at": "2024-06-17T14:15:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29156",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4517909?v=4",
        "events_url": "https://api.github.com/users/sykesm/events{/privacy}",
        "followers_url": "https://api.github.com/users/sykesm/followers",
        "following_url": "https://api.github.com/users/sykesm/following{/other_user}",
        "gists_url": "https://api.github.com/users/sykesm/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sykesm",
        "id": 4517909,
        "login": "sykesm",
        "node_id": "MDQ6VXNlcjQ1MTc5MDk=",
        "organizations_url": "https://api.github.com/users/sykesm/orgs",
        "received_events_url": "https://api.github.com/users/sykesm/received_events",
        "repos_url": "https://api.github.com/users/sykesm/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sykesm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sykesm/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sykesm"
    }
}