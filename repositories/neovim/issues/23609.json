{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nNeovide is implementing smooth scrolling using the `win_viewport` event, but there are a few problems. These should have been caught before merging https://github.com/neovim/neovim/pull/19270, and as a part of the Neovide organization I want to start by apologizing for us pressuring you to merge that in a hurry, before we even had an implementation on the Neovide side.\r\n\r\nNow, we have two different implementation the one in the released version 0.10.4 and the one in my https://github.com/neovide/neovide/pull/1790. The pull request first took an alternative approach of using the `grid_scroll` event, and assuming that it represented a real scroll, when the area was the complete visible portion of the screen. I never personally saw any problems with that approach, but @Kethku reported some problems. None one else reported any problems either, so my plan was to communicate with you and see if we could use that approach, perhaps by making it more official and include some extra flags to the event that tells if it's a scroll or not. However, soon after https://github.com/neovim/neovim/pull/19270, was merged, and Neovide master started using that, so I decided to follow and update my branch to the `scroll_delta` as well. But it quickly turned out that both the Neovide release and my branch has the same problems. For more context, see https://github.com/neovide/neovide/pull/1790, especially towards the end, where I also explain these issues in a slightly different way.\r\n\r\nThe immediate problem is that the updates are not atomic when scrolling, this is an example of two batches of UI events (for a slightly more detailed and different explanation see https://github.com/neovide/neovide/pull/1790)\r\n```\r\ngrid_line {\r\n    grid: 4,\r\n    row: 0,\r\n    column_start: 126,\r\n    cells: [...] }\r\nwin_viewport { \r\n    grid: 2,\r\n    top_line: 27.0,\r\n    bottom_line: 113.0,\r\n    current_line: 65.0,\r\n    current_column: 0.0,\r\n    line_count: Some(456.0), \r\n    scroll_delta: Some(3.0) }\r\nflush\r\n```\r\n```\r\ngrid_scroll { \r\n    grid: 2,\r\n    top: 0,\r\n    bottom: 66,\r\n    left: 0,\r\n    right: 137,\r\n    rows: 3,\r\n    columns: 0 }\r\ngrid_line {\r\n    grid: 2,\r\n    row: 63,\r\n    column_start: 0,\r\n    cells: [...] })\r\ngrid_line { \r\n    grid: 2,\r\n    row: 64, \r\n    column_start: 0,\r\n    cells: [...] }\r\ngrid_line {\r\n    grid: 2,\r\n    row: 65,\r\n    column_start: 0,\r\n    cells: [...] }\r\nwin_viewport {\r\n    grid: 2,\r\n    top_line: 27.0,\r\n    bottom_line: 113.0,\r\n    current_line: 65.0,\r\n    current_column: 0.0,\r\n    line_count: Some(456.0),\r\n    scroll_delta: Some(0.0) }\r\ncursor_goto {\r\n    grid: 2,\r\n    row: 38,\r\n    column: 4 }\r\nflush\r\n```\r\nAs you can see the first batch sends a flush with a new viewport. But the problem here is that the viewport has not yet been updated, and Neovide has no way of knowing that, so it just displays what was on the screen at that location.  The viewport is then redrawn in the second event. So, the whole sequence looks like the screen is flickering due to displaying the wrong contents temporarily.\r\n\r\nThe real problem here is that the `win_viewport` event is underspecified. Nowhere in the documentation does it say how it's supposed to work. One interpretation, and the one we are using is to assume that `win_viewport` acts as an internal flush of the previous viewport, and all the `grid_line` events following it will apply to the new viewport. But this interpretation is clearly wrong, since `win_viewport` is one of the last events a batch, confirmed both in practice and by reading the Neovim source code in `ui_flush`.  \r\n\r\nFrom the code it furthermore looks like `win_viewport` is only sent once per flush batch, which could mean that `win_viewport` is supposed to apply to the whole batch. This works, but it's slightly inconvenient since it means that we can't update our internal grid representation in the same order as the events arrive, instead we have to buffer the events and wait for the viewport event before doing anything.\r\n\r\nThere are other interpretations as well that allows multiple `win_viewport` per batch.\r\n\r\nNone of these interpretations matches the behaviour in the example above, unless we assume that `win_viewport` has nothing do with the scrolling, it just moves the pointer to the next destination of the buffer to be updated. In that case everything is consistent. But it's still unclear if `win_viewport` applies to the current batch, or if it applies only to the following batches.\r\n\r\nBut if `win_viewport` also is a notification that the buffer has been scrolled, which I think it's supposed to be since the documentation clearly says that the `grid_scroll` is not a real scroll indication, then it really needs to part of the same batch that updates the destination to avoid glitches. \r\n\r\nMy current workaround in https://github.com/neovide/neovide/pull/1790, is to assume that `win_viewport` applies to the next batch, and simply ignore any scrolling until the next batch, which I'm expecting to always be sent right after. This seems to work in most cases, but I don't believe it works in all of them. Especially if the current position is updated and scrolling happens at the same time, for example when deleting something partially inside and partially outside the screen.\r\n\r\nI have read the source code a bit, to try to determine what's actually going on. The most important parts seem to be in `ui_flush` and `update_screen`.  But especially this comment\r\n```c\r\n// Commands that scroll a window change w_topline and must call\r\n// check_cursor() to move the cursor into the visible part of the window, and\r\n// call redraw_later(wp, UPD_VALID) to have the window displayed by update_screen()\r\n// later.\r\n```\r\nSo, it looks like scrolling, will cause a delayed redrawing of the screen, which I what I observed in practice as well, and seems to support my current workaround.  But it only holds if scrolling is the only type of update, in other cases the screen might be redrawn immediately, which breaks my workaround.\r\n\r\nI don't really have any suggestions on how to solve this, I don't know the inner workings of Neovim enough, and things gets really complex when we start considering updates that are a hybrid of scrolling and modifications, like deleting/inserting lines, or expanding/collapsing folds. But to me it looks like the best would be to encode all that in the `grid_scroll` event and add some more fields describing what type of scroll it is and how many lines actually scrolled, even outside of the screen.  Then Neovide could act on just that, like my original implementation, and forget that `win_viewport` exists.  That event could still be useful for other applications though.\n\n### Steps to reproduce\n\nUse Neovim through the latest release of Neovide 0.10.4. \r\n\r\n1. Create a mapping that scrolls down and up a few lines for example `nmap <Down> 3<C-e>`  and  `nmap <Up> 3<C-y>`\r\n2. Open a buffer with some text\r\n3. Scroll down a bit so that you can scroll up later\r\n4. Fold some lines, so that the screen is partially folded\r\n5. Scroll up/down with the mapping\r\n6. Observe that the screen suddenly jumps\r\n\n\n### Expected behavior\n\nThe scrolling should work without glitches.\n\n### Neovim version (nvim -v)\n\nNVIM v0.9.0\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nNeovide 0.10.4\n\n### $TERM environment variable\n\nN/A\n\n### Installation\n\npacman",
    "closed_at": "2023-07-05T13:31:36Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I might be encountering similar issue with gnvim. This issue is fairly long, and its quite late atm here so I'll just add my (hopefully complementing) explanation:\r\n\r\nWhen nvim sends `win_viewport` event, it reports the `scroll_delta` value a few batches into \"future\". I.e. the `scroll_delta` value is for a screen state that is only transferred after a few more batches (a few `flush` events) later.\r\n\r\nThere are (or at least was) other similar synchronization issues with the ui events. One is where the cursor position for a window is invalid on `flush`, but that is much easier to workaround.",
            "created_at": "2023-05-19T20:16:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/23609#issuecomment-1555187440",
            "id": 1555187440,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23609",
            "node_id": "IC_kwDOAPphoM5cskbw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555187440/reactions"
            },
            "updated_at": "2023-05-19T20:17:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555187440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4594126?v=4",
                "events_url": "https://api.github.com/users/vhakulinen/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhakulinen/followers",
                "following_url": "https://api.github.com/users/vhakulinen/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhakulinen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhakulinen",
                "id": 4594126,
                "login": "vhakulinen",
                "node_id": "MDQ6VXNlcjQ1OTQxMjY=",
                "organizations_url": "https://api.github.com/users/vhakulinen/orgs",
                "received_events_url": "https://api.github.com/users/vhakulinen/received_events",
                "repos_url": "https://api.github.com/users/vhakulinen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhakulinen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhakulinen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhakulinen"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I created a pull request that adresses the issue #24182",
            "created_at": "2023-06-27T23:02:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/23609#issuecomment-1610331643",
            "id": 1610331643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23609",
            "node_id": "IC_kwDOAPphoM5f-7X7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 3,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1610331643/reactions"
            },
            "updated_at": "2023-06-27T23:02:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1610331643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't really have any suggestions on how to solve this ... But to me it looks like the best would be to encode all that in the `grid_scroll` event and add some more fields describing what type of scroll it is and how many lines actually scrolled, even outside of the screen. Then Neovide could act on just that, like my original implementation, and forget that `win_viewport` exists. That event could still be useful for other applications though.\r\n\r\nLooks like that solution wasn't needed in https://github.com/neovim/neovim/pull/24182 ?\r\n\r\nRelated: https://github.com/neovim/neovim/pull/23891 adds `wrap` field to `grid_line` event.",
            "created_at": "2023-07-02T10:16:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/23609#issuecomment-1616574403",
            "id": 1616574403,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23609",
            "node_id": "IC_kwDOAPphoM5gWvfD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616574403/reactions"
            },
            "updated_at": "2023-07-03T08:02:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616574403",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "No, it wasn't but #24182, is not perfect, it's mainly a band aid to get things working.\r\n\r\nIncorporating the viewport to grid_scroll would be much more flexible, since we could optionally smooth scroll things like inserting and pasting lines, folding/unfolding and so on, in addition to normal scrolling. But that also means that `grid_scroll` need to be much more specified so that the user can distinguish between different types of \"scrolling\"\r\n\r\nThe main reason for my solution not being perfect is that you receive the the new grid lines first and then `win_viewport`, so some kind of buffer is needed on the user side. Doing it any other way would be tricky, since due to folds and wrapped lines and such all the information is not available before the full update. ",
            "created_at": "2023-07-02T10:41:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/23609#issuecomment-1616587761",
            "id": 1616587761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23609",
            "node_id": "IC_kwDOAPphoM5gWyvx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616587761/reactions"
            },
            "updated_at": "2023-07-02T10:41:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616587761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23609/comments",
    "created_at": "2023-05-13T12:10:49Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23609/events",
    "html_url": "https://github.com/neovim/neovim/issues/23609",
    "id": 1708579991,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol",
            "id": 640132777,
            "name": "ui-ext",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-ext"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23609/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 51,
        "created_at": "2023-05-26T09:57:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/38",
        "id": 9446345,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/38/labels",
        "node_id": "MI_kwDOAPphoM4AkCPJ",
        "number": 38,
        "open_issues": 10,
        "state": "open",
        "title": "0.9.2",
        "updated_at": "2023-07-25T19:19:51Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/38"
    },
    "node_id": "I_kwDOAPphoM5l1tyX",
    "number": 23609,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 2,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23609/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23609/timeline",
    "title": "win_viewport is under documented and possibly glitchy",
    "updated_at": "2023-07-25T19:19:51Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23609",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo"
    }
}