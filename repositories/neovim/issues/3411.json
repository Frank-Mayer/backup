{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "The primary motivation of this idea is to improve runtime file search performance.\n\nPopular plugin managers #247, in contrast to the Vimball way, all put an entry to 'runtimepath' for each plugin. And this tendency probably would not change, nor need to. Thus as the the number of entries in 'runtimepath' grows tremendously, which is often the case nowadays for many users, the various delay would be noticeable.\n\nWhen using shells, I learned that the builtin `hash` constructs an associative array to speed up command search. And as an avid Vim user, I couldn't help think to bring this kind of optimization to Vim. At least we could hash files in \"ftplugin\", \"syntax\", \"indent\", etc.\n",
    "closed_at": "2023-12-21T15:21:36Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't follow, how hashing would help search performance? Can you give an example?\n",
            "created_at": "2015-10-01T14:23:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144743441",
            "id": 144743441,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDc0MzQ0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144743441/reactions"
            },
            "updated_at": "2015-10-01T14:23:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144743441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I just think the shell builtin `hash` exists for performance reason. And the 'runtimepath' situation is similar IMHO.\n",
            "created_at": "2015-10-01T14:28:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144745045",
            "id": 144745045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDc0NTA0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144745045/reactions"
            },
            "updated_at": "2015-10-01T14:28:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144745045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
                "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
                "followers_url": "https://api.github.com/users/bohrshaw/followers",
                "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
                "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bohrshaw",
                "id": 1585463,
                "login": "bohrshaw",
                "node_id": "MDQ6VXNlcjE1ODU0NjM=",
                "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
                "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
                "repos_url": "https://api.github.com/users/bohrshaw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bohrshaw"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes but I don't see how it would improve the performance of sourcing. As far as I understand, we'd still have to go through each directory in 'runtimepath' and search for files to source\n",
            "created_at": "2015-10-01T14:39:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144748100",
            "id": 144748100,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDc0ODEwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144748100/reactions"
            },
            "updated_at": "2015-10-01T14:39:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144748100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Bram did mention on vim_dev  https://github.com/neovim/neovim/pull/3125#issuecomment-126995540\n\n> making 'runtimepath' very long is a bad idea.  Every time Vim searches for a runtime file it will \n> visit those directories and request the contents. \n> \n> A plugin manager better use another mechanism.  A dictionary to lookup what file is located where is a LOT faster. \n",
            "created_at": "2015-10-01T14:44:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144749416",
            "id": 144749416,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDc0OTQxNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144749416/reactions"
            },
            "updated_at": "2015-10-01T14:44:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144749416",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> we'd still have to go through each directory in 'runtimepath' and search for files to source.\n\nWe could modify `:runtime`(and related commands) to search in the hash table constructed from existing files in 'runtimepath'. And add a command like `:hash` to rehash files when needed, reminiscent of `:helptags`.\n",
            "created_at": "2015-10-01T15:40:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144765877",
            "id": 144765877,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDc2NTg3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144765877/reactions"
            },
            "updated_at": "2015-10-01T15:40:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144765877",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
                "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
                "followers_url": "https://api.github.com/users/bohrshaw/followers",
                "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
                "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bohrshaw",
                "id": 1585463,
                "login": "bohrshaw",
                "node_id": "MDQ6VXNlcjE1ODU0NjM=",
                "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
                "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
                "repos_url": "https://api.github.com/users/bohrshaw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bohrshaw"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Note: if you derive functionality from zsh then in addition to looking values in hash it also fall backs to plain old walking over `$path` should executable be not found. (Though for some reason it does not automatically rehash when it appears that executable was not found in hash, but found on FS. Most likely because it first `fork()`s and only then attempts search, see `command_not_found_handler` in `man zshmisc`.)\n",
            "created_at": "2015-10-01T16:03:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144772810",
            "id": 144772810,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDc3MjgxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144772810/reactions"
            },
            "updated_at": "2015-10-01T16:03:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144772810",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "So let's clarify some points (for Vim):\n\n> fall back ... does not automatically rehash\n\nIf we hash `autoload/*`, `colors/*`, etc., then a falling back to search in 'runtimepath' is needed, and the new entry should be added to the hash table.\n\nBut the primary concern is to hash _repeatedly sourced files_ including these in \"ftplugin\", \"syntax\" and \"indent\", in which case there is no falling back or auto-rehashing.\n",
            "created_at": "2015-10-01T23:39:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144877789",
            "id": 144877789,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDg3Nzc4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144877789/reactions"
            },
            "updated_at": "2015-10-01T23:39:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144877789",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
                "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
                "followers_url": "https://api.github.com/users/bohrshaw/followers",
                "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
                "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bohrshaw",
                "id": 1585463,
                "login": "bohrshaw",
                "node_id": "MDQ6VXNlcjE1ODU0NjM=",
                "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
                "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
                "repos_url": "https://api.github.com/users/bohrshaw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bohrshaw"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What is being hashed? The contents? If so, why? \n\nMy assumption thus far has been that there would be two dictionaries:\n- `{filename:[absolute_path1, absolute_path2, ...]}` \n- `{func_name:absolute_path}`\n",
            "created_at": "2015-10-02T01:25:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144894519",
            "id": 144894519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDg5NDUxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144894519/reactions"
            },
            "updated_at": "2015-10-02T01:31:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144894519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What is being hashed? The contents? If so, why?\n\nI think it's clear that _only_ file paths be hashed. \n\nTo be more specific, with file types \"vim\", \"lua\", etc., there would be:\n\n``` viml\nlet v:runtimepath = {\n      \\ \"ftplugin\": {\n      \\ \"vim\": [absolute_path1, absolute_path2, ...],\n      \\ \"lua\": [absolute_path1, absolute_path2, ...],\n      \\ ...},\n      \\\n      \\ \"syntax\": {\n      \\ \"vim\": [absolute_path1, absolute_path2, ...],\n      \\ \"lua\": [absolute_path1, absolute_path2, ...],\n      \\ ...},\n      \\\n      \\ \"indent\": {\n      \\ \"vim\": [absolute_path1, absolute_path2, ...],\n      \\ \"lua\": [absolute_path1, absolute_path2, ...],\n      \\ ...},\n      \\\n      \\ \"autoload\": [absolute_path1, absolute_path2, ...],\n      \\ ...\n      \\ }\n```\n",
            "created_at": "2015-10-02T02:35:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-144901491",
            "id": 144901491,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDkwMTQ5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144901491/reactions"
            },
            "updated_at": "2015-10-02T02:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/144901491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
                "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
                "followers_url": "https://api.github.com/users/bohrshaw/followers",
                "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
                "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bohrshaw",
                "id": 1585463,
                "login": "bohrshaw",
                "node_id": "MDQ6VXNlcjE1ODU0NjM=",
                "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
                "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
                "repos_url": "https://api.github.com/users/bohrshaw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bohrshaw"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@BohrShaw `autoload` files are normally sourced only once. Also let us set up an agreement:\n- Hashing means that at some event _all entries in &runtimepath are walked over and put into a hash_, so that ideally `:runtime` or equivalent C function _never_ falls back to walking over &runtimepath.\n- Caching means that when `:runtime` or equivalent C function is called it first looks up whether path was already known, and if not then performs searching in `&runtimepath` and saves the result.\n\nIt looks like in the discussion such approaches are being mixed. “New entry is being added to the hash table” is from second approach, what I meant that in case of hash miss when requested file was found NeoVim performs _full_ rescan because such event means that hash is outdated and there is good chance to miss something when next time calling `:runtime` or equivalent C function if no rescan is being done. Same thing if requested file was not found in runtimepath saved in hash.\n\nAlso in my opinion hash table should look like\n\n``` JSON\n{\n    \"syntax/lua.vim\": [\"/usr/share/nvim/runtime\", \"/home/user/.nvim\"],\n    \"indent/foo.vim\": [\"/home/user/.nvim\"]\n}\n```\n\nNote 1: strings inside may actually be pointers to `&runtimepath`. In any case hash needs to be recreated when `&runtimepath` changes, so this is safe. In addition it is better to be more sane and hold `&runtimepath` as `ArrayOf(String)` or equivalent and only convert it to the usual comma-separated list when some manipulations with `&runtimepath` are being performed: walking over `&runtimepath` is _far_ more common operation then viewing its value, and this variant avoids both allocating memory (which is also true when holding pointers to inside old `&runtimepath`) and extra overhead on unescaping performed in `copy_option_part`.\n\nNote 2: it is probably better to do scanning in a separate thread in all cases.\n",
            "created_at": "2015-10-02T14:22:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-145035628",
            "id": 145035628,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTAzNTYyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/145035628/reactions"
            },
            "updated_at": "2015-10-02T14:22:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/145035628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> autoload files are normally sourced only once.\n\nAs we walk through the 'runtimepath', I think it's handy and cheap to include files even sourced only once in the hash table. But it may not be worth it should we encounter trouble after more things are considered.\n\n> Full-rehash when a new file is found or &runtimepath is changed.\n\nI assume you mean e.g. a _new file_ in `autoload/`. So are we going to hash single-sourced files in `&runtimepath`?\n\n> Also in my opinion the hash table is linear.\n\nI set on a two-dimensional one solely for performance reason because VimL is interpreted. Would operations on the hash table all implemented in C?\n\n> Note1 and Note2\n\nEfficient C implementation is indeed valuable.\n",
            "created_at": "2015-10-02T15:44:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-145067680",
            "id": 145067680,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA2NzY4MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/145067680/reactions"
            },
            "updated_at": "2015-10-02T15:44:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/145067680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
                "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
                "followers_url": "https://api.github.com/users/bohrshaw/followers",
                "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
                "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bohrshaw",
                "id": 1585463,
                "login": "bohrshaw",
                "node_id": "MDQ6VXNlcjE1ODU0NjM=",
                "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
                "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
                "repos_url": "https://api.github.com/users/bohrshaw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bohrshaw"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@BohrShaw \n\n> I set on a two-dimensional one solely for performance reason because VimL is interpreted. Would operations on the hash table all implemented in C?\n\nFirst rule of VimL optimization is “less commands are faster”. Most of time it is even more efficient to call `map` with `copy()` then to use `:for`. One of my plugins optimizes its performance by squashing a `while` cycle with `:let` and `:if` commands inside into a `while` cycle with a single big condition with no commands in body.\n\nThus I see absolutely no reason for many-dimensional hash table have better performance in VimL.\n\n> As we walk through the 'runtimepath', I think it's handy and cheap to include files even sourced only once in the hash table. But it may not be worth it should we encounter trouble after more things are considered.\n\nThis is bad idea unless job will be done in a separate thread: you may visit _far_ more directories then needed if you simply visit everything. Especially given that indent, syntax and ftplugin files have a clear and limited depth (also colorscheme, but scanning their directory is pointless because `:colorscheme` is not run often), but plugin and autoload have no limit and some plugin authors like to put there various stuff.\n\nAlso note that one may do `runtime macros/….vim`.\n",
            "created_at": "2015-10-02T16:00:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-145071313",
            "id": 145071313,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA3MTMxMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/145071313/reactions"
            },
            "updated_at": "2015-10-02T16:00:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/145071313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> First rule of VimL optimization is “less commands are faster”.\n\n@ZyX-I Overall, I'm glad to know the performance implications of VimL.\n\n> You may visit _far_ more directories then needed if you simply visit everything. ...\n\nI also tend to exclude single-sourced files when hashing.\n",
            "created_at": "2015-10-02T23:39:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-145183893",
            "id": 145183893,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE4Mzg5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/145183893/reactions"
            },
            "updated_at": "2015-10-02T23:39:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/145183893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
                "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
                "followers_url": "https://api.github.com/users/bohrshaw/followers",
                "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
                "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bohrshaw",
                "id": 1585463,
                "login": "bohrshaw",
                "node_id": "MDQ6VXNlcjE1ODU0NjM=",
                "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
                "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
                "repos_url": "https://api.github.com/users/bohrshaw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bohrshaw"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related:\r\n\r\n- https://github.com/neovim/neovim/pull/15632",
            "created_at": "2021-09-14T23:45:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-919587660",
            "id": 919587660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "IC_kwDOAPphoM42z8tM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/919587660/reactions"
            },
            "updated_at": "2021-09-14T23:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/919587660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There's no concrete problem here to solve, and the suggested solution seems misguided and/or too vague. Closing.\r\n\r\nEDIT: also note `vim.loader` now exists which does hashing and caching.",
            "created_at": "2023-12-21T15:21:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/3411#issuecomment-1866475653",
            "id": 1866475653,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/3411",
            "node_id": "IC_kwDOAPphoM5vQCiF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1866475653/reactions"
            },
            "updated_at": "2023-12-21T15:24:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1866475653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments": 15,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/3411/comments",
    "created_at": "2015-10-01T14:20:37Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/3411/events",
    "html_url": "https://github.com/neovim/neovim/issues/3411",
    "id": 109309689,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "plugins and Vim \"pack\"",
            "id": 117905553,
            "name": "plugin",
            "node_id": "MDU6TGFiZWwxMTc5MDU1NTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/plugin"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "funtime",
            "id": 120251370,
            "name": "runtime",
            "node_id": "MDU6TGFiZWwxMjAyNTEzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/runtime"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/3411/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 594,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 426,
        "state": "open",
        "title": "backlog",
        "updated_at": "2023-12-24T03:02:50Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUxMDkzMDk2ODk=",
    "number": 3411,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/3411/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/3411/timeline",
    "title": "Hash repeatedly sourced files in 'runtimepath'",
    "updated_at": "2023-12-21T15:24:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/3411",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
        "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
        "followers_url": "https://api.github.com/users/bohrshaw/followers",
        "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
        "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bohrshaw",
        "id": 1585463,
        "login": "bohrshaw",
        "node_id": "MDQ6VXNlcjE1ODU0NjM=",
        "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
        "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
        "repos_url": "https://api.github.com/users/bohrshaw/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bohrshaw"
    }
}