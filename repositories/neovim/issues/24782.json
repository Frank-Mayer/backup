{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nFrom `:h 'conceallevel'`\r\n```\r\n\t1\t\tEach block of concealed text is replaced with one\r\n\t\t\tcharacter.  If the syntax item does not have a custom\r\n\t\t\treplacement character defined (see |:syn-cchar|) the\r\n\t\t\tcharacter defined in 'listchars' is used.\r\n\t\t\tIt is highlighted with the \"Conceal\" highlight group.\r\n\t2\t\tConcealed text is completely hidden unless it has a\r\n\t\t\tcustom replacement character defined (see\r\n\t\t\t|:syn-cchar|).\r\n```\r\n\r\nThis is respected by `:syntax` and `matchadd()` conceal without a replacement char: show `lcs-conceal` when `&conceallevel = 1`, completely hidden when `&conceallevel = 2`.\r\n\r\nHowever, this is not achievable using extmark conceal, as extmark conceal behaves the same with `&conceallevel = 1` vs. `&conceallevel = 2`:\r\n- If `conceal` is empty string, the text is completely hidden in either case\r\n- If `conceal` is a character, the text is replaced with that char in either cas\n\n### Expected behavior\n\nA way to make extmark conceal behave like `:syntax`/`matchadd()` conceal without replacement char. It may either replace current behavior (if current behavior isn't useful), or be enabled using a new possible value for `conceal` field in `opts` of `nvim_buf_set_extmark`.",
    "closed_at": "2023-08-18T19:55:12Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'd say the existing behavior is a bug. if extmark conceal respects cole=0 vs cole=1, it should also respect the user's choice of cole=1 vs cole=2. The intention of adding the feature was to allow concealing in tree-sitter syntax to follow the conceal behavior of the legacy `:syntax` definitions they replaced. ",
            "created_at": "2023-08-18T14:08:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/24782#issuecomment-1683976834",
            "id": 1683976834,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24782",
            "node_id": "IC_kwDOAPphoM5kX3KC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683976834/reactions"
            },
            "updated_at": "2023-08-18T14:08:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1683976834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24782/comments",
    "created_at": "2023-08-18T12:36:52Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24782/events",
    "html_url": "https://github.com/neovim/neovim/issues/24782",
    "id": 1856653408,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "extmarks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/extmarks"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3385582660,
            "name": "conceal",
            "node_id": "LA_kwDOAPphoM7Jy-RE",
            "url": "https://api.github.com/repos/neovim/neovim/labels/conceal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24782/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5uqkhg",
    "number": 24782,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24782/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24782/timeline",
    "title": "No way to make extmark conceal behave like :syntax/matchadd() conceal without replacement char",
    "updated_at": "2023-08-18T19:55:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24782",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq"
    }
}