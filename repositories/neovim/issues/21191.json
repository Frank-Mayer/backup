{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\n### Spec\r\n\r\nhttps://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_onTypeFormatting\r\n\r\n### Incomplete list of capable servers\r\n\r\n- [rust-analyzer](https://rust-analyzer.github.io/)\r\n- [lua-language-server](https://github.com/sumneko/lua-language-server/blob/7400644545baad38c0830c2cbb596f51b88316e5/script/core/type-formatting.lua) \r\n- [tsserver](https://github.com/microsoft/TypeScript/blob/f6628a4573cd37c26912f78de3d08cd1dbf687a5/lib/protocol.d.ts#L25)\r\n- [ccls](https://github.com/MaskRay/ccls/blob/8a93950fb9828182919df12083a0443ab7ad831e/src/message_handler.cc)\r\n\r\n### Benefits\r\n\r\n- Format code instantly at typing and reduce the need of requesting `textDocument/(range)formatting` and typing burden.\r\n- Partially alleviate the reliance on indenting (perhaps even a replacement for it?) as most of the current vim indent plugins simply use regex which is not accurate enough, and the [tree-sitter one](https://github.com/nvim-treesitter/nvim-treesitter#indentation) seldom works now.\r\n- The capability has been standardized in LSP along with `textDocument/(range)formatting` and the other two have been already implemented for a long time. I think it should be trivial and reasonable to add support for it either.\r\n\r\n### Possible implementation\r\n\r\n[coc.nvim](https://github.com/neoclide/coc.nvim/blob/2d0634eb8064fd483f78e38e72feed30d5a418b9/src/handler/format.ts#L107)\r\n\r\nThe support has been added there for years and the implementation is an excellent reference. The key listening is implemented by [a combination of autocmd events](https://github.com/neoclide/coc.nvim/blob/2d0634eb8064fd483f78e38e72feed30d5a418b9/src/handler/format.ts#L63-L77).\r\n\r\n[A version use `vim.on_key`](https://github.com/yioneko/nvim-type-fmt/blob/main/lua/type-fmt.lua)\r\n\r\nThis one uses `vim.on_key` to make it possible to receive special inserted chars like `\\r`, as some servers support `onTypeFormatting` on newline (`\\n`). The caveat is that `vim.on_key` actually listens on rhs of mapping, which doesn't reflect what the char user actually typed. A better approach might be needed.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "What are the chances that this gets added? That would be super cool....",
            "created_at": "2023-08-15T01:01:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/21191#issuecomment-1678283549",
            "id": 1678283549,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21191",
            "node_id": "IC_kwDOAPphoM5kCJMd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1678283549/reactions"
            },
            "updated_at": "2023-08-15T01:01:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1678283549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1386207?v=4",
                "events_url": "https://api.github.com/users/9mm/events{/privacy}",
                "followers_url": "https://api.github.com/users/9mm/followers",
                "following_url": "https://api.github.com/users/9mm/following{/other_user}",
                "gists_url": "https://api.github.com/users/9mm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/9mm",
                "id": 1386207,
                "login": "9mm",
                "node_id": "MDQ6VXNlcjEzODYyMDc=",
                "organizations_url": "https://api.github.com/users/9mm/orgs",
                "received_events_url": "https://api.github.com/users/9mm/received_events",
                "repos_url": "https://api.github.com/users/9mm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/9mm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/9mm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/9mm"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21191/comments",
    "created_at": "2022-11-25T17:02:40Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/21191/events",
    "html_url": "https://github.com/neovim/neovim/issues/21191",
    "id": 1464773134,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/21191/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5XTqoO",
    "number": 21191,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 45,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 45,
        "url": "https://api.github.com/repos/neovim/neovim/issues/21191/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/21191/timeline",
    "title": "LSP: textDocument/onTypeFormatting",
    "updated_at": "2023-08-15T01:01:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/21191",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/65551246?v=4",
        "events_url": "https://api.github.com/users/yioneko/events{/privacy}",
        "followers_url": "https://api.github.com/users/yioneko/followers",
        "following_url": "https://api.github.com/users/yioneko/following{/other_user}",
        "gists_url": "https://api.github.com/users/yioneko/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/yioneko",
        "id": 65551246,
        "login": "yioneko",
        "node_id": "MDQ6VXNlcjY1NTUxMjQ2",
        "organizations_url": "https://api.github.com/users/yioneko/orgs",
        "received_events_url": "https://api.github.com/users/yioneko/received_events",
        "repos_url": "https://api.github.com/users/yioneko/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/yioneko/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yioneko/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/yioneko"
    }
}