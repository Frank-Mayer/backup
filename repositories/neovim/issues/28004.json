{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI needed to perform an LSP replace using the same pattern on different files on a project. Easy enough: `live_grep` with `Telescope`, send to quickfix, `cdo` with some positioning and then running `vim.lsp.buf.rename(\"newName\")`, right? Unfortunately it does not work, it only changes the last file in a broken way.\r\n\r\nIt took me a bit to realize that `vim.lsp.buf.rename` works asynchronously. I don't exactly understand _why_ the problem manifests itself in this particular way, but anyway using a _sync_ approach for the operation is probably the right thing to when performing this sort of automation.\n\n### Expected behavior\n\nThe documentation should suggest to avoid using `rename` for scripting purposes, and it should suggest its _sync_ alternative (which obviously should exist). I am not totally sure if the behavior should depend on a parameter (similarly to `vim.lsp.buf.format`, but using `async = true` by default instead) or if it should be a separated function (i.e. `vim.lsp.buf.rename_sync`). In theory, it could be also helpful to have a _callback_ parameter to the current `rename` function to be called after the operation ends, however this is not so useful when using `cdo` and similar functions, therefore out of scope for this issue.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Can you use `vim.wait()`?  https://neovim.io/doc/user/lua.html#vim.wait()\r\n\r\nIf not, this is blocked until we have a Task/Promise abstraction. https://github.com/neovim/neovim/issues/19624 We are not going to add `_sync` or `_async` variants of everything.",
            "created_at": "2024-03-27T15:57:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2023130281",
            "id": 2023130281,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM54loSp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023130281/reactions"
            },
            "updated_at": "2024-03-27T15:57:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023130281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you for your reply @justinmk. Unfortunately I don't think that `vim.wait` would help (at least without long timeouts), because the issue is that if more than one _rename_ operation overlaps, things start to go crazy.\r\n\r\nYou are totally right that a Task/Promise abstraction is exactly what would be ideal in this case, but I also think that it is not necessary to add _async variants_ for everything. I mean, I don't think there are many others (if any) `lsp.buf` that explode so badly if run multiple times in a short time, and we could also use an `async` option instead of having a function variant for this specific case (which have been already done for `vim.lsp.buf.format`).\r\n\r\nStill, I could understand if you would rather to wait for a better Task/Promise abstraction and to avoid a temporary _sol-hack-ution_. I already made my _hackish_ auxiliary sync `rename` function that call private methods in order to solve my specific problem... but it is not a good idea to publish it as a plugin for obvious reasons :sweat_smile:. Probably, it is difficult to estimate if any other person encountered the same issue and just opted to \"whatever, let's do it by hand\", therefore I do not know if introducing this change could be _actually_ useful to other people.\r\n\r\nLet me know if you would like me to send a PR to introduce an `async` option (I think we are already excluding the `_sync` function variant) or if you would rather to close the issue. In any case no worries :relaxed: ",
            "created_at": "2024-03-27T17:26:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/28004#issuecomment-2023367527",
            "id": 2023367527,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28004",
            "node_id": "IC_kwDOAPphoM54miNn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023367527/reactions"
            },
            "updated_at": "2024-03-27T17:26:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2023367527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/350168?v=4",
                "events_url": "https://api.github.com/users/dodomorandi/events{/privacy}",
                "followers_url": "https://api.github.com/users/dodomorandi/followers",
                "following_url": "https://api.github.com/users/dodomorandi/following{/other_user}",
                "gists_url": "https://api.github.com/users/dodomorandi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dodomorandi",
                "id": 350168,
                "login": "dodomorandi",
                "node_id": "MDQ6VXNlcjM1MDE2OA==",
                "organizations_url": "https://api.github.com/users/dodomorandi/orgs",
                "received_events_url": "https://api.github.com/users/dodomorandi/received_events",
                "repos_url": "https://api.github.com/users/dodomorandi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dodomorandi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dodomorandi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dodomorandi"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28004/comments",
    "created_at": "2024-03-23T22:20:12Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28004/events",
    "html_url": "https://github.com/neovim/neovim/issues/28004",
    "id": 2204071136,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "futures/promises, async/await, concurrency, task pipelines",
            "id": 5683343649,
            "name": "async",
            "node_id": "LA_kwDOAPphoM8AAAABUsDxIQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/async"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28004/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6DX3Tg",
    "number": 28004,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28004/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28004/timeline",
    "title": "Add sync version of vim.lsp.buf.rename",
    "updated_at": "2024-03-27T17:26:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28004",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/350168?v=4",
        "events_url": "https://api.github.com/users/dodomorandi/events{/privacy}",
        "followers_url": "https://api.github.com/users/dodomorandi/followers",
        "following_url": "https://api.github.com/users/dodomorandi/following{/other_user}",
        "gists_url": "https://api.github.com/users/dodomorandi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dodomorandi",
        "id": 350168,
        "login": "dodomorandi",
        "node_id": "MDQ6VXNlcjM1MDE2OA==",
        "organizations_url": "https://api.github.com/users/dodomorandi/orgs",
        "received_events_url": "https://api.github.com/users/dodomorandi/received_events",
        "repos_url": "https://api.github.com/users/dodomorandi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dodomorandi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dodomorandi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dodomorandi"
    }
}