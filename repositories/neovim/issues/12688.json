{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "Hello,\r\nI am trying to setup gopls but only when the filetype is go using go.vim (listed below):\r\n\r\n- when I put vim.go in my nvim/ftplugin or nvim/after/ftplugin  dir(to load when a .go file is opened):\r\n-- file is loaded as per :scriptnames and successful call to GoLoad()\r\n-- no lsp functionality (diagnostics, goto implementation) at all when a .go file is opened using nvim f1.go\r\n-- no lsp functionality at all when a .go file is opened for the first time inside nvim :e f1.go\r\n-- full lsp functionality when a second file is opened inside nvim :e f2.go but only inside f2.go (f1.go still has no lsp support).\r\n\r\n- when I source go.vim in my init.vim: full lsp functionality in all three scenarios.\r\n\r\nAny idea what I am doing wrong?\r\n\r\nThanks,\r\n\r\n*************** go.vim *********************\r\n```vim\r\n:lua << EOF\r\nlocal nvim_lsp = require('nvim_lsp')\r\nnvim_lsp.gopls.setup{}\r\nEOF\r\nsetlocal omnifunc=v:lua.vim.lsp.omnifunc\r\nnnoremap <buffer><silent> gd    <cmd>lua vim.lsp.buf.definition()<CR>\r\nnnoremap <buffer><silent> <c-]> <cmd>lua vim.lsp.buf.definition()<CR>\r\nnnoremap <buffer><silent> K     <cmd>lua vim.lsp.buf.hover()<CR>\r\nnnoremap <buffer><silent> gD    <cmd>lua vim.lsp.buf.implementation()<CR>\r\nnnoremap <buffer><silent> <c-k> <cmd>lua vim.lsp.buf.signature_help()<CR>\r\n\"nnoremap<buffer> <silent> 1gD   <cmd>lua vim.lsp.buf.type_definition()<CR>\r\nnnoremap <buffer><silent> gr    <cmd>lua vim.lsp.buf.references()<CR>\r\nnnoremap <buffer><silent> g0    <cmd>lua vim.lsp.buf.document_symbol()<CR>\r\nnnoremap <buffer><silent> gW    <cmd>lua vim.lsp.buf.workspace_symbol()<CR>\r\n\r\nsetlocal signcolumn=yes  \"prevent text shifting with lsp errors\r\nsetlocal completeopt=menu,noinsert,noselect,menuone\r\nfunction GoLoad()\r\n  echo 'go.vim loaded!'\r\nendfunction\r\n```",
    "closed_at": "2020-07-28T15:41:35Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "`nvim_lsp.gopls.setup{}` sets up `autocmd FileType python`, ftplugin is also called by the filetype autocmd. Therefore, the autocmd set by ftplugin in autocmd would not be called. Perhaps you need to call `doautocmd` after calling `nvim_lsp.gopls.setup{}` only on the first load as follows.\r\n\r\n```vim\r\nlet s:loaded = get(s:, 'loaded', v:false)\r\nif !s:loaded\r\nlua << EOF\r\n  local nvim_lsp = require('nvim_lsp')\r\n  nvim_lsp.gopls.setup{}\r\nEOF\r\n  let s:loaded = v:true\r\n  doautomcd FileType python\r\nendif\r\n```\r\n\r\nFor questions about usage/configuration, try https://vi.stackexchange.com or https://neovim.io/#chat. The issue tracker is for bugs and feature requests. Thanks.",
            "created_at": "2020-07-28T15:41:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/12688#issuecomment-665115778",
            "id": 665115778,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12688",
            "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTExNTc3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/665115778/reactions"
            },
            "updated_at": "2020-07-28T15:41:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/665115778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11682285?v=4",
                "events_url": "https://api.github.com/users/erw7/events{/privacy}",
                "followers_url": "https://api.github.com/users/erw7/followers",
                "following_url": "https://api.github.com/users/erw7/following{/other_user}",
                "gists_url": "https://api.github.com/users/erw7/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/erw7",
                "id": 11682285,
                "login": "erw7",
                "node_id": "MDQ6VXNlcjExNjgyMjg1",
                "organizations_url": "https://api.github.com/users/erw7/orgs",
                "received_events_url": "https://api.github.com/users/erw7/received_events",
                "repos_url": "https://api.github.com/users/erw7/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/erw7/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/erw7/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/erw7"
            }
        },
        {
            "author_association": "NONE",
            "body": "Heres an example of adding the `htmldjango` to the `html` LSP, maybe it helps others with a related problem, the main point is the `filetypes` key.\r\n\r\n```lua\r\n    require('lspconfig').html.setup {\r\n        on_attach = lsp_attach,\r\n        capabilities = capabilities,\r\n        filetypes = {'html', 'htmldjango'}, -- Add htmldjango\r\n    }\r\n```",
            "created_at": "2024-07-16T21:37:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/12688#issuecomment-2231868449",
            "id": 2231868449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/12688",
            "node_id": "IC_kwDOAPphoM6FB5wh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2231868449/reactions"
            },
            "updated_at": "2024-07-16T21:38:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2231868449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19764314?v=4",
                "events_url": "https://api.github.com/users/mangelozzi/events{/privacy}",
                "followers_url": "https://api.github.com/users/mangelozzi/followers",
                "following_url": "https://api.github.com/users/mangelozzi/following{/other_user}",
                "gists_url": "https://api.github.com/users/mangelozzi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mangelozzi",
                "id": 19764314,
                "login": "mangelozzi",
                "node_id": "MDQ6VXNlcjE5NzY0MzE0",
                "organizations_url": "https://api.github.com/users/mangelozzi/orgs",
                "received_events_url": "https://api.github.com/users/mangelozzi/received_events",
                "repos_url": "https://api.github.com/users/mangelozzi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mangelozzi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mangelozzi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mangelozzi"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/12688/comments",
    "created_at": "2020-07-27T19:42:28Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/12688/events",
    "html_url": "https://github.com/neovim/neovim/issues/12688",
    "id": 666538889,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as usage questions",
            "id": 77997478,
            "name": "closed:question",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:question"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/12688/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU2NjY1Mzg4ODk=",
    "number": 12688,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/12688/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/12688/timeline",
    "title": "How to load an lsp server only for a specific filetype?",
    "updated_at": "2024-07-16T21:38:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/12688",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/12840815?v=4",
        "events_url": "https://api.github.com/users/DrGo/events{/privacy}",
        "followers_url": "https://api.github.com/users/DrGo/followers",
        "following_url": "https://api.github.com/users/DrGo/following{/other_user}",
        "gists_url": "https://api.github.com/users/DrGo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/DrGo",
        "id": 12840815,
        "login": "DrGo",
        "node_id": "MDQ6VXNlcjEyODQwODE1",
        "organizations_url": "https://api.github.com/users/DrGo/orgs",
        "received_events_url": "https://api.github.com/users/DrGo/received_events",
        "repos_url": "https://api.github.com/users/DrGo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/DrGo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DrGo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/DrGo"
    }
}