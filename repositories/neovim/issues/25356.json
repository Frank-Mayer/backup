{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nKudos to the neovim core team for making lots of improvements on treesitter.\r\n\r\nTreesitter's query parsing seems to have some perf regression on nvim 0.10.x. It is fast in neovim 0.9.2 stable release.\r\n\r\nEspecially, latex queries are very slow to parse (550ms v.s. 114ms), which makes highlight of latex documents very laggy.\r\n\r\n```\r\n/tmp/neovim/nvim-treesitter/queries/lua/highlights.scm : length 3687\r\ntime: 1.393292 ms              NVIM v0.9.2\r\n/tmp/neovim/nvim-treesitter/queries/lua/highlights.scm : length 3687\r\ntime: 3.398166 ms              NVIM v0.10.0-dev-1211+gb3be7b741\r\n\r\n/tmp/neovim/nvim-treesitter/queries/rust/highlights.scm : length 6702\r\ntime: 18.018542 ms              NVIM v0.9.2\r\n/tmp/neovim/nvim-treesitter/queries/rust/highlights.scm : length 6702\r\ntime: 79.737958 ms              NVIM v0.10.0-dev-1211+gb3be7b741\r\n\r\n/tmp/neovim/nvim-treesitter/queries/python/highlights.scm : length 7995\r\ntime: 19.373334 ms              NVIM v0.9.2\r\n/tmp/neovim/nvim-treesitter/queries/python/highlights.scm : length 7995\r\ntime: 88.112458 ms              NVIM v0.10.0-dev-1211+gb3be7b741\r\n\r\n/tmp/neovim/nvim-treesitter/queries/latex/highlights.scm : length 5668\r\ntime: 112.599875 ms              NVIM v0.9.2\r\n/tmp/neovim/nvim-treesitter/queries/latex/highlights.scm : length 5668\r\ntime: 538.48675 ms              NVIM v0.10.0-dev-1211+gb3be7b741\r\n```\r\n\r\nNote: I'm following #22426 and I don't think this was discussed before. Parsing \"queries\" is slow, not building the syntax tree of the buffer, so it has nothing to do with memoization (#25201) or injections. Just a single call of `vim._ts_parse_query` is slow.\r\n\r\nNote: tree-sitter CLI parsing with the same query file on a trivial file takes around 125 ms in my measurement, which is almost close to what NVIM 0.9.2 reports.\r\n\r\n```\r\n$ tree-sitter --version\r\ntree-sitter 0.20.8\r\n$ time tree-sitter query /tmp/neovim/nvim-treesitter/queries/latex/highlights.scm empty.tex\r\nempty.tex\r\n  pattern: 57\r\n    capture: 4 - spell, start: (0, 0), end: (0, 1), text: `a`\r\ntree-sitter query  empty.tex  0.12s user 0.00s system 95% cpu 0.125 total\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nI used the following code to measure the timing:\r\n\r\nperf.lua:\r\n\r\n```lua\r\n--[[\r\nMeasures query parsing performance.\r\n\r\n#!/usr/bin/env bash\r\n\r\nfor L in lua rust python latex; do\r\n   LANGUAGE=$L nvim-0.9.2   --headless --clean -u 'perf.lua' -c q;\r\n   LANGUAGE=$L nvim-nightly --headless --clean -u 'perf.lua' -c q;\r\n   echo '';\r\ndone\r\n\r\n]]\r\n\r\n-- setup treesitter plugins and ensure parser files are installed there\r\nlocal ts_path = '/tmp/neovim/nvim-treesitter'\r\nlocal ts_url = 'https://github.com/nvim-treesitter/nvim-treesitter'\r\nif vim.fn.isdirectory(ts_path) == 0 then\r\n  vim.fn.system { 'git', 'clone', '--depth=1', ts_url, ts_path }\r\nend\r\nvim.opt.rtp:prepend(ts_path)\r\n\r\nlocal lang = os.getenv(\"LANGUAGE\") or 'latex'\r\nlocal query = os.getenv(\"QUERY\") or 'highlights'\r\nrequire(\"nvim-treesitter.install\").ensure_installed_sync { lang }\r\n\r\n\r\nlocal function safe_read(filename, read_quantifier)\r\n  local file, err = io.open(filename, 'r')\r\n  if not file then\r\n    error(err)\r\n  end\r\n  local content = file:read(read_quantifier)\r\n  io.close(file)\r\n  return content\r\nend\r\n\r\n-- https://github.com/nvim-treesitter/nvim-treesitter/blob/master/queries/latex/highlights.scm\r\nlocal query_file = vim.api.nvim_get_runtime_file((\"queries/%s/%s.scm\"):format(lang, query), false)[1]\r\nif not query_file then\r\n  return print(\"not found:\", lang, '\\n')\r\nend\r\nlocal query_str = safe_read(query_file, '*a') ---@type string\r\nprint(query_file, \": length\", #query_str)  -- len = 5678\r\n\r\n\r\nlocal tic = vim.loop.hrtime()\r\n-- Note: actually memoization doesn't matter, it's called once here\r\n-- the core logic in C code `vim._ts_parse_query is slow\r\ncollectgarbage()\r\nvim.treesitter.query.parse(lang, query_str)\r\nvim.treesitter.query.parse(lang, query_str) -- cached, so it should be instant\r\nlocal toc = vim.loop.hrtime()\r\n\r\nlocal elapsed = (toc - tic) / 1e6\r\nlocal vim_version = vim.split(vim.fn.execute('version'), '\\n')[3]\r\nprint(\"time: \" .. elapsed .. \" ms              \" .. vim_version .. \"\\n\")\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nAs fast as in nvim 0.9.2.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nv0.10.0-dev-1211+gb3be7b741 [Build type: **Release**]\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nmacOS 12.6\r\n\r\n### Terminal name/version\r\n\r\nxterm\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": "2023-09-25T04:26:46Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm I'm sorry, I think this issue is invalid due to my stupid mistake and it was simply a dependency module issue. It probably had something to do with my build environment, e.g. cleaning up all the build caches and deps. `make clean && rm -rf build` does not clean up the `.deps` :P\r\n\r\nTo ensure everything is fair I cleaned everything in the repo, and did a fresh checkout, and they perform the same. \r\n\r\n```\r\n$ make clean\r\n$ rm -rf .deps build\r\n$ make CMAKE_BUILD_TYPE=Release -j8\r\n$ VIMRUNTIME=./runtime build/bin/nvim --version\r\nNVIM v0.10.0-dev-1211+gb3be7b741-dirty\r\nBuild type: Release\r\nLuaJIT 2.1.1695409640\r\nRun \"nvim -V1 -v\" for more info\r\n$ VIMRUNTIME=./runtime build/bin/nvim --headless --clean -u repro_ts.lua -c q\r\n/tmp/neovim/nvim-treesitter/queries/latex/highlights.scm : length 5668\r\ntime: 118.458958 ms              NVIM v0.10.0-dev-1211+gb3be7b741-dirty\r\n```\r\n\r\nTo confirm that, when I build v0.9.2 on the deps built wrongly, possibly not in a Release mode, it also runs slow. So it's not a neovim issue.\r\n\r\nSorry about not checking them carefully.",
            "created_at": "2023-09-25T04:26:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/25356#issuecomment-1732887200",
            "id": 1732887200,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25356",
            "node_id": "IC_kwDOAPphoM5nScKg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1732887200/reactions"
            },
            "updated_at": "2023-09-25T04:29:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1732887200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25356/comments",
    "created_at": "2023-09-25T04:09:00Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25356/events",
    "html_url": "https://github.com/neovim/neovim/issues/25356",
    "id": 1910617888,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25356/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5x4bcg",
    "number": 25356,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25356/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25356/timeline",
    "title": "Treesitter performance: parsing query files are much slow",
    "updated_at": "2023-09-25T04:35:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25356",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
        "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
        "followers_url": "https://api.github.com/users/wookayin/followers",
        "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
        "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wookayin",
        "id": 1009873,
        "login": "wookayin",
        "node_id": "MDQ6VXNlcjEwMDk4NzM=",
        "organizations_url": "https://api.github.com/users/wookayin/orgs",
        "received_events_url": "https://api.github.com/users/wookayin/received_events",
        "repos_url": "https://api.github.com/users/wookayin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wookayin"
    }
}