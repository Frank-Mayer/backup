{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nAccording to LSP specification, completion items should be filtered by `filterText` property, and if it does not exist, it should filter by `label`. Quoting from https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#completionItem:\r\n\r\n```\r\n\t/**\r\n\t * A string that should be used when filtering a set of\r\n\t * completion items. When omitted the label is used as the\r\n\t * filter text for this item.\r\n\t */\r\n\tfilterText?: string;\r\n```\r\n\r\nNew built-in LSP completion filters only by `filterText` if it is defined, but it does not apply filtering on the `label` as a fallback.\r\n\r\nhttps://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp/completion.lua#L241-L243\n\n### Steps to reproduce\n\n1. Install `vtsls` language server (this one was easiest to reproduce)\r\n```\r\nnpm install -g @vtsls/language-server\r\n```\r\n2. Use this minimal init:\r\n```lua\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = 'javascript',\r\n  callback = function()\r\n    vim.lsp.start({\r\n      cmd = { 'vtsls', '--stdio' },\r\n      on_attach = function(client, bufnr)\r\n        vim.lsp.completion.enable(true, client.id, bufnr, { autotrigger = true })\r\n      end,\r\n    })\r\n  end,\r\n})\r\n\r\nvim.keymap.set('i', '<C-space>', function()\r\n vim.lsp.completion.trigger()\r\nend)\r\n```\r\n3. `nvim -u minimal_init.lua`\r\n4. `:edit test.js`\r\n5. Type `Math.mi`, this should show correct completion since it's doing \"live\" filtering\r\n6. Press `<C-space>`, it will show a lot of unmatched items\r\n![screenshot_2024_06_11_18_14_41](https://github.com/neovim/neovim/assets/1782860/103fcdbd-a933-4235-b5c7-f0c5221df4e5)\r\n\n\n### Expected behavior\n\nExpected to properly filter by the prefix, which is in my example `mi`.\n\n### Neovim version (nvim -v)\n\nNVIM v0.11.0-dev-37bf4c5\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArch Linux\n\n### Terminal name/version\n\nkitty 0.35.1\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nbob (https://github.com/MordechaiHadad/bob",
    "closed_at": "2024-06-27T10:20:01Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This is kinda intentional to support the `fuzzy` completeopt and also to have the option to select snippets where the word/label won't have a prefix match. All subsequent filtering is left up to the `complete()` handling. \r\n\r\nBut we could add an option to make it stricter\r\n",
            "created_at": "2024-06-12T10:49:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/29287#issuecomment-2162697876",
            "id": 2162697876,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29287",
            "node_id": "IC_kwDOAPphoM6A6CaU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162697876/reactions"
            },
            "updated_at": "2024-06-12T10:49:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162697876",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "From my understanding, `fuzzy` completeopt is using the same code as `matchfuzzy`, so those should behave the same.\r\n\r\n> But we could add an option to make it stricter\r\n\r\nYes, this would be great. It can be added as an option on `vim.lsp.completion.enable` together with `autotrigger`.",
            "created_at": "2024-06-12T11:03:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/29287#issuecomment-2162727521",
            "id": 2162727521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29287",
            "node_id": "IC_kwDOAPphoM6A6Jph",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162727521/reactions"
            },
            "updated_at": "2024-06-12T11:03:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2162727521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger I'd like to address this, but want to discuss it before I start.\r\nDo you have any preference how to approach it? I have these suggestions:\r\n\r\n1. Allow custom function for filtering\r\nAccept the `filter`(or some other name, I'm not sure what would be the most suitable) option when enabling the completion from `on_attach`. It would accept the `lsp.CompletionItem` and a prefix. Something along these lines:\r\n```lua\r\nvim.lsp.completion.enable(true, client.id, bufnr, {\r\n  autotrigger = true,\r\n  filter = function(item, prefix)\r\n    ---@cast item lsp.CompletionItem\r\n    ---@cast prefix string\r\n    return vim.fn.matchfuzzy({ item.label }, prefix)\r\n  end\r\n})\r\n```\r\nThis would either be a complete substitution for the current filter that filters by `filterText`, or it could be used as a fallback filter. I'd prefer the latter, since `filterText` is part of the LSP specification, and it is always expected to be filtered by this.\r\n\r\n2. Add a flag that will additionally filter by label\r\nThis one is a simpler but less flexible option. Flag would just additionally filter by `label` as the LSP specification mentions:\r\n```lua\r\nvim.lsp.completion.enable(true, client.id, bufnr, {\r\n  autotrigger = true,\r\n  fallbackFilterByLabel = true\r\n})\r\n```\r\n\r\nPersonally, I'd prefer option 1. since it gives more flexibility, but option 2. is also perfectly fine since it solves this issue.",
            "created_at": "2024-06-24T09:27:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/29287#issuecomment-2186032760",
            "id": 2186032760,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29287",
            "node_id": "IC_kwDOAPphoM6CTDZ4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186032760/reactions"
            },
            "updated_at": "2024-06-24T09:27:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2186032760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29287/comments",
    "created_at": "2024-06-11T16:19:06Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29287/events",
    "html_url": "https://github.com/neovim/neovim/issues/29287",
    "id": 2346821983,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29287/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 627,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 549,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-06-27T10:20:02Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6L4alf",
    "number": 29287,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29287/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29287/timeline",
    "title": "Built-in LSP completion not filtering on label",
    "updated_at": "2024-06-27T10:20:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29287",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
        "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
        "followers_url": "https://api.github.com/users/kristijanhusak/followers",
        "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
        "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kristijanhusak",
        "id": 1782860,
        "login": "kristijanhusak",
        "node_id": "MDQ6VXNlcjE3ODI4NjA=",
        "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
        "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
        "repos_url": "https://api.github.com/users/kristijanhusak/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kristijanhusak"
    }
}