{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nSometimes (every week or so, for me) nvim locks up after saving a file.\r\n\r\nStack dump:\r\n\r\n```gdb\r\n#0  __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393,\r\n    expected=0, futex_word=0x556363d1ae2c) at ./nptl/futex-internal.c:57\r\n#1  __futex_abstimed_wait_common (futex_word=futex_word@entry=0x556363d1ae2c,\r\n    expected=expected@entry=0, clockid=clockid@entry=0, abstime=abstime@entry=0x0,\r\n    private=private@entry=0, cancel=cancel@entry=true) at ./nptl/futex-internal.c:87\r\n#2  0x00007f755e99de0b in __GI___futex_abstimed_wait_cancelable64 (\r\n    futex_word=futex_word@entry=0x556363d1ae2c, expected=expected@entry=0,\r\n    clockid=clockid@entry=0, abstime=abstime@entry=0x0, private=private@entry=0)\r\n    at ./nptl/futex-internal.c:139\r\n#3  0x00007f755e9a0468 in __pthread_cond_wait_common (abstime=0x0, clockid=0,\r\n    mutex=0x556363d1add8, cond=0x556363d1ae00) at ./nptl/pthread_cond_wait.c:503\r\n#4  ___pthread_cond_wait (cond=cond@entry=0x556363d1ae00,\r\n    mutex=mutex@entry=0x556363d1add8) at ./nptl/pthread_cond_wait.c:618\r\n#5  0x00007f755ecee169 in uv_cond_wait (cond=cond@entry=0x556363d1ae00,\r\n    mutex=mutex@entry=0x556363d1add8) at ./src/unix/thread.c:800\r\n#6  0x0000556362d2bbfb in ui_bridge_suspend (b=0x556363d1ac80)\r\n    at ./src/nvim/ui_bridge.c:185\r\n#7  0x0000556362b892a3 in ui_call_suspend ()\r\n    at ./build/src/nvim/auto/ui_events_call.generated.h:53\r\n#8  ex_stop (eap=<optimized out>) at ./src/nvim/ex_docmd.c:6950\r\n#9  0x0000556362b7a6f6 in do_one_cmd (cmdlinep=cmdlinep@entry=0x7ffe45732408,\r\n    flags=flags@entry=10, cstack=cstack@entry=0x7ffe45732490,\r\n    fgetline=fgetline@entry=0x0, cookie=cookie@entry=0x0) at ./src/nvim/ex_docmd.c:1972\r\n#10 0x0000556362b7cae3 in do_cmdline (cmdline=<optimized out>, fgetline=0x0,\r\n    cookie=0x0, flags=10) at ./src/nvim/ex_docmd.c:595\r\n#11 0x0000556362c2c8dc in normal_execute (state=0x7ffe45732a80, key=<optimized out>)\r\n    at ./src/nvim/normal.c:1166\r\n#12 0x0000556362cff1ad in state_enter (s=0x7ffe45732a80) at ./src/nvim/state.c:89\r\n#13 0x0000556362c2b304 in normal_enter (cmdwin=<optimized out>,\r\n    noexmode=<optimized out>) at ./src/nvim/normal.c:463\r\n#14 0x0000556362a8c24a in main (argc=<optimized out>, argv=<optimized out>)\r\n    at ./src/nvim/main.c:576\r\n(gdb) inf thr\r\n  Id   Target Id                              Frame\r\n* 1    Thread 0x7f755e8ead40 (LWP 14397) \"vi\" __futex_abstimed_wait_common64 (\r\n    private=0, cancel=true, abstime=0x0, op=393, expected=0, futex_word=0x556363d1ae2c)\r\n    at ./nptl/futex-internal.c:57\r\n  2    Thread 0x7f755dc5f6c0 (LWP 14398) \"vi\" __futex_abstimed_wait_common64 (\r\n    private=0, cancel=true, abstime=0x0, op=393, expected=0, futex_word=0x7f7558011210)\r\n    at ./nptl/futex-internal.c:57\r\n(gdb) thr 2\r\n[Switching to thread 2 (Thread 0x7f755dc5f6c0 (LWP 14398))]\r\n#0  __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393,\r\n    expected=0, futex_word=0x7f7558011210) at ./nptl/futex-internal.c:57\r\n57\tin ./nptl/futex-internal.c\r\n(gdb) whe\r\n#0  __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393,\r\n    expected=0, futex_word=0x7f7558011210) at ./nptl/futex-internal.c:57\r\n#1  __futex_abstimed_wait_common (futex_word=futex_word@entry=0x7f7558011210,\r\n    expected=expected@entry=0, clockid=clockid@entry=0, abstime=abstime@entry=0x0,\r\n    private=private@entry=0, cancel=cancel@entry=true) at ./nptl/futex-internal.c:87\r\n#2  0x00007f755e99de0b in __GI___futex_abstimed_wait_cancelable64 (\r\n    futex_word=futex_word@entry=0x7f7558011210, expected=expected@entry=0,\r\n    clockid=clockid@entry=0, abstime=abstime@entry=0x0, private=private@entry=0)\r\n    at ./nptl/futex-internal.c:139\r\n#3  0x00007f755e9a0468 in __pthread_cond_wait_common (abstime=0x0, clockid=0,\r\n    mutex=0x7f75580111c0, cond=0x7f75580111e8) at ./nptl/pthread_cond_wait.c:503\r\n#4  ___pthread_cond_wait (cond=cond@entry=0x7f75580111e8,\r\n    mutex=mutex@entry=0x7f75580111c0) at ./nptl/pthread_cond_wait.c:618\r\n#5  0x00007f755ecee169 in uv_cond_wait (cond=cond@entry=0x7f75580111e8,\r\n    mutex=mutex@entry=0x7f75580111c0) at ./src/unix/thread.c:800\r\n#6  0x0000556362d2330b in tinput_flush (input=input@entry=0x7f7558010f28,\r\n    wait_until_empty=wait_until_empty@entry=true) at ./src/nvim/tui/input.c:191\r\n#7  0x0000556362d260b1 in tinput_read_cb (stream=<optimized out>, buf=<optimized out>,\r\n    count_=<optimized out>, eof=<optimized out>, data=0x7f7558010f28)\r\n    at ./src/nvim/tui/input.c:668\r\n#8  tinput_read_cb (stream=<optimized out>, buf=<optimized out>,\r\n    count_=<optimized out>, data=0x7f7558010f28, eof=<optimized out>)\r\n    at ./src/nvim/tui/input.c:658\r\n#9  0x0000556362b62b08 in read_event (argv=<optimized out>)\r\n    at ./src/nvim/event/rstream.c:192\r\n#10 0x0000556362b6696e in invoke_read_cb (stream=0x7f7558011018,\r\n    count=<optimized out>, eof=<optimized out>) at ./src/nvim/event/rstream.c:205\r\n#11 0x00007f755eceb2ed in uv__read (stream=stream@entry=0x7f7558011020)\r\n    at ./src/unix/stream.c:1201\r\n#12 0x00007f755ecebd78 in uv__stream_io (loop=<optimized out>, w=0x7f75580110a8,\r\n    events=1) at ./src/unix/stream.c:1270\r\n#13 0x00007f755ecf3e3c in uv__io_poll (loop=loop@entry=0x7f755dc5e8b0,\r\n    timeout=<optimized out>) at ./src/unix/epoll.c:374\r\n#14 0x00007f755ece09e4 in uv_run (loop=loop@entry=0x7f755dc5e8b0,\r\n    mode=mode@entry=UV_RUN_ONCE) at ./src/unix/core.c:406\r\n#15 0x0000556362d2a577 in loop_poll_events (ms=-1, loop=0x7f755dc5e8b0)\r\n    at ./src/nvim/event/loop.c:61\r\n#16 tui_main (bridge=0x556363d1ac80, ui=0x556363d1ab40) at ./src/nvim/tui/tui.c:507\r\n#17 0x00007f755e9a1044 in start_thread (arg=<optimized out>)\r\n    at ./nptl/pthread_create.c:442\r\n#18 0x00007f755ea2161c in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n(gdb) \r\n```\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n$ start_some_memory_gobbling_job &  # most likely\r\n$ nvim FILE.txt\r\n[ edit edit edit ]\r\nZZ\r\n\r\n[ screen, last two lines ]\r\nFILE.txt [+]                                                           171,28         53%\r\n\"FILE.txt\"[cursor]\r\n```\r\n\r\nAt this point, the file's new content has been written correctly; the lock-up happens afterwards. `lsof -p###` shows that the file is no longer open.\r\n\r\n### Expected behavior\r\n\r\nNo deadlock. :-P\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.7.2\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nunknown, I don't use it often enough to (maybe) hit the problem\r\n\r\n### Operating system/version\r\n\r\nDebian bookworm\r\n\r\n### Terminal name/version\r\n\r\ngnome-term, kity\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256, kitty\r\n\r\n### Installation\r\n\r\nDebian bookworm",
    "closed_at": "2023-11-14T17:38:27Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Please use a current Neovim version; we are at 0.9.4 now (download the appimage for testing if your distro does not carry it).",
            "created_at": "2023-10-31T14:44:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/25853#issuecomment-1787363361",
            "id": 1787363361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25853",
            "node_id": "IC_kwDOAPphoM5qiQAh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1787363361/reactions"
            },
            "updated_at": "2023-10-31T14:44:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1787363361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Mutexes were removed so this is no longer relevant. Please try the latest version before reporting issues.",
            "created_at": "2023-11-14T17:38:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/25853#issuecomment-1810781140",
            "id": 1810781140,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25853",
            "node_id": "IC_kwDOAPphoM5r7lPU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1810781140/reactions"
            },
            "updated_at": "2023-11-14T17:38:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1810781140",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25853/comments",
    "created_at": "2023-10-31T14:41:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25853/events",
    "html_url": "https://github.com/neovim/neovim/issues/25853",
    "id": 1970627346,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "waiting for reply from the author",
            "id": 248229439,
            "name": "needs:response",
            "node_id": "MDU6TGFiZWwyNDgyMjk0Mzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:response"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25853/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM51dWMS",
    "number": 25853,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25853/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25853/timeline",
    "title": "Deadlock after saving",
    "updated_at": "2023-11-14T17:38:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25853",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/236571?v=4",
        "events_url": "https://api.github.com/users/smurfix/events{/privacy}",
        "followers_url": "https://api.github.com/users/smurfix/followers",
        "following_url": "https://api.github.com/users/smurfix/following{/other_user}",
        "gists_url": "https://api.github.com/users/smurfix/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/smurfix",
        "id": 236571,
        "login": "smurfix",
        "node_id": "MDQ6VXNlcjIzNjU3MQ==",
        "organizations_url": "https://api.github.com/users/smurfix/orgs",
        "received_events_url": "https://api.github.com/users/smurfix/received_events",
        "repos_url": "https://api.github.com/users/smurfix/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/smurfix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/smurfix/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/smurfix"
    }
}