{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen I try to run 2 `vim.system` requests at the same time, sometimes the one of the requests returns empty output. \nI'm reproducing the issue when running `nvim --clean` and sourcing the code below.\nUsing `vim.fn.jobstart` does not produce the same issue.\n\n``` lua\n-- test.lua\nlocal nvim_repo = \"/home/vedran/source/neovim\"\n\nfunction SystemTest()\n  local tries = 10\n  for i = 1, tries do\n    vim.defer_fn(function()\n      local file1 = nil\n      local file2 = nil\n      vim.system(\n        {\n          \"git\",\n          \"-C\", nvim_repo, \"cat-file\", \"-p\",\n          \"b7e896671500a6e9a0c773bc6bac2d073e588eba:src/nvim/tui/tui.c\"\n        },\n        { text = true },\n        function(o)\n          assert(o.code == 0)\n          file1 = o\n          if file2 then\n            -- print(\"2nd file finished first. Iter: \", i)\n            print(\"file1\", #file1.stdout)\n            print(\"file2\", #file2.stdout)\n          end\n        end\n      )\n      vim.system(\n        { \"git\", \"-C\", nvim_repo, \"cat-file\", \"-p\", \"4846bf05dc:src/nvim/tui/tui.c\" },\n        { text = true },\n        function(o)\n          assert(o.code == 0)\n          file2 = o\n          if file1 then\n            -- print(\"1st file finished first. Iter: \", i)\n            print(\"file1\", #file1.stdout)\n            print(\"file2\", #file2.stdout)\n          end\n        end\n      )\n    end, 0)\n  end\nend\nSystemTest()\n\n```\n\nExample output: \n```\nfile1 91246\nfile2 92332\n\nfile1 0\nfile2 92332\n\nfile1 91246\nfile2 92332\n\nfile1 91246\nfile2 92332\n\nfile1 91246\nfile2 92332\n\nfile1 91246\nfile2 0\n\nfile1 91246\nfile2 92332\n\nfile1 0\nfile2 92332\n\nfile1 91246\nfile2 92332\n\nfile1 91246\nfile2 92332\n```\n\nNeovim verison:\n```\nNVIM v0.11.0-dev-988+gfa6ab0d909\nBuild type: Release\nLuaJIT 2.1.1727870382\n```\n\n### Steps to reproduce\n\nmake sure to set `nvim_repo` in test.lua\n`nvim --clean test.lua`\n`:source`\n\n\n### Expected behavior\n\nI expect output to be \n```\nfile1 91246\nfile2 92332\n```\nrepeated 10 times\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-988+gfa6ab0d909\n\n### Vim (not Nvim) behaves the same?\n\nissue is with nvim only api\n\n### Operating system/version\n\nubuntu 20.04\n\n### Terminal name/version\n\nalacritty 0.12.0-dev (d5b2dac7)\n\n### $TERM environment variable\n\nscreen-256color\n\n### Installation\n\n build from repo ",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Are you able to reproduce with `vim.uv.spawn()`?",
            "created_at": "2024-10-17T16:59:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/30846#issuecomment-2420052702",
            "id": 2420052702,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30846",
            "node_id": "IC_kwDOAPphoM6QPxLe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420052702/reactions"
            },
            "updated_at": "2024-10-17T16:59:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420052702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, with both `vim.uv.spawn()` and `vim.loop.spawn()`.\n",
            "created_at": "2024-10-17T17:38:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/30846#issuecomment-2420124298",
            "id": 2420124298,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30846",
            "node_id": "IC_kwDOAPphoM6QQCqK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420124298/reactions"
            },
            "updated_at": "2024-10-17T17:38:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420124298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36032062?v=4",
                "events_url": "https://api.github.com/users/vdrn/events{/privacy}",
                "followers_url": "https://api.github.com/users/vdrn/followers",
                "following_url": "https://api.github.com/users/vdrn/following{/other_user}",
                "gists_url": "https://api.github.com/users/vdrn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vdrn",
                "id": 36032062,
                "login": "vdrn",
                "node_id": "MDQ6VXNlcjM2MDMyMDYy",
                "organizations_url": "https://api.github.com/users/vdrn/orgs",
                "received_events_url": "https://api.github.com/users/vdrn/received_events",
                "repos_url": "https://api.github.com/users/vdrn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vdrn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vdrn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vdrn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This sounds like a uv problem then.\n\nCan you update the repro steps?",
            "created_at": "2024-10-17T17:58:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/30846#issuecomment-2420160756",
            "id": 2420160756,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30846",
            "node_id": "IC_kwDOAPphoM6QQLj0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420160756/reactions"
            },
            "updated_at": "2024-10-17T17:59:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420160756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ok, so I said I can reproduce it with `uv.spawn` because I'm using `plenary.job` to run jobs, and with it I get the same wrong results.\nPlenary uses `loop.spawn`, and changing it to `uv.spawn` does not make any difference.\n\nAfter you asked to update the repro, I've tried implementing the above example with `uv.spawn`, but the result is now correct.\n\nSo, this example now produces correct result:\n```lua\nlocal nvim_repo = \"/home/vedran/source/neovim\"\n\nfunction UvSpawnTest()\n  local uv = vim.uv\n  local tries = 20\n  for i = 1, tries do\n    vim.defer_fn(function()\n      local file1 = \"\"\n      local file1_done = false\n      local file2 = \"\"\n      local file2_done = false\n\n      local stdout1 = uv.new_pipe()\n      uv.spawn(\"git\", {\n        stdio = { nil, stdout1, nil },\n        args = {\n          \"-C\", nvim_repo, \"cat-file\", \"-p\",\n          \"f0973d4227:runtime/lua/vim/lsp/util.lua\"\n        }\n      })\n      uv.read_start(stdout1, function(err, data)\n        assert(not err, err)\n        if data then\n          file1 = file1 .. data\n        else\n          file1_done = true\n          if file2_done then\n            print(\"file1\", #file1)\n            print(\"file2\", #file2)\n          end\n        end\n      end)\n\n      local stdout2 = uv.new_pipe()\n      uv.spawn(\"git\",\n        {\n          stdio = { nil, stdout2, nil },\n          args =\n          { \"-C\", nvim_repo, \"cat-file\", \"-p\",\n            \"5bec7288a5b56f1ac38673e59e32f6be774558f3:runtime/lua/vim/lsp/util.lua\"\n          },\n        }\n      )\n      uv.read_start(stdout2, function(err, data)\n        assert(not err, err)\n        if data then\n          file2 = file2 .. data\n        else\n          file2_done = true\n          if file1_done then\n            print(\"file1\", #file1)\n            print(\"file2\", #file2)\n          end\n        end\n      end)\n    end, 20)\n  end\nend\nUvSpawnTest()\n```\n\nAnd this example using plenary still produces bad result:\n```lua\nlocal nvim_repo = \"/home/vedran/source/neovim\"\nfunction PlenaryTest()\n  for name, url in pairs {\n    'https://github.com/nvim-lua/plenary.nvim'\n  } do\n    local install_path = vim.fn.fnamemodify('nvim_issue/' .. name, ':p')\n    if vim.fn.isdirectory(install_path) == 0 then\n      vim.fn.system { 'git', 'clone', '--depth=1', url, install_path }\n    end\n    vim.opt.runtimepath:append(install_path)\n  end\n\n  local Job = require(\"plenary.job\")\n  local tries = 20\n  for i = 1, tries do\n    vim.defer_fn(function()\n      local file1 = nil\n      local file2 = nil\n      Job:new({\n        command = \"git\",\n        args = {\n          \"-C\", nvim_repo, \"cat-file\", \"-p\",\n          \"b7e896671500a6e9a0c773bc6bac2d073e588eba:src/nvim/tui/tui.c\"\n        },\n        on_exit = function(j, c)\n          assert(c == 0)\n          file1 = j:result()\n          if file2 then\n            print(\"file1\", #file1)\n            print(\"file2\", #file2)\n          end\n        end,\n      }):start()\n      Job:new({\n        command = \"git\",\n        args = { \"-C\", nvim_repo, \"cat-file\", \"-p\", \"4846bf05dc:src/nvim/tui/tui.c\" },\n        on_exit = function(j, c)\n          assert(c == 0)\n          file2 = j:result()\n          if file1 then\n            print(\"file1\", #file1)\n            print(\"file2\", #file2)\n          end\n        end,\n      }):start()\n    end, 20)\n  end\nend\nPlenaryTest()\n```\n\nI'm pretty confused as to whats going on here.\nI'll try to figure out the difference between `plenary.job` and my `uv.spawn` example.\n\nI'm not sure do you want me to update the repro steps with plenary example, or keep it as is for now.\n",
            "created_at": "2024-10-17T19:16:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/30846#issuecomment-2420343259",
            "id": 2420343259,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30846",
            "node_id": "IC_kwDOAPphoM6QQ4Hb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420343259/reactions"
            },
            "updated_at": "2024-10-17T19:16:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420343259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36032062?v=4",
                "events_url": "https://api.github.com/users/vdrn/events{/privacy}",
                "followers_url": "https://api.github.com/users/vdrn/followers",
                "following_url": "https://api.github.com/users/vdrn/following{/other_user}",
                "gists_url": "https://api.github.com/users/vdrn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vdrn",
                "id": 36032062,
                "login": "vdrn",
                "node_id": "MDQ6VXNlcjM2MDMyMDYy",
                "organizations_url": "https://api.github.com/users/vdrn/orgs",
                "received_events_url": "https://api.github.com/users/vdrn/received_events",
                "repos_url": "https://api.github.com/users/vdrn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vdrn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vdrn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vdrn",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Vim.uv and vim.loop are literally the same thing (just different names for backwards compatibility), namely the main libuv event loop. \n\nAnd for the love of all things holy, please let's keep plenary out of this. If it's a Neovim issue, it needs to be reproducible with standard library functions only (otherwise please report at plenary).",
            "created_at": "2024-10-17T19:22:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/30846#issuecomment-2420353583",
            "id": 2420353583,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30846",
            "node_id": "IC_kwDOAPphoM6QQ6ov",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420353583/reactions"
            },
            "updated_at": "2024-10-17T19:22:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2420353583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30846/comments",
    "created_at": "2024-10-17T15:36:27Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30846/events",
    "html_url": "https://github.com/neovim/neovim/issues/30846",
    "id": 2595092466,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "channels, RPC, msgpack",
            "id": 242522707,
            "name": "channels-rpc",
            "node_id": "MDU6TGFiZWwyNDI1MjI3MDc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channels-rpc"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS resources, pipes, streams",
            "id": 713599092,
            "name": "system",
            "node_id": "MDU6TGFiZWw3MTM1OTkwOTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/system"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "futures/promises, async/await, concurrency, task pipelines",
            "id": 5683343649,
            "name": "async",
            "node_id": "LA_kwDOAPphoM8AAAABUsDxIQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/async"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30846/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 655,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 607,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-10-21T15:22:37Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM6arffy",
    "number": 30846,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30846/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30846/timeline",
    "title": "empty output when executing `vim.uv.spawn` in parallel",
    "updated_at": "2024-10-17T22:13:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30846",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/36032062?v=4",
        "events_url": "https://api.github.com/users/vdrn/events{/privacy}",
        "followers_url": "https://api.github.com/users/vdrn/followers",
        "following_url": "https://api.github.com/users/vdrn/following{/other_user}",
        "gists_url": "https://api.github.com/users/vdrn/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vdrn",
        "id": 36032062,
        "login": "vdrn",
        "node_id": "MDQ6VXNlcjM2MDMyMDYy",
        "organizations_url": "https://api.github.com/users/vdrn/orgs",
        "received_events_url": "https://api.github.com/users/vdrn/received_events",
        "repos_url": "https://api.github.com/users/vdrn/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vdrn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vdrn/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vdrn",
        "user_view_type": "public"
    }
}