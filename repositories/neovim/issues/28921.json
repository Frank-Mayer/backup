{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nI have identified a performance issue in the Neovim Lua API, specifically with the `vim.validate` function. The function is used to validate the types and values of function arguments, which is crucial for stability and correctness. However, it appears to be significantly slower than alternative approaches, which could impact the overall performance of Lua scripts and plugins in Neovim. And the plugin developers may need to create a no validation version of that function again.\r\n\r\n### Conclusion\r\nThe performance of `vim.validate` is a critical concern for Lua script developers and users of Neovim. By implementing the proposed solution, we can maintain the robustness of our code while significantly improving performance. This will benefit the entire Neovim community by enabling faster and more efficient Lua scripting.\r\n\r\n### Steps to reproduce\r\n\r\n1. Run the attached Lua script.\r\n2. Observe the execution times for each function.\r\n\r\n### Script for Benchmarking\r\nBelow is the Lua script used for benchmarking the performance of different validation approaches:\r\n\r\n```lua\r\n---@diagnostic disable\r\nlocal function test_speed(title, t, fn)\r\n  local start_time = os.clock()\r\n  local i = 0\r\n  while i < t do\r\n    fn()\r\n    i = i + 1\r\n  end\r\n  local end_time = os.clock()\r\n  local time_taken = end_time - start_time\r\n  print(title .. \": \" .. t .. \" times took \" .. time_taken .. \" seconds\")\r\nend\r\n\r\nlocal function empty() end\r\n\r\nfunction normal_one(s, suffix)\r\n  vim.validate({ s = { s, 's' }, suffix = { suffix, 's' } })\r\n  return #suffix == 0 or s:sub(-#suffix) == suffix\r\nend\r\n\r\nlocal function no_validation(s, suffix)\r\n  return #suffix == 0 or s:sub(-#suffix) == suffix\r\nend\r\n\r\nlocal function only_create_table(s, suffix)\r\n  empty({ s = { s, \"s\" }, suffix = { suffix, \"s\" } })\r\nend\r\n\r\nlocal function pre_created_table(s, suffix)\r\n  return #suffix == 0 or s:sub(-#suffix) == suffix\r\nend\r\n\r\nlocal function _validate(fn, vali, length)\r\n  return function(...)\r\n    for i = 1, length do\r\n      vali[i][1] = select(i, ...)\r\n    end\r\n    vim.validate(vali)\r\n    fn(...)\r\n  end\r\nend\r\n\r\npre_created_table = _validate(pre_created_table, {{ nil, \"s\" }, { nil, \"s\" }}, 2)\r\n\r\nlocal t = 10000000\r\ntest_speed(\"vim.endswith\", t, function() normal_one(\"hello world\", \"world\") end)\r\ntest_speed(\"no validation\", t, function() no_validation(\"hello world\", \"world\") end)\r\ntest_speed(\"only create table\", t, function() only_create_table(\"hello world\", \"world\") end)\r\ntest_speed(\"pre-created table\", t, function() pre_created_table(\"hello world\", \"world\") end)\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe `vim.validate` function should perform validation without causing a significant performance penalty.\r\n\r\n### Actual Results\r\nThe attached script benchmarks four different validation approaches:\r\n\r\n```\r\n➜  nvim git:(master) ✗ nvim --headless -l test.lua                                               \r\nvim.endswith: 10000000 times took 4.43177 seconds\r\nno validation: 10000000 times took 0.012763000000001 seconds\r\nonly create table: 10000000 times took 1.182221 seconds\r\npre-created table: 10000000 times took 2.674695 seconds\r\n```\r\n\r\nThe results show that using `vim.validate` is substantially slower compared to not validating at all or using a pre-created table for validation. In this case, in function `vim.endswith`, to create validate table, it takes 100x of times of the running of the function itself, and to validate the input, it takes 180x of times.\r\n\r\n### Proposed Solution\r\nTo improve the performance of the `vim.validate` function, I propose the following solution:\r\n\r\n1. **Reuse Validation Tables**: Instead of creating a new table for each validation, we can pre-create a table and reuse it for multiple validations. This reduces the overhead of table creation and garbage collection.\r\n\r\n2. **Optimize `vim.validate`**: The current implementation of `vim.validate` could be optimized to reduce the time complexity. This might involve better use of Lua's native type checking and avoiding unnecessary operations.\r\n\r\n3. **Provide a Configurable Validation Setting**: Allow users to configure the level of validation required. For performance-critical applications, or the values are trustful, a no validation version function could be used for speed. \r\n\r\n4. Do solution 1. slowly and eventually completely replace `vim.validation`. This optimization solution is stable and infallible.\r\n\r\n5. E.g., in the following code, if something like `--no-validation` flag was set, _validate will not execute, everything is unsafe by default.\r\n\r\n```lua\r\nlocal function _validate(fn, vali, length)\r\n if ... then -- A true condition will skip the validation step.\r\n  return fn \r\n end\r\n  return function(...)\r\n    for i = 1, length do\r\n      vali[i][1] = select(i, ...)\r\n    end\r\n    vim.validate(vali)\r\n    fn(...)\r\n  end\r\nend\r\n```\r\n\r\n6. Use `debug.getupvalue` to get the no validation version. Very useful when a trusty code block needs a performance improve. AKA `unsafe`.\r\n\r\n```lua\r\nlocal function _validate(func,vali)\r\n return function(...)\r\n  local e=select(\"#\",...)\r\n  for i=1,e do\r\n   vali[i][1]=select(i,...)\r\n  end\r\n  vim.validate(vali)\r\n  func(...)\r\n end\r\nend\r\nlocal function get_safe(fn)\r\n return select(2,debug.getupvalue(fn,2))\r\nend\r\nlocal std={}\r\nfunction std.print(str,str,str)\r\n print(str,str,str)\r\nend\r\nstd.print=_validate(std.print,{{nil,\"string\"},{nil,\"string\"},{nil,\"string\"}})\r\nlocal unsafe_print=get_safe(std.print)\r\nunsafe_print(1,2,3) -- no error\r\nstd.print(1,2,3) -- error: expect string\r\n```\r\n\r\n7. Add a max validation count parameter to `vim.validate`, so it doesn't need to declare the parameter amount at start.\r\n```lua\r\nlocal function _validate(func,vali)\r\n return function(...)\r\n  local e=select(\"#\",...)\r\n  for i=1,e do\r\n   vali[i][1]=select(i,...)\r\n  end\r\n  vim.validate(vali,e) -- there\r\n  func(...)\r\n end\r\nend\r\n```\r\n\r\n### Additional Notes\r\n- The results may vary depending on the system and Neovim configuration.\r\n- Further profiling and optimization may be required to fine-tune the performance improvements.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.11.0-dev-49+g10601ac5f Build type: RelWithDebInfo LuaJIT 2.1.1713484068\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nno\r\n\r\n### Operating system/version\r\n\r\nArch Linux x86_64, Linux 6.9.1-zen1-1-zen\r\n\r\n### Terminal name/version\r\n\r\nAlacritty\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbob use nightly",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I am sorry, I added a wrong label for this issue, I don't know how to change it. Sorry.",
            "created_at": "2024-05-22T19:27:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125592887",
            "id": 2125592887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-sfk3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125592887/reactions"
            },
            "updated_at": "2024-05-23T21:15:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125592887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim.validate` got a huge performance boost last week in https://github.com/neovim/neovim/pull/28758, are you using the a version that is after that got merged?",
            "created_at": "2024-05-22T19:31:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125601298",
            "id": 2125601298,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-shoS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125601298/reactions"
            },
            "updated_at": "2024-05-22T19:37:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125601298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yes, I use nightly. I think it has nothing to do with that. It slows, mainly because of the recreation of validation table.",
            "created_at": "2024-05-22T19:33:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125605136",
            "id": 2125605136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-sikQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125605136/reactions"
            },
            "updated_at": "2024-05-22T19:37:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125605136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion"
            }
        },
        {
            "author_association": "NONE",
            "body": "I tested, use a pre-created validation table will boost a lot.",
            "created_at": "2024-05-22T19:34:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125606596",
            "id": 2125606596,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-si7E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125606596/reactions"
            },
            "updated_at": "2024-05-22T19:34:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125606596",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion"
            }
        },
        {
            "author_association": "NONE",
            "body": "> NVIM v0.11.0-dev-49+g10601ac5f Build type: RelWithDebInfo LuaJIT 2.1.1713484068",
            "created_at": "2024-05-22T19:36:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125609607",
            "id": 2125609607,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-sjqH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125609607/reactions"
            },
            "updated_at": "2024-05-22T19:37:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125609607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Right, I missed the version. Yes, that is after that PR.",
            "created_at": "2024-05-22T19:36:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125610749",
            "id": 2125610749,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-sj79",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125610749/reactions"
            },
            "updated_at": "2024-05-22T19:37:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125610749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "NONE",
            "body": "I am currently in the GMT+8 time zone. I need to get some rest now, so I won't be able to respond immediately. I'll check messages again when I wake up. Bye.",
            "created_at": "2024-05-22T19:41:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125618089",
            "id": 2125618089,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-slup",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125618089/reactions"
            },
            "updated_at": "2024-05-22T19:44:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125618089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have had another benchmark of `vim.validate`, and ironically, the `vim.endswith`, which uses `string.sub` to test the trailer part of a string is equal to the `suffix`, and it's considered to be faster than `string.find`. But it's much slower than the `string.find`, which makes `vim.endswith` to be meaningless, that's because the over 99.9% of time are used to validate the input.\r\n```lua\r\n---@diagnostic disable\r\nlocal function test_speed(title,t,fn)\r\n local start_time=os.clock()\r\n local i=0\r\n while i<t do\r\n  fn()\r\n  i=i+1\r\n end\r\n local end_time=os.clock()\r\n local time_taken=end_time-start_time\r\n print(title..\": \"..t..\" times took \"..time_taken..\" seconds\")\r\nend\r\nlocal function endswith(str,suf)\r\n return #suf==0 or str:sub(- #suf)==suf\r\nend\r\nlocal t=10^7\r\ntest_speed(\"string.find\",t,function() string.find(\"xxxxxxxxx\",\"x$\") end)\r\ntest_speed(\"vim.endswith\",t,function() vim.endswith(\"xxxxxxxxx\",\"x\") end)\r\ntest_speed(\"endswith\",t,function() endswith(\"xxxxxxxxx\",\"x\") end)\r\n\r\n```\r\nThe outputs:\r\n```\r\n$ nvim --headless -l c.lua\r\nstring.find: 10000000 times took 1.423784 seconds\r\nvim.endswith: 10000000 times took 4.709016 seconds\r\nendswith: 10000000 times took 0.012759 seconds\r\n```",
            "created_at": "2024-05-22T23:28:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125939617",
            "id": 2125939617,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-t0Oh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125939617/reactions"
            },
            "updated_at": "2024-05-22T23:40:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125939617",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion"
            }
        },
        {
            "author_association": "NONE",
            "body": "Here are a few ideas I've been considering that could be implemented in the newer Neovim Lua standard library to enhance performance:\r\n\r\n- **`purify(fn, valilist)`**\r\n  - This function could add a parameter filter to a given function.\r\n  - It uses `vararg` to iterate every argument and apply check for validation.\r\n  - The `valilist` is always reused for performance.\r\n  - Alternatively, inline validation logic could be implemented for speed, as it might be more efficient than a function call.\r\n\r\n- **`unsafe(fn)`**\r\n  - This function would remove the filter added by `purify`.\r\n  - It could use `debug.getupvalue` to get the original function that was pasted in `purify`.\r\n  - This would allow for a performance boost in scenarios where safe.\r\n  - Another name considered is `depurify`.\r\n\r\n- **`flat_validate(opt)`**\r\n  - This is similar to `vim.validate`, but its input is a flat list.\r\n  - The given nested opt could be parsed to a flat list, which will be faster to iterate, and the existing validate table doesn't need to change\r\n  - It uses a loop like `for i=1, #opts, 3 do ... end` to get `val`, `types`, and `optional` to validate the given validation table.\r\n\r\n- **`Remove optional in validate(opt)`**\r\n  - For values that are not optional, an additional nil check for regular values is redundant.\r\n  - Using \"nil\" as a type check could be more efficient.\r\n  - Also work for flat_validate too.\r\n\r\n- **`Parse the given type list to a type set`**\r\n  - For example, in `purify(func, {1, {\"number\", \"string\"}})`, the given validation table could be parsed into a hash map like `{[\"number\"] = true, [\"string\"] = true}` first.\r\n  - This would greatly increase the type check speed for a union type.",
            "created_at": "2024-05-23T00:41:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2125995211",
            "id": 2125995211,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-uBzL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125995211/reactions"
            },
            "updated_at": "2024-05-23T00:53:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2125995211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
                "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
                "followers_url": "https://api.github.com/users/hoofcushion/followers",
                "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
                "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hoofcushion",
                "id": 32760059,
                "login": "hoofcushion",
                "node_id": "MDQ6VXNlcjMyNzYwMDU5",
                "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
                "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
                "repos_url": "https://api.github.com/users/hoofcushion/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hoofcushion"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> `vim.endswith`, which uses `string.sub` to test the trailer part of a string is equal to the `suffix`, and it's considered to be faster than `string.find`. But it's much slower than the `string.find`, which makes `vim.endswith` to be meaningless,\r\n\r\nAgreed. Also `vim.startswith`. Those need to be fixed, else they are useless.",
            "created_at": "2024-05-23T09:09:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2126612827",
            "id": 2126612827,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-wYlb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126612827/reactions"
            },
            "updated_at": "2024-05-23T09:09:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2126612827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Aside from any performance issues, we can limit `vim.validate` to top-level/\"public\" functions. Imo there's no reason to use `vim.validate` over `assert` for internal/private/`local` functions. `assert` will always be faster.",
            "created_at": "2024-05-23T15:08:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/28921#issuecomment-2127381918",
            "id": 2127381918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28921",
            "node_id": "IC_kwDOAPphoM5-zUWe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2127381918/reactions"
            },
            "updated_at": "2024-05-23T15:08:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2127381918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28921/comments",
    "created_at": "2024-05-22T19:21:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28921/events",
    "html_url": "https://github.com/neovim/neovim/issues/28921",
    "id": 2311311869,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28921/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 19,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "",
        "due_on": "2024-10-31T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 55,
        "state": "open",
        "title": "0.11",
        "updated_at": "2024-05-26T17:54:08Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "I_kwDOAPphoM6Jw9H9",
    "number": 28921,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 7,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 7,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28921/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28921/timeline",
    "title": "performance: vim.validate, vim.startswith, vim.endswith are slow",
    "updated_at": "2024-05-25T12:22:03Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28921",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32760059?v=4",
        "events_url": "https://api.github.com/users/hoofcushion/events{/privacy}",
        "followers_url": "https://api.github.com/users/hoofcushion/followers",
        "following_url": "https://api.github.com/users/hoofcushion/following{/other_user}",
        "gists_url": "https://api.github.com/users/hoofcushion/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hoofcushion",
        "id": 32760059,
        "login": "hoofcushion",
        "node_id": "MDQ6VXNlcjMyNzYwMDU5",
        "organizations_url": "https://api.github.com/users/hoofcushion/orgs",
        "received_events_url": "https://api.github.com/users/hoofcushion/received_events",
        "repos_url": "https://api.github.com/users/hoofcushion/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hoofcushion/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hoofcushion/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hoofcushion"
    }
}