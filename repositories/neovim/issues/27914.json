{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nThe filetype of a symlink target file whose path matches with `pattern` in filetype.lua isn't set. This issue occurs when a symlink **source file** path mismatches with `pattern`, and a **target file** path matches with it, and doesn't reproduce in Vim. \r\n\r\nThe following table shows the difference in filetype between opening the source file and the opening target file of symlink when the source file path matches or mismatches.\r\n\r\nin Neovim:\r\n|| matching source path with `pattern` | NOT matching source path with `pattern` |\r\n| --- | :---: | :---: |\r\n| source file | set | not set |\r\n| target file | set | **not set** |\r\n\r\nin Vim:\r\n|| matching source path with `pattern` | NOT matching source path with `pattern` |\r\n| --- | :---: | :---: |\r\n| source file | set | not set |\r\n| target file | set | **set** |\r\n\r\n### Steps to reproduce\r\n\r\n1. `source setup.sh` for setup\r\n\r\n`setup.sh`\r\n```sh\r\nexport mismatched=$(mktemp -d)\r\nexport matched=$(mktemp -d)\r\nmkdir -p config/git .config/git $mismatched/.config $matched/.config\r\ntouch config/git/config .config/git/config\r\nln -s $PWD/config/git $mismatched/.config/git\r\nln -s $PWD/.config/git $matched/.config/git\r\n```\r\n\r\n2. `nvim --clean -S minimal.vim`\r\n  The first and second filetypes are `filetype=`, and the others are `filetype=gitconfig`.\r\n3. `vim --clean -S minimal.vim`\r\n  Only the first filetype is `filetype=`, and the others are `filtype=gitconfig`.\r\n\r\n`minimal.vim`\r\n```vim\r\n\" Makes Vim message format the same as Neovim message format\r\nset shortmess=ltToOCF\r\nfiletype on\r\n\r\necho 'mismatched, actual file'\r\ne config/git/config\r\nset ft?\r\nbw\r\n\r\necho 'mismatched, symlinked file'\r\ne $mismatched/.config/git/config\r\nset ft?\r\nbw\r\n\r\necho 'matched, actual file'\r\ne .config/git/config\r\nset ft?\r\nbw\r\n\r\necho 'matched, symlinked file'\r\ne $matched/.config/git/config\r\nset ft?\r\nbw\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe filetype of a symlink **target file** whose path matches with `pattern` when a **source file** path mismatches with `pattern` should be set the same as in Vim.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-2632+ge3bd04f2a\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nno, Vim version 9.1.151\r\n\r\n### Operating system/version\r\n\r\nArch Linux on WSL\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.13.1 (fe2a3c56)\r\n\r\n### $TERM environment variable\r\n\r\ntmux-256color\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": "2024-03-23T03:46:24Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Must be Windows-specific (symlinks usually are...); seems to work fine in macOS (but not 100% sure since the expected description is a bit confusing to me -- can you just post the literal output? -- and I get `E79: Cannot expand wildcards`).\r\n\r\nBy the way, you should test with `nvim --clean`, not `-u NONE`.",
            "created_at": "2024-03-18T16:55:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/27914#issuecomment-2004449837",
            "id": 2004449837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27914",
            "node_id": "IC_kwDOAPphoM53eXot",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2004449837/reactions"
            },
            "updated_at": "2024-03-18T16:55:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2004449837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "I apologize for any confusion. I updated the steps to reproduce; the first step update is to use the `source` shell command and to stop using the `realpath` command; the second and third steps are to use `--clean` not `-u NONE`.\r\n\r\nI can reproduce it in old macOS (12.7.2).\r\n\r\nThe outputs of the second and third steps are below.\r\nin Neovim:\r\n```\r\nmismatched, actual file\r\n  filetype=\r\nmismatched, symlinked file\r\n  filetype=\r\nmatched, actual file\r\n  filetype=gitconfig\r\nmatched, symlinked file\r\n  filetype=gitconfig\r\n```\r\n\r\nin Vim:\r\n```\r\nmismatched, actual file\r\n  filetype=\r\nmismatched, symlinked file\r\n  filetype=gitconfig\r\nmatched, actual file\r\n  filetype=gitconfig\r\nmatched, symlinked file\r\n  filetype=gitconfig\r\n```\r\n\r\nThis is a GIF in which I reproduced this issue.\r\n![filetype](https://github.com/neovim/neovim/assets/10758173/31ac148a-ae9d-445b-9c96-821cf5c1aa6d)\r\n",
            "created_at": "2024-03-18T18:11:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/27914#issuecomment-2004612831",
            "id": 2004612831,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27914",
            "node_id": "IC_kwDOAPphoM53e_bf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2004612831/reactions"
            },
            "updated_at": "2024-03-18T18:11:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2004612831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10758173?v=4",
                "events_url": "https://api.github.com/users/hexium310/events{/privacy}",
                "followers_url": "https://api.github.com/users/hexium310/followers",
                "following_url": "https://api.github.com/users/hexium310/following{/other_user}",
                "gists_url": "https://api.github.com/users/hexium310/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hexium310",
                "id": 10758173,
                "login": "hexium310",
                "node_id": "MDQ6VXNlcjEwNzU4MTcz",
                "organizations_url": "https://api.github.com/users/hexium310/orgs",
                "received_events_url": "https://api.github.com/users/hexium310/received_events",
                "repos_url": "https://api.github.com/users/hexium310/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hexium310/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hexium310/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hexium310"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, with these steps I can reproduce. I'll have to investigate, but if this is indeed due to how libuv handles symlinks, I'm afraid this will be \"wontfix\" as the general benefits of the Lua implementation vastly outweigh this frankly niche-looking edge case.",
            "created_at": "2024-03-18T18:15:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/27914#issuecomment-2004620207",
            "id": 2004620207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27914",
            "node_id": "IC_kwDOAPphoM53fBOv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2004620207/reactions"
            },
            "updated_at": "2024-03-18T18:15:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2004620207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related https://github.com/neovim/neovim/pull/19218#issuecomment-1173493550\r\n\r\nUsing `args.file` instead of `args.match` solves the problem:\r\n```diff\r\ndiff --git a/runtime/filetype.lua b/runtime/filetype.lua\r\nindex 3f2a7c296..a540ec6e0 100644\r\n--- a/runtime/filetype.lua\r\n+++ b/runtime/filetype.lua\r\n@@ -11,7 +11,7 @@ vim.api.nvim_create_autocmd({ 'BufRead', 'BufNewFile', 'StdinReadPost' }, {\r\n     if not vim.api.nvim_buf_is_valid(args.buf) then\r\n       return\r\n     end\r\n-    local ft, on_detect = vim.filetype.match({ filename = args.match, buf = args.buf })\r\n+    local ft, on_detect = vim.filetype.match({ filename = args.file, buf = args.buf })\r\n     if not ft then\r\n       -- Generic configuration file used as fallback\r\n       ft = require('vim.filetype.detect').conf(args.file, args.buf)\r\n```",
            "created_at": "2024-03-18T23:47:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/27914#issuecomment-2005328835",
            "id": 2005328835,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27914",
            "node_id": "IC_kwDOAPphoM53huPD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2005328835/reactions"
            },
            "updated_at": "2024-03-19T00:12:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2005328835",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Actually using `args.file` isn't the correct solution either, because it may be the resolved path if `expand('<afile>')` has been called previously. Instead it seems necessary to use `bufname()`.\r\n```diff\r\ndiff --git a/runtime/filetype.lua b/runtime/filetype.lua\r\nindex 3f2a7c296..2c2142174 100644\r\n--- a/runtime/filetype.lua\r\n+++ b/runtime/filetype.lua\r\n@@ -11,7 +11,10 @@ vim.api.nvim_create_autocmd({ 'BufRead', 'BufNewFile', 'StdinReadPost' }, {\r\n     if not vim.api.nvim_buf_is_valid(args.buf) then\r\n       return\r\n     end\r\n-    local ft, on_detect = vim.filetype.match({ filename = args.match, buf = args.buf })\r\n+    local ft, on_detect = vim.filetype.match({\r\n+      filename = vim.fn.bufname(args.buf),\r\n+      buf = args.buf,\r\n+    })\r\n     if not ft then\r\n       -- Generic configuration file used as fallback\r\n       ft = require('vim.filetype.detect').conf(args.file, args.buf)\r\n```",
            "created_at": "2024-03-19T12:13:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/27914#issuecomment-2007023852",
            "id": 2007023852,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27914",
            "node_id": "IC_kwDOAPphoM53oMDs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2007023852/reactions"
            },
            "updated_at": "2024-03-19T12:28:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2007023852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27914/comments",
    "created_at": "2024-03-18T16:44:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27914/events",
    "html_url": "https://github.com/neovim/neovim/issues/27914",
    "id": 2192733742,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filetype detection, filetype.lua",
            "id": 3708202139,
            "name": "filetype",
            "node_id": "LA_kwDOAPphoM7dBqyb",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filetype"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27914/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6CsnYu",
    "number": 27914,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27914/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27914/timeline",
    "title": "`filetype` of symlink target file is not set",
    "updated_at": "2024-03-23T03:46:24Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27914",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10758173?v=4",
        "events_url": "https://api.github.com/users/hexium310/events{/privacy}",
        "followers_url": "https://api.github.com/users/hexium310/followers",
        "following_url": "https://api.github.com/users/hexium310/following{/other_user}",
        "gists_url": "https://api.github.com/users/hexium310/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/hexium310",
        "id": 10758173,
        "login": "hexium310",
        "node_id": "MDQ6VXNlcjEwNzU4MTcz",
        "organizations_url": "https://api.github.com/users/hexium310/orgs",
        "received_events_url": "https://api.github.com/users/hexium310/received_events",
        "repos_url": "https://api.github.com/users/hexium310/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/hexium310/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/hexium310/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/hexium310"
    }
}