{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nOmnisharp version 1.39.11\r\nNeovim version 0.9.5\r\nPlatform: Windows & Linux (not tested on mac)\r\n\r\nOmnisharp language server seems to return \"null\" on some communications.\r\nThis are currently not handled in neovim and therefore we see this error.\r\nWould be interesting if someone who is more knowledge regarding LSP's could chime in on this.\r\n\r\nThere is an issue open in Omnisharp's github too regarding this: https://github.com/OmniSharp/omnisharp-roslyn/issues/2574\r\n\r\nI have pinpointed the \"error\" to Client:handle_body function in rpc.lua\r\nthe pcall to vim.json.decode returns ok and therefore the code will continue and start checking underlying properties on decoded (that is nil) variable.\r\n\r\n```lua\r\n  local ok, decoded = pcall(vim.json.decode, body, { luanil = { object = true } })\r\n  if not ok then\r\n    self:on_error(client_errors.INVALID_SERVER_JSON, decoded)\r\n    return\r\n  end\r\n  local _ = log.debug() and log.debug('rpc.receive', decoded)\r\n\r\n  if type(decoded.method) == 'string' and decoded.id then\r\n  -- ...\r\n```\r\n\r\nIf we would include an check if decoded is nil and return the error stop happening. But I'm unsure if that is an expected behavior.\r\n\r\n```lua\r\n  local ok, decoded = pcall(vim.json.decode, body, { luanil = { object = true } })\r\n  -- ...\r\n\r\n  if decoded == nil then\r\n    return\r\n  end\r\n  if type(decoded.method) == 'string' and decoded.id then\r\n  -- ...\r\n```\r\n\r\nWould be interesting if someone who is more knowledge regarding LSP's could chime in on this.\r\n\r\n\r\nStacktrace:\r\n```text\r\nError executing luv callback:\r\nC:\\opt\\nvim\\share\\nvim\\runtime/lua/vim/lsp/rpc.lua:393: attempt to index local 'decoded' (a nil value)\r\nstack traceback:\r\n        C:\\opt\\nvim\\share\\nvim\\runtime/lua/vim/lsp/rpc.lua:393: in function 'handle_body'\r\n        C:\\opt\\nvim\\share\\nvim\\runtime/lua/vim/lsp/rpc.lua:743: in function 'handle_body'\r\n        C:\\opt\\nvim\\share\\nvim\\runtime/lua/vim/lsp/rpc.lua:263: in function <C:\\opt\\nvim\\share\\nvim\\runtime/lua/vim/lsp/rpc.lua:247>\r\n```\r\n\r\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\r\n\r\nopen an .cs file. it is a ~70% chance that Omnisharp lsp server will return null\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.9.5\r\n\r\n### Language server name/version\r\n\r\nOmnisharp 1.39.11\r\n\r\n### Operating system/version\r\n\r\nWindows 11\r\n\r\n### Log file\r\n\r\n_No response_",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the report. Can you try the development version? \r\n\r\n- The [Releases](https://github.com/neovim/neovim/releases/tag/nightly) page has pre-built archives for Linux/Windows/macOS. \r\n- Check `:version` to confirm that you are using the latest version.",
            "created_at": "2024-02-08T21:07:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/27395#issuecomment-1934934984",
            "id": 1934934984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27395",
            "node_id": "IC_kwDOAPphoM5zVMPI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1934934984/reactions"
            },
            "updated_at": "2024-02-08T21:07:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1934934984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Note that some servers won't respect the LSP regarding when a null response is allowed, and in those cases we shouldn't accommodate invalid responses. Either we ask the respective language server to follow the protocol, or create an issue in [the specs](https://github.com/microsoft/language-server-protocol) for clarity on how to deal with these scenarios.\r\n\r\nWe have seen this happen in the past: https://github.com/neovim/neovim/pull/26957",
            "created_at": "2024-02-09T03:50:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/27395#issuecomment-1935294007",
            "id": 1935294007,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27395",
            "node_id": "IC_kwDOAPphoM5zWj43",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935294007/reactions"
            },
            "updated_at": "2024-02-09T03:50:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935294007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also it seems like this is related to https://github.com/neovim/neovim/pull/27148, and I think @wookayin gave a great response about our stand here: https://github.com/neovim/neovim/pull/27148#discussion_r1463344910",
            "created_at": "2024-02-09T05:16:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/27395#issuecomment-1935347881",
            "id": 1935347881,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27395",
            "node_id": "IC_kwDOAPphoM5zWxCp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935347881/reactions"
            },
            "updated_at": "2024-02-09T05:16:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935347881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Also it seems like this is related to #27148, and I think @wookayin gave a great response about our stand here: [#27148 (comment)](https://github.com/neovim/neovim/pull/27148#discussion_r1463344910)\r\n\r\nI'm sorry I missed that issue when I tried to find related issue.\r\n\r\nI agree and I will take a closer look on both Omnisharp and their csharp-language-server-protocol to see if I can find the bug and open an issue there instead",
            "created_at": "2024-02-09T12:14:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/27395#issuecomment-1935823020",
            "id": 1935823020,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27395",
            "node_id": "IC_kwDOAPphoM5zYlCs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935823020/reactions"
            },
            "updated_at": "2024-02-09T12:14:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935823020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1667313?v=4",
                "events_url": "https://api.github.com/users/teast/events{/privacy}",
                "followers_url": "https://api.github.com/users/teast/followers",
                "following_url": "https://api.github.com/users/teast/following{/other_user}",
                "gists_url": "https://api.github.com/users/teast/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/teast",
                "id": 1667313,
                "login": "teast",
                "node_id": "MDQ6VXNlcjE2NjczMTM=",
                "organizations_url": "https://api.github.com/users/teast/orgs",
                "received_events_url": "https://api.github.com/users/teast/received_events",
                "repos_url": "https://api.github.com/users/teast/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/teast/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teast/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/teast"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27395/comments",
    "created_at": "2024-02-08T21:00:11Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27395/events",
    "html_url": "https://github.com/neovim/neovim/issues/27395",
    "id": 2126060928,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "waiting for reply from the author",
            "id": 248229439,
            "name": "needs:response",
            "node_id": "MDU6TGFiZWwyNDgyMjk0Mzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:response"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27395/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5-uR2A",
    "number": 27395,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27395/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27395/timeline",
    "title": "Omnisharp Lsp server return \"null\" not handled in Neovim",
    "updated_at": "2024-02-09T16:14:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27395",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1667313?v=4",
        "events_url": "https://api.github.com/users/teast/events{/privacy}",
        "followers_url": "https://api.github.com/users/teast/followers",
        "following_url": "https://api.github.com/users/teast/following{/other_user}",
        "gists_url": "https://api.github.com/users/teast/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/teast",
        "id": 1667313,
        "login": "teast",
        "node_id": "MDQ6VXNlcjE2NjczMTM=",
        "organizations_url": "https://api.github.com/users/teast/orgs",
        "received_events_url": "https://api.github.com/users/teast/received_events",
        "repos_url": "https://api.github.com/users/teast/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/teast/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/teast/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/teast"
    }
}