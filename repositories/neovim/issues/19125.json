{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Neovim version (nvim -v)\n\nNVIM v0.7.2\n\n### Vim (not Nvim) behaves the same?\n\nno, vim 8.2.5046\n\n### Operating system/version\n\nArchLinux\n\n### Terminal name/version\n\nKonsole 22.04.2 / TMux 3.3_a\n\n### $TERM environment variable\n\nscreen-256color\n\n### Installation\n\nArchLinux community repository\n\n### How to reproduce the issue\n\nnvim --clean\r\n:let &stl = \"hello\"\r\n:let &stl .= \" world\"\n\n### Expected behavior\n\nStatus line should read: `hello world`\n\n### Actual behavior\n\nStatus line reads: ` world`",
    "closed_at": "2022-08-21T22:37:33Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Works for me. (Sorry, not sure what else I can say here.)\r\n",
            "created_at": "2022-06-27T16:49:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1167601154",
            "id": 1167601154,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FmC4C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1167601154/reactions"
            },
            "updated_at": "2022-06-27T16:51:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1167601154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Seems only reproducible with Arch Linux community package, not with appimage.",
            "created_at": "2022-06-27T21:47:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1167944557",
            "id": 1167944557,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FnWtt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 3,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1167944557/reactions"
            },
            "updated_at": "2022-06-27T21:47:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1167944557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's very strange that this bug is only present in `Release` build, but not in `RelWithDebInfo` or `Debug` build, so this may be a bug in GCC 12.",
            "created_at": "2022-06-27T22:43:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1168000495",
            "id": 1168000495,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FnkXv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168000495/reactions"
            },
            "updated_at": "2022-06-27T22:43:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168000495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Using `objdump`, I found a problem:\r\n\r\nAt the beginning of `ex_let_one()`, `arg` is stored in `%rdi`, and is copied to both `%r14` and `0x28(%rsp)`:\r\n```\r\n  112070:\t41 57                \tpush   %r15\r\n  112072:\t41 89 cf             \tmov    %ecx,%r15d\r\n  112075:\t41 56                \tpush   %r14\r\n  112077:\t49 89 fe             \tmov    %rdi,%r14\r\n  11207a:\t41 55                \tpush   %r13\r\n  11207c:\t49 89 f5             \tmov    %rsi,%r13\r\n  11207f:\t41 54                \tpush   %r12\r\n  112081:\t4d 89 c4             \tmov    %r8,%r12\r\n  112084:\t55                   \tpush   %rbp\r\n  112085:\t4c 89 cd             \tmov    %r9,%rbp\r\n  112088:\t53                   \tpush   %rbx\r\n  112089:\t48 81 ec d8 00 00 00 \tsub    $0xd8,%rsp\r\n  112090:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\r\n  112095:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\r\n```\r\n\r\n`find_option_end()` modifies the value stored in `0x28(%rsp)`, while the value in `%r14` is still the initial value of `arg`:\r\n```\r\n  1121e4:\t48 8d 74 24 34       \tlea    0x34(%rsp),%rsi\r\n  1121e9:\t48 8d 7c 24 28       \tlea    0x28(%rsp),%rdi\r\n  1121ee:\te8 8d f3 00 00       \tcall   121580 <find_option_end.lto_priv.0>\r\n```\r\n\r\n`%r14` instead of `0x28(%rsp)` is passed to `get_option_value()` here, causing `get_option_value()` to fail to find the option:\r\n```\r\n  1126e6:\t8b 4c 24 34          \tmov    0x34(%rsp),%ecx\r\n  1126ea:\t0f 84 b0 fb ff ff    \tje     1122a0 <ex_let_one+0x230>\r\n  1126f0:\t4c 89 44 24 18       \tmov    %r8,0x18(%rsp)\r\n  1126f5:\t48 8d 54 24 38       \tlea    0x38(%rsp),%rdx\r\n  1126fa:\t4c 89 fe             \tmov    %r15,%rsi\r\n  1126fd:\t4c 89 f7             \tmov    %r14,%rdi\r\n  112700:\t89 4c 24 08          \tmov    %ecx,0x8(%rsp)\r\n  112704:\t48 89 44 24 10       \tmov    %rax,0x10(%rsp)\r\n  112709:\t67 e8 71 2f 14 00    \taddr32 call 255680 <get_option_value>\r\n```\r\n\r\nMeanwhile, `0x28(%rsp)` is passed correctly to `set_option_value()`:\r\n```\r\n  112296:\t8b 4c 24 34          \tmov    0x34(%rsp),%ecx\r\n  11229a:\t45 31 d2             \txor    %r10d,%r10d\r\n  11229d:\t45 31 c9             \txor    %r9d,%r9d\r\n  1122a0:\t4c 89 54 24 08       \tmov    %r10,0x8(%rsp)\r\n  1122a5:\t48 8b 7c 24 28       \tmov    0x28(%rsp),%rdi\r\n  1122aa:\t4c 89 ca             \tmov    %r9,%rdx\r\n  1122ad:\t4c 89 c6             \tmov    %r8,%rsi\r\n  1122b0:\t67 e8 4a 4f 14 00    \taddr32 call 257200 <set_option_value>\r\n```",
            "created_at": "2022-06-28T03:21:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1168171644",
            "id": 1168171644,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FoOJ8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168171644/reactions"
            },
            "updated_at": "2022-06-28T04:00:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168171644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What's stranger is that if I pass the value of `p` to an external function in `find_option_end()`, this bug no longer happens:\r\n```diff\r\ndiff --git a/src/nvim/eval.c b/src/nvim/eval.c\r\nindex 7b6e954b3..732837f4f 100644\r\n--- a/src/nvim/eval.c\r\n+++ b/src/nvim/eval.c\r\n@@ -9547,6 +9547,7 @@ static const char *find_option_end(const char **const arg, int *const opt_flags)\r\n     return NULL;\r\n   }\r\n   *arg = p;\r\n+  (void)_(p);\r\n \r\n   if (p[0] == 't' && p[1] == '_' && p[2] != NUL && p[3] != NUL) {\r\n     p += 4;  // t_xx/termcap option\r\n```",
            "created_at": "2022-06-28T03:43:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1168183923",
            "id": 1168183923,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FoRJz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168183923/reactions"
            },
            "updated_at": "2022-06-28T03:43:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168183923",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "My setup broke because I used `let &runtimepath .=` and got hit with this bug.\r\n\r\nBuilding with `-fno-strict-aliasing` helps. Maybe because `char` and `char_u` shouldn't alias?\r\n\r\nLooks like there's been some work to replace `char_u` with `char`. Is this still broken on master?",
            "created_at": "2022-06-28T08:27:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1168402756",
            "id": 1168402756,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FpGlE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168402756/reactions"
            },
            "updated_at": "2022-06-28T08:27:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168402756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/204006?v=4",
                "events_url": "https://api.github.com/users/heftig/events{/privacy}",
                "followers_url": "https://api.github.com/users/heftig/followers",
                "following_url": "https://api.github.com/users/heftig/following{/other_user}",
                "gists_url": "https://api.github.com/users/heftig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/heftig",
                "id": 204006,
                "login": "heftig",
                "node_id": "MDQ6VXNlcjIwNDAwNg==",
                "organizations_url": "https://api.github.com/users/heftig/orgs",
                "received_events_url": "https://api.github.com/users/heftig/received_events",
                "repos_url": "https://api.github.com/users/heftig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/heftig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/heftig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/heftig"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`char_u` and `char` are allowed to alias. Seems like a compiler bug.",
            "created_at": "2022-06-28T09:37:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1168482280",
            "id": 1168482280,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FpZ_o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168482280/reactions"
            },
            "updated_at": "2022-06-28T09:37:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1168482280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've ran into the same issue earlier today.\r\n\r\n> char_u and char are allowed to alias. Seems like a compiler bug.\r\n\r\nYes, char_u and char are allowed to alias, but we're casting `char_u**` to `char**`, which are unrelated pointer types.",
            "created_at": "2022-06-28T18:35:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169086965",
            "id": 1169086965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Frtn1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169086965/reactions"
            },
            "updated_at": "2022-06-28T18:35:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169086965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9192733?v=4",
                "events_url": "https://api.github.com/users/foonathan/events{/privacy}",
                "followers_url": "https://api.github.com/users/foonathan/followers",
                "following_url": "https://api.github.com/users/foonathan/following{/other_user}",
                "gists_url": "https://api.github.com/users/foonathan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/foonathan",
                "id": 9192733,
                "login": "foonathan",
                "node_id": "MDQ6VXNlcjkxOTI3MzM=",
                "organizations_url": "https://api.github.com/users/foonathan/orgs",
                "received_events_url": "https://api.github.com/users/foonathan/received_events",
                "repos_url": "https://api.github.com/users/foonathan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/foonathan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/foonathan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/foonathan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  we're casting char_u** to char**, which are unrelated pointer types.\r\n\r\nBoth are addresses of pointers to arbitrary bytes of memory, they are pretty much as related as two pointer types ever could be. But it seems even byte-level addressing is something that GCC wants to fuck up because some footnote to a footnote in the standard could be interpreted as allowing to fuck it up.",
            "created_at": "2022-06-29T08:13:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169671584",
            "id": 1169671584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Ft8Wg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169671584/reactions"
            },
            "updated_at": "2022-06-29T08:13:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169671584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I believe type compatibility is preserved by pointers, i.e. *if `T` and `U` are compatible, then `T*` and `U*` are compatible*, and thus `T**` and `U**` are compatible, etc. \r\n\r\nThat said, if you don't want to worry about the standard's aliasing rules you should add the `-fno-strict-aliasing` to the compiler flags.",
            "created_at": "2022-06-29T08:43:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169700589",
            "id": 1169700589,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FuDbt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169700589/reactions"
            },
            "updated_at": "2022-06-29T08:43:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169700589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/204006?v=4",
                "events_url": "https://api.github.com/users/heftig/events{/privacy}",
                "followers_url": "https://api.github.com/users/heftig/followers",
                "following_url": "https://api.github.com/users/heftig/following{/other_user}",
                "gists_url": "https://api.github.com/users/heftig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/heftig",
                "id": 204006,
                "login": "heftig",
                "node_id": "MDQ6VXNlcjIwNDAwNg==",
                "organizations_url": "https://api.github.com/users/heftig/orgs",
                "received_events_url": "https://api.github.com/users/heftig/received_events",
                "repos_url": "https://api.github.com/users/heftig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/heftig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/heftig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/heftig"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I believe type compatibility is preserved by pointers, i.e. if T and U are compatible, then T* and U* are compatible, and thus T** and U** are compatible, etc.\r\n\r\nType compatibility isn't relevant here, strict aliasing is. The code tries to access a `char_u*` via a pointer to `char*`, which is undefined behavior: https://eel.is/c++draft/basic.lval\r\n\r\n> That said, if you don't want to worry about the standard's aliasing rules you should add the -fno-strict-aliasing to the compiler flags.\r\n\r\nCan the flag be added to the build system by default? Because otherwise, the compiler is pretty much allowed to do that, and getting a ton of `unknown option &foo` errors on startup because every single `let &foo = bar` is broken, having to debug that, and then having to rebuild, isn't great user experience.",
            "created_at": "2022-06-29T09:23:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169744305",
            "id": 1169744305,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FuOGx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169744305/reactions"
            },
            "updated_at": "2022-06-29T12:42:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169744305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9192733?v=4",
                "events_url": "https://api.github.com/users/foonathan/events{/privacy}",
                "followers_url": "https://api.github.com/users/foonathan/followers",
                "following_url": "https://api.github.com/users/foonathan/following{/other_user}",
                "gists_url": "https://api.github.com/users/foonathan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/foonathan",
                "id": 9192733,
                "login": "foonathan",
                "node_id": "MDQ6VXNlcjkxOTI3MzM=",
                "organizations_url": "https://api.github.com/users/foonathan/orgs",
                "received_events_url": "https://api.github.com/users/foonathan/received_events",
                "repos_url": "https://api.github.com/users/foonathan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/foonathan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/foonathan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/foonathan"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Type compatibility isn't relevant here, strict aliasing is. The code tries to access a char_u* via a pointer to char*, which is undefined behavior: https://eel.is/c++draft/basic.lval\r\n\r\nThat's C++, not C. The languages have very different rules. See https://gist.github.com/shafik/848ae25ee209f698763cffee272a58f8 for a pretty good overview.",
            "created_at": "2022-06-29T09:32:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169756046",
            "id": 1169756046,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FuQ-O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169756046/reactions"
            },
            "updated_at": "2022-06-29T09:32:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169756046",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/204006?v=4",
                "events_url": "https://api.github.com/users/heftig/events{/privacy}",
                "followers_url": "https://api.github.com/users/heftig/followers",
                "following_url": "https://api.github.com/users/heftig/following{/other_user}",
                "gists_url": "https://api.github.com/users/heftig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/heftig",
                "id": 204006,
                "login": "heftig",
                "node_id": "MDQ6VXNlcjIwNDAwNg==",
                "organizations_url": "https://api.github.com/users/heftig/orgs",
                "received_events_url": "https://api.github.com/users/heftig/received_events",
                "repos_url": "https://api.github.com/users/heftig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/heftig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/heftig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/heftig"
            }
        },
        {
            "author_association": "NONE",
            "body": "Ahh, it's a C source file, my bad.\r\n\r\n> I believe type compatibility is preserved by pointers, i.e. if T and U are compatible, then T* and U* are compatible, and thus T** and U** are compatible, etc.\r\n\r\nThen this applies, but char and unsigned char are not compatible types (C11 standard, section 6.2.7 - it's copyrighted, so I can only link to cppreference: https://en.cppreference.com/w/c/language/type#Compatible_types).",
            "created_at": "2022-06-29T09:41:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169765015",
            "id": 1169765015,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FuTKX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169765015/reactions"
            },
            "updated_at": "2022-06-29T09:41:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169765015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9192733?v=4",
                "events_url": "https://api.github.com/users/foonathan/events{/privacy}",
                "followers_url": "https://api.github.com/users/foonathan/followers",
                "following_url": "https://api.github.com/users/foonathan/following{/other_user}",
                "gists_url": "https://api.github.com/users/foonathan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/foonathan",
                "id": 9192733,
                "login": "foonathan",
                "node_id": "MDQ6VXNlcjkxOTI3MzM=",
                "organizations_url": "https://api.github.com/users/foonathan/orgs",
                "received_events_url": "https://api.github.com/users/foonathan/received_events",
                "repos_url": "https://api.github.com/users/foonathan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/foonathan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/foonathan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/foonathan"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Look for document N2176; it's the final draft of the C17 standard and publicly available.\r\n\r\nAnd yeah, you're right. The types aren't compatible.",
            "created_at": "2022-06-29T09:58:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169782348",
            "id": 1169782348,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FuXZM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169782348/reactions"
            },
            "updated_at": "2022-06-29T09:58:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169782348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/204006?v=4",
                "events_url": "https://api.github.com/users/heftig/events{/privacy}",
                "followers_url": "https://api.github.com/users/heftig/followers",
                "following_url": "https://api.github.com/users/heftig/following{/other_user}",
                "gists_url": "https://api.github.com/users/heftig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/heftig",
                "id": 204006,
                "login": "heftig",
                "node_id": "MDQ6VXNlcjIwNDAwNg==",
                "organizations_url": "https://api.github.com/users/heftig/orgs",
                "received_events_url": "https://api.github.com/users/heftig/received_events",
                "repos_url": "https://api.github.com/users/heftig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/heftig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/heftig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/heftig"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So it looks like this is a plan:\r\n\r\n1. set `-fno-strict-aliasing` for now, to fix the build (backport to 0.7.x)\r\n2. in order to remove `-fno-strict-aliasing`, we need these changes:\r\n    - anywhere we are casting to `(char **)`, change the `char_u**` source to `char**` and remove the cast \r\n    - anywhere we are casting to `(char_u **)`, change the `char_u**` target to `char**` and remove the cast  \r\n\r\nAdded wiki page: https://github.com/neovim/neovim/wiki/Removing-char_u",
            "created_at": "2022-06-29T11:41:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169877648",
            "id": 1169877648,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5FuuqQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169877648/reactions"
            },
            "updated_at": "2022-06-29T12:04:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169877648",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Look for document N2176; it's the final draft of the C17 standard and publicly available\r\n\r\nidk about N2176, but here's an older version: http://port70.net/~nsz/c/c99/n1256.html#6.5p7\r\n\r\n> An object shall have its stored value accessed only by an lvalue expression that has one of the following types\r\n> ...\r\n> a type that is the signed or unsigned type corresponding to the effective type of the object,\r\n\r\nThat seems to allow char_u <=> char, no?\r\n\r\nThough this part is interesting:\r\n\r\n```\r\nBetween the previous and next sequence point an object shall have its stored value modified at most once by the evaluation of an expression.[72)](http://port70.net/~nsz/c/c99/n1256.html#note72) Furthermore, the prior value shall be read only to determine the value to be stored.[73)](http://port70.net/~nsz/c/c99/n1256.html#note73)\r\n\r\nThis renders undefined statement expressions such as\r\n\r\n            i = ++i + 1;\r\n            a[i++] = i;\r\nwhile allowing\r\n            i = i + 1;\r\n            a[i] = i;\r\n```\r\n ",
            "created_at": "2022-06-29T11:56:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169890943",
            "id": 1169890943,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Fux5_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169890943/reactions"
            },
            "updated_at": "2022-06-29T12:02:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169890943",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> That seems to allow char_u <=> char, no?\r\n\r\nYes, but only directly: You can access a `char` via a `char_u*`. Accessing a `char*` via a `char_u**` remains undefined.\r\n\r\n`char*` is a pointer and has no \"corresponding unsigned type\".",
            "created_at": "2022-06-29T12:05:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169899002",
            "id": 1169899002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Fuz36",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169899002/reactions"
            },
            "updated_at": "2022-06-29T12:07:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169899002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/204006?v=4",
                "events_url": "https://api.github.com/users/heftig/events{/privacy}",
                "followers_url": "https://api.github.com/users/heftig/followers",
                "following_url": "https://api.github.com/users/heftig/following{/other_user}",
                "gists_url": "https://api.github.com/users/heftig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/heftig",
                "id": 204006,
                "login": "heftig",
                "node_id": "MDQ6VXNlcjIwNDAwNg==",
                "organizations_url": "https://api.github.com/users/heftig/orgs",
                "received_events_url": "https://api.github.com/users/heftig/received_events",
                "repos_url": "https://api.github.com/users/heftig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/heftig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/heftig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/heftig"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yes, but only directly: You can access a `char` via a `char_u*`. Accessing a `char*` via a `char_u**` remains undefined.\r\n\r\nAh, undefined here literally means \"they don't address it at all in the standard\"? That's hilarious. So the way to figure out how C works is to comb through every sentence in the standard and then decide if the exact thing you want to do was or wasn't explicitly mentioned.",
            "created_at": "2022-06-29T12:12:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169904956",
            "id": 1169904956,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Fu1U8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169904956/reactions"
            },
            "updated_at": "2022-06-29T12:13:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169904956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, anything which is not specified in exact detail in the standard in enough lawyer-proof language can be reinterpreted in any new compiler version to screw over working code that more or less universally was accepted by all existing compilers.",
            "created_at": "2022-06-29T12:16:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169908701",
            "id": 1169908701,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Fu2Pd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 1,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169908701/reactions"
            },
            "updated_at": "2022-06-29T12:16:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169908701",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > An object shall have its stored value accessed only by an lvalue expression that has one of the following types\r\n> > ...\r\n> > a type that is the signed or unsigned type corresponding to the effective type of the object,\r\n> \r\n> That seems to allow char_u <=> char, no?\r\n\r\nchar_u <=> char is allowed, but only because char_u can alias anything, not because of the quoted line. The signed type corresponding to `unsigned char` isn't `char`, it's `signed char`. `char`, `signed char`, and `unsigned char` are three separate types (but `int` and `signed int` is the same type). C's weird.\r\n",
            "created_at": "2022-06-29T12:49:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1169939389",
            "id": 1169939389,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Fu9u9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169939389/reactions"
            },
            "updated_at": "2022-06-29T12:49:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1169939389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9192733?v=4",
                "events_url": "https://api.github.com/users/foonathan/events{/privacy}",
                "followers_url": "https://api.github.com/users/foonathan/followers",
                "following_url": "https://api.github.com/users/foonathan/following{/other_user}",
                "gists_url": "https://api.github.com/users/foonathan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/foonathan",
                "id": 9192733,
                "login": "foonathan",
                "node_id": "MDQ6VXNlcjkxOTI3MzM=",
                "organizations_url": "https://api.github.com/users/foonathan/orgs",
                "received_events_url": "https://api.github.com/users/foonathan/received_events",
                "repos_url": "https://api.github.com/users/foonathan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/foonathan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/foonathan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/foonathan"
            }
        },
        {
            "author_association": "NONE",
            "body": "> C's weird.\r\n\r\nTime to port neovim to Rust? :laughing: ",
            "created_at": "2022-06-29T15:37:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1170136430",
            "id": 1170136430,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Fvt1u",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1170136430/reactions"
            },
            "updated_at": "2022-06-29T15:38:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1170136430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10906?v=4",
                "events_url": "https://api.github.com/users/giddie/events{/privacy}",
                "followers_url": "https://api.github.com/users/giddie/followers",
                "following_url": "https://api.github.com/users/giddie/following{/other_user}",
                "gists_url": "https://api.github.com/users/giddie/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/giddie",
                "id": 10906,
                "login": "giddie",
                "node_id": "MDQ6VXNlcjEwOTA2",
                "organizations_url": "https://api.github.com/users/giddie/orgs",
                "received_events_url": "https://api.github.com/users/giddie/received_events",
                "repos_url": "https://api.github.com/users/giddie/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/giddie/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/giddie/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/giddie"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@foonathan thanks for that note, added to https://github.com/neovim/neovim/wiki/Removing-char_u",
            "created_at": "2022-06-29T16:08:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1170180158",
            "id": 1170180158,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5Fv4g-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1170180158/reactions"
            },
            "updated_at": "2022-06-29T16:08:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1170180158",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is this still an issue on latest nightly?",
            "created_at": "2022-08-21T21:54:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1221627490",
            "id": 1221627490,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5I0I5i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1221627490/reactions"
            },
            "updated_at": "2022-08-21T21:54:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1221627490",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "IIRC it has been fixed by a PR removing char_u.",
            "created_at": "2022-08-21T22:14:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/19125#issuecomment-1221630289",
            "id": 1221630289,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19125",
            "node_id": "IC_kwDOAPphoM5I0JlR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1221630289/reactions"
            },
            "updated_at": "2022-08-21T22:14:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1221630289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 24,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/19125/comments",
    "created_at": "2022-06-27T13:26:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/19125/events",
    "html_url": "https://github.com/neovim/neovim/issues/19125",
    "id": 1285807998,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/19125/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": "2022-10-01T21:48:50Z",
        "closed_issues": 156,
        "created_at": "2022-08-18T10:21:07Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2022-09-30T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/32",
        "id": 8320818,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/32/labels",
        "node_id": "MI_kwDOAPphoM4Afvcy",
        "number": 32,
        "open_issues": 0,
        "state": "closed",
        "title": "0.8",
        "updated_at": "2022-12-29T00:32:30Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/32"
    },
    "node_id": "I_kwDOAPphoM5Mo99-",
    "number": 19125,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/19125/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/19125/timeline",
    "title": "Concatenation operator \".=\" does not work for &statusline with GCC 12 Release build",
    "updated_at": "2023-08-04T03:25:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/19125",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10906?v=4",
        "events_url": "https://api.github.com/users/giddie/events{/privacy}",
        "followers_url": "https://api.github.com/users/giddie/followers",
        "following_url": "https://api.github.com/users/giddie/following{/other_user}",
        "gists_url": "https://api.github.com/users/giddie/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/giddie",
        "id": 10906,
        "login": "giddie",
        "node_id": "MDQ6VXNlcjEwOTA2",
        "organizations_url": "https://api.github.com/users/giddie/orgs",
        "received_events_url": "https://api.github.com/users/giddie/received_events",
        "repos_url": "https://api.github.com/users/giddie/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/giddie/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/giddie/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/giddie"
    }
}