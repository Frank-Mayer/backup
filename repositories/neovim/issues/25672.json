{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "The Neovim options code is an incomprehensible mess filled with code duplication, special logic for every option, multiple code paths for the same thing, lack of generalization, etc. This makes Neovim options difficult to maintain, and even more difficult to extend, which has been a blocker towards the addition of new option types (e.g. Callback, Array, Dictionary).\r\n\r\nThis is a roadmap for refactoring Neovim options to be more extensible and maintainable. This is not an absolutely concrete roadmap and each item is subject to change, further additions and deletions may also be made at any time.\r\n\r\n- [ ] Unify interfaces for setting options.\r\n  - [x] Implement a single type to represent any option value. #23850\r\n  - [x] Unify `do_set_option_value` and `set_option_value` codepaths. #25394.\r\n  - [ ] Unify interfaces for setting number, boolean and string options.\r\n    - [x] Unify interfaces for setting number and boolean options. #25394.\r\n    - [x] Unify interfaces for setting number/boolean and string options. #25674\r\n    - [ ] Unify separate interfaces for setting string options (e.g. `set_string_option_direct`, `set_string_option_global`, etc.). #25855\r\n    - [ ] Remove certain functions specific to string options (e.g. `free_string_option`, `clear_string_option`) and replace them with something more general.\r\n    - [ ] Look into converting `OPT_LOCAL`, `OPT_GLOBAL` and `0` (`'both'` scope) to a separate scope enum.\r\n    - [ ] Refactor `set_option_to` / `get_option_from` codepaths and try to unify them with pre-existing methods for setting methods.\r\n      - [ ] Unify `get_option_value` and `get_option_value_strict` if possible.\r\n  - [ ] Use `OptVal` for option `def_val`.\r\n  - [ ] Use a struct for option variables and make it so that the option index can be used to directly access the variable, instead of having to manually hardcode a variable for each option.\r\n  - [x] Replace `p_force_on` and `p_force_off` with an `immutable` property for options. #26209\r\n- [ ] Remove `P_ALLOCATED` and always allocate option values.\r\n- [ ] Check if `OPT_FREE` is necessary and remove it if it isn't.\r\n- [ ] Refactor `set_option_default`.\r\n- [ ] Make `option.c` smaller.\r\n- [ ] Use reference counted strings for string options.\r\n- [ ] Remove `empty_string_option`.\r\n- [ ] Allow certain options to have multiple types. Ref: #24045\r\n  - [ ] Replace `P_(NUM|BOOL|STRING)` flags with `kOptValType*` flags and move type flags to a separate variable from other option flags.\r\n- [ ] Use a separate option type (`kOptValTypeUnset`?) to indicate an unset local value for a global-local option, instead of using arbitrary values for each option. This also would mean that boolean options no longer need to be represented using tri-states and instead can be actual booleans.\r\n- [ ] Use `bool` type for boolean option variables, instead of `int`.\r\n- [ ] Fix the behavior of `winbar` and make it possible to unset winbar for a single window. (Ref: #18660)\r\n- [ ] Convert `P_FUNC` to a separate option type for callback options, instead of having them be shoehorned into string options.\r\n- [ ] Add support for Array and Dictionary options.\r\n- [ ] Convert all list-like or map-like string options to Array / Dictionary options.\r\n- [ ] Add a dict-based configuration format for complicated options such as `winbar`, `tabline`, `statusline`, etc.",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25672/comments",
    "created_at": "2023-10-16T17:51:46Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25672/events",
    "html_url": "https://github.com/neovim/neovim/issues/25672",
    "id": 1945777384,
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25672/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5z-jTo",
    "number": 25672,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 10,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 1,
        "hooray": 0,
        "laugh": 0,
        "rocket": 10,
        "total_count": 21,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25672/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25672/timeline",
    "title": "Options refactor roadmap",
    "updated_at": "2023-11-28T05:49:51Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25672",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
        "events_url": "https://api.github.com/users/famiu/events{/privacy}",
        "followers_url": "https://api.github.com/users/famiu/followers",
        "following_url": "https://api.github.com/users/famiu/following{/other_user}",
        "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/famiu",
        "id": 29580810,
        "login": "famiu",
        "node_id": "MDQ6VXNlcjI5NTgwODEw",
        "organizations_url": "https://api.github.com/users/famiu/orgs",
        "received_events_url": "https://api.github.com/users/famiu/received_events",
        "repos_url": "https://api.github.com/users/famiu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/famiu"
    }
}