{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Neovim version (nvim -v)\n\nNVIM v0.6.0\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nArchLinux\n\n### Terminal name/version\n\nRunning in neovide\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nManjaro pacman\n\n### How to reproduce the issue\n\nBuffer contains:\r\n\r\n> hello\r\n\r\nRun\r\n\r\n```\r\n:let g:ns  = nvim_create_namespace('bug')\r\n:call nvim_buf_set_extmark(0, g:ns, 0, 0, {\"end_line\": 0, \"end_col\": 4})\r\n:echo nvim_buf_get_extmarks(0, g:ns, [0, 1], [0, 1], {})\r\n```\n\n### Expected behavior\n\nBecause the requested position is spanned by the `col` and `end_col` of the extmark, it should be returned: \r\n\r\n`[[1, 0, 0]]`\n\n### Actual behavior\n\nThe extmark is not returned:\r\n\r\n`[]`",
    "closed_at": "2023-09-12T09:16:37Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think this should be an option of `nvim_buf_get_extmarks` to not break backward-compatibility.",
            "created_at": "2023-05-28T09:36:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/17270#issuecomment-1566042439",
            "id": 1566042439,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17270",
            "node_id": "IC_kwDOAPphoM5dV-lH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566042439/reactions"
            },
            "updated_at": "2023-05-28T09:36:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566042439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This sounds like an outright bug. Any consumer that is dependent on this behaviour is broken IMO.\n\nIs there something I'm missing?",
            "created_at": "2023-05-28T09:41:15Z",
            "html_url": "https://github.com/neovim/neovim/issues/17270#issuecomment-1566045361",
            "id": 1566045361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17270",
            "node_id": "IC_kwDOAPphoM5dV_Sx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566045361/reactions"
            },
            "updated_at": "2023-06-20T09:29:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1566045361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry @zeertzjq , I misunderstood the issue and your comment.\r\n\r\nThe extmark is being set to `(0,0)`, `(0,4)`, but `nvim_buf_get_extmarks` is requesting marks within `(0,1)`, `(0,1)`.\r\n\r\nI think you're right and `nvim_buf_get_extmarks` should only return marks **fully within** the requested range.\r\n\r\nHowever, when extranges get added, we will want the functionality to get marks that intercept a range, so I agree this should be an option.",
            "created_at": "2023-06-20T09:28:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/17270#issuecomment-1598433504",
            "id": 1598433504,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17270",
            "node_id": "IC_kwDOAPphoM5fRijg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1598433504/reactions"
            },
            "updated_at": "2023-06-20T09:28:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1598433504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "What's the reasoning behind `nvim_buf_get_extmarks` should only return marks fully in the requested range? \r\n\r\nThe original use case here is that Agda's syntax highlighting is controlled by the compiler, which additionally attaches go-to-definition destinations and other metadata for every token. I've created extmarks for each token to do the highlighting, and attached the metadata to a dictionary keyed by extmark id. But given the current implementation of `nvim_buf_get_extmarks`, go to definition only works if the cursor is on the first character of the token, since the behavior doesn't get extmarks that overlap with the requested range.",
            "created_at": "2023-06-20T16:50:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/17270#issuecomment-1599157772",
            "id": 1599157772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17270",
            "node_id": "IC_kwDOAPphoM5fUTYM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1599157772/reactions"
            },
            "updated_at": "2023-06-20T16:50:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1599157772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/307223?v=4",
                "events_url": "https://api.github.com/users/isovector/events{/privacy}",
                "followers_url": "https://api.github.com/users/isovector/followers",
                "following_url": "https://api.github.com/users/isovector/following{/other_user}",
                "gists_url": "https://api.github.com/users/isovector/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/isovector",
                "id": 307223,
                "login": "isovector",
                "node_id": "MDQ6VXNlcjMwNzIyMw==",
                "organizations_url": "https://api.github.com/users/isovector/orgs",
                "received_events_url": "https://api.github.com/users/isovector/received_events",
                "repos_url": "https://api.github.com/users/isovector/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/isovector/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/isovector/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/isovector"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What's the reasoning behind nvim_buf_get_extmarks should only return marks fully in the requested range?\r\n\r\nQuite a technical one.\r\n\r\nExtmarks are stored in a b-tree, which is an efficient data structure for searching elements. However, extmarks are stored in the b-tree in pairs, for the start and end. What `nvim_buf_get_extmarks(0, g:ns, [0, 1], [0, 1], {})` is really saying is: \"look for extmarks starting at `[0,1]` and stop at `[0,1]`\". If we were to change this to find all extmarks that intersect then we would need every call `nvim_buf_get_extmarks` to scan the **entire** structure, which is obviously not very efficient.\r\n\r\nHowever, there are quite a lot of applications that want to know where extmarks intersect a certain region which is what https://github.com/neovim/neovim/pull/13243 plans to address.\r\n",
            "created_at": "2023-06-21T09:26:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/17270#issuecomment-1600501307",
            "id": 1600501307,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17270",
            "node_id": "IC_kwDOAPphoM5fZbY7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600501307/reactions"
            },
            "updated_at": "2023-06-21T09:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600501307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "in #13243 this will be made available by setting a new \"overlap\" option on `nvim_buf_get_extmark`",
            "created_at": "2023-08-26T13:44:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/17270#issuecomment-1694344629",
            "id": 1694344629,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17270",
            "node_id": "IC_kwDOAPphoM5k_aW1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694344629/reactions"
            },
            "updated_at": "2023-08-26T13:44:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694344629",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17270/comments",
    "created_at": "2022-02-01T19:46:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/17270/events",
    "html_url": "https://github.com/neovim/neovim/issues/17270",
    "id": 1121126482,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "extmarks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/extmarks"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/17270/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5C0whS",
    "number": 17270,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/17270/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/17270/timeline",
    "title": "nvim_buf_get_extmarks doesn't return extmarks that contain than the requested span",
    "updated_at": "2023-09-12T09:26:06Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/17270",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/307223?v=4",
        "events_url": "https://api.github.com/users/isovector/events{/privacy}",
        "followers_url": "https://api.github.com/users/isovector/followers",
        "following_url": "https://api.github.com/users/isovector/following{/other_user}",
        "gists_url": "https://api.github.com/users/isovector/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/isovector",
        "id": 307223,
        "login": "isovector",
        "node_id": "MDQ6VXNlcjMwNzIyMw==",
        "organizations_url": "https://api.github.com/users/isovector/orgs",
        "received_events_url": "https://api.github.com/users/isovector/received_events",
        "repos_url": "https://api.github.com/users/isovector/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/isovector/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/isovector/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/isovector"
    }
}