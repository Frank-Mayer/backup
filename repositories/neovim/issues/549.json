{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Google has a tool called [include-what-you-use](https://github.com/include-what-you-use/include-what-you-use) that can detect redundant/unnecesary/... header includes. This would be a great way to automatically clean up the includes list in the style of the Golang compiler. As a nice bonus, it could speed up builds as the dependency tree will get smaller. If it's reasonably fast my suggestion would be to run it with travis.\n\nI currently haven't got the time to experiment with this tool, but if anyone does, that would be nice.\n\nThis issue was inspired by #548.\n\n---\n- concrete case for IWYU: https://github.com/neovim/neovim/issues/918\n- Related article: http://zeuxcg.org/2010/11/15/include-rules/\n- CMake support for IWYU: http://stackoverflow.com/a/30951493/152142\n",
    "closed_at": "2024-03-18T11:12:48Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": ":+1: \n",
            "created_at": "2014-04-16T18:27:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-40634403",
            "id": 40634403,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjM0NDAz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/40634403/reactions"
            },
            "updated_at": "2014-04-16T18:27:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/40634403",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There are some preprocessor tricks used in neovim that currently disallow\nthis to be run on Travis.\n\n@aktau are you going to work on this?  I can do this if you're not.\n\nThe huge include lists in the C files were added by a script. Reducing them\nwould make some refactorings much easier.\n",
            "created_at": "2014-04-17T01:44:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-40672466",
            "id": 40672466,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjcyNDY2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/40672466/reactions"
            },
            "updated_at": "2014-04-17T01:44:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/40672466",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@philix feel free to work on it, I currently don't have the time to play with it :)\n",
            "created_at": "2014-04-17T08:48:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-40693569",
            "id": 40693569,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkzNTY5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/40693569/reactions"
            },
            "updated_at": "2014-04-17T08:48:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/40693569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@Hinidu is working on it now.\n",
            "created_at": "2014-05-04T04:01:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-42123502",
            "id": 42123502,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTIzNTAy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42123502/reactions"
            },
            "updated_at": "2014-05-04T04:01:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42123502",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think it should be mentioned that include-what-you-use does not only remove redundant `#include`s but also adds `#include`s for all identifiers in file. So we will be sure that files which include `foo.h` does not depend on which `#includes`s `foo.h` contains. Hence we will be free to remove unused `#include` in `foo.h`.\n\nUnfortunately include-what-you-use does not allow automatically solve neovim's `#include` problems by many reasons:\n- It does not have native way to run with cmake-generated Makefile: [issue](https://code.google.com/p/include-what-you-use/issues/detail?id=87), [thread](https://groups.google.com/forum/?fromgroups=#!topic/include-what-you-use/N6441qSN9Og). But this is not the big problem because Ryan Pavlik suggested python script that uses `compile_commands.json` generated by CMake: [original version](https://gist.github.com/rpavlik/4121171), [my version](https://gist.github.com/Hinidu/25c1147c4e46e6caa823)\n- It suggests to include wrong header. I submitted an [issue](https://code.google.com/p/include-what-you-use/issues/detail?id=131), which should be fixed soon and we can fix it temporarily with mapping-file.\n- I get tons of compilation errors after applying all include-what-you-use suggestions. Some errors are related to #379 that perhaps can be fixed by adding a guard like https://github.com/neovim/neovim/issues/379#issuecomment-37842892. But after that I still had to much errors to understand how to resolve their.\n\nI wrote the [shell-script](https://gist.github.com/Hinidu/556ebec2c80917ae96c5) which uses just \"remove\" suggestions, but even with it I can't manage all appeared errors:-(\nSo anyone else can try to do something on that issue. Personally I don't see any way except manually simplifying \"#include-tricks\" and \"include-what-you-use\" on file-by-file basis. Perhaps Doxygen-generated dependency graphs can be helpful, we can start from leaves and incrementally go up.\n\nI think it's valuable task because it can simplify maintenance, so we must not leave it as it is in my opinion. Any thoughts?\n",
            "created_at": "2014-05-08T11:51:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-42540983",
            "id": 42540983,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQwOTgz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42540983/reactions"
            },
            "updated_at": "2014-05-08T11:51:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42540983",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hello,\n\nSo I was trying to get an understanding of the problem, and thought making a graph would help, but it turned out to be junk (see below)\n\nI'm not strong with C so help me a little bit here, how do Header and .c files relate?  When should an include be used in a .c file? Should the end result be a main.c as the \"trunk\" of a tree with headers and .c files slowly included down to the leaves?  are there ever times when something should be included multiple times?\n\nNote: the graph arrows should point the other way stdio.h -> os_unix_defs.h instead of os_unix_defs.h -> stdio.h, but I just wanted to see what information I could extract quickly.\n![test dot](https://cloud.githubusercontent.com/assets/7517945/2931126/b3fc8dec-d79f-11e3-9856-8ba3a0aaa25e.png)\n",
            "created_at": "2014-05-09T17:45:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-42693660",
            "id": 42693660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjkzNjYw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42693660/reactions"
            },
            "updated_at": "2014-05-09T17:45:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42693660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7517945?v=4",
                "events_url": "https://api.github.com/users/metrix78/events{/privacy}",
                "followers_url": "https://api.github.com/users/metrix78/followers",
                "following_url": "https://api.github.com/users/metrix78/following{/other_user}",
                "gists_url": "https://api.github.com/users/metrix78/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/metrix78",
                "id": 7517945,
                "login": "metrix78",
                "node_id": "MDQ6VXNlcjc1MTc5NDU=",
                "organizations_url": "https://api.github.com/users/metrix78/orgs",
                "received_events_url": "https://api.github.com/users/metrix78/received_events",
                "repos_url": "https://api.github.com/users/metrix78/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/metrix78/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/metrix78/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/metrix78"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ideally each compilation unit (.C file) should include the headers which\ndeclare the symbols used on it and nothing more.\n\nThe include-what-you-use tool site has a good description of the problem.\nOn May 9, 2014 2:45 PM, \"metrix78\" notifications@github.com wrote:\n\n> Hello,\n> \n> So I was trying to get an understanding of the problem, and thought making\n> a graph would help, but it turned out to be junk (see below)\n> \n> I'm not strong with C so help me a little bit here, how do Header and .c\n> files relate? When should an include be used in a .c file? Should the end\n> result be a main.c as the \"trunk\" of a tree with headers and .c files\n> slowly included down to the leaves? are there ever times when something\n> should be included multiple times?\n> \n> Note: the graph arrows should point the other way stdio.h ->\n> os_unix_defs.h instead of os_unix_defs.h -> stdio.h, but I just wanted to\n> see what information I could extract quickly.\n> [image: test dot]https://cloud.githubusercontent.com/assets/7517945/2931126/b3fc8dec-d79f-11e3-9856-8ba3a0aaa25e.png\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/neovim/neovim/issues/549#issuecomment-42693660\n> .\n",
            "created_at": "2014-05-09T18:26:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-42698007",
            "id": 42698007,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjk4MDA3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42698007/reactions"
            },
            "updated_at": "2014-05-09T18:26:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/42698007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I looked into this over the weekend and wrote a couple of shell scripts using cflow and ctags to tell what functions are called/used.  This works OK, but is buggy and takes hand holding.  The question I have is are you really trying to get away from including vim.h?\n\nRemoving the vim.h dependency from arabic.c was possible by extracting constants from vim.h and creating a constants.h file, and including that in arabic.c instead.  It also brought up something that may be a bug in vim.h or os_unix_defs.h\n\n  vim.h:\n  #ifndef CMDBUFFSIZE\n  #define CMDBUFFSIZE    256     /\\* size of the command processing buffer */\n  #endif\n\n  os_unix_defs.h\n   // Unix has plenty of memory, use large buffers\n\n  #define CMDBUFFSIZE 1024        /\\* size of the command processing buffer */\nDoes this need to be defined twice?\n\nBrandon\n",
            "created_at": "2014-05-26T17:35:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-44206588",
            "id": 44206588,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjA2NTg4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44206588/reactions"
            },
            "updated_at": "2014-05-26T17:37:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44206588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7517945?v=4",
                "events_url": "https://api.github.com/users/metrix78/events{/privacy}",
                "followers_url": "https://api.github.com/users/metrix78/followers",
                "following_url": "https://api.github.com/users/metrix78/following{/other_user}",
                "gists_url": "https://api.github.com/users/metrix78/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/metrix78",
                "id": 7517945,
                "login": "metrix78",
                "node_id": "MDQ6VXNlcjc1MTc5NDU=",
                "organizations_url": "https://api.github.com/users/metrix78/orgs",
                "received_events_url": "https://api.github.com/users/metrix78/received_events",
                "repos_url": "https://api.github.com/users/metrix78/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/metrix78/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/metrix78/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/metrix78"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The following diff shows what I came up with: https://github.com/metrix78/neovim/commit/873bb298033af0f7db393ec6ec2f26dba161195c  \nIn order to get it to work, I had to:\n1. Break the constants out of vim.h so that it just deals with the include craziness.\n2. remove vim.h from arabic.c (arabic.c has the fewest includes, so I started there)\n3. Decide what to do when an include only needs a few defines out of a header file -- I wasn't sure what to do here: arabic.c needed ascii.h, but only for NUL.  Grepping for NUL in the code shows that it is used in 63 files.  Should ascii.h be required in all of these files?  Do I add NUL to constants.h? create a nul.h?\n4. add missing includes to other files via custom shell scripts and via compile error\n\nAfter looking into this, I feel this is something I could slowly tackle. I would create a branch for a file and fix the include issues created starting with the easiest files first and working my way up the chain - if this is the direction neovim would like to go.\n",
            "created_at": "2014-05-26T23:52:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-44224505",
            "id": 44224505,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI0NTA1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44224505/reactions"
            },
            "updated_at": "2014-05-26T23:52:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44224505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7517945?v=4",
                "events_url": "https://api.github.com/users/metrix78/events{/privacy}",
                "followers_url": "https://api.github.com/users/metrix78/followers",
                "following_url": "https://api.github.com/users/metrix78/following{/other_user}",
                "gists_url": "https://api.github.com/users/metrix78/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/metrix78",
                "id": 7517945,
                "login": "metrix78",
                "node_id": "MDQ6VXNlcjc1MTc5NDU=",
                "organizations_url": "https://api.github.com/users/metrix78/orgs",
                "received_events_url": "https://api.github.com/users/metrix78/received_events",
                "repos_url": "https://api.github.com/users/metrix78/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/metrix78/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/metrix78/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/metrix78"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Removing all constants from vim.h is almost like renaming it. It doesn't\nsolve much: we're still left with a big file with many unrelated things in\nit which has to be included everywhere.\n\nI solved a similar problem before (look up on the PR history): structs.h.\n\nA better approach is to spilt vim.h first in one or more PRs and  only then\nstart minimizing the include list in C files.\n\nNUL should not be moved out of ascii.h and yes, every file that uses NUL\nshould include it.\nOn May 26, 2014 8:52 PM, \"metrix78\" notifications@github.com wrote:\n\n> The following diff shows what I came up with: metrix78@873bb29https://github.com/metrix78/neovim/commit/873bb298033af0f7db393ec6ec2f26dba161195cIn order to get it to work, I had to:\n> 1. Break the constants out of vim.h so that it just deals with the include\n> craziness.\n> 2. remove vim.h from arabic.c (arabic.c has the fewest includes, so I\n> started there)\n> 3. Decide what to do when an include only needs a few defines out of a\n> header file -- I wasn't sure what to do here: arabic.c needed ascii.h, but\n> only for NUL. Grepping for NUL in the code shows that it is used in 63\n> files. Should ascii.h be required in all of these files? Do I add NUL to\n> constants.h? create a nul.h?\n> 4. add missing includes to other files via custom shell scripts and via\n> compile error\n> \n> After looking into this, I feel this is something I could slowly tackle. I\n> would create a branch for a file and fix the include issues created\n> starting with the easiest files first and working my way up the chain - if\n> this is the direction neovim would like to go.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/neovim/neovim/issues/549#issuecomment-44224505\n> .\n",
            "created_at": "2014-05-27T02:11:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-44229593",
            "id": 44229593,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI5NTkz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44229593/reactions"
            },
            "updated_at": "2014-05-27T02:11:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44229593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/207795?v=4",
                "events_url": "https://api.github.com/users/felipecrv/events{/privacy}",
                "followers_url": "https://api.github.com/users/felipecrv/followers",
                "following_url": "https://api.github.com/users/felipecrv/following{/other_user}",
                "gists_url": "https://api.github.com/users/felipecrv/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/felipecrv",
                "id": 207795,
                "login": "felipecrv",
                "node_id": "MDQ6VXNlcjIwNzc5NQ==",
                "organizations_url": "https://api.github.com/users/felipecrv/orgs",
                "received_events_url": "https://api.github.com/users/felipecrv/received_events",
                "repos_url": "https://api.github.com/users/felipecrv/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/felipecrv/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/felipecrv/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/felipecrv"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "While breaking up vim.h I have noticed that there are quite few a #defines that I look at as configuration options.  Should I make  a config.h for these? or continue move these options to the files that deal with the function. I have pasted a few defines that I think could go into a config.h below:\n\n```\ndefine MAXLNUM (0x7fffffffL)           /* maximum (invalid) line number */\ndefine MAXCOL (0x7fffffffL)          /* maximum column number, 31 bits */\ndefine SHOWCMD_COLS 10                 /* columns needed by shown command */\ndefine STL_MAX_ITEM 80                 /* max nr of %<flag> in statusline */\ndefine MAXMAPLEN   50\ndefine CMDBUFFSIZE    256     /* size of the command processing buffer */\ndefine LSIZE       512         /* max. size of a line in the tags file */\ndefine IOSIZE     (1024+1)     /* file i/o and sprintf buffer size */\ndefine DIALOG_MSG_SIZE 1000    /* buffer size for dialog_msg() */\ndefine MSG_BUF_LEN 480        /* length of buffer for small messages */\ndefine MSG_BUF_CLEN  (MSG_BUF_LEN / 6)    /* cell length (worst case: utf-8\n                                               takes 6 bytes for one cell) */\n```\n",
            "created_at": "2014-06-01T23:58:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-44793340",
            "id": 44793340,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzkzMzQw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44793340/reactions"
            },
            "updated_at": "2014-06-02T00:15:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/44793340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7517945?v=4",
                "events_url": "https://api.github.com/users/metrix78/events{/privacy}",
                "followers_url": "https://api.github.com/users/metrix78/followers",
                "following_url": "https://api.github.com/users/metrix78/following{/other_user}",
                "gists_url": "https://api.github.com/users/metrix78/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/metrix78",
                "id": 7517945,
                "login": "metrix78",
                "node_id": "MDQ6VXNlcjc1MTc5NDU=",
                "organizations_url": "https://api.github.com/users/metrix78/orgs",
                "received_events_url": "https://api.github.com/users/metrix78/received_events",
                "repos_url": "https://api.github.com/users/metrix78/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/metrix78/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/metrix78/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/metrix78"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The header trick is gone: #840. And @Hinidu's IWYU bug report was fixed: https://code.google.com/p/include-what-you-use/issues/detail?id=131\n\nIs there anything stopping us from applying include-what-you-use?\n\nping @philix @aktau\n",
            "created_at": "2014-08-26T07:39:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-53385681",
            "id": 53385681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzg1Njgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53385681/reactions"
            },
            "updated_at": "2014-08-26T07:39:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53385681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The header trick is gone: #840. And @Hinidu's IWYU bug report was fixed: https://code.google.com/p/include-what-you-use/issues/detail?id=131\n\nNice!\n\n> ping @philix @aktau\n\nNever had IWYU running and it seems @Hinidu already did. Perhaps he can try a re-run and see where it chokes up this time? (and it definitely will).\n\nOtherwise it will have to wait until I can free myself a bit more. Working on a  smaller PR atm.\n",
            "created_at": "2014-08-26T07:43:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-53385980",
            "id": 53385980,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzg1OTgw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53385980/reactions"
            },
            "updated_at": "2022-08-23T13:53:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53385980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> While breaking up vim.h I have noticed that there are quite few a #defines that I look at as configuration options.  Should I make  a config.h for these? or continue move these options to the files that deal with the function. I have pasted a few defines that I think could go into a config.h below:\n> \n> ```\n> define MAXLNUM (0x7fffffffL)           /* maximum (invalid) line number */\n> ```\n\nThis is a line number that is guaranteed to be greater than any other line number. It may make sense to redefine this to use `sizeof()` of some type, but it is definitely not a configuration option.\n\n> ```\n> define MAXCOL (0x7fffffffL)          /* maximum column number, 31 bits */\n> ```\n\nSame, but for columns.\n\n> ```\n> define SHOWCMD_COLS 10                 /* columns needed by shown command */\n> define STL_MAX_ITEM 80                 /* max nr of %<flag> in statusline */\n> ```\n\nIt would actually be better to make it possible to have any number of % statements in statusline. Configuration option is rather useless thing for this as plugin developers will adapt to whatever number will be the default and users normally do not want to recompile anything.\n\n> ```\n> define MAXMAPLEN   50\n> ```\n\nI do not see why this may be neded to configure.\n\n> ```\n> define CMDBUFFSIZE    256     /* size of the command processing buffer */\n> define LSIZE       512         /* max. size of a line in the tags file */\n> define IOSIZE     (1024+1)     /* file i/o and sprintf buffer size */\n> define DIALOG_MSG_SIZE 1000    /* buffer size for dialog_msg() */\n> define MSG_BUF_LEN 480        /* length of buffer for small messages */\n> define MSG_BUF_CLEN  (MSG_BUF_LEN / 6)    /* cell length (worst case: utf-8\n>                                                takes 6 bytes for one cell) */\n> ```\n",
            "created_at": "2014-08-26T16:32:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-53449527",
            "id": 53449527,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDQ5NTI3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53449527/reactions"
            },
            "updated_at": "2022-08-23T13:54:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/53449527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry for the late response. I was quite busy last week.\n\nThis time the main problem was our auto-generated headers (as many might assume).\n\nIWYU has very useful for us [pragma](https://code.google.com/p/include-what-you-use/wiki/IWYUPragmas#IWYU_pragma:_private): `// IWYU pragma: private, include \"public.h\"`. This pragma applies to the current header file. It says that any symbol from this file will be provided by another file.\nI've added it to all generated headers and it seems like it works good.\n\nBut IWYU has no pragma to indicate that we want to specify includes for generated file in its non-generated counterpart. And actually suggests to remove many such includes.\n\nIt even don't analyze generated headers right now. I have an assumption that it checks headers by this principle: for `arabic.c` it finds `arabic.h` (note that IWYU use `compile_commands.json` generated by CMake which has compilation commands for all `*.o` files). I think so because IWYU doesn't check `os/os.h` too.\n\nI think the best solution would be the implementation of new pragma in IWYU which we can use like that:\n\n``` c\n// arabic.h\n\n#ifdef INCLUDE_GENERATED_DECLARATIONS\n# include \"arabic.h.generated.h\"  // IWYU pragma: include-what-it-use\n#endif\n```\n\nThe other way could be to create some ad hoc script but I don't know how to solve this task simply.\nTherefore I'm going to create feature request in IWYU project. Maybe they know simpler way to achieve what we need.\n\nDoes anyone have other options?\n",
            "created_at": "2014-09-01T06:39:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-54023726",
            "id": 54023726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDIzNzI2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54023726/reactions"
            },
            "updated_at": "2014-09-01T06:40:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54023726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "On September 1, 2014 10:39:33 AM GMT+03:00, Pavel Platto notifications@github.com wrote:\n\n> Sorry for the late response. I was quite busy last week.\n> \n> This time the main problem was our auto-generated headers (as many\n> might assume).\n> \n> IWYU has very useful for us\n> [pragma](https://code.google.com/p/include-what-you-use/wiki/IWYUPragmas#IWYU_pragma:_private):\n> `// IWYU pragma: private, include \"public.h\"`. This pragma applies to\n> the current header file. It says that any symbol from this file will be\n> provided by another file.\n> I've added it to all generated headers and it seems like it works good.\n> \n> But IWYU has no pragma to indicate that we want to specify includes for\n> generated file in its non-generated counterpart. And actually suggests\n> to remove many such includes.\n> \n> It even don't analyze generated headers right now. I have an assumption\n> that it checks headers by this principle: for `arabic.c` it finds\n> `arabic.h` (note that IWYU use `compile_commands.json` generated by\n> CMake which has compilation commands for all `*.o` files). I think so\n> because IWYU doesn't check `os/os.h` too.\n> \n> I think the best solution would be the implementation of new pragma in\n> IWYU which we can use like that:\n> \n> ``` c\n> // arabic.h\n> \n> #ifdef INCLUDE_GENERATED_DECLARATIONS\n> # include \"arabic.h.generated.h\"  // IWYU pragma: include-what-it-use\n> #endif\n> ```\n> \n> The other way could be to create some ad hoc script but I don't know\n> how to solve this task simply.\n> Therefore I'm going to create feature request in IWYU project. Maybe\n> they know simpler way to achieve what we need.\n> \n> Does anyone have other options?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/neovim/neovim/issues/549#issuecomment-54023726\n\nAs a quick and dirty solution I may suggest generating source tree with #ifdef INCLUDE_GENERATED_DECLARATIONS-guarded includes replaced with corresponding file contents.\n\nOr extending generator with something to process comments and converting current #includes to special comments that will be present as #includes in the generated file.\n",
            "created_at": "2014-09-01T08:20:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-54033051",
            "id": 54033051,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDMzMDUx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54033051/reactions"
            },
            "updated_at": "2014-09-01T08:20:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54033051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> As a quick and dirty solution I may suggest generating source tree with #ifdef INCLUDE_GENERATED_DECLARATIONS-guarded includes replaced with corresponding file contents.\n\n@ZyX-I thanks, I thought about that but forgot to include it in my comment. I think we can consider this option too.\n\n> Or extending generator with something to process comments and converting current #includes to special comments that will be present as #includes in the generated file.\n\nMaybe it is just the first impression but I really like this solution!\nIt will clarify the purpose of these includes better. Now empty header with a bunch of includes can be pretty confusing for newcomers. This comments will serve as a documentation as well.\nPerhaps we can even run IWYU on such generated headers because they will intend to have all necessary includes.\n\nThough I would like to hear other opinions :-)\n",
            "created_at": "2014-09-01T08:49:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-54035466",
            "id": 54035466,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDM1NDY2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54035466/reactions"
            },
            "updated_at": "2014-09-01T08:49:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54035466",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@Hinidu You are mistaking where these includes will go. They will not go to the _header_. They may only be placed in the file which has functions definitions because declarations generator does not and should not know where the generated declarations are used.\n",
            "created_at": "2014-09-02T18:12:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-54193768",
            "id": 54193768,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTkzNzY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54193768/reactions"
            },
            "updated_at": "2014-09-02T18:12:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54193768",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It actually makes more sense to mark some includes in that file with comments for the generator rather then use comments to declare includes: in any case if declaration needs some includes definition needs _at least_ the same includes. There is one problem though: some includes should be marked as necessary for non-static declarations, some should be marked as necessary for static declarations and some for both if I understand the problem correctly. It would be good to get rid of special marking for static declarations.\n",
            "created_at": "2014-09-02T18:16:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-54194310",
            "id": 54194310,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTk0MzEw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54194310/reactions"
            },
            "updated_at": "2014-09-02T18:16:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54194310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @Hinidu You are mistaking where these includes will go. They will not go to the header. They may only be placed in the file which has functions definitions because declarations generator does not and should not know where the generated declarations are used.\n\n@ZyX-I thank you for clarification. It sounds reasonably to me.\n\n> It actually makes more sense to mark some includes in that file with comments for the generator rather then use comments to declare includes: in any case if declaration needs some includes definition needs at least the same includes. There is one problem though: some includes should be marked as necessary for non-static declarations, some should be marked as necessary for static declarations and some for both if I understand the problem correctly. It would be good to get rid of special marking for static declarations.\n\nI think we can avoid adding includes to the static declarations header because this header is used only in the file with definitions which should have at least the same includes as you pointed out.\n",
            "created_at": "2014-09-02T18:27:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-54195987",
            "id": 54195987,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTk1OTg3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54195987/reactions"
            },
            "updated_at": "2014-09-02T18:27:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/54195987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/911252?v=4",
                "events_url": "https://api.github.com/users/Hinidu/events{/privacy}",
                "followers_url": "https://api.github.com/users/Hinidu/followers",
                "following_url": "https://api.github.com/users/Hinidu/following{/other_user}",
                "gists_url": "https://api.github.com/users/Hinidu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Hinidu",
                "id": 911252,
                "login": "Hinidu",
                "node_id": "MDQ6VXNlcjkxMTI1Mg==",
                "organizations_url": "https://api.github.com/users/Hinidu/orgs",
                "received_events_url": "https://api.github.com/users/Hinidu/received_events",
                "repos_url": "https://api.github.com/users/Hinidu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Hinidu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Hinidu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Hinidu"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is this still a problem? It seems like it would not take very long to run include-what-you-use on every source file and test that it still compiles. I ran it on some source files and its seems that superfluous includes, or includes that should be added, still exist.\n",
            "created_at": "2016-04-05T21:31:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-205991603",
            "id": 205991603,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTk5MTYwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/205991603/reactions"
            },
            "updated_at": "2016-04-05T21:31:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/205991603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11964782?v=4",
                "events_url": "https://api.github.com/users/hunterwerlla/events{/privacy}",
                "followers_url": "https://api.github.com/users/hunterwerlla/followers",
                "following_url": "https://api.github.com/users/hunterwerlla/following{/other_user}",
                "gists_url": "https://api.github.com/users/hunterwerlla/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hunterwerlla",
                "id": 11964782,
                "login": "hunterwerlla",
                "node_id": "MDQ6VXNlcjExOTY0Nzgy",
                "organizations_url": "https://api.github.com/users/hunterwerlla/orgs",
                "received_events_url": "https://api.github.com/users/hunterwerlla/received_events",
                "repos_url": "https://api.github.com/users/hunterwerlla/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hunterwerlla/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hunterwerlla/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hunterwerlla"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@hunterwerlla Follow the discussion starting with https://github.com/neovim/neovim/issues/549#issuecomment-54023726 for the current state of affairs. Help is wanted to address this, if you are inclined.\n",
            "created_at": "2016-04-05T21:40:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-205995406",
            "id": 205995406,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTk5NTQwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/205995406/reactions"
            },
            "updated_at": "2016-04-05T21:40:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/205995406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think it is possible to work around: when using IWYU run it on a partially preprocessed headers: basically all `#ifdef INCLUDE_GENERATED_DECLARATIONS` sections replaced with generated content.\n",
            "created_at": "2016-04-05T22:45:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-206021643",
            "id": 206021643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjAyMTY0Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/206021643/reactions"
            },
            "updated_at": "2016-04-05T22:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/206021643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk, is this still up for grabs? \r\n\r\nRelated https://github.com/neovim/neovim/issues/6371",
            "created_at": "2021-12-12T14:27:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-991907918",
            "id": 991907918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "IC_kwDOAPphoM47H1BO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/991907918/reactions"
            },
            "updated_at": "2021-12-12T14:27:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/991907918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "# Status\r\n\r\n- IWYU seems to run on our sources now https://github.com/neovim/neovim/pull/19875 , and is now mentioned in CONTRIBUTING.md https://github.com/neovim/neovim/pull/19891\r\n    - Problem: IWYU recommends including the generated headers and not the real headers. We have to remove the `.generated.h` from the IWYU suggestions.\r\n    - Could mapping files help? https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/IWYUMappings.md\r\n- TODO: can IWYU be automated in our build / CI?",
            "created_at": "2022-08-23T13:55:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-1224113319",
            "id": 1224113319,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "IC_kwDOAPphoM5I9nyn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1224113319/reactions"
            },
            "updated_at": "2022-08-23T14:48:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1224113319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Clang now has [include-fixer](https://clang.llvm.org/extra/clang-include-fixer.html). I played around with it for a bit and it seemed more accurate than IWYU, so could be worth switching to that instead.",
            "created_at": "2023-09-23T13:19:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-1732317009",
            "id": 1732317009,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "IC_kwDOAPphoM5nQQ9R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 3,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1732317009/reactions"
            },
            "updated_at": "2023-09-23T13:19:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1732317009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is done. See https://github.com/neovim/neovim/issues/6371#issuecomment-1887951816 for more information.",
            "created_at": "2024-03-18T11:12:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/549#issuecomment-2003632166",
            "id": 2003632166,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/549",
            "node_id": "IC_kwDOAPphoM53bQAm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2003632166/reactions"
            },
            "updated_at": "2024-03-18T11:12:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2003632166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        }
    ],
    "comments": 27,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/549/comments",
    "created_at": "2014-04-16T18:23:32Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/549/events",
    "html_url": "https://github.com/neovim/neovim/issues/549",
    "id": 31666438,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/549/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 317,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-05-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 115,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-03-19T00:59:38Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "MDU6SXNzdWUzMTY2NjQzOA==",
    "number": 549,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/549/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/549/timeline",
    "title": "IWYU: remove superfluous includes with include-what-you-use",
    "updated_at": "2024-03-18T22:00:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/549",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
        "events_url": "https://api.github.com/users/aktau/events{/privacy}",
        "followers_url": "https://api.github.com/users/aktau/followers",
        "following_url": "https://api.github.com/users/aktau/following{/other_user}",
        "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/aktau",
        "id": 189413,
        "login": "aktau",
        "node_id": "MDQ6VXNlcjE4OTQxMw==",
        "organizations_url": "https://api.github.com/users/aktau/orgs",
        "received_events_url": "https://api.github.com/users/aktau/received_events",
        "repos_url": "https://api.github.com/users/aktau/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/aktau"
    }
}