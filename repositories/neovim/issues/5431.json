{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        }
    ],
    "author_association": "MEMBER",
    "body": "List of terminal improvements.\r\n\r\n- [ ] vim-patch 8.0.1804: using :normal in terminal window causes problems\r\n- [ ] vim-patch 8.0.1794: duplicate term options after renaming\r\n- [ ] vim-patch 8.0.1743: terminal window options are named inconsistently\r\n- [ ] vim-patch 8.0.1732: crash when terminal API call deletes the buffer\r\n- [ ] vim-patch 8.0.1592: terminal windows in a session are not properly restored\r\n- [ ] vim-patch 8.0.1744: on some systems /dev/stdout isn't writable\r\n- [ ] vim-patch 8.0.1300: file permissions may end up wrong when writing\r\n- [ ] Revisit https://github.com/neovim/neovim/pull/2570\r\n- [ ] `:!` should use `:terminal` internally. Doesn't affect `:read !foo` etc. See #5396. Use cases: #5580.\r\n  > by making `terminal.c` draw directly to the screen (instead of a buffer) https://github.com/neovim/neovim/issues/1496#issuecomment-144346925\r\n    - [ ] `:%term` should work like `:%!`\r\n    - [ ] `:read :term foo` should work like `:read !foo`\r\n    - Related: vim-patch 8.0.1609: shell commands in the GUI use a dumb terminal (https://github.com/vim/vim/commit/135682517bc378cfdb63fe3a6e3553935f69f6ce)\r\n- [ ] `:term` buffers should `setlocal bufhidden=hide` by default. Fixes #3340 #3138 #5122\r\n- [ ] should respect all `'bufhidden'` flags #2368\r\n- [x] `:emenu` in terminal mode #3393\r\n- [ ] `:te` should open in split, similar to `:help`. Or [not?](https://github.com/neovim/neovim/issues/5431#issuecomment-597523991)\r\n  - [x] support `<mods>` (`:vert`, `:tab`) #15427\r\n  - [ ] `:0te` suppresses the split? cf. https://github.com/tpope/vim-fugitive/commit/bf7f05e62b75570d2bde8cbc131bfe25dbcdb427\r\n- [ ] instead of `:bdelete`ing the buffer after process exit, switch to some other buffer? #5176\r\n- [ ] Do not auto-resize. There's [no good choice](https://github.com/neovim/neovim/pull/5045#issuecomment-257878379) about when to resize and it [causes problems](https://github.com/neovim/neovim/issues/5667).\r\n- [ ] Allow folds https://github.com/neovim/neovim/issues/5682 \r\n  - https://github.com/neovim/neovim/pull/2683\r\n- [x] Follow terminal output in normal-mode if cursor is on last line #6142\r\n- [x] `:term` buffer should be `'modifiable'`. #6142\r\n- [x] Enable user to manage 'scrollback' (buffer-local option) #2637 #6142\r\n- [x] handle FN keys #5014\r\n- [x] handle ctrl-space, ctrl-arrow #3101. Closed by #5014 ?\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I think it would be really cool if terminal could support cmdwin - c.f. https://github.com/brettanomyces/nvim-terminus/issues/7\n\nIn particular, this would be great for writing multi-line functions in REPLs.\n",
            "created_at": "2016-11-02T00:05:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-257735817",
            "id": 257735817,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzczNTgxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/257735817/reactions"
            },
            "updated_at": "2016-11-02T00:05:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/257735817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2045543?v=4",
                "events_url": "https://api.github.com/users/AprilArcus/events{/privacy}",
                "followers_url": "https://api.github.com/users/AprilArcus/followers",
                "following_url": "https://api.github.com/users/AprilArcus/following{/other_user}",
                "gists_url": "https://api.github.com/users/AprilArcus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/AprilArcus",
                "id": 2045543,
                "login": "AprilArcus",
                "node_id": "MDQ6VXNlcjIwNDU1NDM=",
                "organizations_url": "https://api.github.com/users/AprilArcus/orgs",
                "received_events_url": "https://api.github.com/users/AprilArcus/received_events",
                "repos_url": "https://api.github.com/users/AprilArcus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/AprilArcus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/AprilArcus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/AprilArcus"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "would it be possible to handle `:set nowrap` in terminal buffer ?",
            "created_at": "2016-12-02T14:53:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-264471626",
            "id": 264471626,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDQ3MTYyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/264471626/reactions"
            },
            "updated_at": "2016-12-02T14:53:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/264471626",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "~~Yes, by telling libvterm a very long width. I have a pending PR that helps with this.~~\r\n\r\nedit: That hack isn't going to work, because it will confuse interactive applications, not to mention tools like `pytest` which center text based on the TTY width.",
            "created_at": "2016-12-02T15:26:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-264479887",
            "id": 264479887,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDQ3OTg4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/264479887/reactions"
            },
            "updated_at": "2017-09-05T16:26:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/264479887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "for the following improvment : \r\n> User-initiated `:!` invocations should silently use `:terminal` instead\r\n\r\nWhich terminal should be used ? We could send a `RequestTerminal` event, and see if a particular variable is set. If it is, use the terminal from the variable, or create a new terminal (new tab ? h/v split ?)",
            "created_at": "2017-01-20T10:13:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-274033574",
            "id": 274033574,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDAzMzU3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/274033574/reactions"
            },
            "updated_at": "2017-01-20T10:13:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/274033574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9730330?v=4",
                "events_url": "https://api.github.com/users/bew/events{/privacy}",
                "followers_url": "https://api.github.com/users/bew/followers",
                "following_url": "https://api.github.com/users/bew/following{/other_user}",
                "gists_url": "https://api.github.com/users/bew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bew",
                "id": 9730330,
                "login": "bew",
                "node_id": "MDQ6VXNlcjk3MzAzMzA=",
                "organizations_url": "https://api.github.com/users/bew/orgs",
                "received_events_url": "https://api.github.com/users/bew/received_events",
                "repos_url": "https://api.github.com/users/bew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bew"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The details of each item can be discussed as PRs are proposed for them. But at least initially the goal is only to match the traditional semantics of `:!`, so some sort of long-lived scratch buffer would be used.",
            "created_at": "2017-01-20T10:16:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-274034153",
            "id": 274034153,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDAzNDE1Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/274034153/reactions"
            },
            "updated_at": "2017-01-20T10:16:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/274034153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Well, I see (the last line of) a terminal buffer could serve as a really flexible readline-like interface, *if only* we can enter Insert Mode on a terminal buffer.",
            "created_at": "2017-02-27T12:37:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-282708307",
            "id": 282708307,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjcwODMwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282708307/reactions"
            },
            "updated_at": "2017-02-27T12:37:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282708307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1585463?v=4",
                "events_url": "https://api.github.com/users/bohrshaw/events{/privacy}",
                "followers_url": "https://api.github.com/users/bohrshaw/followers",
                "following_url": "https://api.github.com/users/bohrshaw/following{/other_user}",
                "gists_url": "https://api.github.com/users/bohrshaw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bohrshaw",
                "id": 1585463,
                "login": "bohrshaw",
                "node_id": "MDQ6VXNlcjE1ODU0NjM=",
                "organizations_url": "https://api.github.com/users/bohrshaw/orgs",
                "received_events_url": "https://api.github.com/users/bohrshaw/received_events",
                "repos_url": "https://api.github.com/users/bohrshaw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bohrshaw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bohrshaw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bohrshaw"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@bohrshaw See this thread: https://github.com/neovim/neovim/pull/6142#issuecomment-282690785",
            "created_at": "2017-02-27T13:04:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-282713593",
            "id": 282713593,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjcxMzU5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282713593/reactions"
            },
            "updated_at": "2017-02-27T13:04:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/282713593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Most of the items in the checklist have a PR of their own. Currently, there's no PR associated with this item:\r\n\r\n- `:te` should open in split, similar to `:help`\r\n\r\nCould we create a PR for that (unless it already exists) and link to it from that item in the checklist? It would be good to have a designated place to discuss that item.",
            "created_at": "2017-07-24T10:33:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-317383483",
            "id": 317383483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzM4MzQ4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/317383483/reactions"
            },
            "updated_at": "2017-07-24T10:33:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/317383483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7069?v=4",
                "events_url": "https://api.github.com/users/nelstrom/events{/privacy}",
                "followers_url": "https://api.github.com/users/nelstrom/followers",
                "following_url": "https://api.github.com/users/nelstrom/following{/other_user}",
                "gists_url": "https://api.github.com/users/nelstrom/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/nelstrom",
                "id": 7069,
                "login": "nelstrom",
                "node_id": "MDQ6VXNlcjcwNjk=",
                "organizations_url": "https://api.github.com/users/nelstrom/orgs",
                "received_events_url": "https://api.github.com/users/nelstrom/received_events",
                "repos_url": "https://api.github.com/users/nelstrom/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/nelstrom/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nelstrom/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/nelstrom"
            }
        },
        {
            "author_association": "NONE",
            "body": "I know that I may loose the argument here, but I think Neovim `:terminal` behaves the right way already, and I would whish `:help` and other \"special\" buffers (e.g. quick fix) behave like it. Here are the reasons:\r\n\r\n1. Vim tabs are actually the right design, each tab is a layout and the user can switch between them easily. When `:help` (and `:copen` and probably others that I don't know about) is run the whole point of having different layouts on each tab is lost.\r\n2. Most commands behave the same, with exceptions, so the user must remember those especial cases to avoid disrupting the layout. Even if something like `:0te` is implemented (I would prefer something like `:current te` if it happens), there would be a default behaviour and a bunch of special cases :( I prefer consistency.\r\n\r\nOne can argue that the user that the user could have custom commands with the desire behaviour, and that's what I do, but it would be awesome if Neovim where more consistent than Vim, so I wouldn't need to remember to use my custom commands instead of the default `:help`. I don't expect the behaviour of `:help` to be changed, I know compatibility with Vim is more important, but it would be nice if `:terminal` was kept as is (plus support for `:vertical`, `:tab` and others)",
            "created_at": "2020-03-11T09:16:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-597523991",
            "id": 597523991,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzUyMzk5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/597523991/reactions"
            },
            "updated_at": "2020-03-11T09:16:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/597523991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1188977?v=4",
                "events_url": "https://api.github.com/users/tssm/events{/privacy}",
                "followers_url": "https://api.github.com/users/tssm/followers",
                "following_url": "https://api.github.com/users/tssm/following{/other_user}",
                "gists_url": "https://api.github.com/users/tssm/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tssm",
                "id": 1188977,
                "login": "tssm",
                "node_id": "MDQ6VXNlcjExODg5Nzc=",
                "organizations_url": "https://api.github.com/users/tssm/orgs",
                "received_events_url": "https://api.github.com/users/tssm/received_events",
                "repos_url": "https://api.github.com/users/tssm/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tssm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tssm/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tssm"
            }
        },
        {
            "author_association": "NONE",
            "body": "Tossing my hat/plugin/angle into the ring, I wrote a small-ish plugin for how I like to use `:terminal`:\r\n- https://github.com/jcorbin/neovim-termhide\r\n- basically I live the \"no more tmux, neovim is my root terminal app\" lifestyle\r\n- and on top of that, I mostly only over use one, session-specific, terminal at a time\r\n- ... that I want to be able to effectively show/hide, but never really terminate\r\n- sometimes I want it in a \"quake-style\" top-N line pull down form ( using say `winfixheight` )\r\n- sometimes I want it in a vert-split when doing more involved things\r\n- either way, the missing atom that most of my plugin is oriented around, is \"create or show existing\" , and make sure that it doesn't get killed when hidden\r\n- ...very much in line with tmux (and screen before it)'s idiom of \"create or attach to prior\", but now pivoted internally towards \"the one terminal\"\r\n- uncommonly, one can also spawn alternate shells or REPLs as in `:Term ipython` or `:Term node`\r\n\r\nOne of my current hanging problems tho, is that I very much wish that I could exclude my terminal buffers from session saving and/or have that `bufhidden` setting restored ( https://github.com/jcorbin/neovim-termhide/issues/2 )",
            "created_at": "2020-03-11T17:32:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-597767524",
            "id": 597767524,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "MDEyOklzc3VlQ29tbWVudDU5Nzc2NzUyNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/597767524/reactions"
            },
            "updated_at": "2021-08-31T14:23:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/597767524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/49715?v=4",
                "events_url": "https://api.github.com/users/jcorbin/events{/privacy}",
                "followers_url": "https://api.github.com/users/jcorbin/followers",
                "following_url": "https://api.github.com/users/jcorbin/following{/other_user}",
                "gists_url": "https://api.github.com/users/jcorbin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jcorbin",
                "id": 49715,
                "login": "jcorbin",
                "node_id": "MDQ6VXNlcjQ5NzE1",
                "organizations_url": "https://api.github.com/users/jcorbin/orgs",
                "received_events_url": "https://api.github.com/users/jcorbin/received_events",
                "repos_url": "https://api.github.com/users/jcorbin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jcorbin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jcorbin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jcorbin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk can you elaborate on the plan for `:read !foo`? In the original post you write, \"`:!` should use `:terminal` internally. Doesn't affect `:read !foo` etc.\" and then say \"`:read :term foo` should work like `:read !foo`\" What does this mean? It sounds like `:read !foo` isn't going to be changed by any of the `:!` plans, and that `:read :term foo` is going to be a new supported syntax that will have identical semantics to the current `:read !foo`. Is that correct?",
            "created_at": "2021-08-13T15:30:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-898545010",
            "id": 898545010,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "IC_kwDOAPphoM41jrVy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898545010/reactions"
            },
            "updated_at": "2022-08-22T15:19:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898545010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> terminal windows in a session are not properly restored\r\n\r\nIt'd be cool if there were the option (e.g. maybe something in `'sessionoptions'`) to have scrollback restored (or an api to be able to do this manually, like get and set scrollback functions). By default, manpages don't get restored correctly either last I checked.",
            "created_at": "2023-09-21T22:56:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/5431#issuecomment-1730457411",
            "id": 1730457411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5431",
            "node_id": "IC_kwDOAPphoM5nJK9D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1730457411/reactions"
            },
            "updated_at": "2023-09-21T22:58:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1730457411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/45028928?v=4",
                "events_url": "https://api.github.com/users/tmillr/events{/privacy}",
                "followers_url": "https://api.github.com/users/tmillr/followers",
                "following_url": "https://api.github.com/users/tmillr/following{/other_user}",
                "gists_url": "https://api.github.com/users/tmillr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tmillr",
                "id": 45028928,
                "login": "tmillr",
                "node_id": "MDQ6VXNlcjQ1MDI4OTI4",
                "organizations_url": "https://api.github.com/users/tmillr/orgs",
                "received_events_url": "https://api.github.com/users/tmillr/received_events",
                "repos_url": "https://api.github.com/users/tmillr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tmillr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tmillr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tmillr"
            }
        }
    ],
    "comments": 12,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/5431/comments",
    "created_at": "2016-10-05T03:55:21Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/5431/events",
    "html_url": "https://github.com/neovim/neovim/issues/5431",
    "id": 181059649,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/5431/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 288,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-04-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 135,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-02-12T23:38:13Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "MDU6SXNzdWUxODEwNTk2NDk=",
    "number": 5431,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 59,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 59,
        "url": "https://api.github.com/repos/neovim/neovim/issues/5431/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/5431/timeline",
    "title": ":terminal improvements",
    "updated_at": "2024-02-11T01:04:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/5431",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}