{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "```\r\n[  ERROR   ] test\\unit\\viml\\expressions\\parser_tests.lua @ 6329: API nvim_parse_expression works with &opt\r\n  C:/projects/neovim/test/functional\\api\\vim_spec.lua:1249: Error while processing test ('&', E):\r\nCUSTOMBUILD : table error :  [C:\\projects\\neovim\\build\\functionaltest.vcxproj]\r\n  C:/projects/neovim/test/functional\\api\\vim_spec.lua:1233: Expected objects to be the same.\r\n  Passed in:\r\n  (table) {\r\n    [1] = 'NvimInvalidOptionSigil:0:0:&'\r\n   *[2] = 'NvimInvalidOptionScope:0:1:'\r\n    [3] = 'NvimInvalidOptionScopeDelimiter:0:2:'\r\n    [4] = 'NvimInvalidOptionName:0:3:' }\r\n  Expected:\r\n  (table) {\r\n    [1] = 'NvimInvalidOptionSigil:0:0:&' }\r\n  \r\n  ({message = 'C:/projects/neovim/test/functional\\\\api\\\\vim_spec.lua:1233: Expected objects to be the same.\\nPassed in:\\n(table) {\\n  [1] = \\'NvimInvalidOptionSigil:0:0:&\\'\\n *[2] = \\'NvimInvalidOptionScope:0:1:\\'\\n  [3] = \\'NvimInvalidOptionScopeDelimiter:0:2:\\'\\n  [4] = \\'NvimInvalidOptionName:0:3:\\' }\\nExpected:\\n(table) {\\n  [1] = \\'NvimInvalidOptionSigil:0:0:&\\' }'})\r\n  \r\n  stack traceback:\r\n  \tC:/projects/neovim/test/functional\\api\\vim_spec.lua:1249: in function 'check_parsing'\r\n  \ttest\\unit\\viml\\expressions\\parser_tests.lua:6330: in function <test\\unit\\viml\\expressions\\parser_tests.lua:6329>\r\n  \r\n  \r\n   53 SKIPPED TESTS\r\n   1 ERROR\r\n  -- Output to stderr:\r\n  \r\n  CMake Error at C:/projects/neovim/cmake/RunTests.cmake:56 (message):\r\nCUSTOMBUILD : functional tests failed with error : 1 [C:\\projects\\neovim\\build\\functionaltest.vcxproj]\r\n```\r\nhttps://ci.appveyor.com/project/neovim/neovim/builds/25272869/job/drahenjssddv3yae#L14884 (MSVC_32)\r\n\r\n/cc @ZyX-I ",
    "closed_at": "2023-07-30T03:21:55Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> I don't think we need a separate ticket for every flaky test.\r\n\r\nI think flaky tests should have a high prio / visibility to be adressed/fixed (i.e.should be tracked in issues).\r\n\r\nIt is annoying to have builds fail due to that, not straight forward to actually look them up in the build logs (folding on Travis gets in the way, the raw log is large / not well structured).\r\nAlso it confuses contributors (https://github.com/neovim/neovim/pull/10300#issuecomment-504691617).\r\n\r\n> It's a known issue\r\n\r\nDiscussed elsewhere then already?",
            "created_at": "2019-06-22T20:05:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/10241#issuecomment-504694569",
            "id": 504694569,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10241",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDY5NDU2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/504694569/reactions"
            },
            "updated_at": "2021-09-22T18:24:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/504694569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://ci.appveyor.com/project/neovim/neovim/builds/25470836/job/wuv2ig6794kkpqer (MSVC_32):\r\n```\r\n[  ERROR   ] 1 error, listed below:\r\n  [  ERROR   ] test\\unit\\viml\\expressions\\parser_tests.lua @ 6329: API nvim_parse_expression works with &opt\r\n  C:/projects/neovim/test/functional\\api\\vim_spec.lua:1249: Error while processing test ('(1+&)', E):\r\nCUSTOMBUILD : table error :  [C:\\projects\\neovim\\build\\functionaltest.vcxproj]\r\n  C:/projects/neovim/test/functional\\api\\vim_spec.lua:1233: Expected objects to be the same.\r\n  Passed in:\r\n  (table) {\r\n    [1] = 'NvimNestingParenthesis:0:0:('\r\n    [2] = 'NvimNumber:0:1:1'\r\n    [3] = 'NvimBinaryPlus:0:2:+'\r\n    [4] = 'NvimInvalidOptionSigil:0:3:&'\r\n   *[5] = 'NvimInvalidOptionScope:0:4:)'\r\n    [6] = 'NvimInvalidOptionScopeDelimiter:0:5:'\r\n    [7] = 'NvimInvalidOptionName:0:6:'\r\n    [8] = 'NvimNestingParenthesis:0:4:)' }\r\n  Expected:\r\n  (table) {\r\n    [1] = 'NvimNestingParenthesis:0:0:('\r\n    [2] = 'NvimNumber:0:1:1'\r\n    [3] = 'NvimBinaryPlus:0:2:+'\r\n    [4] = 'NvimInvalidOptionSigil:0:3:&'\r\n   *[5] = 'NvimNestingParenthesis:0:4:)' }\r\n  \r\n  ({message = 'C:/projects/neovim/test/functional\\\\api\\\\vim_spec.lua:1233: Expected objects to be the same.\\nPassed in:\\n(table) {\\n  [1] = \\'NvimNestingParenthesis:0:0:(\\'\\n  [2] = \\'NvimNumber:0:1:1\\'\\n  [3] = \\'NvimBinaryPlus:0:2:+\\'\\n  [4] = \\'NvimInvalidOptionSigil:0:3:&\\'\\n *[5] = \\'NvimInvalidOptionScope:0:4:)\\'\\n  [6] = \\'NvimInvalidOptionScopeDelimiter:0:5:\\'\\n  [7] = \\'NvimInvalidOptionName:0:6:\\'\\n  [8] = \\'NvimNestingParenthesis:0:4:)\\' }\\nExpected:\\n(table) {\\n  [1] = \\'NvimNestingParenthesis:0:0:(\\'\\n  [2] = \\'NvimNumber:0:1:1\\'\\n  [3] = \\'NvimBinaryPlus:0:2:+\\'\\n  [4] = \\'NvimInvalidOptionSigil:0:3:&\\'\\n *[5] = \\'NvimNestingParenthesis:0:4:)\\' }'})\r\n  \r\n  stack traceback:\r\n  \tC:/projects/neovim/test/functional\\api\\vim_spec.lua:1249: in function 'check_parsing'\r\n  \ttest\\unit\\viml\\expressions\\parser_tests.lua:6475: in function <test\\unit\\viml\\expressions\\parser_tests.lua:6329>\r\n```\r\n\r\nIIRC I've seen this with MSVC_32 only so far.\r\n\r\nAgain:\r\n```\r\n[  ERROR   ] test\\unit\\viml\\expressions\\parser_tests.lua @ 6329: API nvim_parse_expression works with &opt\r\n  C:/projects/neovim/test/functional\\api\\vim_spec.lua:1249: Error while processing test ('&', E):\r\nCUSTOMBUILD : table error :  [C:\\projects\\neovim\\build\\functionaltest.vcxproj]\r\n  C:/projects/neovim/test/functional\\api\\vim_spec.lua:1233: Expected objects to be the same.\r\n  Passed in:\r\n  (table) {\r\n    [1] = 'NvimInvalidOptionSigil:0:0:&'\r\n   *[2] = 'NvimInvalidOptionScope:0:1:'\r\n    [3] = 'NvimInvalidOptionScopeDelimiter:0:2:'\r\n    [4] = 'NvimInvalidOptionName:0:3:' }\r\n  Expected:\r\n  (table) {\r\n    [1] = 'NvimInvalidOptionSigil:0:0:&' }\r\n  \r\n  ({message = 'C:/projects/neovim/test/functional\\\\api\\\\vim_spec.lua:1233: Expected objects to be the same.\\nPassed in:\\n(table) {\\n  [1] = \\'NvimInvalidOptionSigil:0:0:&\\'\\n *[2] = \\'NvimInvalidOptionScope:0:1:\\'\\n  [3] = \\'NvimInvalidOptionScopeDelimiter:0:2:\\'\\n  [4] = \\'NvimInvalidOptionName:0:3:\\' }\\nExpected:\\n(table) {\\n  [1] = \\'NvimInvalidOptionSigil:0:0:&\\' }'})\r\n  \r\n  stack traceback:\r\n  \tC:/projects/neovim/test/functional\\api\\vim_spec.lua:1249: in function 'check_parsing'\r\n  \ttest\\unit\\viml\\expressions\\parser_tests.lua:6330: in function <test\\unit\\viml\\expressions\\parser_tests.lua:6329>\r\n  \r\n  \r\n   53 SKIPPED TESTS\r\n   1 ERROR\r\n  -- Output to stderr:\r\n  CMake Error at C:/projects/neovim/cmake/RunTests.cmake:63 (message):\r\nCUSTOMBUILD : functional tests failed with error : 1 [C:\\projects\\neovim\\build\\functionaltest.vcxproj]\r\n```\r\n(https://ci.appveyor.com/project/neovim/neovim/builds/25516108/job/qv4r0gl8pw2ryaen)\r\n\r\nAgain (MSVC_32, https://ci.appveyor.com/project/neovim/neovim/builds/25954133/job/4pp88202u8hci3qu):\r\n```\r\nC:/projects/neovim/test/functional\\api\\vim_spec.lua:1242: Expected objects to be the same.\r\n  Passed in:\r\n  (table: 0x0d30ed40) {\r\n    [1] = 'NvimNestingParenthesis:0:0:('\r\n    [2] = 'NvimNumber:0:1:1'\r\n    [3] = 'NvimBinaryPlus:0:2:+'\r\n    [4] = 'NvimInvalidOptionSigil:0:3:&'\r\n   *[5] = 'NvimInvalidOptionScope:0:4:)'\r\n    [6] = 'NvimInvalidOptionScopeDelimiter:0:5:'\r\n    [7] = 'NvimInvalidOptionName:0:6:'\r\n    [8] = 'NvimNestingParenthesis:0:4:)' }\r\n  Expected:\r\n  (table: 0x0d310190) {\r\n    [1] = 'NvimNestingParenthesis:0:0:('\r\n    [2] = 'NvimNumber:0:1:1'\r\n    [3] = 'NvimBinaryPlus:0:2:+'\r\n    [4] = 'NvimInvalidOptionSigil:0:3:&'\r\n   *[5] = 'NvimNestingParenthesis:0:4:)' }\r\n```\r\n\r\n```\r\n[ RUN      ] API nvim_parse_expression works with &opt: ERR\r\n  test/functional\\api\\vim_spec.lua:1318: Error while processing test ('(1+&)', m):\r\nCUSTOMBUILD : table error :  [C:\\projects\\neovim\\build\\functionaltest.vcxproj]\r\n  test/functional\\api\\vim_spec.lua:1302: Expected objects to be the same.\r\n  Passed in:\r\n  (table: 0x0dd709f8) {\r\n    [1] = 'NvimNestingParenthesis:0:0:('\r\n    [2] = 'NvimNumber:0:1:1'\r\n    [3] = 'NvimBinaryPlus:0:2:+'\r\n    [4] = 'NvimInvalidOptionSigil:0:3:&'\r\n   *[5] = 'NvimInvalidOptionScope:0:4:)'\r\n    [6] = 'NvimInvalidOptionScopeDelimiter:0:5:'\r\n    [7] = 'NvimInvalidOptionName:0:6:'\r\n    [8] = 'NvimNestingParenthesis:0:4:)' }\r\n  Expected:\r\n  (table: 0x0dd71e48) {\r\n    [1] = 'NvimNestingParenthesis:0:0:('\r\n    [2] = 'NvimNumber:0:1:1'\r\n    [3] = 'NvimBinaryPlus:0:2:+'\r\n    [4] = 'NvimInvalidOptionSigil:0:3:&'\r\n   *[5] = 'NvimNestingParenthesis:0:4:)' }\r\n  \r\n  ({message = 'test/functional\\\\api\\\\vim_spec.lua:1302: Expected objects to be the same.\\nPassed in:\\n(table: 0x0dd709f8) {\\n  [1] = \\'NvimNestingParenthesis:0:0:(\\'\\n  [2] = \\'NvimNumber:0:1:1\\'\\n  [3] = \\'NvimBinaryPlus:0:2:+\\'\\n  [4] = \\'NvimInvalidOptionSigil:0:3:&\\'\\n *[5] = \\'NvimInvalidOptionScope:0:4:)\\'\\n  [6] = \\'NvimInvalidOptionScopeDelimiter:0:5:\\'\\n  [7] = \\'NvimInvalidOptionName:0:6:\\'\\n  [8] = \\'NvimNestingParenthesis:0:4:)\\' }\\nExpected:\\n(table: 0x0dd71e48) {\\n  [1] = \\'NvimNestingParenthesis:0:0:(\\'\\n  [2] = \\'NvimNumber:0:1:1\\'\\n  [3] = \\'NvimBinaryPlus:0:2:+\\'\\n  [4] = \\'NvimInvalidOptionSigil:0:3:&\\'\\n *[5] = \\'NvimNestingParenthesis:0:4:)\\' }'})\r\n  \r\n  stack traceback:\r\n  \ttest/functional\\api\\vim_spec.lua:1318: in function 'check_parsing'\r\n  \ttest\\unit\\viml\\expressions\\parser_tests.lua:6475: in function <test\\unit\\viml\\expressions\\parser_tests.lua:6329>\r\n```\r\nhttps://ci.appveyor.com/project/neovim/neovim/builds/26489935/job/p1p76if0js8vyamq?fullLog=true\r\n\r\n```\r\n[  ERROR   ] 1 error, listed below:\r\n6993  [  ERROR   ] test\\unit\\viml\\expressions\\parser_tests.lua @ 6329: API nvim_parse_expression works with &opt\r\n6994  test/functional\\api\\vim_spec.lua:1318: Error while processing test ('&', E):\r\n6995CUSTOMBUILD : table error :  [C:\\projects\\neovim\\build\\functionaltest.vcxproj]\r\n6996  test/functional\\api\\vim_spec.lua:1302: Expected objects to be the same.\r\n6997  Passed in:\r\n6998  (table: 0x0d003c30) {\r\n6999    [1] = 'NvimInvalidOptionSigil:0:0:&'\r\n7000   *[2] = 'NvimInvalidOptionScope:0:1:'\r\n7001    [3] = 'NvimInvalidOptionScopeDelimiter:0:2:'\r\n7002    [4] = 'NvimInvalidOptionName:0:3:' }\r\n7003  Expected:\r\n7004  (table: 0x0d004b28) {\r\n7005    [1] = 'NvimInvalidOptionSigil:0:0:&' }\r\n7006  \r\n7007  ({message = 'test/functional\\\\api\\\\vim_spec.lua:1302: Expected objects to be the same.\\nPassed in:\\n(table: 0x0d003c30) {\\n  [1] = \\'NvimInvalidOptionSigil:0:0:&\\'\\n *[2] = \\'NvimInvalidOptionScope:0:1:\\'\\n  [3] = \\'NvimInvalidOptionScopeDelimiter:0:2:\\'\\n  [4] = \\'NvimInvalidOptionName:0:3:\\' }\\nExpected:\\n(table: 0x0d004b28) {\\n  [1] = \\'NvimInvalidOptionSigil:0:0:&\\' }'})\r\n7008  \r\n7009  stack traceback:\r\n7010  \ttest/functional\\api\\vim_spec.lua:1318: in function 'check_parsing'\r\n7011  \ttest\\unit\\viml\\expressions\\parser_tests.lua:6330: in function <test\\unit\\viml\\expressions\\parser_tests.lua:6329>\r\n7012  \r\n7013  \r\n7014   48 SKIPPED TESTS\r\n7015   1 ERROR\r\n7016\r\n```\r\n(https://ci.appveyor.com/project/neovim/neovim/builds/26611486/job/a3xaxbkeqkuc92c3)",
            "created_at": "2019-06-23T02:20:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/10241#issuecomment-504713242",
            "id": 504713242,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10241",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDcxMzI0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/504713242/reactions"
            },
            "updated_at": "2019-08-11T10:54:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/504713242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This appears to happen on MSVC_32 only.\r\nThere are also a lot of warnings there, which might be related: https://ci.appveyor.com/project/neovim/neovim/builds/26489935/job/p1p76if0js8vyamq?fullLog=true#L1261  /cc @ngortheone ",
            "created_at": "2019-08-06T10:03:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/10241#issuecomment-518603341",
            "id": 518603341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10241",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUxODYwMzM0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/518603341/reactions"
            },
            "updated_at": "2019-08-06T10:03:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/518603341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Should we `retry` that test?  Would that help, or is it more related to how things have been compiled already?",
            "created_at": "2019-08-11T10:55:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/10241#issuecomment-520218690",
            "id": 520218690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10241",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDIxODY5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/520218690/reactions"
            },
            "updated_at": "2019-08-11T10:55:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/520218690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Should we `retry` that test? Would that help, or is it more related to how things have been compiled already?\r\n\r\nI'd suggest `pending()` or do nothing. `retry()` implies timing-related (i.e. expected) indeterminism, whereas this is more like a memory bug. See also  https://github.com/neovim/neovim/pull/8421#issuecomment-392451423",
            "created_at": "2019-08-11T11:02:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/10241#issuecomment-520219111",
            "id": 520219111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10241",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDIxOTExMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/520219111/reactions"
            },
            "updated_at": "2019-08-11T11:02:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/520219111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "MSVC_32 is no longer supported.",
            "created_at": "2023-07-30T03:21:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/10241#issuecomment-1657005908",
            "id": 1657005908,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/10241",
            "node_id": "IC_kwDOAPphoM5iw-dU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1657005908/reactions"
            },
            "updated_at": "2023-07-30T03:21:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1657005908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/10241/comments",
    "created_at": "2019-06-16T17:19:21Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/10241/events",
    "html_url": "https://github.com/neovim/neovim/issues/10241",
    "id": 456662867,
    "labels": [
        {
            "color": "c7def8",
            "default": false,
            "description": "",
            "id": 109899557,
            "name": "vimscript",
            "node_id": "MDU6TGFiZWwxMDk4OTk1NTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vimscript"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 110418643,
            "name": "test",
            "node_id": "MDU6TGFiZWwxMTA0MTg2NDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/test"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/10241/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 569,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 411,
        "state": "open",
        "title": "backlog",
        "updated_at": "2023-08-01T09:59:58Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWU0NTY2NjI4Njc=",
    "number": 10241,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/10241/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/10241/timeline",
    "title": "flaky test: \"API nvim_parse_expression works with &opt\"",
    "updated_at": "2023-07-30T03:21:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/10241",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
        "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
        "followers_url": "https://api.github.com/users/blueyed/followers",
        "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
        "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/blueyed",
        "id": 9766,
        "login": "blueyed",
        "node_id": "MDQ6VXNlcjk3NjY=",
        "organizations_url": "https://api.github.com/users/blueyed/orgs",
        "received_events_url": "https://api.github.com/users/blueyed/received_events",
        "repos_url": "https://api.github.com/users/blueyed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/blueyed"
    }
}