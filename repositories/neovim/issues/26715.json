{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI have lua script that calls `vim.cmd.split` which should trigger the `WinResized` but it doesn't.\r\n\r\n# Previous Issue\r\nThis issue is a follow-up to https://github.com/neovim/neovim/issues/26498\r\n\r\nIn that issue, I was asking why the `WinResized` event failed to trigger when I ran a lua script via `nvim -l ...` (which I expected would trigger `WinResized`). It was explained to me that:\r\n> There is no display when using -l, so WinResized is never triggered.\r\n\r\nThis explanation matches what the documentation also says:\r\n> -l {script} [args]\r\nExecutes Lua {script} non-interactively (no UI) with optional\r\n[args] after processing any preceding Nvim |cli-arguments|,\r\nthen exits. Exits 1 on Lua error. See |-S| to run multiple Lua\r\nscripts without args, with a UI.\r\n\r\n# Current Issue\r\nAs I understand, running my script with `-l` does not trigger the `WinResized` event since `-l` runs with no UI. The documentation above says `-S` runs with a UI so running my script with `-S` should trigger the `WinResized` event. However, I found that running my script with `-S` also did not trigger the `WinResized` event.\r\n\r\nIssue: Why does running my lua script via `nvim -S ...` fail to trigger the `WinResized` event?  \r\n\n\n### Steps to reproduce\n\nwinresized.lua\r\n```lua\r\nvim.api.nvim_create_autocmd({\"WinResized\"}, {\r\n    callback = function ()\r\n        print(\"WinResized triggered!\")\r\n    end\r\n})\r\n\r\nvim.cmd.split()\r\n```\r\n\r\nRun the file above like so: `nvim --clean -S winresized.lua`\n\n### Expected behavior\n\n`WinResized triggered!` should have been printed due to the `split()` command from the lua script, but it wasn't.\r\n\r\n* To make sure that the print statement is working, I tried adding `print(\"Start\")` to the beginning of the script and `Start` did appear.\r\n* If you manually split the windows after running the above command, you'll find that `WinResized triggered!` does get printed. So, it is just during the execution of `winresized.lua` that `WinResized` fails to trigger.\r\n* As a separate note, `WinResized triggered!` does not get printed via `nvim --clean \"+luafile /tmp/winresized.lua\"` either.\n\n### Neovim version (nvim -v)\n\n0.9.4 commit d772f69\n\n### Vim (not Nvim) behaves the same?\n\nVim does not have the `WinResized` event\n\n### Operating system/version\n\nFedora Linux 37\n\n### Terminal name/version\n\nkitty\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nbuild from repo",
    "closed_at": "2023-12-22T21:49:07Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Same reason. \"updating the display\" refers to screen update on the main redraw loop, which cannot be run during a script, so this is not possible.",
            "created_at": "2023-12-22T21:49:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/26715#issuecomment-1868090682",
            "id": 1868090682,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26715",
            "node_id": "IC_kwDOAPphoM5vWM06",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868090682/reactions"
            },
            "updated_at": "2023-12-22T21:49:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868090682",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there anything you might recommend so that I could have neovim take automated steps while also \"updating the display\"? The reason why I need this is because I am using it to test my plugin.",
            "created_at": "2023-12-22T22:36:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/26715#issuecomment-1868110508",
            "id": 1868110508,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26715",
            "node_id": "IC_kwDOAPphoM5vWRqs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868110508/reactions"
            },
            "updated_at": "2023-12-22T22:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868110508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7697639?v=4",
                "events_url": "https://api.github.com/users/carbon-steel/events{/privacy}",
                "followers_url": "https://api.github.com/users/carbon-steel/followers",
                "following_url": "https://api.github.com/users/carbon-steel/following{/other_user}",
                "gists_url": "https://api.github.com/users/carbon-steel/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/carbon-steel",
                "id": 7697639,
                "login": "carbon-steel",
                "node_id": "MDQ6VXNlcjc2OTc2Mzk=",
                "organizations_url": "https://api.github.com/users/carbon-steel/orgs",
                "received_events_url": "https://api.github.com/users/carbon-steel/received_events",
                "repos_url": "https://api.github.com/users/carbon-steel/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/carbon-steel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/carbon-steel/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/carbon-steel"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "1. Use `vim.schedule()` or `vim.defer_fn()`.\r\n2. Use an RPC client.",
            "created_at": "2023-12-22T22:48:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/26715#issuecomment-1868114933",
            "id": 1868114933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26715",
            "node_id": "IC_kwDOAPphoM5vWSv1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868114933/reactions"
            },
            "updated_at": "2023-12-22T22:48:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1868114933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26715/comments",
    "created_at": "2023-12-22T21:04:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26715/events",
    "html_url": "https://github.com/neovim/neovim/issues/26715",
    "id": 2054505831,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "current behavior is by design, and change is not desired",
            "id": 77997479,
            "name": "closed:wontfix",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26715/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM56dUVn",
    "number": 26715,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26715/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26715/timeline",
    "title": "WinResized does not trigger during -S",
    "updated_at": "2023-12-22T22:48:04Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26715",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7697639?v=4",
        "events_url": "https://api.github.com/users/carbon-steel/events{/privacy}",
        "followers_url": "https://api.github.com/users/carbon-steel/followers",
        "following_url": "https://api.github.com/users/carbon-steel/following{/other_user}",
        "gists_url": "https://api.github.com/users/carbon-steel/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/carbon-steel",
        "id": 7697639,
        "login": "carbon-steel",
        "node_id": "MDQ6VXNlcjc2OTc2Mzk=",
        "organizations_url": "https://api.github.com/users/carbon-steel/orgs",
        "received_events_url": "https://api.github.com/users/carbon-steel/received_events",
        "repos_url": "https://api.github.com/users/carbon-steel/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/carbon-steel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/carbon-steel/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/carbon-steel"
    }
}