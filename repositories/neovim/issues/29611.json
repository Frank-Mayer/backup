{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nhi folks, this is somehow related to #29509, but since that's about 'restoring&invalid', i feel i should open another issue.\r\n\r\nreplacing text with the same range of an extmark makes that extmark `.invalid=true`, but it does know the correct range after replacing, so i think that extmark should just be `.invalid=nil`.\n\n### Steps to reproduce\n\n* test.lua\r\n```\r\nlocal api = vim.api\r\n\r\nlocal ns = api.nvim_create_namespace(\"xxx\")\r\n\r\nlocal bufnr = api.nvim_get_current_buf()\r\n\r\napi.nvim_buf_set_lines(bufnr, 0, -1, false, { \"\", \"abcd\", \"\" })\r\n\r\n--stylua: ignore start\r\nlocal xmid = api.nvim_buf_set_extmark(bufnr, ns, 1, 1, {\r\n  end_row = 1, end_col = 3,\r\n  hl_group = \"Search\",\r\n  right_gravity = false, end_right_gravity = true,\r\n  invalidate = true, undo_restore = true,\r\n})\r\n--stylua: ignore end\r\n\r\napi.nvim_create_autocmd(\"textchanged\", {\r\n  buffer = bufnr,\r\n  callback = function()\r\n    local xm = api.nvim_buf_get_extmark_by_id(bufnr, ns, xmid, { details = true })\r\n    print(string.format(\"(%s:%s,%s:%s) invalid=%s\", xm[1], xm[2], xm[3].end_row, xm[3].end_col, xm[3].invalid))\r\n  end,\r\n})\r\n\r\napi.nvim_buf_set_keymap(bufnr, \"n\", \"<F1>\", \"\", {\r\n  noremap = true,\r\n  callback = function()\r\n    local timestamp = tostring(os.time())\r\n    local xm = api.nvim_buf_get_extmark_by_id(bufnr, ns, xmid, { details = true })\r\n    -- api.nvim_buf_set_text(bufnr, xm[1], xm[2] + 1, xm[3].end_row, xm[3].end_col - 1, { timestamp })\r\n    api.nvim_buf_set_text(bufnr, xm[1], xm[2], xm[3].end_row, xm[3].end_col, { timestamp })\r\n  end,\r\n})\r\n```\r\n* `nvim --clean -u test.lua`\r\n* `<F1>` # text replaced correctly, seeing '(1:1,1:11) invalid=true', the highlight is gone\r\n* `<F1>` #text replaced correctly\n\n### Expected behavior\n\ni think in this case the extmark should remain valid (`.invalid=nil`), and have highlighted.\n\n### Neovim version (nvim -v)\n\nnvim 0.10\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\narchlinux\n\n### Terminal name/version\n\nst 0.9.2\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\npacman",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This doesn't look like a bug, the `invalidate/invalid` properties are also not really relevant. This is just about the splice for replacing a word (through `nvim_buf_set_text` or otherwise), on a mark that spans that word, yielding a zero-range mark. I don't think that is subject to change.",
            "created_at": "2024-07-08T03:11:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/29611#issuecomment-2212901078",
            "id": 2212901078,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29611",
            "node_id": "IC_kwDOAPphoM6D5jDW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2212901078/reactions"
            },
            "updated_at": "2024-07-08T03:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2212901078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29611/comments",
    "created_at": "2024-07-08T02:48:06Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29611/events",
    "html_url": "https://github.com/neovim/neovim/issues/29611",
    "id": 2394479783,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "marks, extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "marks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/marks"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29611/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6OuNyn",
    "number": 29611,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29611/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29611/timeline",
    "title": "replacing text with the same range of an extmark makes that extmark invalid",
    "updated_at": "2024-07-08T03:11:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29611",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6236829?v=4",
        "events_url": "https://api.github.com/users/haolian9/events{/privacy}",
        "followers_url": "https://api.github.com/users/haolian9/followers",
        "following_url": "https://api.github.com/users/haolian9/following{/other_user}",
        "gists_url": "https://api.github.com/users/haolian9/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/haolian9",
        "id": 6236829,
        "login": "haolian9",
        "node_id": "MDQ6VXNlcjYyMzY4Mjk=",
        "organizations_url": "https://api.github.com/users/haolian9/orgs",
        "received_events_url": "https://api.github.com/users/haolian9/received_events",
        "repos_url": "https://api.github.com/users/haolian9/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/haolian9/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/haolian9/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/haolian9"
    }
}