{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nNvim does not restore the correct working directory if both tabpage-local and window-local working directory are set.\r\n\r\n### Steps to reproduce\r\n\r\n1. `mkdir -p ~/test/a/`\r\n2. `nvim --clean`\r\n3. `:tcd ~/test/`\r\n4. `:lcd sub/`\r\n5. `:mks! ~/session`\r\n6. Quit nvim, re-enter nvim using `nvim --clean -S ~/session`\r\n7. `:verbose pwd` --> `[tabpage] /home/<username>/test`, should be `[window] /home/<username>/test/a`\r\n\r\n### Expected behavior\r\n\r\nLocal working directory should be `~/test/a`\r\n\r\n## Additional info\r\n\r\nChecking the session file generated by nvim and vim, I find that nvim first sets window-local directory using `:lcd`, then sets tabpage-local directory using `:tcd`, while vim first sets `:tcd` then `:lcd`, which is the cause of the bug. Swapping the order of `:tcd` and `:lcd` in nvim session file fixes this issue.\r\n\r\nSession generate by nvim:\r\n\r\n```vim\r\nlet SessionLoad = 1\r\nlet s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1\r\nlet v:this_session=expand(\"<sfile>:p\")\r\nsilent only\r\nsilent tabonly\r\ncd ~\r\nif expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''\r\n  let s:wipebuf = bufnr('%')\r\nendif\r\nlet s:shortmess_save = &shortmess\r\nif &shortmess =~ 'A'\r\n  set shortmess=aoOA\r\nelse\r\n  set shortmess=aoO\r\nendif\r\nargglobal\r\n%argdel\r\nargglobal\r\nenew\r\nsetlocal fdm=manual\r\nsetlocal fde=0\r\nsetlocal fmr={{{,}}}\r\nsetlocal fdi=#\r\nsetlocal fdl=0\r\nsetlocal fml=1\r\nsetlocal fdn=20\r\nsetlocal fen\r\nlcd ~/test/a\r\nif exists(':tcd') == 2 | tcd ~/test | endif\r\ntabnext 1\r\nif exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'\r\n  silent exe 'bwipe ' . s:wipebuf\r\nendif\r\nunlet! s:wipebuf\r\nset winheight=1 winwidth=20\r\nlet &shortmess = s:shortmess_save\r\nlet s:sx = expand(\"<sfile>:p:r\").\"x.vim\"\r\nif filereadable(s:sx)\r\n  exe \"source \" . fnameescape(s:sx)\r\nendif\r\nlet &g:so = s:so_save | let &g:siso = s:siso_save\r\nset hlsearch\r\ndoautoall SessionLoadPost\r\nunlet SessionLoad\r\n\" vim: set ft=vim :\r\n```\r\n\r\nSession generated by vim:\r\n\r\n```vim\r\nlet SessionLoad = 1\r\nif &cp | set nocp | endif\r\nlet s:cpo_save=&cpo\r\nset cpo&vim\r\ninoremap <C-U> \u0016\u0007u\u0016\u0015\r\nnmap Q gq\r\nxmap Q gq\r\nomap Q gq\r\ninoremap \u0016\u0015 \u0016\u0007u\u0016\u0015\r\nlet &cpo=s:cpo_save\r\nunlet s:cpo_save\r\nset backspace=indent,eol,start\r\nset display=truncate\r\nset fileencodings=ucs-bom,utf-8,default,latin1\r\nset helplang=en\r\nset history=200\r\nset incsearch\r\nset langnoremap\r\nset nolangremap\r\nset noloadplugins\r\nset mouse=nvi\r\nset nrformats=bin,hex\r\nset ruler\r\nset scrolloff=5\r\nset showcmd\r\nset ttimeout\r\nset ttimeoutlen=100\r\nset viminfofile=NONE\r\nset wildmenu\r\nlet s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1\r\nlet v:this_session=expand(\"<sfile>:p\")\r\nsilent only\r\nsilent tabonly\r\ncd ~\r\nif expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''\r\n  let s:wipebuf = bufnr('%')\r\nendif\r\nif &shortmess =~ 'A'\r\n  set shortmess=aoOA\r\nelse\r\n  set shortmess=aoO\r\nendif\r\nargglobal\r\n%argdel\r\ntcd ~/test\r\nargglobal\r\nenew\r\nsetlocal keymap=\r\nsetlocal noarabic\r\nsetlocal noautoindent\r\nsetlocal backupcopy=\r\nsetlocal balloonexpr=\r\nsetlocal nobinary\r\nsetlocal nobreakindent\r\nsetlocal breakindentopt=\r\nsetlocal bufhidden=\r\nsetlocal buflisted\r\nsetlocal buftype=\r\nsetlocal nocindent\r\nsetlocal cinkeys=0{,0},0),0],:,0#,!^F,o,O,e\r\nsetlocal cinoptions=\r\nsetlocal cinscopedecls=public,protected,private\r\nsetlocal cinwords=if,else,while,do,for,switch\r\nsetlocal colorcolumn=\r\nsetlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-\r\nsetlocal commentstring=/*%s*/\r\nsetlocal complete=.,w,b,u,t,i\r\nsetlocal concealcursor=\r\nsetlocal conceallevel=0\r\nsetlocal completefunc=\r\nsetlocal nocopyindent\r\nsetlocal cryptmethod=\r\nsetlocal nocursorbind\r\nsetlocal nocursorcolumn\r\nsetlocal nocursorline\r\nsetlocal cursorlineopt=both\r\nsetlocal define=\r\nsetlocal dictionary=\r\nsetlocal nodiff\r\nsetlocal equalprg=\r\nsetlocal errorformat=\r\nsetlocal noexpandtab\r\nif &filetype != ''\r\nsetlocal filetype=\r\nendif\r\nsetlocal fillchars=\r\nsetlocal fixendofline\r\nsetlocal foldcolumn=0\r\nsetlocal foldenable\r\nsetlocal foldexpr=0\r\nsetlocal foldignore=#\r\nsetlocal foldlevel=0\r\nsetlocal foldmarker={{{,}}}\r\nsetlocal foldmethod=manual\r\nsetlocal foldminlines=1\r\nsetlocal foldnestmax=20\r\nsetlocal foldtext=foldtext()\r\nsetlocal formatexpr=\r\nsetlocal formatoptions=tcq\r\nsetlocal formatlistpat=^\\\\s*\\\\d\\\\+[\\\\]:.)}\\\\t\\ ]\\\\s*\r\nsetlocal formatprg=\r\nsetlocal grepprg=\r\nsetlocal iminsert=0\r\nsetlocal imsearch=-1\r\nsetlocal include=\r\nsetlocal includeexpr=\r\nsetlocal indentexpr=\r\nsetlocal indentkeys=0{,0},0),0],:,0#,!^F,o,O,e\r\nsetlocal noinfercase\r\nsetlocal iskeyword=@,48-57,_,192-255\r\nsetlocal keywordprg=\r\nsetlocal nolinebreak\r\nsetlocal nolisp\r\nsetlocal lispoptions=\r\nsetlocal lispwords=\r\nsetlocal nolist\r\nsetlocal listchars=\r\nsetlocal makeencoding=\r\nsetlocal makeprg=\r\nsetlocal matchpairs=(:),{:},[:]\r\nsetlocal modeline\r\nsetlocal modifiable\r\nsetlocal nrformats=bin,hex\r\nsetlocal nonumber\r\nsetlocal numberwidth=4\r\nsetlocal omnifunc=\r\nsetlocal path=\r\nsetlocal nopreserveindent\r\nsetlocal nopreviewwindow\r\nsetlocal quoteescape=\\\\\r\nsetlocal noreadonly\r\nsetlocal norelativenumber\r\nsetlocal norightleft\r\nsetlocal rightleftcmd=search\r\nsetlocal noscrollbind\r\nsetlocal scrolloff=-1\r\nsetlocal shiftwidth=8\r\nsetlocal noshortname\r\nsetlocal showbreak=\r\nsetlocal sidescrolloff=-1\r\nsetlocal signcolumn=auto\r\nsetlocal nosmartindent\r\nsetlocal nosmoothscroll\r\nsetlocal softtabstop=0\r\nsetlocal nospell\r\nsetlocal spellcapcheck=[.?!]\\\\_[\\\\])'\\\"\\\t\\ ]\\\\+\r\nsetlocal spellfile=\r\nsetlocal spelllang=en\r\nsetlocal spelloptions=\r\nsetlocal statusline=\r\nsetlocal suffixesadd=\r\nsetlocal swapfile\r\nsetlocal synmaxcol=3000\r\nif &syntax != ''\r\nsetlocal syntax=\r\nendif\r\nsetlocal tabstop=8\r\nsetlocal tagcase=\r\nsetlocal tagfunc=\r\nsetlocal tags=\r\nsetlocal termwinkey=\r\nsetlocal termwinscroll=10000\r\nsetlocal termwinsize=\r\nsetlocal textwidth=0\r\nsetlocal thesaurus=\r\nsetlocal thesaurusfunc=\r\nsetlocal noundofile\r\nsetlocal undolevels=-123456\r\nsetlocal varsofttabstop=\r\nsetlocal vartabstop=\r\nsetlocal virtualedit=\r\nsetlocal wincolor=\r\nsetlocal nowinfixheight\r\nsetlocal nowinfixwidth\r\nsetlocal wrap\r\nsetlocal wrapmargin=0\r\nlcd ~/test/a\r\ntabnext 1\r\nif exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0\r\n  silent exe 'bwipe ' . s:wipebuf\r\nendif\r\nunlet! s:wipebuf\r\nset winheight=1 winwidth=20\r\nset shortmess=filnxtToOS\r\nlet s:sx = expand(\"<sfile>:p:r\").\"x.vim\"\r\nif filereadable(s:sx)\r\n  exe \"source \" . fnameescape(s:sx)\r\nendif\r\nlet &g:so = s:so_save | let &g:siso = s:siso_save\r\ndoautoall SessionLoadPost\r\nunlet SessionLoad\r\n\" vim: set ft=vim :\r\n```\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.10.0-dev-1491+gcd097ab8cc\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nno, vim has correct working directory after restoring from session\r\n\r\n### Operating system/version\r\n\r\nLinux 6.1.60-1-lts\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.12.3 (5efb0690) + tmux 3.3a\r\n\r\n### $TERM environment variable\r\n\r\ntmux-256color\r\n\r\n### Installation\r\n\r\nAUR",
    "closed_at": "2023-11-22T21:10:11Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Already fixed by #26022",
            "created_at": "2023-11-22T21:10:11Z",
            "html_url": "https://github.com/neovim/neovim/issues/26156#issuecomment-1823508100",
            "id": 1823508100,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26156",
            "node_id": "IC_kwDOAPphoM5ssIaE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1823508100/reactions"
            },
            "updated_at": "2023-11-22T21:10:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1823508100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26156/comments",
    "created_at": "2023-11-22T18:16:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26156/events",
    "html_url": "https://github.com/neovim/neovim/issues/26156",
    "id": 2006884156,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26156/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM53np88",
    "number": 26156,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26156/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26156/timeline",
    "title": "Wong pwd after restoring from session files",
    "updated_at": "2023-11-22T21:10:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26156",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/76579810?v=4",
        "events_url": "https://api.github.com/users/Bekaboo/events{/privacy}",
        "followers_url": "https://api.github.com/users/Bekaboo/followers",
        "following_url": "https://api.github.com/users/Bekaboo/following{/other_user}",
        "gists_url": "https://api.github.com/users/Bekaboo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Bekaboo",
        "id": 76579810,
        "login": "Bekaboo",
        "node_id": "MDQ6VXNlcjc2NTc5ODEw",
        "organizations_url": "https://api.github.com/users/Bekaboo/orgs",
        "received_events_url": "https://api.github.com/users/Bekaboo/received_events",
        "repos_url": "https://api.github.com/users/Bekaboo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Bekaboo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Bekaboo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Bekaboo"
    }
}