{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhilst I’m keenly aware with Neovim there’s always a tradeoff between features and raw performance, I’m wondering in which areas refactoring has thus far made the code run more efficiently.\r\n\r\n#4448 touches on this, but otherwise the only information I’ve seen on the subject is the following comment from justinmk a number of years ago.\r\n\r\n> Nvim is faster in some cases.\r\n> - :write is faster because 'nofsync' is the default (swapfiles are still fsync'd during idle, along with other fsync-related logic improvements which make 'fsync' unnecessary)\r\n> - :!, :grep, etc., is 10x faster for output-heavy commands (where writing to the tty is the bottleneck)\r\n> - For slow 'foldmethod' Nvim will feel faster during insert-mode.\r\n> - Since Nvim 0.3.2 the TUI is much smarter about avoiding full redraws, in more cases than Vim.\n\n### Expected behavior\n\nWhat other PRs can I look at?",
    "closed_at": "2024-09-05T06:46:34Z",
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30269/comments",
    "created_at": "2024-09-05T06:36:10Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30269/events",
    "html_url": "https://github.com/neovim/neovim/issues/30269",
    "id": 2506898327,
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30269/labels{/name}",
    "locked": true,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6VbDuX",
    "number": 30269,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30269/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30269/timeline",
    "title": "performance roundup",
    "updated_at": "2024-09-05T07:05:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30269",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/87453615?v=4",
        "events_url": "https://api.github.com/users/nisbet-hubbard/events{/privacy}",
        "followers_url": "https://api.github.com/users/nisbet-hubbard/followers",
        "following_url": "https://api.github.com/users/nisbet-hubbard/following{/other_user}",
        "gists_url": "https://api.github.com/users/nisbet-hubbard/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nisbet-hubbard",
        "id": 87453615,
        "login": "nisbet-hubbard",
        "node_id": "MDQ6VXNlcjg3NDUzNjE1",
        "organizations_url": "https://api.github.com/users/nisbet-hubbard/orgs",
        "received_events_url": "https://api.github.com/users/nisbet-hubbard/received_events",
        "repos_url": "https://api.github.com/users/nisbet-hubbard/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nisbet-hubbard/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nisbet-hubbard/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nisbet-hubbard"
    }
}