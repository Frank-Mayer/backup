{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\n\nUpdating text and extmarks inside `TextChangedP` event can lead to incorrect tracking by extmarks of their ranges. In particular, when user navigates from selected entry in completion popup to no selected entry in completion popup.\n\nI do understand that this is a rather niche use case with complicated reproduction. Yet it does seem like an indication of some issue in core.\nAlso, this situation can happen during snippet session with a `$1$1` snippet. At the moment, `vim.snippet` doesn't work with that snippet (no snippet session is started) and doesn't track changes in 'TextChangedP', but both seem reasonable to become reality.\n\n**Note**: this happens on 0.10.2, current Nightly (`NVIM v0.11.0-dev-1287+g8f84167c30`), and after #31448 (at the state of `NVIM v0.11.0-dev-1291+gd817375d3e`).\n\n### Steps to reproduce\n\n1. Create the following (minimized as much as I was able to) 'init.lua':\n\n    <details><summary>Code of 'init.lua'</summary>\n\n    ```lua\n    -- Define helper functions to work with extmarks\n    local ns_id = vim.api.nvim_create_namespace('extmark')\n\n    local get_extmark_data = function(extmark_id)\n      local data = vim.api.nvim_buf_get_extmark_by_id(0, ns_id, extmark_id, { details = true })\n      -- Make `data[3]` settable as `opts` in `nvim_buf_set_extmark()`\n      data[3].id, data[3].ns_id = extmark_id, nil\n      return data[1], data[2], data[3]\n    end\n\n    local set_gravity = function(extmark_id, right_gravity, end_right_gravity)\n      local row, col, opts = get_extmark_data(extmark_id)\n      opts.right_gravity, opts.end_right_gravity = right_gravity, end_right_gravity\n      vim.api.nvim_buf_set_extmark(0, ns_id, row, col, opts)\n    end\n\n    -- Define logger for tracking extmark evolution\n    _G.log = {}\n    local add_log = function(state)\n      local extmarks = vim.api.nvim_buf_get_extmarks(0, ns_id, 0, -1, { details = true })\n      table.insert(_G.log, { state = state, line = vim.api.nvim_get_current_line(), extmarks = extmarks })\n    end\n\n    -- Set repro state: text for built-in completion and place to use it.\n    vim.api.nvim_buf_set_lines(0, 0, -1, false, { 'aa bb', '' })\n    vim.api.nvim_win_set_cursor(0, { 2, 0 })\n    vim.o.completeopt = 'menuone,noselect'\n\n    -- Create empty extmarks: `mark_1` as reference and `mark_2` to be synced\n    -- IMPORTANT: marks are at the same column. No issue if they are apart.\n    local mark_1 = vim.api.nvim_buf_set_extmark(0, ns_id, 1, 0, { end_row = 1, end_col = 0, hl_group = 'Search' })\n    local mark_2 = vim.api.nvim_buf_set_extmark(0, ns_id, 1, 0, { end_row = 1, end_col = 0, hl_group = 'String' })\n    set_gravity(mark_1, false, true)\n    set_gravity(mark_2, true, true)\n\n    -- Define synchronization of mark_2\n    local n = 0\n    local sync_mark_2 = function()\n      -- Log before\n      n = n + 1\n      add_log('Before sync #' .. n)\n\n      -- Change gravity for text change to properly affect extmarks:\n      -- \"left\" for `mark_1` (untouched) and \"expand\" for `mark_2` (tracks text)\n      set_gravity(mark_1, false, false)\n      set_gravity(mark_2, false, true)\n\n      -- Set text of mark_1 to be the same for mark_2\n      local row_1, col_1, opts_1 = get_extmark_data(mark_1)\n      local mark_1_text = vim.api.nvim_buf_get_text(0, row_1, col_1, opts_1.end_row, opts_1.end_col, {})\n      local row_2, col_2, opts_2 = get_extmark_data(mark_2)\n      vim.api.nvim_buf_set_text(0, row_2, col_2, opts_2.end_row, opts_2.end_col, mark_1_text)\n\n      -- Change gravity back: \"expand\" for `mark_1` and \"right\" for mark_2\n      set_gravity(mark_1, false, true)\n      set_gravity(mark_2, true, true)\n\n      -- Log after\n      add_log('After sync #' .. n)\n    end\n    vim.api.nvim_create_autocmd({ 'TextChangedP' }, { callback = sync_mark_2 })\n    ```\n    </details>\n2. `nvim --clean -u path/to/init.lua`\n3. Press `<C-n>`. Popup should appear without anything selected.\n4. Press `<C-n>` to select `aa` entry. It should be inserted in the text **twice** with different highlighting: first `Search` and then `String`. This is a result of text synchronization.\n5. Press `<C-p>` to go to initial state. There is still *unhighlighted* `aa` text present, although it should have been deleted during synchronization. This is a result of (what looks like) incorrect tracking by extmarks of their ranges. Here is a pretty formatted log:\n\n    <details><summary>Formatted log with exact place indicating the tracking issue</summary>\n\n    ```\n    {\n      -- First `<C-n>` press\n      {\n        state = \"Before sync #1\",\n        line = \"\",\n        extmarks = {\n          { 1, 1, 0, { end_row = 1, end_col = 0, right_gravity = false, end_right_gravity = true, hl_eol = false, hl_group = \"Search\", ns_id = 1, priority = 4096 } },\n          { 2, 1, 0, { end_row = 1, end_col = 0, right_gravity = true,  end_right_gravity = true, hl_eol = false, hl_group = \"String\", ns_id = 1, priority = 4096 } },\n        },\n      },\n      {\n        state = \"After sync #1\",\n        line = \"\",\n        extmarks = {\n          { 1, 1, 0, { end_row = 1, end_col = 0, right_gravity = false, end_right_gravity = true, hl_eol = false, hl_group = \"Search\", ns_id = 1, priority = 4096 } },\n          { 2, 1, 0, { end_row = 1, end_col = 0, right_gravity = true,  end_right_gravity = true, hl_eol = false, hl_group = \"String\", ns_id = 1, priority = 4096 } },\n        },\n      },\n      -- Second `<C-n>` press\n      {\n        state = \"Before sync #2\",\n        line = \"aa\",\n        extmarks = {\n          { 1, 1, 0, { end_row = 1, end_col = 2, right_gravity = false, end_right_gravity = true, hl_eol = false, hl_group = \"Search\", ns_id = 1, priority = 4096 } },\n          { 2, 1, 2, { end_row = 1, end_col = 2, right_gravity = true,  end_right_gravity = true, hl_eol = false, hl_group = \"String\", ns_id = 1, priority = 4096 } },\n        },\n      },\n      {\n        state = \"After sync #2\",\n        line = \"aaaa\",\n        extmarks = {\n          { 1, 1, 0, { end_row = 1, end_col = 2, right_gravity = false, end_right_gravity = true, hl_eol = false, hl_group = \"Search\", ns_id = 1, priority = 4096 } },\n          { 2, 1, 2, { end_row = 1, end_col = 4, right_gravity = true,  end_right_gravity = true, hl_eol = false, hl_group = \"String\", ns_id = 1, priority = 4096 } },\n        },\n      },\n      -- `<C-p>` press\n      {\n        state = \"Before sync #3\",\n        line = \"aa\",\n        extmarks = {\n          { 1, 1, 0, { end_row = 1, end_col = 0, right_gravity = false, end_right_gravity = true, hl_eol = false, hl_group = \"Search\", ns_id = 1, priority = 4096 } },\n          -- Main issue indicator:\n          -- - Before pressing `<C-p>` this extmark covered (1;2)-(1;4) range with both right gravity.\n          -- - After pressing `<C-p>` this extmark says that it covers (1;0)-(1;0) range.\n          --   This should not be the case, as only first two characters should have changed.\n          { 2, 1, 0, { end_row = 1, end_col = 0, right_gravity = true,  end_right_gravity = true, hl_eol = false, hl_group = \"String\", ns_id = 1, priority = 4096 } },\n        },\n      },\n      {\n        state = \"After sync #3\",\n        line = \"aa\",\n        extmarks = {\n          { 1, 1, 0, { end_row = 1, end_col = 0, right_gravity = false, end_right_gravity = true, hl_eol = false, hl_group = \"Search\", ns_id = 1, priority = 4096 } },\n          { 2, 1, 0, { end_row = 1, end_col = 0, right_gravity = true,  end_right_gravity = true, hl_eol = false, hl_group = \"String\", ns_id = 1, priority = 4096 } },\n        },\n      },\n    }\n    ```\n\n    <details>\n\n\nHere the demo with showcased log:\n\nhttps://github.com/user-attachments/assets/71f63ca1-a412-4c15-b6d5-fbc504845346\n\n### Expected behavior\n\nExtmarks always track text changes in the same way.\n\n### Nvim version (nvim -v)\n\nNVIM v0.11.0-dev-1287+g8f84167c30\n\n### Vim (not Nvim) behaves the same?\n\nNo, doesn't have this functionality\n\n### Operating system/version\n\nEndeavourOS Linux x86_64, 6.12.1-arch1-1\n\n### Terminal name/version\n\nGhostty 0.1.0-main+3c637a27\n\n### $TERM environment variable\n\nxterm-ghostty\n\n### Installation\n\nAppimage",
    "closed_at": "2024-12-07T11:06:59Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "#31475 may fix this. I posted this last night but I'm entirely sure it is correct so deleted itðŸ«£ I came across a TODO comment by @bfredl that seems to agree with the change though so thought I would open the PR.",
            "created_at": "2024-12-06T10:58:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/31465#issuecomment-2522856338",
            "id": 2522856338,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31465",
            "node_id": "IC_kwDOAPphoM6WX7uS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2522856338/reactions"
            },
            "updated_at": "2024-12-06T10:58:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2522856338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31465/comments",
    "created_at": "2024-12-05T18:06:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31465/events",
    "html_url": "https://github.com/neovim/neovim/issues/31465",
    "id": 2721081393,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains minimal reproducing steps",
            "id": 435851959,
            "name": "has:repro",
            "node_id": "MDU6TGFiZWw0MzU4NTE5NTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:repro"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "marks, extmarks, decorations, virtual text, namespaces",
            "id": 1680119719,
            "name": "marks",
            "node_id": "MDU6TGFiZWwxNjgwMTE5NzE5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/marks"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31465/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6iMGgx",
    "number": 31465,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31465/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31465/timeline",
    "title": "Extmarks might not track text changes in combination with built-in completion and `TextChangedP` event",
    "updated_at": "2024-12-07T11:06:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31465",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski",
        "user_view_type": "public"
    }
}