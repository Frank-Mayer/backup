{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\nAbout a year ago I asked [this question](https://neovim.discourse.group/t/is-there-a-way-to-set-options-only-for-a-hover-buffer/959) in the Neovim discourse group about how to define options for a 'hover buffer', which I now know is called a floating window, and couldn't get my issue solved.\r\n\r\nI decided to revisit this issue because I don't like how the floating windows inherit the `showbreak`, `breakindent` and `breakindentopt` options, as you can see in the screenshot.\r\n\r\n<img width=\"1552\" alt=\"image\" src=\"https://user-images.githubusercontent.com/37723586/189497061-be691624-caaf-419e-a7dd-543027c0d090.png\">\r\n\r\nI have read `:h api-floatwin` and `:h nvim_open_win` and couldn't find a way to define those options for every floating window that is opened.\r\n\r\nOne the first things I tried when I first found this issue was to find if the floating windows had some filetype or the like that I could use to modify the floating windows.\r\n\r\nOne easy example is with the following snippet:\r\n\r\n```javascript\r\n/**\r\n * @name hello\r\n * A function with a veeeeeery long description. I am adding random words so that the description is very and has to be soft-wrapped. Word Word Word Word Word Word Word.\r\n */\r\nfunction hello() {\r\n  console.log(\"Hello World\");\r\n}\r\n```\r\n\r\nIf you have the following vim options set:\r\n\r\n```vim\r\nset linebreak\r\nset breakindent\r\nset breakindentopt=shift:2\r\nset showbreak=â†³\\ \r\n```\r\n\r\nAnd execute `:lua vim.lsp.buf.hover()` when having the cursor on `hello` the documentation is wrapped using those options.\r\n\r\nIn `:h api-floatwin` I found a possible way to do that, but I don't know how it could be applied to `vim.lsp.buf.hover` and the like.\r\n\r\n> Example: create a float with scratch buffer:  \r\n>\r\n> ```vim\r\n> let buf = nvim_create_buf(v:false, v:true)\r\n> call nvim_buf_set_lines(buf, 0, -1, v:true, [\"test\", \"text\"])\r\n> let opts = {'relative': 'cursor', 'width': 10, 'height': 2, 'col': 0,\r\n>     \\ 'row': 1, 'anchor': 'NW', 'style': 'minimal'}\r\n> let win = nvim_open_win(buf, 0, opts)\r\n> \" optional: change highlight, otherwise Pmenu is used\r\n> call nvim_win_set_option(win, 'winhl', 'Normal:MyHighlight')\r\n> ```\r\n\r\nThanks for your help!",
    "closed_at": "2022-09-11T21:07:49Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "disable wrap for default hover `vim.lsp.buf.hover` by using this . your screenshot looks like nvim-cmp? it not using default \r\nfunctions and the floatwindow is defined by cmp.\r\n\r\n```lua\r\nvim.lsp.handlers[\"textDocument/hover\"] = vim.lsp.with(\r\n  vim.lsp.handlers.hover, {\r\n     wrap = false\r\n  }\r\n)\r\n\r\n```",
            "created_at": "2022-09-11T11:36:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1242945435",
            "id": 1242945435,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KFdeb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1242945435/reactions"
            },
            "updated_at": "2022-09-11T11:59:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1242945435",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Should be possible with a `WinNew` autocmd that inspects `nvim_win_get_config()` (the `relative` field indicates \"floating\").",
            "created_at": "2022-09-11T21:07:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1243043219",
            "id": 1243043219,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KF1WT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243043219/reactions"
            },
            "updated_at": "2022-09-11T21:09:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243043219",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> disable wrap for default hover `vim.lsp.buf.hover` by using this . your screenshot looks like nvim-cmp? it not using default functions and the floatwindow is defined by cmp.\r\n> \r\n> ```lua\r\n> vim.lsp.handlers[\"textDocument/hover\"] = vim.lsp.with(\r\n>   vim.lsp.handlers.hover, {\r\n>      wrap = false\r\n>   }\r\n> )\r\n> ```\r\n\r\n@glepnir Thanks! That helps a little bit, but that leads to not being able to read the information that is wrapped.\r\n\r\n<img width=\"1552\" alt=\"image\" src=\"https://user-images.githubusercontent.com/37723586/189551704-fbafc201-01c0-463a-a4dd-35c5b15bdb5a.png\">\r\n\r\n> Should be possible with a WinNew autocmd that inspects nvim_win_get_config() (the relative field indicates \"floating\").\r\n\r\n@justinmk Do you have an example?\r\n\r\nI just tried creating the following `autocmd`, but the message is not displayed when executing `vim.lsp.buf.hover`.\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd(\"WinNew\", {\r\n  pattern = \"*\",\r\n  callback = function()\r\n    local config = vim.api.nvim_win_get_config(0)\r\n    print(vim.inspect(config))\r\n  end,\r\n})\r\n```\r\n\r\nIf execute `:copen` or `:help` the message is displayed, though. ",
            "created_at": "2022-09-11T22:46:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1243058493",
            "id": 1243058493,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KF5E9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243058493/reactions"
            },
            "updated_at": "2022-09-11T22:46:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243058493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37723586?v=4",
                "events_url": "https://api.github.com/users/datwaft/events{/privacy}",
                "followers_url": "https://api.github.com/users/datwaft/followers",
                "following_url": "https://api.github.com/users/datwaft/following{/other_user}",
                "gists_url": "https://api.github.com/users/datwaft/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datwaft",
                "id": 37723586,
                "login": "datwaft",
                "node_id": "MDQ6VXNlcjM3NzIzNTg2",
                "organizations_url": "https://api.github.com/users/datwaft/orgs",
                "received_events_url": "https://api.github.com/users/datwaft/received_events",
                "repos_url": "https://api.github.com/users/datwaft/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datwaft/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datwaft/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datwaft",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> but that leads to not being able to read the information that is wrapped.\r\n\r\nright that mean disable wrap so if the text longer than window . you can't see the text over the window.\r\n\r\n`0` is mean the current widow that cursor in . so you can't use 0 for that. use `nvim_list_wins` to find the hover window then do something\r\n",
            "created_at": "2022-09-11T22:57:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1243060030",
            "id": 1243060030,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KF5c-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243060030/reactions"
            },
            "updated_at": "2022-09-11T22:57:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243060030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> `0` is mean the current widow that cursor in . so you can't use 0 for that. use `nvim_list_wins` to find the hover window then do something\r\n\r\nThanks!\r\n\r\nI still have the problem that the `autocmd` is not executed when executing `vim.lsp.buf.hover`, but if I fix that I can iterate over the windows and then set options for every window that is floating.\r\n\r\n```lua\r\n-- This is not executed with `vim.lsp.buf.hover`\r\nvim.api.nvim_create_autocmd(\"WinNew\", {\r\n  pattern = \"*\",\r\n  callback = function()\r\n    local windows = vim.api.nvim_list_wins()\r\n    print(vim.inspect(windows))\r\n  end,\r\n})\r\n```",
            "created_at": "2022-09-11T23:02:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1243060883",
            "id": 1243060883,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KF5qT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243060883/reactions"
            },
            "updated_at": "2022-09-11T23:02:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243060883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37723586?v=4",
                "events_url": "https://api.github.com/users/datwaft/events{/privacy}",
                "followers_url": "https://api.github.com/users/datwaft/followers",
                "following_url": "https://api.github.com/users/datwaft/following{/other_user}",
                "gists_url": "https://api.github.com/users/datwaft/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datwaft",
                "id": 37723586,
                "login": "datwaft",
                "node_id": "MDQ6VXNlcjM3NzIzNTg2",
                "organizations_url": "https://api.github.com/users/datwaft/orgs",
                "received_events_url": "https://api.github.com/users/datwaft/received_events",
                "repos_url": "https://api.github.com/users/datwaft/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datwaft/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datwaft/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datwaft",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "so it's not winnew . use this way will more easy \r\n\r\n```lua\r\nlocal orig_util_open_floating_preview = vim.lsp.util.open_floating_preview\r\nfunction vim.lsp.util.open_floating_preview(contents, syntax, opts, ...)\r\n  -- also you can override some options like\r\n  -- opts.wrap = false or opts.boder .something lese\r\n  local bufnr,winid = orig_util_open_floating_preview(contents, syntax, opts, ...)\r\n  print(bufnr,winid)\r\nend\r\n```",
            "created_at": "2022-09-11T23:27:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1243066634",
            "id": 1243066634,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KF7EK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243066634/reactions"
            },
            "updated_at": "2022-09-11T23:27:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243066634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> so it's not winnew . use this way will more easy\r\n> \r\n> ```lua\r\n> local orig_util_open_floating_preview = vim.lsp.util.open_floating_preview\r\n> function vim.lsp.util.open_floating_preview(contents, syntax, opts, ...)\r\n>   -- also you can override some options like\r\n>   -- opts.wrap = false or opts.boder .something lese\r\n>   local bufnr,winid = orig_util_open_floating_preview(contents, syntax, opts, ...)\r\n>   print(bufnr,winid)\r\n> end\r\n> ```\r\n\r\nNice idea!\r\n\r\nI cannot use `opts` for any arbitrary option like `showbreak`, so I thought about using `vim.api.nvim_win_set_option`, but it seems that it doesn't work.\r\n\r\n```lua\r\nlocal orig_util_open_floating_preview = vim.lsp.util.open_floating_preview\r\nfunction vim.lsp.util.open_floating_preview(contents, syntax, opts, ...)\r\n  local bufnr, winid = orig_util_open_floating_preview(contents, syntax, opts, ...)\r\n  vim.api.nvim_win_set_option(winid, \"breakindentopt\", \"\")\r\n  vim.api.nvim_win_set_option(winid, \"showbreak\", \"\")\r\n  print(bufnr, winid)\r\nend\r\n```\r\n\r\nThe option `breakindentopt` works, but `showbreak` doesn't seem to work.\r\n\r\n<img width=\"1552\" alt=\"image\" src=\"https://user-images.githubusercontent.com/37723586/189564598-e83f9198-b188-4507-8fbd-d762103938ff.png\">\r\n\r\nIf I go inside the floating window and do `setlocal showbreak?` it displays `showbreak=`, which means that the option is properly set for the window, but even then it doesn't seem to work.\r\n\r\nIs this a bug? Should I open a new issue for it?\r\n",
            "created_at": "2022-09-12T02:47:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1243151798",
            "id": 1243151798,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KGP22",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243151798/reactions"
            },
            "updated_at": "2022-09-12T02:47:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243151798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37723586?v=4",
                "events_url": "https://api.github.com/users/datwaft/events{/privacy}",
                "followers_url": "https://api.github.com/users/datwaft/followers",
                "following_url": "https://api.github.com/users/datwaft/following{/other_user}",
                "gists_url": "https://api.github.com/users/datwaft/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datwaft",
                "id": 37723586,
                "login": "datwaft",
                "node_id": "MDQ6VXNlcjM3NzIzNTg2",
                "organizations_url": "https://api.github.com/users/datwaft/orgs",
                "received_events_url": "https://api.github.com/users/datwaft/received_events",
                "repos_url": "https://api.github.com/users/datwaft/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datwaft/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datwaft/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datwaft",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "if you want disable it use `showbreak = NONE` not set it to empty string  `:h showbreak`",
            "created_at": "2022-09-12T02:50:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1243153021",
            "id": 1243153021,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KGQJ9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243153021/reactions"
            },
            "updated_at": "2022-09-12T02:50:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243153021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks a lot! It works now! ðŸ˜„ \r\n\r\n<img width=\"1552\" alt=\"image\" src=\"https://user-images.githubusercontent.com/37723586/189565296-913412f4-071e-4d75-a509-d97c4d6a1193.png\">\r\n",
            "created_at": "2022-09-12T02:52:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-1243153976",
            "id": 1243153976,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM5KGQY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243153976/reactions"
            },
            "updated_at": "2022-09-12T02:52:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1243153976",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37723586?v=4",
                "events_url": "https://api.github.com/users/datwaft/events{/privacy}",
                "followers_url": "https://api.github.com/users/datwaft/followers",
                "following_url": "https://api.github.com/users/datwaft/following{/other_user}",
                "gists_url": "https://api.github.com/users/datwaft/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/datwaft",
                "id": 37723586,
                "login": "datwaft",
                "node_id": "MDQ6VXNlcjM3NzIzNTg2",
                "organizations_url": "https://api.github.com/users/datwaft/orgs",
                "received_events_url": "https://api.github.com/users/datwaft/received_events",
                "repos_url": "https://api.github.com/users/datwaft/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/datwaft/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/datwaft/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/datwaft",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Which font is this? ",
            "created_at": "2024-12-19T15:03:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-2554490524",
            "id": 2554490524,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM6YQm6c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2554490524/reactions"
            },
            "updated_at": "2024-12-19T15:03:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2554490524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/116161041?v=4",
                "events_url": "https://api.github.com/users/rafaelleyva/events{/privacy}",
                "followers_url": "https://api.github.com/users/rafaelleyva/followers",
                "following_url": "https://api.github.com/users/rafaelleyva/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelleyva/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rafaelleyva",
                "id": 116161041,
                "login": "rafaelleyva",
                "node_id": "U_kgDOBux6EQ",
                "organizations_url": "https://api.github.com/users/rafaelleyva/orgs",
                "received_events_url": "https://api.github.com/users/rafaelleyva/received_events",
                "repos_url": "https://api.github.com/users/rafaelleyva/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rafaelleyva/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelleyva/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rafaelleyva",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "May i know the font you were using in the screenshot?",
            "created_at": "2024-12-19T15:06:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/20146#issuecomment-2554505097",
            "id": 2554505097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20146",
            "node_id": "IC_kwDOAPphoM6YQqeJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2554505097/reactions"
            },
            "updated_at": "2024-12-19T15:06:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2554505097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/116161041?v=4",
                "events_url": "https://api.github.com/users/rafaelleyva/events{/privacy}",
                "followers_url": "https://api.github.com/users/rafaelleyva/followers",
                "following_url": "https://api.github.com/users/rafaelleyva/following{/other_user}",
                "gists_url": "https://api.github.com/users/rafaelleyva/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rafaelleyva",
                "id": 116161041,
                "login": "rafaelleyva",
                "node_id": "U_kgDOBux6EQ",
                "organizations_url": "https://api.github.com/users/rafaelleyva/orgs",
                "received_events_url": "https://api.github.com/users/rafaelleyva/received_events",
                "repos_url": "https://api.github.com/users/rafaelleyva/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rafaelleyva/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rafaelleyva/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rafaelleyva",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20146/comments",
    "created_at": "2022-09-10T18:48:15Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20146/events",
    "html_url": "https://github.com/neovim/neovim/issues/20146",
    "id": 1368702774,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20146/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5RlL82",
    "number": 20146,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20146/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20146/timeline",
    "title": "Define options for every floating window",
    "updated_at": "2024-12-19T15:06:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20146",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/37723586?v=4",
        "events_url": "https://api.github.com/users/datwaft/events{/privacy}",
        "followers_url": "https://api.github.com/users/datwaft/followers",
        "following_url": "https://api.github.com/users/datwaft/following{/other_user}",
        "gists_url": "https://api.github.com/users/datwaft/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/datwaft",
        "id": 37723586,
        "login": "datwaft",
        "node_id": "MDQ6VXNlcjM3NzIzNTg2",
        "organizations_url": "https://api.github.com/users/datwaft/orgs",
        "received_events_url": "https://api.github.com/users/datwaft/received_events",
        "repos_url": "https://api.github.com/users/datwaft/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/datwaft/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/datwaft/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/datwaft",
        "user_view_type": "public"
    }
}