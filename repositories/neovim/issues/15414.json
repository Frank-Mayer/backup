{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\n\n_No response_\n\n### Feature description\n\nCurrently, [in `vim.lsp.util.text_document_completion_list_to_complete_items`](https://github.com/neovim/neovim/blob/15b736d6e88dba114294b84a21e463b77a0b2857/runtime/lua/vim/lsp/util.lua#L658-L659), the completion results from the language server are not kept as-is, but instead some preprocessing is performed:\r\n\r\n1. Only completions which exactly match the already-typed prefix are kept;\r\n2. The completions are sorted.\r\n\r\nWhile this is probably nice for some language servers that return weird results, this is completely counterproductive when a language server tries to be helpful by returning results with:\r\n- case-insensitive matching\r\n- typo-fixing\r\n- intelligent result ordering so that most likely matches come first\r\n- (maybe other things too)\r\n\r\nAt least the first three are performed by the Haskell language server.\r\n\r\nAt least for the Haskell language server in particular, my completion results get _significantly_ more useful when I remove [the two lines linked above](https://github.com/neovim/neovim/blob/15b736d6e88dba114294b84a21e463b77a0b2857/runtime/lua/vim/lsp/util.lua#L658-L659). However, this functionality is probably not in the LSP implementation for nothing. Therefore:\r\n\r\n**Request**: A configuration option that allows me to turn off this result filtering and sorting. I don't know how granular this option should be, i.e. if it should be more than just one boolean. A logical option would seem to be two booleans: one to control exact-prefix-match filtering, and one to control sorting.\r\n\r\nThanks for the good work!",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Haven't tested it, but can you check out #16102?",
            "created_at": "2021-10-20T04:09:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-947311752",
            "id": 947311752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM44dtSI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947311752/reactions"
            },
            "updated_at": "2021-10-20T04:09:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947311752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The completions are sorted.\r\n\r\nCan you explain why removing that makes the completion results more useful? If the language server has some sort of scoring they would ideally populate the `sortText` property so that the client can utilize that order.\r\n\r\nI don't think vscode provids the option to turn off ordering based on that - so I would be surprised if language server authors return results where the ordering of the results as they appear is better/more meaningful then the items ordered by `sortText` ",
            "created_at": "2021-10-20T08:04:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-947425697",
            "id": 947425697,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM44eJGh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947425697/reactions"
            },
            "updated_at": "2021-10-20T08:04:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947425697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mfussenegger I'm not sure about the precise semantics of the protocol, but I called `vim.lsp.set_log_level(\"debug\")` and then typed some characters in a haskell file and triggered a completion. Then I looked at the log file, at the `\"decoded\"` line right after the `\"rpc.send.payload\"` line for a `textDocument/completion` call, and found a huge object that does not contain the text \"sort\". Presumably, haskell-language-server doesn't specify `sortText`. Maybe that's a bug in HLS -- your call. :)\r\n\r\nI tested with the latest release version of haskell-language-server (1.4.0).\r\n\r\nIn any case, for me, being able to turn off sorting (EDIT: by nvim, of course) has added value. :)",
            "created_at": "2021-10-20T15:46:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-947799252",
            "id": 947799252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM44fkTU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947799252/reactions"
            },
            "updated_at": "2021-10-20T15:47:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947799252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6559933?v=4",
                "events_url": "https://api.github.com/users/tomsmeding/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomsmeding/followers",
                "following_url": "https://api.github.com/users/tomsmeding/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomsmeding/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomsmeding",
                "id": 6559933,
                "login": "tomsmeding",
                "node_id": "MDQ6VXNlcjY1NTk5MzM=",
                "organizations_url": "https://api.github.com/users/tomsmeding/orgs",
                "received_events_url": "https://api.github.com/users/tomsmeding/received_events",
                "repos_url": "https://api.github.com/users/tomsmeding/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomsmeding/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomsmeding/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomsmeding"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Right - just double checked and hls doesn't include the `sortText`, but the specification is pretty clear about the behavior:\r\n\r\n```\r\n/**\r\n\t * A string that should be used when comparing this item\r\n\t * with other items. When `falsy` the label is used\r\n\t * as the sort text for this item.\r\n\t */\r\n\tsortText?: string;\r\n```\r\n\r\nAdding a dedicated option to ignore the spec seems fishy to me - given that there are already other ways to customize the completions (given the multitude of plugins there are)\r\n\r\nThat being said - vscode doesn't follow the spec strictly either and takes snippet/kind information into consideration as well. \r\n\r\n",
            "created_at": "2021-10-20T16:29:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-947834532",
            "id": 947834532,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM44fs6k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947834532/reactions"
            },
            "updated_at": "2021-10-20T16:29:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/947834532",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Good news! This should be mitigated by https://github.com/haskell/haskell-language-server/issues/2291#event-5596119236\r\n\r\n\r\n@tomsmeding can you test with the lastest HEAD of HLS and lmk which of the configuration options (if any) are still relevant? maybe the exact prefix match I would guess\r\n\r\n",
            "created_at": "2021-11-10T16:22:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-965507675",
            "id": 965507675,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM45jHpb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965507675/reactions"
            },
            "updated_at": "2021-11-10T16:23:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965507675",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yeah I didn't test yet with the custom omnifunc, but with released neovim, sorting now works fine but I still need to disable the exact prefix matching.\r\n\r\nSide not I don't like HLS's decision to make the first character case-sensitive, but that's not neovim's problem :p",
            "created_at": "2021-11-10T16:25:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-965510673",
            "id": 965510673,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM45jIYR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965510673/reactions"
            },
            "updated_at": "2021-11-10T16:25:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965510673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6559933?v=4",
                "events_url": "https://api.github.com/users/tomsmeding/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomsmeding/followers",
                "following_url": "https://api.github.com/users/tomsmeding/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomsmeding/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomsmeding",
                "id": 6559933,
                "login": "tomsmeding",
                "node_id": "MDQ6VXNlcjY1NTk5MzM=",
                "organizations_url": "https://api.github.com/users/tomsmeding/orgs",
                "received_events_url": "https://api.github.com/users/tomsmeding/received_events",
                "repos_url": "https://api.github.com/users/tomsmeding/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomsmeding/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomsmeding/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomsmeding"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mjlbach To be honest, I don't see the reason why neovim should do prefix filtering. Are there really incompetent language servers around for which such filtering is beneficial to the user, and in those cases, is it really neovim's task to do the filtering?\r\n\r\nThe sorting by `sortText` is specified and hence neovim should do this, because language servers may depend on it. But prefix filtering?",
            "created_at": "2021-11-10T17:07:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-965553665",
            "id": 965553665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM45jS4B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965553665/reactions"
            },
            "updated_at": "2021-11-10T17:07:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965553665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6559933?v=4",
                "events_url": "https://api.github.com/users/tomsmeding/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomsmeding/followers",
                "following_url": "https://api.github.com/users/tomsmeding/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomsmeding/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomsmeding",
                "id": 6559933,
                "login": "tomsmeding",
                "node_id": "MDQ6VXNlcjY1NTk5MzM=",
                "organizations_url": "https://api.github.com/users/tomsmeding/orgs",
                "received_events_url": "https://api.github.com/users/tomsmeding/received_events",
                "repos_url": "https://api.github.com/users/tomsmeding/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomsmeding/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomsmeding/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomsmeding"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Are there really incompetent language servers around for which such filtering is beneficial to the user, and in those cases, is it really neovim's task to do the filtering?\r\n\r\nThis predates my involvement with core (I was just a user back then), but I did comment on this issue with a similar result with pyls_ms (https://github.com/neovim/neovim/issues/11826)\r\n\r\nThis was added in https://github.com/neovim/neovim/pull/11895 (which I had tested at the time)\r\n\r\n@hrsh7th, sorry for the ping, do you do prefix matching? What are your thoughts on dropping it from omnifunc?",
            "created_at": "2021-11-10T17:10:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-965556485",
            "id": 965556485,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM45jTkF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965556485/reactions"
            },
            "updated_at": "2021-11-10T17:10:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965556485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Most language server expects the client has supported the fuzzy matching.\r\n\r\nBut vim's omnifunc supports only `prefix matching` or `do not matching` (equal = 1).\r\n\r\nSo I think native omnifunc can't support this situation correctly.",
            "created_at": "2021-11-11T03:50:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-965964033",
            "id": 965964033,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM45k3EB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965964033/reactions"
            },
            "updated_at": "2021-11-11T03:50:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/965964033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/629908?v=4",
                "events_url": "https://api.github.com/users/hrsh7th/events{/privacy}",
                "followers_url": "https://api.github.com/users/hrsh7th/followers",
                "following_url": "https://api.github.com/users/hrsh7th/following{/other_user}",
                "gists_url": "https://api.github.com/users/hrsh7th/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hrsh7th",
                "id": 629908,
                "login": "hrsh7th",
                "node_id": "MDQ6VXNlcjYyOTkwOA==",
                "organizations_url": "https://api.github.com/users/hrsh7th/orgs",
                "received_events_url": "https://api.github.com/users/hrsh7th/received_events",
                "repos_url": "https://api.github.com/users/hrsh7th/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hrsh7th/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hrsh7th/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hrsh7th"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hello again. :) I've been trying to navigate the various issues and PRs (transitively) linked from this one, and didn't find anything that looked like it solves this issue. Looking at the current source code on master, I find that the completion list is still unconditionally [filtered on the typed prefix](https://github.com/neovim/neovim/blob/5fc25ecc7a383a4bed2199774ed2e26022456ca3/runtime/lua/vim/lsp/completion.lua#L353-L354) (even if [using `matchfuzzy`](https://github.com/neovim/neovim/blob/5fc25ecc7a383a4bed2199774ed2e26022456ca3/runtime/lua/vim/lsp/completion.lua#L248)). However, I'm not familiar with the codebase, so I may well be missing something! Please point me in the right direction if some option of controlling prefix filtering does indeed exist.\r\n\r\nAssuming such an option has not yet been added: are there language servers in use where filtering completion results in neovim _improves_ completion results, and where this is _not_ a bug in the language server? If there aren't, why does neovim filter completion items on a matching prefix?",
            "created_at": "2024-07-21T09:58:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/15414#issuecomment-2241550454",
            "id": 2241550454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15414",
            "node_id": "IC_kwDOAPphoM6Fm1h2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241550454/reactions"
            },
            "updated_at": "2024-07-21T09:58:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241550454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6559933?v=4",
                "events_url": "https://api.github.com/users/tomsmeding/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomsmeding/followers",
                "following_url": "https://api.github.com/users/tomsmeding/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomsmeding/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomsmeding",
                "id": 6559933,
                "login": "tomsmeding",
                "node_id": "MDQ6VXNlcjY1NTk5MzM=",
                "organizations_url": "https://api.github.com/users/tomsmeding/orgs",
                "received_events_url": "https://api.github.com/users/tomsmeding/received_events",
                "repos_url": "https://api.github.com/users/tomsmeding/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomsmeding/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomsmeding/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomsmeding"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15414/comments",
    "created_at": "2021-08-17T21:56:20Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/15414/events",
    "html_url": "https://github.com/neovim/neovim/issues/15414",
    "id": 973095052,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/15414/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 228,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 255,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2024-07-11T11:35:04Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "MDU6SXNzdWU5NzMwOTUwNTI=",
    "number": 15414,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/15414/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/15414/timeline",
    "title": "LSP: Add config option to not filter completion results",
    "updated_at": "2024-07-21T09:58:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/15414",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6559933?v=4",
        "events_url": "https://api.github.com/users/tomsmeding/events{/privacy}",
        "followers_url": "https://api.github.com/users/tomsmeding/followers",
        "following_url": "https://api.github.com/users/tomsmeding/following{/other_user}",
        "gists_url": "https://api.github.com/users/tomsmeding/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tomsmeding",
        "id": 6559933,
        "login": "tomsmeding",
        "node_id": "MDQ6VXNlcjY1NTk5MzM=",
        "organizations_url": "https://api.github.com/users/tomsmeding/orgs",
        "received_events_url": "https://api.github.com/users/tomsmeding/received_events",
        "repos_url": "https://api.github.com/users/tomsmeding/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tomsmeding/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tomsmeding/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tomsmeding"
    }
}