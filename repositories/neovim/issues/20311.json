{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Feature already in Vim?\n\n_No response_\n\n### Feature description\n\nCurrently, `input()` is handled by `cmdline_show` and `confirm()` is handled by `msg_show.confirm`.\r\n\r\nThere are no events yet to know theres any input requested from the user with `getchar` or `getcharstr`.\r\n\r\nAs a work-around, I'm wrapping the respective `vim.fn` functions, but that only works for `Lua` calls.\r\n\r\nWould be great to have this as part of the `ext_cmdline` or `ext_messages` API.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Closing this, since this can be checked with `nvim_get_mode().blocking`",
            "created_at": "2022-09-28T08:08:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/20311#issuecomment-1260540693",
            "id": 1260540693,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20311",
            "node_id": "IC_kwDOAPphoM5LIlMV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1260540693/reactions"
            },
            "updated_at": "2022-09-28T08:08:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1260540693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Re-opening. We still would need some sort of message that a blocking input call will start, so we can force some things to render before blocking.",
            "created_at": "2022-09-28T13:29:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/20311#issuecomment-1260919166",
            "id": 1260919166,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20311",
            "node_id": "IC_kwDOAPphoM5LKBl-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1260919166/reactions"
            },
            "updated_at": "2022-09-28T13:29:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1260919166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "NONE",
            "body": "Dear Team,\r\nIs there any pull request or a place where implementation ideas or progress can be tracked?\r\nI am developing a plugin that uses the callbacks to handle messages. Studing Noice.nvim sources gave me some hints about possible workaround for the `confirm` and `confirm_sub` messages.\r\nWhat I am trying to understand is the following:\r\n1. Does Neovim block to get the response and blocks the next redraw cycle?\r\n2. Does `vim.schedule` or `vim.schedule_wrap` could help to capture the answer from the user?\r\n\r\nThank you for any hints about any of the above questions.\r\n\r\nPawel",
            "created_at": "2023-11-23T13:17:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/20311#issuecomment-1824424510",
            "id": 1824424510,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20311",
            "node_id": "IC_kwDOAPphoM5svoI-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824424510/reactions"
            },
            "updated_at": "2023-11-23T13:17:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1824424510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2884160?v=4",
                "events_url": "https://api.github.com/users/pawelurbanski/events{/privacy}",
                "followers_url": "https://api.github.com/users/pawelurbanski/followers",
                "following_url": "https://api.github.com/users/pawelurbanski/following{/other_user}",
                "gists_url": "https://api.github.com/users/pawelurbanski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pawelurbanski",
                "id": 2884160,
                "login": "pawelurbanski",
                "node_id": "MDQ6VXNlcjI4ODQxNjA=",
                "organizations_url": "https://api.github.com/users/pawelurbanski/orgs",
                "received_events_url": "https://api.github.com/users/pawelurbanski/received_events",
                "repos_url": "https://api.github.com/users/pawelurbanski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pawelurbanski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pawelurbanski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pawelurbanski"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20311/comments",
    "created_at": "2022-09-23T22:51:08Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/20311/events",
    "html_url": "https://github.com/neovim/neovim/issues/20311",
    "id": 1384408462,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol",
            "id": 640132777,
            "name": "ui-ext",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-ext"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/20311/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 190,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 131,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-11-23T22:52:52Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM5ShGWO",
    "number": 20311,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/20311/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/20311/timeline",
    "title": "`vim.ui_attach` with `ext_cmdline` and `ext_messages` should have an event for user input with `getchar` or `getcharstr`",
    "updated_at": "2023-11-23T13:17:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/20311",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
        "events_url": "https://api.github.com/users/folke/events{/privacy}",
        "followers_url": "https://api.github.com/users/folke/followers",
        "following_url": "https://api.github.com/users/folke/following{/other_user}",
        "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/folke",
        "id": 292349,
        "login": "folke",
        "node_id": "MDQ6VXNlcjI5MjM0OQ==",
        "organizations_url": "https://api.github.com/users/folke/orgs",
        "received_events_url": "https://api.github.com/users/folke/received_events",
        "repos_url": "https://api.github.com/users/folke/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/folke"
    }
}