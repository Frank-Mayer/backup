{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhen code folds are used, for example when viewing a diff where unchanged sections are collapsed, drawing performance can be very bad on moderately sized files while LSP is enabled. Moving the cursor can take a second or more for the movement to be observed.\n\nNote: version 0.9 also has this issue.\n\n### Steps to reproduce\n\nThis reproduction showcases opening a large C file with the Clangd LSP attached, creating a large code fold, and then moving the cursor around. Note that Clangd must be installed.\n\nIt should be noted that the issue still occurs on more reasonably sized files, for example `src/nvim/buffer.c` which has 4241 lines. My initial repro was to go to line [4191](https://github.com/neovim/neovim/blob/0ba388847417b8aed469976acf94f9633cb03f15/src/nvim/buffer.c#L4191) and doing `zfgg` and moving the cursor onto and off the closing curly brace. I am using the larger single file because repro is simpler.\n\n1. `mkdir issue && cd issue`\n2. Create a file named `minimal_init.lua` with the following content:\n```lua\nlocal on_windows = vim.loop.os_uname().version:match 'Windows'\n\nlocal function join_paths(...)\n  local path_sep = on_windows and '\\\\' or '/'\n  local result = table.concat({ ... }, path_sep)\n  return result\nend\n\nvim.cmd [[set runtimepath=$VIMRUNTIME]]\n\nlocal temp_dir = vim.loop.os_getenv 'TEMP' or '/tmp'\n\nvim.cmd('set packpath=' .. join_paths(temp_dir, 'nvim', 'site'))\n\nlocal package_root = join_paths(temp_dir, 'nvim', 'site', 'pack')\nlocal lspconfig_path = join_paths(package_root, 'test', 'start', 'nvim-lspconfig')\n\nif vim.fn.isdirectory(lspconfig_path) ~= 1 then\n  vim.fn.system { 'git', 'clone', 'https://github.com/neovim/nvim-lspconfig', lspconfig_path }\nend\n\nvim.lsp.set_log_level 'trace'\nrequire('vim.lsp.log').set_format_func(vim.inspect)\nlocal nvim_lsp = require 'lspconfig'\nlocal on_attach = function(_, bufnr)\n  -- keymaps can be set here\nend\n\n-- Add the server that troubles you here\nlocal name = 'clangd'\nlocal cmd = nil\n-- local cmd = { 'pyright-langserver', '--stdio' } -- needed for elixirls, lua_ls, omnisharp\nif not name then\n  print 'You have not defined a server name, please edit minimal_init.lua'\nend\nif not nvim_lsp[name].document_config.default_config.cmd and not cmd then\n  print [[You have not defined a server default cmd for a server\n    that requires it please edit minimal_init.lua]]\nend\n\nnvim_lsp[name].setup {\n  cmd = cmd,\n  on_attach = on_attach,\n  root_dir = function()\n    return nil -- run in single file mode\n  end,\n}\n\nvim.o.rdt = 200000 -- for when running under valgrind\n\n-- print [[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]]\n```\n3. `wget https://raw.githubusercontent.com/chunhualiao/large-single-compilation-unit-c-programs/refs/heads/master/bzip2.c`\n4. Create a file named repro.sh with the following content:\n```sh\n#!/usr/bin/env bash\n\nnvim -nu minimal_init.lua bzip2.c \"+norm 4191Gzfgg\"\n```\n5. `chmod +x repro.sh`\n6. `./repro.sh`\n7. Try moving the cursor around with h/j/k/l (in particular move over a curly bracket), and observe the slowness.\n8. Do `:LspStop` and observe that the issue completely goes away.\n\n### Expected behavior\n\nScreen drawing performance should not be significantly impacted when LSP is enabled.\n\n### Nvim version (nvim -v)\n\n0.10.2\n\n### Vim (not Nvim) behaves the same?\n\nVim doesn't support LSP\n\n### Operating system/version\n\nLinux 6.9.3\n\n### Terminal name/version\n\nalacritty 0.13.2\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nSystem package manager",
    "closed_at": "2024-11-08T14:01:36Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I did some analysis and found what seems to be causing the performance issue.\nThe following code relates to the code state at [0ba388847417b8aed469976acf94f9633cb03f15](https://github.com/neovim/neovim/tree/0ba388847417b8aed469976acf94f9633cb03f15).\n\nHere is the backtrace I get when pausing the program while it is taking a while to draw the screen:\n```\n#0  0x000064fa43833af9 in decor_range_insert (state=state@entry=0x64fa43ce3520 <decor_state>, range=...) at /tmp/neovim/src/nvim/decoration.c:497\n#1  0x000064fa43838c98 in decor_range_add_sh (state=state@entry=0x64fa43ce3520 <decor_state>, start_row=start_row@entry=3952, start_col=start_col@entry=16, end_row=end_row@entry=3952, end_col=end_col@entry=20, sh=sh@entry=0x7ffcac554760, owned=false, ns=7, mark_id=21990) at /tmp/neovim/src/nvim/decoration.c:544\n#2  0x000064fa43838eb5 in decor_range_add_from_inline (state=state@entry=0x64fa43ce3520 <decor_state>, start_row=start_row@entry=3952, start_col=start_col@entry=16, end_row=3952, end_col=20, decor=..., owned=owned@entry=false, ns=7, mark_id=21990) at /tmp/neovim/src/nvim/decoration.c:488\n#3  0x000064fa4383bdbd in decor_redraw_col (wp=0x64fa4f0f48d0, col=0, win_col=0, hidden=false, state=0x64fa43ce3520 <decor_state>) at /tmp/neovim/src/nvim/decoration.c:603\n#4  0x000064fa4384b78d in win_line (wp=wp@entry=0x64fa4f0f48d0, lnum=lnum@entry=4192, startrow=startrow@entry=1, endrow=45, col_rows=col_rows@entry=0, spv=0x7ffcac555fe0, foldinfo=...) at /tmp/neovim/src/nvim/drawline.c:1664\n#5  0x000064fa438506f4 in win_update (wp=wp@entry=0x64fa4f0f48d0) at /tmp/neovim/src/nvim/drawscreen.c:2249\n#6  0x000064fa43851476 in update_screen () at /tmp/neovim/src/nvim/drawscreen.c:639\n#7  0x000064fa43960cae in normal_redraw (s=s@entry=0x7ffcac556110) at /tmp/neovim/src/nvim/normal.c:1358\n#8  0x000064fa4396295e in normal_check (state=0x7ffcac556110) at /tmp/neovim/src/nvim/normal.c:1460\n#9  0x000064fa43a04601 in state_enter (s=0x7ffcac556110) at /tmp/neovim/src/nvim/state.c:40\n#10 0x000064fa4396051d in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at /tmp/neovim/src/nvim/normal.c:520\n#11 0x000064fa4392123c in main (argc=6, argv=<optimized out>) at /tmp/neovim/src/nvim/main.c:660\n```\n\nSo it seems to be an issue with drawing of decorations (highlights I think). I consistently get the same backtrace when pausing execution so it looks like the `decor_range_insert` is being called a lot.\n\nUsing callgrind I was able to capture the following function call statistics for when moving the cursor onto the curly bracket (note this particular capture was from `buffer.c`):\n\n![Image](https://github.com/user-attachments/assets/aef15499-deb4-4a54-aadf-b888fc81788e)\n\nAs you can see `decor_redraw_col` calls `decor_range_add_from_inline` 23,000 times. There is a for loop in this function that loops over a bunch of `DecorState`s to insert a new one. In my case when I checked the size of this list it was 21,990, so the contents of that loop are potentially being executed around a half billion times each screen draw.\n\nInspecting the stack using GDB, I found that `decor_range_add_from_inline` is being called for screen rows that shouldn't be drawn (they are within the large code fold). It looks like it's iterating over a mark tree, but I found it a bit difficult to properly understand exactly what's going on. Perhaps it is needed to process lines even if they aren't being drawn for some reason, but ideally if we can skip folded lines I think that would fix this performance issue.\n\nMaybe someone with some more expertise in this code area could offer some insight :)",
            "created_at": "2024-11-07T11:44:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/31106#issuecomment-2462024975",
            "id": 2462024975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31106",
            "node_id": "IC_kwDOAPphoM6Sv4UP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2462024975/reactions"
            },
            "updated_at": "2024-11-07T11:44:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2462024975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86718942?v=4",
                "events_url": "https://api.github.com/users/ronandalton/events{/privacy}",
                "followers_url": "https://api.github.com/users/ronandalton/followers",
                "following_url": "https://api.github.com/users/ronandalton/following{/other_user}",
                "gists_url": "https://api.github.com/users/ronandalton/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ronandalton",
                "id": 86718942,
                "login": "ronandalton",
                "node_id": "MDQ6VXNlcjg2NzE4OTQy",
                "organizations_url": "https://api.github.com/users/ronandalton/orgs",
                "received_events_url": "https://api.github.com/users/ronandalton/received_events",
                "repos_url": "https://api.github.com/users/ronandalton/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ronandalton/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ronandalton/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ronandalton",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I haven't profiled it, but I think this happens because the lsp semantic token highlighter does not skip the folded lines. It's `on_win` callback adds mark for all lines between the topline and botline.  https://github.com/neovim/neovim/blob/master/runtime/lua/vim/lsp/semantic_tokens.lua#L40. So a quick workaround would be to disable semantic token. \n\ncf. On the other hand, treesitter highligher skips folded lines by using the `on_line` callback. https://github.com/neovim/neovim/blob/master/runtime/lua/vim/treesitter/highlighter.lua#L293\n\n",
            "created_at": "2024-11-08T03:35:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/31106#issuecomment-2463691276",
            "id": 2463691276,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31106",
            "node_id": "IC_kwDOAPphoM6S2PIM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2463691276/reactions"
            },
            "updated_at": "2024-11-08T03:35:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2463691276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ronandalton can you test #31117?",
            "created_at": "2024-11-08T11:51:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/31106#issuecomment-2464535162",
            "id": 2464535162,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31106",
            "node_id": "IC_kwDOAPphoM6S5dJ6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464535162/reactions"
            },
            "updated_at": "2024-11-08T11:51:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464535162",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "@lewis6991 Thanks for having a crack at this! I tested your patch but unfortunately I'm not seeing any difference. I did check that the new code is being run.",
            "created_at": "2024-11-08T12:24:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/31106#issuecomment-2464632723",
            "id": 2464632723,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31106",
            "node_id": "IC_kwDOAPphoM6S50-T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464632723/reactions"
            },
            "updated_at": "2024-11-08T12:24:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464632723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86718942?v=4",
                "events_url": "https://api.github.com/users/ronandalton/events{/privacy}",
                "followers_url": "https://api.github.com/users/ronandalton/followers",
                "following_url": "https://api.github.com/users/ronandalton/following{/other_user}",
                "gists_url": "https://api.github.com/users/ronandalton/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ronandalton",
                "id": 86718942,
                "login": "ronandalton",
                "node_id": "MDQ6VXNlcjg2NzE4OTQy",
                "organizations_url": "https://api.github.com/users/ronandalton/orgs",
                "received_events_url": "https://api.github.com/users/ronandalton/received_events",
                "repos_url": "https://api.github.com/users/ronandalton/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ronandalton/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ronandalton/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ronandalton",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry I got the condition wrong. Can you try again.\n\nFor me the amount of marks applied in the repro has gone from 20903 -> 470",
            "created_at": "2024-11-08T12:37:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/31106#issuecomment-2464658252",
            "id": 2464658252,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31106",
            "node_id": "IC_kwDOAPphoM6S57NM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464658252/reactions"
            },
            "updated_at": "2024-11-08T12:37:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464658252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "That definitely fixes the performance issue now for my reproduction case! Thanks so much :)\n",
            "created_at": "2024-11-08T12:48:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/31106#issuecomment-2464678233",
            "id": 2464678233,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31106",
            "node_id": "IC_kwDOAPphoM6S6AFZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464678233/reactions"
            },
            "updated_at": "2024-11-08T12:48:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2464678233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/86718942?v=4",
                "events_url": "https://api.github.com/users/ronandalton/events{/privacy}",
                "followers_url": "https://api.github.com/users/ronandalton/followers",
                "following_url": "https://api.github.com/users/ronandalton/following{/other_user}",
                "gists_url": "https://api.github.com/users/ronandalton/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ronandalton",
                "id": 86718942,
                "login": "ronandalton",
                "node_id": "MDQ6VXNlcjg2NzE4OTQy",
                "organizations_url": "https://api.github.com/users/ronandalton/orgs",
                "received_events_url": "https://api.github.com/users/ronandalton/received_events",
                "repos_url": "https://api.github.com/users/ronandalton/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ronandalton/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ronandalton/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ronandalton",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31106/comments",
    "created_at": "2024-11-07T11:04:14Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/31106/events",
    "html_url": "https://github.com/neovim/neovim/issues/31106",
    "id": 2640674181,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/31106/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6dZX2F",
    "number": 31106,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/31106/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/31106/timeline",
    "title": "Performance issue when using LSP and code folds",
    "updated_at": "2024-11-08T14:01:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/31106",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/86718942?v=4",
        "events_url": "https://api.github.com/users/ronandalton/events{/privacy}",
        "followers_url": "https://api.github.com/users/ronandalton/followers",
        "following_url": "https://api.github.com/users/ronandalton/following{/other_user}",
        "gists_url": "https://api.github.com/users/ronandalton/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ronandalton",
        "id": 86718942,
        "login": "ronandalton",
        "node_id": "MDQ6VXNlcjg2NzE4OTQy",
        "organizations_url": "https://api.github.com/users/ronandalton/orgs",
        "received_events_url": "https://api.github.com/users/ronandalton/received_events",
        "repos_url": "https://api.github.com/users/ronandalton/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ronandalton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ronandalton/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ronandalton",
        "user_view_type": "public"
    }
}