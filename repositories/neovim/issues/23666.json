{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nThis came to my attention following a bug report [on one of my (Vimscript) plugins](https://github.com/LunarWatcher/auto-pairs/issues/78).\r\n\r\nThe docs for maparg, which are currently identical to Vim's docs, state:\r\n```\r\n\t\tWhen {dict} is omitted or zero: Return the rhs of mapping\r\n\t\t{name} in mode {mode}.  The returned String has special\r\n\t\tcharacters translated like in the output of the \":map\" command\r\n\t\tlisting. When {dict} is TRUE a dictionary is returned, see\r\n\t\tbelow. To get a list of all mappings see |maplist()|.\r\n\r\n\t\tWhen there is no mapping for {name}, an empty String is\r\n\t\treturned if {dict} is FALSE, otherwise returns an empty Dict.\r\n\t\tWhen the mapping for {name} is empty, then \"<Nop>\" is\r\n\t\treturned.\r\n...\r\n\t\tWhen {dict} is there and it is |TRUE| return a dictionary\r\n\t\tcontaining **all the information of the mapping with the\r\n\t\tfollowing items:**\t\t\t*mapping-dict*\r\n\t\t  \"lhs\"\t     The {lhs} of the mapping as it would be typed\r\n\t\t  \"lhsraw\"   The {lhs} of the mapping as raw bytes\r\n\t\t  \"lhsrawalt\" The {lhs} of the mapping as raw bytes, alternate\r\n\t\t\t      form, only present when it differs from \"lhsraw\"\r\n\t\t  \"rhs\"\t     The {rhs} of the mapping as typed.\r\n\t\t  \"silent\"   1 for a |:map-silent| mapping, else 0.\r\n\t\t  \"noremap\"  1 if the {rhs} of the mapping is not remappable.\r\n\t\t  \"script\"   1 if mapping was defined with <script>.\r\n\t\t  \"expr\"     1 for an expression mapping (|:map-<expr>|).\r\n\t\t  \"buffer\"   1 for a buffer local mapping (|:map-local|).\r\n\t\t  \"mode\"     Modes for which the mapping is defined. In\r\n\t\t\t     addition to the modes mentioned above, these\r\n\t\t\t     characters will be used:\r\n\t\t\t     \" \"     Normal, Visual and Operator-pending\r\n\t\t\t     \"!\"     Insert and Commandline mode\r\n\t\t\t\t     (|mapmode-ic|)\r\n\t\t  \"sid\"\t     The script local ID, used for <sid> mappings\r\n\t\t\t     (|<SID>|).\r\n\t\t  \"scriptversion\"  The version of the script.  999999 for\r\n\t\t\t\t   |Vim9| script.\r\n\t\t  \"lnum\"     The line number in \"sid\", zero if unknown.\r\n\t\t  \"nowait\"   Do not wait for other, longer mappings.\r\n\t\t\t     (|:map-<nowait>|).\r\n\t\t  \"abbr\"     True if this is an abbreviation |abbreviations|.\r\n\t\t  \"mode_bits\" Vim's internal binary representation of \"mode\".\r\n\t\t\t     |mapset()| ignores this; only \"mode\" is used.\r\n\t\t\t     See |maplist()| for usage examples. The values\r\n\t\t\t     are from src/vim.h and may change in the future.\r\n\r\n```\r\nInstead, via the reproduction method, a result like this is returned:\r\n```\r\n{'lnum': 0, 'script': 0, 'mode': 'i', 'silent': 0, 'callback': function('<lambda>1'), 'noremap': 1, 'lhs': '<CR>', 'lhsr', 'nowait': 0, 'expr': 0, 'sid': -8, 'buffer': 0}\r\n```\r\n\r\nNote both the existence of the undefined `callback` key, as well as the lack of `rhs`, the latter of which is guaranteed to be present by the function call. This is completely breaking for vim-nvim plugin compatibility, as it prevents many plugins currently relying on `rhs` to map keys compatibly with other plugins. This especially matters in insert mode, due to the many plugins wanting to map to a few keys (particularly map, space, enter, and backspace)\r\n\r\nThere are two options, as far as I see it:\r\n1. Update the docs to reflect the existence of callback, and update `maparg` to return an `rhs` defined in a way that's compatible with a conversion to a Vim-based mapping. This is the single best option for maintaining compatibility between Vimscript-based plugins and Lua-based plugins\r\n2. Update the docs to reflect the current situation; that callback exists, and rhs isn't guaranteed. This will break plugins\n\n### Steps to reproduce\n\ninit.lua:\r\n```\r\nvim.keymap.set('i', '<CR>', function()\r\n    print(\"y u do dis?\")\r\nend)\r\n```\r\nRuntime:\r\n``` \r\n:echo maparg('<cr>', i, 0, 1)\r\n```\r\n\r\nNote that a normal `imap` in vimscript still populates `rhs`; this problem is exclusively caused by Lua mappings, and specifically function mappings (though there may be other triggers I'm unaware of).\n\n### Expected behavior\n\n`rhs` should be defined, in line with the docs.\n\n### Neovim version (nvim -v)\n\n0.9.0\n\n### Vim (not Nvim) behaves the same?\n\nThis problem is specific to a situation caused by nvim's Lua API. AFAIK, Vim doesn't have any equivalent Lua-level functionality, and therefore cannot cause this bug\n\n### Operating system/version\n\nLinux Mint 21.1\n\n### Terminal name/version\n\nGNOME terminal 3.44.0\n\n### $TERM environment variable\n\nxterm-256color\n\n### Installation\n\nAppimage",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Duplicate of #22399",
            "created_at": "2023-05-17T21:46:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/23666#issuecomment-1552125519",
            "id": 1552125519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23666",
            "node_id": "IC_kwDOAPphoM5cg45P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552125519/reactions"
            },
            "updated_at": "2023-05-17T21:46:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552125519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "That only appears to address the outdated documentation, and not the incompatibility with Vim",
            "created_at": "2023-05-17T22:00:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/23666#issuecomment-1552144408",
            "id": 1552144408,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23666",
            "node_id": "IC_kwDOAPphoM5cg9gY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552144408/reactions"
            },
            "updated_at": "2023-05-17T22:00:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552144408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29489988?v=4",
                "events_url": "https://api.github.com/users/LunarWatcher/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarWatcher/followers",
                "following_url": "https://api.github.com/users/LunarWatcher/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarWatcher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarWatcher",
                "id": 29489988,
                "login": "LunarWatcher",
                "node_id": "MDQ6VXNlcjI5NDg5OTg4",
                "organizations_url": "https://api.github.com/users/LunarWatcher/orgs",
                "received_events_url": "https://api.github.com/users/LunarWatcher/received_events",
                "repos_url": "https://api.github.com/users/LunarWatcher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarWatcher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarWatcher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarWatcher"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> and update `maparg` to return an `rhs` defined in a way that's compatible with a conversion to a Vim-based mapping\r\n\r\n1. If a String is returned as `rhs` while `callback` is not saved, the Lua reference will be garbage-collected when the mapping is removed, and restoring the mapping won't work.\r\n2. If a Funcref same as `callback` is returned as `rhs`, it will still cause errors if a plugin tries to use it as a String, and still can only be restored using `mapset()`.\r\n\r\nSo this doesn't seem possible.",
            "created_at": "2023-05-17T22:06:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/23666#issuecomment-1552149610",
            "id": 1552149610,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23666",
            "node_id": "IC_kwDOAPphoM5cg-xq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552149610/reactions"
            },
            "updated_at": "2023-05-18T05:11:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552149610",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "Yeah, it's a tricky situation. I'm not deep enough in any of this to be particularly useful here, unfortunately. The closest thing I had to an idea was converting it to `:lua whatever_function()<cr>`, or whatever makes it possible to call lua functions from vimscript. I assume it isn't as performant as using a funcref though? Also assumes it works. No clue how nvim interacts with lua",
            "created_at": "2023-05-17T23:01:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/23666#issuecomment-1552192632",
            "id": 1552192632,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23666",
            "node_id": "IC_kwDOAPphoM5chJR4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552192632/reactions"
            },
            "updated_at": "2023-05-17T23:10:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1552192632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29489988?v=4",
                "events_url": "https://api.github.com/users/LunarWatcher/events{/privacy}",
                "followers_url": "https://api.github.com/users/LunarWatcher/followers",
                "following_url": "https://api.github.com/users/LunarWatcher/following{/other_user}",
                "gists_url": "https://api.github.com/users/LunarWatcher/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LunarWatcher",
                "id": 29489988,
                "login": "LunarWatcher",
                "node_id": "MDQ6VXNlcjI5NDg5OTg4",
                "organizations_url": "https://api.github.com/users/LunarWatcher/orgs",
                "received_events_url": "https://api.github.com/users/LunarWatcher/received_events",
                "repos_url": "https://api.github.com/users/LunarWatcher/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LunarWatcher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LunarWatcher/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LunarWatcher"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23666/comments",
    "created_at": "2023-05-17T15:39:44Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23666/events",
    "html_url": "https://github.com/neovim/neovim/issues/23666",
    "id": 1714184806,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "A discussion has run its course and a decision has to be made how to proceed",
            "id": 83851236,
            "name": "needs:decision",
            "node_id": "MDU6TGFiZWw4Mzg1MTIzNg==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:decision"
        },
        {
            "color": "c7def8",
            "default": false,
            "description": "",
            "id": 109899557,
            "name": "vimscript",
            "node_id": "MDU6TGFiZWwxMDk4OTk1NTc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vimscript"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "compatibility with Vim or older Neovim",
            "id": 109899712,
            "name": "compatibility",
            "node_id": "MDU6TGFiZWwxMDk4OTk3MTI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/compatibility"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "High-risk, potential for delicate/cascading effects",
            "id": 407247013,
            "name": "complexity:high",
            "node_id": "MDU6TGFiZWw0MDcyNDcwMTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:high"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23666/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5mLGJm",
    "number": 23666,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23666/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23666/timeline",
    "title": "maparg() is incompatible with Vim, and nvim's own docs",
    "updated_at": "2023-11-09T10:50:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23666",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29489988?v=4",
        "events_url": "https://api.github.com/users/LunarWatcher/events{/privacy}",
        "followers_url": "https://api.github.com/users/LunarWatcher/followers",
        "following_url": "https://api.github.com/users/LunarWatcher/following{/other_user}",
        "gists_url": "https://api.github.com/users/LunarWatcher/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/LunarWatcher",
        "id": 29489988,
        "login": "LunarWatcher",
        "node_id": "MDQ6VXNlcjI5NDg5OTg4",
        "organizations_url": "https://api.github.com/users/LunarWatcher/orgs",
        "received_events_url": "https://api.github.com/users/LunarWatcher/received_events",
        "repos_url": "https://api.github.com/users/LunarWatcher/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/LunarWatcher/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LunarWatcher/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/LunarWatcher"
    }
}