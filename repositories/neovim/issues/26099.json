{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI'm using tmux-3.2 for in my dev environment, connected through windows terminal. When I do a copy and paste on a considerably large code section, neovim terminates with the following assert failure.\r\n\r\n```\r\nnvim: neovim/src/nvim/tui/input.c:673: handle_raw_buffer: Assertion `consumed <= rbuffer_size(input->read_stream.buffer)' failed.\r\n```\r\n\n\n### Steps to reproduce\n\n1. Run tmux with following in `.tmux.conf`, to enable osc-52 on tmux as per [this](https://github.com/tmux/tmux/wiki/Clipboard#quick-summary) link\r\n\r\n```tmux\r\nset -g default-terminal \"screen-256color\"\r\nset-option -sa terminal-overrides ',screen-256color:Tc'\r\nset -s set-clipboard on\r\nset -as terminal-features ',screen-256color:clipboard'\r\n```\r\n\r\n2. Open nvim with following minimum reproducible config\r\n```lua\r\nvim.opt.clipboard = vim.opt.clipboard + 'unnamedplus'\r\nlocal ok, osc52 = pcall(require, \"vim.clipboard.osc52\")\r\n\r\nif not ok then\r\n    return\r\nend\r\n\r\nvim.g.clipboard = {\r\n    name = 'OSC 52',\r\n    copy = {\r\n    ['+'] = osc52.copy,\r\n    ['*'] = osc52.copy,\r\n    },\r\n    paste = {\r\n    ['+'] = osc52.paste,\r\n    ['*'] = osc52.paste,\r\n    },\r\n}\r\n```\r\n\r\n3. Open the file that has the following code segment:\r\n\r\n```lua\r\n    require(\"clangd_extensions\").setup({\r\n        inlay_hints = {\r\n            inline = vim.fn.has(\"nvim-0.10\") == 1,\r\n            -- Options other than `highlight' and `priority' only work\r\n            -- if `inline' is disabled\r\n            -- Only show inlay hints for the current line\r\n            only_current_line = false,\r\n            -- Event which triggers a refresh of the inlay hints.\r\n            -- You can make this { \"CursorMoved\" } or { \"CursorMoved,CursorMovedI\" } but\r\n            -- not that this may cause  higher CPU usage.\r\n            -- This option is only respected when only_current_line and\r\n            -- autoSetHints both are true.\r\n            only_current_line_autocmd = { \"CursorHold\" },\r\n            -- whether to show parameter hints with the inlay hints or not\r\n            show_parameter_hints = true,\r\n            -- prefix for parameter hints\r\n            parameter_hints_prefix = \"<- \",\r\n            -- prefix for all the other hints (type, chaining)\r\n            other_hints_prefix = \"=> \",\r\n            -- whether to align to the length of the longest line in the file\r\n            max_len_align = false,\r\n            -- padding from the left if max_len_align is true\r\n            max_len_align_padding = 1,\r\n            -- whether to align to the extreme right or not\r\n            right_align = false,\r\n            -- padding from the right if right_align is true\r\n            right_align_padding = 7,\r\n            -- The color of the hints\r\n            highlight = \"Comment\",\r\n            -- The highlight group priority for extmark\r\n            priority = 100,\r\n        },\r\n        ast = {\r\n            -- These are unicode, should be available in any font\r\n            role_icons = {\r\n                type = \"üÑ£\",\r\n                declaration = \"üÑì\",\r\n                expression = \"üÑî\",\r\n                statement = \";\",\r\n                specifier = \"üÑ¢\",\r\n                [\"template argument\"] = \"üÜÉ\",\r\n            },\r\n            kind_icons = {\r\n                Compound = \"üÑ≤\",\r\n                Recovery = \"üÖÅ\",\r\n                TranslationUnit = \"üÖÑ\",\r\n                PackExpansion = \"üÑø\",\r\n                TemplateTypeParm = \"üÖÉ\",\r\n                TemplateTemplateParm = \"üÖÉ\",\r\n                TemplateParamObject = \"üÖÉ\",\r\n            },\r\n            --[[ These require codicons (https://github.com/microsoft/vscode-codicons)\r\n                role_icons = {\r\n                    type = \"Ó≠£\",\r\n                    declaration = \"Ó™å\",\r\n                    expression = \"Ó©±\",\r\n                    specifier = \"ÓÆÜ\",\r\n                    statement = \"Ó™Ü\",\r\n                    [\"template argument\"] = \"Ó™í\",\r\n                },\r\n\r\n                kind_icons = {\r\n                    Compound = \"Ó™ã\",\r\n                    Recovery = \"Ó™á\",\r\n                    TranslationUnit = \"Ó´©\",\r\n                    PackExpansion = \"Ó©º\",\r\n                    TemplateTypeParm = \"Ó™í\",\r\n                    TemplateTemplateParm = \"Ó™í\",\r\n                    TemplateParamObject = \"Ó™í\",\r\n                }, ]]\r\n\r\n            highlights = {\r\n                detail = \"Comment\",\r\n            },\r\n        },\r\n        memory_usage = {\r\n            border = \"none\",\r\n        },\r\n        symbol_info = {\r\n            border = \"none\",\r\n        },\r\n    })\r\n    require'lspconfig'.clangd.setup{}\r\n\r\n```\r\n\r\n4. Copy above code segment (`yG`) \r\n5. Open another file in a different buffer (`:vnew`)\r\n6. Paste the copied segment (`p`)\r\n\r\nnvim crash with assert failure on debug build. On release build the process will hang\n\n### Expected behavior\n\nCopied section should be pasted on the new buffer\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0-dev (commit : 4972c80 )\n\n### Vim (not Nvim) behaves the same?\n\nNo applicable\n\n### Operating system/version\n\nCentOS 7.9\n\n### Terminal name/version\n\nWindows Terminal 1.20.3131.0\n\n### $TERM environment variable\n\nscreen-256color\n\n### Installation\n\nbuilt from source on main branch",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Can you obtain a GDB backtrace? https://github.com/neovim/neovim/wiki/FAQ#using-gdb",
            "created_at": "2023-11-18T05:14:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/26099#issuecomment-1817384990",
            "id": 1817384990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26099",
            "node_id": "IC_kwDOAPphoM5sUxge",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1817384990/reactions"
            },
            "updated_at": "2023-11-18T05:14:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1817384990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "```\r\n(gdb) bt\r\n#0  0x00007ffff6d00387 in raise () from /lib64/libc.so.6\r\n#1  0x00007ffff6d01a78 in abort () from /lib64/libc.so.6\r\n#2  0x00007ffff6cf91a6 in __assert_fail_base () from /lib64/libc.so.6\r\n#3  0x00007ffff6cf9252 in __assert_fail () from /lib64/libc.so.6\r\n#4  0x000000000076d6ad in handle_raw_buffer (input=0xc66cf0, force=false) at neovim/src/nvim/tui/input.c:673\r\n#5  0x000000000076d819 in tinput_read_cb (stream=0xc66de0, buf=0xc24dc0, count_=277, data=0xc66cf0, eof=false) at neovim/src/nvim/tui/input.c:694\r\n#6  0x0000000000584528 in read_event (argv=0x7fffffff8ab0) at neovim/src/nvim/event/rstream.c:189\r\n#7  0x000000000058464f in invoke_read_cb (stream=0xc66de0, count=277, eof=false) at neovim/src/nvim/event/rstream.c:202\r\n#8  0x00000000005842a3 in read_cb (uvstream=0xc66de8, cnt=277, buf=0x7fffffff8bb0) at neovim/src/nvim/event/rstream.c:131\r\n#9  0x00000000008a6146 in uv.read ()\r\n#10 0x00000000008a6538 in uv.stream_io ()\r\n#11 0x00000000008ad61a in uv.io_poll ()\r\n#12 0x000000000089b557 in uv_run ()\r\n#13 0x00000000005810a2 in loop_uv_run (loop=0xbf9840 <main_loop>, ms=-1, once=true) at neovim/src/nvim/event/loop.c:63\r\n#14 0x0000000000581123 in loop_poll_events (loop=0xbf9840 <main_loop>, ms=-1) at neovim/src/nvim/event/loop.c:85\r\n#15 0x000000000077c384 in ui_client_run (remote_ui=false) at neovim/src/nvim/ui_client.c:121\r\n#16 0x000000000045ef38 in main (argc=4, argv=0x7fffffffced8) at neovim/src/nvim/main.c:384\r\n```\r\n```\r\n(gdb) p consumed\r\n$1 = 18446744073709551615\r\n```\r\n",
            "created_at": "2023-11-18T05:37:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/26099#issuecomment-1817400716",
            "id": 1817400716,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26099",
            "node_id": "IC_kwDOAPphoM5sU1WM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1817400716/reactions"
            },
            "updated_at": "2023-11-18T05:40:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1817400716",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10277051?v=4",
                "events_url": "https://api.github.com/users/Badhi/events{/privacy}",
                "followers_url": "https://api.github.com/users/Badhi/followers",
                "following_url": "https://api.github.com/users/Badhi/following{/other_user}",
                "gists_url": "https://api.github.com/users/Badhi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Badhi",
                "id": 10277051,
                "login": "Badhi",
                "node_id": "MDQ6VXNlcjEwMjc3MDUx",
                "organizations_url": "https://api.github.com/users/Badhi/orgs",
                "received_events_url": "https://api.github.com/users/Badhi/received_events",
                "repos_url": "https://api.github.com/users/Badhi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Badhi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Badhi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Badhi"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26099/comments",
    "created_at": "2023-11-18T05:01:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26099/events",
    "html_url": "https://github.com/neovim/neovim/issues/26099",
    "id": 2000232082,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26099/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM53OR6S",
    "number": 26099,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26099/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26099/timeline",
    "title": "Neovim assert fails when osc52 is enabled with copy to clipboard",
    "updated_at": "2023-11-18T05:40:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26099",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10277051?v=4",
        "events_url": "https://api.github.com/users/Badhi/events{/privacy}",
        "followers_url": "https://api.github.com/users/Badhi/followers",
        "following_url": "https://api.github.com/users/Badhi/following{/other_user}",
        "gists_url": "https://api.github.com/users/Badhi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Badhi",
        "id": 10277051,
        "login": "Badhi",
        "node_id": "MDQ6VXNlcjEwMjc3MDUx",
        "organizations_url": "https://api.github.com/users/Badhi/orgs",
        "received_events_url": "https://api.github.com/users/Badhi/received_events",
        "repos_url": "https://api.github.com/users/Badhi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Badhi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Badhi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Badhi"
    }
}