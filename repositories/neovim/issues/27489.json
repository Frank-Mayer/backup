{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nSay one wants to open `~/proj1/` as a project.\r\nThe [`exrc`](https://neovim.io/doc/user/starting.html#exrc) option is enabled.\r\nStructure of `proj1`:\r\n```\r\nproj1\r\n├── .nvim.lua\r\n├── index.qmd\r\n└── post1.qmd\r\n```\r\n`.nvim.lua` enables the project specific configurations.\r\n\r\n1. They can `nvim ~/proj1` to open the project.\r\nNeovim starts up in `~/proj1`.\r\nAs a result `.nvim.lua` configuration file is run.\r\n2. Or they may start neovim as `nvim`.\r\n**Then** switch to the project by running `:cd ~/proj1` command.\r\nBut the `.nvim.lua` project configuration isn't run.\r\n\r\nThis difference makes method 2 unsuitable for opening projects.\r\n\r\n### Expected behavior\r\n\r\nThe benefit of method 2 of opening projects:\r\n- We can create a general Neovim application shortcut.\r\n- We can switch between projects in the same session.\r\n\r\nMethod 2 should also invoke and get the benefits of `.nvim.lua` exrc configuration file.\r\nThere is not much reason to expect this difference in behaviour in my opinion.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't think this should be the default behavior.\r\n\r\nYou can use `DirChanged` autocmd events instead in your config.\r\n",
            "created_at": "2024-02-16T09:41:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/27489#issuecomment-1948052101",
            "id": 1948052101,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27489",
            "node_id": "IC_kwDOAPphoM50HOqF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948052101/reactions"
            },
            "updated_at": "2024-02-16T09:41:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948052101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I don't think this should be the default behavior.\r\n\r\nYes, of course. `vim.opt.exrc` has to be enabled for this, by the user.\r\nBut once it is enabled, is there any reason to prevent method 2 from running `.nvim.lua`.",
            "created_at": "2024-02-16T10:19:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/27489#issuecomment-1948108207",
            "id": 1948108207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27489",
            "node_id": "IC_kwDOAPphoM50HcWv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948108207/reactions"
            },
            "updated_at": "2024-02-16T10:20:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948108207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39594914?v=4",
                "events_url": "https://api.github.com/users/Aman9das/events{/privacy}",
                "followers_url": "https://api.github.com/users/Aman9das/followers",
                "following_url": "https://api.github.com/users/Aman9das/following{/other_user}",
                "gists_url": "https://api.github.com/users/Aman9das/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Aman9das",
                "id": 39594914,
                "login": "Aman9das",
                "node_id": "MDQ6VXNlcjM5NTk0OTE0",
                "organizations_url": "https://api.github.com/users/Aman9das/orgs",
                "received_events_url": "https://api.github.com/users/Aman9das/received_events",
                "repos_url": "https://api.github.com/users/Aman9das/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Aman9das/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Aman9das/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Aman9das"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But once it is enabled, is there any reason to prevent method 2 from running .nvim.lua.\r\n\r\nSecurity. Any plugin can do `:cd`, and silently, so this is much more sensitive than `nvim <file>` (which can be assumed to be intentional).",
            "created_at": "2024-02-16T10:23:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/27489#issuecomment-1948115020",
            "id": 1948115020,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27489",
            "node_id": "IC_kwDOAPphoM50HeBM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948115020/reactions"
            },
            "updated_at": "2024-02-16T10:23:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948115020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If we implement this it should show the `:help trust` prompt before executing `nvim.lua`. So I don't think there is a security issue?",
            "created_at": "2024-02-16T14:54:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/27489#issuecomment-1948530378",
            "id": 1948530378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27489",
            "node_id": "IC_kwDOAPphoM50JDbK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948530378/reactions"
            },
            "updated_at": "2024-02-16T14:54:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948530378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This works:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd(\"DirChanged\", {\r\n    callback = function(args)\r\n        local contents = vim.secure.read(string.format(\"%s/.nvim.lua\", args.file))\r\n        if contents then\r\n            assert(loadstring(contents))()\r\n        end\r\n    end,\r\n})\r\n```\r\n\r\nWe could add this to `_defaults.lua` (assuming it's something we want). I'm not sure I see a reason not to though?",
            "created_at": "2024-02-16T16:39:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/27489#issuecomment-1948844305",
            "id": 1948844305,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27489",
            "node_id": "IC_kwDOAPphoM50KQER",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948844305/reactions"
            },
            "updated_at": "2024-02-16T16:39:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1948844305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I believe the original intention behind `exrc` was to work like `.bashrc`/ `.pylintrc`/`.vimrc` and the other [runcom](http://www.catb.org/jargon/html/R/rc-file.html) files. It is usually setup to run at the start of a program *once*. Probably also the reason `:h exrc` is placed in the initialization startup part in vim. You do not expect `.bashrc` to run on `cd` for instance.\r\n \r\nWhile there is nothing wrong with running `exrc` files on `DirChanged`, it is very easy to do the same thing without using the filenames used by `exrc` in your init file. Just tweaked the above code a bit.\r\n\r\n```lua\r\nlocal PROJECT_CONFIG_FILE_NAME = \".nvim.project.lua\"\r\nvim.api.nvim_create_autocmd(\"DirChanged\", {\r\n    callback = function(args)\r\n        local contents = vim.secure.read(string.format(\"%s/%s\", args.file, PROJECT_CONFIG_FILE_NAME))\r\n        if contents then\r\n            assert(loadstring(contents))()\r\n        end\r\n    end,\r\n})\r\n```",
            "created_at": "2024-02-25T07:34:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/27489#issuecomment-1962843829",
            "id": 1962843829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27489",
            "node_id": "IC_kwDOAPphoM50_p61",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1962843829/reactions"
            },
            "updated_at": "2024-02-25T07:34:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1962843829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/30725674?v=4",
                "events_url": "https://api.github.com/users/GnikDroy/events{/privacy}",
                "followers_url": "https://api.github.com/users/GnikDroy/followers",
                "following_url": "https://api.github.com/users/GnikDroy/following{/other_user}",
                "gists_url": "https://api.github.com/users/GnikDroy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GnikDroy",
                "id": 30725674,
                "login": "GnikDroy",
                "node_id": "MDQ6VXNlcjMwNzI1Njc0",
                "organizations_url": "https://api.github.com/users/GnikDroy/orgs",
                "received_events_url": "https://api.github.com/users/GnikDroy/received_events",
                "repos_url": "https://api.github.com/users/GnikDroy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GnikDroy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GnikDroy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GnikDroy"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27489/comments",
    "created_at": "2024-02-16T09:35:59Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27489/events",
    "html_url": "https://github.com/neovim/neovim/issues/27489",
    "id": 2138214283,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27489/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5_co-L",
    "number": 27489,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 1,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 2,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27489/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27489/timeline",
    "title": "make `:cd` invoke `exrc` files in the current directory. ",
    "updated_at": "2024-02-25T07:34:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27489",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/39594914?v=4",
        "events_url": "https://api.github.com/users/Aman9das/events{/privacy}",
        "followers_url": "https://api.github.com/users/Aman9das/followers",
        "following_url": "https://api.github.com/users/Aman9das/following{/other_user}",
        "gists_url": "https://api.github.com/users/Aman9das/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Aman9das",
        "id": 39594914,
        "login": "Aman9das",
        "node_id": "MDQ6VXNlcjM5NTk0OTE0",
        "organizations_url": "https://api.github.com/users/Aman9das/orgs",
        "received_events_url": "https://api.github.com/users/Aman9das/received_events",
        "repos_url": "https://api.github.com/users/Aman9das/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Aman9das/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Aman9das/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Aman9das"
    }
}