{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nPaths to network storages in Windows starts with double backslashes `\\\\` but is broken when passed to `vim.fs.normalize`.\r\nI think this issue was introduced in https://github.com/neovim/neovim/pull/22791. Could you give me your opinion @lewis6991 ?\r\n\r\nSuch examples are as below.\r\n\r\n- `\\\\wsl$\\Ubuntu\\home\\user`\r\n- `\\\\127.0.0.1\\path`\r\n\r\nWhen passed to `vim.fs.normalize`, the first backslash is deleted.\r\n\r\n```lua\r\nvim.print(vim.fs.normalize([[\\\\wsl$\\Ubuntu\\home\\user]]))\r\n--> /wsl$/Ubuntu/home/user\r\n```\n\n### Steps to reproduce\n\n```lua\r\nvim.print(vim.fs.normalize([[\\\\wsl$\\Ubuntu\\home\\user]]))\r\n--> /wsl$/Ubuntu/home/user\r\n```\n\n### Expected behavior\n\n```lua\r\nvim.print(vim.fs.normalize([[\\\\wsl$\\Ubuntu\\home\\user]]))\r\n-- This should return //wsl$/Ubuntu/home/user, with double slash at the front.\r\n```\n\n### Neovim version (nvim -v)\n\nnightly\n\n### Vim (not Nvim) behaves the same?\n\nNo. It does not have `vim.fs.*`.\n\n### Operating system/version\n\nWindows 10\n\n### Terminal name/version\n\nWindows Terminal Preview\n\n### $TERM environment variable\n\n''\n\n### Installation\n\nwinget",
    "closed_at": "2024-03-29T23:51:11Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm not sure if UNC paths should be supported in `vim.fs` since they have no mapping to unix. The most reasonable thing I can think of is the current behaviour of `\\\\` -> `/`.\r\n\r\nThoughts @gpanders ",
            "created_at": "2024-01-19T12:00:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1900287481",
            "id": 1900287481,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5xRBX5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1900287481/reactions"
            },
            "updated_at": "2024-01-19T12:00:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1900287481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">The most reasonable thing I can think of is the current behaviour of \\\\ -> /.\r\n\r\nYep I agree, can't think of much else we could do.",
            "created_at": "2024-01-19T14:20:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1900506733",
            "id": 1900506733,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5xR25t",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1900506733/reactions"
            },
            "updated_at": "2024-01-19T14:20:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1900506733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "> The most reasonable thing I can think of is the current behaviour of `\\\\` -> `/`.\r\n\r\nThis is very unfortunate.\r\n\r\nI do need the information that the path starts with a double slash, but I want to evaluate that after `expand_env`, so I can't just check it against the path before running this function as well.\r\n\r\nCould you add an option something like `opts.keep_dup_slashes (default: false)` that does not delete the duplicated slashes, and return the slashes as-is? (don't `:gsub('/+', '/')`).\r\n\r\nI'd love to hear your opinions @lewis6991 @gpanders .\r\n\r\nBTW, I don't have problem with `gsub('/+$', '')` (I hope this regex is correct) to delete the trailing slash.",
            "created_at": "2024-01-19T19:05:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1900957987",
            "id": 1900957987,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5xTlEj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1900957987/reactions"
            },
            "updated_at": "2024-01-19T19:30:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1900957987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Like I've already said. It's out of scope for`vim.fs` to handle UNC paths like this since they cannot be represented as Unix style paths.\n\nI suggest you handle this specially with custom code. `vim.fs.normaliize` is only a few lines of code anyway.",
            "created_at": "2024-01-26T01:50:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1911282622",
            "id": 1911282622,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5x69u-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911282622/reactions"
            },
            "updated_at": "2024-01-26T01:52:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911282622",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "@lewis6991 \r\n\r\nThanks for your feedback. However, I don't see any doc that states that `fs.normalize` (has to) supports Unix style paths, and even if not, imo I don't see a reason.\r\n\r\nBesides, my PR is not meant to support UNC paths (above is just one usecase example) but it is just to add one option to branch out `gsub(\"/+\", \"/\")` since slashes may include important information. And as the option defaults to true, this does not bring any breaking changes as well.\r\n\r\nMay I ask you why you want to stick to UNIX paths even though it is not mentioned anywhere in the docs?\r\n\r\nPS. It's actually not just a [few lines of code](https://github.com/neovim/neovim/blob/6116495e6e6d3508eb99720faad7e55ba7cbe978/runtime/lua/vim/fs.lua#L321-L370) now. It's become pretty complicated (eg detect `C:/`) that I don't want to reimplement just because of `gsub(\"/+\", \"/\")`.",
            "created_at": "2024-01-26T02:18:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1911303964",
            "id": 1911303964,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5x7C8c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911303964/reactions"
            },
            "updated_at": "2024-01-26T02:18:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911303964",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Thanks for your feedback. However, I don't see any doc that states that fs.normalize (has to) supports Unix style paths, and even if not, imo I don't see a reason.\n\nIt's implied as it outputs paths with `/` which are Unix paths. UNC paths use `\\`. Therefore paths that begin with `//` don't mean anything.\n\n> PS. It's actually not just a few lines of code now. It's become pretty complicated (eg detect C:/) that I don't want to reimplement just because of gsub(\"/+\", \"/\").\n\nI'd prefer we don't make it any more complicated to support something that has no official meaning.",
            "created_at": "2024-01-26T02:20:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1911306123",
            "id": 1911306123,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5x7DeL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911306123/reactions"
            },
            "updated_at": "2024-01-26T02:22:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911306123",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "> It's implied as it outputs paths with `/` which are Unix paths. UNC paths use `\\`. Therefore paths that begin with `//` don't mean anything.\r\n\r\nSince the user must toggle the option off manually, `//` must mean _something_ important to that user and he must be aware of that. And let me reiterate that my PR is not meant to support UNC paths but it is just to add one option to branch out gsub(\"/+\", \"/\").\r\n\r\n> > PS. It's actually not just a few lines of code now. It's become pretty complicated (eg detect C:/) that I don't want to reimplement just because of gsub(\"/+\", \"/\").\r\n> \r\n> I'd prefer we don't make it any more complicated to support something that has no official meaning.\r\n\r\n`//home//user//` is a valid Unix style path so I think unix commands have no problems handling them.\r\n\r\nCould you advise me if there's a way to workaround `gsub(\"/+\", \"/\")`? That would be very helpful.",
            "created_at": "2024-01-26T02:50:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1911326088",
            "id": 1911326088,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5x7IWI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911326088/reactions"
            },
            "updated_at": "2024-01-26T02:50:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1911326088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm not sure if UNC paths should be supported in `vim.fs` since they have no mapping to unix.\r\n\r\nWhere is this requirement coming from? \r\n\r\n> `vim.fs.normaliize` is only a few lines of code anyway.\r\n\r\nAs it becomes more robust that may change. Normalizing paths has many edge cases that are useful to handle.",
            "created_at": "2024-01-31T00:38:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1918154639",
            "id": 1918154639,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5yVLeP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1918154639/reactions"
            },
            "updated_at": "2024-01-31T00:38:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1918154639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Where is this requirement coming from?\n\nThe requirement is that vim.fs.normalize outputs valid paths and UNC paths must start with double backslash. Normalizing them to begin with double forward slash is ambiguous with no concrete meaning (correct me if I'm wrong). \n\n> As it becomes more robust that may change. Normalizing paths has many edge cases that are useful to handle.\n\nI think handling every edge case is a fools errand. Normalizing a path shouldn't require a handful of options.\n\nWe shouldn't be trying to reinvent how path handling should be done. If a standard popular path library has a good solution for this that we can follow, then maybe that makes sense for us to follow.",
            "created_at": "2024-01-31T09:04:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1918674199",
            "id": 1918674199,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5yXKUX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1918674199/reactions"
            },
            "updated_at": "2024-01-31T09:04:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1918674199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Normalizing them to begin with double forward slash is ambiguous with no concrete meaning\r\n\r\nI did some researching on this as I was curious myself. I have not found a definitive answer, but I'm pretty sure leading double forward slash is defined as UNC based on e.g. [this](https://learn.microsoft.com/en-us/dotnet/core/compatibility/core-libraries/5.0/unc-path-recognition-unix) and [this](https://github.com/PowerShell/PowerShell/pull/17117), indicating that microsoft \"tooling\" recognizes leading doubleslash as valid.",
            "created_at": "2024-01-31T12:37:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1919025705",
            "id": 1919025705,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5yYgIp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919025705/reactions"
            },
            "updated_at": "2024-01-31T12:37:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919025705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think handling every edge case is a fools errand. Normalizing a path shouldn't require a handful of options.\r\n\r\nI don't really agree. Dealing with the dirty stuff is the purpose of providing these utilities in the first place.\r\n\r\n> Normalizing them to begin with double forward slash is ambiguous with no concrete meaning (correct me if I'm wrong).\r\n\r\n`normalize()` would never _add_ a double-slash, but it should be able to _accept_ UNC (double-slash) paths without mangling them. Same for drive-letter paths.\r\n\r\nWe could start by special-casing `//foo` to preserve that case. If that causes problems (because it technically violates the determinism of `normalize()`) we could add a `unc:boolean` option. https://github.com/neovim/neovim/pull/27202#issuecomment-1919183890",
            "created_at": "2024-01-31T14:04:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1919169710",
            "id": 1919169710,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5yZDSu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919169710/reactions"
            },
            "updated_at": "2024-01-31T14:19:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919169710",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "From https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap04.html#tag_04_13\r\n\r\n> If a pathname begins with two successive <slash> characters, the first component following the leading <slash> characters may be interpreted in an implementation-defined manner, although more than two leading <slash> characters shall be treated as a single <slash> character.\r\n\r\nSo we should just preserve any leading double slash.\r\n\r\nThis is also what python does: https://docs.python.org/3/library/os.path.html#os.path.normpath",
            "created_at": "2024-01-31T14:30:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1919219691",
            "id": 1919219691,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5yZPfr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919219691/reactions"
            },
            "updated_at": "2024-01-31T14:31:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1919219691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've updated the PR to support UNC path! Please check it out. \n\nhttps://github.com/neovim/neovim/pull/27202#issuecomment-1919471413",
            "created_at": "2024-02-01T01:59:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/27068#issuecomment-1920351660",
            "id": 1920351660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27068",
            "node_id": "IC_kwDOAPphoM5ydj2s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1920351660/reactions"
            },
            "updated_at": "2024-02-01T01:59:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1920351660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
                "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
                "followers_url": "https://api.github.com/users/pysan3/followers",
                "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
                "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/pysan3",
                "id": 41065736,
                "login": "pysan3",
                "node_id": "MDQ6VXNlcjQxMDY1NzM2",
                "organizations_url": "https://api.github.com/users/pysan3/orgs",
                "received_events_url": "https://api.github.com/users/pysan3/received_events",
                "repos_url": "https://api.github.com/users/pysan3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/pysan3"
            }
        }
    ],
    "comments": 13,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27068/comments",
    "created_at": "2024-01-17T18:29:13Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27068/events",
    "html_url": "https://github.com/neovim/neovim/issues/27068",
    "id": 2086747809,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 109461219,
            "name": "platform:windows",
            "node_id": "MDU6TGFiZWwxMDk0NjEyMTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:windows"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27068/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM58YT6h",
    "number": 27068,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27068/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27068/timeline",
    "title": "`vim.fs.normalize` does not support Windows UNC paths ",
    "updated_at": "2024-03-29T23:51:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27068",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/41065736?v=4",
        "events_url": "https://api.github.com/users/pysan3/events{/privacy}",
        "followers_url": "https://api.github.com/users/pysan3/followers",
        "following_url": "https://api.github.com/users/pysan3/following{/other_user}",
        "gists_url": "https://api.github.com/users/pysan3/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/pysan3",
        "id": 41065736,
        "login": "pysan3",
        "node_id": "MDQ6VXNlcjQxMDY1NzM2",
        "organizations_url": "https://api.github.com/users/pysan3/orgs",
        "received_events_url": "https://api.github.com/users/pysan3/received_events",
        "repos_url": "https://api.github.com/users/pysan3/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/pysan3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pysan3/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/pysan3"
    }
}