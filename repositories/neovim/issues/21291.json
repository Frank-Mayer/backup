{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Feature already in Vim?\r\n\r\nN/A\r\n\r\n### Feature description\r\n\r\nRight now you can call `nvim_get_api_info` to get the channel ID and the API metadata, but often you want these pieces of information at different times - the channel is relevant when you're running the plugin, while the API metadata is mostly relevant for generating API bindings. The API metadata still may be relevant at runtime for validation purposes, but libraries that choose not to do this validation (instead letting invalid calls result in error responses from Neovim) only need the channel ID.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Not a priority but a complete PR with docs and tests will be accepted.",
            "created_at": "2022-12-04T22:55:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/21291#issuecomment-1336539301",
            "id": 1336539301,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21291",
            "node_id": "IC_kwDOAPphoM5Pqfil",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1336539301/reactions"
            },
            "updated_at": "2022-12-04T22:55:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1336539301",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Alternatively, maybe the channel ID should just be returned by `nvim_set_client_info`, as something of a forcing function to get clients to call that after connecting.",
            "created_at": "2022-12-05T18:18:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/21291#issuecomment-1337895657",
            "id": 1337895657,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21291",
            "node_id": "IC_kwDOAPphoM5Pvqrp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1337895657/reactions"
            },
            "updated_at": "2022-12-05T18:18:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1337895657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
                "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddickstein/followers",
                "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddickstein",
                "id": 802511,
                "login": "ddickstein",
                "node_id": "MDQ6VXNlcjgwMjUxMQ==",
                "organizations_url": "https://api.github.com/users/ddickstein/orgs",
                "received_events_url": "https://api.github.com/users/ddickstein/received_events",
                "repos_url": "https://api.github.com/users/ddickstein/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddickstein"
            }
        },
        {
            "author_association": "NONE",
            "body": "I have some code ready for this just wanted to ask a question before I updated docs -- no much in the way of that btw.\r\n\r\nI see:\r\n```\r\nassert( channel_id <= INT64_MAX );\r\nADD_C(rv, INTEGER_OBJ((int64_t)channel_id));\r\n```\r\nin nvim_get_api_info\r\n\r\nSince mine is just returning to caller, can I add a `UInteger` type in defs.c or would it be preferable for me to make that assertion and then cast and return?",
            "created_at": "2023-03-01T21:07:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/21291#issuecomment-1450847633",
            "id": 1450847633,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21291",
            "node_id": "IC_kwDOAPphoM5Wei2R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1450847633/reactions"
            },
            "updated_at": "2023-03-01T21:07:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1450847633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41980525?v=4",
                "events_url": "https://api.github.com/users/KenCox94/events{/privacy}",
                "followers_url": "https://api.github.com/users/KenCox94/followers",
                "following_url": "https://api.github.com/users/KenCox94/following{/other_user}",
                "gists_url": "https://api.github.com/users/KenCox94/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/KenCox94",
                "id": 41980525,
                "login": "KenCox94",
                "node_id": "MDQ6VXNlcjQxOTgwNTI1",
                "organizations_url": "https://api.github.com/users/KenCox94/orgs",
                "received_events_url": "https://api.github.com/users/KenCox94/received_events",
                "repos_url": "https://api.github.com/users/KenCox94/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/KenCox94/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/KenCox94/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/KenCox94"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> can I add a `UInteger` type in defs.c or would it be preferable for me to make that assertion and then cast and return?\r\n\r\nassertion is preferred. API types are mostly 1-to-1 with msgpack and we don't want to add more requirements for clients.",
            "created_at": "2023-03-02T19:37:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/21291#issuecomment-1452446413",
            "id": 1452446413,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21291",
            "node_id": "IC_kwDOAPphoM5WkpLN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1452446413/reactions"
            },
            "updated_at": "2023-03-02T19:37:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1452446413",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> maybe the channel ID should just be returned by `nvim_set_client_info`,\r\n\r\nI forgot that `nvim_set_client_info` returns `void` (instead of a Dict). Because of `:help api-contract` we can't change that. \r\n\r\nInstead, we could make `nvim_get_chan_info(0)` (that is, \"zero\" means \"current channel\") work.",
            "created_at": "2023-03-05T21:33:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/21291#issuecomment-1455212995",
            "id": 1455212995,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21291",
            "node_id": "IC_kwDOAPphoM5WvMnD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1455212995/reactions"
            },
            "updated_at": "2023-03-05T21:33:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1455212995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hey all, I'm working on this issue and had a question I'm hoping you might be able to help me with.\r\n\r\nI'm attempting to get the \"current channel\" in order to return when `nvim_get_chan_info` is called with `0`.\r\n\r\n[Here's my code](https://github.com/andrewwillette/neovim-willette/blob/issue_21291/src/nvim/api/vim.c#L1627). My best bet right now, but it appears to be wrong, is to access the [current_channel_id](https://github.com/andrewwillette/neovim-willette/blob/issue_21291/src/nvim/globals.h#L338) variable. I'm seeing that value as `0` in the logs though, regardless of how I call the function (lua API or RPC calls from python code).\r\n\r\nI'm guessing I'm going about getting the \"current channel id\" incorrectly. Could you point me in the right direction?\r\n\r\nThank you, I really appreciate your time / help.\r\n",
            "created_at": "2023-10-18T02:19:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/21291#issuecomment-1767506296",
            "id": 1767506296,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21291",
            "node_id": "IC_kwDOAPphoM5pWgF4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1767506296/reactions"
            },
            "updated_at": "2023-10-18T02:19:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1767506296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15057271?v=4",
                "events_url": "https://api.github.com/users/andrewwillette/events{/privacy}",
                "followers_url": "https://api.github.com/users/andrewwillette/followers",
                "following_url": "https://api.github.com/users/andrewwillette/following{/other_user}",
                "gists_url": "https://api.github.com/users/andrewwillette/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andrewwillette",
                "id": 15057271,
                "login": "andrewwillette",
                "node_id": "MDQ6VXNlcjE1MDU3Mjcx",
                "organizations_url": "https://api.github.com/users/andrewwillette/orgs",
                "received_events_url": "https://api.github.com/users/andrewwillette/received_events",
                "repos_url": "https://api.github.com/users/andrewwillette/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andrewwillette/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andrewwillette/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andrewwillette"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21291/comments",
    "created_at": "2022-12-04T18:42:09Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/21291/events",
    "html_url": "https://github.com/neovim/neovim/issues/21291",
    "id": 1475075292,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "C2E0C6",
            "default": false,
            "description": "Do NOT ask \"can I work on this?\", just read CONTRIBUTING.md and send a PR.",
            "id": 98144774,
            "name": "good-first-issue",
            "node_id": "MDU6TGFiZWw5ODE0NDc3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/good-first-issue"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "Low-risk, unlikely to cause distant/indirect damage",
            "id": 407246773,
            "name": "complexity:low",
            "node_id": "MDU6TGFiZWw0MDcyNDY3NzM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:low"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 694783760,
            "name": "channel",
            "node_id": "MDU6TGFiZWw2OTQ3ODM3NjA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/channel"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/21291/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 587,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 412,
        "state": "open",
        "title": "backlog",
        "updated_at": "2023-10-17T10:34:06Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5X69zc",
    "number": 21291,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/21291/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/21291/timeline",
    "title": "nvim_get_chan_id, or return channel id from nvim_set_client_info",
    "updated_at": "2023-10-18T02:19:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/21291",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/802511?v=4",
        "events_url": "https://api.github.com/users/ddickstein/events{/privacy}",
        "followers_url": "https://api.github.com/users/ddickstein/followers",
        "following_url": "https://api.github.com/users/ddickstein/following{/other_user}",
        "gists_url": "https://api.github.com/users/ddickstein/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ddickstein",
        "id": 802511,
        "login": "ddickstein",
        "node_id": "MDQ6VXNlcjgwMjUxMQ==",
        "organizations_url": "https://api.github.com/users/ddickstein/orgs",
        "received_events_url": "https://api.github.com/users/ddickstein/received_events",
        "repos_url": "https://api.github.com/users/ddickstein/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ddickstein/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ddickstein/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ddickstein"
    }
}