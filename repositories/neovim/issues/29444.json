{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nWhile comparing the filetype.vim script with filetype.lua script I noticed that filetype.vim sources ftdetect scripts at the very end of the file after the scripts.vim files are sourced.\r\n\r\nThe reference manual does advertise the ftdetect scripts as being able to overrule any previously detected filetypes.  Thus I think filetype.lua should keep the same order by sourcing the ftdetect scripts after the scripts.vim files.\r\n\r\nLastly, the ftdetect is executed in this if conditional:\r\n\r\n```lua\r\nif not vim.g.did_load_ftdetect then\r\n  vim.cmd([[\r\n  augroup filetypedetect\r\n  runtime! ftdetect/*.{vim,lua}\r\n  augroup END\r\n  ]])\r\nend\r\n```\r\nvim.g.did_load_ftdetect is never set to 1.  I believe the variable vim.g.did_load_ftdetect was used during a time when both filetype.lua and filetype.vim were present and the conditional prevented filetype.vim from sourcing the ftdetect scripts a second time.  Now that filetype.vim has been removed, there's no need for the conditional.   \n\n### Steps to reproduce\n\nImplement filetype detection logic for an arbitrary file in a scripts.vim file in the runtime path.\r\nPut conflicting logic for the same file in a ftdetect file in the runtime path.  Ensure it sets the filetype in a way that it can overrule the filetype set in the scripts.vim file.\r\n\n\n### Expected behavior\n\nThe logic in the ftdetect script should take precedence and overrule the filetype set in the scripts.vim file.\n\n### Neovim version (nvim -v)\n\n0.10.0\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nN/A\n\n### Terminal name/version\n\nN/A\n\n### $TERM environment variable\n\nN/A\n\n### Installation\n\nN/A",
    "closed_at": "2024-06-22T13:17:37Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> While comparing the filetype.vim script with filetype.lua script I noticed that filetype.vim sources ftdetect scripts at the very end of the file after the scripts.vim files are sourced.\r\n\r\nI don't think this is correct. `ftdetect/*` is sourced directly in `filetype.lua`, while `scripts.vim` is sourced in autocommands.",
            "created_at": "2024-06-22T00:04:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/29444#issuecomment-2183595091",
            "id": 2183595091,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29444",
            "node_id": "IC_kwDOAPphoM6CJwRT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2183595091/reactions"
            },
            "updated_at": "2024-06-22T00:04:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2183595091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I don't think this is correct. `ftdetect/*` is sourced directly in `filetype.lua`, while `scripts.vim` is sourced in autocommands.\r\n\r\nI was little bit loose with my terminology. If I'm reading the code directly there's still a change in behavior.   In most cases it may not matter.  The autocmd that sources the scripts.vim file only does so if did_filetype() returns false.  That being the case, the code inside a scripts.vim will probably never overrule a filetype detection done by autocmds established by ftdetect scripts.  However, there may be other side effects.\r\n\r\nIn Vim, you can have a situation where the autocmd for scripts.vim fires.  Then regardless of whether scripts.vim detects a filetype, the autocmds setup by ftdetect scripts are fired.\r\n\r\nHowever in Neovim, the autocommands for the ftdetect  scripts are fired first.  If they detect a filetype, then the code in scripts.vim is never fired.  On the other hand, If the code in the scripts.vim files is executed, because the ftdetect scripts don't set a filetype, then it may overrule  the decision by the ftdetect scripts. \r\n\r\nIn any case,  if the ftdetect scripts are supposed to have the final decision, it makes a lot of sense for that code to be executed at the very end of filetype.lua so there's no confusion about what can override what.\r\n\r\n",
            "created_at": "2024-06-22T02:37:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/29444#issuecomment-2183711209",
            "id": 2183711209,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29444",
            "node_id": "IC_kwDOAPphoM6CKMnp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2183711209/reactions"
            },
            "updated_at": "2024-06-22T02:37:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2183711209",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1087862?v=4",
                "events_url": "https://api.github.com/users/rphodges/events{/privacy}",
                "followers_url": "https://api.github.com/users/rphodges/followers",
                "following_url": "https://api.github.com/users/rphodges/following{/other_user}",
                "gists_url": "https://api.github.com/users/rphodges/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rphodges",
                "id": 1087862,
                "login": "rphodges",
                "node_id": "MDQ6VXNlcjEwODc4NjI=",
                "organizations_url": "https://api.github.com/users/rphodges/orgs",
                "received_events_url": "https://api.github.com/users/rphodges/received_events",
                "repos_url": "https://api.github.com/users/rphodges/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rphodges/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rphodges/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rphodges"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29444/comments",
    "created_at": "2024-06-21T23:34:35Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29444/events",
    "html_url": "https://github.com/neovim/neovim/issues/29444",
    "id": 2367358598,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filetype detection, filetype.lua",
            "id": 3708202139,
            "name": "filetype",
            "node_id": "LA_kwDOAPphoM7dBqyb",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filetype"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29444/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6NGwaG",
    "number": 29444,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29444/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29444/timeline",
    "title": "filetype.lua scripts.vim is sourced  before the scripts in the ftdetect directory",
    "updated_at": "2024-06-22T13:17:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29444",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1087862?v=4",
        "events_url": "https://api.github.com/users/rphodges/events{/privacy}",
        "followers_url": "https://api.github.com/users/rphodges/followers",
        "following_url": "https://api.github.com/users/rphodges/following{/other_user}",
        "gists_url": "https://api.github.com/users/rphodges/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rphodges",
        "id": 1087862,
        "login": "rphodges",
        "node_id": "MDQ6VXNlcjEwODc4NjI=",
        "organizations_url": "https://api.github.com/users/rphodges/orgs",
        "received_events_url": "https://api.github.com/users/rphodges/received_events",
        "repos_url": "https://api.github.com/users/rphodges/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rphodges/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rphodges/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rphodges"
    }
}