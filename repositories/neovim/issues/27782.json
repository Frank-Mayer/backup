{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nRegular expressions can use the `\\<` and `\\>` atoms to match the position at the start or end of a word (using the iskeyword definition), but there is no atom to match at the start or end of a WORD (whitespace-delimited).\r\n\r\n### Expected behavior\r\n\r\nI would like to request new regex atoms that match at the beginning and end of a whitespace-delimited WORD. The atoms should be zero-width, just like `\\<` and `\\>`.\r\n\r\nI'm not partial to what the atoms are, but for the sake of describing the feature, let's call them `\\_<` and `\\_>`.\r\n\r\nThen, let's use this file for an example:\r\n\r\n```\r\npublic class Example {\r\n    static final String BOOK = \"The Republic\";\r\n    static final String pub_sub_url = \"http://non-public.server.io\";\r\n}\r\n```\r\n\r\nThe desired behavior is that I can search with the regex `\\_<pub` and I should see two matches: the \"pub\" at the beginning of \"**pub**lic\" and the \"pub\" at the beginning of \"**pub**_sub_url\", because in each case the match is at a WORD boundary. The \"pub\" in the middle of \"Re**pub**lic\" and the \"pub\" in \"non-**pub**lic.server\" should not match, because there is no WORD boundary.\r\n\r\nSimilarly for `\\_>`, it should match only at the *end* of a WORD.\r\n\r\n### Alternatives Considered\r\n\r\nWithout dedicated atoms for WORD boundaries, it's possible to achieve this behavior in one of three ways:\r\n\r\n1. Accurate emulation of the atoms\r\n\r\n`\\S\\@<!\\S\\@=` matches at the start of a WORD boundary, and `\\s\\@<!\\S\\@!` matches at the end. They behave similarly to how `\\<` and `\\>` behave, but for WORDs. This is the behavior I would like, but it's quite clunky and hard to remember, for something that is a common and straightforward scenario.\r\n\r\n2. Less accurate emulation\r\n\r\n`\\S\\@<!` for start of WORD and `\\S\\@!` for end of WORD work well as part of a larger pattern, but give incorrect results when used alone. They are easier to remember but still fairly clunky.\r\n\r\n3. Changing `iskeyword`\r\n\r\nSetting the `iskeyword` option to the value `!-~` changes `\\<` and `\\>` to have the desired behavior. This too is clunky, and needs to be reset afterwards, and cannot be combined in the same pattern with the word-boundary atoms (since it effectively overwrites those atoms with a new definition).\r\n\r\n### Additional Context\r\n\r\nA detailed discussion of the problem and the existing workarounds are [here](https://stackoverflow.com/q/55522385/2562319) on StackOverflow. I think the workarounds are clunky and that a new dedicated atom for this use case would be a better solution.\r\n\r\nI use both NeoVim and vim, and I filed this feature request for both. The corresponding request for vim is [here](https://github.com/vim/vim/issues/14164).",
    "closed_at": "2024-03-08T23:13:27Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "We don't own, maintain or develop the vim regular expression engine.\n\nPlease raise an issue on vim/vim instead.\n\nEDIT: ah I see you've raised an issue in vim",
            "created_at": "2024-03-08T23:13:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/27782#issuecomment-1986551781",
            "id": 1986551781,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27782",
            "node_id": "IC_kwDOAPphoM52aF_l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1986551781/reactions"
            },
            "updated_at": "2024-03-08T23:13:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1986551781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "@jbyler apologies in advance you could think about trying out a new Regex Engine. I've tried Perl6 (a.k.a. Raku) and can do some amazing things. It does a great job on Unicode. Word boundaries are well documented:\r\n\r\nhttps://docs.raku.org/language/regexes#Word_boundary    \r\nhttps://docs.raku.org/language/regexes#Left_and_right_word_boundary\r\n\r\nAnd here's an example:\r\n\r\nhttps://unix.stackexchange.com/a/712339/227738\r\n\r\nRun the code at the Vim/Neovim command line thusly:\r\n```vim\r\n:%!  raku -pe 's:g/ << \\w**2..3  >> /{$/.uc}/;' \r\n```\r\nHTH.",
            "created_at": "2024-06-07T20:25:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/27782#issuecomment-2155498492",
            "id": 2155498492,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27782",
            "node_id": "IC_kwDOAPphoM6Aekv8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2155498492/reactions"
            },
            "updated_at": "2024-06-07T21:42:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2155498492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7545389?v=4",
                "events_url": "https://api.github.com/users/jubilatious1/events{/privacy}",
                "followers_url": "https://api.github.com/users/jubilatious1/followers",
                "following_url": "https://api.github.com/users/jubilatious1/following{/other_user}",
                "gists_url": "https://api.github.com/users/jubilatious1/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jubilatious1",
                "id": 7545389,
                "login": "jubilatious1",
                "node_id": "MDQ6VXNlcjc1NDUzODk=",
                "organizations_url": "https://api.github.com/users/jubilatious1/orgs",
                "received_events_url": "https://api.github.com/users/jubilatious1/received_events",
                "repos_url": "https://api.github.com/users/jubilatious1/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jubilatious1/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jubilatious1/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jubilatious1"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27782/comments",
    "created_at": "2024-03-08T22:07:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27782/events",
    "html_url": "https://github.com/neovim/neovim/issues/27782",
    "id": 2176848099,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "upstream issue that needs to be fixed in vim first",
            "id": 2639399975,
            "name": "needs:vim-patch",
            "node_id": "MDU6TGFiZWwyNjM5Mzk5OTc1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:vim-patch"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27782/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6BwBDj",
    "number": 27782,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27782/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27782/timeline",
    "title": "New regular expression atoms for WORD-boundaries",
    "updated_at": "2024-06-07T21:42:39Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27782",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/920250?v=4",
        "events_url": "https://api.github.com/users/jbyler/events{/privacy}",
        "followers_url": "https://api.github.com/users/jbyler/followers",
        "following_url": "https://api.github.com/users/jbyler/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbyler/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jbyler",
        "id": 920250,
        "login": "jbyler",
        "node_id": "MDQ6VXNlcjkyMDI1MA==",
        "organizations_url": "https://api.github.com/users/jbyler/orgs",
        "received_events_url": "https://api.github.com/users/jbyler/received_events",
        "repos_url": "https://api.github.com/users/jbyler/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jbyler/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbyler/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jbyler"
    }
}