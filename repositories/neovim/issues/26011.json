{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nWhile developing a plugin for 0.9 and 0.10 version I noticed an inconsistency in `vim.api.nvim_set_decoration_provider`. On the 0.9 neovim version the botline was estimated wrongly, exceeding the buffer size. The fix was introduced on neovim 0.10 by this [commit](https://github.com/neovim/neovim/commit/65738202f8be3ca63b75197d48f2c7a9324c035b). \r\n\r\nWhen using `vim.api.nvim_buf_get_lines` with strict indexing enabled this becomes a problem on the 0.9 neovim version. \r\n\r\nI was wondering if it would make sense to port this fix to Neovim 0.9 version. \r\n\r\nSorry if this suggestion doesn't make sense or is unachievable. \r\nThank you for your amazing work! \r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n### `my_issue.lua`:\r\n```lua\r\nlocal Bufnr = vim.api.nvim_create_buf(false, true)\r\nlocal ns = vim.api.nvim_create_namespace(\"Test\")\r\n\r\nvim.api.nvim_set_decoration_provider(ns, {\r\n    on_win = function(_, _, bufnr, topline, botline)\r\n        if Bufnr ~= bufnr then\r\n            return\r\n        end\r\n\r\n        print(\"Topline: \" .. topline .. \" Botline\" .. botline)\r\n        for lnum = topline, botline do\r\n            vim.api.nvim_buf_clear_namespace(bufnr, ns, lnum, lnum + 1)\r\n            -- Get line with strict indexing will error\r\n            vim.api.nvim_buf_get_lines(bufnr, lnum, lnum + 1, true)\r\n        end\r\n    end,\r\n})\r\nvim.api.nvim_open_win(Bufnr, true, {\r\n    relative = \"win\",\r\n    row = 0,\r\n    col = 0,\r\n    width = 200,\r\n    height = 40,\r\n})\r\n```\r\n### Steps:\r\n1. nvim --clean -u my_issue.lua\r\n\r\n\r\n### Expected behavior\r\n\r\nEqual behavior to Neovim 0.10 after this [commit](https://github.com/neovim/neovim/commit/65738202f8be3ca63b75197d48f2c7a9324c035b), which means correct botline estimation.\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.9.4 \r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nnot applicable\r\n\r\n### Operating system/version\r\n\r\nWSL ubuntu 22.04.2 LTS\r\n\r\n### Terminal name/version\r\n\r\nWindows Terminal\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbuild from repo ( nightly ) and bob nvim version manager ( 0.9.4 )",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26011/comments",
    "created_at": "2023-11-12T17:36:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26011/events",
    "html_url": "https://github.com/neovim/neovim/issues/26011",
    "id": 1989500721,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26011/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM52lV8x",
    "number": 26011,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26011/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26011/timeline",
    "title": "Decoration provider on_win botline estimation exceeds buffer",
    "updated_at": "2023-11-12T17:37:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26011",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/48023091?v=4",
        "events_url": "https://api.github.com/users/guilhas07/events{/privacy}",
        "followers_url": "https://api.github.com/users/guilhas07/followers",
        "following_url": "https://api.github.com/users/guilhas07/following{/other_user}",
        "gists_url": "https://api.github.com/users/guilhas07/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/guilhas07",
        "id": 48023091,
        "login": "guilhas07",
        "node_id": "MDQ6VXNlcjQ4MDIzMDkx",
        "organizations_url": "https://api.github.com/users/guilhas07/orgs",
        "received_events_url": "https://api.github.com/users/guilhas07/received_events",
        "repos_url": "https://api.github.com/users/guilhas07/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/guilhas07/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/guilhas07/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/guilhas07"
    }
}