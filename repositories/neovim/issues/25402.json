{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nWhen exiting neovim from a file that has a running LSP server and an autocommand set to update the loclist on `DiagnosticChanged` the program hangs indefinitely.\r\n\r\nInitially thought this was a plugin/LSP client bug ([see here](https://github.com/pmizio/typescript-tools.nvim/issues/164)). But the hang can be reliably reproduced across multiple LSP clients/servers and the stacktrace seems to mostly relate to the autocommand/loclist and **not** the LSP client.\r\n\r\nAttaching a debugger during the hangs shows a call stack like:\r\n\r\n```\r\n* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP\r\n  * frame #0: 0x000000010077a658 nvim`ml_delete_int + 20\r\n    frame #1: 0x00000001007d4a74 nvim`qf_fill_buffer + 232\r\n    frame #2: 0x00000001007d3fac nvim`qf_update_buffer + 376\r\n    frame #3: 0x00000001007d7b74 nvim`set_errorlist + 1360\r\n    frame #4: 0x00000001007da308 nvim`set_qf_ll_list + 308\r\n    frame #5: 0x00000001006c7380 nvim`call_internal_func + 144\r\n    frame #6: 0x00000001006e2998 nvim`call_func + 2064\r\n    frame #7: 0x0000000100753d3c nvim`nlua_call + 440\r\n    frame #8: 0x0000000100baeb04 libluajit-5.1.2.dylib`___lldb_unnamed_symbol348 + 44\r\n    frame #9: 0x0000000100bbb4dc libluajit-5.1.2.dylib`lua_pcall + 148\r\n    frame #10: 0x0000000100754384 nvim`nlua_pcall + 120\r\n    frame #11: 0x0000000100754a28 nvim`nlua_call_ref + 216\r\n    frame #12: 0x0000000100670258 nvim`getnextac + 1188\r\n    frame #13: 0x00000001006fd27c nvim`do_cmdline + 2028\r\n    frame #14: 0x000000010066ea88 nvim`apply_autocmds_group + 1828\r\n    frame #15: 0x000000010063f3bc nvim`nvim_exec_autocmds + 860\r\n    frame #16: 0x000000010062d2bc nvim`nlua_api_nvim_exec_autocmds + 248\r\n    frame #17: 0x0000000100baeb04 libluajit-5.1.2.dylib`___lldb_unnamed_symbol348 + 44\r\n    frame #18: 0x0000000100bbb4dc libluajit-5.1.2.dylib`lua_pcall + 148\r\n    frame #19: 0x0000000100754384 nvim`nlua_pcall + 120\r\n    frame #20: 0x0000000100756d20 nvim`nlua_schedule_event + 104\r\n    frame #21: 0x00000001006ef28c nvim`multiqueue_process_events + 92\r\n    frame #22: 0x00000001006efb10 nvim`process_teardown + 228\r\n    frame #23: 0x0000000100626f48 nvim`event_teardown + 72\r\n    frame #24: 0x000000010062a5bc nvim`os_exit + 88\r\n    frame #25: 0x000000010062a4e0 nvim`getout + 916\r\n    frame #26: 0x0000000100708b20 nvim`ex_quit_all + 272\r\n    frame #27: 0x0000000100702970 nvim`execute_cmd0 + 248\r\n    frame #28: 0x00000001006ff7e0 nvim`do_cmdline + 11600\r\n    frame #29: 0x000000010079ad5c nvim`nv_colon + 420\r\n    frame #30: 0x0000000100798968 nvim`normal_execute + 4696\r\n    frame #31: 0x000000010082e3ac nvim`state_enter + 356\r\n    frame #32: 0x0000000100629780 nvim`main + 10240\r\n    frame #33: 0x0000000189f13f28 dyld`start + 2236\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nBelow reproduction instructions assume/use the following (0 plugins) `init.lua`:\r\n```lua\r\nlocal pattern = \"typescript\"\r\nlocal cmd = { \"tailwindcss-language-server\", \"--stdio\" }\r\n-- Add files/folders here that indicate the root of a project\r\nlocal root_markers = { \".git\", \".editorconfig\" }\r\n-- Change to table with settings if required\r\nlocal settings = vim.empty_dict()\r\n\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n  pattern = pattern,\r\n  callback = function(args)\r\n    local match = vim.fs.find(root_markers, { path = args.file, upward = true })[1]\r\n    local root_dir = match and vim.fn.fnamemodify(match, \":p:h\") or nil\r\n    vim.lsp.start {\r\n      name = \"bugged-ls\",\r\n      cmd = cmd,\r\n      root_dir = root_dir,\r\n      settings = settings,\r\n    }\r\n  end,\r\n})\r\n\r\n_G.test = function()\r\n  print \"::::::::: debug message :::::::::\"\r\n  vim.fn.setloclist(0, {}, \" \", {\r\n    items = {\r\n      {\r\n        bufnr = 1,\r\n        col = 1,\r\n        end_col = 1,\r\n        end_lnum = 12,\r\n        lnum = 12,\r\n        text = \"Parsing error: Identifier expected.\",\r\n        type = \"E\",\r\n      },\r\n      {\r\n        bufnr = 1,\r\n        col = 1,\r\n        end_col = 2,\r\n        end_lnum = 12,\r\n        lnum = 12,\r\n        text = \"Identifier expected.\",\r\n        type = \"E\",\r\n      },\r\n      {\r\n        bufnr = 1,\r\n        col = 26,\r\n        end_col = 27,\r\n        end_lnum = 18,\r\n        lnum = 18,\r\n        text = \"Property 'Z' does not exist on type 'typeof TestEnum'.\",\r\n        type = \"E\",\r\n      },\r\n    },\r\n    title = \"Diagnostics\",\r\n  })\r\nend\r\n\r\nvim.api.nvim_create_autocmd('DiagnosticChanged', {\r\n  pattern = '*.ts',\r\n  callback = _G.test,\r\n})\r\n```\r\n\r\nReproduction steps\r\n==================\r\n\r\n1. Have any language server available (this reproducer uses `npm i -g @tailwindcss/language-server`)\r\n2. open any `.ts` typescript file in a folder with a root marker (git repo or directory with `.editorconfig`)\r\n3. Run `:lua _G.test()` to populate location list\r\n4. Run `:lopen` to open loclist\r\n5. Run `:qa!` to quit -> vim hangs indefinitely\r\n\r\n### Expected behavior\r\n\r\nExpected behaviour is that vim properly exits instead of hanging.\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.9.1 release & 0.9.2 release\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nmacOS 13.5.2\r\n\r\n### Terminal name/version\r\n\r\nTerminal.app\r\n\r\n### $TERM environment variable\r\n\r\nscreen-256color\r\n\r\n### Installation\r\n\r\nHomebrew",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I tried my hand at this and found that it seemingly gets stuck in an infinite loop by stepping in GDB:\r\n\r\n```\r\nqf_fill_buffer (qfl=0x55dc82a54d80, buf=0x55dc82a9b640, old_last=0x0, qf_winid=1000) at /neovim/src/nvim/quickfix.c:4119\r\n4119\t   while ((curbuf->b_ml.ml_flags & ML_EMPTY) == 0) {\r\n(gdb) \r\n4120\t     (void)ml_delete((linenr_T)1, false);\r\n(gdb) \r\nml_delete (lnum=1, message=false) at /neovim/src/nvim/memline.c:2490\r\n2490\t ml_flush_line(curbuf);\r\n(gdb) \r\nml_flush_line (buf=0x55dc82a9b640) at /neovim/src/nvim/memline.c:2735\r\n2735\t if (buf->b_ml.ml_line_lnum == 0 || buf->b_ml.ml_mfp == NULL) {\r\n(gdb) \r\n2736\t   return;             // nothing to do\r\n(gdb) \r\n2815\t}\r\n(gdb) \r\nml_delete (lnum=1, message=false) at /neovim/src/nvim/memline.c:2491\r\n2491\t return ml_delete_int(curbuf, lnum, message);\r\n(gdb) \r\nml_delete_int (buf=0x55dc82a9b640, lnum=1, message=false) at /neovim/src/nvim/memline.c:2509\r\n2509\t if (lnum < 1 || lnum > buf->b_ml.ml_line_count) {\r\n(gdb) \r\n2513\t if (lowest_marked && lowest_marked > lnum) {\r\n(gdb) \r\n2518\t if (buf->b_ml.ml_line_count == 1) {       // file becomes empty\r\n(gdb) \r\n2532\t memfile_T *mfp = buf->b_ml.ml_mfp;\r\n(gdb) \r\n2533\t if (mfp == NULL) {\r\n(gdb) \r\n2534\t   return FAIL;\r\n(gdb) \r\n2630\t}\r\n(gdb) \r\nml_delete (lnum=1, message=false) at /neovim/src/nvim/memline.c:2492\r\n2492\t}\r\n(gdb) \r\nqf_fill_buffer (qfl=0x55dc82a54d80, buf=0x55dc82a9b640, old_last=0x0, qf_winid=1000) at /neovim/src/nvim/quickfix.c:4119\r\n4119\t   while ((curbuf->b_ml.ml_flags & ML_EMPTY) == 0) {\r\n```\r\n\r\nA workaround would be to check inside the loop whether the delete succeeded and return if it didn't, thereby allowing the editor to exit normally. I'm not sure this is a good enough solution, so I tried digging more into the cause.\r\n\r\nI believe that the memline pointer is set to `NULL` when `:qa!` is run here: https://github.com/neovim/neovim/blob/09a17f91d0d362c6e58bfdbe3ccdeacffb0b44b9/src/nvim/memline.c#L569 However, it is not until *after* this that the `DiagnosticChanged` event is handled where it tries to delete the line again to replace it with the new loclist contents.\r\n\r\nI'm not very familiar with the codebase so I couldn't get any further than this. Is the order correct, and should `DiagnosticChanged` be fired when the editor is closed like this (it only seems to happen when an LSP server is attached)? Appreciate any help or pointers!",
            "created_at": "2023-10-17T10:30:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/25402#issuecomment-1766133906",
            "id": 1766133906,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25402",
            "node_id": "IC_kwDOAPphoM5pRRCS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1766133906/reactions"
            },
            "updated_at": "2023-10-17T10:30:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1766133906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29259387?v=4",
                "events_url": "https://api.github.com/users/voidiz/events{/privacy}",
                "followers_url": "https://api.github.com/users/voidiz/followers",
                "following_url": "https://api.github.com/users/voidiz/following{/other_user}",
                "gists_url": "https://api.github.com/users/voidiz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/voidiz",
                "id": 29259387,
                "login": "voidiz",
                "node_id": "MDQ6VXNlcjI5MjU5Mzg3",
                "organizations_url": "https://api.github.com/users/voidiz/orgs",
                "received_events_url": "https://api.github.com/users/voidiz/received_events",
                "repos_url": "https://api.github.com/users/voidiz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/voidiz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/voidiz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/voidiz"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think `DiagnosticChanged` should *probably* not fire when closing, but I am, essentially, 100% unfamiliar with the design, so take that with a grain of salt.",
            "created_at": "2023-10-17T11:32:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/25402#issuecomment-1766227268",
            "id": 1766227268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25402",
            "node_id": "IC_kwDOAPphoM5pRn1E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1766227268/reactions"
            },
            "updated_at": "2023-10-17T11:32:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1766227268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/663022?v=4",
                "events_url": "https://api.github.com/users/merijn/events{/privacy}",
                "followers_url": "https://api.github.com/users/merijn/followers",
                "following_url": "https://api.github.com/users/merijn/following{/other_user}",
                "gists_url": "https://api.github.com/users/merijn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/merijn",
                "id": 663022,
                "login": "merijn",
                "node_id": "MDQ6VXNlcjY2MzAyMg==",
                "organizations_url": "https://api.github.com/users/merijn/orgs",
                "received_events_url": "https://api.github.com/users/merijn/received_events",
                "repos_url": "https://api.github.com/users/merijn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/merijn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/merijn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/merijn"
            }
        },
        {
            "author_association": "NONE",
            "body": "Incidentally, it seems to hang with `:q` and `:q!` too, not just `:qa!`",
            "created_at": "2023-10-17T11:33:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/25402#issuecomment-1766228676",
            "id": 1766228676,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25402",
            "node_id": "IC_kwDOAPphoM5pRoLE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1766228676/reactions"
            },
            "updated_at": "2023-10-17T11:33:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1766228676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/663022?v=4",
                "events_url": "https://api.github.com/users/merijn/events{/privacy}",
                "followers_url": "https://api.github.com/users/merijn/followers",
                "following_url": "https://api.github.com/users/merijn/following{/other_user}",
                "gists_url": "https://api.github.com/users/merijn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/merijn",
                "id": 663022,
                "login": "merijn",
                "node_id": "MDQ6VXNlcjY2MzAyMg==",
                "organizations_url": "https://api.github.com/users/merijn/orgs",
                "received_events_url": "https://api.github.com/users/merijn/received_events",
                "repos_url": "https://api.github.com/users/merijn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/merijn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/merijn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/merijn"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25402/comments",
    "created_at": "2023-09-28T08:10:05Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25402/events",
    "html_url": "https://github.com/neovim/neovim/issues/25402",
    "id": 1916951088,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25402/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5yQlow",
    "number": 25402,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25402/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25402/timeline",
    "title": "Neovim 0.9.2 hangs indefinitely on exit with 100% CPU usage when using LSP + autocommand to set the loclist",
    "updated_at": "2023-10-17T11:33:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25402",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/663022?v=4",
        "events_url": "https://api.github.com/users/merijn/events{/privacy}",
        "followers_url": "https://api.github.com/users/merijn/followers",
        "following_url": "https://api.github.com/users/merijn/following{/other_user}",
        "gists_url": "https://api.github.com/users/merijn/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/merijn",
        "id": 663022,
        "login": "merijn",
        "node_id": "MDQ6VXNlcjY2MzAyMg==",
        "organizations_url": "https://api.github.com/users/merijn/orgs",
        "received_events_url": "https://api.github.com/users/merijn/received_events",
        "repos_url": "https://api.github.com/users/merijn/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/merijn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/merijn/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/merijn"
    }
}