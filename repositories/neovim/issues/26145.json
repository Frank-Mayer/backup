{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "Get the following output for basically every `it`:\r\n\r\n```\r\nRUN       vim_to_object converts true: 16.00 ms ERR\r\ntest/unit/helpers.lua:750: test/unit/helpers.lua:734: (string) '\r\ntest/unit/helpers.lua:266: '<identifier>' expected near ':' at line 671'\r\nexit code: 256\r\n\r\nstack traceback:\r\n        test/unit/helpers.lua:750: in function 'itp_parent'\r\n        test/unit/helpers.lua:786: in function <test/unit/helpers.lua:776>\r\n```",
    "closed_at": "2024-04-14T13:27:05Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is a LuaJIT parsing issue https://github.com/LuaJIT/LuaJIT/issues/951, below is a very hacky work around. LuaJIT FFI doesn't support bitfields or the C++11 `enum : type` extension.\r\n\r\nAfter that, all the unittests are passing.\r\n\r\nThe best fix would be to support it properly in LuaJIT, I'm not sure of the best way to work around it in neovim.\r\n\r\n```\r\ndiff --git a/test/unit/testutil.lua b/test/unit/testutil.lua                                                                                                                          \r\nindex c90859581..de8bb2f31 100644                                                                                                                                                     \r\n--- a/test/unit/testutil.lua                                                                                                                                                          \r\n+++ b/test/unit/testutil.lua                                                                                                                                                          \r\n@@ -265,6 +265,14 @@ local function _cimportstr(preprocess_cache, path)                                                                                                               \r\n   if body == '' then                                                                                                                                                                 \r\n     return lib                                                                                                                                                                       \r\n   end                                                                                                                                                                                \r\n+  body = body:gsub('typedef enum : uint32_t', 'typedef enum')                                                                                                                        \r\n+  body = body:gsub('typedef enum : uint64_t', 'typedef enum')                                                                                                                        \r\n+  body = body:gsub('typedef enum : uint16_t', 'typedef enum')                                                                                                                        \r\n+  body = body:gsub('mach_vm_range_flags_t flags: 48; mach_vm_range_tag_t range_tag : 8; uint8_t vm_tag : 8; struct mach_vm_range range;', 'mach_vm_range_flags_t flags; mach_vm_range\r\n_tag_t range_tag; uint8_t vm_tag; struct mach_vm_range range;') \r\n```",
            "created_at": "2024-04-13T16:12:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/26145#issuecomment-2053690494",
            "id": 2053690494,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26145",
            "node_id": "IC_kwDOAPphoM56aNR-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053690494/reactions"
            },
            "updated_at": "2024-04-13T16:13:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053690494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46615?v=4",
                "events_url": "https://api.github.com/users/jgouly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jgouly/followers",
                "following_url": "https://api.github.com/users/jgouly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jgouly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jgouly",
                "id": 46615,
                "login": "jgouly",
                "node_id": "MDQ6VXNlcjQ2NjE1",
                "organizations_url": "https://api.github.com/users/jgouly/orgs",
                "received_events_url": "https://api.github.com/users/jgouly/received_events",
                "repos_url": "https://api.github.com/users/jgouly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jgouly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jgouly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jgouly"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Cool. Want to raise a PR to add that patch as a temporary workaround?",
            "created_at": "2024-04-14T07:52:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/26145#issuecomment-2053952376",
            "id": 2053952376,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26145",
            "node_id": "IC_kwDOAPphoM56bNN4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053952376/reactions"
            },
            "updated_at": "2024-04-14T07:52:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053952376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I could, it felt too horrible to use as a hack even, was hoping someone might have some better ideas. A PR could work as a place to try figure out alternatives though.\r\n\r\nI also don't know how 'temporary' it would be, not sure if LuaJIT is going to implement the changes needed.",
            "created_at": "2024-04-14T08:30:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/26145#issuecomment-2053964579",
            "id": 2053964579,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26145",
            "node_id": "IC_kwDOAPphoM56bQMj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053964579/reactions"
            },
            "updated_at": "2024-04-14T08:31:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053964579",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46615?v=4",
                "events_url": "https://api.github.com/users/jgouly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jgouly/followers",
                "following_url": "https://api.github.com/users/jgouly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jgouly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jgouly",
                "id": 46615,
                "login": "jgouly",
                "node_id": "MDQ6VXNlcjQ2NjE1",
                "organizations_url": "https://api.github.com/users/jgouly/orgs",
                "received_events_url": "https://api.github.com/users/jgouly/received_events",
                "repos_url": "https://api.github.com/users/jgouly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jgouly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jgouly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jgouly"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A nasty, but small, hack is much better than unittests not working IMO. This also affects all macos builds going forward since x86 is being phased out.\n\n@dundargoc what do you think of the workaround?\n\n> I also don't know how 'temporary' it would be, not sure if LuaJIT is going to implement the changes needed.\n\nNo I wouldn't hold your breath. However since this affects system headers on a major platform, an exception might be made.",
            "created_at": "2024-04-14T08:34:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/26145#issuecomment-2053965990",
            "id": 2053965990,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26145",
            "node_id": "IC_kwDOAPphoM56bQim",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053965990/reactions"
            },
            "updated_at": "2024-04-14T08:34:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053965990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Another alternative I tried was to define `_MACH_VM_TYPES_H_` but I think that lead to just a different error later since another header needed one of the types.\r\n\r\nIt's kinda crazy this low-level of a header is pulled in.",
            "created_at": "2024-04-14T08:51:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/26145#issuecomment-2053970929",
            "id": 2053970929,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26145",
            "node_id": "IC_kwDOAPphoM56bRvx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053970929/reactions"
            },
            "updated_at": "2024-04-14T08:51:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053970929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46615?v=4",
                "events_url": "https://api.github.com/users/jgouly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jgouly/followers",
                "following_url": "https://api.github.com/users/jgouly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jgouly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jgouly",
                "id": 46615,
                "login": "jgouly",
                "node_id": "MDQ6VXNlcjQ2NjE1",
                "organizations_url": "https://api.github.com/users/jgouly/orgs",
                "received_events_url": "https://api.github.com/users/jgouly/received_events",
                "repos_url": "https://api.github.com/users/jgouly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jgouly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jgouly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jgouly"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Where is it being pulled in? Can we avoid it if it isn't strictly needed?",
            "created_at": "2024-04-14T09:01:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/26145#issuecomment-2053973949",
            "id": 2053973949,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26145",
            "node_id": "IC_kwDOAPphoM56bSe9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053973949/reactions"
            },
            "updated_at": "2024-04-14T09:01:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053973949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, PR welcome. This is not any hackier than what we're already doing in unittest, which is straight up ignoring anything we can't parse: https://github.com/neovim/neovim/blob/master/test/unit/testutil.lua#L130-L156\r\n\r\nAs an example, adding `or string.find(line, 'typedef enum : uint32_t')` instead of `body = body:gsub('typedef enum : uint32_t', 'typedef enum')` works as well. This didn't work for uint64_t for some reason, but my point is that skipping unparsable sections isn't any less hacky than changing the code to be parseable.\r\n\r\nPlease make a PR :)",
            "created_at": "2024-04-14T09:15:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/26145#issuecomment-2053978114",
            "id": 2053978114,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26145",
            "node_id": "IC_kwDOAPphoM56bTgC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053978114/reactions"
            },
            "updated_at": "2024-04-14T09:15:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053978114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@lewis6991 I think through `stdbool.h` but that's just a guess, would be hard to figure out I think. (I'm running linux+arm64 locally, but trying to fix the macOS issues so we have arm64 coverage)\r\n\r\n@dundargoc thanks, I didn't see that bit of code, feel a bit better with my hack now!",
            "created_at": "2024-04-14T09:37:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/26145#issuecomment-2053984926",
            "id": 2053984926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26145",
            "node_id": "IC_kwDOAPphoM56bVKe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053984926/reactions"
            },
            "updated_at": "2024-04-14T09:38:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2053984926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46615?v=4",
                "events_url": "https://api.github.com/users/jgouly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jgouly/followers",
                "following_url": "https://api.github.com/users/jgouly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jgouly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jgouly",
                "id": 46615,
                "login": "jgouly",
                "node_id": "MDQ6VXNlcjQ2NjE1",
                "organizations_url": "https://api.github.com/users/jgouly/orgs",
                "received_events_url": "https://api.github.com/users/jgouly/received_events",
                "repos_url": "https://api.github.com/users/jgouly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jgouly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jgouly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jgouly"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26145/comments",
    "created_at": "2023-11-21T22:04:31Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26145/events",
    "html_url": "https://github.com/neovim/neovim/issues/26145",
    "id": 2005219927,
    "labels": [
        {
            "color": "d4c5f9",
            "default": false,
            "description": null,
            "id": 81986904,
            "name": "platform:macos",
            "node_id": "MDU6TGFiZWw4MTk4NjkwNA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:macos"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 110418643,
            "name": "test",
            "node_id": "MDU6TGFiZWwxMTA0MTg2NDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/test"
        },
        {
            "color": "D4C5F9",
            "default": false,
            "description": "",
            "id": 6259445841,
            "name": "platform:arm",
            "node_id": "LA_kwDOAPphoM8AAAABdReQUQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/platform:arm"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26145/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM53hTpX",
    "number": 26145,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26145/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26145/timeline",
    "title": "Unittests doesn't work on arm mac",
    "updated_at": "2024-04-14T13:27:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26145",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
        "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/dundargoc/followers",
        "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dundargoc",
        "id": 33953936,
        "login": "dundargoc",
        "node_id": "MDQ6VXNlcjMzOTUzOTM2",
        "organizations_url": "https://api.github.com/users/dundargoc/orgs",
        "received_events_url": "https://api.github.com/users/dundargoc/received_events",
        "repos_url": "https://api.github.com/users/dundargoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dundargoc"
    }
}