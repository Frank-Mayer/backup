{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\nCurrently this logic works within `lsp.buf_request`: if requested method isn't supported by any client, we get a notification (`lsp._unsupported_method(method)`). It would be good to expose it to some public method. \r\n\r\nExample: suppose that we can some autocommand enabled on attach some client\r\n```lua\r\napi.nvim_create_augroup('LspDocumentHighlight', {clear = true})\r\n```\r\n```lua\r\n-- ... in on_attach\r\n  if client.server_capabilities.documentHighlightProvider then\r\n    api.nvim_create_autocmd({'CursorMoved', 'CursorMovedI'}, {\r\n      group = 'LspDocumentHighlight',\r\n      buffer = bufnr,\r\n      callback = vim.lsp.buf.clear_references\r\n    })\r\n    api.nvim_create_autocmd({'CursorHold', 'CursorHoldI'}, {\r\n      group = 'LspDocumentHighlight',\r\n      buffer = bufnr,\r\n      callback = vim.lsp.buf.document_highlight\r\n    })\r\n  end\r\n```\r\nand we want to clear them if no buffer support highlighting using newly defined `LspDetach`.\r\n",
    "closed_at": "2023-12-09T09:42:39Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm not sure I understand the use case correctly.  Isn't it possible to query the clients in the LspDetach event and check their capabilities? If none have the server capability you can remove the autocmd ",
            "created_at": "2022-05-20T11:10:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/18654#issuecomment-1132776230",
            "id": 1132776230,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18654",
            "node_id": "IC_kwDOAPphoM5DhMsm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1132776230/reactions"
            },
            "updated_at": "2022-05-20T11:17:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1132776230",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "```lua\r\n    api.nvim_create_autocmd({'LspDetach'}, {\r\n      group = 'LspDocumentHighlight',\r\n      buffer = bufnr,\r\n      callback = function (args)\r\n        -- vim.notify('Detached')\r\n        local supported = false\r\n        vim.lsp.for_each_buffer_client(args.buf, function (client, client_id)\r\n          if client.supports_method('textDocument/documentHighlight') then\r\n            -- vim.notify(client.name .. ' supports method')\r\n            method_supported = true\r\n          end\r\n        end)\r\n        if not supported then\r\n          api.nvim_clear_autocmds {\r\n            group = 'LspDocumentHighlight',\r\n            buffer = args.buf,\r\n          }\r\n        end\r\n      end,\r\n    })\r\n```\r\nIt's possible to use the part of this logic on the user side. This proposition is only for user convenience. \r\n\r\nbtw. this example is only draft - at the moment the callback is not executed for me (on `:LspStop`) :grin: (#18677)",
            "created_at": "2022-05-20T11:55:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/18654#issuecomment-1132814204",
            "id": 1132814204,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18654",
            "node_id": "IC_kwDOAPphoM5DhV98",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1132814204/reactions"
            },
            "updated_at": "2022-05-21T14:20:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1132814204",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The example with `LspDetach` is not a good one for this issue. `LspDetach` was intended to be executed just **before** detaching (in that moment highlighting still works). Such method would be good just after detaching client. \r\n\r\nThis example requires to exclude the client from \"loop\"\r\n```lua\r\n          if (client_id ~= args.client_id) and client.supports_method('textDocument/documentHighlight') then\r\n```",
            "created_at": "2022-05-24T17:41:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/18654#issuecomment-1136252642",
            "id": 1136252642,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18654",
            "node_id": "IC_kwDOAPphoM5Dudbi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1136252642/reactions"
            },
            "updated_at": "2022-05-24T17:46:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1136252642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Closing this as this kinda has a solution/workaround - the `client.supports_method()`\r\nIn terms of convenience - we may need to do something that also considers dynamic capabilities. There's https://github.com/neovim/neovim/issues/24229 to track that.\r\n",
            "created_at": "2023-12-09T09:42:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/18654#issuecomment-1848350471",
            "id": 1848350471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18654",
            "node_id": "IC_kwDOAPphoM5uK5cH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848350471/reactions"
            },
            "updated_at": "2023-12-09T09:42:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848350471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> has a solution/workaround - the `client.supports_method()`\r\n\r\nWe haven't documented that yet, is it still WIP?",
            "created_at": "2023-12-11T15:04:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/18654#issuecomment-1850260847",
            "id": 1850260847,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18654",
            "node_id": "IC_kwDOAPphoM5uSL1v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850260847/reactions"
            },
            "updated_at": "2023-12-11T15:04:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850260847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's in `news.txt`... I think the doc generator just doesn't pick up the \"inlined\" function definition, and the method has to be added manually to `:h vim.lsp.client`.",
            "created_at": "2023-12-11T15:06:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/18654#issuecomment-1850264434",
            "id": 1850264434,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18654",
            "node_id": "IC_kwDOAPphoM5uSMty",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850264434/reactions"
            },
            "updated_at": "2023-12-11T15:08:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850264434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/18654/comments",
    "created_at": "2022-05-20T11:01:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/18654/events",
    "html_url": "https://github.com/neovim/neovim/issues/18654",
    "id": 1242985120,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/18654/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5KFnKg",
    "number": 18654,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/18654/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/18654/timeline",
    "title": "feat(lsp): expose logic to query for support LSP method for any buffer client",
    "updated_at": "2023-12-11T15:08:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/18654",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia"
    }
}