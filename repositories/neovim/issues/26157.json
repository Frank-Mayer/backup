{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nI'm trying to implement autosave folds on buffer write or buffer leave\r\n\r\n```lua\r\n...\r\nM.autocmd_group = function(name)\r\n\treturn vim.api.nvim_create_augroup(\"user_\" .. name, { clear = true })\r\nend\r\n\r\n...\r\n\r\nvim.api.nvim_create_autocmd({ \"BufWritePre\" }, {\r\n\tdesc = \"Save folds\",\r\n        group = utils.autocmd_group(\"save_view\"),\r\n        pattern = \"*\",\r\n\tcallback = function()\r\n\t\tvim.cmd(\"mkview 1\")\r\n\tend,\r\n})\r\n\r\nvim.api.nvim_create_autocmd({ \"BufWinEnter\" }, {\r\n        desc = \"Restore folds\",\r\n        group = utils.autocmd_group(\"save_view\"),\r\n\tpattern = \"?*\",\r\n\tcallback = function()\r\n\t\tvim.cmd(\"silent! loadview 1\")\r\n\tend,\r\n})\r\n```\r\n\r\nBut nothing happens - view file is not created. But if I manually execute cmd `:mkview 1` file successfully created in path `$HOME/.local/state/nvim/view/<long name>.1.vim`\r\nAt first I thought that I didn't set the event correctly (initially it was `BufWinLeave`) or autocmd itself just doesn't work at all. I check this by changing the command to `!touch /tmp/testfile`.\r\nAnd when writing the buffer, the file is created. So the problem is not in this case. \r\nThere are no error messages.\r\nI read through the documentation and found that I was missing `$XDG_STATE_HOME` in the environment variables (I'm on macOS), I decided to set it via an environment variable.\r\nWhile before `nvim --clean --headless --cmd 'echo $XDG_STATE_HOME|q'` didn't output anything, now it produces the path `$HOME/.local/state`.\r\nBut that doesn't work either and I don't think that's the problem. \r\nI also try to set custom `vim.opt.viewdir`, but didn't get any results either.\r\n\r\nIf I save view manually, the second autocmd with `loadview` works.\r\n\r\n### Steps to reproduce\r\n\r\nfold some blocks,\r\nwrite buffer\r\n\r\n### Expected behavior\r\n\r\n`autocmd` with `mkview` command write `.vim` restore view file in filesystem.\r\n\r\n### Neovim version (nvim -v)\r\n\r\nNVIM v0.9.4\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\ndid't test in vimL implementation\r\n\r\n### Operating system/version\r\n\r\nmacOS 14.1.1\r\n\r\n### Terminal name/version\r\n\r\nkitty v0.31.0\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbrew",
    "closed_at": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26157/comments",
    "created_at": "2023-11-22T21:16:42Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26157/events",
    "html_url": "https://github.com/neovim/neovim/issues/26157",
    "id": 2007127562,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26157/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM53olYK",
    "number": 26157,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26157/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26157/timeline",
    "title": "mkview not working with autocmd",
    "updated_at": "2023-11-22T21:18:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26157",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/759980?v=4",
        "events_url": "https://api.github.com/users/karmicdude/events{/privacy}",
        "followers_url": "https://api.github.com/users/karmicdude/followers",
        "following_url": "https://api.github.com/users/karmicdude/following{/other_user}",
        "gists_url": "https://api.github.com/users/karmicdude/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/karmicdude",
        "id": 759980,
        "login": "karmicdude",
        "node_id": "MDQ6VXNlcjc1OTk4MA==",
        "organizations_url": "https://api.github.com/users/karmicdude/orgs",
        "received_events_url": "https://api.github.com/users/karmicdude/received_events",
        "repos_url": "https://api.github.com/users/karmicdude/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/karmicdude/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/karmicdude/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/karmicdude"
    }
}