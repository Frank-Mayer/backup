{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nThis issue is mainly derived from [this](https://github.com/neovim/neovim/issues/24252#issuecomment-2087859106) conversation.\r\n\r\nNeovim 0.10 will introduce new default mappings `crr` and `crn` which are interfering with the default `c` operator. As far as I remember, this is the first mapping that creates a different behaviour you can actually notice in default neovim.\r\n\r\nFor example, in neovim 0.9.5, when one presses `c`, neovim immediately enters operator-pending mode, changing a cursor shape from block to underline. This is default. The same will happen with every other operator, like `y`, `d` etc.\r\n\r\nHowever, in neovim 0.10, if you press `c`, you'll now have to wait for `vim.opt.timeoutlen` ms for the mode to be changed. This behaviour will only happen with `c` operator (for now), but may happen with others as well, if new interfering mappings are introduced.\r\n\r\n### Why I believe this is a concern:\r\n\r\nWhen I was a beginner in neovim, I really paid attention to the editor's feedback when doing anything. For example: when I enter insert mode - I see \"INSERT\" at the bottom of the editor. When I try to delete/yank/change a line and press the corresponding key I see that my cursor shape changes from block to underline. And there're many other examples as well.\r\n\r\nNow this won't happen for the default `c` operator.\r\n\r\nI'm not saying it is not okay to have interfering mappings, of course it is. When one installs a plugin with defined mappings, they acknowledge that it can interfere with some of the default ones and that's totally fine. But in my opinion having this a default is a bit inconsistent, especially considering different behaviours for default operators.\r\n\r\n### Plugins\r\n\r\nPlugins like `reactive.nvim`, `modes.nvim`, `lualine` utilize `ModeChanged` event to then extract a mode and apply some highlights depending on it. Now, if a user didn't have any interfering mappings or removed them on purpose to have instant experience with those plugins, they will face this \"issue\" again, but coming from the editor itself. I assume there're also other plugins that could somehow feel this change.\r\n\r\n### Expected behavior\r\n\r\nI would expect switching to operator pending mode instantly, when one of corresponding keys is pressed, but to be honest I don't really know how that's possible and if at all.\r\n\r\n@justinmk noted that he has some ideas regarding this matter. It would be really interesting to see what he means, because I can't really imagine how this can be implemented without any regressions.",
    "closed_at": "2024-05-06T13:15:39Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I do find `crr` and `crn` odd choices for LSP mappings given how important the `c` operator is.\n\n@gpanders should we reconsider this?",
            "created_at": "2024-05-04T11:08:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094122651",
            "id": 2094122651,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM580cab",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094122651/reactions"
            },
            "updated_at": "2024-05-04T11:08:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094122651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I do find `crr` and `crn` odd choices for LSP mappings given how important the `c` operator is.\r\n> \r\n> @gpanders should we reconsider this?\r\n\r\nThese default mappings do not interfere with any `c` behavior though. The issue here is only that it interferes with the visual indication that the user is in operator pending mode in the *specific* (and unusual) case that the user presses only `c` and no other keys. I am not yet convinced that that is a problem that many users care about, or that outweighs the benefit of having default mappings for useful functionality. Most of the time when using `c` you will quickly enter a motion like `cw` or `cb`, etc.\r\n\r\nIf we need to revert these defaults then I am not optimistic that we will be able to find *any* default mappings that are satisfactory, and that is imo a worse outcome. People can always delete the mappings if they don’t want them. ",
            "created_at": "2024-05-04T12:26:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094146172",
            "id": 2094146172,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM580iJ8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094146172/reactions"
            },
            "updated_at": "2024-05-04T12:26:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094146172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I interpreted the issue more being this interfering with the ModeChanged autocmd which I think is a pretty big problem.\n\n> If we need to revert these defaults then I am not optimistic that we will be able to find any default mappings that are satisfactory\n\nIs `c` really the only good candidate for these mappings? To me it does seem problematic given how prominent `c` is used as an operator.\n\nI do think this change was made way too late in the cycle (like other changes), and that it probably needed more thought and time to bake.\n\n> People can always delete the mappings if they don’t want them.\n\nSorry but I don't think this is a great response, especially since this is interfering with other built-in functionality. Plugins that depend on `ModeChanged` to detect when `c` is activated is perfectly valid and probably one of the main applications for `ModeChanged`.",
            "created_at": "2024-05-04T13:06:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094162203",
            "id": 2094162203,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM580mEb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094162203/reactions"
            },
            "updated_at": "2024-05-05T14:21:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094162203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I interpreted the issue more being this interfering with the ModeChanged autocmd which I think is a pretty big problem.\r\n\r\nThe default mappings to do not interfere with the ModeChanged autocmd. For instance, pressing `cw` fires the ModeChanged event twice with patterns `n:no` and `no:i`, just as it does without any default mappings.\r\n\r\nIt sounds like the only \"problem\" the default mappings introduce is that pressing `c` _alone_ (with no motion) means I have to wait a few extra milliseconds for the first ModeChanged event. But what actual, real world issues does that present? Are there any, or is this hypothetical?\r\n\r\n> Is `c` really the only good candidate for these mappings? To me it does seem problematic given how prominent `c` is used as an operator.\r\n\r\nI don't know, perhaps not. I am not married to the specific mappings, but I do feel strongly about providing some defaults.\r\n\r\n> I do think this change was made way too late in the cycle (like other changes), and that it probably needed more thought and time to bake.\r\n\r\nI am not totally opposed to this, although again I am still not convinced that this breaks any actual work flows. It all sounds hypothetical and abstract at the moment. \r\n\r\n> > People can always delete the mappings if they don’t want them.\r\n> \r\n> Sorry but I don't think this is a great response, especially since this is interfering with other built-in functionality. Plugins that depend on `ModeChanged` to detect when `c` is activated is perfectly valid and probably one of the main applications for `ModeChanged`.\r\n\r\nYou're right, I apologize for the glibness, it was not a good response. But in response to the second part of your sentence, I'll repeat that this does not impact the `ModeChanged` event.\r\n",
            "created_at": "2024-05-04T13:19:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094185207",
            "id": 2094185207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM580rr3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094185207/reactions"
            },
            "updated_at": "2024-05-04T13:19:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094185207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It sounds like the only \"problem\" the default mappings introduce is that pressing c alone (with no motion) means I have to wait a few extra milliseconds for the first ModeChanged event. But what actual, real world issues does that present? Are there any, or is this hypothetical?\n\nThe OP mentioned a handful of plugins this directly affects. Predominantly `reactive.nvim` that provides visual feedback/highlights for operators. I think that's a pretty strong use case, especially given that the default value for `timeoutlen` is 1000ms. Some people are quite sensitive when their entire startup time exceeds 1/10 of that.\n\n> I don't know, perhaps not. I am not married to the specific mappings, but I do feel strongly about providing some defaults.\n\nThe mappings defined by https://lsp-zero.netlify.app/v3.x/language-server-configuration.html seem quite good to me. They use `F2` and `F4` (which I've seen others suggest in reddit) for rename and code action, which is rather unorthodox for Neovim but are the same mappings used by Windows file explorer.",
            "created_at": "2024-05-04T13:31:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094202457",
            "id": 2094202457,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM580v5Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094202457/reactions"
            },
            "updated_at": "2024-05-04T13:32:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094202457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The OP mentioned a handful of plugins this directly affects. Predominantly `reactive.nvim` that provides visual feedback/highlights for operators. I think that's a pretty strong use case, especially given that the default value for `timeoutlen` is 1000ms. Some people are quite sensitive when their entire startup time exceeds 1/10 of that.\r\n\r\nI'm sorry, but I still am waiting to hear how this affects any use case other than pressing `c` and sitting and waiting. Frankly, I don't think that is a use case that is common enough or important enough to warrant deleting defaults which are useful for a much larger portion of users.\r\n\r\nI watched some of the demo videos in the [reactive.nvim README](https://github.com/rasulomaroff/reactive.nvim) (@rasulomaroff very cool plugin by the way, nice work!). The operator pending highlights are still applied when the user presses e.g. `ci` or `ca`.\r\n\r\nreactive.nvim could change the default `'timeoutlen'` to a smaller value. Or Nvim could consider changing the default to a smaller value. Or we can wait to see what idea @justinmk  [has to address this](https://github.com/neovim/neovim/issues/24252#issuecomment-2089155960):\r\n\r\n>It's mostly a limitation of the current mappings behavior; we can have a default cr mapping while still emitting \"op pending\" after c. I have some ideas, but will save them for the separate issue.\r\n\r\nIf we can keep the behavior of `c` going immediately to operator pending mode while still allowing mappings under the `c` \"namespace\", that seems like the best path forward. The alternative is to impose a blanket prohibition on any default mappings that start with `c` which is needlessly restrictive.\r\n\r\n> The mappings defined by https://lsp-zero.netlify.app/v3.x/language-server-configuration.html seem quite good to me. They use `F2` and `F4` (which I've seen others suggest in reddit) for rename and code action, which is rather unorthodox for Neovim but are the same mappings used by Windows file explorer.\r\n\r\nI think F keys are a [non-starter](https://github.com/neovim/neovim/issues/24252#issuecomment-1621464448) with Justin, and frankly I agree. Plenty of keyboards don't have function keys at all, and on some that do (like a MacBook keyboard) they are inconvenient to type.",
            "created_at": "2024-05-04T13:51:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094208630",
            "id": 2094208630,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM580xZ2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094208630/reactions"
            },
            "updated_at": "2024-05-04T13:51:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094208630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "@gpanders Although I don't necessarily like `crr` and `crn` mappings for what they're doing, because for me they're kind of not intuitive enough (I have `<leader>ga` and `<leader>rn` for those actions), I'm also not in the \"revert and avoid\" team, because if neovim continues to avoid those \"collisions\", it can end up choosing not sane defaults for those actions.\r\n\r\n> These default mappings do not interfere with any `c` behavior though. The issue here is only that it interferes with the visual indication that the user is in operator pending mode in the _specific_ (and unusual) case that the user presses only `c` and no other keys.\r\n\r\nI agree with you on the matter that this is a visual issue, but I also think it depends how you interpret it. For example I could say that for me, when I press `c` I expect `ModeChanged` event to be triggered right away, because I intend to `change` some text-object (maybe I have some callbacks set up or whatever) and that won't happen anymore.\r\n\r\nAnother thing is even though operator-pending mode will be triggered when I press the next key, for example `i` for `ciw` or `a` for `caw` (if new `ci*`/`ca*` aren't introduced in the future), I'm a type of a user who expects the editor to react to that when I press the very first key :) This is the reason I love neovim and I'm sure I'm not alone, as @lewis6991 mentioned here:\r\n> Some people are quite sensitive when their entire startup time exceeds 1/10 of that.\r\n\r\n> People can always delete the mappings if they don’t want them.\r\n\r\nTrue, and this is what I and many other people will do in this case. But is it a good sign that a lot of people would prefer to remove the defaults because they somehow make the editor experience not good enough? I believe that defaults for sure need to be, but they shouldn't interfere your experience, in other words, you shouldn't notice them if you don't use them (my opinion). For now it's only 2 lines of `vim.keymap.del`, but in the future, when new mappings are introduced, it can become 5-10-n lines just to achieve/sustain the same behaviour you had before. I don't think this is a good indicator.\r\n\r\n> I watched some of the demo videos in the [reactive.nvim README](https://github.com/rasulomaroff/reactive.nvim) (@rasulomaroff very cool plugin by the way, nice work!). The operator pending highlights are still applied when the user presses e.g. `ci` or `ca`.\r\n> \r\n> reactive.nvim could change the default `'timeoutlen'` to a smaller value. Or Nvim could consider changing the default to a smaller value. Or we can wait to see what idea @justinmk [has to address this](https://github.com/neovim/neovim/issues/24252#issuecomment-2089155960):\r\n\r\nHonestly I don't believe that changing `'timeoutlen'` will solve anything in this case, it will just make the experience slightly not annoying :D\r\n\r\nThank you for the kind words, I really appreciate it!\r\n\r\nI had some devs coming and saying that `reactive` is not working when using some operators and it always ended up having mappings from `nvim-surround` like `ds`, `ys`, `cs` or other plugins. I'm using `<leader>s*` for all surrounding mappings, but would switch back to its defaults if it didn't change this visual feedback. So, if @justinmk has a solution that would somehow fix this, it would be a massive win-win for everybody.",
            "created_at": "2024-05-05T00:51:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094528890",
            "id": 2094528890,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM581_l6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094528890/reactions"
            },
            "updated_at": "2024-05-05T14:24:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094528890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/80093436?v=4",
                "events_url": "https://api.github.com/users/rasulomaroff/events{/privacy}",
                "followers_url": "https://api.github.com/users/rasulomaroff/followers",
                "following_url": "https://api.github.com/users/rasulomaroff/following{/other_user}",
                "gists_url": "https://api.github.com/users/rasulomaroff/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rasulomaroff",
                "id": 80093436,
                "login": "rasulomaroff",
                "node_id": "MDQ6VXNlcjgwMDkzNDM2",
                "organizations_url": "https://api.github.com/users/rasulomaroff/orgs",
                "received_events_url": "https://api.github.com/users/rasulomaroff/received_events",
                "repos_url": "https://api.github.com/users/rasulomaroff/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rasulomaroff/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rasulomaroff/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rasulomaroff"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If we can keep the behavior of `c` going immediately to operator pending mode while still allowing mappings under the `c` \"namespace\", that seems like the best path forward. \r\n\r\nYes, exactly. Solve that problem, rather than imposing this weird restriction on the entire unmapped space below c/y/etc.\r\n\r\nOne obvious, short-term, workaround is to implement `cr` as a `c` mapping which immediately fires `ModeChanged`, then waits with `getchar()` and handles \"r\" specially. Disadvantage is that `:map cr` won't show the expected mappings (but `:map c` would show something).\r\n\r\nAnother idea is to change the internal \"keymap pending\" logic to be smarter.\r\n\r\n> They use `F2` and `F4` (which I've seen others suggest in reddit) for rename and code action, which is rather unorthodox for Neovim but are the same mappings used by Windows file explorer.\r\n\r\nThis makes no sense. Hand-wringing over a `cr` mapping for a mode-change detail (historical purity), but no problem with a bunch of function-key mappings (historical impurity)?\r\n\r\nAnd all of this because people don't want to unmap default mappings?\r\n\r\n> I do find `crr` and `crn` odd choices for LSP mappings given how important the `c` operator is.\r\n\r\nThe mapping isn't interfering with \"c\" at all. \"c\" was chosen precisely because these mappings are related to *change*.\r\n\r\nThe mode-change thing can be fixed.",
            "created_at": "2024-05-05T14:37:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094834662",
            "id": 2094834662,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM583KPm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094834662/reactions"
            },
            "updated_at": "2024-05-05T14:37:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094834662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The mapping isn't interfering with \"c\" at all.\r\n\r\nThis is not 100% accurate and something that should be taken into account for possible future new mappings that start the same way as operator.\r\n\r\nHaving such Normal mode mapping introduces collisions for possible operator targets. In particular, at least three `r`, `rr`, and `rn` as motions/textobjects will work only if there is a 'timeoutlen' delay after single `c`. Those are implemented in Operator-pending mode so having it collide with Normal mode mapping can be confusing, thus making those choices a lot less appealing.\r\n\r\nSuggesting users to delete the mapping is, of course, an option (another story is how good it is), but at least having these points in mind seems necessary.",
            "created_at": "2024-05-05T20:00:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2094930312",
            "id": 2094930312,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM583hmI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094930312/reactions"
            },
            "updated_at": "2024-05-06T08:12:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2094930312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "NONE",
            "body": "> But what actual, real world issues does that present? Are there any, or is this hypothetical?\r\n\r\nAn example would be highlighting a selection of characters in visual mode, typing `c` and then having to wait `timeoutlen` for visual feedback. That is new behaviour for quite a common use case in my opinion.\r\n\r\nI've added \r\n```\r\nvim.keymap.del('v', 'crr')\r\n```\r\nin my config to workaround that as mentioned in the docs. But from that experience, I would recommend backing out that one mapping _in visual mode_.",
            "created_at": "2024-05-06T08:01:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2095403961",
            "id": 2095403961,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM585VO5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095403961/reactions"
            },
            "updated_at": "2024-05-06T08:29:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095403961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/566719?v=4",
                "events_url": "https://api.github.com/users/casr/events{/privacy}",
                "followers_url": "https://api.github.com/users/casr/followers",
                "following_url": "https://api.github.com/users/casr/following{/other_user}",
                "gists_url": "https://api.github.com/users/casr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/casr",
                "id": 566719,
                "login": "casr",
                "node_id": "MDQ6VXNlcjU2NjcxOQ==",
                "organizations_url": "https://api.github.com/users/casr/orgs",
                "received_events_url": "https://api.github.com/users/casr/received_events",
                "repos_url": "https://api.github.com/users/casr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/casr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/casr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/casr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> in my config to workaround that as mentioned in the docs. But from that experience, I would recommend backing out that one mapping _in visual mode_.\r\n\r\n[It is not set in Visual mode](https://github.com/neovim/neovim/blob/b024643ca7571cffb3dcc79c21dbccfe14aa3a6f/runtime/lua/vim/_defaults.lua#L166-L168) on latest `master` already after #28537.",
            "created_at": "2024-05-06T08:08:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2095413707",
            "id": 2095413707,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM585XnL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095413707/reactions"
            },
            "updated_at": "2024-05-06T08:09:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095413707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Having such Normal mode mapping introduces collisions for possible operator targets. In particular, at least three `r`, `rr`, and `rn` as motions/textobjects will work only if there is a 'timeoutlen' delay after single `c`.\r\n\r\nAny mapping removes potential alternative uses of that mapping. We are choosing to to decide that \"r\" is not a new text-object or motion, instead it's a \"refactor\" namespace. If we have concrete plans to introduce \"r\" as a new motion or text-object, that changes the story. Do we? Or is there a popular, existing motion/text-object that claims \"r\"?",
            "created_at": "2024-05-06T10:05:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2095620471",
            "id": 2095620471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM586KF3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095620471/reactions"
            },
            "updated_at": "2024-05-06T10:07:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095620471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Any mapping removes potential alternative uses of that mapping.\r\n\r\nThis is of course true for any mapping, but when Normal mode mapping start the same as some *operator* (`c`, `d`, `y`), it is slightly different. For example, `crr` *Normal* mode mapping removes possibility for ~all~ `r` and `rr` *Operator-pending* mode mappings that start with `r`. How bad this consequence is is another story, but that should be taken into account.\r\n\r\n> We are choosing to to decide that \"r\" is not a new text-object or motion, instead it's a \"refactor\" namespace.\r\n\r\nAlternative suggestion might be to claim a bigger namespace for LSP itself. Which might be \"gl\", which is unclaimed in core but has some usages as \"align\" operator.\r\n\r\n> If we have concrete plans to introduce \"r\" as a new motion or text-object, that changes the story. Do we? Or is there a popular, existing motion/text-object that claims \"r\"?\r\n\r\nNot sure how \"popular\" can be classified, but ['chrisgrieser/nvim-various-textobjs'](https://github.com/chrisgrieser/nvim-various-textobjs?tab=readme-ov-file#list-of-text-objects) claims \"r\" for \"rest of the paragraph\".\r\n\r\n",
            "created_at": "2024-05-06T10:16:59Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2095641369",
            "id": 2095641369,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM586PMZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095641369/reactions"
            },
            "updated_at": "2024-05-06T10:44:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095641369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We reverted the default mappings in #28649. Until a solution is found to fundamentally solve the issues mentioned in this issue (in particular, avoiding conflicts with text objects/motions) we will avoid `c` prefixed keys for defaults.",
            "created_at": "2024-05-06T13:15:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/28634#issuecomment-2095996063",
            "id": 2095996063,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28634",
            "node_id": "IC_kwDOAPphoM587lyf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 3,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095996063/reactions"
            },
            "updated_at": "2024-05-06T13:15:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2095996063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments": 14,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28634/comments",
    "created_at": "2024-05-04T03:28:43Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28634/events",
    "html_url": "https://github.com/neovim/neovim/issues/28634",
    "id": 2278703654,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "issues or PRs involving changing the defaults",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "key bindings",
            "id": 3304938718,
            "name": "mappings",
            "node_id": "MDU6TGFiZWwzMzA0OTM4NzE4",
            "url": "https://api.github.com/repos/neovim/neovim/labels/mappings"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28634/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6H0kIm",
    "number": 28634,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 9,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 9,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28634/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28634/timeline",
    "title": "\"crr\" default mapping does not emit ModeChanged after \"c\"",
    "updated_at": "2024-05-06T13:17:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28634",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/80093436?v=4",
        "events_url": "https://api.github.com/users/rasulomaroff/events{/privacy}",
        "followers_url": "https://api.github.com/users/rasulomaroff/followers",
        "following_url": "https://api.github.com/users/rasulomaroff/following{/other_user}",
        "gists_url": "https://api.github.com/users/rasulomaroff/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rasulomaroff",
        "id": 80093436,
        "login": "rasulomaroff",
        "node_id": "MDQ6VXNlcjgwMDkzNDM2",
        "organizations_url": "https://api.github.com/users/rasulomaroff/orgs",
        "received_events_url": "https://api.github.com/users/rasulomaroff/received_events",
        "repos_url": "https://api.github.com/users/rasulomaroff/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rasulomaroff/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rasulomaroff/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rasulomaroff"
    }
}