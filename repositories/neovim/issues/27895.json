{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nBefore https://github.com/neovim/neovim/pull/27132, queries where a more specific capture appeared earlier than a less specific capture later on used to have a higher precedence, but now that is no longer the case, which is a pretty breaking change really, since I've taken into account specificity of a capture plenty of times when writing queries (especially highlights) for nvim-treesitter. Highlights in certain circumstances will appear off now as a result. I understand this wasn't really documented/obvious, but it was a convenient feature to use.\n\n### Steps to reproduce\n\nconfig:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd(\"FileType\", {\r\n\tpattern = { \"c\" },\r\n\tcallback = function(args)\r\n\t\tvim.treesitter.start()\r\n\tend,\r\n})\r\n\r\nvim.cmd(\"highlight! @variable.parameter gui=bold guifg=#ff0000 guibg=NONE\")\r\nvim.cmd(\"highlight! @operator gui=bold guifg=#00ff00 guibg=NONE\")\r\n```\r\n\r\n```sh\r\nnvim --clean -u minimal.lua test.c\r\n```\r\n\r\nwrite `void foo(int *bar)`\r\n\r\nNotice that `*` is highlighted the same as `a` because the `@variable.parameter` capture captures the whole `pointer_declarator` node, but the earlier `@operator` capture for `*` ideally would have a higher priority than this\n\n### Expected behavior\n\nI'd expect `*` to be highlighted with `@operator`, not `@variable.parameter`, a possible solution could be to account for the size of the node when applying captures.\r\n\r\nIt'd also be fine to just not consider specificity anymore, that's totally fine but some queries need to be reworked then (e.g. some of C's highlights) and this should be documented to avoid further confusion\n\n### Neovim version (nvim -v)\n\nv0.10.0-dev-2619+gc52dfb6e8\n\n### Vim (not Nvim) behaves the same?\n\nno (no treesitter)\n\n### Operating system/version\n\nArch Linux 6.7.9-zen1-1\n\n### Terminal name/version\n\nkitty 0.32.2\n\n### $TERM environment variable\n\nxterm-kitty\n\n### Installation\n\nbuilt from source",
    "closed_at": "2024-03-17T20:37:16Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This is most definitely because we've switched from iter_captures to iter_matches.\n\n\nI don't think this is intended. We can add the repro steps as a testcase to prevent this happening again, but I'm surprised our current tests don't capture this in some way.",
            "created_at": "2024-03-17T09:50:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/27895#issuecomment-2002385786",
            "id": 2002385786,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27895",
            "node_id": "IC_kwDOAPphoM53Wft6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002385786/reactions"
            },
            "updated_at": "2024-03-17T09:52:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002385786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "- \"Mom, can we get more treesitter tests?\"\r\n- \"We have treesitter tests at home\".\r\n\r\n[treesitter tests at home](https://github.com/nvim-treesitter/nvim-treesitter)",
            "created_at": "2024-03-17T10:23:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/27895#issuecomment-2002396465",
            "id": 2002396465,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27895",
            "node_id": "IC_kwDOAPphoM53WiUx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 2,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002396465/reactions"
            },
            "updated_at": "2024-03-17T10:23:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002396465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> - \"Mom, can we get more treesitter tests?\"\n> - \"We have treesitter tests at home\".\n> \n> [treesitter tests at home](https://github.com/nvim-treesitter/nvim-treesitter)\n\nIn that case, would it be worth adding nvim-treesitters CI to Neovim's CI? It would certainly boost coverage.",
            "created_at": "2024-03-17T15:56:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/27895#issuecomment-2002517908",
            "id": 2002517908,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27895",
            "node_id": "IC_kwDOAPphoM53W_-U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002517908/reactions"
            },
            "updated_at": "2024-03-17T15:56:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002517908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "How did this even work before with `iter_captures`? Does `ts_query_cursor_next_capture` order iterated nodes based on \"specificity\"? As far as I can tell, we are not doing anything on the Neovim side to do this ordering. The old highlighter that use `iter_captures` just applied extmarks in the exact order returned from the iterator.",
            "created_at": "2024-03-17T16:00:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/27895#issuecomment-2002522085",
            "id": 2002522085,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27895",
            "node_id": "IC_kwDOAPphoM53XA_l",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002522085/reactions"
            },
            "updated_at": "2024-03-17T16:00:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002522085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">It'd also be fine to just not consider specificity anymore, that's totally fine but some queries need to be reworked then (e.g. some of C's highlights) and this should be documented to avoid further confusion\r\n\r\nI do think we should do this too and make the order defined in the query the only thing that influences priority. Having two separate metrics that influence priority is confusing. But in the interest of supporting BWC we should still fix this in the meantime.",
            "created_at": "2024-03-17T16:01:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/27895#issuecomment-2002522840",
            "id": 2002522840,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27895",
            "node_id": "IC_kwDOAPphoM53XBLY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002522840/reactions"
            },
            "updated_at": "2024-03-17T16:01:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002522840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In that case, would it be worth adding nvim-treesitters CI to Neovim's CI? It would certainly boost coverage.\r\n\r\nActually, I'd claim we should do the converse: add a treesitter highlight test suite (mirroring `tree-sitter test`, but using our highlighter instead of the Rust crate -- either tree-sitter's or theHamsta's) exercising the bundled queries and expose it in a way that nvim-treesitter can ~~steal~~ leverage.",
            "created_at": "2024-03-17T16:23:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/27895#issuecomment-2002529090",
            "id": 2002529090,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27895",
            "node_id": "IC_kwDOAPphoM53XCtC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002529090/reactions"
            },
            "updated_at": "2024-03-17T16:23:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002529090",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> How did this even work before with iter_captures\n\niter_captures return the results based on the order of a node in the tree, so the outer appears before the inner and so on ",
            "created_at": "2024-03-17T17:23:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/27895#issuecomment-2002545855",
            "id": 2002545855,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27895",
            "node_id": "IC_kwDOAPphoM53XGy_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002545855/reactions"
            },
            "updated_at": "2024-03-17T17:23:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002545855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The repro in the OP actually caused the highlighter to error when I added it as a testcase. Haven't got time to debug, but using `iter_captures` as before works fine.",
            "created_at": "2024-03-17T18:38:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/27895#issuecomment-2002573317",
            "id": 2002573317,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27895",
            "node_id": "IC_kwDOAPphoM53XNgF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002573317/reactions"
            },
            "updated_at": "2024-03-17T18:39:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2002573317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments": 8,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27895/comments",
    "created_at": "2024-03-17T07:01:18Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27895/events",
    "html_url": "https://github.com/neovim/neovim/issues/27895",
    "id": 2190513304,
    "labels": [
        {
            "color": "f9d0c4",
            "default": false,
            "description": "wrong behavior that was introduced in a previous commit (please bisect)",
            "id": 619474658,
            "name": "bug-regression",
            "node_id": "MDU6TGFiZWw2MTk0NzQ2NTg=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-regression"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue has been tracked to a specific commit",
            "id": 1481421490,
            "name": "has:bisected",
            "node_id": "MDU6TGFiZWwxNDgxNDIxNDkw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:bisected"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27895/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 317,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-05-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 115,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-03-19T00:59:38Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "I_kwDOAPphoM6CkJSY",
    "number": 27895,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27895/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27895/timeline",
    "title": "Tree-sitter highlighting no longer takes query range/specificity into account",
    "updated_at": "2024-03-17T20:37:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27895",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
        "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
        "followers_url": "https://api.github.com/users/amaanq/followers",
        "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
        "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/amaanq",
        "id": 29718261,
        "login": "amaanq",
        "node_id": "MDQ6VXNlcjI5NzE4MjYx",
        "organizations_url": "https://api.github.com/users/amaanq/orgs",
        "received_events_url": "https://api.github.com/users/amaanq/received_events",
        "repos_url": "https://api.github.com/users/amaanq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/amaanq"
    }
}