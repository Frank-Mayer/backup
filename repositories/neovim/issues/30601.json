{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nNvim crashes probably when trying to show documentation for `nvim_cmd`:\r\n\r\n\r\n![image](https://github.com/user-attachments/assets/67af0104-564b-4edc-91ef-18edce14a476)\r\n\r\n```cpp\r\n#0  0x00005651437a8330 in ts_lexer_reset ()\r\n(gdb) bt\r\n#0  0x00005651437a8330 in ts_lexer_reset ()\r\n#1  0x000056514378b736 in ts_parser_parse ()\r\n#2  0x00005651435fb13d in parser_parse (L=0x7fa0ffd1c380) at .../src/nvim/lua/treesitter.c:475\r\n#3  0x00005651437d01a6 in lj_BC_FUNCC ()\r\n#4  0x00005651437bba5d in lua_pcall (L=L@entry=0x7fa0ffd1c380, nargs=nargs@entry=1, nresults=nresults@entry=1, errfunc=errfunc@entry=-3) at lj_api.c:1122\r\n#5  0x00005651435eb379 in nlua_pcall (lstate=0x7fa0ffd1c380, nargs=1, nresults=1) at .../src/nvim/lua/executor.c:174\r\n#6  0x00005651435f8198 in nlua_call_ref (ref=<optimized out>, name=<optimized out>, args=..., mode=kRetNilBool, arena=0x0, err=0x0) at .../src/nvim/lua/executor.c:1608\r\n#7  0x00005651434f404e in call_autocmd_callback (ac=ac@entry=0x5651472a0cc0, apc=apc@entry=0x7ffd8bbd5270) at .../src/nvim/autocmd.c:2057\r\n#8  0x00005651434f6263 in getnextac (c=<optimized out>, cookie=0x7ffd8bbd5270, indent=<optimized out>, do_concat=<optimized out>) at .../src/nvim/autocmd.c:2108\r\n#9  0x0000565143587372 in do_cmdline (cmdline=<optimized out>, fgetline=0x5651434f60cb <getnextac>, cookie=0x7ffd8bbd5270, flags=7) at .../src/nvim/ex_docmd.c:580\r\n#10 0x00005651434f4d59 in apply_autocmds_group (event=EVENT_COMPLETECHANGED, fname=0x565147585060 \"/home/arctgx/dev/arctgx/nvim/issues/current/2024-09-25-00.55.02-xdiff-linematch-error/init.lua\", fname_io=<optimized out>,\r\n    force=<optimized out>, group=group@entry=-3, buf=0x5651471295c0, eap=0x0, data=0x0) at .../src/nvim/autocmd.c:1842\r\n#11 0x00005651434f540d in apply_autocmds (event=<optimized out>, fname=<optimized out>, fname_io=<optimized out>, force=<optimized out>, buf=<optimized out>) at .../src/nvim/autocmd.c:1499\r\n#12 0x00005651435ce8d5 in trigger_complete_changed_event (cur=cur@entry=23) at .../src/nvim/insexpand.c:1145\r\n#13 0x00005651435ceed0 in ins_compl_show_pum () at .../src/nvim/insexpand.c:1377\r\n#14 0x00005651435d4435 in show_pum (prev_w_wrow=prev_w_wrow@entry=3, prev_w_leftcol=prev_w_leftcol@entry=0) at .../src/nvim/insexpand.c:4665\r\n#15 0x00005651435d4f76 in ins_complete (c=14, enable_pum=<optimized out>) at .../src/nvim/insexpand.c:4643\r\n#16 0x000056514352f506 in insert_do_complete (s=s@entry=0x7ffd8bbd5640) at .../src/nvim/edit.c:1228\r\n#17 0x0000565143536e6b in insert_handle_key (s=s@entry=0x7ffd8bbd5640) at .../src/nvim/edit.c:1146\r\n#18 0x00005651435373e5 in insert_execute (state=0x7ffd8bbd5640, key=<optimized out>) at .../src/nvim/edit.c:702\r\n#19 0x00005651436e1c71 in state_enter (s=0x7ffd8bbd5640) at .../src/nvim/state.c:100\r\n#20 0x000056514352ee8c in insert_enter (s=0x7ffd8bbd5640) at .../src/nvim/edit.c:344\r\n#21 0x000056514352f680 in edit (cmdchar=111, startln=<optimized out>, count=1) at .../src/nvim/edit.c:1305\r\n#22 0x00005651436461e9 in invoke_edit (cap=cap@entry=0x7ffd8bbd57e0, repl=repl@entry=0, cmd=111, startln=startln@entry=1) at .../src/nvim/normal.c:6255\r\n#23 0x0000565143646342 in n_opencmd (cap=cap@entry=0x7ffd8bbd57e0) at .../src/nvim/normal.c:5716\r\n#24 0x00005651436465c9 in nv_open (cap=0x7ffd8bbd57e0) at .../src/nvim/normal.c:6593\r\n#25 0x00005651436409b6 in normal_execute (state=0x7ffd8bbd5770, key=<optimized out>) at .../src/nvim/normal.c:1235\r\n#26 0x00005651436e1c71 in state_enter (s=0x7ffd8bbd5770) at .../src/nvim/state.c:100\r\n#27 0x000056514363db5d in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at .../src/nvim/normal.c:521\r\n#28 0x00005651435fe87c in main (argc=6, argv=<optimized out>) at .../src/nvim/main.c:660\r\n```\r\n```\r\nvim.treesitter:                       require(\"vim.treesitter.health\").check()\r\n\r\n- Nvim runtime ABI version: 14\r\n- OK Parser: c                    ABI: 14, path: .../lib/nvim/parser/c.so\r\n- OK Parser: lua                  ABI: 14, path: .../lib/nvim/parser/lua.so\r\n- OK Parser: markdown             ABI: 14, path: .../lib/nvim/parser/markdown.so\r\n- OK Parser: markdown_inline      ABI: 14, path: .../lib/nvim/parser/markdown_inline.so\r\n- OK Parser: query                ABI: 14, path: .../lib/nvim/parser/query.so\r\n- OK Parser: vim                  ABI: 14, path: .../lib/nvim/parser/vim.so\r\n- OK Parser: vimdoc               ABI: 14, path: .../lib/nvim/parser/vimdoc.so\r\n- Can load WASM parsers: false\r\n```\r\n\r\nPlease change the title to something more accurate.\n\n### Steps to reproduce\n\n`init.lua`:\r\n```lua\r\nvim.o.swapfile = false -- convenient after crash here\r\n\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = {'lua'},\r\n  group = vim.api.nvim_create_augroup('luals', {}),\r\n  callback = function ()\r\n    vim.lsp.start({\r\n      name = 'luals',\r\n      filetype = 'lua',\r\n      cmd = {'lua-language-server'},\r\n      root_dir = vim.uv.cwd(),\r\n      settings = {\r\n        Lua = {\r\n          runtime = {\r\n            path = {\r\n              '?.lua',\r\n              '?/init.lua',\r\n            },\r\n            version = 'LuaJIT',\r\n            pathStrict = true,\r\n          },\r\n          workspace = {\r\n            ignoreDir = {'lua'},\r\n            checkThirdParty = false,\r\n            library = {\r\n              vim.fs.joinpath(vim.env.VIMRUNTIME, 'lua'),\r\n              vim.fs.joinpath('${3rd}/luv/library', 'lua'),\r\n            },\r\n          },\r\n          diagnostics = {\r\n            globals = {'vim'},\r\n          },\r\n        },\r\n      },\r\n    })\r\n  end,\r\n})\r\n\r\nlocal completionAugroup = vim.api.nvim_create_augroup('arctgx.completion', {clear = true})\r\n\r\nlocal function showDocumentation(buf, clientId)\r\n  local info = vim.fn.complete_info({'selected'})\r\n  local completionItem = vim.tbl_get(vim.v.completed_item, 'user_data', 'nvim', 'lsp', 'completion_item')\r\n  if nil == completionItem then\r\n    return\r\n  end\r\n\r\n  local resolvedItem = vim.lsp.buf_request_sync(\r\n    buf,\r\n    vim.lsp.protocol.Methods.completionItem_resolve,\r\n    completionItem,\r\n    500\r\n  )\r\n\r\n  if nil == resolvedItem then\r\n    return\r\n  end\r\n\r\n  -- vim.print(resolvedItem[clientId])\r\n  local docs = vim.tbl_get(resolvedItem[clientId], 'result', 'documentation', 'value')\r\n  if nil == docs then\r\n    return\r\n  end\r\n\r\n  local winData = vim.api.nvim__complete_set(info['selected'], {info = docs})\r\n  if not winData.winid or not vim.api.nvim_win_is_valid(winData.winid) then\r\n    return\r\n  end\r\n\r\n  vim.api.nvim_win_set_config(winData.winid, {border = 'rounded'})\r\n\r\n  -- vim.lsp.util.convert_input_to_markdown_lines, documentation.kind <> markdown?\r\n  vim.treesitter.start(winData.bufnr, 'markdown')\r\n  vim.wo[winData.winid].conceallevel = 3\r\nend\r\n\r\nvim.api.nvim_create_autocmd('LspAttach', {\r\ngroup = vim.api.nvim_create_augroup('arctgx.completion', {clear = true}),\r\n  callback = function (args)\r\n    local clientId = args.data.client_id\r\n    vim.lsp.completion.enable(true, clientId, args.buf, {autotrigger = true})\r\n\r\n    vim.keymap.set({'i'}, '<C-Space>', function ()\r\n      vim.lsp.completion.trigger()\r\n    end, {buffer = args.buf})\r\n\r\n    local client = assert(vim.lsp.get_client_by_id(clientId))\r\n    if client.supports_method(vim.lsp.protocol.Methods.completionItem_resolve, {bufnr = args.buf}) then\r\n      vim.api.nvim_create_autocmd('CompleteChanged', {\r\n        group = completionAugroup,\r\n        buffer = args.buf,\r\n        callback = function ()\r\n          -- vim.print(args.data)\r\n          showDocumentation(args.buf, clientId)\r\n        end,\r\n      })\r\n    end\r\n  end\r\n})\r\n\r\nvim.go.completeopt = 'noinsert,menuone'\r\n```\r\n\r\n- `nvim --clean -u init.lua init.lua`\r\n- after starting lua-ls type `Ovim.api.`, wait for completion items and using `<C-n>` scroll down to `nvim_cmd`. For me Nvim crashes repeatedly there.\r\n\r\nI tried to open printed documentation with treesitter (markdown) but couldn't trigger the failure that way. \n\n### Expected behavior\n\nNo crash\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-867+g2c88cfcac\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nDebian Sid\n\n### Terminal name/version\n\nalacritty 0.14.0-dev (6585d604), tmux 3.5\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nfrom repo",
    "closed_at": "2025-01-05T13:52:52Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk",
        "user_view_type": "public"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Does this depend on the unreleased `nvim__complete_set` api? Can you try removing parts of the `showDocumentation` handler to narrow down which parts are essential to reproduce the issue. \r\n\r\nIs it failing in the `vim.treesitter.start` call?\r\n\r\nCan you try to capture the exact buffer contents and see if `vim.treesitter.start` on those contents is enough to reproduce the crash",
            "created_at": "2024-10-01T11:08:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/30601#issuecomment-2385489438",
            "id": 2385489438,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30601",
            "node_id": "IC_kwDOAPphoM6OL64e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385489438/reactions"
            },
            "updated_at": "2024-10-01T11:08:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385489438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tried \r\n````lua\r\n\r\nlocal docs = {\r\n  [[```lua\r\nfunction vim.api.nvim__get_lib_dir()\r\n-> string\r\n```]],\r\n  [[```lua\r\nfunction vim.api.nvim_buf_set_keymap(buffer: integer, mode: string, lhs: string, rhs: string, opts: vim.api.keyset.keymap)\r\n```\r\n\r\n---\r\n\r\n Sets a buffer-local `mapping` for the given mode.\r\n\r\n @see `nvim_set_keymap()`\r\n\r\n\r\n@*param* `buffer` — Buffer handle, or 0 for current buffer]],\r\n  [[```lua\r\nfunction vim.api.nvim_cmd(cmd: vim.api.keyset.cmd, opts: vim.api.keyset.cmd_opts)\r\n  -> string\r\n```\r\n\r\n---\r\n\r\n Executes an Ex command.\r\n\r\n Unlike `nvim_command()` this command takes a structured Dict instead of a\r\n St\r\nring. This allows for easier construction and manipulation of an Ex\r\n command. This also allows for things such as having spaces inside a\r\n command argument, expanding filenames in a command that otherwise doesn't\r\n expand filenames, etc. C\r\nommand arguments may also be Number, Boolean or\r\n String.\r\n\r\n The first argument may also be used instead of count for commands that\r\n support it in order to make their usage simpler with `vim.cmd()`. For\r\n example, instead of `vim.cmd.bdel\r\nete{ count = 2 }`, you may do\r\n `vim.cmd.bdelete(2)`.\r\n\r\n On execution error: fails with Vimscript error, updates v:errmsg.\r\n\r\n @see `nvim_exec2()`\r\n @see `nvim_command()`\r\n\r\n@*param* `cmd` — Command to execute. Must be a Dict that can cont\r\nain the same\r\n\r\n            values as the return value of `nvim_parse_cmd()` except \\\"addr\\\",\r\n            \\\"nargs\\\" and \\\"nextcmd\\\" which are ignored if provided. All values\r\n            except for \\\"cmd\\\" are optional.\r\n\r\n@*param* `opts`\r\n— Optional parameters.\r\n\r\n             • output: (boolean, default false) Whether to return command\r\n               output.]]\r\n}\r\n\r\nlocal function showDocumentation()\r\n  local info = vim.fn.complete_info({'selected'})\r\n  local position = info.selected\r\n  if position == -1 then\r\n    return\r\n  end\r\n\r\n  local winData = vim.api.nvim__complete_set(position, {info = docs[1 + position]})\r\n  if not winData.winid or not vim.api.nvim_win_is_valid(winData.winid) then\r\n    return\r\n  end\r\n\r\n  vim.treesitter.start(winData.bufnr, 'markdown')\r\n  vim.wo[winData.winid].conceallevel = 3\r\nend\r\n\r\nvim.api.nvim_create_autocmd('CompleteChanged', {\r\n  callback = function ()\r\n    showDocumentation()\r\n  end,\r\n})\r\n\r\nvim.keymap.set('i', '<Tab>', function ()\r\n  vim.fn.complete(vim.fn.col('.'), {'nvim__get_lib_dir', 'nvim_buf_set_keymap', 'nvim_cmd'})\r\nend)\r\n\r\nvim.go.completeopt = 'noinsert,menuone'\r\nvim.cmd.startinsert()\r\n\r\n````\r\nbut cannot reproduce the crash on the contents (captured from `nvim_cmd` when treesitter isn't enabled on the docs buffer).\r\n\r\nI have used `nvim__complete_set` to avoid defining the docs window from scratch, especially to avoid positioning relative to the popup menu. \r\n",
            "created_at": "2024-10-01T13:20:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/30601#issuecomment-2385813318",
            "id": 2385813318,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30601",
            "node_id": "IC_kwDOAPphoM6ONJ9G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385813318/reactions"
            },
            "updated_at": "2024-10-01T14:06:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385813318",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "````lua\r\nlocal docs = {\r\n  [[```lua\r\nfunction vim.api.nvim__get_lib_dir()\r\n```]],\r\n  [[\r\n\r\n---\r\n@*param* `buffer` — Buffer handle, or 0 for current buffer]],\r\n  [[@*param* `cmd` — Command to execute. Must be a Dict that can cont\r\nain the same\r\n\r\n            except for \\\"cmd\\\" are optional.\r\n\r\n@*param* `opts`\r\n— Optional parameters.\r\n\r\n             • output: (boolean, default false) Whether to return command\r\n               output.]]\r\n}\r\n\r\nlocal function showDocumentation()\r\n  local info = vim.fn.complete_info({'selected'})\r\n  local position = info.selected\r\n  if position == -1 then\r\n    return\r\n  end\r\n\r\n  local winData = vim.api.nvim__complete_set(position, {info = docs[1 + position]})\r\n  if not winData.winid or not vim.api.nvim_win_is_valid(winData.winid) then\r\n    return\r\n  end\r\n\r\n  vim.treesitter.start(winData.bufnr, 'markdown')\r\nend\r\n\r\nvim.api.nvim_create_autocmd('CompleteChanged', {\r\n  callback = function ()\r\n    showDocumentation()\r\n  end,\r\n})\r\n\r\nvim.keymap.set('i', '<Tab>', function ()\r\n  vim.fn.complete(vim.fn.col('.'), {'nvim__get_lib_dir', 'nvim_buf_set_keymap', 'nvim_cmd'})\r\nend)\r\n\r\nvim.cmd.startinsert()\r\n````\r\nReproduction: press `<Tab>` to start completion and `<C-n>` 20-30 times (nvim repeatedly crashing for me with the backtrace listed above).",
            "created_at": "2024-10-01T13:37:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/30601#issuecomment-2385924004",
            "id": 2385924004,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30601",
            "node_id": "IC_kwDOAPphoM6ONk-k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385924004/reactions"
            },
            "updated_at": "2024-10-01T13:38:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2385924004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This definitely looks like an issue with upstream.",
            "created_at": "2024-10-01T20:11:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/30601#issuecomment-2386978095",
            "id": 2386978095,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30601",
            "node_id": "IC_kwDOAPphoM6ORmUv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2386978095/reactions"
            },
            "updated_at": "2024-10-01T20:11:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2386978095",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I have checked 865ba42e0401043836bca567b4add164c5c46e6f: the crash still occurs. ",
            "created_at": "2024-10-02T10:00:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/30601#issuecomment-2388195508",
            "id": 2388195508,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30601",
            "node_id": "IC_kwDOAPphoM6OWPi0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2388195508/reactions"
            },
            "updated_at": "2024-10-02T10:00:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2388195508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tried to simulate switching between the same contents from `docs` table inside the same buffer, with window configs taken from the popupmenu info window, but could not reproduce it in that way:\r\n````lua\r\nlocal docs = {\r\n  [[```lua\r\nfunction vim.api.nvim__get_lib_dir()\r\n```]],\r\n  [[\r\n\r\n---\r\n@*param* `buffer` — Buffer handle, or 0 for current buffer]],\r\n  [[@*param* `cmd` — Command to execute. Must be a Dict that can cont\r\nain the same\r\n\r\n            except for \\\"cmd\\\" are optional.\r\n\r\n@*param* `opts`\r\n— Optional parameters.\r\n\r\n             • output: (boolean, default false) Whether to return command\r\n               output.]]\r\n}\r\n\r\nlocal winConfigs = {\r\n  {\r\n    anchor = 'NW',\r\n    col = 20,\r\n    external = false,\r\n    focusable = false,\r\n    height = 4,\r\n    hide = false,\r\n    relative = 'editor',\r\n    row = 1,\r\n    width = 36,\r\n    zindex = 50\r\n  },\r\n  {\r\n    anchor = 'NW',\r\n    col = 20,\r\n    external = false,\r\n    focusable = false,\r\n    height = 5,\r\n    hide = false,\r\n    relative = 'editor',\r\n    row = 1,\r\n    width = 58,\r\n    zindex = 50\r\n  },\r\n  {\r\n    anchor = 'NW',\r\n    col = 20,\r\n    external = false,\r\n    focusable = false,\r\n    height = 11,\r\n    hide = false,\r\n    relative = 'editor',\r\n    row = 1,\r\n    width = 73,\r\n    zindex = 50\r\n  }\r\n}\r\n\r\nlocal function showDocumentation()\r\n  local info = vim.fn.complete_info({'selected'})\r\n  local position = info.selected\r\n  if position == -1 then\r\n    return\r\n  end\r\n\r\n  local winData = vim.api.nvim__complete_set(position, {info = docs[1 + position]})\r\n  if not winData.winid or not vim.api.nvim_win_is_valid(winData.winid) then\r\n    return\r\n  end\r\n  -- vim.print(vim.api.nvim_win_get_config(winData.winid))\r\n\r\n  vim.treesitter.start(winData.bufnr, 'markdown')\r\nend\r\n\r\nvim.api.nvim_create_autocmd('CompleteChanged', {\r\n  callback = function ()\r\n    showDocumentation()\r\n  end,\r\n})\r\n\r\nvim.keymap.set('i', '<Tab>', function ()\r\n  vim.fn.complete(vim.fn.col('.'), {'nvim__get_lib_dir', 'nvim_buf_set_keymap', 'nvim_cmd'})\r\nend)\r\n\r\n-- vim.cmd.startinsert()\r\nlocal buffer = vim.api.nvim_create_buf(false, true)\r\nlocal winId = vim.api.nvim_open_win(buffer, false, {\r\n  hide = true,\r\n  anchor = 'NW',\r\n  col = 20,\r\n  external = false,\r\n  focusable = false,\r\n  height = 11,\r\n  relative = 'editor',\r\n  row = 1,\r\n  width = 73,\r\n  zindex = 50\r\n})\r\nvim.wo[winId].conceallevel = 3\r\n\r\nassert(#docs == #winConfigs)\r\nlocal index = 0\r\n\r\nlocal function displayDocs()\r\n  index = index + 1\r\n  local content = vim.split(docs[index], '\\n', {})\r\n  vim.api.nvim_buf_set_lines(buffer, 0, -1, true, content)\r\n  vim.api.nvim_win_set_config(winId, winConfigs[index])\r\n  -- vim.treesitter.stop(buffer)\r\n  vim.treesitter.start(buffer, 'markdown')\r\n  index = index % #docs\r\nend\r\n\r\nvim.keymap.set('n', '<Tab>', displayDocs)\r\n\r\nlocal timer = assert(vim.uv.new_timer())\r\nlocal interval = 300\r\n\r\ntimer:start(0, interval, vim.schedule_wrap(displayDocs))\r\n````",
            "created_at": "2024-10-02T17:46:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/30601#issuecomment-2389257433",
            "id": 2389257433,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30601",
            "node_id": "IC_kwDOAPphoM6OaSzZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2389257433/reactions"
            },
            "updated_at": "2024-10-02T17:50:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2389257433",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Seems to be fixed by #30246.",
            "created_at": "2024-10-03T12:04:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/30601#issuecomment-2391246959",
            "id": 2391246959,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30601",
            "node_id": "IC_kwDOAPphoM6Oh4hv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2391246959/reactions"
            },
            "updated_at": "2024-10-03T12:04:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2391246959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30601/comments",
    "created_at": "2024-09-30T23:20:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30601/events",
    "html_url": "https://github.com/neovim/neovim/issues/30601",
    "id": 2557822100,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains minimal reproducing steps",
            "id": 435851959,
            "name": "has:repro",
            "node_id": "MDU6TGFiZWw0MzU4NTE5NTk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:repro"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30601/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 123,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2025-03-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 61,
        "state": "open",
        "title": "0.11",
        "updated_at": "2025-01-07T01:28:53Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "I_kwDOAPphoM6YdUSU",
    "number": 30601,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30601/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "sub_issues_summary": {
        "completed": 0,
        "percent_completed": 0,
        "total": 0
    },
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30601/timeline",
    "title": "treesitter: crash in `ts_parser_parse` with CompleteChanged",
    "updated_at": "2025-01-05T13:53:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30601",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia",
        "user_view_type": "public"
    }
}