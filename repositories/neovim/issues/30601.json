{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nNvim crashes probably when trying to show documentation for `nvim_cmd`:\r\n\r\n\r\n![image](https://github.com/user-attachments/assets/67af0104-564b-4edc-91ef-18edce14a476)\r\n\r\n```cpp\r\n#0  0x00005651437a8330 in ts_lexer_reset ()\r\n(gdb) bt\r\n#0  0x00005651437a8330 in ts_lexer_reset ()\r\n#1  0x000056514378b736 in ts_parser_parse ()\r\n#2  0x00005651435fb13d in parser_parse (L=0x7fa0ffd1c380) at .../src/nvim/lua/treesitter.c:475\r\n#3  0x00005651437d01a6 in lj_BC_FUNCC ()\r\n#4  0x00005651437bba5d in lua_pcall (L=L@entry=0x7fa0ffd1c380, nargs=nargs@entry=1, nresults=nresults@entry=1, errfunc=errfunc@entry=-3) at lj_api.c:1122\r\n#5  0x00005651435eb379 in nlua_pcall (lstate=0x7fa0ffd1c380, nargs=1, nresults=1) at .../src/nvim/lua/executor.c:174\r\n#6  0x00005651435f8198 in nlua_call_ref (ref=<optimized out>, name=<optimized out>, args=..., mode=kRetNilBool, arena=0x0, err=0x0) at .../src/nvim/lua/executor.c:1608\r\n#7  0x00005651434f404e in call_autocmd_callback (ac=ac@entry=0x5651472a0cc0, apc=apc@entry=0x7ffd8bbd5270) at .../src/nvim/autocmd.c:2057\r\n#8  0x00005651434f6263 in getnextac (c=<optimized out>, cookie=0x7ffd8bbd5270, indent=<optimized out>, do_concat=<optimized out>) at .../src/nvim/autocmd.c:2108\r\n#9  0x0000565143587372 in do_cmdline (cmdline=<optimized out>, fgetline=0x5651434f60cb <getnextac>, cookie=0x7ffd8bbd5270, flags=7) at .../src/nvim/ex_docmd.c:580\r\n#10 0x00005651434f4d59 in apply_autocmds_group (event=EVENT_COMPLETECHANGED, fname=0x565147585060 \"/home/arctgx/dev/arctgx/nvim/issues/current/2024-09-25-00.55.02-xdiff-linematch-error/init.lua\", fname_io=<optimized out>,\r\n    force=<optimized out>, group=group@entry=-3, buf=0x5651471295c0, eap=0x0, data=0x0) at .../src/nvim/autocmd.c:1842\r\n#11 0x00005651434f540d in apply_autocmds (event=<optimized out>, fname=<optimized out>, fname_io=<optimized out>, force=<optimized out>, buf=<optimized out>) at .../src/nvim/autocmd.c:1499\r\n#12 0x00005651435ce8d5 in trigger_complete_changed_event (cur=cur@entry=23) at .../src/nvim/insexpand.c:1145\r\n#13 0x00005651435ceed0 in ins_compl_show_pum () at .../src/nvim/insexpand.c:1377\r\n#14 0x00005651435d4435 in show_pum (prev_w_wrow=prev_w_wrow@entry=3, prev_w_leftcol=prev_w_leftcol@entry=0) at .../src/nvim/insexpand.c:4665\r\n#15 0x00005651435d4f76 in ins_complete (c=14, enable_pum=<optimized out>) at .../src/nvim/insexpand.c:4643\r\n#16 0x000056514352f506 in insert_do_complete (s=s@entry=0x7ffd8bbd5640) at .../src/nvim/edit.c:1228\r\n#17 0x0000565143536e6b in insert_handle_key (s=s@entry=0x7ffd8bbd5640) at .../src/nvim/edit.c:1146\r\n#18 0x00005651435373e5 in insert_execute (state=0x7ffd8bbd5640, key=<optimized out>) at .../src/nvim/edit.c:702\r\n#19 0x00005651436e1c71 in state_enter (s=0x7ffd8bbd5640) at .../src/nvim/state.c:100\r\n#20 0x000056514352ee8c in insert_enter (s=0x7ffd8bbd5640) at .../src/nvim/edit.c:344\r\n#21 0x000056514352f680 in edit (cmdchar=111, startln=<optimized out>, count=1) at .../src/nvim/edit.c:1305\r\n#22 0x00005651436461e9 in invoke_edit (cap=cap@entry=0x7ffd8bbd57e0, repl=repl@entry=0, cmd=111, startln=startln@entry=1) at .../src/nvim/normal.c:6255\r\n#23 0x0000565143646342 in n_opencmd (cap=cap@entry=0x7ffd8bbd57e0) at .../src/nvim/normal.c:5716\r\n#24 0x00005651436465c9 in nv_open (cap=0x7ffd8bbd57e0) at .../src/nvim/normal.c:6593\r\n#25 0x00005651436409b6 in normal_execute (state=0x7ffd8bbd5770, key=<optimized out>) at .../src/nvim/normal.c:1235\r\n#26 0x00005651436e1c71 in state_enter (s=0x7ffd8bbd5770) at .../src/nvim/state.c:100\r\n#27 0x000056514363db5d in normal_enter (cmdwin=<optimized out>, noexmode=<optimized out>) at .../src/nvim/normal.c:521\r\n#28 0x00005651435fe87c in main (argc=6, argv=<optimized out>) at .../src/nvim/main.c:660\r\n```\r\n```\r\nvim.treesitter:                       require(\"vim.treesitter.health\").check()\r\n\r\n- Nvim runtime ABI version: 14\r\n- OK Parser: c                    ABI: 14, path: .../lib/nvim/parser/c.so\r\n- OK Parser: lua                  ABI: 14, path: .../lib/nvim/parser/lua.so\r\n- OK Parser: markdown             ABI: 14, path: .../lib/nvim/parser/markdown.so\r\n- OK Parser: markdown_inline      ABI: 14, path: .../lib/nvim/parser/markdown_inline.so\r\n- OK Parser: query                ABI: 14, path: .../lib/nvim/parser/query.so\r\n- OK Parser: vim                  ABI: 14, path: .../lib/nvim/parser/vim.so\r\n- OK Parser: vimdoc               ABI: 14, path: .../lib/nvim/parser/vimdoc.so\r\n- Can load WASM parsers: false\r\n```\r\n\r\nPlease change the title to something more accurate.\n\n### Steps to reproduce\n\n`init.lua`:\r\n```lua\r\nvim.o.swapfile = false -- convenient after crash here\r\n\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = {'lua'},\r\n  group = vim.api.nvim_create_augroup('luals', {}),\r\n  callback = function ()\r\n    vim.lsp.start({\r\n      name = 'luals',\r\n      filetype = 'lua',\r\n      cmd = {'lua-language-server'},\r\n      root_dir = vim.uv.cwd(),\r\n      settings = {\r\n        Lua = {\r\n          runtime = {\r\n            path = {\r\n              '?.lua',\r\n              '?/init.lua',\r\n            },\r\n            version = 'LuaJIT',\r\n            pathStrict = true,\r\n          },\r\n          workspace = {\r\n            ignoreDir = {'lua'},\r\n            checkThirdParty = false,\r\n            library = {\r\n              vim.fs.joinpath(vim.env.VIMRUNTIME, 'lua'),\r\n              vim.fs.joinpath('${3rd}/luv/library', 'lua'),\r\n            },\r\n          },\r\n          diagnostics = {\r\n            globals = {'vim'},\r\n          },\r\n        },\r\n      },\r\n    })\r\n  end,\r\n})\r\n\r\nlocal completionAugroup = vim.api.nvim_create_augroup('arctgx.completion', {clear = true})\r\n\r\nlocal function showDocumentation(buf, clientId)\r\n  local info = vim.fn.complete_info({'selected'})\r\n  local completionItem = vim.tbl_get(vim.v.completed_item, 'user_data', 'nvim', 'lsp', 'completion_item')\r\n  if nil == completionItem then\r\n    return\r\n  end\r\n\r\n  local resolvedItem = vim.lsp.buf_request_sync(\r\n    buf,\r\n    vim.lsp.protocol.Methods.completionItem_resolve,\r\n    completionItem,\r\n    500\r\n  )\r\n\r\n  if nil == resolvedItem then\r\n    return\r\n  end\r\n\r\n  -- vim.print(resolvedItem[clientId])\r\n  local docs = vim.tbl_get(resolvedItem[clientId], 'result', 'documentation', 'value')\r\n  if nil == docs then\r\n    return\r\n  end\r\n\r\n  local winData = vim.api.nvim__complete_set(info['selected'], {info = docs})\r\n  if not winData.winid or not vim.api.nvim_win_is_valid(winData.winid) then\r\n    return\r\n  end\r\n\r\n  vim.api.nvim_win_set_config(winData.winid, {border = 'rounded'})\r\n\r\n  -- vim.lsp.util.convert_input_to_markdown_lines, documentation.kind <> markdown?\r\n  vim.treesitter.start(winData.bufnr, 'markdown')\r\n  vim.wo[winData.winid].conceallevel = 3\r\nend\r\n\r\nvim.api.nvim_create_autocmd('LspAttach', {\r\ngroup = vim.api.nvim_create_augroup('arctgx.completion', {clear = true}),\r\n  callback = function (args)\r\n    local clientId = args.data.client_id\r\n    vim.lsp.completion.enable(true, clientId, args.buf, {autotrigger = true})\r\n\r\n    vim.keymap.set({'i'}, '<C-Space>', function ()\r\n      vim.lsp.completion.trigger()\r\n    end, {buffer = args.buf})\r\n\r\n    local client = assert(vim.lsp.get_client_by_id(clientId))\r\n    if client.supports_method(vim.lsp.protocol.Methods.completionItem_resolve, {bufnr = args.buf}) then\r\n      vim.api.nvim_create_autocmd('CompleteChanged', {\r\n        group = completionAugroup,\r\n        buffer = args.buf,\r\n        callback = function ()\r\n          -- vim.print(args.data)\r\n          showDocumentation(args.buf, clientId)\r\n        end,\r\n      })\r\n    end\r\n  end\r\n})\r\n\r\nvim.go.completeopt = 'noinsert,menuone'\r\n```\r\n\r\n- `nvim --clean -u init.lua init.lua`\r\n- after starting lua-ls type `Ovim.api.`, wait for completion items and using `<C-n>` scroll down to `nvim_cmd`. For me Nvim crashes repeatedly there.\r\n\r\nI tried to open printed documentation with treesitter (markdown) but couldn't trigger the failure that way. \n\n### Expected behavior\n\nNo crash\n\n### Nvim version (nvim -v)\n\nv0.11.0-dev-867+g2c88cfcac\n\n### Vim (not Nvim) behaves the same?\n\nno\n\n### Operating system/version\n\nDebian Sid\n\n### Terminal name/version\n\nalacritty 0.14.0-dev (6585d604), tmux 3.5\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nfrom repo",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [],
    "comments": 0,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30601/comments",
    "created_at": "2024-09-30T23:20:30Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/30601/events",
    "html_url": "https://github.com/neovim/neovim/issues/30601",
    "id": 2557822100,
    "labels": [
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/30601/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6YdUSU",
    "number": 30601,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/30601/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/30601/timeline",
    "title": "treesitter: crash revealed by CompleteChanged + completionItem_resolve",
    "updated_at": "2024-09-30T23:23:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/30601",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia"
    }
}