{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI have a injection like this:\r\n```query\r\n(call_expression\r\n  arguments: (argument_list\r\n    (interpreted_string_literal)? @sql (#offset! @sql 0 1 0 -1)\r\n    (raw_string_literal)?         @sql (#offset! @sql 0 1 0 -1)\r\n  )\r\n)\r\n```\r\n\r\nThis captues both of\r\n\r\n```go\r\ndb.Where(\"THIS STRING IS WHAT IT CAPTURE\")\r\ndb.Where(`THIS ALSO BE CAPTURED`)\r\n```\r\n\r\nWhat causes error:\r\n```go\r\ndb.Where()\r\n// Error detected while processing BufReadPost Autocommands for \"*\":\r\n// Error executing lua callback: /usr/share/nvim/runtime/filetype.lua:21: Error executing lua: /usr/share/nvim/runtime/filetype.lua:22: BufReadPost Autocommands for \"*\"..FileType Autocommands for \"*\": Vim(append):Error executing lua callback: /usr/share/nvim/runtime/lua/vim/treesitter/query.lua:429: attempt to index a nil value\r\n// stack traceback:\r\n// /usr/share/nvim/runtime/lua/vim/treesitter/query.lua:429: in function 'handler'\r\n// /usr/share/nvim/runtime/lua/vim/treesitter/query.lua:586: in function 'apply_directives'\r\n// /usr/share/nvim/runtime/lua/vim/treesitter/query.lua:710: in function '(for generator)'\r\n// /usr/share/nvim/runtime/lua/vim/treesitter/languagetree.lua:663: in function 'f'\r\n// /usr/share/nvim/runtime/lua/vim/treesitter/languagetree.lua:123: in function 'tcall'\r\n// /usr/share/nvim/runtime/lua/vim/treesitter/languagetree.lua:262: in function 'parse'\r\n// /usr/share/nvim/runtime/lua/vim/treesitter.lua:89: in function '_create_parser'\r\n// /usr/share/nvim/runtime/lua/vim/treesitter.lua:131: in function 'get_parser'\r\n// /usr/share/nvim/runtime/lua/vim/treesitter.lua:469: in function 'start'\r\n// .../start/nvim-treesitter/lua/nvim-treesitter/highlight.lua:20: in function 'attach'\r\n// ...er/start/nvim-treesitter/lua/nvim-treesitter/configs.lua:509: in function 'attach_module'\r\n// ...er/start/nvim-treesitter/lua/nvim-treesitter/configs.lua:532: in function 'reattach_module'\r\n// ...er/start/nvim-treesitter/lua/nvim-treesitter/configs.lua:133: in function // <...er/start/nvimtreesitter/lua/nvimtreesitter/configs.lua:132>\r\n```\r\nhttps://github.com/neovim/neovim/blob/1ca77c222b00215657bae416eba5d280a1d9dc29/runtime/lua/vim/treesitter/query.lua#L429\r\nwhere `match[capture_id]` is nil.\n\n### Steps to reproduce\n\nuse this injection and write some `go` code like `db.Where()`.\r\n```query\r\n;; queries/go/injections.scm\r\n(call_expression\r\n  function: (selector_expression\r\n    operand: (_)\r\n    field: (field_identifier) @_function_name (#match? @_function_name \"(Select|Where|Delete|Joins|Order|Expr)\")\r\n  )\r\n  arguments: (argument_list\r\n    (interpreted_string_literal)? @sql (#offset! @sql 0 1 0 -1)\r\n    (raw_string_literal)? @sql (#offset! @sql 0 1 0 -1)\r\n  )\r\n)\r\n```\n\n### Expected behavior\n\nno node is captured\n\n### Neovim version (nvim -v)\n\n0.9.0\n\n### Vim (not Nvim) behaves the same?\n\n-\n\n### Operating system/version\n\nArch Linux(WSL)\n\n### Terminal name/version\n\nWindows Terminal\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\npacman official",
    "closed_at": "2024-05-14T14:14:45Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Please provide steps using a minimal init.vim and `nvim --clean -u init.vim` (or `init.lua`), so we can make sure this is a Neovim problem and not an issue with, say, nvim-treesitter.",
            "created_at": "2023-04-15T09:25:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/23100#issuecomment-1509689615",
            "id": 1509689615,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23100",
            "node_id": "IC_kwDOAPphoM5Z_AkP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509689615/reactions"
            },
            "updated_at": "2023-04-15T09:25:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509689615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "Sorry I thought this is `nvim-treesitter` repo, I am going to close this and create a new issue at nvim-treesitter",
            "created_at": "2023-04-15T10:56:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/23100#issuecomment-1509727519",
            "id": 1509727519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23100",
            "node_id": "IC_kwDOAPphoM5Z_J0f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509727519/reactions"
            },
            "updated_at": "2023-04-15T10:56:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509727519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13375959?v=4",
                "events_url": "https://api.github.com/users/sheey11/events{/privacy}",
                "followers_url": "https://api.github.com/users/sheey11/followers",
                "following_url": "https://api.github.com/users/sheey11/following{/other_user}",
                "gists_url": "https://api.github.com/users/sheey11/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sheey11",
                "id": 13375959,
                "login": "sheey11",
                "node_id": "MDQ6VXNlcjEzMzc1OTU5",
                "organizations_url": "https://api.github.com/users/sheey11/orgs",
                "received_events_url": "https://api.github.com/users/sheey11/received_events",
                "repos_url": "https://api.github.com/users/sheey11/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sheey11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sheey11/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sheey11"
            }
        },
        {
            "author_association": "NONE",
            "body": "This should be nvim bug, I can reproduce without `nvim-treesitter`, these steps is running inside a clean docker container:\r\n\r\n1. Clone [tree-sitter-go](https://github.com/tree-sitter/tree-sitter-go) and compile it.\r\n\r\n2. `init.lua`:\r\n```lua\r\nvim.treesitter.language.add('go', { path = \"/tmp/tree-sitter-go/libtree-sitter-go.so\" })\r\n```\r\n\r\n3. `~/.config/nvim/queries/go/injections.scm`:\r\n```query\r\n;; queries/go/injections.scm\r\n(call_expression\r\n  function: (selector_expression\r\n    operand: (_)\r\n    field: (field_identifier) @_function_name (#match? @_function_name \"(Select|Where|Delete|Joins|Order|Expr)\")\r\n  )\r\n  arguments: (argument_list\r\n    (interpreted_string_literal)? @sql (#offset! @sql 0 1 0 -1)\r\n    (raw_string_literal)?         @sql (#offset! @sql 0 1 0 -1)\r\n  )\r\n)\r\n```\r\n\r\nthen open `nvim`, type\r\n```go\r\ndb.Where()\r\n```\r\n```\r\n:set filetype=go\r\n:lua vim.treesitter.get_node()\r\n```\r\nThen error prompts.",
            "created_at": "2023-04-15T12:04:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/23100#issuecomment-1509751555",
            "id": 1509751555,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23100",
            "node_id": "IC_kwDOAPphoM5Z_PsD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509751555/reactions"
            },
            "updated_at": "2023-04-15T12:04:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509751555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13375959?v=4",
                "events_url": "https://api.github.com/users/sheey11/events{/privacy}",
                "followers_url": "https://api.github.com/users/sheey11/followers",
                "following_url": "https://api.github.com/users/sheey11/following{/other_user}",
                "gists_url": "https://api.github.com/users/sheey11/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sheey11",
                "id": 13375959,
                "login": "sheey11",
                "node_id": "MDQ6VXNlcjEzMzc1OTU5",
                "organizations_url": "https://api.github.com/users/sheey11/orgs",
                "received_events_url": "https://api.github.com/users/sheey11/received_events",
                "repos_url": "https://api.github.com/users/sheey11/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sheey11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sheey11/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sheey11"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This may be a lot to ask, but can you create a repro using just the bundled languages (lua, vim, c, query)? That'll make it a lot easier for me to reproduce locally and create a testcase.",
            "created_at": "2023-05-16T09:31:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/23100#issuecomment-1549320356",
            "id": 1549320356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23100",
            "node_id": "IC_kwDOAPphoM5cWMCk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1549320356/reactions"
            },
            "updated_at": "2023-05-16T09:31:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1549320356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23100/comments",
    "created_at": "2023-04-15T07:27:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23100/events",
    "html_url": "https://github.com/neovim/neovim/issues/23100",
    "id": 1669212582,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23100/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5jfimm",
    "number": 23100,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23100/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23100/timeline",
    "title": "treesitter optional captures causes error",
    "updated_at": "2024-05-14T14:14:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23100",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13375959?v=4",
        "events_url": "https://api.github.com/users/sheey11/events{/privacy}",
        "followers_url": "https://api.github.com/users/sheey11/followers",
        "following_url": "https://api.github.com/users/sheey11/following{/other_user}",
        "gists_url": "https://api.github.com/users/sheey11/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sheey11",
        "id": 13375959,
        "login": "sheey11",
        "node_id": "MDQ6VXNlcjEzMzc1OTU5",
        "organizations_url": "https://api.github.com/users/sheey11/orgs",
        "received_events_url": "https://api.github.com/users/sheey11/received_events",
        "repos_url": "https://api.github.com/users/sheey11/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sheey11/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sheey11/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sheey11"
    }
}