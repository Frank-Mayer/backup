{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "# Problem\r\n\r\nMoving the cursor is a fundamental action in Nvim, and there are many different ways to do so, depending on context:\r\n\r\n- `vim.api.nvim_win_set_cursor()` or `vim.fn.cursor()` are the low level \"primitives\"\r\n- `vim.diagnostic.goto_next()` and `vim.diagnostic.goto_prev()` move between diagnostics\r\n- https://github.com/neovim/neovim/pull/24499 proposed a method for moving between tree-sitter nodes\r\n- `vim.lsp.util.jump_to_location` moves the cursor to a given position within a specific buffer\r\n\r\nhttps://github.com/neovim/neovim/pull/24499#issuecomment-1658752117 mentions an abstract `vim.goto()` or `vim.cursor()` function that accepts any arbitrary \"position\" and moves the cursor to that location.\r\n\r\nRelated: https://github.com/neovim/neovim/issues/25509\r\nRelated: https://github.com/neovim/neovim/pull/26745\r\n\r\n# Proposal\r\n\r\nWe cannot name the function `vim.goto()` because `goto` is a reserved keyword in LuaJIT. IMO `vim.cursor()` is not a great name because \"cursor\" is not a verb. So I propose `vim.jump()`: \"jump\" is a standard and common idiom in Vim terminology and is therefore already familiar with users.\r\n\r\n`vim.jump()` accepts a [Position](https://github.com/neovim/neovim/issues/25509) as an argument and moves the cursor to that location (as well as an optional buffer number to support jumping between buffers, to support the LSP use case? Or is the buffer number included in the `Position`?)\r\n\r\n`vim.jump()` can then be used for all of the use cases covered in the problem description:\r\n\r\n- As the go-to \"primitive\" for basic cursor movement:\r\n\r\n  ```lua\r\n  -- Jump to the beginning of a buffer\r\n  vim.jump({ 0, 0 })\r\n\r\n  -- Jump to the last line of a buffer\r\n  vim.jump({ -1, 0 })\r\n  ```\r\n\r\n- For use with `vim.diagnostic` and `vim.treesitter` APIs:\r\n\r\n  ```lua\r\n  -- Jump to next diagnostic, replaces vim.diagnostic.goto_next()\r\n  vim.jump(vim.diagnostic.next(1))\r\n\r\n  -- Jump to previous diagnostic, replaces vim.diagnostic.goto_prev()\r\n  vim.jump(vim.diagnostic.next(-1))\r\n\r\n  -- Jump to Tree-sitter node\r\n  local node = vim.treesitter.get_node()\r\n  vim.jump(node:pos())\r\n  ```\r\n\r\n- Could possibly be used to replace `vim.lsp.util.jump_to_location`, in service of https://github.com/neovim/neovim/issues/25272",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Just to bring up alternatives: `vim.go_to()` would be legal; `vim.move()` may work, too (but is worse than `jump` because it may apply to moving other things).",
            "created_at": "2023-12-28T14:32:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1871229567",
            "id": 1871229567,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5viLJ_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871229567/reactions"
            },
            "updated_at": "2023-12-28T14:35:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871229567",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> vim.jump() accepts a https://github.com/neovim/neovim/issues/25509 as an argument and moves the cursor to that location (as well as an optional buffer number to support jumping between buffers, to support the LSP use case? Or is the buffer number included in the Position?)\r\n\r\nI think we touched on optional fields in `vim.pos` (in the context of `byte`, as in `TSRange6`), where bufnr could live as well. But I feel that should be determined by general API considerations (\"how often do you need positions in _other_ buffers?\")",
            "created_at": "2023-12-28T14:35:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1871231519",
            "id": 1871231519,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5viLof",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871231519/reactions"
            },
            "updated_at": "2023-12-28T14:35:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871231519",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We cannot name the function vim.goto() because goto is a reserved keyword in LuaJIT. \r\n\r\nI don't think this is true. it is used as a keyword in statement contexts, but it is not actually reserved (because that would break 5.1 compat).",
            "created_at": "2023-12-30T20:58:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1872605654",
            "id": 1872605654,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5vnbHW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872605654/reactions"
            },
            "updated_at": "2023-12-30T20:58:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872605654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > We cannot name the function vim.goto() because goto is a reserved keyword in LuaJIT.\r\n> \r\n> I don't think this is true. it is used as a keyword in statement contexts, but it is not actually reserved (because that would break 5.1 compat).\r\n\r\nYes, my mistake. It's not LuaJIT that has a problem with `goto()`, but some of our tooling (`luacheck` in particular seems to run into a parse error when using `goto()`). Maybe we can work around this.",
            "created_at": "2023-12-31T18:51:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/26782#issuecomment-1873016112",
            "id": 1873016112,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26782",
            "node_id": "IC_kwDOAPphoM5vo_Uw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873016112/reactions"
            },
            "updated_at": "2023-12-31T18:51:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873016112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26782/comments",
    "created_at": "2023-12-28T14:30:33Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26782/events",
    "html_url": "https://github.com/neovim/neovim/issues/26782",
    "id": 2058506215,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26782/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM56sk_n",
    "number": 26782,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26782/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26782/timeline",
    "title": "Lua: Interface for moving the cursor to a position",
    "updated_at": "2023-12-31T18:51:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26782",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}