{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nI am running neovim nightly (checked out yesterday, 02/28), and I'm trying to use the rust-analyzer LSP using rustacean.\r\n\r\nIt is unable to start the LSP, however, and the LSP log shows the following error\r\n\r\n```\r\nError: Failed to deserialize InitializeParams: invalid type: sequence, expected i32\r\n```\r\n\r\nI think the incorrect values are the valueSet values for completionItemKind. These values should be integers, but are now a list of [int, String]. It seems that neovim LSP already produces the invalid values for the capabilities (and thus unrelated to rustacean), because when I run `:lua print(vim.inspect(vim.lsp.protocol.make_client_capabilities()))`, the incorrect table values for valueSet already show up:\r\n\r\n```\r\n:lua print(vim.inspect(vim.lsp.protocol.make_client_capabilities()))\r\n{\r\n  general = {\r\n    positionEncodings = { \"utf-16\" }\r\n  },\r\n  textDocument = {\r\n    callHierarchy = {\r\n      dynamicRegistration = false\r\n    },\r\n    codeAction = {\r\n      codeActionLiteralSupport = {\r\n        codeActionKind = {\r\n          valueSet = { \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }\r\n        }\r\n      },\r\n      dataSupport = true,\r\n      dynamicRegistration = true,\r\n      isPreferredSupport = true,\r\n      resolveSupport = {\r\n        properties = { \"edit\" }\r\n      }\r\n    },\r\n    completion = {\r\n      completionItem = {\r\n        commitCharactersSupport = false,\r\n        deprecatedSupport = false,\r\n        documentationFormat = { \"markdown\", \"plaintext\" },\r\n        preselectSupport = false,\r\n        snippetSupport = false\r\n      },\r\n      completionItemKind = {\r\n        valueSet = { { 1, \"Text\",\r\n            <metatable> = <1>{}\r\n          }, { 2, \"Method\",\r\n            <metatable> = <table 1>\r\n          }, { 3, \"Function\",\r\n            <metatable> = <table 1>\r\n          }, { 4, \"Constructor\",\r\n            <metatable> = <table 1>\r\n          }, { 5, \"Field\",\r\n            <metatable> = <table 1>\r\n          }, { 6, \"Variable\",\r\n            <metatable> = <table 1>\r\n          }, { 7, \"Class\",\r\n            <metatable> = <table 1>\r\n          }, { 8, \"Interface\",\r\n            <metatable> = <table 1>\r\n          }, { 9, \"Module\",\r\n            <metatable> = <table 1>\r\n          }, { 10, \"Property\",\r\n            <metatable> = <table 1>\r\n          }, { 11, \"Unit\",\r\n            <metatable> = <table 1>\r\n          }, { 12, \"Value\",\r\n            <metatable> = <table 1>\r\n          }, { 13, \"Enum\",\r\n            <metatable> = <table 1>\r\n          }, { 14, \"Keyword\",\r\n            <metatable> = <table 1>\r\n          }, { 15, \"Snippet\",\r\n            <metatable> = <table 1>\r\n          }, { 16, \"Color\",\r\n            <metatable> = <table 1>\r\n          }, { 17, \"File\",\r\n            <metatable> = <table 1>\r\n          }, { 18, \"Reference\",\r\n          ...\r\n```\r\n\r\nRelated: https://github.com/rust-lang/rust-analyzer/issues/16713\r\n\n\n### Steps to reproduce using \"nvim -u minimal_init.lua\"\n\n--- CHANGE THESE\r\nlocal pattern = 'rust'\r\nlocal cmd = {'rust-analyzer'}\r\n-- Add files/folders here that indicate the root of a project\r\nlocal root_markers = {'.git', '.editorconfig'}\r\n-- Change to table with settings if required\r\nlocal settings = vim.empty_dict()\r\n\r\nvim.api.nvim_create_autocmd('FileType', {\r\n  pattern = pattern,\r\n  callback = function(args)\r\n    local match = vim.fs.find(root_markers, { path = args.file, upward = true })[1]\r\n    local root_dir = match and vim.fn.fnamemodify(match, ':p:h') or nil\r\n    local capabilities = vim.lsp.protocol.make_client_capabilities()\r\n\r\n    vim.lsp.start({\r\n      name = 'bugged-ls',\r\n      cmd = cmd,\r\n      root_dir = root_dir,\r\n      settings = settings,\r\n      capabilities = capabilities,\r\n    })\r\n  end\r\n})\r\n\n\n### Expected behavior\n\nrust-analyzer starts properly\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0-dev-2480+g0eaae1bc0-Homebrew\n\n### Language server name/version\n\nrust-analyzer 1.76.0\n\n### Operating system/version\n\nOSX 14.2\n\n### Log file\n\n_No response_",
    "closed_at": "2024-02-29T14:36:10Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Already fixed.",
            "created_at": "2024-02-29T14:36:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/27677#issuecomment-1971279249",
            "id": 1971279249,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27677",
            "node_id": "IC_kwDOAPphoM51f1WR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1971279249/reactions"
            },
            "updated_at": "2024-02-29T14:36:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1971279249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27677/comments",
    "created_at": "2024-02-29T14:34:51Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27677/events",
    "html_url": "https://github.com/neovim/neovim/issues/27677",
    "id": 2161410740,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27677/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6A1IK0",
    "number": 27677,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27677/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27677/timeline",
    "title": "Invalid neovim LSP client capabilties, not able to start rust-analyzer",
    "updated_at": "2024-02-29T14:36:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27677",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24530?v=4",
        "events_url": "https://api.github.com/users/lrvdijk/events{/privacy}",
        "followers_url": "https://api.github.com/users/lrvdijk/followers",
        "following_url": "https://api.github.com/users/lrvdijk/following{/other_user}",
        "gists_url": "https://api.github.com/users/lrvdijk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lrvdijk",
        "id": 24530,
        "login": "lrvdijk",
        "node_id": "MDQ6VXNlcjI0NTMw",
        "organizations_url": "https://api.github.com/users/lrvdijk/orgs",
        "received_events_url": "https://api.github.com/users/lrvdijk/received_events",
        "repos_url": "https://api.github.com/users/lrvdijk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lrvdijk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lrvdijk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lrvdijk"
    }
}