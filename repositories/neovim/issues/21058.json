{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Feature already in Vim?\n\nN/A\n\n### Feature description\n\nRound out `vim.ui` with a `vim.ui.confirm()` function. By default this just uses the builtin `confirm()` function.\r\n\r\nThis function must:\r\n\r\n1. Provide the user with a list of options\r\n2. Accept the user's choice with a single key press (i.e. the user simply presses a single key to make their choice, rather than entering a string and pressing \"Enter\")\r\n3. Visually indicate how a keypress maps to a choice (e.g. using syntax like `(f)oo, (b)ar` to indicate that pressing `b` selects `bar` and pressing `f` selects `foo`)\r\n4. Optionally provide a default choice that will be selected if the user simply presses \"Enter\" without pressing any other keys",
    "closed_at": "2023-04-15T19:09:53Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "Hi, I'm interested, can I go for it?",
            "created_at": "2022-11-17T12:29:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/21058#issuecomment-1318567192",
            "id": 1318567192,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21058",
            "node_id": "IC_kwDOAPphoM5Ol70Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1318567192/reactions"
            },
            "updated_at": "2022-11-17T12:29:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1318567192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43915420?v=4",
                "events_url": "https://api.github.com/users/Nero-F/events{/privacy}",
                "followers_url": "https://api.github.com/users/Nero-F/followers",
                "following_url": "https://api.github.com/users/Nero-F/following{/other_user}",
                "gists_url": "https://api.github.com/users/Nero-F/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Nero-F",
                "id": 43915420,
                "login": "Nero-F",
                "node_id": "MDQ6VXNlcjQzOTE1NDIw",
                "organizations_url": "https://api.github.com/users/Nero-F/orgs",
                "received_events_url": "https://api.github.com/users/Nero-F/received_events",
                "repos_url": "https://api.github.com/users/Nero-F/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Nero-F/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Nero-F/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Nero-F"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No permission needed. So long as there isn’t already another open PR then anything is fair game. ",
            "created_at": "2022-11-17T15:10:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/21058#issuecomment-1318777933",
            "id": 1318777933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21058",
            "node_id": "IC_kwDOAPphoM5OmvRN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1318777933/reactions"
            },
            "updated_at": "2022-11-17T15:10:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1318777933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "It's good to know, thanks.",
            "created_at": "2022-11-18T10:24:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/21058#issuecomment-1319809699",
            "id": 1319809699,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21058",
            "node_id": "IC_kwDOAPphoM5OqrKj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1319809699/reactions"
            },
            "updated_at": "2022-11-18T10:24:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1319809699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43915420?v=4",
                "events_url": "https://api.github.com/users/Nero-F/events{/privacy}",
                "followers_url": "https://api.github.com/users/Nero-F/followers",
                "following_url": "https://api.github.com/users/Nero-F/following{/other_user}",
                "gists_url": "https://api.github.com/users/Nero-F/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Nero-F",
                "id": 43915420,
                "login": "Nero-F",
                "node_id": "MDQ6VXNlcjQzOTE1NDIw",
                "organizations_url": "https://api.github.com/users/Nero-F/orgs",
                "received_events_url": "https://api.github.com/users/Nero-F/received_events",
                "repos_url": "https://api.github.com/users/Nero-F/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Nero-F/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Nero-F/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Nero-F"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Quoting @mfussenegger [here](https://github.com/neovim/neovim/pull/21681#issuecomment-1509573053):\r\n\r\n>I should probably also point out that I'm no longer sure if exposing these functions with the intention of overriding them was the best choice. There were a couple of PRs that tried to add additional options for vim.ui.select and each time the fact that existing overrides might not support these options was a bit of a problem. See https://github.com/neovim/neovim/pull/20053 for an example.\r\n\r\nI agree, and I don’t think we should continue with this pattern. Closing.",
            "created_at": "2023-04-15T19:09:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/21058#issuecomment-1509929781",
            "id": 1509929781,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21058",
            "node_id": "IC_kwDOAPphoM5Z_7M1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509929781/reactions"
            },
            "updated_at": "2023-04-15T19:09:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1509929781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">> I'm no longer sure if exposing these functions with the intention of overriding them was the best choice. ... See #20053 for an example.\r\n\r\nFor reference, from https://github.com/neovim/neovim/pull/19413#issuecomment-1193927300 : \r\n\r\n> Isn't there a risk that an implementation of `vim.ui.input` is not aware of `secret = true` when implementing this as compatible change?\r\n\r\n\r\n> I agree, and I don’t think we should continue with this pattern. \r\n\r\nWhat is the alternative, for allowing UI and other \"providers\" to be overridden? One idea: require \"positive confirmation\" from providers that they support all expected capabilities. Maybe https://github.com/neovim/neovim/pull/22598 would be the vehicle for this.",
            "created_at": "2023-07-16T12:24:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/21058#issuecomment-1637070984",
            "id": 1637070984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21058",
            "node_id": "IC_kwDOAPphoM5hk7iI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637070984/reactions"
            },
            "updated_at": "2023-07-16T12:25:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637070984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What is the alternative, for allowing UI and other \"providers\" to be overridden?\r\n\r\nI'd tend towards a pull pattern similar to `:h health-dev`. The table would not only return the functions, but also their capabilities. A `vim.ui.xy()` Would then try to find a provider, use it if it has the right capabilities and if not use a fallback implementation.\r\n\r\n",
            "created_at": "2023-07-16T15:06:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/21058#issuecomment-1637115635",
            "id": 1637115635,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21058",
            "node_id": "IC_kwDOAPphoM5hlGbz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637115635/reactions"
            },
            "updated_at": "2023-07-16T15:06:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637115635",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The table would not only return the functions, but also their capabilities\r\n\r\nTo declare capabilities of `vim.ui.foo`, we can specify that a special invocation such as `vim.ui.foo({capabilities=true})` must return capabilities.",
            "created_at": "2023-07-16T15:12:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/21058#issuecomment-1637116762",
            "id": 1637116762,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21058",
            "node_id": "IC_kwDOAPphoM5hlGta",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637116762/reactions"
            },
            "updated_at": "2023-07-16T15:12:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637116762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21058/comments",
    "created_at": "2022-11-14T21:59:40Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/21058/events",
    "html_url": "https://github.com/neovim/neovim/issues/21058",
    "id": 1448823929,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "C2E0C6",
            "default": false,
            "description": "community: issues for first-time contributors",
            "id": 98144774,
            "name": "good-first-issue",
            "node_id": "MDU6TGFiZWw5ODE0NDc3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/good-first-issue"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/21058/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5WW0x5",
    "number": 21058,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/neovim/issues/21058/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/21058/timeline",
    "title": "Lua: vim.ui.confirm()",
    "updated_at": "2023-07-16T15:12:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/21058",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}