{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\n**Context**:\r\nAfter setting foldexpr to treesitter foldexpr, I noticed that [undotree plugin](https://github.com/mbbill/undotree) became much slower. Specifically, a `setline()` loop and `append()` for drawing the tree got slower.\r\n\r\n**The problem**:\r\n`vim.treesitter.foldexpr()` tries creating a parser (`vim.treesitter._create_parser()`) if the buffer doesn't have a parser yet. So if there is no parser file for the language of the buffer, it will try creating a parser whenever it's invoked. Normally, this is not a big issue because it doesn't take much time. However, foldexpr can be called very frequently, e.g. in a `setline()` loop, so this can incur significant slowdown (for my case, it takes about 1ms per line set by `setline()`). The following minimized example demonstrates the problem.\r\n```\r\n\" NOTE: assuming that there is no parser for markdown\r\nnvim --clean --cmd 'set foldmethod=expr foldexpr=v:lua.vim.treesitter.foldexpr()' README.md\r\n:let start = reltime() | call append(0, range(10000)) | echom reltimestr(reltime(start))\r\n```\r\nThe test takes about 280ms on my machine. Without foldexpr, it only takes about 5ms.\r\n\r\nThere are several approaches for solution.\r\n* Don't let foldexpr option leak into windows that contain a buffer for which I have not explicitly requested foldexpr-folding. Several options for this:\r\n    * Revamp window-local option from ground up so that it behaves better.\r\n    * Make foldexpr buffer-local option.\r\n    * Emulate the above options with some script.\r\n* Make fold computation more lazy. It doesn't need to be triggered every time a line is set.\r\n* Make `vim.treesitter.get_parser` fail quickly, avoiding futile attempts to create a parser. For example, remember that `_create_parser` has failed. But this can be problematic since parsers can be installed later.\r\n* ([FastFold](https://github.com/Konfekt/FastFold/) doesn't help with this problem.)\r\n\n\n### Steps to reproduce\n\nsee above\n\n### Expected behavior\n\nsee above\n\n### Neovim version (nvim -v)\n\n0.10-dev 7c661207c\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nubuntu 22.04\n\n### Terminal name/version\n\nGNOME Terminal 3.44.0 using VTE 0.68.0 +BIDI +GNUTLS +ICU +SYSTEMD\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nbuilt from the repository",
    "closed_at": "2023-06-09T11:42:12Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You should only set `foldexpr` when there is a parser available.\r\n\r\nI currently have this in my config.\r\n\r\n```lua\r\n\r\n  local function enable_foldexpr()\r\n    vim.opt_local.foldexpr = 'v:lua.vim.treesitter.foldexpr()'\r\n    vim.opt_local.foldmethod = 'expr'\r\n    vim.cmd.normal'zx'\r\n  end\r\n\r\n  api.nvim_create_autocmd('FileType', {\r\n    callback = function()\r\n      if not pcall(vim.treesitter.start) then\r\n        return\r\n      end\r\n\r\n      enable_foldexpr()\r\n      enable_commenstrings()\r\n    end\r\n  })\r\n```\r\n\r\n> Don't let foldexpr option leak into windows that contain a buffer for which I have not explicitly requested foldexpr-folding. Several options for this:\r\n>\r\n> Revamp window-local option from ground up so that it behaves better.\r\n\r\nIn your example, you didn't use a window local option. Use `setlocal` or `vim.opt_local` as above.\r\n\r\n> Make foldexpr buffer-local option.\r\n\r\nAgain, just use window local.\r\n\r\n> Make fold computation more lazy. It doesn't need to be triggered every time a line is set.\r\n\r\nI don't think it can be any more lazy than it is.\r\n\r\n> Make vim.treesitter.get_parser fail quickly, avoiding futile attempts to create a parser. For example, remember that _create_parser has failed. But this can be problematic since parsers can be installed later.\r\n\r\nThis would introduce a lot of complexity.\r\n\r\nI'm not really sure if this is worth fixing.",
            "created_at": "2023-06-09T11:16:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/23964#issuecomment-1584411926",
            "id": 1584411926,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23964",
            "node_id": "IC_kwDOAPphoM5ecDUW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584411926/reactions"
            },
            "updated_at": "2023-06-09T11:21:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584411926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "window-local options are copied to a new `:split`ed window",
            "created_at": "2023-06-09T11:20:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/23964#issuecomment-1584416489",
            "id": 1584416489,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23964",
            "node_id": "IC_kwDOAPphoM5ecEbp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584416489/reactions"
            },
            "updated_at": "2023-06-09T11:20:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584416489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> window-local options are copied to a new `:split`ed window\r\n\r\nNot if you use `setlocal` or `vim.opt_local`.",
            "created_at": "2023-06-09T11:20:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/23964#issuecomment-1584417095",
            "id": 1584417095,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23964",
            "node_id": "IC_kwDOAPphoM5ecElH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584417095/reactions"
            },
            "updated_at": "2023-06-09T11:20:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584417095",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Oh I thought `vim.wo` was like `setlocal`, and this made me believe that window-local options are always copied to split window. Using `vim.opt_local` as you suggested seems to be the correct solution. Thanks for the solution.\r\n\r\nThere are still some edge cases, e.g. setlocal-ing those options and then  `:edit`-ing a buffer without a parser in the same window, and fixing it would require revamping window-local stuff. But the current state seems to be good enough for my use cases.",
            "created_at": "2023-06-09T11:42:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/23964#issuecomment-1584442711",
            "id": 1584442711,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23964",
            "node_id": "IC_kwDOAPphoM5ecK1X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584442711/reactions"
            },
            "updated_at": "2023-06-09T11:43:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584442711",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Oh I thought vim.wo was like setlocal\r\n\r\nNo, that is definitely not the case, and the documentation should (now) make that clear! (It's the one thing where the `vim.{,g,b,w}o` accessors still have a gap.)",
            "created_at": "2023-06-09T11:45:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/23964#issuecomment-1584445820",
            "id": 1584445820,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23964",
            "node_id": "IC_kwDOAPphoM5ecLl8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584445820/reactions"
            },
            "updated_at": "2023-06-09T11:45:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1584445820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": ">  ```lua\r\n>   api.nvim_create_autocmd('FileType', {\r\n>     callback = function()\r\n>       if not pcall(vim.treesitter.start) then\r\n>         return\r\n>       end\r\n>     (…)\r\n>   })\r\n\r\nIs this supposed to work when `:source`ing session files? Trying it here it seems the autocmd takes the early return in that case, unlike when `:edit`ing the file.",
            "created_at": "2023-09-21T15:20:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/23964#issuecomment-1729801694",
            "id": 1729801694,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23964",
            "node_id": "IC_kwDOAPphoM5nGq3e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729801694/reactions"
            },
            "updated_at": "2023-09-21T15:20:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729801694",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5426924?v=4",
                "events_url": "https://api.github.com/users/adrian5/events{/privacy}",
                "followers_url": "https://api.github.com/users/adrian5/followers",
                "following_url": "https://api.github.com/users/adrian5/following{/other_user}",
                "gists_url": "https://api.github.com/users/adrian5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/adrian5",
                "id": 5426924,
                "login": "adrian5",
                "node_id": "MDQ6VXNlcjU0MjY5MjQ=",
                "organizations_url": "https://api.github.com/users/adrian5/orgs",
                "received_events_url": "https://api.github.com/users/adrian5/received_events",
                "repos_url": "https://api.github.com/users/adrian5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/adrian5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/adrian5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/adrian5"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23964/comments",
    "created_at": "2023-06-09T10:52:21Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23964/events",
    "html_url": "https://github.com/neovim/neovim/issues/23964",
    "id": 1749657632,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23964/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5oSagg",
    "number": 23964,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23964/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23964/timeline",
    "title": "treesitter foldexpr slow when parser not available",
    "updated_at": "2023-09-21T15:20:55Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23964",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
        "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
        "followers_url": "https://api.github.com/users/tomtomjhj/followers",
        "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
        "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tomtomjhj",
        "id": 19489738,
        "login": "tomtomjhj",
        "node_id": "MDQ6VXNlcjE5NDg5NzM4",
        "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
        "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
        "repos_url": "https://api.github.com/users/tomtomjhj/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tomtomjhj"
    }
}