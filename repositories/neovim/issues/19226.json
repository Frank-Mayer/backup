{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\n- Plugins cannot inspect folds\r\n- Custom folds require `foldexpr` which is inefficient as it requires evaluating this expression on every buffer line.\r\n\r\n### Solution\r\n\r\nAPI for plugins to set, inspect folds and get fold events.\r\n\r\n### Notes\r\n\r\n- Folds are window local and so are most of the folding related options.\r\n- Fold state (whether a fold is open/closed) is also local to the window.\r\n- Extmarks are buffer local.\r\n- Folds can be nested\r\n\r\n### Proposal\r\n\r\n- Add folding support to extmarks\r\n  - Add a new method to `'foldmethod'` named `extmark` so extmark folds cannot be mixed with other kinds of folds.\r\n  - When folds of calculated, we scan the extmarks for all the folds and store them in `win->w_folds`.\r\n  - The trigger for updating is the same as other foldmethods.\r\n- Add `nvim_win_add_fold` and `nvim_win_del_fold`. These new API functions are to be used instead of the `zf`/`zd` operators.\r\n  - _Should these functions work for all fold methods or just `manual`/`marker` like `zf` does?_\r\n\r\n  ```\r\n  nvim_win_add_fold({window}, {start}, {end}, {opts})\r\n      Add a fold to the window from {start} to {end}.\r\n\r\n      All row arguments are 0-indexed, inclusive.\r\n\r\n      Only supported for `foldmethod=man√•ual`\r\n\r\n      Parameters: ~\r\n          {window}  Window handle, or 0 for current window\r\n          {start}   Start row of fold.\r\n          {end}     End row of fold.\r\n          {opts}    Optional parameters. Reserved for future use.\r\n\r\n  nvim_win_del_fold({window}, {start}, {end}, {opts})\r\n      Delete a fold from the window from {start} to {end}.\r\n\r\n      All row arguments are 0-indexed, inclusive.\r\n\r\n      Only supported for `foldmethod=manual`\r\n\r\n      Parameters: ~\r\n          {window}  Window handle, or 0 for current window\r\n          {start}   Start row of fold.\r\n          {end}     End row of fold.\r\n          {opts}    Optional parameters. Reserved for future use.\r\n\r\n  ```\r\n- Add `nvim_win_get_folds` for getting folds for any foldmethod.\r\n  ```\r\n  nvim_win_get_folds({window}, {opts})\r\n\r\n      All row arguments are 0-indexed, inclusive.\r\n\r\n      Parameters: ~\r\n          {window}  Window handle, or 0 for current window\r\n          {opts}    Optional parameters:\r\n                    - start_row: get folds from this row\r\n                    - end_row: get folds up to this row\r\n      Returns:\r\n\r\n      Array of dictionaries for each fold. Each elements has the keys:\r\n      - state: string, \"open\" | \"closed\"\r\n      - start_row: integer, start row of fold\r\n      - end_row: integer, end row of fold\r\n      - [FUTURE] start_col: integer\r\n      - [FUTURE] end_col: integer\r\n      - children: array of folds ????? SHOULD WE HAVE THIS?\r\n\r\n  ```\r\n\r\n- Add `nvim_win_toggle_folds` change the fold state of all folds in a region.\r\n  ```\r\n  nvim_win_toggle_folds({window}, {opts})\r\n\r\n      Parameters: ~\r\n          {window}  Window handle, or 0 for current window\r\n          {opts}    Optional parameters:\r\n                    - start_row: get folds from this row\r\n                    - end_row: get folds up to this row\r\n                    - action: \"toggle\", \"open\", \"close\". Default is \"toggle\".\r\n                      Note: for \"toggle\", only the first fold state is considered.\r\n                      E.g. if the first fold in the region is open, then all folds\r\n                      in the region will be closed.\r\n    ```\r\n- Add `nvim_win_attach` with an `on_fold` callback for detecting changes to folds.\r\n  ```\r\n  nvim_win_attach({window}, {opts})\r\n      Activates window-update events on a channel, or as Lua\r\n      callbacks.\r\n\r\n      Parameters: ~\r\n          {window}  Window handle, or 0 for current window\r\n          {opts}    Optional parameters:\r\n                    - on_fold: Lua callback invoked on change.\r\n                      Args:\r\n                      - the string \"fold\"\r\n                      - window handle\r\n                      - first line where folds where updated\r\n                      - last line where folds where updated\r\n                      - String \"add | del | update | open | close\"\r\n\r\n  ```\r\n\r\n\r\n### Future Enhancements\r\n\r\n- Column-aware folds (aka inline folds)\r\n\r\n### Questions\r\n\r\n- For nested folds, do we represent them as a flat list of locations or a nested structure?\r\n\r\n- ~Should we assign ID's and namespaces to folds?~\r\n  - EDIT: No as ID's/namespaces for folds will be achievable using extmarks which will be the preferred method for applying folds.\r\n\r\n### Related\r\n\r\n- Fold events: #8538\r\n- Window events: #8539\r\n\r\n",
    "closed_at": null,
    "closed_by": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "A few days ago in #neovim matrix @bfredl mentioned the possibility of a namespace having window granularity. It was mentioned in the use case of https://github.com/phaazon/hop.nvim/issues/244 which is highlights, but folds would have similar/same use case.",
            "created_at": "2022-07-04T16:56:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/19226#issuecomment-1174005110",
            "id": 1174005110,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19226",
            "node_id": "IC_kwDOAPphoM5F-eV2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1174005110/reactions"
            },
            "updated_at": "2022-07-04T16:56:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1174005110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9699804?v=4",
                "events_url": "https://api.github.com/users/muniter/events{/privacy}",
                "followers_url": "https://api.github.com/users/muniter/followers",
                "following_url": "https://api.github.com/users/muniter/following{/other_user}",
                "gists_url": "https://api.github.com/users/muniter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/muniter",
                "id": 9699804,
                "login": "muniter",
                "node_id": "MDQ6VXNlcjk2OTk4MDQ=",
                "organizations_url": "https://api.github.com/users/muniter/orgs",
                "received_events_url": "https://api.github.com/users/muniter/received_events",
                "repos_url": "https://api.github.com/users/muniter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/muniter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/muniter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/muniter"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Question is: do we want multiple sources of folds?\n\nIf yes, then I would think you would also want to mix these sources with other existing foldmethods, in which case we maybe we shouldn't add a new foldmethod just for extmarks. Also the proposed set API only works for `foldmethod=manual`.\n\nThis becomes pretty complicated so I'm not 100% sure it is worth it.",
            "created_at": "2022-07-04T17:01:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/19226#issuecomment-1174008075",
            "id": 1174008075,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19226",
            "node_id": "IC_kwDOAPphoM5F-fEL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1174008075/reactions"
            },
            "updated_at": "2022-07-04T17:01:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1174008075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "Would be nice also have a function to update folds. Currently it‚Äôs only possible with zx.\r\nWhich is problematic for plugins in the situation that people rebind z.\r\nExample: https://github.com/MagicDuck/grug-far.nvim/issues/264",
            "created_at": "2024-09-21T17:05:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/19226#issuecomment-2365254758",
            "id": 2365254758,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19226",
            "node_id": "IC_kwDOAPphoM6M-uxm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2365254758/reactions"
            },
            "updated_at": "2024-09-21T18:33:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2365254758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/95201?v=4",
                "events_url": "https://api.github.com/users/MagicDuck/events{/privacy}",
                "followers_url": "https://api.github.com/users/MagicDuck/followers",
                "following_url": "https://api.github.com/users/MagicDuck/following{/other_user}",
                "gists_url": "https://api.github.com/users/MagicDuck/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MagicDuck",
                "id": 95201,
                "login": "MagicDuck",
                "node_id": "MDQ6VXNlcjk1MjAx",
                "organizations_url": "https://api.github.com/users/MagicDuck/orgs",
                "received_events_url": "https://api.github.com/users/MagicDuck/received_events",
                "repos_url": "https://api.github.com/users/MagicDuck/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MagicDuck/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MagicDuck/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MagicDuck"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> to update folds. Currently it‚Äôs only possible with zx. Which is problematic for plugins in the situation that people rebind z.\r\n\r\nAs [noted](https://github.com/MagicDuck/grug-far.nvim/issues/264#issuecomment-2365257048), that is not relevant.\r\n",
            "created_at": "2024-09-21T18:33:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/19226#issuecomment-2365280549",
            "id": 2365280549,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19226",
            "node_id": "IC_kwDOAPphoM6M-1El",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2365280549/reactions"
            },
            "updated_at": "2024-09-21T18:33:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2365280549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/19226/comments",
    "created_at": "2022-07-04T15:08:52Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/19226/events",
    "html_url": "https://github.com/neovim/neovim/issues/19226",
    "id": 1293295191,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 2598645343,
            "name": "folds",
            "node_id": "MDU6TGFiZWwyNTk4NjQ1MzQz",
            "url": "https://api.github.com/repos/neovim/neovim/labels/folds"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/19226/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 648,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 575,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-09-23T15:31:12Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5NFh5X",
    "number": 19226,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 20,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 1,
        "total_count": 21,
        "url": "https://api.github.com/repos/neovim/neovim/issues/19226/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/19226/timeline",
    "title": "API: folds",
    "updated_at": "2024-09-21T18:33:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/19226",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}