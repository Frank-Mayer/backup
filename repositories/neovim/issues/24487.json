{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nCurrently, a few vimL functions do not have the option to do buffer-specific or global.\r\nFor example, `maparg()` will return the buffer mapping before the global mapping, which is a problem if you want to get the global mapping. The workarounds require either using `nvim_get_keymap()` and then filtering for specific mapping and lhs, or creating a scratch buffer, calling `nvim_buf_call(bufid,maparg())` and then deleting the buffer.\r\nThere is also the problem of someone else's incorrectly created code which doesn't distinguish between buffer-local and global things.\n\n### Expected behavior\n\nMy proposal is a way to call functions easily with a scratch temp buffer.\r\nI don't know if it is a good idea to add the functionality to `nvim_buf_call()` or create a new function for it (or something else).",
    "closed_at": "2023-07-25T15:45:30Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> My proposal is a way to call functions easily with a scratch temp buffer.\r\n\r\nYou can implement this already, there's nothing in core that limits this.\r\n\r\nIt also sounds like this would only be useful for a very select handful of functions, if not just `maparg()`, so providing some convoluted mechanism to workaround its shortcomings isn't a strong proposition.\r\n\r\nThe solution seems like we just need a better version of `nvim_get_keymap()`.",
            "created_at": "2023-07-25T15:02:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/24487#issuecomment-1650012790",
            "id": 1650012790,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24487",
            "node_id": "IC_kwDOAPphoM5iWTJ2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1650012790/reactions"
            },
            "updated_at": "2023-07-25T15:02:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1650012790",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`nvim_create_buf({listed}, {scratch})` exists for easily creating a scratch buffer. \r\n\r\nMore generally it sounds like you are requesting a save/restore abstraction: https://github.com/neovim/neovim/issues/19832\r\n\r\n> The workarounds require either using `nvim_get_keymap()` and then filtering for specific mapping and lhs\r\n\r\nWhat is wrong with that? What does the code look like to do this?  `vim.iter` exists to make filtering easier.\r\n\r\n> The solution seems like we just need a better version of `nvim_get_keymap()`.\r\n\r\nIt lacks an `opt` parameter, sigh...",
            "created_at": "2023-07-25T15:02:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/24487#issuecomment-1650013978",
            "id": 1650013978,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24487",
            "node_id": "IC_kwDOAPphoM5iWTca",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1650013978/reactions"
            },
            "updated_at": "2023-07-25T15:03:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1650013978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Adding `opt` to `nvim_get_keymap()` would work.\r\nAnd my suggestion already has a workaround, which means that I see no reason to implement my idea.\r\nThough I wonder, is there a plan to add `opt` to `nvim_get_keymap()`?",
            "created_at": "2023-07-25T15:45:30Z",
            "html_url": "https://github.com/neovim/neovim/issues/24487#issuecomment-1650090697",
            "id": 1650090697,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24487",
            "node_id": "IC_kwDOAPphoM5iWmLJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1650090697/reactions"
            },
            "updated_at": "2023-07-25T15:45:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1650090697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/107814000?v=4",
                "events_url": "https://api.github.com/users/altermo/events{/privacy}",
                "followers_url": "https://api.github.com/users/altermo/followers",
                "following_url": "https://api.github.com/users/altermo/following{/other_user}",
                "gists_url": "https://api.github.com/users/altermo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/altermo",
                "id": 107814000,
                "login": "altermo",
                "node_id": "U_kgDOBm0ccA",
                "organizations_url": "https://api.github.com/users/altermo/orgs",
                "received_events_url": "https://api.github.com/users/altermo/received_events",
                "repos_url": "https://api.github.com/users/altermo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/altermo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/altermo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/altermo"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24487/comments",
    "created_at": "2023-07-25T14:55:55Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/24487/events",
    "html_url": "https://github.com/neovim/neovim/issues/24487",
    "id": 1820529959,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/24487/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5sgxUn",
    "number": 24487,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/24487/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/24487/timeline",
    "title": "Make it easier to call a function with a temp buffer.",
    "updated_at": "2023-07-25T15:45:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/24487",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/107814000?v=4",
        "events_url": "https://api.github.com/users/altermo/events{/privacy}",
        "followers_url": "https://api.github.com/users/altermo/followers",
        "following_url": "https://api.github.com/users/altermo/following{/other_user}",
        "gists_url": "https://api.github.com/users/altermo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/altermo",
        "id": 107814000,
        "login": "altermo",
        "node_id": "U_kgDOBm0ccA",
        "organizations_url": "https://api.github.com/users/altermo/orgs",
        "received_events_url": "https://api.github.com/users/altermo/received_events",
        "repos_url": "https://api.github.com/users/altermo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/altermo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/altermo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/altermo"
    }
}