{
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI failed to find a way a native lsp feature to scroll docs. Apparently you have to enter the docs by pressing the same keymap twice, then scroll normally, and then you also have to jump out of the floating window. I don't like it, because it forces me to use additional keymaps when I just want to scroll down the docs once or twice. I saw someone mentioned that the coc.nvim plugin does have this feature. And from what I've read it jumps into the floating window, scrolls and then jump out of it. Although, when I used it I didn't notice anything like that â€” it just scrolls, and I loved it. At least `<c-f>` and `<c-b>` worked, and this was enough for me (at least from what I can remember). If a user wants to copy something from the docs, then the double keymap press to hop into it can still be used. I also didn't find how to scroll docs when using nvim-cmp, I only know that I can scroll it up and down with Lua API (autocompletion docs in insert mode), but it doesn't work for Neovim's LSP hover docs window.\r\n\r\nRelated links:\r\nhttps://github.com/neovim/neovim/issues/15092\r\nhttps://github.com/hrsh7th/nvim-cmp/issues/1410\n\n### Expected behavior\n\nThe feature can be implemented in 2 ways, I suppose:\r\n1. add a scroll function that would do \"jump in, scroll, jump out\" action\r\n2. add a proper docs scroll for a floating window without entering it\r\n\r\nThe first one should be much easier. The second probably would require quite a bit of discussion about which windows can be scrolled this way and the API.\r\n\r\nI haven't used VS Code in a long time, but I bet you can scroll in the floating windows there, when you hover over something. I think this feature is essential for the DX, and I am constantly reminded that it doesn't exist when I want to use it.",
    "closed_at": "2024-09-19T15:00:10Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    },
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Implementing such a utility function won't be difficult and users could easily write one similar to [cmp's `docs_view:scroll()`](https://github.com/hrsh7th/nvim-cmp/blob/main/lua/cmp/view/docs_view.lua#L121) in their config. It's not specific to LSP hover but scrolling floating windows in general. This could be a part of #25514 if we wanted to include that into Nvim core.\r\n\r\nOne workaround that you can use even currently is to use mouse: scrolling the wheels when the mouse pointer is over the floating window will make the (floating) window scrolled.",
            "created_at": "2024-02-01T17:55:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-1921897368",
            "id": 1921897368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5yjdOY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921897368/reactions"
            },
            "updated_at": "2024-02-01T17:56:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921897368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's not specific to LSP hover but scrolling floating windows in general.\r\n\r\nYes. The second point was about that. A general solution that can be obviously used for non-hover-docs stuff. Though a dedicated `vim.lsp.buf.scroll_docs(number)` would be super convenient. It probably will include some additional logic, like automatically using the docs window that appeared after the call of `vim.lsp.buf.hover()`.\r\n\r\n> One workaround that you can use even currently is to use mouse\r\n\r\nThis workaround only works if I use a mouse, and I don't use a mouse. I use touchpad, but even it I use very rarely. Also, IMO, using mouse to scroll in docs window is probably slower than going into the docs window with an additional keymap (then scrolling with keymaps) and jumping out of it after with another keymap.",
            "created_at": "2024-02-01T18:32:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-1921964695",
            "id": 1921964695,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5yjtqX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921964695/reactions"
            },
            "updated_at": "2024-02-01T18:32:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921964695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think the crux of the issue is keymap scoping and window identification.\r\n\r\n> Implementing such a utility function won't be difficult and users could easily write one similar to [cmp's `docs_view:scroll()`](https://github.com/hrsh7th/nvim-cmp/blob/main/lua/cmp/view/docs_view.lua#L121) in their config. \r\n\r\nLooking through cmp's implementation the way it's done is by using `nvim_buf_set_keymap` when creating the pmenu and help doc float and then removing the keymaps with `nvim_buf_del_keymap` when those windows close. It's much less tricky when you have ownership of creating the window itself. \r\n\r\nThe only way I can think of to implement this with floating windows you aren't creating yourself is to create an autocommand to detect that the window you care about has been opened or closed. Or to override the creation of the float yourself. It's especially difficult with lsp float doc windows because there isn't anything I'm aware of that makes them objectively identifiable.",
            "created_at": "2024-02-14T02:41:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-1943000880",
            "id": 1943000880,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5zz9cw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1943000880/reactions"
            },
            "updated_at": "2024-02-14T02:43:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1943000880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "NONE",
            "body": "@Andrew15-5\r\nFinally took some time this afternoon and figured out how to do this.\r\n\r\nI looked into nvim-cmp's implementation for hover docs again, but it turned out to be fruitless for creating keymaps for hover documentation floating windows.\r\n\r\nTurns out that noice.nvim had already solved this problem in a relatively straightforward way.\r\nFurther, MariaSolOs wrote an even more simplified version of noice's implementation.\r\n\r\nEnough preamble, here's how to do it.\r\n\r\nFirst we need a function to get the height of the buffer in the floating window:\r\n\r\n> From [noice](https://github.com/folke/noice.nvim/blob/0cbe3f88d038320bdbda3c4c5c95f43a13c3aa12/lua/noice/util/nui.lua#L156)\r\n\r\n```lua\r\n--- Returns the height of the buffer in the window\r\n---@param winnr integer\r\n---@return integer\r\nlocal function win_buf_height(winnr)\r\n  local buf = vim.api.nvim_win_get_buf(winnr)\r\n\r\n  -- handle nowrap\r\n  if not vim.wo[winnr].wrap then\r\n    return vim.api.nvim_buf_line_count(buf)\r\n  end\r\n\r\n  local width = vim.api.nvim_win_get_width(winnr)\r\n\r\n  -- Compute the height of the buffer in the window\r\n  local lines = vim.api.nvim_buf_get_lines(buf, 0, -1, false)\r\n  local height = 0\r\n  for _, l in ipairs(lines) do\r\n    height = height + math.max(1, (math.ceil(vim.fn.strwidth(l) / width)))\r\n  end\r\n  return height\r\nend\r\n```\r\n\r\nThen we need a function to scroll the documentation window:\r\n\r\n> Also from [noice](https://github.com/folke/noice.nvim/blob/0cbe3f88d038320bdbda3c4c5c95f43a13c3aa12/lua/noice/util/nui.lua#L238)\r\n\r\n```lua\r\n--- Scrolls the window by delta lines\r\n---@param winnr integer\r\n---@param delta integer\r\nlocal function scroll(winnr, delta)\r\n  local info = vim.fn.getwininfo(winnr)[1] or {} -- get the window info\r\n  local top = info.topline or 1 -- get the top line\r\n  local buf = vim.api.nvim_win_get_buf(winnr) -- get the buffer\r\n  top = top + delta -- add the delta\r\n  top = math.max(top, 1) -- set the minimum line number to 1\r\n  -- set the maximum line number to the height of the buffer\r\n  top = math.min(top, win_buf_height(winnr) - info.height + 1)\r\n\r\n  vim.defer_fn(function()\r\n    vim.api.nvim_buf_call(buf, function() -- call the function in the buffer\r\n      -- scroll the buffer\r\n      vim.api.nvim_command('noautocmd silent! normal! ' .. top .. 'zt')\r\n      -- trigger the WinScrolled autocmd\r\n      vim.api.nvim_exec_autocmds('WinScrolled', { modeline = false })\r\n    end)\r\n  end, 0)\r\nend\r\n```\r\n\r\nThen we need to override `vim.lsp.handlers[vim.lsp.protocol.Methods.textDocument_hover]` with our own float handler. This will give us access to the bufnr and winnr of the floating window, which we need in order to attach our keymaps to the buffer.\r\n\r\n> Adapted from [Maria's nvim config](https://github.com/MariaSolOs/dotfiles/blob/1579441d9a805758861d6452d7b45bde5053a7f6/.config/nvim/lua/lsp.lua#L207)\r\n\r\n```lua\r\n--- Overrides the default LSP floating window handler to add keymaps and window options.\r\n---@param handler fun(err: any, result: any, ctx: any, config: any): integer?, integer?\r\n---@return fun(err: any, result: any, ctx: any, config: any)\r\nlocal function float_handler(handler)\r\n  local limit = vim.o.lines * 0.5 -- limit the height of the floating window\r\n  return function(err, result, ctx, win_config) -- the new handler\r\n    local bufnr, winnr = handler(\r\n      err,\r\n      result,\r\n      ctx,\r\n      --- Override the default lsp floating window configuration\r\n      vim.tbl_deep_extend('force', win_config or {}, {\r\n        border = 'rounded',\r\n        -- set the max height of the floating window\r\n        max_height = math.floor(limit),\r\n        -- set the max width of the floating window\r\n        max_width = math.floor(vim.o.columns * 0.4),\r\n      })\r\n    )\r\n\r\n    -- return if the buffer or window is not created\r\n    if not bufnr or not winnr then\r\n      return\r\n    end\r\n\r\n    -- set the window's scrolloffset to 0\r\n    vim.wo[winnr].scrolloff = 0\r\n\r\n    -- stylua: ignore start\r\n    vim.keymap.set('n', '<C-S-N>', function() scroll(winnr, 4) end, { buffer = true })\r\n    vim.keymap.set('n', '<C-S-P>', function() scroll(winnr, -4) end, { buffer = true })\r\n    -- stylua: ignore end\r\n  end\r\nend\r\n\r\nvim.lsp.handlers[vim.lsp.protocol.Methods.textDocument_hover] = float_handler(vim.lsp.handlers.hover)\r\n\r\n```\r\n\r\nThis is a pretty hacky solution IMO, but it does work.\r\nIf anyone has a better approach to this problem I would love to see it.",
            "created_at": "2024-03-30T03:24:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2027895384",
            "id": 2027895384,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM543zpY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027895384/reactions"
            },
            "updated_at": "2024-09-08T12:27:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027895384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Which version is this supposed to work with? `Methods` doesn't exist in 0.9.4.\r\n\r\n```\r\n.../init.lua:235: attempt to index field 'Methods' (a nil value)\r\n```\r\n\r\nThese are the fields that exit:\r\n\r\n<details><summary>list</summary>\r\n\r\n\r\n```\r\nCodeActionKind\r\nCodeActionTriggerKind\r\nCompletionItemKind\r\nCompletionTriggerKind\r\nDiagnosticSeverity\r\nDiagnosticTag\r\nDocumentHighlightKind\r\nErrorCodes\r\nFailureHandlingKind\r\nFileChangeType\r\nInitializeError\r\nInsertTextFormat\r\nMarkupKind\r\nMessageType\r\nResourceOperationKind\r\nSymbolKind\r\nTextDocumentSaveReason\r\nTextDocumentSyncKind\r\nWatchKind\r\nmake_client_capabilities\r\nresolve_capabilities\r\n```\r\n\r\n</details> ",
            "created_at": "2024-03-30T12:05:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028029205",
            "id": 2028029205,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM544UUV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028029205/reactions"
            },
            "updated_at": "2024-09-08T12:27:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028029205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm on nightly, it's a bit different.\r\n\r\nTry \r\n```lua \r\nvim.lsp.handlers['textDocument/hover'] = float_handler(vim.lsp.handlers.hover)\r\n```\r\n\r\nI tried it on 0.9.4 and it worked well.",
            "created_at": "2024-03-30T15:34:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028126892",
            "id": 2028126892,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM544sKs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028126892/reactions"
            },
            "updated_at": "2024-09-08T12:27:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028126892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "[nvim-config.zip](https://github.com/neovim/neovim/files/14812647/nvim-config.zip)",
            "created_at": "2024-03-30T16:24:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028220201",
            "id": 2028220201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM545C8p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028220201/reactions"
            },
            "updated_at": "2024-03-30T16:24:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028220201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "With your config on 0.9.4 you can just copy paste the three snippets above into your lua/custom/configs/lspconfig.lua and it works.\r\n\r\n```lua\r\n-- print(vim.inspect(vim.lsp.get_active_clients()[1].server_capabilities.executeCommandProvider.commands))\r\nM = {}\r\n\r\nlocal lspconfig = require \"lspconfig\"\r\nlocal default_config = require \"plugins.configs.lspconfig\"\r\nlocal lspconfigs = require \"lspconfig.configs\"\r\nlocal schema_store = require \"schemastore\"\r\nlocal on_attach = default_config.on_attach\r\n\r\n--- Returns the height of the buffer in the window\r\n---@param winnr integer\r\n---@return integer\r\nlocal function win_buf_height(winnr)\r\n  local buf = vim.api.nvim_win_get_buf(winnr)\r\n\r\n  -- handle nowrap\r\n  if not vim.wo[winnr].wrap then\r\n    return vim.api.nvim_buf_line_count(buf)\r\n  end\r\n\r\n  local width = vim.api.nvim_win_get_width(winnr)\r\n\r\n  -- Compute the height of the buffer in the window\r\n  local lines = vim.api.nvim_buf_get_lines(buf, 0, -1, false)\r\n  local height = 0\r\n  for _, l in ipairs(lines) do\r\n    height = height + math.max(1, (math.ceil(vim.fn.strwidth(l) / width)))\r\n  end\r\n  return height\r\nend\r\n\r\n--- Scrolls the window by delta lines\r\n---@param winnr integer\r\n---@param delta integer\r\nlocal function scroll(winnr, delta)\r\n  local info = vim.fn.getwininfo(winnr)[1] or {} -- get the window info\r\n  local top = info.topline or 1 -- get the top line\r\n  local buf = vim.api.nvim_win_get_buf(winnr) -- get the buffer\r\n  top = top + delta -- add the delta\r\n  top = math.max(top, 1) -- set the minimum line number to 1\r\n  -- set the maximum line number to the height of the buffer\r\n  top = math.min(top, win_buf_height(winnr) - info.height + 1)\r\n\r\n  vim.defer_fn(function()\r\n    vim.api.nvim_buf_call(buf, function() -- call the function in the buffer\r\n      -- scroll the buffer\r\n      vim.api.nvim_command('noautocmd silent! normal! ' .. top .. 'zt')\r\n      -- trigger the WinScrolled autocmd\r\n      vim.api.nvim_exec_autocmds('WinScrolled', { modeline = false })\r\n    end)\r\n  end, 0)\r\nend\r\n\r\n--- Overrides the default LSP floating window handler to add keymaps and window options.\r\n---@param handler fun(err: any, result: any, ctx: any, config: any): integer?, integer?\r\n---@return fun(err: any, result: any, ctx: any, config: any)\r\nlocal function float_handler(handler)\r\n  local limit = vim.o.lines * 0.5 -- limit the height of the floating window\r\n  return function(err, result, ctx, win_config) -- the new handler\r\n    local bufnr, winnr = handler(\r\n      err,\r\n      result,\r\n      ctx,\r\n      --- Override the default lsp floating window configuration\r\n      vim.tbl_deep_extend('force', win_config or {}, {\r\n        border = 'rounded',\r\n        -- set the max height of the floating window\r\n        max_height = math.floor(limit),\r\n        -- set the max width of the floating window\r\n        max_width = math.floor(vim.o.columns * 0.4),\r\n      })\r\n    )\r\n\r\n    -- return if the buffer or window is not created\r\n    if not bufnr or not winnr then\r\n      return\r\n    end\r\n\r\n    -- set the window's scrolloffset to 0\r\n    vim.wo[winnr].scrolloff = 0\r\n\r\n    -- stylua: ignore start\r\n    vim.keymap.set('n', '<C-f>', function() scroll(winnr, 4) end, { buffer = bufnr })\r\n    vim.keymap.set('n', '<C-b>', function() scroll(winnr, -4) end, { buffer = bufnr })\r\n    -- stylua: ignore end\r\n  end\r\nend\r\n\r\nvim.lsp.handlers['textDocument/hover'] = float_handler(vim.lsp.handlers.hover)\r\n\r\nM.on_attach = on_attach\r\n-- local capabilities = default_config.capabilities\r\n-- local capabilities = vim.lsp.protocol.make_client_capabilities()\r\nlocal capabilities = default_config.capabilities\r\nM.capabilities = capabilities\r\n-- rest of your lspconfig\r\n```",
            "created_at": "2024-03-30T20:09:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028458126",
            "id": 2028458126,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5459CO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028458126/reactions"
            },
            "updated_at": "2024-03-30T20:09:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028458126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "NONE",
            "body": "Try setting `buffer = true` instead of `buffer = bufnr` in the keybind",
            "created_at": "2024-04-01T18:25:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2030297741",
            "id": 2030297741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM55A-KN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030297741/reactions"
            },
            "updated_at": "2024-04-01T18:25:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030297741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thank you, now the keymaps work. Great success!",
            "created_at": "2024-04-01T21:26:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2030585221",
            "id": 2030585221,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM55CEWF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030585221/reactions"
            },
            "updated_at": "2024-04-01T21:26:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030585221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "But now the new keymaps persist after the floating window is closed. Which also gives an error for normal use:\r\n\r\n```\r\nInvalid window id: 1003                                                                                                  \r\nstack traceback:                                                                                                                                                                                                     \r\n        [C]: in function 'nvim_win_get_buf'\r\nin function 'scroll'\r\n```\r\n\r\nI was able to \"fix\" it like this:\r\n\r\n<details><summary>\"fix\"</summary>\r\n\r\n```lua\r\n-- For use with <cr> and others with `feedkeys()` etc.\r\nfunction Escape_keycodes(str)\r\n    return vim.api.nvim_replace_termcodes(str, true, true, true)\r\nend\r\n\r\n--- Scrolls the window by delta lines\r\n---@param winnr integer\r\n---@param delta integer\r\nlocal function scroll(winnr, delta)\r\n  local info = vim.fn.getwininfo(winnr)[1] or {} -- get the window info\r\n  local top = info.topline or 1 -- get the top line\r\n  if not vim.api.nvim_win_is_valid(winnr) then\r\n    vim.keymap.del(\"n\", \"<c-f>\", { buffer = true })\r\n    vim.keymap.del(\"n\", \"<c-b>\", { buffer = true })\r\n    if delta > 0 then\r\n      vim.fn.feedkeys(Escape_keycodes \"<c-f>\")\r\n    else\r\n      vim.fn.feedkeys(Escape_keycodes \"<c-b>\")\r\n    end\r\n    return\r\n  end\r\n  local buf = vim.api.nvim_win_get_buf(winnr) -- get the buffer\r\n  top = top + delta -- add the delta\r\n  top = math.max(top, 1) -- set the minimum line number to 1\r\n  -- set the maximum line number to the height of the buffer\r\n  top = math.min(top, win_buf_height(winnr) - info.height + 1)\r\n\r\n  vim.defer_fn(function()\r\n    vim.api.nvim_buf_call(buf, function() -- call the function in the buffer\r\n      -- scroll the buffer\r\n      vim.api.nvim_command(\"noautocmd silent! normal! \" .. top .. \"zt\")\r\n      -- trigger the WinScrolled autocmd\r\n      vim.api.nvim_exec_autocmds(\"WinScrolled\", { modeline = false })\r\n    end)\r\n  end, 0)\r\nend\r\n```\r\n\r\n</details>",
            "created_at": "2024-04-01T22:24:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2030679555",
            "id": 2030679555,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM55CbYD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030679555/reactions"
            },
            "updated_at": "2024-04-01T22:24:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030679555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "Until this is added to neovim core, if someone is already using `noice` it supports scrolling the hover window without entering: https://github.com/folke/noice.nvim#lsp-hover-doc-scrolling",
            "created_at": "2024-09-07T09:17:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2335128965",
            "id": 2335128965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LLz2F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2335128965/reactions"
            },
            "updated_at": "2024-09-07T09:17:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2335128965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/26065812?v=4",
                "events_url": "https://api.github.com/users/aksh1618/events{/privacy}",
                "followers_url": "https://api.github.com/users/aksh1618/followers",
                "following_url": "https://api.github.com/users/aksh1618/following{/other_user}",
                "gists_url": "https://api.github.com/users/aksh1618/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aksh1618",
                "id": 26065812,
                "login": "aksh1618",
                "node_id": "MDQ6VXNlcjI2MDY1ODEy",
                "organizations_url": "https://api.github.com/users/aksh1618/orgs",
                "received_events_url": "https://api.github.com/users/aksh1618/received_events",
                "repos_url": "https://api.github.com/users/aksh1618/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aksh1618/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aksh1618/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aksh1618"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Until this is added to neovim core,\r\n\r\nIt won't be. The `KK` idiom is a very nice, ergonomic compromise.\r\n\r\n> you have to enter the docs by pressing the same keymap twice, then scroll normally, and then you also have to jump out of the floating window. I don't like it, because it forces me to use additional keymaps when I just want to scroll down the docs once or twice\r\n\r\nYou don't like `K<c-f>`, so you are requesting that the LSP defaults claim `<c-f>` while the doc hover is visible? And then we would have the inverse problem, which is that now `<c-f>` doesn't do what it's supposed to do, for people who expect it to behave normally. \r\n\r\nYou are asking for \"docs hover visible\" to be a special mode. You can already opt-in to that \"mode\" by hitting `KK`. Or use the mouse scroll, which already works as you expect.\r\n\r\n# Proposal\r\n\r\nWe could improve the situation by making it easy to exit the popup (*when it's focused*), perhaps mapping (buffer-local in the popup) one or more of `K`, `<esc>`, `<tab>`.\r\n\r\nEdit: `q` already serves that purpose: https://github.com/neovim/neovim/pull/30347",
            "created_at": "2024-09-07T10:48:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2335149557",
            "id": 2335149557,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LL431",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2335149557/reactions"
            },
            "updated_at": "2024-09-13T11:33:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2335149557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The `KK` idiom is a very nice, ergonomic compromise.\r\n\r\nCounterpoint: the `KK` idiom only seems ergonomic because you're used to it and you've accepted its limits.\r\n\r\nFrom what I can tell, once users open a hover window with `K`, they only want to be able to do two things: (1) scroll through the text in the window and (2) close the window. Compare this with a code split, where users will likely want to edit and delete text in both parts of the split. Or even compare it with a split showing `:help`, where users often want to jump around using `:helptags`. Correct me if I'm wrong, but it never makes sense to (try to) edit, delete, or navigate the text in a hover window opened by `K`. (Maybe sometimes it makes sense to yank the text from such a window? I've never done it, but other people may.)\r\n\r\nRight now, the only built-in way to do (1) or (2) is the `KK` idiom, and soâ€”yesâ€”the idiom is helpful. But this thread, the plugin code in `noice`, the user configuration code quoted here, and [Stackexchange questions like this one](https://vi.stackexchange.com/q/37225), suggest that (many?) people would like to be able to scroll the text in the window and close the window *without ever entering the window*.\r\n\r\n> # Proposal\r\n> We could improve the situation by making it <easier?> to exit the popup, perhaps mapping `K` and/or `<esc>` and/or `<tab>`.\r\n\r\n+1 There's definitely some demand for this. See, e.g., the [Stackexchange question I linked above](https://vi.stackexchange.com/q/37225). (Also, there seem to be several ways to exit the hover window once you are in it: at least `q`, `:q`, and `:bd` work. Are those documented somewhere? I figured them out through trial and error, but maybe I missed some obvious docs.)\r\n\r\nI'd argue that it would be an even bigger improvement if it were possible to close the floating window without entering it. Using some of the code from this thread, here's how I handle that currently.\r\n\r\n```lua\r\n---Closes a floating window without entering it.\r\n---@param win_id integer\r\nlocal close_window = function(win_id)\r\n    if not vim.api.nvim_win_is_valid(win_id) then\r\n        vim.keymap.del(\"n\", \"<Leader>;\", { buffer = true })\r\n        return\r\n    end\r\n    vim.api.nvim_win_close(win_id, false)\r\nend\r\n\r\n--- Overrides the default LSP floating window handler to add keymaps and window options.\r\n---@param handler fun(err: any, result: any, ctx: any, config: any): integer?, integer?\r\n---@return fun(err: any, result: any, ctx: any, config: any)\r\nlocal function float_handler(handler, focusable)\r\n    -- Omitted code...\r\n\r\n    return function(err, result, ctx, config) -- the new handler\r\n        -- Omitted code...\r\n        local bufnr, winnr = handler(err, result, ctx, config)\r\n\r\n        -- Return if the buffer or window is not created.\r\n        if not bufnr or not winnr then\r\n            return\r\n        end\r\n\r\n       -- Omitted code and keymaps...\r\n        vim.keymap.set(\"n\", \"<Leader>;\", function()\r\n            close_window(winnr)\r\n        end, { buffer = true })\r\n    end\r\nend\r\n\r\nvim.lsp.handlers[\"textDocument/hover\"] =\r\n    float_handler(vim.lsp.handlers.hover, false)\r\n```\r\n\r\n As someone says much earlier in the discussion, this isn't so difficult. But it took me a long time to put together all the pieces of how to do it. I definitely think it would improve the UX of these floating windows if users didn't have to enter a hover window to close it (or scroll it, for that matter).\r\n",
            "created_at": "2024-09-08T11:39:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336652512",
            "id": 2336652512,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LRnzg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336652512/reactions"
            },
            "updated_at": "2024-09-08T12:25:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336652512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> From what I can tell, once users open a hover window with K, they only want to be able to do two things: (1) scroll through the text in the window and (2) close the window. \r\n\r\nThat assumption is wrong. They may also want to yank text for copy&pasting or a web search.\r\n\r\n> I'd argue that it would be an even bigger improvement if it were possible to close the floating window without entering it.\r\n\r\nMost floats close on `CursorMoved`, which I'd argue to be the least friction anyway.",
            "created_at": "2024-09-08T11:43:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336653727",
            "id": 2336653727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LRoGf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336653727/reactions"
            },
            "updated_at": "2024-09-08T11:46:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336653727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> That assumption is wrong. They may also want to yank text for copy&pasting or a web search.\r\n\r\nFair enough.\r\n\r\n> Most floats close on `CursorMoved`, which I'd argue to be the least friction anyway.\r\n\r\nAlso fair enough, but I know from experience that many people would rather not have to move the cursor just to close (this) float. (Yes, you can map something to move one character and then right back, but the desire to do that seems to prove my point)",
            "created_at": "2024-09-08T11:48:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336655197",
            "id": 2336655197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LRodd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336655197/reactions"
            },
            "updated_at": "2024-09-08T11:48:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336655197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not every desire is reasonable or worth the added code, documentation, tests, and/or maintenance. The difference between (mapping) `jk` and `<esc>` (or `K` or whatever you want -- I don't expect there's a universal preference!) does _not_ meet that threshold, no matter how loud the request.",
            "created_at": "2024-09-08T11:51:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336655958",
            "id": 2336655958,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LRopW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336655958/reactions"
            },
            "updated_at": "2024-09-08T11:51:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336655958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Okay, I yield. I just wanted to add my two cents since I've seen this question/desire come up a lot, this thread was open, and Justin seemed open to making some adjustments to the current UX. Thanks for the feedback.",
            "created_at": "2024-09-08T11:54:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336656988",
            "id": 2336656988,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LRo5c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336656988/reactions"
            },
            "updated_at": "2024-09-08T11:54:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336656988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Justin seemed open to making some adjustments to the current UX\r\n\r\nYes, but specifically about closing an _active_ float, not closing/acting on a visible but inactive float. Mapping `<esc>` _in the float_ to close it would indeed be a reasonable UX improvement. (It's much harder to close inactive floats, because which one would you want to target? Every time you think you have a clear answer, someone will come up with another edge case where that would be wrong ;))",
            "created_at": "2024-09-08T11:59:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336658169",
            "id": 2336658169,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LRpL5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336658169/reactions"
            },
            "updated_at": "2024-09-08T11:59:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336658169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Every time you think you have a clear answer, someone will come up with another edge case where that would be wrong\r\n\r\nTo add one here in regards to mapping esc: For floats where you can enter insert mode it could make it easier to accidentally close the window. There's afaik none like that in core yet but some plugins allow editing the content in a float window. (Not necessarily a deal-breaker, but worth considering)\r\n\r\n--- \r\n\r\nMaybe it was mentioned already but `<c-w>q` already exists to close windows and there's `:fclose` to close all floats if not focused",
            "created_at": "2024-09-08T13:42:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336691578",
            "id": 2336691578,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LRxV6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336691578/reactions"
            },
            "updated_at": "2024-09-08T13:42:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336691578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> ...and there's `:fclose` to close all floats if not focused\r\n\r\n@mfussenegger Thanks for the tip. At the moment, the docs for `:help :fclose`, say this:\r\n\r\n> Close [count] floating windows with the highest zindex values. '!' to close all floating windows.\r\n\r\nMaybe there's something implicit that I don't understand, but that doesn't sound like \"closes all floats if (they are) not focused.\" Should those docs be updated? (If so, I'm guessing that would mean a patch to vim, assuming that vim and neovim have identical behavior for `:fclose`. I'm happy to make the PR, but I want to make sure I'm not missing some implicit content.)",
            "created_at": "2024-09-08T14:10:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336701394",
            "id": 2336701394,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LRzvS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336701394/reactions"
            },
            "updated_at": "2024-09-08T14:10:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336701394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Maybe there's something implicit that I don't understand, but that doesn't sound like \"closes all floats if (they are) not focused.\" Should those docs be updated? (If so, I'm guessing that would mean a patch to vim, assuming that vim and neovim have identical behavior for :fclose. I'm happy to make the PR, but I want to make sure I'm not missing some implicit content.)\r\n\r\nI was just being terse. `:fclose` works as documented as far as I can tell",
            "created_at": "2024-09-08T18:55:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336788115",
            "id": 2336788115,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LSI6T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336788115/reactions"
            },
            "updated_at": "2024-09-08T19:18:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336788115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What has happened here? I didn't do anything. At least I don't remember writing something here today (especially 4 times).\r\n\r\n<details><summary>screenshot</summary>\r\n\r\n![image](https://github.com/user-attachments/assets/b08dc2e5-d05e-48c3-9774-7a3da15ca9bb)\r\n\r\n</details>",
            "created_at": "2024-09-08T19:08:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336792197",
            "id": 2336792197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LSJ6F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336792197/reactions"
            },
            "updated_at": "2024-09-08T19:30:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336792197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What has happened here? I didn't do anything. At least I don't remember writing something here today (especially 4 times).\r\n\r\nTrying to avoid noise in the discussion. So, adding even more off-topic comments is not helpful...",
            "created_at": "2024-09-08T19:12:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336793368",
            "id": 2336793368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LSKMY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336793368/reactions"
            },
            "updated_at": "2024-09-08T19:12:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336793368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "GitHub will start hiding comments indiscriminately once there are too many, so every single comment adds a risk to the discussion being much more difficult to follow (e.g., ctrl+f will miss a lot). And hiding does not affect that. So please only comment if you have something to add _on the record_, otherwise we have Matrix. \n\n(To be deleted when read.)",
            "created_at": "2024-09-08T19:17:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336794586",
            "id": 2336794586,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LSKfa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336794586/reactions"
            },
            "updated_at": "2024-09-08T19:17:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336794586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "<strike>I mean, sure, but can't the comments just made hidden instead of being completely deleted?\r\n\r\nI'm just trying to understand if I have Alzheimer, or I've been hacked (or a weird GitHub bug?). I only remember that I did read the recent messages, but I don't remember replying to anything here today (before now). If I knew the content of those messages, that would've made everything clearer.</strike>\r\n\r\nOK, I think I'm completely out of loop about this deletion thingy. Just weird that it says that my comments were deleted a few hours ago...where I didn't send anything a few hours ago...",
            "created_at": "2024-09-08T19:20:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336795461",
            "id": 2336795461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LSKtF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336795461/reactions"
            },
            "updated_at": "2024-09-08T19:30:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336795461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The _deletion_ happened recently, not the comments. ",
            "created_at": "2024-09-08T19:22:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2336795947",
            "id": 2336795947,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6LSK0r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336795947/reactions"
            },
            "updated_at": "2024-09-08T19:22:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336795947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "## Status/Resolution/Summary\r\n\r\nAs documented in https://github.com/neovim/neovim/pull/30347, \r\n\r\n- to show the docs, hit `K`\r\n- to scroll the hover, just hit `K` followed by however you prefer to scroll (`<c-d>`, `<c-u>`, etc)\r\n- to quit the hover, hit `q` while the hover is focused. the hover already auto-closes on cursor moved, too.\r\n- mouse scroll works in the hover.\r\n\r\n---\r\n_Locked to keep the summary visible. You can always [chat](https://neovim.io/#chat) or open an issue if you have new information/topics to discuss._",
            "created_at": "2024-09-19T15:02:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2361270837",
            "id": 2361270837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM6MviI1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2361270837/reactions"
            },
            "updated_at": "2024-09-19T15:02:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2361270837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 28,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27288/comments",
    "created_at": "2024-02-01T15:09:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27288/events",
    "html_url": "https://github.com/neovim/neovim/issues/27288",
    "id": 2112756492,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "issues or PRs involving changing the defaults",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows",
            "id": 3234818716,
            "name": "floatwin",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/floatwin"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27288/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 648,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 575,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-09-23T15:31:12Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM597hsM",
    "number": 27288,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 6,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27288/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27288/timeline",
    "title": "LSP: default mapping to exit \"K\" docs hover window",
    "updated_at": "2024-09-19T15:03:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27288",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
        "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
        "followers_url": "https://api.github.com/users/Andrew15-5/followers",
        "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
        "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Andrew15-5",
        "id": 37143421,
        "login": "Andrew15-5",
        "node_id": "MDQ6VXNlcjM3MTQzNDIx",
        "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
        "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
        "repos_url": "https://api.github.com/users/Andrew15-5/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Andrew15-5"
    }
}