{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI failed to find a way a native lsp feature to scroll docs. Apparently you have to enter the docs by pressing the same keymap twice, then scroll normally, and then you also have to jump out of the floating window. I don't like it, because it forces me to use additional keymaps when I just want to scroll down the docs once or twice. I saw someone mentioned that the coc.nvim plugin does have this feature. And from what I've read it jumps into the floating window, scrolls and then jump out of it. Although, when I used it I didn't notice anything like that â€” it just scrolls, and I loved it. At least `<c-f>` and `<c-b>` worked, and this was enough for me (at least from what I can remember). If a user wants to copy something from the docs, then the double keymap press to hop into it can still be used. I also didn't find how to scroll docs when using nvim-cmp, I only know that I can scroll it up and down with Lua API (autocompletion docs in insert mode), but it doesn't work for Neovim's LSP hover docs window.\r\n\r\nRelated links:\r\nhttps://github.com/neovim/neovim/issues/15092\r\nhttps://github.com/hrsh7th/nvim-cmp/issues/1410\n\n### Expected behavior\n\nThe feature can be implemented in 2 ways, I suppose:\r\n1. add a scroll function that would do \"jump in, scroll, jump out\" action\r\n2. add a proper docs scroll for a floating window without entering it\r\n\r\nThe first one should be much easier. The second probably would require quite a bit of discussion about which windows can be scrolled this way and the API.\r\n\r\nI haven't used VS Code in a long time, but I bet you can scroll in the floating windows there, when you hover over something. I think this feature is essential for the DX, and I am constantly reminded that it doesn't exist when I want to use it.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Implementing such a utility function won't be difficult and users could easily write one similar to [cmp's `docs_view:scroll()`](https://github.com/hrsh7th/nvim-cmp/blob/main/lua/cmp/view/docs_view.lua#L121) in their config. It's not specific to LSP hover but scrolling floating windows in general. This could be a part of #25514 if we wanted to include that into Nvim core.\r\n\r\nOne workaround that you can use even currently is to use mouse: scrolling the wheels when the mouse pointer is over the floating window will make the (floating) window scrolled.",
            "created_at": "2024-02-01T17:55:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-1921897368",
            "id": 1921897368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5yjdOY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921897368/reactions"
            },
            "updated_at": "2024-02-01T17:56:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921897368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's not specific to LSP hover but scrolling floating windows in general.\r\n\r\nYes. The second point was about that. A general solution that can be obviously used for non-hover-docs stuff. Though a dedicated `vim.lsp.buf.scroll_docs(number)` would be super convenient. It probably will include some additional logic, like automatically using the docs window that appeared after the call of `vim.lsp.buf.hover()`.\r\n\r\n> One workaround that you can use even currently is to use mouse\r\n\r\nThis workaround only works if I use a mouse, and I don't use a mouse. I use touchpad, but even it I use very rarely. Also, IMO, using mouse to scroll in docs window is probably slower than going into the docs window with an additional keymap (then scrolling with keymaps) and jumping out of it after with another keymap.",
            "created_at": "2024-02-01T18:32:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-1921964695",
            "id": 1921964695,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5yjtqX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921964695/reactions"
            },
            "updated_at": "2024-02-01T18:32:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1921964695",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "I think the crux of the issue is keymap scoping and window identification.\r\n\r\n> Implementing such a utility function won't be difficult and users could easily write one similar to [cmp's `docs_view:scroll()`](https://github.com/hrsh7th/nvim-cmp/blob/main/lua/cmp/view/docs_view.lua#L121) in their config. \r\n\r\nLooking through cmp's implementation the way it's done is by using `nvim_buf_set_keymap` when creating the pmenu and help doc float and then removing the keymaps with `nvim_buf_del_keymap` when those windows close. It's much less tricky when you have ownership of creating the window itself. \r\n\r\nThe only way I can think of to implement this with floating windows you aren't creating yourself is to create an autocommand to detect that the window you care about has been opened or closed. Or to override the creation of the float yourself. It's especially difficult with lsp float doc windows because there isn't anything I'm aware of that makes them objectively identifiable.",
            "created_at": "2024-02-14T02:41:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-1943000880",
            "id": 1943000880,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5zz9cw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1943000880/reactions"
            },
            "updated_at": "2024-02-14T02:43:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1943000880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "NONE",
            "body": "@Andrew15-5\r\nFinally took some time this afternoon and figured out how to do this.\r\n\r\nI looked into nvim-cmp's implementation for hover docs again, but it turned out to be fruitless for creating keymaps for hover documentation floating windows.\r\n\r\nTurns out that noice.nvim had already solved this problem in a relatively straightforward way.\r\nFurther, MariaSolOs wrote an even more simplified version of noice's implementation.\r\n\r\nEnough preamble, here's how to do it.\r\n\r\nFirst we need a function to get the height of the buffer in the floating window:\r\n\r\n> From [noice](https://github.com/folke/noice.nvim/blob/0cbe3f88d038320bdbda3c4c5c95f43a13c3aa12/lua/noice/util/nui.lua#L156)\r\n\r\n```lua\r\n--- Returns the height of the buffer in the window\r\n---@param winnr integer\r\n---@return integer\r\nlocal function win_buf_height(winnr)\r\n  local buf = vim.api.nvim_win_get_buf(winnr)\r\n\r\n  -- handle nowrap\r\n  if not vim.wo[winnr].wrap then\r\n    return vim.api.nvim_buf_line_count(buf)\r\n  end\r\n\r\n  local width = vim.api.nvim_win_get_width(winnr)\r\n\r\n  -- Compute the height of the buffer in the window\r\n  local lines = vim.api.nvim_buf_get_lines(buf, 0, -1, false)\r\n  local height = 0\r\n  for _, l in ipairs(lines) do\r\n    height = height + math.max(1, (math.ceil(vim.fn.strwidth(l) / width)))\r\n  end\r\n  return height\r\nend\r\n```\r\n\r\nThen we need a function to scroll the documentation window:\r\n\r\n> Also from [noice](https://github.com/folke/noice.nvim/blob/0cbe3f88d038320bdbda3c4c5c95f43a13c3aa12/lua/noice/util/nui.lua#L238)\r\n\r\n```lua\r\n--- Scrolls the window by delta lines\r\n---@param winnr integer\r\n---@param delta integer\r\nlocal function scroll(winnr, delta)\r\n  local info = vim.fn.getwininfo(winnr)[1] or {} -- get the window info\r\n  local top = info.topline or 1 -- get the top line\r\n  local buf = vim.api.nvim_win_get_buf(winnr) -- get the buffer\r\n  top = top + delta -- add the delta\r\n  top = math.max(top, 1) -- set the minimum line number to 1\r\n  -- set the maximum line number to the height of the buffer\r\n  top = math.min(top, win_buf_height(winnr) - info.height + 1)\r\n\r\n  vim.defer_fn(function()\r\n    vim.api.nvim_buf_call(buf, function() -- call the function in the buffer\r\n      -- scroll the buffer\r\n      vim.api.nvim_command('noautocmd silent! normal! ' .. top .. 'zt')\r\n      -- trigger the WinScrolled autocmd\r\n      vim.api.nvim_exec_autocmds('WinScrolled', { modeline = false })\r\n    end)\r\n  end, 0)\r\nend\r\n```\r\n\r\nThen we need to override `vim.lsp.handlers[vim.lsp.protocol.Methods.textDocument_hover]` with our own float handler. This will give us access to the bufnr and winnr of the floating window, which we need in order to attach our keymaps to the buffer.\r\n\r\n> Adapted from [Maria's nvim config](https://github.com/MariaSolOs/dotfiles/blob/1579441d9a805758861d6452d7b45bde5053a7f6/.config/nvim/lua/lsp.lua#L207)\r\n\r\n```lua\r\n--- Overrides the default LSP floating window handler to add keymaps and window options.\r\n---@param handler fun(err: any, result: any, ctx: any, config: any): integer?, integer?\r\n---@return fun(err: any, result: any, ctx: any, config: any)\r\nlocal function float_handler(handler)\r\n  local limit = vim.o.lines * 0.5 -- limit the height of the floating window\r\n  return function(err, result, ctx, win_config) -- the new handler\r\n    local bufnr, winnr = handler(\r\n      err,\r\n      result,\r\n      ctx,\r\n      --- Override the default lsp floating window configuration\r\n      vim.tbl_deep_extend('force', win_config or {}, {\r\n        border = 'rounded',\r\n        -- set the max height of the floating window\r\n        max_height = math.floor(limit),\r\n        -- set the max width of the floating window\r\n        max_width = math.floor(vim.o.columns * 0.4),\r\n      })\r\n    )\r\n\r\n    -- return if the buffer or window is not created\r\n    if not bufnr or not winnr then\r\n      return\r\n    end\r\n\r\n    -- set the window's scrolloffset to 0\r\n    vim.wo[winnr].scrolloff = 0\r\n\r\n    -- stylua: ignore start\r\n    vim.keymap.set('n', '<C-S-N>', function() scroll(winnr, 4) end, { buffer = true })\r\n    vim.keymap.set('n', '<C-S-P>', function() scroll(winnr, -4) end, { buffer = true })\r\n    -- stylua: ignore end\r\n  end\r\nend\r\n\r\nvim.lsp.handlers[vim.lsp.protocol.Methods.textDocument_hover] = float_handler(vim.lsp.handlers.hover)\r\n\r\n```\r\n\r\nThis is a pretty hacky solution IMO, but it does work.\r\nIf anyone has a better approach to this problem I would love to see it.",
            "created_at": "2024-03-30T03:24:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2027895384",
            "id": 2027895384,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM543zpY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027895384/reactions"
            },
            "updated_at": "2024-03-30T03:24:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2027895384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Which version is this supposed to work with? `Methods` doesn't exist in 0.9.4.\r\n\r\n```\r\n.../init.lua:235: attempt to index field 'Methods' (a nil value)\r\n```\r\n\r\nThese are the fields that exit:\r\n\r\n<details><summary>list</summary>\r\n\r\n\r\n```\r\nCodeActionKind\r\nCodeActionTriggerKind\r\nCompletionItemKind\r\nCompletionTriggerKind\r\nDiagnosticSeverity\r\nDiagnosticTag\r\nDocumentHighlightKind\r\nErrorCodes\r\nFailureHandlingKind\r\nFileChangeType\r\nInitializeError\r\nInsertTextFormat\r\nMarkupKind\r\nMessageType\r\nResourceOperationKind\r\nSymbolKind\r\nTextDocumentSaveReason\r\nTextDocumentSyncKind\r\nWatchKind\r\nmake_client_capabilities\r\nresolve_capabilities\r\n```\r\n\r\n</details> ",
            "created_at": "2024-03-30T12:05:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028029205",
            "id": 2028029205,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM544UUV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028029205/reactions"
            },
            "updated_at": "2024-03-30T12:05:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028029205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm on nightly, it's a bit different.\r\n\r\nTry \r\n```lua \r\nvim.lsp.handlers['textDocument/hover'] = float_handler(vim.lsp.handlers.hover)\r\n```\r\n\r\nI tried it on 0.9.4 and it worked well.",
            "created_at": "2024-03-30T15:34:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028126892",
            "id": 2028126892,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM544sKs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028126892/reactions"
            },
            "updated_at": "2024-03-30T15:36:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028126892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The `:map` doesn't show the new keymaps, and they don't do anything if they are enabled.",
            "created_at": "2024-03-30T15:42:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028141552",
            "id": 2028141552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM544vvw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028141552/reactions"
            },
            "updated_at": "2024-03-30T15:42:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028141552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "That's odd. The keymaps show up for me using `:map`. Are you using `vim.keymap.set('n', 'K', vim.lsp.buf.hover)` as your hover bind?",
            "created_at": "2024-03-30T15:53:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028162470",
            "id": 2028162470,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM54402m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028162470/reactions"
            },
            "updated_at": "2024-03-30T15:53:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028162470",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yes.",
            "created_at": "2024-03-30T15:59:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028175246",
            "id": 2028175246,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5443-O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028175246/reactions"
            },
            "updated_at": "2024-03-30T15:59:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028175246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "It's hard to say what could be causing the problem. Mind sharing your config?",
            "created_at": "2024-03-30T16:15:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028203200",
            "id": 2028203200,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM544-zA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028203200/reactions"
            },
            "updated_at": "2024-03-30T16:15:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028203200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "[nvim-config.zip](https://github.com/neovim/neovim/files/14812647/nvim-config.zip)",
            "created_at": "2024-03-30T16:24:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028220201",
            "id": 2028220201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM545C8p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028220201/reactions"
            },
            "updated_at": "2024-03-30T16:24:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028220201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "With your config on 0.9.4 you can just copy paste the three snippets above into your lua/custom/configs/lspconfig.lua and it works.\r\n\r\n```lua\r\n-- print(vim.inspect(vim.lsp.get_active_clients()[1].server_capabilities.executeCommandProvider.commands))\r\nM = {}\r\n\r\nlocal lspconfig = require \"lspconfig\"\r\nlocal default_config = require \"plugins.configs.lspconfig\"\r\nlocal lspconfigs = require \"lspconfig.configs\"\r\nlocal schema_store = require \"schemastore\"\r\nlocal on_attach = default_config.on_attach\r\n\r\n--- Returns the height of the buffer in the window\r\n---@param winnr integer\r\n---@return integer\r\nlocal function win_buf_height(winnr)\r\n  local buf = vim.api.nvim_win_get_buf(winnr)\r\n\r\n  -- handle nowrap\r\n  if not vim.wo[winnr].wrap then\r\n    return vim.api.nvim_buf_line_count(buf)\r\n  end\r\n\r\n  local width = vim.api.nvim_win_get_width(winnr)\r\n\r\n  -- Compute the height of the buffer in the window\r\n  local lines = vim.api.nvim_buf_get_lines(buf, 0, -1, false)\r\n  local height = 0\r\n  for _, l in ipairs(lines) do\r\n    height = height + math.max(1, (math.ceil(vim.fn.strwidth(l) / width)))\r\n  end\r\n  return height\r\nend\r\n\r\n--- Scrolls the window by delta lines\r\n---@param winnr integer\r\n---@param delta integer\r\nlocal function scroll(winnr, delta)\r\n  local info = vim.fn.getwininfo(winnr)[1] or {} -- get the window info\r\n  local top = info.topline or 1 -- get the top line\r\n  local buf = vim.api.nvim_win_get_buf(winnr) -- get the buffer\r\n  top = top + delta -- add the delta\r\n  top = math.max(top, 1) -- set the minimum line number to 1\r\n  -- set the maximum line number to the height of the buffer\r\n  top = math.min(top, win_buf_height(winnr) - info.height + 1)\r\n\r\n  vim.defer_fn(function()\r\n    vim.api.nvim_buf_call(buf, function() -- call the function in the buffer\r\n      -- scroll the buffer\r\n      vim.api.nvim_command('noautocmd silent! normal! ' .. top .. 'zt')\r\n      -- trigger the WinScrolled autocmd\r\n      vim.api.nvim_exec_autocmds('WinScrolled', { modeline = false })\r\n    end)\r\n  end, 0)\r\nend\r\n\r\n--- Overrides the default LSP floating window handler to add keymaps and window options.\r\n---@param handler fun(err: any, result: any, ctx: any, config: any): integer?, integer?\r\n---@return fun(err: any, result: any, ctx: any, config: any)\r\nlocal function float_handler(handler)\r\n  local limit = vim.o.lines * 0.5 -- limit the height of the floating window\r\n  return function(err, result, ctx, win_config) -- the new handler\r\n    local bufnr, winnr = handler(\r\n      err,\r\n      result,\r\n      ctx,\r\n      --- Override the default lsp floating window configuration\r\n      vim.tbl_deep_extend('force', win_config or {}, {\r\n        border = 'rounded',\r\n        -- set the max height of the floating window\r\n        max_height = math.floor(limit),\r\n        -- set the max width of the floating window\r\n        max_width = math.floor(vim.o.columns * 0.4),\r\n      })\r\n    )\r\n\r\n    -- return if the buffer or window is not created\r\n    if not bufnr or not winnr then\r\n      return\r\n    end\r\n\r\n    -- set the window's scrolloffset to 0\r\n    vim.wo[winnr].scrolloff = 0\r\n\r\n    -- stylua: ignore start\r\n    vim.keymap.set('n', '<C-f>', function() scroll(winnr, 4) end, { buffer = bufnr })\r\n    vim.keymap.set('n', '<C-b>', function() scroll(winnr, -4) end, { buffer = bufnr })\r\n    -- stylua: ignore end\r\n  end\r\nend\r\n\r\nvim.lsp.handlers['textDocument/hover'] = float_handler(vim.lsp.handlers.hover)\r\n\r\nM.on_attach = on_attach\r\n-- local capabilities = default_config.capabilities\r\n-- local capabilities = vim.lsp.protocol.make_client_capabilities()\r\nlocal capabilities = default_config.capabilities\r\nM.capabilities = capabilities\r\n-- rest of your lspconfig\r\n```",
            "created_at": "2024-03-30T20:09:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028458126",
            "id": 2028458126,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM5459CO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028458126/reactions"
            },
            "updated_at": "2024-03-30T20:09:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028458126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It did fix the problem of extremely big docs floating windows (that also covers the current line), which is great news, but the mapping after pressing `K` still don't appear and don't work.",
            "created_at": "2024-03-31T07:42:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028588751",
            "id": 2028588751,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM546c7P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028588751/reactions"
            },
            "updated_at": "2024-03-31T07:42:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028588751",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I can make a docker container to see if it works or not there. I don't understand how same config works differently on different machines with same Neovim version.",
            "created_at": "2024-03-31T07:43:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2028589097",
            "id": 2028589097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM546dAp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028589097/reactions"
            },
            "updated_at": "2024-03-31T07:43:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2028589097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "NONE",
            "body": "Try setting `buffer = true` instead of `buffer = bufnr` in the keybind",
            "created_at": "2024-04-01T18:25:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2030297741",
            "id": 2030297741,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM55A-KN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030297741/reactions"
            },
            "updated_at": "2024-04-01T18:25:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030297741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54562558?v=4",
                "events_url": "https://api.github.com/users/roycrippen4/events{/privacy}",
                "followers_url": "https://api.github.com/users/roycrippen4/followers",
                "following_url": "https://api.github.com/users/roycrippen4/following{/other_user}",
                "gists_url": "https://api.github.com/users/roycrippen4/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/roycrippen4",
                "id": 54562558,
                "login": "roycrippen4",
                "node_id": "MDQ6VXNlcjU0NTYyNTU4",
                "organizations_url": "https://api.github.com/users/roycrippen4/orgs",
                "received_events_url": "https://api.github.com/users/roycrippen4/received_events",
                "repos_url": "https://api.github.com/users/roycrippen4/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/roycrippen4/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/roycrippen4/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/roycrippen4"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thank you, now the keymaps work. Great success!",
            "created_at": "2024-04-01T21:26:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2030585221",
            "id": 2030585221,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM55CEWF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030585221/reactions"
            },
            "updated_at": "2024-04-01T21:26:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030585221",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "But now the new keymaps persist after the floating window is closed. Which also gives an error for normal use:\r\n\r\n```\r\nInvalid window id: 1003                                                                                                  \r\nstack traceback:                                                                                                                                                                                                     \r\n        [C]: in function 'nvim_win_get_buf'\r\nin function 'scroll'\r\n```\r\n\r\nI was able to \"fix\" it like this:\r\n\r\n<details><summary>\"fix\"</summary>\r\n\r\n```lua\r\n-- For use with <cr> and others with `feedkeys()` etc.\r\nfunction Escape_keycodes(str)\r\n    return vim.api.nvim_replace_termcodes(str, true, true, true)\r\nend\r\n\r\n--- Scrolls the window by delta lines\r\n---@param winnr integer\r\n---@param delta integer\r\nlocal function scroll(winnr, delta)\r\n  local info = vim.fn.getwininfo(winnr)[1] or {} -- get the window info\r\n  local top = info.topline or 1 -- get the top line\r\n  if not vim.api.nvim_win_is_valid(winnr) then\r\n    vim.keymap.del(\"n\", \"<c-f>\", { buffer = true })\r\n    vim.keymap.del(\"n\", \"<c-b>\", { buffer = true })\r\n    if delta > 0 then\r\n      vim.fn.feedkeys(Escape_keycodes \"<c-f>\")\r\n    else\r\n      vim.fn.feedkeys(Escape_keycodes \"<c-b>\")\r\n    end\r\n    return\r\n  end\r\n  local buf = vim.api.nvim_win_get_buf(winnr) -- get the buffer\r\n  top = top + delta -- add the delta\r\n  top = math.max(top, 1) -- set the minimum line number to 1\r\n  -- set the maximum line number to the height of the buffer\r\n  top = math.min(top, win_buf_height(winnr) - info.height + 1)\r\n\r\n  vim.defer_fn(function()\r\n    vim.api.nvim_buf_call(buf, function() -- call the function in the buffer\r\n      -- scroll the buffer\r\n      vim.api.nvim_command(\"noautocmd silent! normal! \" .. top .. \"zt\")\r\n      -- trigger the WinScrolled autocmd\r\n      vim.api.nvim_exec_autocmds(\"WinScrolled\", { modeline = false })\r\n    end)\r\n  end, 0)\r\nend\r\n```\r\n\r\n</details>",
            "created_at": "2024-04-01T22:24:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/27288#issuecomment-2030679555",
            "id": 2030679555,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27288",
            "node_id": "IC_kwDOAPphoM55CbYD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030679555/reactions"
            },
            "updated_at": "2024-04-01T22:24:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2030679555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
                "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
                "followers_url": "https://api.github.com/users/Andrew15-5/followers",
                "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
                "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Andrew15-5",
                "id": 37143421,
                "login": "Andrew15-5",
                "node_id": "MDQ6VXNlcjM3MTQzNDIx",
                "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
                "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
                "repos_url": "https://api.github.com/users/Andrew15-5/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Andrew15-5"
            }
        }
    ],
    "comments": 17,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27288/comments",
    "created_at": "2024-02-01T15:09:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/27288/events",
    "html_url": "https://github.com/neovim/neovim/issues/27288",
    "id": 2112756492,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows",
            "id": 3234818716,
            "name": "float",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/float"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/27288/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 218,
        "created_at": "2014-11-26T22:13:11Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Zero priority; no timeline. Promote an item from this state by taking ownership of it.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/9",
        "id": 881978,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/9/labels",
        "node_id": "MDk6TWlsZXN0b25lODgxOTc4",
        "number": 9,
        "open_issues": 234,
        "state": "open",
        "title": "unplanned",
        "updated_at": "2024-04-04T17:45:02Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/9"
    },
    "node_id": "I_kwDOAPphoM597hsM",
    "number": 27288,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/27288/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/27288/timeline",
    "title": "Ability to scroll hover docs floating window without entering it",
    "updated_at": "2024-04-03T21:42:41Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/27288",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/37143421?v=4",
        "events_url": "https://api.github.com/users/Andrew15-5/events{/privacy}",
        "followers_url": "https://api.github.com/users/Andrew15-5/followers",
        "following_url": "https://api.github.com/users/Andrew15-5/following{/other_user}",
        "gists_url": "https://api.github.com/users/Andrew15-5/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Andrew15-5",
        "id": 37143421,
        "login": "Andrew15-5",
        "node_id": "MDQ6VXNlcjM3MTQzNDIx",
        "organizations_url": "https://api.github.com/users/Andrew15-5/orgs",
        "received_events_url": "https://api.github.com/users/Andrew15-5/received_events",
        "repos_url": "https://api.github.com/users/Andrew15-5/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Andrew15-5/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Andrew15-5/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Andrew15-5"
    }
}