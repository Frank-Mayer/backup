{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\r\n\r\nThe built-in comment function was added in #28176, but I have some concerns that I would like to report.\r\n\r\nIf there are no spaces in the 'commentstring', there will be no spaces in the comment.\r\n\r\nThis behavior of no whitespaces seems weird, since commenting in VSCode for example, always results in with whitespaces.\r\nMaybe almost anybody wants to use comment with whitespaces.\r\n\r\nA easy examination of the default file type plugin shows that 61 filetypes do not use whitespaces.\r\nUsers who want to include spaces need to modify the 'commentstring' of these 60 filetypes, which is very cumbersome.\r\n\r\n```\r\n$ grep -P 'set.* commentstring=' -R /usr/share/nvim/runtime/ftplugin | grep -v ' %s' | cut -d: -f 1 | sort | uniq | grep -oP '\\w+(?=.vim)' | tr '\\n' ' '\r\nabaqus asm astro bitbake cgdbrc cobol csh cvsrc deb822sources debsources desktop dtd dtrace erlang eruby fennel fish fstab gdb groovy group hamster html javascript java jq jsonc json ld liquid lisp markdown mma modula2 modula3 nroff obse ocaml odin openvpn pascal passwd pdf perl php ps1 ps1xml qml racket raku rust scdoc scheme tcl text typescript ftplugin vim vroom wat xml \r\n```\r\n\r\nTwo other well-known plugins are listed below, both of them have the behavior of inserting spaces.\r\n\r\nhttps://github.com/tpope/vim-commentary\r\nhttps://github.com/numToStr/Comment.nvim\r\n\r\nIt seems to me that either action is needed to resolve this issue.\r\n\r\n1. Put whitespaces to 'commentstring' in the all filetype plugin configs\r\n2. Change the behavior of built-in commenting\r\n\r\n1 is more flexible in configuration, but requires modification of many filetype plugins.\r\n\r\n\r\n### Steps to reproduce\r\n\r\njavascript\r\n```\r\n$ echo 'const foo = 1' | nvim --clean -c 'set filetype=javascript' -\r\n> press gcc\r\n//const foo = 1\r\n```\r\n\r\nhtml\r\n```\r\n$ echo '<html></html>' | nvim --clean -c 'set filetype=html' -\r\n> press gcc\r\n<!--<html></html>-->\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\njavascript\r\n\r\n```\r\n// const foo = 1\r\n```\r\n\r\nhtml\r\n```\r\n<!-- <html></html> -->\r\n```\r\n\r\nThe following two plugins have this behavior.\r\nhttps://github.com/tpope/vim-commentary\r\nhttps://github.com/numToStr/Comment.nvim\r\n\r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.10.0 commit 0323ea8664fa85935b5b58ae251af0d5b986cbd9\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nno\r\n\r\n### Operating system/version\r\n\r\nubuntu 22\r\n\r\n### Terminal name/version\r\n\r\nwezterm\r\n\r\n### $TERM environment variable\r\n\r\ntmux-256color\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": "2024-05-07T08:50:27Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "> If there are no spaces in the 'commentstring', there will be no spaces in the comment.\r\n\r\nThis is intentional. Feel free to contact the filetype plugin maintainers to change this in Vim.",
            "created_at": "2024-05-07T08:50:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/28658#issuecomment-2097780830",
            "id": 2097780830,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28658",
            "node_id": "IC_kwDOAPphoM59CZhe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097780830/reactions"
            },
            "updated_at": "2024-05-07T08:50:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097780830",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Okay, I'll use another plugin since it doesn't seem to solve the problem.\r\nI just don't think it is appropriate as the default behavior.",
            "created_at": "2024-05-07T08:54:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/28658#issuecomment-2097787423",
            "id": 2097787423,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28658",
            "node_id": "IC_kwDOAPphoM59CbIf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097787423/reactions"
            },
            "updated_at": "2024-05-07T08:54:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097787423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20206121?v=4",
                "events_url": "https://api.github.com/users/umlx5h/events{/privacy}",
                "followers_url": "https://api.github.com/users/umlx5h/followers",
                "following_url": "https://api.github.com/users/umlx5h/following{/other_user}",
                "gists_url": "https://api.github.com/users/umlx5h/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/umlx5h",
                "id": 20206121,
                "login": "umlx5h",
                "node_id": "MDQ6VXNlcjIwMjA2MTIx",
                "organizations_url": "https://api.github.com/users/umlx5h/orgs",
                "received_events_url": "https://api.github.com/users/umlx5h/received_events",
                "repos_url": "https://api.github.com/users/umlx5h/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/umlx5h/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/umlx5h/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/umlx5h"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It is _exactly_ because it's default behavior that this is appropriate. It's supposed to be a minimal implementation leveraging existing builtin functionality, not being a VS Code kitchen sink. And, yes, using a more full-featured plugin because you need the additional functionality is perfectly fine (and also intended use).",
            "created_at": "2024-05-07T08:58:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/28658#issuecomment-2097795008",
            "id": 2097795008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28658",
            "node_id": "IC_kwDOAPphoM59Cc_A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097795008/reactions"
            },
            "updated_at": "2024-05-07T08:58:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097795008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It is exactly because it's default behavior that this is appropriate.\r\n\r\nit may be appropriate in terms of implementation, but it is not appropriate when looking at just the function of commenting. When considered from the user's perspective.\r\n\r\nVSCode is just an example of this. If you know an editor that does not use spaces, please let me know.\r\n\r\nI understand that the filetype plugin is managed by another people and there is nothing you can do about it.\r\n",
            "created_at": "2024-05-07T09:15:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/28658#issuecomment-2097828555",
            "id": 2097828555,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28658",
            "node_id": "IC_kwDOAPphoM59ClLL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097828555/reactions"
            },
            "updated_at": "2024-05-07T09:16:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097828555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20206121?v=4",
                "events_url": "https://api.github.com/users/umlx5h/events{/privacy}",
                "followers_url": "https://api.github.com/users/umlx5h/followers",
                "following_url": "https://api.github.com/users/umlx5h/following{/other_user}",
                "gists_url": "https://api.github.com/users/umlx5h/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/umlx5h",
                "id": 20206121,
                "login": "umlx5h",
                "node_id": "MDQ6VXNlcjIwMjA2MTIx",
                "organizations_url": "https://api.github.com/users/umlx5h/orgs",
                "received_events_url": "https://api.github.com/users/umlx5h/received_events",
                "repos_url": "https://api.github.com/users/umlx5h/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/umlx5h/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/umlx5h/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/umlx5h"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> When considered from the user's perspective.\r\n\r\nThat is not the only relevant perspective, though, and this was chosen as a deliberate compromise. \r\n\r\n> I understand that the filetype plugin is managed by another people and there is nothing you can do about it.\r\n\r\nBut _you_ (who clearly care about this) can: contact the maintainer and ask them to add spaces. If they do, the changes will end up here and make you happy.\r\n",
            "created_at": "2024-05-07T09:17:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/28658#issuecomment-2097832598",
            "id": 2097832598,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28658",
            "node_id": "IC_kwDOAPphoM59CmKW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097832598/reactions"
            },
            "updated_at": "2024-05-07T09:17:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2097832598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "FWIW, the built in Vim comment plugin puts in the spaces, so nvim's behavior here differs from upstream Vim. ",
            "created_at": "2024-05-21T21:26:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/28658#issuecomment-2123469528",
            "id": 2123469528,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28658",
            "node_id": "IC_kwDOAPphoM5-kZLY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2123469528/reactions"
            },
            "updated_at": "2024-05-21T21:26:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2123469528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/182554?v=4",
                "events_url": "https://api.github.com/users/BoltsJ/events{/privacy}",
                "followers_url": "https://api.github.com/users/BoltsJ/followers",
                "following_url": "https://api.github.com/users/BoltsJ/following{/other_user}",
                "gists_url": "https://api.github.com/users/BoltsJ/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/BoltsJ",
                "id": 182554,
                "login": "BoltsJ",
                "node_id": "MDQ6VXNlcjE4MjU1NA==",
                "organizations_url": "https://api.github.com/users/BoltsJ/orgs",
                "received_events_url": "https://api.github.com/users/BoltsJ/received_events",
                "repos_url": "https://api.github.com/users/BoltsJ/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/BoltsJ/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BoltsJ/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/BoltsJ"
            }
        },
        {
            "author_association": "NONE",
            "body": "In case someone finds this having the same issue: if you want to have spaces in commentstring for every filetype without having to contact maintainers for every odd ftplugin, it can be done quite easily with an autocommand:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd('FileType', {\r\n    group = vim.api.nvim_create_augroup('commentstring_fix', {}),\r\n    callback = function(ctx)\r\n        local cms_value = vim.api.nvim_get_option_value(\r\n            'commentstring',\r\n            {buf = ctx.buf}\r\n        )\r\n\r\n        -- Note that this is the literal '%s'.\r\n        -- All other '%s' in this function are patterns.\r\n        local s_start, s_end = string.find(cms_value, '%s', 1, true)\r\n\r\n        if s_start == nil then\r\n            return\r\n        end\r\n\r\n        local s_before = s_start - 1\r\n        local s_after = s_end + 1\r\n        local s_prepend = ''\r\n        local s_append = ''\r\n\r\n        if s_start > 1\r\n            and string.find(\r\n                string.sub(cms_value, s_before, s_before),\r\n                '%s'\r\n            ) == nil\r\n        then\r\n            s_prepend = ' '\r\n        end\r\n\r\n        if s_end < #cms_value\r\n            and string.find(\r\n                string.sub(cms_value, s_after, s_after),\r\n                '%s'\r\n            ) == nil\r\n        then\r\n            s_append = ' '\r\n        end\r\n\r\n        if s_prepend ~= '' or s_append ~= '' then\r\n            vim.api.nvim_set_option_value(\r\n                'commentstring',\r\n                table.concat{\r\n                    string.sub(cms_value, 1, s_before),\r\n                    s_prepend,\r\n                    '%s',\r\n                    s_append,\r\n                    string.sub(cms_value, s_after)\r\n                },\r\n                {buf = ctx.buf}\r\n            )\r\n        end\r\n    end\r\n})\r\n```",
            "created_at": "2024-06-07T21:41:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/28658#issuecomment-2155600124",
            "id": 2155600124,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28658",
            "node_id": "IC_kwDOAPphoM6Ae9j8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2155600124/reactions"
            },
            "updated_at": "2024-06-07T21:41:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2155600124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/959502?v=4",
                "events_url": "https://api.github.com/users/mkalinski/events{/privacy}",
                "followers_url": "https://api.github.com/users/mkalinski/followers",
                "following_url": "https://api.github.com/users/mkalinski/following{/other_user}",
                "gists_url": "https://api.github.com/users/mkalinski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mkalinski",
                "id": 959502,
                "login": "mkalinski",
                "node_id": "MDQ6VXNlcjk1OTUwMg==",
                "organizations_url": "https://api.github.com/users/mkalinski/orgs",
                "received_events_url": "https://api.github.com/users/mkalinski/received_events",
                "repos_url": "https://api.github.com/users/mkalinski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mkalinski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mkalinski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mkalinski"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28658/comments",
    "created_at": "2024-05-07T08:47:04Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28658/events",
    "html_url": "https://github.com/neovim/neovim/issues/28658",
    "id": 2282657533,
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "current behavior is by design, and change is not desired",
            "id": 77997479,
            "name": "closed:wontfix",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3OQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:wontfix"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28658/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6IDpb9",
    "number": 28658,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28658/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28658/timeline",
    "title": "built-in commenting does not use whitespaces depending on 'commentstring'",
    "updated_at": "2024-06-07T21:41:23Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28658",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20206121?v=4",
        "events_url": "https://api.github.com/users/umlx5h/events{/privacy}",
        "followers_url": "https://api.github.com/users/umlx5h/followers",
        "following_url": "https://api.github.com/users/umlx5h/following{/other_user}",
        "gists_url": "https://api.github.com/users/umlx5h/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/umlx5h",
        "id": 20206121,
        "login": "umlx5h",
        "node_id": "MDQ6VXNlcjIwMjA2MTIx",
        "organizations_url": "https://api.github.com/users/umlx5h/orgs",
        "received_events_url": "https://api.github.com/users/umlx5h/received_events",
        "repos_url": "https://api.github.com/users/umlx5h/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/umlx5h/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/umlx5h/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/umlx5h"
    }
}