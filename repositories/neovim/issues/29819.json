{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI have a buffer with injected languages (e.g. Lua with injected Vim script) and I would like to detect this fact automatically. Normally I can evaluate `vim.tbl_keys(vim.treesitter.get_parser():children())` to get a list of children, but this fails if I am evaluating that code in a headless instance.\r\n\r\nTo provide some context, I am trying to automate testing in [HiPhish/rainbow-delimiters.nvim](https://github.com/hiphish/rainbow-delimiters.nvim). Currently I have a bunch of sample files, and I want to record all delimiter extmarks in a JSON file. To do this I open each sample file in a separate Neovim process and get all extmarks which belong to the namespace of my plugin. However, each language has its own namespace, so I need a list of languages first.\n\n### Steps to reproduce\n\nTake the following Lua file:\r\n\r\n```lua\r\nprint('Hello from Lua!')\r\nvim.cmd [[\r\n\techo 'Hello from Vim!'\r\n]]\r\n```\r\n\r\nOpen it up in Neovim, execute `lua =vim.tbl_keys(vim.treesitter.get_parser():children())` and you get `{'vim'}` as expected.\r\n\r\nNow take the following Lua script and `:source %` it:\r\n\r\n```lua\r\nlocal jobopts = {rpc = true, width = 80, height = 40}\r\nlocal command = {'nvim', '--embed', '--headless'}\r\nlocal jobid = vim.fn.jobstart(command, jobopts)\r\nvim.rpcrequest(jobid, 'nvim_cmd', {cmd = 'edit', args = {'derp.lua'}}, {})\r\nlocal children = vim.rpcrequest(jobid, 'nvim_exec_lua', 'return vim.tbl_keys(vim.treesitter.get_parser():children())', {})\r\nvim.rpcnotify(jobid, 'nvim_cmd', {cmd = 'quitall', bang = true}, {})\r\n\r\nprint(vim.inspect(children))\r\n```\r\n\r\nThe result is `{}`. The script will start an embedded Neovim process, open the Lua file and ask it for a list of child parsers.\n\n### Expected behavior\n\nThe script should also print `{'vim'}`.\n\n### Neovim version (nvim -v)\n\nNVIM v0.10.0\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nVoid Linux\n\n### Terminal name/version\n\nalacritty 0.13.2\n\n### $TERM environment variable\n\nalacritty\n\n### Installation\n\nVoid packages.",
    "closed_at": "2024-07-21T12:15:14Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You need to make sure that the tree is parsed first (an active highlighter will do that for you, but you should never assume that -- if you're running headless, obviously no syntax highlighting will happen).",
            "created_at": "2024-07-21T12:02:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/29819#issuecomment-2241584769",
            "id": 2241584769,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29819",
            "node_id": "IC_kwDOAPphoM6Fm96B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241584769/reactions"
            },
            "updated_at": "2024-07-21T12:02:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241584769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> You need to make sure that the tree is parsed first\r\n\r\nThank you so much! Here is the updated script which works:\r\n\r\n```lua\r\nlocal jobopts = {rpc = true, width = 80, height = 40}\r\nlocal command = {'nvim', '--embed', '--headless'}\r\nlocal jobid = vim.fn.jobstart(command, jobopts)\r\nvim.rpcrequest(jobid, 'nvim_cmd', {cmd = 'edit', args = {'derp.lua'}}, {})\r\n-- Changes begin here\r\nvim.rpcrequest(jobid, 'nvim_exec_lua', 'parser = vim.treesitter.get_parser()', {})\r\nvim.rpcrequest(jobid, 'nvim_exec_lua', 'parser:parse(true)', {})\r\nlocal children = vim.rpcrequest(jobid, 'nvim_exec_lua', 'return vim.tbl_keys(parser:children())', {})\r\n-- Changes end here\r\nvim.rpcnotify(jobid, 'nvim_cmd', {cmd = 'quitall', bang = true}, {})\r\n\r\nprint(vim.inspect(children))\r\n```",
            "created_at": "2024-07-21T12:15:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/29819#issuecomment-2241589369",
            "id": 2241589369,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29819",
            "node_id": "IC_kwDOAPphoM6Fm_B5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241589369/reactions"
            },
            "updated_at": "2024-07-21T12:15:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241589369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
                "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
                "followers_url": "https://api.github.com/users/HiPhish/followers",
                "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
                "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/HiPhish",
                "id": 4954650,
                "login": "HiPhish",
                "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
                "organizations_url": "https://api.github.com/users/HiPhish/orgs",
                "received_events_url": "https://api.github.com/users/HiPhish/received_events",
                "repos_url": "https://api.github.com/users/HiPhish/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/HiPhish"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29819/comments",
    "created_at": "2024-07-21T11:59:36Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/29819/events",
    "html_url": "https://github.com/neovim/neovim/issues/29819",
    "id": 2421368240,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/29819/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6QUyWw",
    "number": 29819,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/29819/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/29819/timeline",
    "title": "[Treesitter] Detecting injected languages in headless Neovim instance fails",
    "updated_at": "2024-07-21T12:15:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/29819",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4954650?v=4",
        "events_url": "https://api.github.com/users/HiPhish/events{/privacy}",
        "followers_url": "https://api.github.com/users/HiPhish/followers",
        "following_url": "https://api.github.com/users/HiPhish/following{/other_user}",
        "gists_url": "https://api.github.com/users/HiPhish/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/HiPhish",
        "id": 4954650,
        "login": "HiPhish",
        "node_id": "MDQ6VXNlcjQ5NTQ2NTA=",
        "organizations_url": "https://api.github.com/users/HiPhish/orgs",
        "received_events_url": "https://api.github.com/users/HiPhish/received_events",
        "repos_url": "https://api.github.com/users/HiPhish/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/HiPhish/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/HiPhish/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/HiPhish"
    }
}