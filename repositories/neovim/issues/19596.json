{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Neovim version (nvim -v)\r\n\r\nN/A\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nN/A\r\n\r\n### Operating system/version\r\n\r\nsourcehut CI freebsd/latest (for the backtrace in this issue) / GitHub CI windows-2019 (appears most frequently) / possibly other CI jobs\r\n\r\n### Terminal name/version\r\n\r\nN/A\r\n\r\n### $TERM environment variable\r\n\r\nN/A\r\n\r\n### Installation\r\n\r\nN/A\r\n\r\n### How to reproduce the issue\r\n\r\nRun CI\r\n\r\n### Expected behavior\r\n\r\nTest \":checkhealth completions can be listed via getcompletion()\" should not intermittently crash\r\n\r\n### Actual behavior\r\n\r\nTest \":checkhealth completions can be listed via getcompletion()\" intermittently crashes on CI\r\n\r\nLogs on sourcehut CI:\r\n```\r\nRUN      T2974 :checkhealth completions can be listed via getcompletion(): 144.90 ms ERR\r\ntest/functional/helpers.lua:106: EOF was received from Nvim. Likely the Nvim process crashed.\r\n\r\nstack traceback:\r\n\ttest/functional/helpers.lua:106: in function 'getcompletion'\r\n\ttest/functional/plugin/health_spec.lua:40: in function <test/functional/plugin/health_spec.lua:35>\r\n\r\n\r\n============================ Core file ./nvim.core ============================\r\n[New LWP 100164]\r\n\r\nwarning: Could not load shared library symbols for [vdso].\r\nDo you need \"set solib-search-path\" or \"set sysroot\"?\r\nCore was generated by `/usr/home/build/neovim/build/bin/nvim -u NONE -i NONE --cmd set shortmess+=IS ba'.\r\nProgram terminated with signal SIGBUS, Bus error.\r\nObject-specific hardware error.\r\n#0  0x0000000800b23df4 in strcmp () from /lib/libc.so.7\r\n\r\nThread 1 (LWP 100164):\r\n#0  0x0000000800b23df4 in strcmp () from /lib/libc.so.7\r\nNo symbol table info available.\r\n#1  0x0000000800b3874b in ?? () from /lib/libc.so.7\r\nNo symbol table info available.\r\n#2  0x0000000000588d11 in ExpandGeneric (xp=<optimized out>, regmatch=<optimized out>, num_file=<optimized out>, file=0x7fffffffc7e0, func=0x588a10 <get_healthcheck_names>, escaped=0) at /usr/home/build/neovim/src/nvim/ex_getln.c:5402\r\n        i = <optimized out>\r\n        count = <optimized out>\r\n        str = <optimized out>\r\n#3  0x000000000057d786 in ExpandFromContext (xp=0x7fffffffc7a0, pat=0x801208468 \"^vim\", num_file=0x7fffffffc7d8, file=0x7fffffffc7e0, options=<optimized out>) at /usr/home/build/neovim/src/nvim/ex_getln.c:5326\r\n        i = <optimized out>\r\n        tab = {{context = 1, func = 0x567c50 <get_command_name>, ic = 0, escaped = 1}, {context = 37, func = 0x56bf20 <get_behave_arg>, ic = 1, escaped = 1}, {context = 48, func = 0x56bf60 <get_mapclear_arg>, ic = 1, escaped = 1}, {context = 47, func = 0x56bf40 <get_messages_arg>, ic = 1, escaped = 1}, {context = 42, func = 0x5889c0 <get_history_arg>, ic = 1, escaped = 1}, {context = 22, func = 0x568ae0 <get_user_commands>, ic = 0, escaped = 1}, {context = 45, func = 0x568ac0 <get_user_cmd_addr_type>, ic = 0, escaped = 1}, {context = 23, func = 0x568bf0 <get_user_cmd_flags>, ic = 0, escaped = 1}, {context = 24, func = 0x568c10 <get_user_cmd_nargs>, ic = 0, escaped = 1}, {context = 25, func = 0x568c30 <get_user_cmd_complete>, ic = 0, escaped = 1}, {context = 15, func = 0x4ea6d0 <get_user_var_name>, ic = 0, escaped = 1}, {context = 18, func = 0x509db0 <get_function_name>, ic = 0, escaped = 1}, {context = 19, func = 0x537ee0 <get_user_func_name>, ic = 0, escaped = 1}, {context = 20, func = 0x509f00 <get_expr_name>, ic = 0, escaped = 1}, {context = 11, func = 0x61f190 <get_menu_name>, ic = 0, escaped = 1}, {context = 21, func = 0x61f2d0 <get_menu_names>, ic = 0, escaped = 1}, {context = 12, func = 0x742cc0 <get_syntax_name>, ic = 1, escaped = 1}, {context = 44, func = 0x743920 <get_syntime_arg>, ic = 1, escaped = 1}, {context = 13, func = 0x5be820 <get_highlight_name>, ic = 1, escaped = 1}, {context = 10, func = 0x49ffe0 <expand_get_event_name>, ic = 1, escaped = 1}, {context = 14, func = 0x49fc10 <expand_get_augroup_name>, ic = 1, escaped = 1}, {context = 34, func = 0x5bed10 <get_cscope_name>, ic = 1, escaped = 1}, {context = 35, func = 0x713250 <get_sign_name>, ic = 1, escaped = 1}, {context = 36, func = 0x554d50 <get_profile_name>, ic = 1, escaped = 1}, {context = 27, func = 0x55b720 <get_lang_arg>, ic = 1, escaped = 0}, {context = 41, func = 0x55b980 <get_locales>, ic = 1, escaped = 0}, {context = 26, func = 0x67ef10 <get_env_name>, ic = 1, escaped = 1}, {context = 43, func = 0x6892d0 <get_users>, ic = 1, escaped = 0}, {context = 49, func = 0x558570 <get_arglist_name>, ic = 1, escaped = 0}, {context = 51, func = 0x588a10 <get_healthcheck_names>, ic = 1, escaped = 0}}\r\n        regmatch = {regprog = 0x80124f480, startp = {0x8012084b8 \"vim.lsp\", 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, endp = {0x8012084bb \".lsp\", 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, rm_ic = true}\r\n        flags = 57\r\n        ret = <optimized out>\r\n        tofree = <optimized out>\r\n#4  0x000000000057ca34 in ExpandOne (xp=<optimized out>, str=0x6c2e74696e692f60 <error: Cannot access memory at address 0x6c2e74696e692f60>, orig=0x656572742e6d6976 <error: Cannot access memory at address 0x656572742e6d6976>, options=126, mode=<optimized out>) at /usr/home/build/neovim/src/nvim/ex_getln.c:4207\r\n        findex = 0\r\n        orig_save = 0x0\r\n        orig_saved = 1\r\n        ss = 0x0\r\n        non_suf_match = <optimized out>\r\n        i = <optimized out>\r\n        ptr_ = <optimized out>\r\n        len = <optimized out>\r\n        mb_len = <optimized out>\r\n        c0 = <optimized out>\r\n        ci = <optimized out>\r\n        len = <optimized out>\r\n#5  0x0000000000523c8e in f_getcompletion (argvars=<optimized out>, rettv=0x7fffffffcb28, fptr=<optimized out>) at /usr/home/build/neovim/src/nvim/eval/funcs.c:3178\r\n        xpc = {xp_pattern = 0x801208470 \"^vim\", xp_context = 51, xp_pattern_len = 4, xp_arg = 0x0, xp_luaref = 0, xp_script_ctx = {sc_sid = 0, sc_seq = 0, sc_lnum = 0}, xp_backslash = 0, xp_shell = 0, xp_numfiles = 3, xp_col = 0, xp_files = 0x80121ae60, xp_line = 0x0}\r\n        options = 18984560\r\n        filtered = <optimized out>\r\n        type = 0x801220610 \"checkhealth\"\r\n        pattern = <optimized out>\r\n        pat = 0x801208468 \"^vim\"\r\n#6  0x000000000050a01a in call_internal_func (fname=0x8012202d0 \"getcompletion\", argcount=2, argvars=0x7fffffffcb40, rettv=0x7fffffffcb28) at /usr/home/build/neovim/src/nvim/eval/funcs.c:197\r\n        fdef = 0x80121ae70\r\n#7  0x00000000005326dc in call_func (funcname=<optimized out>, len=<optimized out>, rettv=0x7fffffffcb28, argcount_in=2, argvars_in=0x7fffffffcb40, funcexe=0x7fffffffcaf0) at /usr/home/build/neovim/src/nvim/eval/userfunc.c:1588\r\n        rfname = <optimized out>\r\n        fname_buf = \"\\320i#\\001\\b\\000\\000\\000\\060\\363+\\001\\b\\000\\000\\000\\320\\312\\377\\377\\377\\177\\000\\000\\247\\252\\071\\000\\000\\000\\000\\000c\\314(_N\\237\\070\", <incomplete sequence \\340>\r\n        argv = {{v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = 1818850658, v_lock = (unknown: 0x64), vval = {v_number = 34367962120, v_bool = (unknown: 0x7d7c08), v_special = (unknown: 0x7d7c08), v_float = 1.6980029401065297e-313, v_string = 0x8007d7c08 \"z\\270\", <incomplete sequence \\325>, v_list = 0x8007d7c08, v_dict = 0x8007d7c08, v_partial = 0x8007d7c08, v_blob = 0x8007d7c08}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = 1596509283, v_lock = (VAR_FIXED | unknown: 0x20389f4c), vval = {v_number = 140737488341615, v_bool = (kBoolVarTrue | unknown: 0xffffca6e), v_special = (unknown: 0xffffca6f), v_float = 6.9533558071574921e-310, v_string = 0x7fffffffca6f \"\", v_list = 0x7fffffffca6f, v_dict = 0x7fffffffca6f, v_partial = 0x7fffffffca6f, v_blob = 0x7fffffffca6f}}, {v_type = 16817120, v_lock = (unknown: 0x8), vval = {v_number = 160, v_bool = (unknown: 0xa0), v_special = (unknown: 0xa0), v_float = 7.9050503334599447e-322, v_string = 0xa0 <error: Cannot access memory at address 0xa0>, v_list = 0xa0, v_dict = 0xa0, v_partial = 0xa0, v_blob = 0xa0}}, {v_type = 4294967295, v_lock = VAR_UNLOCKED, vval = {v_number = 34372105952, v_bool = (unknown: 0xbcb6e0), v_special = (unknown: 0xbcb6e0), v_float = 1.6982076726098634e-313, v_string = 0x800bcb6e0 \"\\b\", v_list = 0x800bcb6e0, v_dict = 0x800bcb6e0, v_partial = 0x800bcb6e0, v_blob = 0x800bcb6e0}}, {v_type = 4294953392, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 6404428, v_bool = (unknown: 0x61b94c), v_special = (unknown: 0x61b94c), v_float = 3.1642078560637629e-317, v_string = 0x61b94c <xmalloc+28> \"H\\205\\300uP\\200=m@\\033\", v_list = 0x61b94c <xmalloc+28>, v_dict = 0x61b94c <xmalloc+28>, v_partial = 0x61b94c <xmalloc+28>, v_blob = 0x61b94c <xmalloc+28>}}, {v_type = 11, v_lock = VAR_UNLOCKED, vval = {v_number = 140737488341648, v_bool = (unknown: 0xffffca90), v_special = (unknown: 0xffffca90), v_float = 6.9533558071591225e-310, v_string = 0x7fffffffca90 \"\\004\", v_list = 0x7fffffffca90, v_dict = 0x7fffffffca90, v_partial = 0x7fffffffca90, v_blob = 0x7fffffffca90}}, {v_type = 4294953600, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 4683615, v_bool = (kBoolVarTrue | unknown: 0x47775e), v_special = (unknown: 0x47775f), v_float = 2.3140132698467499e-317, v_string = 0x47775f <object_to_vim+223> \"M\\211e\\b\\351\\026\\004\", v_list = 0x47775f <object_to_vim+223>, v_dict = 0x47775f <object_to_vim+223>, v_partial = 0x47775f <object_to_vim+223>, v_blob = 0x47775f <object_to_vim+223>}}, {v_type = 4294953583, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 140737488341614, v_bool = (unknown: 0xffffca6e), v_special = (unknown: 0xffffca6e), v_float = 6.9533558071574427e-310, v_string = 0x7fffffffca6e \"\", v_list = 0x7fffffffca6e, v_dict = 0x7fffffffca6e, v_partial = 0x7fffffffca6e, v_blob = 0x7fffffffca6e}}, {v_type = VAR_UNKNOWN, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 34376518016, v_bool = (unknown: 0x1000980), v_special = (unknown: 0x1000980), v_float = 1.6984256575348287e-313, v_string = 0x801000980 \"\\001\", v_list = 0x801000980, v_dict = 0x801000980, v_partial = 0x801000980, v_blob = 0x801000980}}, {v_type = 4294953648, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 4090448939, v_bool = (kBoolVarTrue | unknown: 0xf3cf4c2a), v_special = (unknown: 0xf3cf4c2b), v_float = 2.0209502968276767e-314, v_string = 0xf3cf4c2b <error: Cannot access memory at address 0xf3cf4c2b>, v_list = 0xf3cf4c2b, v_dict = 0xf3cf4c2b, v_partial = 0xf3cf4c2b, v_blob = 0xf3cf4c2b}}, {v_type = 4294953520, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 34369494090, v_bool = (unknown: 0x94dc4a), v_special = (unknown: 0x94dc4a), v_float = 1.6980786294812756e-313, v_string = 0x80094dc4a \"H\\211\\330H\\203\\304\\b[A\\\\A]A^A_]\\303\\017\\037@\", v_list = 0x80094dc4a, v_dict = 0x80094dc4a, v_partial = 0x80094dc4a, v_blob = 0x80094dc4a}}, {v_type = 9755648, v_lock = (unknown: 0x8), vval = {v_number = 140737488342416, v_bool = (unknown: 0xffffcd90), v_special = (unknown: 0xffffcd90), v_float = 6.9533558071970668e-310, v_string = 0x7fffffffcd90 \"\\377\\377\\377\\377\", v_list = 0x7fffffffcd90, v_dict = 0x7fffffffcd90, v_partial = 0x7fffffffcd90, v_blob = 0x7fffffffcd90}}, {v_type = VAR_NUMBER, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}}\r\n        error = 0\r\n        ret = 0\r\n        tofree = <optimized out>\r\n        fp = <optimized out>\r\n        argvars = <optimized out>\r\n        argcount = <optimized out>\r\n        name = 0x8012202d0 \"getcompletion\"\r\n        fname = 0x8012202b0 \"vim.treesitter\"\r\n        argv_base = 0\r\n        argv_clear = <optimized out>\r\n        selfdict = 0x0\r\n        partial = <optimized out>\r\n#8  0x000000000049476d in _call_function (fn=..., args=..., self=0x656572742e6d6976, err=0x7fffffffcd90) at /usr/home/build/neovim/src/nvim/api/vimscript.c:189\r\n        rettv = {v_type = VAR_NUMBER, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}\r\n        funcexe = {argv_func = 0x0, firstline = 1, lastline = 1, doesrange = 0x0, evaluate = true, partial = 0x0, selfdict = 0x0, basetv = 0x0}\r\n        saved_msg_list = 0x0\r\n        private_msg_list = 0x0\r\n        recursive = 1\r\n        vim_args = {{v_type = VAR_STRING, v_lock = VAR_UNLOCKED, vval = {v_number = 34378646640, v_bool = (unknown: 0x1208470), v_special = (unknown: 0x1208470), v_float = 1.69853082553396e-313, v_string = 0x801208470 \"^vim\", v_list = 0x801208470, v_dict = 0x801208470, v_partial = 0x801208470, v_blob = 0x801208470}}, {v_type = VAR_STRING, v_lock = VAR_UNLOCKED, vval = {v_number = 34378745360, v_bool = (unknown: 0x1220610), v_special = (unknown: 0x1220610), v_float = 1.6985357029500158e-313, v_string = 0x801220610 \"checkhealth\", v_list = 0x801220610, v_dict = 0x801220610, v_partial = 0x801220610, v_blob = 0x801220610}}, {v_type = VAR_UNKNOWN, v_lock = VAR_LOCKED, vval = {v_number = 2, v_bool = (unknown: 0x2), v_special = (unknown: 0x2), v_float = 9.8813129168249309e-324, v_string = 0x2 <error: Cannot access memory at address 0x2>, v_list = 0x2, v_dict = 0x2, v_partial = 0x2, v_blob = 0x2}}, {v_type = 1596509283, v_lock = (VAR_FIXED | unknown: 0x20389f4c), vval = {v_number = 140737488342480, v_bool = (unknown: 0xffffcdd0), v_special = (unknown: 0xffffcdd0), v_float = 6.9533558072002288e-310, v_string = 0x7fffffffcdd0 <incomplete sequence \\360\\152\\143>, v_list = 0x7fffffffcdd0, v_dict = 0x7fffffffcdd0, v_partial = 0x7fffffffcdd0, v_blob = 0x7fffffffcdd0}}, {v_type = 18984544, v_lock = (VAR_LOCKED | unknown: 0x7cd800), vval = {v_number = 8181584, v_bool = (unknown: 0x7cd750), v_special = (unknown: 0x7cd750), v_float = 4.0422395829644093e-317, v_string = 0x7cd750 <main_loop> \"P\\327|\", v_list = 0x7cd750 <main_loop>, v_dict = 0x7cd750 <main_loop>, v_partial = 0x7cd750 <main_loop>, v_blob = 0x7cd750 <main_loop>}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 1, v_bool = kBoolVarTrue, v_special = (unknown: 0x1), v_float = 4.9406564584124654e-324, v_string = 0x1 <error: Cannot access memory at address 0x1>, v_list = 0x1, v_dict = 0x1, v_partial = 0x1, v_blob = 0x1}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = 4294954064, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 5501733, v_bool = (kBoolVarTrue | unknown: 0x53f324), v_special = (unknown: 0x53f325), v_float = 2.7182172678910989e-317, v_string = 0x53f325 <loop_poll_events+149> \"E1\\366\\203\\203\\320\\005\", v_list = 0x53f325 <loop_poll_events+149>, v_dict = 0x53f325 <loop_poll_events+149>, v_partial = 0x53f325 <loop_poll_events+149>, v_blob = 0x53f325 <loop_poll_events+149>}}, {v_type = 4294953928, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 4090448939, v_bool = (kBoolVarTrue | unknown: 0xf3cf4c2a), v_special = (unknown: 0xf3cf4c2b), v_float = 2.0209502968276767e-314, v_string = 0xf3cf4c2b <error: Cannot access memory at address 0xf3cf4c2b>, v_list = 0xf3cf4c2b, v_dict = 0xf3cf4c2b, v_partial = 0xf3cf4c2b, v_blob = 0xf3cf4c2b}}, {v_type = VAR_NUMBER, v_lock = VAR_UNLOCKED, vval = {v_number = 1, v_bool = kBoolVarTrue, v_special = (unknown: 0x1), v_float = 4.9406564584124654e-324, v_string = 0x1 <error: Cannot access memory at address 0x1>, v_list = 0x1, v_dict = 0x1, v_partial = 0x1, v_blob = 0x1}}, {v_type = 18982976, v_lock = (unknown: 0x8), vval = {v_number = 0, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 0, v_string = 0x0, v_list = 0x0, v_dict = 0x0, v_partial = 0x0, v_blob = 0x0}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 1, v_bool = kBoolVarTrue, v_special = (unknown: 0x1), v_float = 4.9406564584124654e-324, v_string = 0x1 <error: Cannot access memory at address 0x1>, v_list = 0x1, v_dict = 0x1, v_partial = 0x1, v_blob = 0x1}}, {v_type = 4294954151, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 6516437, v_bool = (kBoolVarTrue | unknown: 0x636ed4), v_special = (unknown: 0x636ed5), v_float = 3.2195476549887951e-317, v_string = 0x636ed5 <msgpack_sbuffer_write+165> \"M\\001}\", v_list = 0x636ed5 <msgpack_sbuffer_write+165>, v_dict = 0x636ed5 <msgpack_sbuffer_write+165>, v_partial = 0x636ed5 <msgpack_sbuffer_write+165>, v_blob = 0x636ed5 <msgpack_sbuffer_write+165>}}, {v_type = 1596509283, v_lock = (VAR_FIXED | unknown: 0x20389f4c), vval = {v_number = 140737488350176, v_bool = (unknown: 0xffffebe0), v_special = (unknown: 0xffffebe0), v_float = 6.9533558075804617e-310, v_string = 0x7fffffffebe0 \"\\001\", v_list = 0x7fffffffebe0, v_dict = 0x7fffffffebe0, v_partial = 0x7fffffffebe0, v_blob = 0x7fffffffebe0}}, {v_type = 1596509283, v_lock = (VAR_FIXED | unknown: 0x20389f4c), vval = {v_number = 140737488350176, v_bool = (unknown: 0xffffebe0), v_special = (unknown: 0xffffebe0), v_float = 6.9533558075804617e-310, v_string = 0x7fffffffebe0 \"\\001\", v_list = 0x7fffffffebe0, v_dict = 0x7fffffffebe0, v_partial = 0x7fffffffebe0, v_blob = 0x7fffffffebe0}}, {v_type = 4294954160, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 2, v_bool = (unknown: 0x2), v_special = (unknown: 0x2), v_float = 9.8813129168249309e-324, v_string = 0x2 <error: Cannot access memory at address 0x2>, v_list = 0x2, v_dict = 0x2, v_partial = 0x2, v_blob = 0x2}}, {v_type = 176, v_lock = VAR_UNLOCKED, vval = {v_number = 82054, v_bool = (unknown: 0x14086), v_special = (unknown: 0x14086), v_float = 4.0540062503857644e-319, v_string = 0x14086 <error: Cannot access memory at address 0x14086>, v_list = 0x14086, v_dict = 0x14086, v_partial = 0x14086, v_blob = 0x14086}}, {v_type = 4294954144, v_lock = (VAR_LOCKED | VAR_FIXED | unknown: 0x7ffc), vval = {v_number = 34371271219, v_bool = (kBoolVarTrue | unknown: 0xaffa32), v_special = (unknown: 0xaffa33), v_float = 1.6981664313199884e-313, v_string = 0x800affa33 \"\\205\\300t\\031\\203\\370#\\017\\205\\377\", v_list = 0x800affa33, v_dict = 0x800affa33, v_partial = 0x800affa33, v_blob = 0x800affa33}}, {v_type = 868912, v_lock = VAR_UNLOCKED, vval = {v_number = 774077772459933696, v_bool = kBoolVarFalse, v_special = kSpecialVarNull, v_float = 6.2597034744627629e-257, v_string = 0xabe13a200000000 <error: Cannot access memory at address 0xabe13a200000000>, v_list = 0xabe13a200000000, v_dict = 0xabe13a200000000, v_partial = 0xabe13a200000000, v_blob = 0xabe13a200000000}}, {v_type = 1596509283, v_lock = (VAR_FIXED | unknown: 0x20389f4c), vval = {v_number = 4, v_bool = (unknown: 0x4), v_special = (unknown: 0x4), v_float = 1.9762625833649862e-323, v_string = 0x4 <error: Cannot access memory at address 0x4>, v_list = 0x4, v_dict = 0x4, v_partial = 0x4, v_blob = 0x4}}, {v_type = VAR_UNKNOWN, v_lock = VAR_UNLOCKED, vval = {v_number = 8181656, v_bool = (unknown: 0x7cd798), v_special = (unknown: 0x7cd798), v_float = 4.0422751556909098e-317, v_string = 0x7cd798 <main_loop+72> \"\\230\\327|\", v_list = 0x7cd798 <main_loop+72>, v_dict = 0x7cd798 <main_loop+72>, v_partial = 0x7cd798 <main_loop+72>, v_blob = 0x7cd798 <main_loop+72>}}}\r\n        rv = {type = 4294954224, data = {boolean = 100, integer = 868, floating = 4.28848980590202e-321, string = {data = 0x364 <error: Cannot access memory at address 0x364>, size = 8182072}, array = {size = 868, capacity = 8182072, items = 0x305f28cc63}, dictionary = {size = 868, capacity = 8182072, items = 0x305f28cc63}, luaref = 868}}\r\n        i = <optimized out>\r\n#9  0x00000000004847aa in nvim_call_function (fn=..., args=..., err=0x7fffffffcd90) at /usr/home/build/neovim/src/nvim/api/vimscript.c:236\r\nNo locals.\r\n#10 handle_nvim_call_function (channel_id=<optimized out>, args=..., error=0x7fffffffcd90) at src/nvim/auto/api/private/dispatch_wrappers.generated.h:7366\r\n        rv = {type = kObjectTypeNil, data = {boolean = false, integer = 0, floating = 0, string = {data = 0x0, size = 0}, array = {size = 0, capacity = 0, items = 0x0}, dictionary = {size = 0, capacity = 0, items = 0x0}, luaref = 0}}\r\n        ret = {type = kObjectTypeNil, data = {boolean = false, integer = 0, floating = 0, string = {data = 0x0, size = 0}, array = {size = 0, capacity = 0, items = 0x0}, dictionary = {size = 0, capacity = 0, items = 0x0}, luaref = 0}}\r\n        arg_1 = {data = 0x6c2e74696e692f60 <error: Cannot access memory at address 0x6c2e74696e692f60>, size = 8}\r\n        arg_2 = <optimized out>\r\n        cleanup = <optimized out>\r\n#11 0x0000000000636b47 in request_event (argv=<optimized out>) at /usr/home/build/neovim/src/nvim/msgpack_rpc/channel.c:347\r\n        error = {type = kErrorTypeNone, msg = 0x0}\r\n        result = {type = kObjectTypeNil, data = {boolean = false, integer = 0, floating = 0, string = {data = 0x0, size = 0}, array = {size = 0, capacity = 0, items = 0x0}, dictionary = {size = 0, capacity = 0, items = 0x0}, luaref = 0}}\r\n        e = 0x801252500\r\n        handler = {name = <optimized out>, fn = 0x656572742e6d6976, fast = <synthetic pointer>}\r\n        channel = 0x801236800\r\n#12 0x000000000073a800 in state_handle_k_event () at /usr/home/build/neovim/src/nvim/state.c:106\r\n        event = {handler = 0x636af0 <request_event>, argv = {0x801252500, 0x20389f4e5f28cc63, 0x80121e980, 0x801236800, 0x1, 0x80121b450, 0x801237000, 0x7ffffffec990, 0x636149 <parse_msgpack+249>, 0x0}}\r\n#13 0x000000000064e1e6 in nv_event (cap=0x7fffffffd220) at /usr/home/build/neovim/src/nvim/normal.c:7379\r\n        may_restart = <optimized out>\r\n#14 0x0000000000643d27 in normal_execute (state=0x7fffffffd1a0, key=<optimized out>) at /usr/home/build/neovim/src/nvim/normal.c:1164\r\n        s = 0x7fffffffd1a0\r\n#15 0x000000000073a5af in state_enter (s=0x7fffffffd1a0) at /usr/home/build/neovim/src/nvim/state.c:88\r\n        check_result = <optimized out>\r\n        execute_result = <optimized out>\r\n        key = <optimized out>\r\n#16 0x00000000005eddce in normal_enter (cmdwin=false, noexmode=false) at /usr/home/build/neovim/src/nvim/normal.c:463\r\n        state = {state = {check = 0x650460 <normal_check>, execute = 0x641da0 <normal_execute>}, command_finished = false, ctrl_w = false, need_flushbuf = false, set_prevcount = false, previous_got_int = false, cmdwin = false, noexmode = false, toplevel = true, oa = {op_type = 0, regname = 0, motion_type = kMTCharWise, motion_force = 0, use_reg_one = false, inclusive = false, end_adjusted = false, start = {lnum = 0, col = 0, coladd = 0}, end = {lnum = 0, col = 0, coladd = 0}, cursor_start = {lnum = 0, col = 0, coladd = 0}, line_count = 0, empty = false, is_VIsual = false, start_vcol = 0, end_vcol = 0, prev_opcount = 0, prev_count0 = 0, excl_tr_ws = false}, ca = {oap = 0x7fffffffd1b8, prechar = 0, cmdchar = -26365, nchar = 0, ncharC1 = 0, ncharC2 = 0, extra_char = 0, opcount = 0, count0 = 0, count1 = 1, arg = 0, retval = 0, searchbuf = 0x0}, mapped_len = 0, old_mapped_len = 0, idx = 184, c = -26365, old_col = 0, old_pos = {lnum = 1, col = 0, coladd = 0}}\r\n#17 main (argc=<optimized out>, argv=<optimized out>) at /usr/home/build/neovim/src/nvim/main.c:581\r\n        params = {argc = 15, argv = 0x7fffffffd3f8, use_vimrc = 0x7fffffffd841 \"NONE\", clean = false, n_commands = 0, commands = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, cmds_tofree = \"\\000\\000\\000\\000\\000\\000\\000\\000\\000\", n_pre_commands = 3, pre_commands = {0x7fffffffd854 \"set shortmess+=IS background=light noswapfile noautoindent startofline laststatus=1 undodir=. directory=. viewdir=. backupdir=. belloff= wildoptions-=pum joinspaces noshowcmd noruler nomore redrawdebu\"..., 0x7fffffffd92c \"mapclear\", 0x7fffffffd93b \"mapclear!\", 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, edit_type = 0, tagname = 0x0, use_ef = 0x0, input_isatty = false, output_isatty = false, err_isatty = false, input_neverscript = false, no_swap_file = 0, use_debug_break_level = -1, window_count = 1, window_layout = 0, diff_mode = 0, listen_addr = 0x7fffffffd961 \"T2974\", remote = 0, server_addr = 0x0}\r\n        err = {type = kErrorTypeNone, msg = 0x0}\r\n        o = {type = kObjectTypeNil, data = {boolean = false, integer = 0, floating = 0, string = {data = 0x0, size = 0}, array = {size = 0, capacity = 0, items = 0x0}, dictionary = {size = 0, capacity = 0, items = 0x0}, luaref = 0}}\r\n        cwd = 0x0\r\n        fname = <optimized out>\r\n        use_remote_ui = <optimized out>\r\n        use_builtin_ui = <optimized out>\r\n        vimrc_none = <optimized out>\r\n\r\n\r\nTests covered by this check: 1\r\nnan ms test/helpers.lua:408: crash detected (see above)\r\n\r\nstack traceback:\r\n\ttest/helpers.lua:408: in function 'check_cores'\r\n\ttest/functional/helpers.lua:915: in function <test/functional/helpers.lua:913>\r\n```",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "This hasn't happened recently.",
            "created_at": "2022-11-30T00:56:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/19596#issuecomment-1331507613",
            "id": 1331507613,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19596",
            "node_id": "IC_kwDOAPphoM5PXTGd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1331507613/reactions"
            },
            "updated_at": "2022-11-30T00:56:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1331507613",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Happened again on Cirrus: https://cirrus-ci.com/task/5805291606900736",
            "created_at": "2022-12-15T14:11:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/19596#issuecomment-1353155081",
            "id": 1353155081,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19596",
            "node_id": "IC_kwDOAPphoM5Qp4IJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1353155081/reactions"
            },
            "updated_at": "2022-12-15T14:11:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1353155081",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hasn't happened for a long time.",
            "created_at": "2023-07-30T02:28:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/19596#issuecomment-1656999684",
            "id": 1656999684,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19596",
            "node_id": "IC_kwDOAPphoM5iw88E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656999684/reactions"
            },
            "updated_at": "2023-07-30T02:28:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1656999684",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Still seems to be happening: https://cirrus-ci.com/task/4571363768270848",
            "created_at": "2023-08-13T02:33:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/19596#issuecomment-1676194232",
            "id": 1676194232,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19596",
            "node_id": "IC_kwDOAPphoM5j6LG4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1676194232/reactions"
            },
            "updated_at": "2023-08-13T02:33:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1676194232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/19596/comments",
    "created_at": "2022-07-31T23:11:20Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/19596/events",
    "html_url": "https://github.com/neovim/neovim/issues/19596",
    "id": 1323604274,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 110418643,
            "name": "test",
            "node_id": "MDU6TGFiZWwxMTA0MTg2NDM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/test"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "automation for build, test, and release",
            "id": 212701006,
            "name": "ci",
            "node_id": "MDU6TGFiZWwyMTI3MDEwMDY=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci"
        },
        {
            "color": "0E8A16",
            "default": false,
            "description": "issue contains a stacktrace/ASAN log",
            "id": 435854079,
            "name": "has:backtrace",
            "node_id": "MDU6TGFiZWw0MzU4NTQwNzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/has:backtrace"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "issue reporting a crash or segfault",
            "id": 435854234,
            "name": "bug-crash",
            "node_id": "MDU6TGFiZWw0MzU4NTQyMzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug-crash"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/19596/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5O5Jky",
    "number": 19596,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/19596/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": "reopened",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/19596/timeline",
    "title": "Test \":checkhealth completions can be listed via getcompletion()\" intermittently crashes on CI",
    "updated_at": "2023-08-13T02:33:34Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/19596",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq"
    }
}