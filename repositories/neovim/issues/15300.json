{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Neovim Version\r\n\r\nv0.6.0-dev+111-gf22326ef0\r\n\r\n### Installation\r\n\r\nbuilt from repo\r\n\r\n### Steps to reproduce\r\n\r\nRun\r\n```vim\r\nau BufEnter * echom \"Entering buffer\" expand(\"<afile>\")\r\n```\r\nThen execute this script\r\n```lua\r\nlocal buf = vim.api.nvim_create_buf(false, true)\r\nlocal win = vim.api.nvim_open_win(buf, false, {\r\n  anchor = \"SW\",\r\n    col = 0,\r\n    height = 2,\r\n    relative = \"cursor\",\r\n    row = 0,\r\n    style = \"minimal\",\r\n    width = 53\r\n  })\r\n```\r\n\r\n### Expected behavior\r\n\r\nSince the cursor remains out of the float buffer . In the original buffer where we started at . I'd expect BufEnter to be not triggered at all (Since enter is false). Or it to be triggered twice once for going into the float buffer and one for getting out. In 1st case see no message at all and in 2nd case see 2 messages.\r\n\r\n### Actual behavior\r\n\r\nBut you'll see Entering buffer in messages once indicating BufEnter event was emited once for an unnamed buffer (float buffer).\r\n\r\nFor this anything keeping track of current buffer with `BufEnter` will be out of sync with the editor .\r\n\r\n### Some background\r\nI encountered this while tracking down https://github.com/hoob3rt/lualine.nvim/issues/286\r\n\r\n`vim.lsp.diagnostic.goto_next` calls `vim.lsp.diagnostics.show_line_diagnostics` to show diagnostics . Which creates float with `nvim_open_win` leading to the bug . It's possible to workarround this issue by passing `noautocmd` option to `nvim_open_win`.\r\n\r\n### Possible cause\r\n\r\nI think this is what's happening\r\nhttps://github.com/neovim/neovim/blob/e7bde44d6d2a88e67d68d5a1b9f0d037179dd14e/src/nvim/window#L586 this line changes currently active window to newly created float . this https://github.com/neovim/neovim/blob/e7bde44d6d2a88e67d68d5a1b9f0d037179dd14e/src/nvim/window#L606 restores the original window . These two doesn't trigger any auto commands . In the middle this https://github.com/neovim/neovim/blob/e7bde44d6d2a88e67d68d5a1b9f0d037179dd14e/src/nvim/window#L594 line changes the buffer . This triggers `BufEnter` for float buffer . So when `nvim_open_win` is called with enter = false then we get one BufEnter and one BufLeave for getting out from current buffer and entering new one . But the cursor ends up in older win and buffer . So anything keeping track of Current active buffer with `BufEnter` or `BufLeave` gets out of sync .\r\n\r\n### Possible solution\r\nSo what's a valid solution to this ? makeing switch_win and restore_win trigger auto commands ? ignoring BufEnter from that do_buffer call when enter is false or something else ?",
    "closed_at": "2023-09-16T08:27:47Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "What does BufEnter mean for you? For me It means two things, my cursor enters the buffer but is also when the buffer is displayed in a window.  Maybe the word enter in `BufEnter` is the issue. The docs do say \"Also executed starting to edit a buffer, after After |BufAdd|.\"\r\n\r\nSo to me opening a window and opening a buffer in said window even if I don't have focus is also a BufEnter.\r\n\r\nHere's a code example that demonstrate It works this way.\r\n\r\n```lua\r\nENTERED = {}\r\nvim.cmd[[:e b0]]\r\nlocal w0 = vim.api.nvim_get_current_win()\r\nassert(w0 == vim.api.nvim_get_current_win())\r\nprint(\"Im on window 0\")\r\nvim.cmd[[:split b1]]\r\nlocal w1 = vim.api.nvim_get_current_win()\r\n-- Make sure I'm in window 1\r\nassert(w1 == vim.api.nvim_get_current_win())\r\nprint(\"Im on window 1: \" .. w1 )\r\n-- Set autocommand for entering a buffer\r\nvim.cmd[[au BufEnter * :lua table.insert(ENTERED, vim.fn.expand(\"<afile>\"))]]\r\nvim.cmd[[au WinEnter * :lua print(\"Im just entered window \" .. vim.api.nvim_get_current_win())]]\r\nprint(\"Entered buffers: \", vim.inspect(ENTERED))\r\n-- Create a test buffer\r\nlocal f = io.open(\"/tmp/test.file\", \"w\")\r\nf:write(\"This is my test file wohoo\")\r\nf:close()\r\n-- Load the buffer but do not show it in a window.\r\nprint(\"loading the buffer\")\r\nlocal buf = vim.fn.bufadd(\"/tmp/test.file\")\r\n-- Set it as the buffer for a window I can see but have not entered.\r\nprint(\"Setting the buffer in window 0\")\r\nvim.api.nvim_win_set_buf(w0, buf)\r\nprint(\"Entered buffers: \", vim.inspect(ENTERED))\r\nassert(w1 == vim.api.nvim_get_current_win())\r\nprint(\"Im still on window 1\")\r\n\r\n--[[ The output\r\nIm on window 0: 1000\r\nIm on window 1: 1001\r\nEntered buffers:  {}\r\nloading the buffer\r\nSetting the buffer in window 0\r\nEntered buffers:  { \"/tmp/test.file\" }\r\nIm still on window 1\r\n--]]\r\n```\r\n\r\nSo to me is a problem of understanding what BufEnter does, and the docs could do a better job of that. I hope I was clear",
            "created_at": "2021-08-07T23:04:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/15300#issuecomment-894716247",
            "id": 894716247,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15300",
            "node_id": "IC_kwDOAPphoM41VElX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894716247/reactions"
            },
            "updated_at": "2021-08-07T23:04:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894716247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9699804?v=4",
                "events_url": "https://api.github.com/users/muniter/events{/privacy}",
                "followers_url": "https://api.github.com/users/muniter/followers",
                "following_url": "https://api.github.com/users/muniter/following{/other_user}",
                "gists_url": "https://api.github.com/users/muniter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/muniter",
                "id": 9699804,
                "login": "muniter",
                "node_id": "MDQ6VXNlcjk2OTk4MDQ=",
                "organizations_url": "https://api.github.com/users/muniter/orgs",
                "received_events_url": "https://api.github.com/users/muniter/received_events",
                "repos_url": "https://api.github.com/users/muniter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/muniter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/muniter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/muniter"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> For me It means two things, my cursor enters the buffer but is also when the buffer is displayed in a window\r\n\r\nMeaning more then one thing is an issue itself but that predates neovim .\r\n\r\nBufEnter can effectively used to detect buf change but it seems some api functions are breaking this behaviour .Since there's no `BufSwitch` event is there an effective way to ditermine buffer switching ?\r\n\r\n> So to me opening a window and opening a buffer in said window even if I don't have focus is also a BufEnter\r\n\r\nThis doesn't explain why `BufLeave` is triggered with `nvim_open_win` ;)",
            "created_at": "2021-08-08T01:34:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/15300#issuecomment-894728729",
            "id": 894728729,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15300",
            "node_id": "IC_kwDOAPphoM41VHoZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894728729/reactions"
            },
            "updated_at": "2021-08-08T05:11:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894728729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree! Changing some autocommands to have a clear defined behavior and therefore a very clear definition would be amazing. \n\nI'd be happy to help.",
            "created_at": "2021-08-08T02:32:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/15300#issuecomment-894733289",
            "id": 894733289,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15300",
            "node_id": "IC_kwDOAPphoM41VIvp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894733289/reactions"
            },
            "updated_at": "2021-08-08T02:32:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894733289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9699804?v=4",
                "events_url": "https://api.github.com/users/muniter/events{/privacy}",
                "followers_url": "https://api.github.com/users/muniter/followers",
                "following_url": "https://api.github.com/users/muniter/following{/other_user}",
                "gists_url": "https://api.github.com/users/muniter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/muniter",
                "id": 9699804,
                "login": "muniter",
                "node_id": "MDQ6VXNlcjk2OTk4MDQ=",
                "organizations_url": "https://api.github.com/users/muniter/orgs",
                "received_events_url": "https://api.github.com/users/muniter/received_events",
                "repos_url": "https://api.github.com/users/muniter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/muniter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/muniter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/muniter"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Changing some autocommands to have a clear defined behavior\r\n\r\nI don't think changing the behavior of existing events will be a good idea.\r\n\r\n If we change BufEnter to have a single role now . That will be huge breakage to vim compatability. And will break a ton of plugins . We can make BufEnters behavior consistent for api . Or add newer Events . ",
            "created_at": "2021-08-08T05:18:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/15300#issuecomment-894744994",
            "id": 894744994,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15300",
            "node_id": "IC_kwDOAPphoM41VLmi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894744994/reactions"
            },
            "updated_at": "2021-08-08T06:14:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/894744994",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh"
            }
        },
        {
            "author_association": "NONE",
            "body": "I just want to add some perspective to this. I have this autocommand configured:\r\n```vim\r\n    au BufEnter * if &buftype == \"terminal\" | startinsert | endif\r\n```\r\nIf I want to open up a read-only terminal window, even `notautocmd = true` set, I still get this behavior where it starts in insert mode because of that autocommand, whereas for that case of a read-only terminal, skipping insert mode is more than desired, since the contrary makes it hard to navigate in/out of this window.",
            "created_at": "2022-08-17T11:45:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/15300#issuecomment-1217901640",
            "id": 1217901640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15300",
            "node_id": "IC_kwDOAPphoM5Il7RI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1217901640/reactions"
            },
            "updated_at": "2022-08-17T11:45:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1217901640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2695819?v=4",
                "events_url": "https://api.github.com/users/hkupty/events{/privacy}",
                "followers_url": "https://api.github.com/users/hkupty/followers",
                "following_url": "https://api.github.com/users/hkupty/following{/other_user}",
                "gists_url": "https://api.github.com/users/hkupty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hkupty",
                "id": 2695819,
                "login": "hkupty",
                "node_id": "MDQ6VXNlcjI2OTU4MTk=",
                "organizations_url": "https://api.github.com/users/hkupty/orgs",
                "received_events_url": "https://api.github.com/users/hkupty/received_events",
                "repos_url": "https://api.github.com/users/hkupty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hkupty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hkupty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hkupty"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15300/comments",
    "created_at": "2021-08-07T09:17:01Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/15300/events",
    "html_url": "https://github.com/neovim/neovim/issues/15300",
    "id": 963192856,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "floating windows",
            "id": 3234818716,
            "name": "float",
            "node_id": "MDU6TGFiZWwzMjM0ODE4NzE2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/float"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/15300/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5NjMxOTI4NTY=",
    "number": 15300,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 1,
        "-1": 0,
        "confused": 0,
        "eyes": 5,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 6,
        "url": "https://api.github.com/repos/neovim/neovim/issues/15300/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/15300/timeline",
    "title": "BufEnter is triggered when calling nvim_open_win with enter=false ",
    "updated_at": "2023-09-16T08:27:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/15300",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
        "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
        "followers_url": "https://api.github.com/users/shadmansaleh/followers",
        "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
        "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/shadmansaleh",
        "id": 13149513,
        "login": "shadmansaleh",
        "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
        "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
        "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
        "repos_url": "https://api.github.com/users/shadmansaleh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/shadmansaleh"
    }
}