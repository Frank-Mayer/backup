{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nWhen using activating ext_cmdline, if I put the cursor in a float window during a substitution command, command-previews uses the buffer in the float instead of the current buffer. You see the effect when setting the enter field in nvim_open_win to true and then entering :%s/ ...\r\n\r\n### Steps to reproduce\r\n\r\n```lua\r\nlocal function on_cmdline_show()\r\n\tlocal buf = vim.api.nvim_create_buf(false, true)\r\n\tlocal win = vim.api.nvim_open_win(buf, false, {\r\n\t\trelative = \"editor\",\r\n\t\twidth = 50,\r\n\t\theight = 10,\r\n\t\trow = 1,\r\n\t\tcol = 10,\r\n\t\tstyle = \"minimal\",\r\n\t})\r\n\tvim.api.nvim__redraw({ flush = true, cursor = true })\r\nend\r\n\r\nlocal function handler(event, ...)\r\n\tif event == \"cmdline_show\" then\r\n\t\ton_cmdline_show()\r\n\telse\r\n\t\treturn\r\n\tend\r\nend\r\n\r\nlocal namespace = vim.api.nvim_create_namespace(\"cmdline\")\r\nlocal function attach()\r\n\tvim.ui_attach(namespace, { ext_cmdline = true }, function(event, ...)\r\n\t\thandler(event, ...)\r\n\t\tif event:match(\"cmd\") ~= nil then\r\n\t\t\treturn true\r\n\t\tend\r\n\t\treturn false\r\n\tend)\r\nend\r\n\r\nattach()\r\n```\r\n\r\n### Expected behavior\r\n\r\nI would expect the current buffer to be the last buffer before entering cmdline mode. \r\n\r\n### Neovim version (nvim -v)\r\n\r\n0.11.0-dev-19+g0f4f7d32c\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNo\r\n\r\n### Operating system/version\r\n\r\nFedora Linux 40\r\n\r\n### Terminal name/version\r\n\r\nkitty 0.34.1\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nbuild from repo",
    "closed_at": "2024-05-20T17:32:07Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm confused, is there a problem with the provided `init.lua` or just when setting `enter == true`?\r\n\r\nThe point of `nvim__redraw->cursor == true` is that it allows moving the cursor to a window that is **not** the actual current window. Entering the cmdline window seems ill advised and changing the current window/buffer should probably be disallowed during cmdline callbacks.",
            "created_at": "2024-05-20T16:16:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/28868#issuecomment-2120772530",
            "id": 2120772530,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28868",
            "node_id": "IC_kwDOAPphoM5-aGuy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120772530/reactions"
            },
            "updated_at": "2024-05-20T16:20:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120772530",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just when setting enter == true. \r\nThat part was not clear to me in the doc but i guess it explains the distinction that you make \"win or the current window\". If I understand correctly this means I can draw a cursor in a window without setting it as the current window ? However changing to this does not draw the cursor in the float. Is that expected ? \r\n\r\n```lua\r\nlocal function on_cmdline_show()\r\n\tlocal buf = vim.api.nvim_create_buf(false, true)\r\n\tlocal win = vim.api.nvim_open_win(buf, false, {\r\n\t\trelative = \"editor\",\r\n\t\twidth = 50,\r\n\t\theight = 10,\r\n\t\trow = 1,\r\n\t\tcol = 10,\r\n\t\tstyle = \"minimal\",\r\n\t})\r\n\tvim.api.nvim_win_set_cursor(win, { 1, 0 })\r\n\tvim.api.nvim__redraw({ flush = true, cursor = true })\r\nend\r\n```\r\n",
            "created_at": "2024-05-20T16:35:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/28868#issuecomment-2120803653",
            "id": 2120803653,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28868",
            "node_id": "IC_kwDOAPphoM5-aOVF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120803653/reactions"
            },
            "updated_at": "2024-05-20T16:41:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120803653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/128088782?v=4",
                "events_url": "https://api.github.com/users/smilhey/events{/privacy}",
                "followers_url": "https://api.github.com/users/smilhey/followers",
                "following_url": "https://api.github.com/users/smilhey/following{/other_user}",
                "gists_url": "https://api.github.com/users/smilhey/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/smilhey",
                "id": 128088782,
                "login": "smilhey",
                "node_id": "U_kgDOB6J6zg",
                "organizations_url": "https://api.github.com/users/smilhey/orgs",
                "received_events_url": "https://api.github.com/users/smilhey/received_events",
                "repos_url": "https://api.github.com/users/smilhey/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/smilhey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/smilhey/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/smilhey"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Uhm not sure, but you shouldn't create a buffer and open a window on each `cmdline_show` event. Try creating them once(hiding/showing as needed), and your `nvim__redraw` call should target `win = win`; then it does work:\r\n\r\n```lua\r\nlocal buf = vim.api.nvim_create_buf(false, true)\r\nlocal win = vim.api.nvim_open_win(buf, false, {\r\n\trelative = \"editor\",\r\n\twidth = 50,\r\n\theight = 10,\r\n\trow = 1,\r\n\tcol = 10,\r\n\tstyle = \"minimal\",\r\n})\r\n\r\nlocal function on_cmdline_show()\r\n\tvim.api.nvim_win_set_cursor(win, { 1, 0 })\r\n\tvim.api.nvim__redraw({ win = win, cursor = true })\r\nend\r\n```\r\n",
            "created_at": "2024-05-20T17:22:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/28868#issuecomment-2120877354",
            "id": 2120877354,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28868",
            "node_id": "IC_kwDOAPphoM5-agUq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120877354/reactions"
            },
            "updated_at": "2024-05-20T17:22:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120877354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "NONE",
            "body": "Obviously I'm not doing that for real use ! Still it seems the window needs to be explicitly drawn before the cursor drawing which I guess is quite logical. \r\nThis also works \r\n\r\n```lua \r\n\tlocal buf = vim.api.nvim_create_buf(false, true)\r\n\tlocal win = vim.api.nvim_open_win(buf, false, {\r\n\t\trelative = \"editor\",\r\n\t\twidth = 50,\r\n\t\theight = 10,\r\n\t\trow = 1,\r\n\t\tcol = 10,\r\n\t\tstyle = \"minimal\",\r\n\t})\r\n\tvim.api.nvim__redraw({flush = true})\r\n\tvim.api.nvim_win_set_cursor(win, { 1, 0 })\r\n\tvim.api.nvim__redraw({ win = win, cursor = true })\r\n\r\n```\r\nThanks for your help ! \r\n  ",
            "created_at": "2024-05-20T17:32:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/28868#issuecomment-2120893417",
            "id": 2120893417,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28868",
            "node_id": "IC_kwDOAPphoM5-akPp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120893417/reactions"
            },
            "updated_at": "2024-05-20T17:32:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120893417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/128088782?v=4",
                "events_url": "https://api.github.com/users/smilhey/events{/privacy}",
                "followers_url": "https://api.github.com/users/smilhey/followers",
                "following_url": "https://api.github.com/users/smilhey/following{/other_user}",
                "gists_url": "https://api.github.com/users/smilhey/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/smilhey",
                "id": 128088782,
                "login": "smilhey",
                "node_id": "U_kgDOB6J6zg",
                "organizations_url": "https://api.github.com/users/smilhey/orgs",
                "received_events_url": "https://api.github.com/users/smilhey/received_events",
                "repos_url": "https://api.github.com/users/smilhey/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/smilhey/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/smilhey/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/smilhey"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Still it seems the window needs to be explicitly drawn before the cursor drawing which I guess is quite logical. \r\n\r\nNot \"drawn\" necessarily, what needs to happen is for the grid to be allocated(which happens to be done in `flush->update_screen()`). Probably should be done with `cursor == true` as well to avoid unexpected behavior.\r\n\r\nWith this patch your repro also works without the explicit `flush = true` call.\r\n\r\n```diff\r\n@@ -2393,6 +2393,7 @@ void nvim__redraw(Dict(redraw) *opts, Error *err)\r\n   }\r\n\r\n   if (opts->cursor) {\r\n+    win_grid_alloc(win ? win : curwin);\r\n     setcursor_mayforce(win ? win : curwin, true);\r\n   }\r\n```",
            "created_at": "2024-05-20T17:39:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/28868#issuecomment-2120903935",
            "id": 2120903935,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28868",
            "node_id": "IC_kwDOAPphoM5-amz_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120903935/reactions"
            },
            "updated_at": "2024-05-20T17:40:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2120903935",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        }
    ],
    "comments": 5,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28868/comments",
    "created_at": "2024-05-20T15:54:37Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/28868/events",
    "html_url": "https://github.com/neovim/neovim/issues/28868",
    "id": 2306287395,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/28868/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM6Jdycj",
    "number": 28868,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/28868/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/28868/timeline",
    "title": "With ext_cmdline activated the buffer used for incsearch and command-preview is not the last buffer before entering cmdline_mode",
    "updated_at": "2024-05-20T17:40:52Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/28868",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/128088782?v=4",
        "events_url": "https://api.github.com/users/smilhey/events{/privacy}",
        "followers_url": "https://api.github.com/users/smilhey/followers",
        "following_url": "https://api.github.com/users/smilhey/following{/other_user}",
        "gists_url": "https://api.github.com/users/smilhey/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/smilhey",
        "id": 128088782,
        "login": "smilhey",
        "node_id": "U_kgDOB6J6zg",
        "organizations_url": "https://api.github.com/users/smilhey/orgs",
        "received_events_url": "https://api.github.com/users/smilhey/received_events",
        "repos_url": "https://api.github.com/users/smilhey/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/smilhey/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/smilhey/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/smilhey"
    }
}