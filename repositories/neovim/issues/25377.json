{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nI'm looking for a way to improve the startup experience of Neovide, to create the window with the correct size from the start and fix some other startup related sizing issue.\r\n\r\nBut the problem is that there does not seem to any way to ensure that all the GUI options (for example the font), all our options related to the window, (for example padding), the `lines`, `columns`, and the `colorscheme` are set. This is required in order to be able to correctly resize the window. \r\n\r\nIf the options are set directly in `init.vim/lua` then we receive several draw batches where each one sets a single option. So, this is not good.\r\n\r\nSetting all those options inside the `UIEnter` autocommand is a little bit better as long as none of the options are set elsewhere.\r\n\r\nBut this is totally out of the user control when using a plugin like `lazy.nvim`, which can potentially do a lot of stuff before `UIEnter`, making it basically useless for about anything. This happens for example when new plugins are installed at startup.\r\n\r\nThe workaround is to load a `ginit.vim/lua` file or similar before calling `nvim_ui_attach`. But the problem is that anyhing setup there is overwritten by what's passed to `nvim_ui_attach`. So, the only workaround I see is to get the option values manually, and then pass them on to `nvim_ui_attach`. \r\n\r\nI consider this a bug, and IMO `UIEnter` should always be called before anything is requested to be drawn on the screen. NOTE: the workaround of waiting for `UIEnter` before showing anything does not work, since then nothing is displayed when `lazy.nvim` installs the plugins.\n\n### Steps to reproduce\n\nLaunch a lazy.nvim configuration with some plugins not installed.\r\nObserve that multiple UI draw batches are received until UIEnter is called.\n\n### Expected behavior\n\n`UIEnter` should be called before anything is drawn.\n\n### Neovim version (nvim -v)\n\n0.9.2\n\n### Vim (not Nvim) behaves the same?\n\nN/A\n\n### Operating system/version\n\nWindows 11 / Arch Linux WSL\n\n### Terminal name/version\n\nNeovide 11.2\n\n### $TERM environment variable\n\nN/A\n\n### Installation\n\npacman",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't think it's possible to fix this without cause other breakages:\r\n- User config may check for attached UI\r\n- User config may cause redraw and UI flush\r\n- User config may even require UI interaction\r\n- UIEnter needs to be triggered after user config is sourced",
            "created_at": "2023-09-26T22:16:01Z",
            "html_url": "https://github.com/neovim/neovim/issues/25377#issuecomment-1736378345",
            "id": 1736378345,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25377",
            "node_id": "IC_kwDOAPphoM5nfwfp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736378345/reactions"
            },
            "updated_at": "2023-09-26T22:21:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736378345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I was thinking that `UIEnter` could be called if it's setup when the first draw request is made, but I think you are right that there are potentially too many breakages.\r\n\r\nI wonder what the options could be, I imagine that we are not the only one that would like to setup our GUI options before anything is drawn. \r\n\r\nHere are a few alternatives:\r\n1. Do nothing, let the GUIs use their own setup files like `ginit.vim/lua` if they prefer.\r\n2. Make `ginit.vim/lua` more officially supported\r\n3. Don't send any flushes until an actual draw request needs to be done (just setting columns/lines is not considered as a such)\r\n4. Add another autocommand that can be used for this\r\n5. Have some kind of signal in the config that triggers the UI ready to be shown. And this is automatically set when an error is shown or when `UIEnter` happens, in case the user forgets, and would not deal with `lazy.nvim` for example.\r\n\r\nI think, I would prefer 3. But that also means that there's no good workarounds until it's implemented and a new release of Neovim is made. I could implement 1. now, and move on to 2. when it's supported.",
            "created_at": "2023-09-26T23:06:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/25377#issuecomment-1736420927",
            "id": 1736420927,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25377",
            "node_id": "IC_kwDOAPphoM5nf64_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736420927/reactions"
            },
            "updated_at": "2023-09-26T23:06:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736420927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "And it looks like @justinmk wasn't that enthusiastic about `ginit` here https://github.com/neovim/neovim/issues/3656#issuecomment-155856453",
            "created_at": "2023-09-26T23:12:42Z",
            "html_url": "https://github.com/neovim/neovim/issues/25377#issuecomment-1736424973",
            "id": 1736424973,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25377",
            "node_id": "IC_kwDOAPphoM5nf74N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736424973/reactions"
            },
            "updated_at": "2023-09-26T23:12:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1736424973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the real problems are these:\r\n> User config may cause redraw and UI flush\r\n> User config may even require UI interaction\r\n\r\nVim does not allow this https://vimhelp.org/gui.txt.html#GUI\r\n> But the [GUI](https://vimhelp.org/gui.txt.html#GUI) [window](https://vimhelp.org/windows.txt.html#window) [is](https://vimhelp.org/motion.txt.html#is) only opened after all the initializations have been\r\ncarried out.\r\n\r\nAllowing interaction and redrawing also does not go well with the possibility of starting Neovim without an UI with `--headless`. \r\n\r\nThe original design of calling `GUIEnter` before `VimEnter` also neatly solves a lot of the problems, since then we are guaranteed to have the correct grid size for example, when `VimEnter` is called. Furthermore `lazy.nvim` could start its installation process here, or preferably even after that, but before `VimEnter` is called.",
            "created_at": "2023-09-27T09:54:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/25377#issuecomment-1737080563",
            "id": 1737080563,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25377",
            "node_id": "IC_kwDOAPphoM5nib7z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1737080563/reactions"
            },
            "updated_at": "2023-09-27T09:54:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1737080563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> User config may check for attached UI\r\n\r\nIf you mean configs calling `nvim_list_uis()` during startup, that isn't really supported, because user configs should use UIEnter for that. Though `has('gui_running')` is decided by the list of attached UIs.\r\n\r\n> The original design of calling GUIEnter before VimEnter also neatly solves a lot of the problems, since then we are guaranteed to have the correct grid size for example, when VimEnter is called.\r\n\r\nInteresting. I don't think the UIEnter order of operations was [chosen deliberately](https://github.com/neovim/neovim/pull/6917). \r\n\r\nSo if there's a technical reason to change the order, we should just do it. I suspect UIEnter does not have a lot of use in the wild that would be sensitive to its relative order. The main potential consumers are probably users of [firenvim](https://github.com/glacambre/firenvim) and [vscode-neovim](https://github.com/vscode-neovim/vscode-neovim). We can deal with a transition there if necessary.",
            "created_at": "2023-09-28T05:15:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/25377#issuecomment-1738442864",
            "id": 1738442864,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25377",
            "node_id": "IC_kwDOAPphoM5nnohw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1738442864/reactions"
            },
            "updated_at": "2023-09-28T05:18:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1738442864",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think I need to debug a bit more to see exactly what happens, becuase it looks like Neovim tries to disable the drawing here\r\nhttps://github.com/neovim/neovim/blob/19130415183763a572c50c8ae343dff8cc20526e/src/nvim/main.c#L355\r\n\r\nand enables it here just before `VimEnter` https://github.com/neovim/neovim/blob/19130415183763a572c50c8ae343dff8cc20526e/src/nvim/main.c#L584 \r\n\r\nIt does not quite match with what I remember that I saw in the logs with multiple flushes, with some of them even containing `win_viewport` But it's hard to determine what's actually happening based on the logs of Neovim alone, since the GUI messages and rpc notifications might not be ordered correctly with respect to each other. So I, will add some logging to Neovim as well to properly see what's happening.\r\n\r\nI also had problems with the Window not showing, when I tried to show it at `VimEnter` and there was a swap file message. But that might just be because it started blocking before the RPC notification to Neovide actually got sent. So, if that's the case it might still have actually happened after, or at the same time as `VimEnter`\r\n\r\nFor `lazy.nvim`, I'm not sure where the drawing happens, but hopefully that's also after `VimEnter`.\r\n\r\nIf the redrawing is supposed to be disabled between these points, then I think the fix would be to move `UIEnter` before `VimEnter` just before the redrawing is enabled again. And if the first UI flush message is sent after `UIEnter` then we can use that as a signal to show the actual operating system window.",
            "created_at": "2023-09-28T08:29:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/25377#issuecomment-1738706133",
            "id": 1738706133,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25377",
            "node_id": "IC_kwDOAPphoM5noozV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1738706133/reactions"
            },
            "updated_at": "2023-09-28T08:29:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1738706133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It looks like `lazy.nvim` gets around the disabled drawing by manually calling `redraw` https://github.com/folke/lazy.nvim/blob/6b55e4695a5e85d862e517bf860bd913a4a45d86/lua/lazy/view/init.lua#L145\r\n\r\nSo I think these are the remaining options:\r\n1. Call `UIEnter` before the first `redraw` call if it's defined. And also, before any message like for example the `ATTENTION:` message. \r\n2. Don't do anything, but GUI implementors should suggest the users to add the gui configuration at the start of the init. It seems like the reception of a `grid_line` event can be a signal to the UI to show the window.  Note that `win_viewport` can't be used, since the message windows for example don't have a viewport. \r\n\r\n   The problem is that, since there's no event on the Neovim side for this, I can't use the workaround from here https://github.com/neovim/neovim/issues/25378 to detect if the columns or lines has changed or not. Any lua call will block if Neovim is blocking on a message prompt. I can however use my initial workaround for that of initializing with a low number of columns and rows, and then check if it's changed or not. **EDIT:** I can use the `VimResized` event for detecting this, so this will be the workaround in Neovide until something better is found. **EDIT2:** That does not work if the lines or column is set to the original value.\r\n\r\n   But otherwise, this is ideal since the GUI application could implement it right now without any additional support from Neovim.\r\n3. Ban any kind of drawing during and provide another more supported way for `lazy.nvim` for doing its things.\r\n\r\n",
            "created_at": "2023-09-29T14:00:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/25377#issuecomment-1740943074",
            "id": 1740943074,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25377",
            "node_id": "IC_kwDOAPphoM5nxK7i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1740943074/reactions"
            },
            "updated_at": "2023-09-29T22:33:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1740943074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        }
    ],
    "comments": 7,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25377/comments",
    "created_at": "2023-09-26T22:00:17Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25377/events",
    "html_url": "https://github.com/neovim/neovim/issues/25377",
    "id": 1914362675,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "UI extensibility, events, protocol",
            "id": 640132777,
            "name": "ui-ext",
            "node_id": "MDU6TGFiZWw2NDAxMzI3Nzc=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui-ext"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim startup sequence (`:h startup`)",
            "id": 870629450,
            "name": "startup",
            "node_id": "MDU6TGFiZWw4NzA2Mjk0NTA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/startup"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25377/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5yGtsz",
    "number": 25377,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25377/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25377/timeline",
    "title": "UI flush can be called before UIEnter",
    "updated_at": "2023-09-29T22:33:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25377",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
        "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
        "followers_url": "https://api.github.com/users/fredizzimo/followers",
        "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
        "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/fredizzimo",
        "id": 9946255,
        "login": "fredizzimo",
        "node_id": "MDQ6VXNlcjk5NDYyNTU=",
        "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
        "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
        "repos_url": "https://api.github.com/users/fredizzimo/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/fredizzimo"
    }
}