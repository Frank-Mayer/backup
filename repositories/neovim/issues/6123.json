{
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "I was thinking about trying to add some introspection to mappings built into nvim. I have seen a few plugins out there, and worked on one myself, that would allow you to inspect your mappings with some information in them. Most of them rely on adding a plugin, so I don't see widespread adoption of them, and some of them are slow because they're implemented in vimscript, as opposed to being builtin parts of the maps.\r\n\r\nSeeing some presentations of spacemacs, with the abiilty to see what a mapping means (in human words) in real time, inspired me to think about how to get something done like that in vim. I think other plugin maintainers could certainly use something like this, for example a host could be made for denite or similar plugins that would get all your mappings and your descriptions, and you could search through them. It would also be helpful for people when they get a new plugin, they could see what mappings that plugin has without have to dig through all the docs again. It would also allow people to have more \"living documentation\" where the comments they write in the code show up in front of the user, rather than having to keep two locations for information (where you write the code and the `docs/` folder).\r\n\r\nI was thinking about trying to add some stuff into nvim so people could do something like this:\r\n\r\n```vim\r\n\" Not sure I like one more than the other here...\r\n\r\n\" Add a new modifier to a map, with a \"end\" modifier, where a description can be added\r\nnnoremap <describe> lhs rhs\r\n    \\ <description> Now I can type whatever I want to describe this.\r\n\r\n\" New command where you specify the mode, the lhs and then a description.\r\nnnoremap lhs rhs\r\nif has('nvim-version')\r\n    describe n lhs Now I can type whatever I want to describe this\r\nendif\r\n```\r\n\r\nThen you would be able to get them with the `maparg` command:\r\n\r\n```vim\r\n\r\nlet map_dict = maparg('lhs', 'n', v:false, v:true)\r\necho map_dict\r\n\" { ..., 'description': 'Now I can type whatever I want to describe this'}\r\n```\r\n\r\nI guess a couple questions:\r\n    - Does anyone have any other suggestions, better ideas for this concept?\r\n    - If implemented, would this be accepted?\r\n    - Does anyoen have any idea if this would get accepted at Vim?\r\n\r\nAnyways, I'm open to suggestions or rejections :)\r\n",
    "closed_at": "2021-12-31T19:10:35Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Might want to make it tags-based somehow, so that documentation can be used as the \"single source of truth\". That also encourages documentation. For one's custom mappings this would require something like `~/.config/nvim/doc/init.txt`, but I don't think that's any different than having a bunch of `:define` commands in one's vimrc.",
            "created_at": "2017-02-15T15:38:45Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280044893",
            "id": 280044893,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA0NDg5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280044893/reactions"
            },
            "updated_at": "2017-02-15T15:38:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280044893",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, I thin tags-based would be very difficult. I already did some exploring into how vim defines its mappings, and there are a couple places where it would be pretty easy to hook into the system to put the description field into the same struct as the rest of the mapping, and then display it in `maparg`. I'm not sure how you would be able to do that with the tags-based way.\r\n\r\nIn terms of implementation, the first one is quite easy actually, the problem is that if you then source your init.vim in an older version of nvim, or in Vim itself, you'll get errors. That's why I suggested the second one, so that you could just wrap it in a version check or something similar to that.",
            "created_at": "2017-02-15T15:43:29Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280046364",
            "id": 280046364,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA0NjM2NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280046364/reactions"
            },
            "updated_at": "2017-02-15T15:43:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280046364",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I rather like the way emacs does this with:\r\n\r\n```\r\n(defvar my-var-or-other-stuff t\r\n  \"A description right with the variable\")\r\n```\r\n\r\nSo I was trying to go with something like that.",
            "created_at": "2017-02-15T15:44:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280046730",
            "id": 280046730,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA0NjczMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280046730/reactions"
            },
            "updated_at": "2017-02-15T15:44:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280046730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In terms of portability and a more-broad way of adding simple descriptions for more than just maps, what about using `#!` which is effectively a comment:\r\n\r\n```vim\r\n#!doc: describe next eligible map or command\r\nnmap ...\r\n```\r\nThe \"next eligible map or command\" would be any map or command that's created after the doc line has been seen within a scope (maybe just the script's scope).  This could cover dynamically created maps and commands.  Once the doc has been used to describe something, it's discarded.\r\n\r\nI'd say that this should only be a single line to encourage keeping it short.\r\n\r\nFor referencing docs:\r\n\r\n```vim\r\n#!doc: See |some_tag|\r\nnmap ...\r\n```\r\n\r\nThe \"See\" part being optional.  Problem here is that vim's docs aren't consistent enough to be machine readable.  And multiple tags could be lumped into the same place to describe a workflow instead of the key itself.  If it's displayed literally in some special buffer, `<cr>` on a tagged doc line could jump to the doc page.",
            "created_at": "2017-02-15T17:00:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280070488",
            "id": 280070488,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA3MDQ4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280070488/reactions"
            },
            "updated_at": "2017-02-15T17:00:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280070488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> put the description field into the same struct as the rest of the mapping, \r\n\r\nHolding all these descriptions (including all built-in keys) in memory seems wasteful. That's why tags or some other offline index, seems more appropriate. \r\n\r\n> , what about using #! which is effectively a comment\r\n\r\nWe generally avoid non-trivial VimL extensions. ",
            "created_at": "2017-02-15T17:54:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280086470",
            "id": 280086470,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDA4NjQ3MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280086470/reactions"
            },
            "updated_at": "2017-02-15T19:20:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280086470",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We generally avoid non-trivial VimL extensions.\r\n\r\nWhat about adding the line number to the `maparg()` return dict?  With the `sid` and `lnum`, a plugin could easily do this kind of parsing by scanning backward for a doc comment.",
            "created_at": "2017-02-15T18:59:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280104596",
            "id": 280104596,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDEwNDU5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280104596/reactions"
            },
            "updated_at": "2017-02-15T18:59:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280104596",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What about adding the line number to the maparg() return dict? With the sid and lnum, a plugin could easily do this kind of parsing by scanning backward for a doc comment.\r\n\r\nNo objection, but... to get descriptions for all of the built-in mappings we would need to parse the existing docs. So doesn't it make sense to use the docs as the definitions?",
            "created_at": "2017-02-15T19:23:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280111350",
            "id": 280111350,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDExMTM1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280111350/reactions"
            },
            "updated_at": "2017-02-15T19:23:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280111350",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Couldn't the docs (as a general list of user defined mappings, like the one for installed plugins) be generated from these doc comments too?\r\n\r\nAlso: what will the data be? Just the description or the description plus a short name too?",
            "created_at": "2017-02-15T19:36:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280115030",
            "id": 280115030,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDExNTAzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280115030/reactions"
            },
            "updated_at": "2017-02-15T19:36:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280115030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Couldn't the docs (as a general list of user defined mappings, like the one for installed plugins) be generated from these doc comments too?\r\n\r\nYes they could, but first they would need to be extracted from the existing docs...",
            "created_at": "2017-02-15T20:02:14Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280122317",
            "id": 280122317,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDEyMjMxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280122317/reactions"
            },
            "updated_at": "2017-02-15T20:02:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280122317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "```vim\r\n:vimgrep /^|:\\@!/gj $VIMRUNTIME/doc/index.txt\r\n```",
            "created_at": "2017-02-15T20:07:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280123729",
            "id": 280123729,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDEyMzcyOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280123729/reactions"
            },
            "updated_at": "2017-02-15T20:07:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280123729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So doesn't it make sense to use the docs as the definitions?\r\n\r\nIt makes sense for the built in docs, but definitely wouldn't for existing plugin docs.  It could be a case for encouraging a documentation format, but that doesn't take care of the cases where maps are defined from user configs.\r\n\r\nThe idea behind @tjdevries's request is giving a searchable live view of \"what should I press to do X?\" which wouldn't work if the keys are based on what's hard coded in the docs.  This could also add another facet of information for the idea of implementing a searchable command palette.",
            "created_at": "2017-02-15T20:16:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280126085",
            "id": 280126085,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDEyNjA4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280126085/reactions"
            },
            "updated_at": "2017-02-15T20:16:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280126085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Holding these descriptions ... in memory seems wasteful.\r\n\r\nI think we could just set an option for this. If people don't want to have descriptions populated, we can just not read them or store them.\r\n\r\nI personally don't see the majority of these descriptions being longer than something like:\r\n\r\n`Split window to the top right`\r\n\r\nWe already keep the lhs, rhs, and several other variables for the mappings in memory. I don't think anyone has been two concerned about their mappings taking up 80k of mem, so I don't really see why they would complain about 160k of mem. I personally would trade off a lot more than that to get introspection that plugin authors could all agree on. This would make plugin and feature discovery much easier.\r\n\r\nI can understand the concern though. I just think the people who will see the most impact are the people who already have many plugins installed, other processes running (like a python interpreter), etc.\r\n\r\n> What about adding the line number to the maparg()\r\n\r\nI see this as viable, but would then mean if you wanted the information for all the mappings, nvim would have to open and read through all the files to get the documentation (at least, I'm assuming that's what it would have to do). That seems a lot less efficient than just storing them directly. And then you'd probably cache them anyways, so you're back in the same location.\r\n\r\n\r\nAs for parsing the docs, I had an idea a bit ago that maybe we could generate `quickref.txt` from some machine readable original format, like yaml, lua or something like that. The output would be done during build, but this way you could also get the information on the builtin items in Vim as well. Although I would think that's probably for a different issue or PR. I'm not as concerned immediately with getting information from vanilla nvim.\r\n\r\nI think if we had an ability for an accessible definition to be written near or at the same time as a mapping (and then maybe later for functions or variables) then someone will probably just write a vim docs generator from those mappings. And then you would just paste those into your vim docs for your plugin.\r\n\r\n@tweekmonster is correct that the main idea I want to have is a live updating command pallete that would allow users to not only see their mappings, but what they do (or what the plugin authors intended them to do). Could be searchable by lhs, rhs and/or description depending on how the author implemented it (denite source, fzf plugin, etc.).\r\n\r\nAnd finally, I think we could just put somewhere in the documentation about this, a helper function for people to use in the meantime if they wanted to include descriptive mappings but still be compatible with vim or older version of nvim. Users themselves could just choose to be using a new version nvim and not have to worry about it. The function could be something like:\r\n\r\n\r\n```vim\r\nfunction! s:safe_map(mode, modifiers, lhs, rhs, description)\r\n  if has('nvim-feature')\r\n    let map_string = printf('%s %s <describe> %s %s <description> %s',\r\n          \\ a:mode, a:modifiers, a:lhs, a:rhs, a:description)\r\n  else\r\n    let map_string = printf('%s %s %s %s',\r\n          \\ a:mode, a:modifiers, a:lhs, a:rhs)\r\n  endif\r\n\r\n  execute map_string\r\nendfunction\r\n`",
            "created_at": "2017-02-17T20:47:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280762101",
            "id": 280762101,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDc2MjEwMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280762101/reactions"
            },
            "updated_at": "2017-02-17T20:47:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280762101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I see this as viable, but would then mean if you wanted the information for all the mappings, nvim would have to open and read through all the files to get the documentation (at least, I'm assuming that's what it would have to do). That seems a lot less efficient than just storing them directly. And then you'd probably cache them anyways, so you're back in the same location.\r\n\r\nYes, but it would at least be on demand.  People who don't like the idea of it won't have anything to complain about.  Besides, nvim is reasonably fast at reading files.  With minor optimizations like sorting the maps by source so you're not re-opening scripts.\r\n\r\nI wrote this the other day (shut up):\r\n\r\n```vim\r\nfunction! s:runtime_grep(globpat, ...) abort\r\n  if !a:0\r\n    echohl ErrorMsg\r\n    echomsg 'A pattern is required'\r\n    echohl None\r\n    return\r\n  endif\r\n\r\n  let pattern = join(a:000)\r\n  call setqflist([], 'r')\r\n\r\n  for path in globpath(&runtimepath, a:globpat, 0, 1)\r\n    if filereadable(path)\r\n      try\r\n        execute 'vimgrepadd /'.pattern.'/gj' path\r\n      catch\r\n      endtry\r\n    endif\r\n  endfor\r\n\r\n  if !empty(getqflist())\r\n    copen\r\n  endif\r\nendfunction\r\n\r\ncommand! -nargs=+ RtpGrep call s:runtime_grep(<f-args>)\r\n```\r\n\r\n`:RtpGrep **/*.vim ^\\s*fu\\%[nction]\\>` is reasonably fast considering it's scanning all lines in all scripts.  A script for parsing map descriptions would have a limited set of files and target line numbers.\r\n\r\n> As for parsing the docs, I had an idea a bit ago that maybe we could generate quickref.txt from some machine readable original format, like yaml, lua or something like that.\r\n\r\nThis is ideal, but we would be left holding the bag for re-documenting things from upstream.  I think vimdoc is here to stay as long as nvim wants to maintain compatibility with upstream.\r\n\r\n> s:safe_map()\r\n\r\nThis is a decent idea, but this would require plugin authors to maintain \"official\" boilerplate that might break if the implementation changes.  This would be better if it was a standard function from nvim, but, you know...\r\n\r\n![upstream](https://cloud.githubusercontent.com/assets/111942/23084876/9d020c08-f532-11e6-956b-fec50182c1ef.jpg)\r\n",
            "created_at": "2017-02-17T22:02:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280778962",
            "id": 280778962,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDc3ODk2Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280778962/reactions"
            },
            "updated_at": "2017-02-17T22:02:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280778962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "An admitted weakness of the tags-based definitions is that it won't be context-dependent. If a plugin is currently active in a buffer, it needs to be able to describe the currently active mappings (where the _same_ LHS may have a different description in some other filetype).\r\n\r\nBut let's step back. The main task before worrying about any of this, is exposing the mappings programmatically so that fuzzy-finders can actually traverse them. That's going to be far more interesting (and valuable for many other purposes) than the minor question of where to store the descriptions and how to associate descriptions with the mappings.\r\n\r\nSo step 1 is:\r\n\r\n1. Add an API function `nvim_get_keymap({scope}, {mode})`.\r\n\r\nThat should be its own PR, before adding the descriptions feature.",
            "created_at": "2017-02-17T22:22:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280782882",
            "id": 280782882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDc4Mjg4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280782882/reactions"
            },
            "updated_at": "2017-02-17T22:24:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280782882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What would the scope parameter specify? ",
            "created_at": "2017-02-18T04:24:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280820788",
            "id": 280820788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDgyMDc4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280820788/reactions"
            },
            "updated_at": "2017-02-18T04:24:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280820788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I like this feature, before this feature I use Unite to implement this feature.\r\n![2017-02-01_1359x723](https://cloud.githubusercontent.com/assets/13142418/22507351/24af0d74-e8c0-11e6-985e-4a1404b629ed.png)\r\n",
            "created_at": "2017-02-18T05:12:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280822795",
            "id": 280822795,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDgyMjc5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280822795/reactions"
            },
            "updated_at": "2017-02-18T05:12:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280822795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13142418?v=4",
                "events_url": "https://api.github.com/users/wsdjeg/events{/privacy}",
                "followers_url": "https://api.github.com/users/wsdjeg/followers",
                "following_url": "https://api.github.com/users/wsdjeg/following{/other_user}",
                "gists_url": "https://api.github.com/users/wsdjeg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wsdjeg",
                "id": 13142418,
                "login": "wsdjeg",
                "node_id": "MDQ6VXNlcjEzMTQyNDE4",
                "organizations_url": "https://api.github.com/users/wsdjeg/orgs",
                "received_events_url": "https://api.github.com/users/wsdjeg/received_events",
                "repos_url": "https://api.github.com/users/wsdjeg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wsdjeg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wsdjeg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wsdjeg"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tjdevries scope would be \"global\" or \"buffer\" (the `<buffer>` modifier of `:map`).",
            "created_at": "2017-02-18T11:51:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-280840727",
            "id": 280840727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDg0MDcyNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280840727/reactions"
            },
            "updated_at": "2017-02-18T11:52:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/280840727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk Where would you recommend defining this function? ",
            "created_at": "2017-02-21T15:02:53Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-281369243",
            "id": 281369243,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTM2OTI0Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/281369243/reactions"
            },
            "updated_at": "2017-02-21T15:09:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/281369243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`src/nvim/api/vim.c`",
            "created_at": "2017-02-21T20:44:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-281474407",
            "id": 281474407,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTQ3NDQwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/281474407/reactions"
            },
            "updated_at": "2017-02-21T20:44:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/281474407",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk , When using `nvim_get_keymap('buffer', 'n')` would you expect ONLY buffer mappings or (buffer mappings + non-overlapping global mappings) or some other combination I can't seem to think of.",
            "created_at": "2017-03-08T03:54:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-284939571",
            "id": 284939571,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDkzOTU3MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/284939571/reactions"
            },
            "updated_at": "2017-03-08T03:54:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/284939571",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I can see arguments for both, so whichever is easier.",
            "created_at": "2017-03-08T07:24:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-284967056",
            "id": 284967056,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDk2NzA1Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/284967056/reactions"
            },
            "updated_at": "2017-03-08T07:24:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/284967056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What about instead of passing in a string, you could pass in a dictionary. \r\n\r\nIt could look something like\r\n\r\n```vim\r\n{'global': false, 'buffer': false}  \" Returns empty list\r\n{'global': false, 'buffer': true}   \" Returns list of only buffer mappings\r\n{'global': true, 'buffer': false}   \" Returns list of only global mappings.\r\n{'global': true, 'buffer': true}    \" Returns list of mappings, with possible overlapping mappings (or we could try and eliminate those)\r\n```\r\n\r\nThis could also let us add more options in the future. If we added a tab mapping or something like that. Other options would just be assumed false I think.\r\n\r\nWe could even switch the argument order and make the scope optional, and just have it default to the desired functionality if we wanted.",
            "created_at": "2017-03-08T14:25:41Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285054056",
            "id": 285054056,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA1NDA1Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285054056/reactions"
            },
            "updated_at": "2017-03-08T14:25:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285054056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We could even switch the argument order and make the scope optional, and just have it default to the desired functionality if we wanted.\r\n\r\nI think having the mode first, if we're not just going to use a dictionary, does make more sense.  It's the most common discriminator that would be used.  Other discriminators should, which will likely be optional, should come after it.",
            "created_at": "2017-03-08T15:04:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285065272",
            "id": 285065272,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA2NTI3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285065272/reactions"
            },
            "updated_at": "2017-03-08T15:04:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285065272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Any examples of an api function that has optional parameters?",
            "created_at": "2017-03-08T15:17:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285068783",
            "id": 285068783,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA2ODc4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285068783/reactions"
            },
            "updated_at": "2017-03-08T15:17:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285068783",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What about instead of passing in a string, you could pass in a dictionary.\r\n> This could also let us add more options in the future.\r\n\r\nreplied at https://github.com/neovim/neovim/pull/6236#issuecomment-285095590",
            "created_at": "2017-03-08T16:21:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285088496",
            "id": 285088496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA4ODQ5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285088496/reactions"
            },
            "updated_at": "2017-03-08T16:45:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285088496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I do not agree with https://github.com/neovim/neovim/issues/6123#issuecomment-280782882: making thing reachable is indeed needed, but this question is rather trivial and is going to be easier to implement: just take internal structures and convert them into API types.\r\n\r\n---\r\n\r\nI more like the idea with comments, but no “line number then backscan” and different syntax. The problem with “line number then backscan” is that you can no longer offload defining mappings or other things to another function, and this is handy if you want to do something like frawor allows you to do: e.g. have plugin-specific leader without lots of copy-pastes of lengthy options and `:execute`. Also there is an example of language which always keeps documentation: Python. And it works fine. So I think that for descriptions it would be logical to do the following: make comments starting with `\"\"` saved internally and automatically attached to whatever is the next definition of function/mapping/abbreviation/command/sign/variable (on first iteration it is probably better to just make `:let` discard this data because it raises many questions regarding the implementation), otherwise only discarded when script ends. Additionally make this reachable via the API, but given that now there is no API for defining anything, but variables it may just as well be a part of the argument (i.e. not something which alters state). Dictionary argument with definition is the best option in almost all cases: even signs and functions have enough properties to store them in a dictionary, anything else except variables have more.\r\n\r\nSome examples:\r\n\r\n```VimL\r\n\"\" Plugin which does foo\r\nscriptencoding utf-8\r\n\" Special-case: `scriptencoding` discards documentation, later saves it somewhere as script documentation\r\n\r\n\"\" Discarded\r\n\r\n\" Empty line discards documentation\r\n\r\n\"\" Do foo\r\n\"\"\r\n\"\" :param Number x: Do it with x.\r\n\"\"\r\n\"\" :return: :math:`x * 10`\r\nfunction Foo(x)\r\n    return x * 10\r\nendfunction\r\n\r\necho get(function('Foo'), 'doc')\r\nverbose function Foo \" Prints documentation above the function\r\n\r\n\"\" Do foo\r\ncommand -count Foo :call Foo(<count>)\r\n\r\nverbose command Foo\r\n\r\nfunction s:DefineMap(lhs, rhs)\r\n\r\n    \" But only empty line which follows documentation comment\r\n\r\n    execute 'nnoremap' get(g:, 'g:foo_leader', '<leader>f').get(get(g:, 'foo_map_overrides', {}), a:lhs, a:lhs) a:rhs\r\nendfunction\r\n\r\n\"\" Do foo\r\ncall s:DefineMap('f', ':Foo<CR>')\r\n\r\n\"\" Discarded\r\n```\r\n\r\n---\r\n\r\nI do not like the idea of dummy parameters: how would you know in advance that it is (not) needed? Better versioned API somewhere, was not this discussed already? When initiating connection request a specific version and when altering API keep an adapter for some specified time so that dispatcher may select proper one. And dummies are also too limited: with versioned API you can decide e.g. that ordering of arguments was inconsistent and reorder them without bumping major version of the application (i.e. stay compatible), only bumping major version of the API. You can never do anything like this with dictionaries.",
            "created_at": "2017-03-08T16:30:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285091028",
            "id": 285091028,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA5MTAyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285091028/reactions"
            },
            "updated_at": "2017-03-08T16:30:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285091028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "BTW, issue title talks about descriptions. Let’s discuss *descriptions* here, move `nvim_get_keymap` discussion to the PR. Or rename the issue and discuss descriptions elsewhere.",
            "created_at": "2017-03-08T16:35:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285092598",
            "id": 285092598,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA5MjU5OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285092598/reactions"
            },
            "updated_at": "2017-03-08T16:35:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285092598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> making thing reachable is indeed needed, but this question is rather trivial and is going to be easier to implement: \r\n\r\nDepends on how the descriptions part is implemented. Extending VimL to support a new syntax doesn't help Lua scripts nor API clients. So the bare minimum is that some sort of function is needed which associates mappings with descriptions. The internals of that function could, later, be re-used if VimL is extended with the comment sugar.\r\n\r\n> `verbose function Foo \" Prints documentation above the function`\r\n\r\nGood idea.\r\n",
            "created_at": "2017-03-08T16:43:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285095301",
            "id": 285095301,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA5NTMwMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285095301/reactions"
            },
            "updated_at": "2017-03-08T16:54:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285095301",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Depends on how the descriptions part is implemented. Extending VimL to support a new syntax doesn't help Lua scripts nor API clients. So the bare minimum is that some sort of function is needed which associates mappings with descriptions. The internals of that function could, later, be re-used if VimL is extended with the comment sugar.\r\n\r\nIf we have a function that returns a dictionary describing mapping (basically we have it (`maparg()`) and plan to also add an API with the list) there is nothing to discuss: it is already a convention that keys may be added to the returned dictionary without considering it a breaking change.",
            "created_at": "2017-03-08T17:32:10Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285109708",
            "id": 285109708,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTEwOTcwOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285109708/reactions"
            },
            "updated_at": "2017-03-08T17:32:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285109708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If we have a function that returns a dictionary describing mapping (basically we have it (maparg()\r\n\r\nThere's no way to get _all_ mappings AFAIK. That's what `get_keymap` is for.\r\n\r\n>  there is nothing to discuss: it is already a convention that keys may be added to the returned dictionary without considering it a breaking change.\r\n\r\nSorry, I am confused. We need a function that assigns a description to a mapping, like this:\r\n\r\n    nvim_assoc_desc_with_mapping(String map_lhs, String scope, String desc)\r\n\r\nWhat did you have in mind?",
            "created_at": "2017-03-08T17:44:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285113207",
            "id": 285113207,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExMzIwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285113207/reactions"
            },
            "updated_at": "2017-03-08T17:45:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285113207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk I am saying that there is `maparg()` which will return descriptions once they are added. There is a PR with function which returns a list of mappings in a dictionary and nobody doubts that once descriptions are there they may be added to those dictionaries. So there basically is nothing to discuss regarding how to return the descriptions, only how to attach them.\r\n\r\n> Sorry, I am confused. We need a function that assigns a description to a mapping, like this:\r\n\r\nThis subthread was replying to the comment regarding “stepping back and adding function which lists mappings”: there is nothing to discuss about this step in this issue.",
            "created_at": "2017-03-08T17:54:35Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285116057",
            "id": 285116057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExNjA1Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285116057/reactions"
            },
            "updated_at": "2017-03-08T17:54:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285116057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Regarding `nvim_assoc…`: I am against this. There should be functions `void nvim_define_{entity}(Dictionary  definition, Boolean unique)`: for mappings they may take whatever `maparg(,,, 1)` or new function returns and define a mapping. And Dictionary may contain `description` key: no assoc, add descriptions at definition. I do not know a real use-case when this is not enough.\r\n\r\nFor VimL there is comments suggestion.",
            "created_at": "2017-03-08T17:59:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285117488",
            "id": 285117488,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExNzQ4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285117488/reactions"
            },
            "updated_at": "2017-03-08T17:59:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285117488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I see now. When I said \"associate\" you took that to mean at retrieval-time, but I mean define-time.\r\n\r\nRegarding the name, `nvim_assoc` was pseudo-code, not a real suggestion. `nvim_define_{entity}` sounds good.",
            "created_at": "2017-03-08T18:02:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285118373",
            "id": 285118373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExODM3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285118373/reactions"
            },
            "updated_at": "2017-03-08T18:02:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285118373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I was actually missing such function for `translit3`: needed to run previously defined mappings at some condition only, otherwise run translit3 own mappings. Ended up with creating this function on top of `execute`.",
            "created_at": "2017-03-08T18:03:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-285118484",
            "id": 285118484,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExODQ4NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285118484/reactions"
            },
            "updated_at": "2017-03-08T18:03:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/285118484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Now that we have `nvim_get_keymap()`, I've been thinking of this again.\r\n\r\nWhat if we did something like this:\r\n\r\n1. Add more types to the `v:t_*` types, including `v:t_mapping`, or potentially `v:t_n_map`, `v:t_i_map`, etc.\r\n2. Add a function `nvim_describe()` where it looks like:\r\n\r\n```vim\r\n\" call nvim_describe(type, identifier_dict?, description)\r\ncall nvim_describe(v:t_map, {'mode': 'normal', 'lhs': ',ex'}, 'This is an example mapping')\r\n```\r\n\r\nand then `nvim_get_keymap()` would return `{ ..., 'description': 'This is an example mapping' }`",
            "created_at": "2017-06-29T16:59:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312028836",
            "id": 312028836,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjAyODgzNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312028836/reactions"
            },
            "updated_at": "2017-06-29T16:59:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312028836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I suppose something like `nvim_describe_map('mode', 'lhs', 'description')` would be fine too. And we could just add more as time goes on",
            "created_at": "2017-06-29T17:21:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312034442",
            "id": 312034442,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjAzNDQ0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312034442/reactions"
            },
            "updated_at": "2017-06-29T17:21:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312034442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tjdevries I would rather go with `nvim_set_doc(Dictionary what, String id, String doc)`. Here `what` is something like `{type: function}` or `{type: \"map\", mode: \"n\"[, buffer: 42]}`. Given `set` there should be `get` as well. Maybe `doc` should be `Dictionary`, type-specific (e.g. for mappings it should be something like `{summary: \"Frobnicates text\", description: \"Does a good job at frobnicating text which means transforming it into a useless crap\", count: true, register: false, variants: [\"characterwise\", \"linewise\"]}` (summary and description are universal, count and register are specific for normal and visual mode mappings, variants is specific to visual mode, etc; for function type doc should be able to describe arguments and return separately, etc)).\r\n\r\nBTW in some vim-dev thread it was mentioned that `maparg()` output (lhs and rhs) is not reliable. I `nvim_get_keymap` also has this flaw. (Specifically: it should correctly handle both `set cpo-=<  | nnoremap <C-x> <C-c>` and `set cpo+=< | nnoremap <C-x> <C-c>`, current tests reveal that it does not, see #6937.)",
            "created_at": "2017-06-29T19:37:50Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312079452",
            "id": 312079452,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA3OTQ1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312079452/reactions"
            },
            "updated_at": "2017-06-29T19:56:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312079452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I actually more like the idea of `Dictionary doc` with the necessary structure: in any case decent documentation system is assumed to allow specifying such things in a parsable way, in this case we are just wanting to get the results of parsing rather then text to be parsed. It is also a hint to whoever will want to e.g. write a Sphinx plugin for VimL regarding what properties certain VimL entities may have.",
            "created_at": "2017-06-29T20:02:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312088226",
            "id": 312088226,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA4ODIyNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312088226/reactions"
            },
            "updated_at": "2017-06-29T20:02:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312088226",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "if we specify the structure of each of the different kinds of dictionaries, why not just have different functions?\r\n\r\nIt seems like a lot to keep track of when using one function with so many permutations. Why not just `nvim_set_doc_map(mode, ...)`?",
            "created_at": "2017-06-29T20:24:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312093461",
            "id": 312093461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA5MzQ2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312093461/reactions"
            },
            "updated_at": "2017-06-29T20:24:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312093461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tjdevries I am imagining a single entry point to new internal documentation system. Also there are not only many differences, but many similarities as well. So either one function. One *file* `src/nvim/api/doc.c` with unique prefix like `nvim_doc` if you don’t like that. But by no means no `nvim_set_doc_map`, if documentation system is there it should be there in one piece.\r\n\r\nBy the way, why everybody forgot about abbreviations when desiging `nvim_get_keymap`? Menus also have some similarities to mappings, though much less (does nvim-qt display them and if yes how it obtains the menus?).",
            "created_at": "2017-06-29T22:45:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312128641",
            "id": 312128641,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjEyODY0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312128641/reactions"
            },
            "updated_at": "2017-06-29T22:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312128641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Okay, I think the `nvim_set_doc` is fine. I also like the `Dictionary doc` as well. \r\n\r\nAs for abbreviations, I figured if someone wanted it, it would be easy to make `nvim_get_abbreviations`. I'm not sure about menus.",
            "created_at": "2017-06-30T18:37:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312343147",
            "id": 312343147,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjM0MzE0Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312343147/reactions"
            },
            "updated_at": "2017-06-30T18:37:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312343147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Which structure to use for obtaining menus was once discussed somewhere in vim-dev. No patches were made though and no more discussion happens ATM.",
            "created_at": "2017-06-30T20:53:00Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312370388",
            "id": 312370388,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjM3MDM4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312370388/reactions"
            },
            "updated_at": "2017-06-30T20:53:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312370388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Re: menus: What about https://github.com/neovim/neovim/pull/6322? ",
            "created_at": "2017-07-01T09:21:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312421281",
            "id": 312421281,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQyMTI4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312421281/reactions"
            },
            "updated_at": "2017-07-01T09:21:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312421281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/221465?v=4",
                "events_url": "https://api.github.com/users/fmoralesc/events{/privacy}",
                "followers_url": "https://api.github.com/users/fmoralesc/followers",
                "following_url": "https://api.github.com/users/fmoralesc/following{/other_user}",
                "gists_url": "https://api.github.com/users/fmoralesc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fmoralesc",
                "id": 221465,
                "login": "fmoralesc",
                "node_id": "MDQ6VXNlcjIyMTQ2NQ==",
                "organizations_url": "https://api.github.com/users/fmoralesc/orgs",
                "received_events_url": "https://api.github.com/users/fmoralesc/received_events",
                "repos_url": "https://api.github.com/users/fmoralesc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fmoralesc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fmoralesc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fmoralesc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Forgot about that PR.",
            "created_at": "2017-07-01T11:21:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312426481",
            "id": 312426481,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQyNjQ4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312426481/reactions"
            },
            "updated_at": "2017-07-01T11:21:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312426481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Strongly agree with https://github.com/neovim/neovim/issues/6123#issuecomment-312079452 . \r\n\r\nIn general I strongly discourage introducing new opaque types, it makes interop more difficult for no reason. E.g., jobs in Nvim are just integers, in Vim they are opaque types. Opaque types are nice for encapsulation and ownership, but emacs (and vim, accidentally) have proven that is counterproductive for a text editor: openness and convention is better. ",
            "created_at": "2017-07-01T16:29:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-312441659",
            "id": 312441659,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjQ0MTY1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312441659/reactions"
            },
            "updated_at": "2017-07-01T16:29:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/312441659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "I do not know about the internal implemntation, but forget about viml and keep it unchanged. Would it be easier that key map description things be done only for Lua apis, i.e., add description to key mappings for nvim_buf_set_keymap() and nvim_set_keymap()?  It makes more sense to give the mapping description when you define it (perhaps adding a field in the `opts` param), not after you have defined it and use some other functions to add a description to it.\r\n\r\nIf keymap description is done, plugins like [which-key.nvim](https://github.com/folke/which-key.nvim) could benefit by showing pretty description for keymap. Currently, it only shows the raw mappings, which does not make much sense, especially when a user use a config distribution like [LunarVim](https://github.com/LunarVim/LunarVim) and is not very familiar with what that mapping does.\r\n\r\nFYI, this is what which-key.nvim currently shows if I press my leader key:\r\n\r\n![image](https://user-images.githubusercontent.com/16662357/137623364-8eda6063-1fb0-4170-a8f2-aedae85c2e05.png)\r\n",
            "created_at": "2021-10-17T10:31:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-945088547",
            "id": 945088547,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "IC_kwDOAPphoM44VOgj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/945088547/reactions"
            },
            "updated_at": "2021-10-17T10:31:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/945088547",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16662357?v=4",
                "events_url": "https://api.github.com/users/jdhao/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdhao/followers",
                "following_url": "https://api.github.com/users/jdhao/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdhao/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdhao",
                "id": 16662357,
                "login": "jdhao",
                "node_id": "MDQ6VXNlcjE2NjYyMzU3",
                "organizations_url": "https://api.github.com/users/jdhao/orgs",
                "received_events_url": "https://api.github.com/users/jdhao/received_events",
                "repos_url": "https://api.github.com/users/jdhao/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdhao/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdhao/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdhao"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> i.e., add description to key mappings for nvim_buf_set_keymap() and nvim_set_keymap()\r\n\r\nNo objection to adding an option to those APIs. We also are in favor of adding Luadoc support (would require treesitter).",
            "created_at": "2021-10-17T14:06:06Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-945131119",
            "id": 945131119,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "IC_kwDOAPphoM44VY5v",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/945131119/reactions"
            },
            "updated_at": "2021-10-17T14:06:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/945131119",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "How do we add descriptions with `vim.keymap.set`?",
            "created_at": "2022-12-01T23:24:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-1334574507",
            "id": 1334574507,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "IC_kwDOAPphoM5Pi_2r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1334574507/reactions"
            },
            "updated_at": "2022-12-01T23:24:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1334574507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15112080?v=4",
                "events_url": "https://api.github.com/users/jjant/events{/privacy}",
                "followers_url": "https://api.github.com/users/jjant/followers",
                "following_url": "https://api.github.com/users/jjant/following{/other_user}",
                "gists_url": "https://api.github.com/users/jjant/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jjant",
                "id": 15112080,
                "login": "jjant",
                "node_id": "MDQ6VXNlcjE1MTEyMDgw",
                "organizations_url": "https://api.github.com/users/jjant/orgs",
                "received_events_url": "https://api.github.com/users/jjant/received_events",
                "repos_url": "https://api.github.com/users/jjant/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jjant/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jjant/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jjant"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Use the `desc` key in `opts`",
            "created_at": "2022-12-01T23:27:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/6123#issuecomment-1334576379",
            "id": 1334576379,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/6123",
            "node_id": "IC_kwDOAPphoM5PjAT7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1334576379/reactions"
            },
            "updated_at": "2022-12-01T23:27:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1334576379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments": 49,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/6123/comments",
    "created_at": "2017-02-15T15:30:26Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/6123/events",
    "html_url": "https://github.com/neovim/neovim/issues/6123",
    "id": 207836702,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/6123/labels{/name}",
    "locked": true,
    "milestone": {
        "closed_at": null,
        "closed_issues": 596,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 425,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-01-21T23:52:55Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDU6SXNzdWUyMDc4MzY3MDI=",
    "number": 6123,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 11,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 10,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 21,
        "url": "https://api.github.com/repos/neovim/neovim/issues/6123/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/6123/timeline",
    "title": "Descriptive Maps",
    "updated_at": "2024-01-21T19:06:33Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/6123",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
        "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
        "followers_url": "https://api.github.com/users/tjdevries/followers",
        "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
        "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tjdevries",
        "id": 4466899,
        "login": "tjdevries",
        "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
        "organizations_url": "https://api.github.com/users/tjdevries/orgs",
        "received_events_url": "https://api.github.com/users/tjdevries/received_events",
        "repos_url": "https://api.github.com/users/tjdevries/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tjdevries"
    }
}