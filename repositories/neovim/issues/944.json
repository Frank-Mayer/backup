{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "Some files, like `eval.c`, are a pain to edit for some people (like me) that have their editors set to trimming trailing whitespace by default. I either have to edit with `vim -u NONE`, or use a special `git addnw` to add non-whitespace changes (but this is tricky and buggy and doesn't work for merge conflicts).\n\nLuckily, most of the files in neovim are whitespace clean, but some aren't. With this issue I'd like to ask if there would be popular support for performing this change, perhaps with some [shell-scripting](http://stackoverflow.com/questions/10711051/trailing-whitespace-elimination-script-for-multiple-files)?\n\n<bountysource-plugin>\n\n---\n\nWant to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/3099856-rfc-remove-trailing-whitespace-from-files-that-have-it?utm_campaign=plugin&utm_content=tracker%2F461131&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F461131&utm_medium=issues&utm_source=github).\n</bountysource-plugin>\n",
    "closed_at": "2016-01-21T06:00:21Z",
    "closed_by": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    },
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "On July 13, 2014 3:09:33 AM GMT+03:00, Nicolas Hillegeer notifications@github.com wrote:\n\n> Some files, like `eval.c`, are a pain to edit form some people (like\n> me) that have their editors set to trimming trailing whitespace by\n> default. I either have to edit with `vim -u NONE`, or use a special\n> `git addnw` to add non-whitespace changes (but this is tricky and\n> buggy).\n> \n> Luckily, most of the files in neovim are whitespace clean, but some\n> aren't. With this issue I'd like to ask if there would be popular\n> support for performing this change, perhaps with some\n> [shell-scripting](http://stackoverflow.com/questions/10711051/trailing-whitespace-elimination-script-for-multiple-files)?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/neovim/neovim/issues/944\n\nTrailing whitespaces are the only sane way to enable\n\n```\nset formatoptions+=a\n```\n\n. If you do not use them you cannot end paragraph where you want in some cases where formatter is wrong and have to use selection+gq if you have to edit inside the line.\n\nI mean that to end paragraph you only need to strip this whitespace, then formatter will stop bothering you when you edit next line (formatoptions+=w).\n\nI would actually _require_ trailing whitespaces in comments and documentation rather then trim it. For project-specific options there are lots of plugins like localrc, they can be used to disable trimming. Or better join me with formatoptions=arcoqn12w (some files also have t): it makes editing somewhere inside the paragraph more convenient.\n",
            "created_at": "2014-07-13T04:50:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48831775",
            "id": 48831775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODMxNzc1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48831775/reactions"
            },
            "updated_at": "2014-07-13T04:50:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48831775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> . If you do not use them you cannot end paragraph where you want in some cases where formatter is wrong and have to use selection+gq if you have to edit inside the line.\n\nWhy not simply use two newlines when you want to make a new paragraph? We're not editing the .pdf part of a TeX document.\n\nMy formatoptions is `tcroql`, btw.\n\nRequiring trailing newspace seems very fishy.\n",
            "created_at": "2014-07-13T09:12:12Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48835584",
            "id": 48835584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM1NTg0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48835584/reactions"
            },
            "updated_at": "2014-07-13T09:12:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48835584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Why not simply use two newlines when you want to make a new paragraph? We're not editing the .pdf part of a TeX document.\n1. It sometimes looks ugly.\n2. It does not help a tiny bit _in some cases where formatter is wrong_. I.e. when I do not want to end paragraph, but have to. Happens when formatter tries to indent too much when it sees opening parenthesis (controlled by some option AFAIR, but I do not know it and this does not happen always), when I am writing some complex table  and when I happen to have incorrect `formatlistpat` option for some reasons and cannot/do not want to correct it. Try to use `formatoptions+=a` and write ReST-style boxed table without `formatoptions+=w`:\n   \n   Example of the table:\n   \n   ``` ReST\n   +--------+--------+\n   |abcdef  | abcdef |\n   |tty tty | tt tt  |\n   +--------+--------+\n   ```\n   \n   Autoformatted without `w`:\n   \n   ```\n   +--------+--------+ |abcdef  | abcdef | |tty tty | tt tt  | +--------+--------+\n   ```\n\nNote: I am using `+=a`. It means that _whenever I edit a paragraph *_it will be reformatted***. With `w` it is very convenient. I used to use it without `w` and it was constant fight with formatter.\n",
            "created_at": "2014-07-13T09:23:51Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48835787",
            "id": 48835787,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM1Nzg3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48835787/reactions"
            },
            "updated_at": "2014-07-13T09:25:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48835787",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I am wondering why people do not like trailing whitespaces. With `set list listchars=…trail:-…` it is too easy to not leave them where you do not want them and I do not remember I have ever accidentally left them anywhere. In comments, docstrings, markdown, LaTeX, ReST, Vim help, … they are absolutely harmless. And it is easy to say whether trailing whitespace is after the comment or after some code in case one still wants to automatically strip them (Python docstrings are harder though, easiest solution relies on syntax highlighting).\n",
            "created_at": "2014-07-13T09:37:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48836065",
            "id": 48836065,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM2MDY1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48836065/reactions"
            },
            "updated_at": "2014-07-13T09:37:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48836065",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> With set list listchars=…trail:-… it is too easy to not leave them where you do not want them and I do not remember I have ever accidentally left them anywhere. \n\nI have `listchars` set and I see trailing whitespace clearly. So I probably wouldn't leave it even if I didn't auto-trim it. I however really like the convenience of not having to do that. While splitting lines, copy-pasting or whatever, trailing whitespace is very common. Even though navigating with vim is fast, `:w` is faster.\n\nI don't use automatic formatting `+a` because it's much easier for me to reflow a paragraph when I'm done with it:\n\n``` vim\nnnoremap <leader>q gqip\nvmap Q gq\nnmap Q gqap\n```\n\nThe only thing this doesn't reliably work on is in doxygen's `///` comment-blocks. But I think this has another reason.\n\nFor an opinion from the other side of the fence, Go(lang)'s `gofmt` (which every Go programmer uses) automatically trims whitespace: https://groups.google.com/forum/#!msg/golang-dev/YkcoliOSQnw/4S-N6f_xCMQJ\n\nPeople don't like trailing whitespace because it looks unclean when you've set it to visible (`listchars`), and when it's invisible it's useless. Also because not having trailing whitespace never conflicts with anyone's editor, but having trailing whitespace does (cfr. my case).\n",
            "created_at": "2014-07-13T09:57:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48836425",
            "id": 48836425,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM2NDI1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48836425/reactions"
            },
            "updated_at": "2014-07-13T09:57:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48836425",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I have listchars set and I see trailing whitespace clearly. So I probably wouldn't leave it even if I didn't auto-trim it. I however really like the convenience of not having to do that. While splitting lines, copy-pasting or whatever, trailing whitespace is very common. Even though navigating with vim is fast, :w is faster.\n\nWhen splitting lines removing whitespaces is one character off (e.g. `i<BS><CR>` vs `i<CR>` (I have `<C-h>` in place of `<CR>`), additional space in pattern) or even no characters off (using `r<CR>` from normal mode).\n\nWhen copy-pasting there is a way to select newly pasted lines to do some operation on them (<code>nnoremap <expr> gV    \"`[\".getregtype(v:register)[0].\"`]\"</code>). Trailing whitespaces do not appear to be too common though in my experience or I would have some mapping to copy-paste without them.\n\nAdditionally knowing that there are cases when trailing whitespaces are meaningful I would never allow some script to automatically trim them, even if I choose to live without `formatoptions+=w`.\n\n> I don't use automatic formatting +a because it's much easier for me to reflow a paragraph when I'm done with it:\n\nMy usual paragraph editing sequence is “(edit -> review)+”. As I need to catch indentation problems during review this turns into “(edit -> gq -> review)+” without `+=a` (`gq` is faster to type for me because it requires no little fingers (dvorak) and is just the same two keys on two hands (dvorak) as in `Q`). If there is no motion for the paragraph (it is the case nearly every time) `gq` step is very inconvenient and time-consuming, especially since I know I may have to do it again.\n\n> The only thing this doesn't reliably work on is in doxygen's /// comment-blocks. But I think this has another reason.\n\nSolution to this problem was already posted somewhere here: just use\n\n```\nsetlocal comments^=:///\n```\n\n. I have this in my `.local.vimrc` for this project.\n\n> Also because not having trailing whitespace never conflicts with anyone's editor, but having trailing whitespace does (cfr. my case).\n\nReally? If I edit the paragraph where there is no trailing whitespace I will add trailing whitespace. This is only different with your case that it does not happen automatically for the whole file.\n",
            "created_at": "2014-07-13T10:19:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48836847",
            "id": 48836847,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM2ODQ3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48836847/reactions"
            },
            "updated_at": "2014-07-13T10:26:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48836847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> If there is no motion for the paragraph (it is the case nearly every time) gq step is very inconvenient and time-consuming, especially since I know I may have to do it again.\n\nHow come `p` doesn't work?\n\n> Really? If I edit the paragraph where there is no trailing whitespace I will add trailing whitespace. This is only different with your case that it does not happen automatically for the whole file.\n\nI'm sorry, I really don't understand this, could you re-phrase it? By \"conflict\" I mean that someone's editor will automatically add/remove something that another's editor removes/add, thus potentially causing an endless cycle.\n",
            "created_at": "2014-07-13T10:24:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48836941",
            "id": 48836941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM2OTQx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48836941/reactions"
            },
            "updated_at": "2014-07-13T10:24:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48836941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@aktau First, it will select the whole list in\n\n```\n- item1\n- item2\n- item3\n```\n\n. I do not want to check whether `gq` have not spoiled something if list is lengthy.\n\nSecond, here it what `ap` selects when used on `parse_one_cmd` documentation:\n\n``` C\n/// Parses one command\n///\n/// @param[in,out]  pp        Command to parse.\n/// @param[out]     node      Parsing result. Should be freed with free_cmd.\n/// @param[in]      o         Options that control parsing behavior.\n/// @parblock\n///   o.flags:\n///\n///    Flag                 | Description\n///    -------------------- | -------------------------------------------------\n///    FLAG_POC_EXMODE      | Is set if parser is called for Ex mode\n///    FLAG_POC_CPO_STAR    | Is set if CPO_STAR flag is present in &cpo\n///    FLAG_POC_CPO_SPECI   | Is set if CPO_SPECI flag is present in &cpo\n///    FLAG_POC_CPO_KEYCODE | Is set if CPO_KEYCODE flag is present in &cpo\n///    FLAG_POC_CPO_BAR     | Is set if CPO_BAR flag is present in &cpo\n///    FLAG_POC_ALTKEYMAP   | Is set if &altkeymap option is set\n///    FLAG_POC_RL          | Is set if &rl option is set\n/// @endparblock\n/// @param[in]      position  Position of input.\n/// @param[in]      fgetline  Function used to obtain the next line.\n/// @param[in,out]  cookie    Second argument to fgetline.\n///\n/// @return OK if everything was parsed correctly, FAIL if out of memory, \n///         NOTDONE for parser error.\nint parse_one_cmd(const char_u **pp,\n                  CommandNode **node,\n                  CommandParserOptions o,\n                  CommandPosition position,\n                  LineGetter fgetline,\n                  void *cookie)\n  FUNC_ATTR_NONNULL_ALL\n{\n  CommandNode **next_node = node;\n  CommandNode *children = NULL;\n  CommandParserError error;\n  CommandType type = kCmdUnknown;\n  Range range;\n  const char_u *p;\n  const char_u *s = *pp;\n  const char_u *nextcmd = NULL;\n  const char_u *name = NULL;\n  const char_u *range_start = NULL;\n  bool bang = false;\n  uint_least8_t exflags = 0;\n  uint_least32_t optflags = 0;\n  char_u *enc = NULL;\n  size_t len;\n  CommandArgsParser parse = NULL;\n  CountType cnt_type = kCntMissing;\n  int count = 0;\n  Glob *glob = NULL;\n  char_u *expr = NULL;\n\n```\n\n. Since I do not want to think what it will select next time (e.g. in Python when used on first line of docstring it will select function prototype and when used on last it may select some code) I just banned it from my mind and do not use it ever.\n\nI can sure run `gq` on such piece of code… with `w`. Without `w` it will immediately spoil the whole documentation block and also C code:\n\n``` C\n/// Parses one command\n///\n/// @param[in,out]  pp        Command to parse. @param[out]     node\n/// Parsing result. Should be freed with free_cmd. @param[in]\n/// o         Options that control parsing behavior. @parblock o.flags:\n///\n///    Flag                 | Description --------------------\n///    | ------------------------------------------------- FLAG_POC_EXMODE\n///    | Is set if parser is called for Ex mode FLAG_POC_CPO_STAR    | Is set if\n///    CPO_STAR flag is present in &cpo FLAG_POC_CPO_SPECI   | Is set if\n///    CPO_SPECI flag is present in &cpo FLAG_POC_CPO_KEYCODE | Is set if\n///    CPO_KEYCODE flag is present in &cpo FLAG_POC_CPO_BAR     | Is set if\n///    CPO_BAR flag is present in &cpo FLAG_POC_ALTKEYMAP   | Is set if\n///    &altkeymap option is set FLAG_POC_RL          | Is set if &rl option is\n///    set @endparblock @param[in]      position  Position of input. @param[in]\n///    fgetline  Function used to obtain the next line. @param[in,out]  cookie\n///    Second argument to fgetline.\n///\n/// @return OK if everything was parsed correctly, FAIL if out of memory,\n///         NOTDONE for parser error.\nint parse_one_cmd(const char_u **pp, CommandNode **node, CommandParserOptions o,\n                  CommandPosition position, LineGetter fgetline, void *cookie)\n  FUNC_ATTR_NONNULL_ALL { CommandNode **next_node = node; CommandNode *children\n    = NULL; CommandParserError error; CommandType type = kCmdUnknown; Range\n        range; const char_u *p; const char_u *s = *pp; const char_u *nextcmd\n        = NULL; const char_u *name = NULL; const char_u *range_start = NULL;\n    bool bang = false; uint_least8_t exflags = 0; uint_least32_t optflags = 0;\n    char_u *enc = NULL; size_t len; CommandArgsParser parse = NULL; CountType\n        cnt_type = kCntMissing; int count = 0; Glob *glob = NULL; char_u *expr\n        = NULL;\n\n```\n",
            "created_at": "2014-07-13T10:38:37Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48837185",
            "id": 48837185,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM3MTg1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48837185/reactions"
            },
            "updated_at": "2014-07-13T10:38:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48837185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I'm sorry, I really don't understand this, could you re-phrase it? By \"conflict\" I mean that someone's editor will automatically add/remove something that another's editor removes/add, thus potentially causing an endless cycle.\n\nWhen I edit a paragraph Vim will add trailing space if paragraph I edit began lengthy enough to wrap (and I will additionally add another space(s) if I am not satisfied with automatic formatting because I edited inside a paragraph, but this part is not automatic).\n",
            "created_at": "2014-07-13T10:41:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48837231",
            "id": 48837231,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM3MjMx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48837231/reactions"
            },
            "updated_at": "2014-07-13T10:46:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48837231",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I am wondering why people do not like trailing whitespaces.\n\nFor one reason, it makes it problematic send git patches via email since the patch can become whitespace damaged.  For another, it's annoying when you want do things like join a line only to find out there are three spaces at the end of a line for some reason, so now you have to go and fix it up.\n\nFWIW, I dislike automatic formatting because it often gets in my way, destroying the hard work I have done to make things line up correctly.  Vim's reformatting capability is just not suitable enough to deal with all the coding styles that I need to cope with.\n",
            "created_at": "2014-07-13T13:57:38Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48841197",
            "id": 48841197,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODQxMTk3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48841197/reactions"
            },
            "updated_at": "2014-07-13T13:57:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48841197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/448087?v=4",
                "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}",
                "followers_url": "https://api.github.com/users/jszakmeister/followers",
                "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}",
                "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jszakmeister",
                "id": 448087,
                "login": "jszakmeister",
                "node_id": "MDQ6VXNlcjQ0ODA4Nw==",
                "organizations_url": "https://api.github.com/users/jszakmeister/orgs",
                "received_events_url": "https://api.github.com/users/jszakmeister/received_events",
                "repos_url": "https://api.github.com/users/jszakmeister/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jszakmeister"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Why three spaces? There is one and `J` works the same, be there one or no spaces. I cannot imagine when `gJ` (which behaves differently) may be useful for text. Mail patches are irrelevant for github projects.\n\n> FWIW, I dislike automatic formatting because it often gets in my way, destroying the hard work I have done to make things line up correctly. Vim's reformatting capability is just not suitable enough to deal with all the coding styles that I need to cope with.\n\nIt is good for documentation. I do not have automatic formatting enabled for code, it indeed does destroy things if not configured properly (which is sometimes very hard).\n",
            "created_at": "2014-07-13T14:12:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48841578",
            "id": 48841578,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODQxNTc4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48841578/reactions"
            },
            "updated_at": "2014-07-13T14:12:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48841578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> FWIW, I dislike automatic formatting because it often gets in my way, destroying the hard work I have done to make things line up correctly. Vim's reformatting capability is just not suitable enough to deal with all the coding styles that I need to cope with.\n\nWell said. I format manually when I know vim can't handle it properly, no matter the configuration (happens from time to time). When I know vim will do a good job, I just use my `<leader>q` mapping, presto.\n",
            "created_at": "2014-07-13T14:16:47Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48841690",
            "id": 48841690,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODQxNjkw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48841690/reactions"
            },
            "updated_at": "2014-07-13T14:16:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48841690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
                "events_url": "https://api.github.com/users/aktau/events{/privacy}",
                "followers_url": "https://api.github.com/users/aktau/followers",
                "following_url": "https://api.github.com/users/aktau/following{/other_user}",
                "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/aktau",
                "id": 189413,
                "login": "aktau",
                "node_id": "MDQ6VXNlcjE4OTQxMw==",
                "organizations_url": "https://api.github.com/users/aktau/orgs",
                "received_events_url": "https://api.github.com/users/aktau/received_events",
                "repos_url": "https://api.github.com/users/aktau/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/aktau"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Why three spaces? There is one and J works the same, be there one or no spaces. I cannot imagine when gJ (which behaves differently) may be useful for text. Mail patches are irrelevant for github projects.\n\nIt's not a choice I make, it's an example of working with other\nprojects that aren't careful about their trailing whitespace.  It's\nbeen my experience working with other projects that allow trailing\nwhite space just makes life harder.\n\nI don't think mailing patches is irrelevant just because Neovim is on\nGitHub.  I've worked \"offline\" with maintainers in the past shaping\npatches and doing so via email happened to be the most convenient\nmethod.\n\n> > FWIW, I dislike automatic formatting because it often gets in my way, destroying the hard work I have done to make things line up correctly. Vim's reformatting capability is just not suitable enough to deal with all the coding styles that I need to cope with.\n> \n> It is good for documentation. I do not have automatic formatting enabled for code, it indeed does destroy things if not configured properly (which is sometimes very hard).\n\nI think we'll have to agree to disagree on using it for documentation.\nMy experience has been different--I've tried it for documentation and\nwas very frustrated by the results.\n\n-John\n",
            "created_at": "2014-07-13T14:33:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48842092",
            "id": 48842092,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODQyMDky",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48842092/reactions"
            },
            "updated_at": "2014-07-13T14:33:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48842092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/448087?v=4",
                "events_url": "https://api.github.com/users/jszakmeister/events{/privacy}",
                "followers_url": "https://api.github.com/users/jszakmeister/followers",
                "following_url": "https://api.github.com/users/jszakmeister/following{/other_user}",
                "gists_url": "https://api.github.com/users/jszakmeister/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jszakmeister",
                "id": 448087,
                "login": "jszakmeister",
                "node_id": "MDQ6VXNlcjQ0ODA4Nw==",
                "organizations_url": "https://api.github.com/users/jszakmeister/orgs",
                "received_events_url": "https://api.github.com/users/jszakmeister/received_events",
                "repos_url": "https://api.github.com/users/jszakmeister/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jszakmeister/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jszakmeister/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jszakmeister"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> It's not a choice I make, it's an example of working with other projects that aren't careful about their trailing whitespace. It's been my experience working with other projects that allow trailing white space just makes life harder. \n\nThere is a big difference between allowing trailing whitespaces in certain places and not being careful about them. I would not welcome trailing whitespaces in code too.\n\n> I think we'll have to agree to disagree on using it for documentation. My experience has been different--I've tried it for documentation and was very frustrated by the results.\n\nThis depends on your settings. I cannot use auto-formatting anywhere without  `formatoptions+=w` and this seems to be uncommon option.\n\nI can agree that without it you will get frustrating results everywhere, be it documentation or not.\n",
            "created_at": "2014-07-13T14:49:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-48842513",
            "id": 48842513,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODQyNTEz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48842513/reactions"
            },
            "updated_at": "2014-07-13T14:49:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/48842513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Lint will take care of this, or if not then it's out of scope.\n",
            "created_at": "2016-01-21T06:00:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/944#issuecomment-173465528",
            "id": 173465528,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/944",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzQ2NTUyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/173465528/reactions"
            },
            "updated_at": "2016-01-21T06:00:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/173465528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 15,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/944/comments",
    "created_at": "2014-07-12T23:09:27Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/944/events",
    "html_url": "https://github.com/neovim/neovim/issues/944",
    "id": 37730554,
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "discussion has run its course, need decision how to proceed",
            "id": 83851236,
            "name": "needs:decision",
            "node_id": "MDU6TGFiZWw4Mzg1MTIzNg==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:decision"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/944/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUzNzczMDU1NA==",
    "number": 944,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/944/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/944/timeline",
    "title": "remove trailing whitespace from files that have it",
    "updated_at": "2024-09-04T14:01:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/944",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/189413?v=4",
        "events_url": "https://api.github.com/users/aktau/events{/privacy}",
        "followers_url": "https://api.github.com/users/aktau/followers",
        "following_url": "https://api.github.com/users/aktau/following{/other_user}",
        "gists_url": "https://api.github.com/users/aktau/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/aktau",
        "id": 189413,
        "login": "aktau",
        "node_id": "MDQ6VXNlcjE4OTQxMw==",
        "organizations_url": "https://api.github.com/users/aktau/orgs",
        "received_events_url": "https://api.github.com/users/aktau/received_events",
        "repos_url": "https://api.github.com/users/aktau/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/aktau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aktau/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/aktau"
    }
}