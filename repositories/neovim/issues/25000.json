{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "### Problem\n\nRunning a command with `vim.system()` and then using the object's `:kill()` method with `SIGINT` leaves the process as a zombie, per `ps`. Calling the equivalent `vim.uv.kill()` instead cleans up the process entirely the way I'd expect.\r\n\r\nI have a CI run on my fork showing similar repro steps as below failing on all platforms, e.g. https://github.com/nojnhuh/neovim/actions/runs/6062321135/job/16448423425#step:12:3931 \r\n\r\nThe smallest change I found I can make to fix this particular error is to omit `state.handle` here to skip closing that handle: https://github.com/neovim/neovim/blob/4ea4d72af800c40511afd006ea202d008e653c3f/runtime/lua/vim/_system.lua#L33\r\n\r\nI imagine this and the `vim.uv.kill` workaround leak the libuv handle though which is also not ideal.\r\n\r\ncc @lewis6991 \n\n### Steps to reproduce\n\n```lua\r\nnvim -l - <<EOF\r\nlocal cmd = vim.system({ 'cat', '-' }, { stdin = true }) -- run forever\r\n\r\ncmd:kill('sigint') -- fails this test\r\n-- vim.uv.kill(cmd.pid, 'sigint') -- using this instead works\r\n\r\n-- wait for the process not to exist\r\nlocal done, err = vim.wait(5000, function()\r\n  return vim.uv.kill(cmd.pid, 0) ~= 0\r\nend, 100)\r\n\r\nprint(vim.fn.system('ps p ' .. tostring(cmd.pid)))\r\n\r\nassert(done, err == -1 and 'process still exists' or 'something else went wrong')\r\nprint('ok: process is gone')\r\nEOF\r\n```\r\n\r\n```\r\n    PID TTY      STAT   TIME COMMAND\r\n 176064 pts/3    Z+     0:00 [cat] <defunct>\r\nE5113: Error while calling lua chunk: [string \"local cmd = vim.system({ 'cat', '-' }, { stdi...\"]:13: process still exists\r\nstack traceback:\r\n        [C]: in function 'assert'\r\n        [string \"local cmd = vim.system({ 'cat', '-' }, { stdi...\"]:13: in main chunk\r\n```\r\n\r\nwhereas the output when `vim.uv.kill()` is used instead of `:kill()`:\r\n```\r\n    PID TTY      STAT   TIME COMMAND\r\nok: process is gone\r\n```\n\n### Expected behavior\n\nThe process should no longer exist within a reasonable period of time after `:kill()` is invoked, where `vim.uv.kill(pid, 0)` should not return 0, like similar checks in libuv's tests: https://github.com/libuv/libuv/blob/0d78f3c758fdc41019093353a7ff4fed83005ac9/test/test-spawn.c#L105-L111.\n\n### Neovim version (nvim -v)\n\nv0.10.0-dev-1018+g4ea4d72af\n\n### Vim (not Nvim) behaves the same?\n\nNo\n\n### Operating system/version\n\nArch Linux, kernel 6.4.12-arch1-1\n\n### Terminal name/version\n\nkitty 0.29.2 + tmux 3.3_a\n\n### $TERM environment variable\n\ntmux-256color\n\n### Installation\n\nBuild from source",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for the great report. It made fixing this issue really easy since the repro steps included the solution.",
            "created_at": "2023-09-03T09:19:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/25000#issuecomment-1704061678",
            "id": 1704061678,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25000",
            "node_id": "IC_kwDOAPphoM5lkeru",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704061678/reactions"
            },
            "updated_at": "2023-09-03T09:19:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704061678",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25000/comments",
    "created_at": "2023-09-03T05:01:24Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25000/events",
    "html_url": "https://github.com/neovim/neovim/issues/25000",
    "id": 1878936276,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25000/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5v_krU",
    "number": 25000,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25000/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25000/timeline",
    "title": "`vim.system` command stopped with `:kill()` becomes a zombie",
    "updated_at": "2023-09-03T09:19:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25000",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16093815?v=4",
        "events_url": "https://api.github.com/users/nojnhuh/events{/privacy}",
        "followers_url": "https://api.github.com/users/nojnhuh/followers",
        "following_url": "https://api.github.com/users/nojnhuh/following{/other_user}",
        "gists_url": "https://api.github.com/users/nojnhuh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/nojnhuh",
        "id": 16093815,
        "login": "nojnhuh",
        "node_id": "MDQ6VXNlcjE2MDkzODE1",
        "organizations_url": "https://api.github.com/users/nojnhuh/orgs",
        "received_events_url": "https://api.github.com/users/nojnhuh/received_events",
        "repos_url": "https://api.github.com/users/nojnhuh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/nojnhuh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nojnhuh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/nojnhuh"
    }
}