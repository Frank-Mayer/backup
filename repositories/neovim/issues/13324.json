{
    "active_lock_reason": null,
    "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
        "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
        "followers_url": "https://api.github.com/users/mjlbach/followers",
        "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
        "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mjlbach",
        "id": 13316262,
        "login": "mjlbach",
        "node_id": "MDQ6VXNlcjEzMzE2MjYy",
        "organizations_url": "https://api.github.com/users/mjlbach/orgs",
        "received_events_url": "https://api.github.com/users/mjlbach/received_events",
        "repos_url": "https://api.github.com/users/mjlbach/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mjlbach"
    },
    "assignees": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
            "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
            "followers_url": "https://api.github.com/users/mjlbach/followers",
            "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mjlbach",
            "id": 13316262,
            "login": "mjlbach",
            "node_id": "MDQ6VXNlcjEzMzE2MjYy",
            "organizations_url": "https://api.github.com/users/mjlbach/orgs",
            "received_events_url": "https://api.github.com/users/mjlbach/received_events",
            "repos_url": "https://api.github.com/users/mjlbach/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mjlbach"
        }
    ],
    "author_association": "CONTRIBUTOR",
    "body": "Hello Neovim LSP folks,\r\n\r\nSpawning a new issue from [this Reddit post](https://www.reddit.com/r/neovim/comments/jw9i8b/lsp_diagnostics_is_it_possible_to_only_display).\r\n\r\nAs an ALE user one can specify to emit diagnostics after certain events such as: on buffer enter, on insert leave, on file save etc.\r\n\r\nI use *on file save* since I don't like to see diagnostics until I actually change a file. This makes browsing files, often not my own, far more pleasant since linting/diagnostics display can be distracting. I prefer to see diagnostics only when I am actually editing files.\r\n\r\nWith linting it is often the case that a separate command line utility is run which makes setting up *on file save* processing much easier (I assume). LSP diagnostics however are produced by the language server even when not asked for, usually after the *documentOpen* request been processed (if I recall correctly).\r\n\r\nSo I can understand why Neovim LSP diagnostics appear out of thin air soon after opening a buffer.\r\n\r\nI do wonder whether it is possible to delay the display of diagnostics until after the first file save? I would find that ideal.\r\n\r\nI wonder, and hope, that something like this is possible:\r\n\r\n```viml\r\nvim.lsp.handlers[\"textDocument/publishDiagnostics\"] = vim.lsp.with(\r\n  vim.lsp.diagnostic.on_publish_diagnostics, {\r\n    signs = true,\r\n    underline = false,\r\n    update_in_insert = false,\r\n    virtual_text = true,\r\n    delay_until_save = true <<< NEW OPTION, MAYBE\r\n  }\r\n)\r\n```\r\n\r\nThis theoretical example states to only display diagnostics after a file save operation has occurred, and then proceed as usual.\r\n\r\nBest regards.",
    "closed_at": "2021-07-19T08:51:49Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tjdevries Having some way to display the diagnostics on demand (signs, virtual_text and popups). Probably need a way to clear diagnostics too if there isn't. Toggling them on/off would be cool too. ",
            "created_at": "2020-11-19T15:28:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-730450510",
            "id": 730450510,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczMDQ1MDUxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/730450510/reactions"
            },
            "updated_at": "2020-11-19T15:28:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/730450510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/15027?v=4",
                "events_url": "https://api.github.com/users/rockerBOO/events{/privacy}",
                "followers_url": "https://api.github.com/users/rockerBOO/followers",
                "following_url": "https://api.github.com/users/rockerBOO/following{/other_user}",
                "gists_url": "https://api.github.com/users/rockerBOO/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rockerBOO",
                "id": 15027,
                "login": "rockerBOO",
                "node_id": "MDQ6VXNlcjE1MDI3",
                "organizations_url": "https://api.github.com/users/rockerBOO/orgs",
                "received_events_url": "https://api.github.com/users/rockerBOO/received_events",
                "repos_url": "https://api.github.com/users/rockerBOO/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rockerBOO/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rockerBOO/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rockerBOO"
            }
        },
        {
            "author_association": "NONE",
            "body": "I've been clearing diagnostics with:\n\n```lua\nvim.lsp.util.buf_clear_diagnostics(0, vim.lsp.util.get_line_diagnostics())\n```\n\nBut they'll come back on the next save or text change, and it's only for the buffer.\n\nEdit: the above no longer works since `vim.lsp.diagnostic` was merged. See [here](https://gitlab.com/Iron_E/dotfiles/-/blob/master/.config/nvim/lua/mode-diagnostic.lua) for my updated solution which can handle individual LSPs.",
            "created_at": "2020-11-19T15:48:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-730463673",
            "id": 730463673,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDczMDQ2MzY3Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/730463673/reactions"
            },
            "updated_at": "2021-01-12T23:34:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/730463673",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36409591?v=4",
                "events_url": "https://api.github.com/users/Iron-E/events{/privacy}",
                "followers_url": "https://api.github.com/users/Iron-E/followers",
                "following_url": "https://api.github.com/users/Iron-E/following{/other_user}",
                "gists_url": "https://api.github.com/users/Iron-E/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Iron-E",
                "id": 36409591,
                "login": "Iron-E",
                "node_id": "MDQ6VXNlcjM2NDA5NTkx",
                "organizations_url": "https://api.github.com/users/Iron-E/orgs",
                "received_events_url": "https://api.github.com/users/Iron-E/received_events",
                "repos_url": "https://api.github.com/users/Iron-E/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Iron-E/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Iron-E/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Iron-E"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tjdevries What do you think of letting people just pass the list of autocmd's they want diagnostics to trigger on (where by default the autocmd would be as it is now)? Or do you want me to just add this option? I have a local branch that could be cleaned up that does the former.",
            "created_at": "2021-01-12T05:03:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-758403190",
            "id": 758403190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQwMzE5MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758403190/reactions"
            },
            "updated_at": "2021-01-12T05:04:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758403190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah, we can probably just change it to list of autocmds to do the display. It might be slightly tricky to denounce / not call display multiple times, but it should be OK. ",
            "created_at": "2021-01-12T06:21:17Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-758433878",
            "id": 758433878,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQzMzg3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758433878/reactions"
            },
            "updated_at": "2021-01-12T06:21:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758433878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Do you want me to do it? ",
            "created_at": "2021-01-12T06:21:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-758433941",
            "id": 758433941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQzMzk0MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758433941/reactions"
            },
            "updated_at": "2021-01-12T06:21:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758433941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Totally your call, I can probably get it done tomorrow.",
            "created_at": "2021-01-12T06:23:07Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-758434669",
            "id": 758434669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQzNDY2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758434669/reactions"
            },
            "updated_at": "2021-01-12T06:23:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758434669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "OK, we should remove `update_in_insert` as an option and change it to something like `display_autocmds`, and if anything is passed, then we will wait until one of those autocmds happens to display the updates, otherwise (if nothing is passed) then we will always update right away.\r\n\r\nThat's the better solution and won't explode the complexity. Users can configure the autocmds they want to have it work for.",
            "created_at": "2021-01-12T18:01:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-758835700",
            "id": 758835700,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODgzNTcwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758835700/reactions"
            },
            "updated_at": "2021-01-12T18:01:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758835700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(and you can do it and just tag me and I can take a look)",
            "created_at": "2021-01-12T18:01:24Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-758835772",
            "id": 758835772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODgzNTc3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758835772/reactions"
            },
            "updated_at": "2021-01-12T18:01:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758835772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(oh and normally, we'd leave and suport `update_in_insert` but we haven't released it yet and this is why it's good not to release too early 😆 )",
            "created_at": "2021-01-12T18:06:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-758838738",
            "id": 758838738,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODgzODczOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758838738/reactions"
            },
            "updated_at": "2021-01-12T18:06:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758838738",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bluz71 @rockerBOO @Iron-E Can you all try #13742? There's instructions how to use it in the PR.",
            "created_at": "2021-01-12T19:32:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-758886192",
            "id": 758886192,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODg4NjE5Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758886192/reactions"
            },
            "updated_at": "2021-01-12T19:32:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/758886192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mjlbach,\r\n\r\nI am not getting consistent sign / virtual text updating.\r\n\r\nMy configuration:\r\n\r\n```lua\r\nlocal diagnostic_handler = vim.lsp.with(\r\n  vim.lsp.diagnostic.on_publish_diagnostics, {\r\n    signs = {\r\n      severity_limit = 'Warning',\r\n    },\r\n    underline = false,\r\n    show_diagnostic_autocmds = { 'InsertLeave', 'TextChanged' },\r\n    virtual_text = {\r\n      spacing = 2,\r\n      severity_limit = 'Warning',\r\n    },\r\n  }\r\n)\r\n```\r\n\r\nI think `InsertLeave` is being triggered and updated correctly.\r\n\r\nBut, `TextChanged` is giving me grief. If I delete a line via `dd` (to trigger a diagnostic) I don't get updated signs & virtual text, likewise when I do `u` to undo (and fix). It feels like I am not getting triggering happening.\r\n\r\nCheers.",
            "created_at": "2021-01-13T04:13:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759193702",
            "id": 759193702,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE5MzcwMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759193702/reactions"
            },
            "updated_at": "2021-01-13T04:13:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759193702",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hmm try adding TextYankPost and see if that fixes the former.",
            "created_at": "2021-01-13T04:17:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759194554",
            "id": 759194554,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE5NDU1NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759194554/reactions"
            },
            "updated_at": "2021-01-13T04:17:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759194554",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If you delete the text I believe the highlight will go away, but if the autocmd isn't triggered it won't update the signs which might explain the decoupling",
            "created_at": "2021-01-13T04:17:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759194658",
            "id": 759194658,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE5NDY1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759194658/reactions"
            },
            "updated_at": "2021-01-13T04:17:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759194658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Hmm try adding TextYankPost and see if that fixes the former.\r\n\r\nNo change.\r\n\r\n> If you delete the text I believe the highlight will go away, but if the autocmd isn't triggered it won't update the signs which might explain the decoupling\r\n\r\nI am doing the reverse.\r\n\r\nI have a error free file at first.\r\nI then do a `dd` to break syntax.\r\nI expect signs and virtual text to be displayed but they do not.\r\n\r\nInterestingly if I do `lua vim.lsp.diagnostic.goto_next()` then the diagnostic will be displayed in a floating window. So the diagnostic does exist under the covers but is not being updated after the triggering.\r\n\r\nIt is my understanding that `dd` should trigger `TextChanged`.\r\n\r\nCheers.",
            "created_at": "2021-01-13T04:24:09Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759196391",
            "id": 759196391,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE5NjM5MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759196391/reactions"
            },
            "updated_at": "2021-01-13T04:24:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759196391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, but you have to remember that it will *immediately* trigger display. The language server might not have returned the updated diagnostic by then (and likely hasn't). That's why I suggest the hover  \"CursorHoldI\", but you'll also likely want to lower vim.o.updatetime (I use 250)",
            "created_at": "2021-01-13T04:26:46Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759196997",
            "id": 759196997,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE5Njk5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759196997/reactions"
            },
            "updated_at": "2021-01-13T04:32:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759196997",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Yeah, but you have to remember that it will immediately trigger display. The language server might not have returned the updated diagnostic by then (and likely hasn't). That's why I suggest the hover \"CursorHoldI\"\r\n\r\nSo there is a race condition.\r\n\r\nWhen I hit `dd` it triggers a request for diagnostic and immediately triggers `TextChanged`-based `show_diagnostic_autocmds`, which is blank at that instant, but potentially a couple hundred milliseconds later it will be populated (probably asynchronously).\r\n\r\nHmmm, this is problematic for my use case.\r\n\r\nI definitely do not want to use `CursorHold` since I really only want to trigger diagnostics when saving a file (which happens automatically for me via the [vim-auto-save](https://github.com/907th/vim-auto-save) triggered by `InsertLeave` and `TextChanged`.\r\n\r\nIs there anyway to make the pipeline more synchronous? ",
            "created_at": "2021-01-13T04:36:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759199444",
            "id": 759199444,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE5OTQ0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759199444/reactions"
            },
            "updated_at": "2021-01-13T04:36:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759199444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> you'll also likely want to lower vim.o.updatetime (I use 250)\r\n\r\nI have `set updatetime=100` to make GitGutter more responsive.",
            "created_at": "2021-01-13T04:37:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759199775",
            "id": 759199775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE5OTc3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759199775/reactions"
            },
            "updated_at": "2021-01-13T04:37:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759199775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "What exact behavior do you want? With the patch in the thread, if you don't pass any autocommands, it will always render diagnostics as soon as they are sent from the server. The majority of the time, the return will be within a few hundred milliseconds. If we were to block until response from the server, that would introduce horrible lag. It's already asychronous, this is just exposing control over when you render the updates.",
            "created_at": "2021-01-13T04:38:26Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759200057",
            "id": 759200057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIwMDA1Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759200057/reactions"
            },
            "updated_at": "2021-01-13T04:38:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759200057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> What exact behavior do you want? \r\n\r\nIn my particular case, I want sign and virtual text display and updating to happen after a response from server has been received. That is if my setup specifically triggers diagnostic requests after certain behaviours.\r\n\r\nFor any autocmd that triggers an actual diagnostic LSP request then I want a wait to occur before updating signs and virtual text. Or alternatively have sometime of internal callback that notices that the server has sent new diagnostics, triggered by an autocmd of sorts, hence update the display with those new details.",
            "created_at": "2021-01-13T04:49:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759203152",
            "id": 759203152,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIwMzE1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759203152/reactions"
            },
            "updated_at": "2021-01-13T04:49:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759203152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think there's a slight misunderstanding. You're always receiving diagnostics from the server, we don't request them. The only thing we do with the autocommands is determine when to show them to you. If you always want diagnostics to display immediately as the handler is invoked, then just use the patch in the PR issue and don't set the autocommands to be anything. I'll probably just set this as the default.",
            "created_at": "2021-01-13T04:51:33Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759203797",
            "id": 759203797,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIwMzc5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759203797/reactions"
            },
            "updated_at": "2021-01-13T04:51:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759203797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here, try not setting any autocommands and pull the latest commit of the PR, I just set the default to what I think you want.",
            "created_at": "2021-01-13T04:54:04Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759204430",
            "id": 759204430,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIwNDQzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759204430/reactions"
            },
            "updated_at": "2021-01-13T04:54:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759204430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Here, try not setting any autocommands and pull the latest commit of the PR, I just set the default to what I think you want.\r\n\r\nI want diagnostics delayed until at least the first file save and from then on to be updated in real time but explicitly **not** whilst in insert mode (aka I liked the old `￼update_in_insert = false` option).\r\n\r\nWhat do you recommend as the best `show_diagnostic_autocmds` to achieve that for me?",
            "created_at": "2021-01-13T04:57:28Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759205417",
            "id": 759205417,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIwNTQxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759205417/reactions"
            },
            "updated_at": "2021-01-13T04:57:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759205417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I want diagnostics delayed until at least the first file save \r\n\r\nYou may ask why I want that? As I note in the first post, I often browse other people's code (JavaScript) which 99% of the time does not confirm to my particular `ESLint` rules. The popping of signs and virtual text whilst I am in pure browse code mode is highly annoying and pretty much useless (since I won't be fixing these lint errors).\r\n\r\nIn [ALE](https://github.com/dense-analysis/ale) one can set `let g:ale_lint_on_save = 1` to prevent diagnostics until actual editing happens.\r\n\r\nJust giving background about my particular use case. I suspect a percentage of ALE users who will come over may want to achieve something similar.",
            "created_at": "2021-01-13T05:05:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759208069",
            "id": 759208069,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIwODA2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759208069/reactions"
            },
            "updated_at": "2021-01-13T05:05:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759208069",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I want diagnostics delayed until at least the first file save and from then on to be\r\n\r\nWe're probably never going to be able to give you that level of granularity. With this method, you can lint after every save with ` BufWritePost`. You'll have to write your own handler if you want bufwrite post to toggle a different set of autocommands.  \r\n\r\n> from then on to be updated in real time but explicitly not whilst in insert mode (aka I liked the old ￼update_in_insert = false option).\r\n\r\n`InsertLeave`, `TextChanged`, `CursorHold` should do it with a low enough cursorhold",
            "created_at": "2021-01-13T05:09:02Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759208918",
            "id": 759208918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIwODkxOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759208918/reactions"
            },
            "updated_at": "2021-01-13T05:23:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759208918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "FWIW this PR shouldn't have changed anything, if you use \"InsertLeave\", \"CursorHoldI\" the behavior should be exactly as it was prior to this PR with update_on_insert. if you use no autocommands, it should be as it was with update_on_insert = True.",
            "created_at": "2021-01-13T05:14:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759210494",
            "id": 759210494,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIxMDQ5NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759210494/reactions"
            },
            "updated_at": "2021-01-13T05:16:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759210494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> We're probably never going to be able to give you that level of granularity. With this method, you can lint after every save with BufWritePost.\r\n\r\nExcept `BufWritePost` by itself has the race condition discussed above (server response will be delivered after the sign/virt-text display triggering has already occured) which makes it a no go. \r\n\r\nUsing `CursorHold` will on the other hand will emit diagnostics automatically after file open (which has been the Neovim LSP behaviour since the start anyway). I actually do want `CursorHold` triggered, but only after the first file save has occurred. Something that probably won't be implemented.\r\n\r\nIt is what it is. I will probably stick with [ALE](https://github.com/dense-analysis/ale) via their `lint_on_save` option.\r\n\r\nCheers.",
            "created_at": "2021-01-13T05:31:23Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759215551",
            "id": 759215551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIxNTU1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759215551/reactions"
            },
            "updated_at": "2021-01-13T05:33:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759215551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "There isn't a race condition, the difference is that ALE (I believe, reading through their source briefly) is not using this option for language servers, but rather for running dispatched linters triggered on save. The \"race condition\" is that there will be a 100-200 ms delay until cursor hold updates your diagnostics, whereas with ALE, the delay will be longer if the linting is only triggered after save. The end effect is both ALE and neovim will show you the diagnostics, but neovim will show you them faster (and incrementally). Get rid of `InsertLeave` and it should be almost exactly the same experience as ALE.\r\n\r\nThe principal difficulty is *we don't know* when the language server will return all of it's diagnostics. We might be able to optionally add timer start, so that when you trigger the save autocmd, it's delayed 200 ms until the language server is likely up to date.",
            "created_at": "2021-01-13T05:40:19Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759218594",
            "id": 759218594,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIxODU5NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759218594/reactions"
            },
            "updated_at": "2021-01-13T05:50:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759218594",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The principal difficulty is we don't know when the language server will return all of it's diagnostics. We might be able to optionally add timer start, so that when you trigger the save autocmd, it's delayed 200 ms until the language server is likely up to date.\r\n\r\nA user configurable delay would actually solve my issue. I would probably set it to 500-750ms since I don't mind the diagnostics coming in a tad after file save.",
            "created_at": "2021-01-13T05:53:18Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759223089",
            "id": 759223089,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIyMzA4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759223089/reactions"
            },
            "updated_at": "2021-01-13T05:53:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759223089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> There isn't a race condition, the difference is that ALE (I believe, reading through their source briefly) is not using this option for language servers, but rather for running dispatched linters triggered on save.\r\n\r\nI just tested ALE with the Dart Language Server (analysis server) and it definitely does pause diagnostic display until after file save if `lint_on_save` is set. From then on it updates diagnostics only after each save, at least that is what I see.\r\n\r\nBut Neovim LSP does not need, nor want, to re-implement ALE. If somebody wants ALE they should use ALE.\r\n\r\nHowever, the idea floated of a `delay` would be excellent since it would work well with certain types of autocmds (specifically BufWritePost).",
            "created_at": "2021-01-13T06:03:25Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759226705",
            "id": 759226705,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIyNjcwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759226705/reactions"
            },
            "updated_at": "2021-01-13T06:03:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759226705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm just going to go ahead  implement the wrapper around the command called via autocmd using timer_start, and I think you'll find the experience is the same as ALE.",
            "created_at": "2021-01-13T06:07:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759228302",
            "id": 759228302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTIyODMwMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759228302/reactions"
            },
            "updated_at": "2021-01-13T06:07:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759228302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks @mjlbach I appreciate that very much.\r\n\r\nI would be more than willing to test it out.\r\nI too think a `time_start` with some type of delay would solve my particular use case.\r\n\r\nFor me I think `show_diagnostic_autocmds = { 'InsertLeave', 'TextChanged' }` with between 300-600ms display delay would be just about ideal.\r\n\r\nGood chat today.",
            "created_at": "2021-01-13T06:51:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759245634",
            "id": 759245634,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTI0NTYzNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759245634/reactions"
            },
            "updated_at": "2021-01-13T06:51:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759245634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bluz71 You can try [this branch](https://github.com/mjlbach/neovim/tree/diagnostic_autocmd_delay), I don't think it will make it into the PR (it's probably it's own thing), but I can open another one for discussion. For the settings you want, I would start with this:\r\n\r\n```\r\n      show_diagnostic_autocmds = { \"BufWritePost\" },\r\n      diagnostic_delay = 1000\r\n```",
            "created_at": "2021-01-13T08:10:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759280643",
            "id": 759280643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTI4MDY0Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759280643/reactions"
            },
            "updated_at": "2021-01-13T08:11:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759280643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It will take me about a day to report back due to nighttime and existing commitments tomorrow morning. But after that it will definitely give it a go.\r\n\r\nStay tuned.",
            "created_at": "2021-01-13T09:23:55Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759320167",
            "id": 759320167,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTMyMDE2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759320167/reactions"
            },
            "updated_at": "2021-01-13T09:23:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759320167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "PR #13748 solves this issue.",
            "created_at": "2021-01-14T06:57:21Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-759969020",
            "id": 759969020,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTk2OTAyMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759969020/reactions"
            },
            "updated_at": "2021-01-14T06:57:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/759969020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mjlbach,\r\n\r\nIt may be worthwhile, time permitting, to revisit this now that byte_ranges / increment change is temporarily paused.\r\n\r\n@tjdevries was not a fan of the API in #13748 as noted by his post.\r\n\r\n> Some thoughts (will probably edit some more):\r\n>\r\n> 1. This approach does not automatically share the configuration of the display with the handler\r\n> 2. This approach may lead to calling showing displays much more often than necessary (if you're calling > it in a timer for example, which will be set even when there are no new diagnostics to display).\r\n>\r\n> It is possible to debounce in the old method as well, but perhaps slightly complicated atm. I think we can make it possible to debounce more easily when we ship more debounce utilties / wrappers.\r\n\r\nHe may prefer your proposal a few posts up, something like:\r\n\r\n```lua\r\nvim.lsp.handlers[\"textDocument/publishDiagnostics\"] = vim.lsp.with(\r\n  vim.lsp.diagnostic.on_publish_diagnostics, {\r\n    signs = true,\r\n    underline = false,    \r\n    virtual_text = true,\r\n    show_diagnostic_autocmds = { 'InsertLeave', 'TextChanged' }, -- NEW OPTION\r\n    diagnostic_delay = 500  -- NEW OPTION\r\n  }\r\n)\r\n```\r\n\r\nMost folks wouldn't need to set `show_diagnostic_autocmds` and `diagnostic_delay`, but some who want tight control and when and how to show diagnostic will.\r\n\r\nCheers.",
            "created_at": "2021-02-24T02:44:52Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-784708178",
            "id": 784708178,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDcwODE3OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784708178/reactions"
            },
            "updated_at": "2021-02-24T02:44:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784708178",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I actually fixed 2 already, display only gets called on change. 1 I'm not sure, I've discussed the need for a global lsp namespace for settings but not sure what the consensus is ",
            "created_at": "2021-02-24T02:58:27Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-784712724",
            "id": 784712724,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDcxMjcyNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784712724/reactions"
            },
            "updated_at": "2021-02-24T02:58:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784712724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We should decide on this before 0.5 since it's a large API area.\r\n\r\nI can try and look again at the PR and see what I think. I want it to be 1-line for simple situations for users to configure :) so it may be difficult",
            "created_at": "2021-02-24T04:21:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-784746461",
            "id": 784746461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDc0NjQ2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784746461/reactions"
            },
            "updated_at": "2021-02-24T04:21:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784746461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the way I did it is a decent approach, and with the addition of a namespace options could be shared across the diagnostic handler and the diagnostic invoking function, but you have way more experience with this than me so I'm going to defer to you on this one.\r\n\r\nI think the challenging part is it seems like people have a lot of different opinions + factorial combinations of when they want diagnostics refreshed. Autocmds *almost* aren't expressive enough (or maybe we should just add more auto commands haha)",
            "created_at": "2021-02-24T04:23:16Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-784747103",
            "id": 784747103,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDc0NzEwMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784747103/reactions"
            },
            "updated_at": "2021-02-24T04:46:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784747103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> We should decide on this before 0.5 since it's a large API area.\r\n\r\nStrong agreement on this.\r\n\r\n> I think the challenging part is it seems like people have a lot of different opinions + factorial combinations of when they want diagnostics refreshed.\r\n\r\nI think this API takes care of most such combinations:\r\n\r\n```lua\r\nvim.lsp.handlers[\"textDocument/publishDiagnostics\"] = vim.lsp.with(\r\n  vim.lsp.diagnostic.on_publish_diagnostics, {\r\n    signs = true,\r\n    underline = false,    \r\n    virtual_text = true,\r\n    show_diagnostic_autocmds = {'InsertLeave', 'TextChanged'},\r\n    diagnostic_delay = 500\r\n  }\r\n)\r\n```\r\n\r\nUser get to chooses after which Neovim events diagnostics will be updated on screen and they get to factor in a small delay to give the language server time to send over the diagnostics (for example after a text edit). \r\n\r\nHeck I would really like `diagnostic_delay` not to exist and for the Neovim LSP client to factor in a delay all by itself if a user has set `show_diagnostic_autocmds`. What value to choose? I just looked it up, [ALE](https://github.com/dense-analysis/ale/blob/master/plugin/ale.vim#L71) appears to use a 200ms delay, but I am not sure that applies to language servers as compared to command line linters. From my experiments 200ms was not enough time. A user override probably will be needed since this is a *how long is a piece of string issue*.",
            "created_at": "2021-02-24T07:19:13Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-784852311",
            "id": 784852311,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDg1MjMxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784852311/reactions"
            },
            "updated_at": "2021-02-24T07:19:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784852311",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That was my first pass implementation ^, it wasn't flexible enough to allow things like delays, which is why I changed it ",
            "created_at": "2021-02-24T07:20:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-784853366",
            "id": 784853366,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDg1MzM2Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784853366/reactions"
            },
            "updated_at": "2021-02-24T07:20:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/784853366",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry for the bump, just wanting to get a feel for where we are and the path ahead.\r\n\r\nPR #13748 solves this issue, but @tjdevries was not entirely happy with the API as [noted here](https://github.com/neovim/neovim/pull/13748#issuecomment-760288071). I can understand where he is coming from. I am not too fussed with whatever API is chosen just as long as it achieves the desire of this issue, that being allowing users to convert asynchronous diagnostics (LSP default) to synchronous event-driven diagnostics (aka like ALE can do).\r\n\r\nSo the current state of this issue is paused due to other more pressing matters, including the 0.5 release which does feel somewhat close.\r\n\r\nIf this does not make the cut for 0.5, and it probably won't, then may I ask that it be considered for 0.5.1 or 0.5.2 rather than 0.6? For example `debounce_did_change_notify` #14119 looks like it will be 0.5.1.\r\n\r\nCheers.\r\n\r\n",
            "created_at": "2021-03-28T03:40:32Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-808839085",
            "id": 808839085,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwODgzOTA4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808839085/reactions"
            },
            "updated_at": "2021-03-28T03:40:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/808839085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I no longer need this.\r\n\r\nI have setup global diagnostics toggling as noted in [this Reddit post](https://www.reddit.com/r/neovim/comments/ng0dj0/lsp_diagnostics_query_is_there_an_way_to_toggle).\r\n\r\nI have bound that to a mapping which I toggle when I now longer want to see signs/virtual-text diagnostics as noted by [this post](https://www.reddit.com/r/neovim/comments/ng0dj0/lsp_diagnostics_query_is_there_an_way_to_toggle/gyoogr2/). That achieves what I desire.\r\n\r\nFrom my perspective this issue can be closed.",
            "created_at": "2021-05-22T07:35:39Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-846369086",
            "id": 846369086,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0NjM2OTA4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/846369086/reactions"
            },
            "updated_at": "2021-05-22T07:35:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/846369086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "NONE",
            "body": "If it helps, just pitching in for anyone ending up here after trying to figure out (via GitHub, Reddit, Google, etc.) how to selectively and permanently enable / disable (parts) of LSP indicators, such as signs and virtual text or trying to accomplish similar end results using `autocmd` (for instance, to display indicators only after saving); see below for a few 'creative' snippets that accomplishes this goal.\r\n\r\nThe result of using buffer-local variables in the snippets below is that whichever combination of indicator displaying you choose, it's buffer specific. Changing the buffer-local variables to global variables can easily change this behaviour to allow global changes.\r\n\r\n<details>\r\n<summary>file :: ~/.config/nvim/lua/function/function/lsp_diagnostic_indicators.lua :: loaded on-demand via require statement</summary>\r\n\r\n```lua\r\nlocal lsp_diagnostic_indicators = {}\r\n\r\nlsp_diagnostic_indicators.none = function()\r\n  vim.b.lsp_diagnostic_indicators_show = false\r\n\r\n  _G.lsp_diagnostic_indicators_disable()\r\n  _G.lsp_diagnostic_indicators_clear()\r\n\r\n  return\r\nend\r\n\r\nlsp_diagnostic_indicators.redraw = function()\r\n  _G.lsp_diagnostic_indicators_redraw()\r\n\r\n  return\r\nend\r\n\r\nlsp_diagnostic_indicators.signs = function()\r\n  vim.b.lsp_diagnostic_indicators_mode = 'Signs'\r\n  vim.b.lsp_diagnostic_indicators_show = true\r\n\r\n  _G.lsp_diagnostic_indicators_set()\r\n  _G.lsp_diagnostic_indicators_redraw()\r\n\r\n  return\r\nend\r\n\r\nlsp_diagnostic_indicators.signsvirtualtext = function()\r\n  vim.b.lsp_diagnostic_indicators_mode = 'SignsVirtualText'\r\n  vim.b.lsp_diagnostic_indicators_show = true\r\n\r\n  _G.lsp_diagnostic_indicators_set()\r\n  _G.lsp_diagnostic_indicators_redraw()\r\n\r\n  return\r\nend\r\n\r\nlsp_diagnostic_indicators.virtualtext = function()\r\n  vim.b.lsp_diagnostic_indicators_mode = 'VirtualText'\r\n  vim.b.lsp_diagnostic_indicators_show = true\r\n\r\n  _G.lsp_diagnostic_indicators_set()\r\n  _G.lsp_diagnostic_indicators_redraw()\r\n\r\n  return\r\nend\r\n\r\nreturn lsp_diagnostic_indicators\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>file :: ~/.config/nvim/lua/plugin/nvim-lspconfig.lua :: loaded via tjdevries/astronauta.nvim</summary>\r\n\r\n```lua\r\nfunction _G.lsp_diagnostic_indicators_clear()\r\n  vim.lsp.diagnostic.clear(0)\r\nend\r\n\r\nfunction _G.lsp_diagnostic_indicators_disable()\r\n  vim.lsp.handlers['textDocument/publishDiagnostics'] = vim.lsp.with(\r\n    vim.lsp.diagnostic.on_publish_diagnostics, {\r\n      signs = false,\r\n      underline = false,\r\n      update_in_insert = false,\r\n      virtual_text = false\r\n    }\r\n  )\r\nend\r\n\r\nfunction _G.lsp_diagnostic_indicators_redraw()\r\n  -- NOTE: This function might become obsolete after the merge of 'https://github.com/neovim/neovim/pull/13748', who knows !\r\n  for _,lsp_client_id in pairs(vim.tbl_keys(vim.lsp.buf_get_clients())) do\r\n    vim.lsp.handlers['textDocument/publishDiagnostics'](\r\n      nil,\r\n      'textDocument/publishDiagnostics', {\r\n          diagnostics = vim.lsp.diagnostic.get(0, lsp_client_id),\r\n          uri = vim.uri_from_bufnr(0)\r\n      },\r\n      lsp_client_id\r\n    )\r\n  end\r\nend\r\n\r\nfunction _G.lsp_diagnostic_indicators_set()\r\n  vim.lsp.handlers['textDocument/publishDiagnostics'] = vim.lsp.with(\r\n    vim.lsp.diagnostic.on_publish_diagnostics, {\r\n      severity_sort = true,\r\n      signs = function()\r\n        if vim.b.lsp_diagnostic_indicators_mode == 'Signs' or vim.b.lsp_diagnostic_indicators_mode == 'SignsVirtualText' then\r\n          return true\r\n        else\r\n          return false\r\n        end\r\n      end,\r\n      underline = false,\r\n      update_in_insert = false,\r\n      virtual_text = function()\r\n        if vim.b.lsp_diagnostic_indicators_mode == 'VirtualText' or vim.b.lsp_diagnostic_indicators_mode == 'SignsVirtualText' then\r\n          return \"{ severity_limit = 'Hint', spacing = 10 }\"\r\n        else\r\n          return false\r\n        end\r\n      end,\r\n    }\r\n  )\r\nend\r\n\r\n_G.lsp_diagnostic_indicators_disable()\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>usable calls</summary>\r\n\r\n```lua\r\nlua require(\"function.lsp_diagnostic_indicators\").none()\r\nlua require(\"function.lsp_diagnostic_indicators\").redraw()\r\nlua require(\"function.lsp_diagnostic_indicators\").signs()\r\nlua require(\"function.lsp_diagnostic_indicators\").signsvirtualtext()\r\nlua require(\"function.lsp_diagnostic_indicators\").virtualtext()\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>file :: ~/.config/nvim/lua/plugin/autocommands.lua :: loaded via tjdevries/astronauta.nvim</summary>\r\n\r\n```lua\r\nvim.api.nvim_exec([[\r\n  augroup GlobalBufferVisuals\r\n    autocmd!\r\n\r\n    autocmd BufEnter,BufNew,BufHidden * lua require('function.global_buffer_visuals').enable()\r\n    autocmd BufLeave                  * lua require('function.global_buffer_visuals').disable()\r\n  augroup END\r\n]], false)\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>file :: ~/.config/nvim/lua/function/global_buffer_visuals.lua :: called by autocmd group `GlobalBufferVisuals`</summary>\r\n\r\n```lua\r\nlocal global_buffer_visuals = {}\r\n\r\nlocal global_buffer_visuals_exclude_buftype = {\r\n  'nofile',\r\n  'nowrite',\r\n  'prompt',\r\n  'quickfix',\r\n  'terminal'\r\n}\r\n\r\nlocal global_buffer_visuals_exclude_filetype = {\r\n  'Mundo',\r\n  'MundoDiff',\r\n  'NvimTree',\r\n  'TelescopePrompt',\r\n  'fugitive',\r\n  'fugitiveblame',\r\n  'gitmessengerpopup',\r\n  'help',\r\n  'lspinfo',\r\n  'markdown',\r\n  'minimap',\r\n  'packer',\r\n  'qf',\r\n  'tabman',\r\n  'tagbar',\r\n  'toggleterm'\r\n}\r\n\r\nglobal_buffer_visuals.disable = function()\r\n  for _, excluded_buftype in pairs(global_buffer_visuals_exclude_buftype) do\r\n    if vim.bo.buftype == excluded_buftype then\r\n      return\r\n    end\r\n  end\r\n\r\n  for _, excluded_filetype in pairs(global_buffer_visuals_exclude_filetype) do\r\n    if vim.bo.filetype == excluded_filetype then\r\n      return\r\n    end\r\n  end\r\n\r\n  if vim.b.lsp_diagnostic_indicators_show then\r\n    if #vim.tbl_keys(vim.lsp.buf_get_clients()) >= 1 then\r\n      _G.lsp_diagnostic_indicators_disable()\r\n      _G.lsp_diagnostic_indicators_clear()\r\n    end\r\n  end\r\n\r\n  return\r\nend\r\n\r\nglobal_buffer_visuals.enable = function()\r\n  for _, excluded_buftype in pairs(global_buffer_visuals_exclude_buftype) do\r\n    if vim.bo.buftype == excluded_buftype then\r\n      return\r\n    end\r\n  end\r\n\r\n  for _, excluded_filetype in pairs(global_buffer_visuals_exclude_filetype) do\r\n    if vim.bo.filetype == excluded_filetype then\r\n      return\r\n    end\r\n  end\r\n\r\n  if #vim.tbl_keys(vim.lsp.buf_get_clients()) >= 1 then\r\n    if vim.b.lsp_diagnostic_indicators_show == nil then\r\n      vim.b.lsp_diagnostic_indicators_show = true\r\n    end\r\n\r\n    if vim.b.lsp_diagnostic_indicators_mode == nil then\r\n      vim.b.lsp_diagnostic_indicators_mode = 'SignsVirtualText'\r\n    end\r\n\r\n    if vim.b.lsp_diagnostic_indicators_show then\r\n      _G.lsp_diagnostic_indicators_set()\r\n      _G.lsp_diagnostic_indicators_redraw()\r\n    end\r\n  end\r\n\r\n  return\r\nend\r\n\r\nreturn global_buffer_visuals\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>example keybinding snippet using folke/which-key.nvim</summary>\r\n\r\n```lua\r\nl = {\r\n  name = \"+LSP\",\r\n  a = { '<cmd>lua require(\"function.lsp_diagnostic_indicators\").signsvirtualtext()<cr>', 'All indicators' },\r\n  n = { '<cmd>lua require(\"function.lsp_diagnostic_indicators\").none()<cr>', 'No indicators' },\r\n  r = { '<cmd>lua require(\"function.lsp_diagnostic_indicators\").redraw()<cr>', 'Redraw indicators' },\r\n  s = { '<cmd>lua require(\"function.lsp_diagnostic_indicators\").signs()<cr>', 'Sign indicators only' },\r\n  v = { '<cmd>lua require(\"function.lsp_diagnostic_indicators\").virtualtext()<cr>', 'Virtual text indicators only' }\r\n}\r\n```\r\n</details>",
            "created_at": "2021-05-24T21:39:22Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-847353681",
            "id": 847353681,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg0NzM1MzY4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/847353681/reactions"
            },
            "updated_at": "2021-05-25T21:20:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/847353681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/58056722?v=4",
                "events_url": "https://api.github.com/users/lcrockett/events{/privacy}",
                "followers_url": "https://api.github.com/users/lcrockett/followers",
                "following_url": "https://api.github.com/users/lcrockett/following{/other_user}",
                "gists_url": "https://api.github.com/users/lcrockett/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lcrockett",
                "id": 58056722,
                "login": "lcrockett",
                "node_id": "MDQ6VXNlcjU4MDU2NzIy",
                "organizations_url": "https://api.github.com/users/lcrockett/orgs",
                "received_events_url": "https://api.github.com/users/lcrockett/received_events",
                "repos_url": "https://api.github.com/users/lcrockett/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lcrockett/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lcrockett/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lcrockett"
            }
        },
        {
            "author_association": "NONE",
            "body": "I will just add that having the `show_diagnostic_autocmds` option is still really good for a lot of people and really prevents it from getting super complex like a lot of the other solutions here are.",
            "created_at": "2021-06-23T14:45:40Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-866901782",
            "id": 866901782,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjkwMTc4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/866901782/reactions"
            },
            "updated_at": "2021-06-23T14:45:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/866901782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/25797210?v=4",
                "events_url": "https://api.github.com/users/emr-arvig/events{/privacy}",
                "followers_url": "https://api.github.com/users/emr-arvig/followers",
                "following_url": "https://api.github.com/users/emr-arvig/following{/other_user}",
                "gists_url": "https://api.github.com/users/emr-arvig/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/emr-arvig",
                "id": 25797210,
                "login": "emr-arvig",
                "node_id": "MDQ6VXNlcjI1Nzk3MjEw",
                "organizations_url": "https://api.github.com/users/emr-arvig/orgs",
                "received_events_url": "https://api.github.com/users/emr-arvig/received_events",
                "repos_url": "https://api.github.com/users/emr-arvig/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/emr-arvig/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/emr-arvig/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/emr-arvig"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Associating diagnostics with autocmds fundamentally means converting something that is asynchronous into something that becomes synchronous.\r\n\r\nAPI's to achieve that are complex.\r\nTiming is tricky.\r\nAnd I am not sure there is much user demand.\r\n\r\nMy original request spawned from my desire to not be distracted by LSP diagnostics when in browsing mode.\r\n\r\nIssue #14825, *add helper to toggle display of diagnostics*, is the solution I am using now and I feel that it is the correct solution for this issue.\r\n\r\nHence, I am closing this since even if something was implemented, I would not use it.\r\n\r\nThe associated PR may also want to be closed (depending how @mjlbach feels): #13748",
            "created_at": "2021-07-19T08:51:49Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-882369874",
            "id": 882369874,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "IC_kwDOAPphoM40l-VS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/882369874/reactions"
            },
            "updated_at": "2021-07-19T08:51:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/882369874",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
                "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
                "followers_url": "https://api.github.com/users/bluz71/followers",
                "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
                "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bluz71",
                "id": 11382509,
                "login": "bluz71",
                "node_id": "MDQ6VXNlcjExMzgyNTA5",
                "organizations_url": "https://api.github.com/users/bluz71/orgs",
                "received_events_url": "https://api.github.com/users/bluz71/received_events",
                "repos_url": "https://api.github.com/users/bluz71/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bluz71"
            }
        },
        {
            "author_association": "NONE",
            "body": "### ",
            "created_at": "2021-10-14T18:45:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-943625508",
            "id": 943625508,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "IC_kwDOAPphoM44PpUk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/943625508/reactions"
            },
            "updated_at": "2021-10-14T20:39:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/943625508",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20437334?v=4",
                "events_url": "https://api.github.com/users/ddzero2c/events{/privacy}",
                "followers_url": "https://api.github.com/users/ddzero2c/followers",
                "following_url": "https://api.github.com/users/ddzero2c/following{/other_user}",
                "gists_url": "https://api.github.com/users/ddzero2c/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ddzero2c",
                "id": 20437334,
                "login": "ddzero2c",
                "node_id": "MDQ6VXNlcjIwNDM3MzM0",
                "organizations_url": "https://api.github.com/users/ddzero2c/orgs",
                "received_events_url": "https://api.github.com/users/ddzero2c/received_events",
                "repos_url": "https://api.github.com/users/ddzero2c/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ddzero2c/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ddzero2c/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ddzero2c"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just wanted to share my solution for those who still would like all diagnostics to remain hidden before a file is saved:\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd({\"BufNew\", \"InsertEnter\"}, {\r\n-- or vim.api.nvim_create_autocmd({\"BufNew\", \"TextChanged\", \"TextChangedI\", \"TextChangedP\", \"TextChangedT\"}, {\r\n  callback = function(args)\r\n    vim.diagnostic.disable(args.buf)\r\n  end\r\n})\r\n\r\nvim.api.nvim_create_autocmd({\"BufWrite\"}, {\r\n  callback = function(args)\r\n    vim.diagnostic.enable(args.buf)\r\n  end\r\n})\r\n```\r\n\r\nThis disables the diagnostics when a new buffer is created and when you change mode to Insert and re-enables them when you save the file. It doesn't cover some corner cases (e.g. deleting in Normal mode, undo/redo), but works well enough for me 99% of the time without diagnostics jumping around when I'm actually editing code.\r\n\r\nYou could try replacing `InsertEnter` with a series of [`TextChanged*` events](https://neovim.io/doc/user/autocmd.html#autocmd-events) for a more robust algorithm but it could have performance implications (I'm trying it out now, not sure yet).",
            "created_at": "2023-06-14T21:52:43Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-1592038788",
            "id": 1592038788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "IC_kwDOAPphoM5e5JWE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1592038788/reactions"
            },
            "updated_at": "2023-06-14T21:52:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1592038788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/223481?v=4",
                "events_url": "https://api.github.com/users/jgonera/events{/privacy}",
                "followers_url": "https://api.github.com/users/jgonera/followers",
                "following_url": "https://api.github.com/users/jgonera/following{/other_user}",
                "gists_url": "https://api.github.com/users/jgonera/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jgonera",
                "id": 223481,
                "login": "jgonera",
                "node_id": "MDQ6VXNlcjIyMzQ4MQ==",
                "organizations_url": "https://api.github.com/users/jgonera/orgs",
                "received_events_url": "https://api.github.com/users/jgonera/received_events",
                "repos_url": "https://api.github.com/users/jgonera/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jgonera/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jgonera/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jgonera"
            }
        },
        {
            "author_association": "NONE",
            "body": "the solution to this problem is still very hacky, isn't there a inbuilt way to specify for LSP to show diagnostics on file save ??",
            "created_at": "2023-09-20T08:31:36Z",
            "html_url": "https://github.com/neovim/neovim/issues/13324#issuecomment-1727230391",
            "id": 1727230391,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/13324",
            "node_id": "IC_kwDOAPphoM5m83G3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727230391/reactions"
            },
            "updated_at": "2023-09-20T08:31:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727230391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62803658?v=4",
                "events_url": "https://api.github.com/users/vovw/events{/privacy}",
                "followers_url": "https://api.github.com/users/vovw/followers",
                "following_url": "https://api.github.com/users/vovw/following{/other_user}",
                "gists_url": "https://api.github.com/users/vovw/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vovw",
                "id": 62803658,
                "login": "vovw",
                "node_id": "MDQ6VXNlcjYyODAzNjU4",
                "organizations_url": "https://api.github.com/users/vovw/orgs",
                "received_events_url": "https://api.github.com/users/vovw/received_events",
                "repos_url": "https://api.github.com/users/vovw/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vovw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vovw/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vovw"
            }
        }
    ],
    "comments": 48,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/13324/comments",
    "created_at": "2020-11-19T03:38:49Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/13324/events",
    "html_url": "https://github.com/neovim/neovim/issues/13324",
    "id": 746220422,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/13324/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU3NDYyMjA0MjI=",
    "number": 13324,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 15,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 16,
        "url": "https://api.github.com/repos/neovim/neovim/issues/13324/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/13324/timeline",
    "title": "[LSP Diagnostics Feature Enhancement] delay_until_save option for on_publish_diagnostics (if possible)",
    "updated_at": "2023-09-20T08:31:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/13324",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11382509?v=4",
        "events_url": "https://api.github.com/users/bluz71/events{/privacy}",
        "followers_url": "https://api.github.com/users/bluz71/followers",
        "following_url": "https://api.github.com/users/bluz71/following{/other_user}",
        "gists_url": "https://api.github.com/users/bluz71/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bluz71",
        "id": 11382509,
        "login": "bluz71",
        "node_id": "MDQ6VXNlcjExMzgyNTA5",
        "organizations_url": "https://api.github.com/users/bluz71/orgs",
        "received_events_url": "https://api.github.com/users/bluz71/received_events",
        "repos_url": "https://api.github.com/users/bluz71/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bluz71/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bluz71/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bluz71"
    }
}