{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "### Problem\r\n\r\nWe have `vim.iter` now, and this is where iterable features should live.\r\n\r\n### Expected behavior\r\n\r\n```\r\nvim.tbl_extend() => Iter:extend()\r\nvim.tbl_deep_extend()  // why is this a separate function?\r\nvim.tbl_flatten() => Iter:flatten()\r\nvim.tbl_map()\r\nvim.tbl_filter()\r\nvim.tbl_isempty() => Iter:empty()\r\nvim.tbl_count() => Iter:count()\r\nvim.tbl_contains() => Iter:any()\r\n```\r\n\r\nFunctions that are truly table-specific can continue to live on `vim.tbl_xx`, these are: \r\n\r\n```\r\nvim.tbl_get()\r\nvim.tbl_isarray()\r\nvim.tbl_islist()\r\nvim.tbl_keys()\r\nvim.tbl_add_reverse_lookup()  // ??\r\nvim.tbl_values()  // probably could be in vim.iter ?\r\n```",
    "closed_at": "2023-12-05T23:26:48Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I'm not sure `extend` makes sense for an abstract iterable; that's a very (Lua) table specific function. (Under the hood this is one function with a flag `true` or `false`, so these could be combined, if the `deep` flag is moved to last or optional.)\r\n\r\nSimilar for `flatten` (and `keys` and `values`, which come as a pair), but that may be implementable using `fold`.\r\n\r\n`contains` is probably already adequately covered by the already existing `any()`?\r\n\r\n(Could turn this into `vim.table.isarray()` etc., to mimic Lua's `table`? But don't forget the `vim.list_*` functions.)\r\n\r\nOther table(-like) functions:\r\n* `deep_equal`\r\n* `deepcopy`\r\n* `defaulttable`\r\n* `spairs`\r\n\r\nI should also mention that LuaJIT2 has `table.isempty()`, `table.isarray()`, `table.nkeys()` (count) and `table.clone()`. It bears keeping in mind that these table functions are useful because proper (partially) map-like tables are trickier to deal with in Lua than pure lists (which map much more easily to iterators).\r\n\r\n(On a related note, there's a bunch of string functions that may merit including in a -- to be expanded `vim.string` module that extends the Lua `string` module.)",
            "created_at": "2023-06-05T09:06:54Z",
            "html_url": "https://github.com/neovim/neovim/issues/23913#issuecomment-1576417208",
            "id": 1576417208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23913",
            "node_id": "IC_kwDOAPphoM5d9je4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1576417208/reactions"
            },
            "updated_at": "2023-06-05T09:30:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1576417208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In any case, very much in favor of such a clean-up. However, I would suggest the following approach:\r\n\r\n* Anything that reasonably applies to **generic** iterators should go to `vim.iter` (which has special-case implementations for list-like(!) tables; I suspect that the overhead for map-like tables would be negligible -- but that should be tested, of course): `isempty`, `contains`, `count`, `spairs()` (as a flag to `vim.iter(table)`?), and all `list_*` methods.\r\n\r\n* Anything that is specific for general (not purely list-like) tables should go to `vim.table` -- that especially concerns functions that _modify_ (increase) the table: `isarray`, `[deep_]extend`, `[deep_]copy` (clone), `keys`, `values`, `add_reverse_lookup`, `get` (possibly implemented using iterators to at least remove _code_ duplication). There's also the efficient `insert` and `remove` functions from `treesitter/_fold` we could add (@lewis6991), the former possibly replacing `list_extend`. \r\nThis module could also be extended with LuaJIT specific additions so users could just do `vim.table.pack` without having to worry about PUC Lua (or even extended with the whole `table` module so you can just do `local table = vim.table` and not worry about it?)\r\n\r\n* Anything that is vim specific should go to `vim` -- that's basically `vim.empty_dict()` (and arguably `vim.ringbuf`).\r\n\r\n@gpanders @mfussenegger \r\n",
            "created_at": "2023-06-05T10:23:34Z",
            "html_url": "https://github.com/neovim/neovim/issues/23913#issuecomment-1576530394",
            "id": 1576530394,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23913",
            "node_id": "IC_kwDOAPphoM5d9_Ha",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1576530394/reactions"
            },
            "updated_at": "2023-06-05T12:45:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1576530394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/issues/24572 has a more complete plan. Also added your notes there.\r\n\r\n> On a related note, there's a bunch of string functions that may merit including in a -- to be expanded `vim.string` module\r\n\r\n0.10 has `vim.text`, though we also discussed (and rejected?) extending Lua's `string` I believe, but I can't find that issue/PR.",
            "created_at": "2023-12-05T23:26:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/23913#issuecomment-1841790453",
            "id": 1841790453,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23913",
            "node_id": "IC_kwDOAPphoM5tx331",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1841790453/reactions"
            },
            "updated_at": "2023-12-06T01:30:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1841790453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23913/comments",
    "created_at": "2023-06-05T08:54:48Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23913/events",
    "html_url": "https://github.com/neovim/neovim/issues/23913",
    "id": 1741305736,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "issues that are closed as duplicates of other issues",
            "id": 3221613764,
            "name": "closed:duplicate",
            "node_id": "MDU6TGFiZWwzMjIxNjEzNzY0",
            "url": "https://api.github.com/repos/neovim/neovim/labels/closed:duplicate"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 4457150369,
            "name": "architecture",
            "node_id": "LA_kwDOAPphoM8AAAABCaq3oQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/architecture"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23913/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5nyjeI",
    "number": 23913,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23913/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23913/timeline",
    "title": "deprecate tbl_xx, list_xx functions",
    "updated_at": "2023-12-06T01:30:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23913",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}