{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nHi,\r\n\r\nI am trying to create mappings to easily move in and out of the terminal.\r\n\r\nMy goal is to not have to exit `Terminal` mode to perform actions on the terminal window, so I used `wincmd` in my mappings instead of `<C-\\><C-N><C-W>` to avoid exiting `Terminal` mode.\r\n\r\nMy approach seems to work since `Terminal` mode is preserved for all my mappings EXCEPT for those involving a change of windows. I can move out of a terminal window while in `Terminal` mode, but moving back inside the terminal window switches the mode to `Normal`(while I left it in `Terminal`).\r\nI noticed that \r\n\r\n### Steps to reproduce\r\n\r\n```bash\r\n# Download and extract neovim\r\ncd $(mktemp -d)\r\ncurl -LO https://github.com/neovim/neovim/releases/download/v0.9.5/nvim-linux64.tar.gz\r\ntar -zxf nvim-linux64.tar.gz\r\ncd nvim-linux64/bin\r\n\r\n# Write example config file\r\ncat >example.lua <<EOF\r\n-- Window switching\r\nvim.keymap.set({'', 't'} , '<M-h>', '<cmd>wincmd h<CR>')\r\nvim.keymap.set({'', 't'} , '<M-j>', '<cmd>wincmd j<CR>')\r\nvim.keymap.set({'', 't'} , '<M-k>', '<cmd>wincmd k<CR>')\r\nvim.keymap.set({'', 't'} , '<M-l>', '<cmd>wincmd l<CR>')\r\n\r\n-- Window moving\r\nvim.keymap.set({'', 't'} , '<M-H>', '<cmd>wincmd H<CR>')\r\nvim.keymap.set({'', 't'} , '<M-J>', '<cmd>wincmd J<CR>')\r\nvim.keymap.set({'', 't'} , '<M-K>', '<cmd>wincmd K<CR>')\r\nvim.keymap.set({'', 't'} , '<M-L>', '<cmd>wincmd L<CR>')\r\nEOF\r\n\r\n# Start\r\n./nvim -u example.lua\r\n```\r\n\r\nOnce `nvim` is open type:\r\n```\r\n:vnew\r\n:term\r\n```\r\nGet in `Terminal` mode by pressing `i`.\r\n\r\nIf you try to go to the other buffer and come back with `<M-h>`/`<M-j>`/... you will see you get back to the terminal window in `Normal` mode.\r\n\r\nHowever if you use `<M-H>`/`<M-J>`/... to move the window around, you will see `Terminal` mode is preserved in the terminal window.\r\n\r\n### Expected behavior\r\n\r\n`Terminal` mode should be preserved after leaving and returning to a terminal window with mappings such as `vim.keymap.set({'', 't'} , '<M-h>', '<cmd>wincmd h<CR>')`\r\n\r\n### Neovim version (nvim -v)\r\n\r\nv0.9.5\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNo, it works fine in vim (version 9.0)\r\n\r\n### Operating system/version\r\n\r\nLinux / Debian\r\n\r\n### Terminal name/version\r\n\r\nalacritty 0.12.2\r\n\r\n### $TERM environment variable\r\n\r\ntmux-256color\r\n\r\n### Installation\r\n\r\nTar ball downloaded from Github",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "You spoke my heart. Never had the guts to file this issue.\r\n\r\nPS: I have a workaround in my **init.vim** which does the **i** thing automatically, when switching between windows.\r\n\r\nBtw you need to convert this code to Lua.\r\n\r\n```vimscript\r\naugroup terminal_setup | au!\r\n    autocmd TermOpen * nnoremap <buffer><LeftRelease> <LeftRelease>i\r\naugroup end\r\n```",
            "created_at": "2024-01-04T13:36:57Z",
            "html_url": "https://github.com/neovim/neovim/issues/26881#issuecomment-1877107367",
            "id": 1877107367,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26881",
            "node_id": "IC_kwDOAPphoM5v4mKn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877107367/reactions"
            },
            "updated_at": "2024-01-04T13:36:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877107367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/84121715?v=4",
                "events_url": "https://api.github.com/users/backermanbd/events{/privacy}",
                "followers_url": "https://api.github.com/users/backermanbd/followers",
                "following_url": "https://api.github.com/users/backermanbd/following{/other_user}",
                "gists_url": "https://api.github.com/users/backermanbd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/backermanbd",
                "id": 84121715,
                "login": "backermanbd",
                "node_id": "MDQ6VXNlcjg0MTIxNzE1",
                "organizations_url": "https://api.github.com/users/backermanbd/orgs",
                "received_events_url": "https://api.github.com/users/backermanbd/received_events",
                "repos_url": "https://api.github.com/users/backermanbd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/backermanbd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/backermanbd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/backermanbd"
            }
        },
        {
            "author_association": "NONE",
            "body": "You could use `t_CTRL-\\_CTRL-O`\r\n```lua\r\nlocal t_wincmd = '<C-\\\\><C-o><C-w>'\r\nvim.keymap.set({'i', 't'} , '<M-h>', t_wincmd .. 'h')\r\nvim.keymap.set({'i', 't'} , '<M-j>', t_wincmd .. 'j')\r\nvim.keymap.set({'i', 't'} , '<M-k>', t_wincmd .. 'k')\r\nvim.keymap.set({'i', 't'} , '<M-l>', t_wincmd .. 'l')\r\n```\r\nNOTE: This code relies on undocumented behavior and i should not have used it.",
            "created_at": "2024-01-05T14:58:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/26881#issuecomment-1878808442",
            "id": 1878808442,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26881",
            "node_id": "IC_kwDOAPphoM5v_Fd6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1878808442/reactions"
            },
            "updated_at": "2024-01-05T18:19:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1878808442",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130783534?v=4",
                "events_url": "https://api.github.com/users/Sam-programs/events{/privacy}",
                "followers_url": "https://api.github.com/users/Sam-programs/followers",
                "following_url": "https://api.github.com/users/Sam-programs/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sam-programs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Sam-programs",
                "id": 130783534,
                "login": "Sam-programs",
                "node_id": "U_kgDOB8uZLg",
                "organizations_url": "https://api.github.com/users/Sam-programs/orgs",
                "received_events_url": "https://api.github.com/users/Sam-programs/received_events",
                "repos_url": "https://api.github.com/users/Sam-programs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Sam-programs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sam-programs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Sam-programs"
            }
        },
        {
            "author_association": "NONE",
            "body": "> You could use `t_CTRL-\\_CTRL-O`\r\n\r\nWhat does this command do? I read the Neovim docs. Stil not clear to me.",
            "created_at": "2024-01-05T16:41:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/26881#issuecomment-1878960010",
            "id": 1878960010,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26881",
            "node_id": "IC_kwDOAPphoM5v_qeK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1878960010/reactions"
            },
            "updated_at": "2024-01-05T16:41:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1878960010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/84121715?v=4",
                "events_url": "https://api.github.com/users/backermanbd/events{/privacy}",
                "followers_url": "https://api.github.com/users/backermanbd/followers",
                "following_url": "https://api.github.com/users/backermanbd/following{/other_user}",
                "gists_url": "https://api.github.com/users/backermanbd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/backermanbd",
                "id": 84121715,
                "login": "backermanbd",
                "node_id": "MDQ6VXNlcjg0MTIxNzE1",
                "organizations_url": "https://api.github.com/users/backermanbd/orgs",
                "received_events_url": "https://api.github.com/users/backermanbd/received_events",
                "repos_url": "https://api.github.com/users/backermanbd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/backermanbd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/backermanbd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/backermanbd"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26881/comments",
    "created_at": "2024-01-04T10:14:38Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/26881/events",
    "html_url": "https://github.com/neovim/neovim/issues/26881",
    "id": 2065369553,
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/26881/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM57GwnR",
    "number": 26881,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 1,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 1,
        "url": "https://api.github.com/repos/neovim/neovim/issues/26881/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/26881/timeline",
    "title": "Changing to terminal window resets mode to Normal mode",
    "updated_at": "2024-01-05T18:19:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/26881",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8539067?v=4",
        "events_url": "https://api.github.com/users/paulroseau/events{/privacy}",
        "followers_url": "https://api.github.com/users/paulroseau/followers",
        "following_url": "https://api.github.com/users/paulroseau/following{/other_user}",
        "gists_url": "https://api.github.com/users/paulroseau/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/paulroseau",
        "id": 8539067,
        "login": "paulroseau",
        "node_id": "MDQ6VXNlcjg1MzkwNjc=",
        "organizations_url": "https://api.github.com/users/paulroseau/orgs",
        "received_events_url": "https://api.github.com/users/paulroseau/received_events",
        "repos_url": "https://api.github.com/users/paulroseau/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/paulroseau/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paulroseau/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/paulroseau"
    }
}