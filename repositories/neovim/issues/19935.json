{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Feature already in Vim?\n\nNo\n\n### Feature description\n\n## Feature description\r\nHave the \"setter\" version of `nvim_get_mode`. Currently, the only \"official\"/\"reliable\" way to get between basic modes is to use the default keybindings. If you want to do something else, too bad (though I'm sure there are exceptions/workarounds that I can't find via Google).\r\n\r\nFairly simple in concept, though I'm not sure how ingrained the default keybindings are in (neo)vim to their actual function of changing modes.\r\n\r\n## Use case\r\nIn telescope prompt, I want a dual behavior of `<Esc>`: close the window if the prompt is empty, otherwise change to normal mode. However, now that I've overridden the escape key functionality, there's not way to get back into normal mode. Having a `nvim_set_mode` function would easily solve the issue, while also providing some extra flexibility",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Although this is a good idea, in your particular use case, it may be possible to implement your behavior using a mapping that calls a function, and a combination of `nvim_input` and such? ",
            "created_at": "2022-08-25T06:15:48Z",
            "html_url": "https://github.com/neovim/neovim/issues/19935#issuecomment-1226822144",
            "id": 1226822144,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19935",
            "node_id": "IC_kwDOAPphoM5JH9IA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1226822144/reactions"
            },
            "updated_at": "2022-08-25T06:15:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1226822144",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "NONE",
            "body": "> it may be possible to implement your behavior using a mapping that calls a function, and a combination of `nvim_input` and such?\r\n\r\nThat's more or less what I had gotten to, but by overriding the `<Esc>` binding, there isn't a way to get back to normal mode. At least that I'm aware of. \r\n```lua\r\nlocal action_state = require('telescope.actions.state')\r\n\r\nlocal function isempty(s)\r\n  return s == nil or s == ''\r\nend\r\n\r\nlocal function closeEmptyPrompt(prompt_bufnr)\r\n  local prompt_str = action_state.get_current_line(prompt_bufnr)\r\n  if isempty(prompt_str) then\r\n    actions.close(prompt_bufnr)\r\n  else\r\n    -- Get to normal mode somehow\r\n  end\r\nend\r\n```\r\n\r\nTrying to do `vim.api.nvim_input('<Esc>')`, but that just causes it to get stuck in a recursive loop (confirmed by adding a `print(math.random())` in the function).",
            "created_at": "2022-08-25T16:10:20Z",
            "html_url": "https://github.com/neovim/neovim/issues/19935#issuecomment-1227479670",
            "id": 1227479670,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19935",
            "node_id": "IC_kwDOAPphoM5JKdp2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1227479670/reactions"
            },
            "updated_at": "2022-08-25T16:10:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1227479670",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20801821?v=4",
                "events_url": "https://api.github.com/users/jrwrigh/events{/privacy}",
                "followers_url": "https://api.github.com/users/jrwrigh/followers",
                "following_url": "https://api.github.com/users/jrwrigh/following{/other_user}",
                "gists_url": "https://api.github.com/users/jrwrigh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jrwrigh",
                "id": 20801821,
                "login": "jrwrigh",
                "node_id": "MDQ6VXNlcjIwODAxODIx",
                "organizations_url": "https://api.github.com/users/jrwrigh/orgs",
                "received_events_url": "https://api.github.com/users/jrwrigh/received_events",
                "repos_url": "https://api.github.com/users/jrwrigh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jrwrigh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jrwrigh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jrwrigh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In general I'm not sure it's a good idea to start adding aliases to all the various normal-mode commands. But some use-cases like interrupt/CTRL-c/dismiss are an exception to that rule, they deserve a formal API. \r\n\r\nMaybe \"set the mode\" is another such use-case. Or maybe we need a way to get results from a `nvim_input()` atom.",
            "created_at": "2022-08-25T18:30:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/19935#issuecomment-1227621833",
            "id": 1227621833,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19935",
            "node_id": "IC_kwDOAPphoM5JLAXJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1227621833/reactions"
            },
            "updated_at": "2022-08-25T18:30:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1227621833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I would like to see a lua API to switch modes as well.\r\n\r\nMy use case, nvim cmp will enter select mode after confirming a selection. I have a mapping to exit insert or select mode and return to normal mode by using `vim.cmd.stopinsert()`. This works fine for insert mode but does nothing in select mode.\r\n\r\nI ended up working around this by passing `<C-c>` to return to normal mode from either insert or select mode.\r\n\r\n```lua\r\nvim.api.nvim_feedkeys(vim.api.nvim_replace_termcodes('<C-c>', true, false, true), 'n', true)\r\n```\r\n\r\n",
            "created_at": "2023-12-19T20:51:03Z",
            "html_url": "https://github.com/neovim/neovim/issues/19935#issuecomment-1863454342",
            "id": 1863454342,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/19935",
            "node_id": "IC_kwDOAPphoM5vEg6G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1863454342/reactions"
            },
            "updated_at": "2023-12-19T20:51:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1863454342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10135646?v=4",
                "events_url": "https://api.github.com/users/mikesmithgh/events{/privacy}",
                "followers_url": "https://api.github.com/users/mikesmithgh/followers",
                "following_url": "https://api.github.com/users/mikesmithgh/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikesmithgh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mikesmithgh",
                "id": 10135646,
                "login": "mikesmithgh",
                "node_id": "MDQ6VXNlcjEwMTM1NjQ2",
                "organizations_url": "https://api.github.com/users/mikesmithgh/orgs",
                "received_events_url": "https://api.github.com/users/mikesmithgh/received_events",
                "repos_url": "https://api.github.com/users/mikesmithgh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mikesmithgh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikesmithgh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mikesmithgh"
            }
        }
    ],
    "comments": 4,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/19935/comments",
    "created_at": "2022-08-24T23:13:43Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/19935/events",
    "html_url": "https://github.com/neovim/neovim/issues/19935",
    "id": 1350117259,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "BFDADC",
            "default": false,
            "description": "High-risk, potential for delicate/cascading effects",
            "id": 407247013,
            "name": "complexity:high",
            "node_id": "MDU6TGFiZWw0MDcyNDcwMTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/complexity:high"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/19935/labels{/name}",
    "locked": false,
    "milestone": {
        "closed_at": null,
        "closed_issues": 616,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "Low priority. Not planned for the current target, may be reassigned.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 536,
        "state": "open",
        "title": "backlog",
        "updated_at": "2024-05-13T02:16:08Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "I_kwDOAPphoM5QeSeL",
    "number": 19935,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/19935/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/19935/timeline",
    "title": "Add function to change mode (ie. nvim_set_mode)",
    "updated_at": "2024-05-11T14:51:46Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/19935",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20801821?v=4",
        "events_url": "https://api.github.com/users/jrwrigh/events{/privacy}",
        "followers_url": "https://api.github.com/users/jrwrigh/followers",
        "following_url": "https://api.github.com/users/jrwrigh/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrwrigh/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jrwrigh",
        "id": 20801821,
        "login": "jrwrigh",
        "node_id": "MDQ6VXNlcjIwODAxODIx",
        "organizations_url": "https://api.github.com/users/jrwrigh/orgs",
        "received_events_url": "https://api.github.com/users/jrwrigh/received_events",
        "repos_url": "https://api.github.com/users/jrwrigh/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jrwrigh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrwrigh/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jrwrigh"
    }
}