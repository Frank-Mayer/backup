{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\n\nCurrently the `complete` key of `nvim_create_user_command` accepts a lua function reference that should act identical to a `customlist` completion function, but there is no way to give a lua function reference to a function that acts like the simpler `custom` completion function, other than creating a global lua function and using `complete = 'custom,v:lua.my.lua.function'`.\n\n### Expected behavior\n\nAdd something to `nvim_create_user_command` to specify a way to add a lua function reference to a function that acts like the `custom` completion function type.",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "Show example code that shows what you expect, and also compares it to the existing required code, so that we can see what would actually be gained. \r\n\r\nAn alternative could be to update the docs to show an example that is easy to copy-paste.",
            "created_at": "2023-10-12T14:59:44Z",
            "html_url": "https://github.com/neovim/neovim/issues/25565#issuecomment-1759783368",
            "id": 1759783368,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25565",
            "node_id": "IC_kwDOAPphoM5o5CnI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1759783368/reactions"
            },
            "updated_at": "2023-10-12T15:00:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1759783368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "### Current flow\r\n\r\n```lua\r\nfunction MyCommandComplete()\r\n    return vim.fn.join({'a', 'b', 'c', 'd'}, '\\n'})\r\nend\r\nvim.api.nvim_create_user_command(\"MyCommand\", function()\r\n--blah blah...\r\nend, { nargs = 1, complete = 'custom,v:lua.MyCommandComplete' })\r\n```\r\n- Requires defining a global function\r\n- Is unintuitive when most lua functions can take a lua function reference as an option, and inconsistent with existing `customlist` functionality being able to do so\r\n\r\n### Potential solution\r\n\r\n```lua\r\nvim.api.nvim_create_user_command(\"MyCommand\", function()\r\n-- blah blah...\r\nend, { nargs = 1, complete = function()\r\n    return vim.fn.join({'a', 'b', 'c', 'd'}, '\\n'})\r\nend, complete_customlist = false })\r\n```\r\n- Command and completion can now be coupled, no global function necessary\r\n- Consistent with other lua things that take a function reference\r\n- Not the biggest fan of the `complete_customlist` parameter but not sure how to best address it\r\n\r\nAnother alternative could be to allow the `complete` parameter to take a list of strings and have it act like the `custom` completion mode in this mode, since I feel like handling the current context is kind of pointless when Nvim will already do it for you and if you don't want that `customlist` is already a thing:\r\n```lua\r\n{ complete = {'a', 'b', 'c', 'd'} }\r\n```\r\nThis could be confusing though as it's inconsistent with the existing Vim behavior.",
            "created_at": "2023-10-14T02:39:08Z",
            "html_url": "https://github.com/neovim/neovim/issues/25565#issuecomment-1762508415",
            "id": 1762508415,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25565",
            "node_id": "IC_kwDOAPphoM5pDb5_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1762508415/reactions"
            },
            "updated_at": "2023-10-14T02:39:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1762508415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7882157?v=4",
                "events_url": "https://api.github.com/users/Supreeeme/events{/privacy}",
                "followers_url": "https://api.github.com/users/Supreeeme/followers",
                "following_url": "https://api.github.com/users/Supreeeme/following{/other_user}",
                "gists_url": "https://api.github.com/users/Supreeeme/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Supreeeme",
                "id": 7882157,
                "login": "Supreeeme",
                "node_id": "MDQ6VXNlcjc4ODIxNTc=",
                "organizations_url": "https://api.github.com/users/Supreeeme/orgs",
                "received_events_url": "https://api.github.com/users/Supreeeme/received_events",
                "repos_url": "https://api.github.com/users/Supreeeme/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Supreeeme/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Supreeeme/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Supreeeme"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Would it make sense to determine the behavior based on type of value a lua function returns? If it returns list then it behaves like it currently does (like `customlist`), but if it returns string instead then it will behave like `custom`?\r\n\r\nI think it's convenient to have support for that case, because this way there's no need to implement any custom filtering of completion results in plugins.",
            "created_at": "2024-01-06T19:07:56Z",
            "html_url": "https://github.com/neovim/neovim/issues/25565#issuecomment-1879789329",
            "id": 1879789329,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25565",
            "node_id": "IC_kwDOAPphoM5wC08R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879789329/reactions"
            },
            "updated_at": "2024-01-06T20:01:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879789329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25565/comments",
    "created_at": "2023-10-09T19:50:06Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/25565/events",
    "html_url": "https://github.com/neovim/neovim/issues/25565",
    "id": 1933691656,
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "Nvim built-in (omni)completion",
            "id": 3214348835,
            "name": "completion",
            "node_id": "MDU6TGFiZWwzMjE0MzQ4ODM1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/completion"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/25565/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5zQcsI",
    "number": 25565,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/25565/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/25565/timeline",
    "title": "nvim_create_user_command: support `custom` style completion function",
    "updated_at": "2024-01-06T20:01:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/25565",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7882157?v=4",
        "events_url": "https://api.github.com/users/Supreeeme/events{/privacy}",
        "followers_url": "https://api.github.com/users/Supreeeme/followers",
        "following_url": "https://api.github.com/users/Supreeeme/following{/other_user}",
        "gists_url": "https://api.github.com/users/Supreeeme/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Supreeeme",
        "id": 7882157,
        "login": "Supreeeme",
        "node_id": "MDQ6VXNlcjc4ODIxNTc=",
        "organizations_url": "https://api.github.com/users/Supreeeme/orgs",
        "received_events_url": "https://api.github.com/users/Supreeeme/received_events",
        "repos_url": "https://api.github.com/users/Supreeeme/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Supreeeme/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Supreeeme/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Supreeeme"
    }
}