{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Problem\r\n\r\nI could be missing something but there appears to be not way to handle the response of a swapfile check on `nvim_buf_set_name`.\r\n\r\nThis is a bit difficult to explain but the long short is, if you try to set the name of a buffer to a name that vim believes is already open (via its \"swapfile\" checking process), you will be presented with the typical `E325: ATTENTION` error. Something like below\r\n\r\n```\r\n\t\tE325: ATTENTION  \r\n\tFound a swap file by the name \".main.c.swp\"  \r\n\t\t  owned by: mool   dated: Tue May 29 21:09:28 2001  \r\n\t\t file name: ~mool/vim/vim6/src/main.c  \r\n\t\t  modified: no  \r\n\t\t user name: mool   host name: masaka.moolenaar.net  \r\n\t\tprocess ID: 12559 (still running)  \r\n\tWhile opening file \"main.c\"  \r\n\t\t     dated: Tue May 29 19:46:12 2001  \r\n  \r\n\t(1) Another program may be editing the same file.  \r\n\t    If this is the case, be careful not to end up with two  \r\n\t    different instances of the same file when making changes.  \r\n\t    Quit, or continue with caution.  \r\n  \r\n\t(2) An edit session for this file crashed.  \r\n\t    If this is the case, use \":recover\" or \"vim -r main.c\"  \r\n\t    to recover the changes (see \":help recovery\").  \r\n\t    If you did this already, delete the swap file \".main.c.swp\"  \r\n\t    to avoid this message. \r\nSwap file \".main.c.sp\" already exists!\r\n[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: \r\n```\r\n\r\nIf you are tracking your code through to this point, you will actually hit a full thread block while Neovim waits for a response. The issue is, no matter what response is chose, this will toss a vim E325 error that cannot be handled within lua. So if the user presses `O` for example, we are not given the opportunity to handle that. \r\n\r\nNow you will say \"well that's fine, vim will just open that file in read-only mode anyway\". \r\n\r\nWell hold on there Buster. Some plugins actually have to fetch the file before it can be loaded into the buffer (for example, that is how [`netman.nvim`](https://github.com/miversen33/netman.nvim) knows what file to remotely fetch and load into the buffer). So in this case, a plugin that _needs_ to be able to set the file name (or handle the user response after an E325) is seemingly unable to.\r\n\r\nI want to believe I am doing something wrong here. Can someone point me in the right direction?\r\n\r\n### Steps to reproduce\r\n\r\n[Steps to reproduce this are a bit tough as they require dynamically loading a file into the buffer and then changing its name to match something that is in swap](https://github.com/miversen33/netman.nvim/issues/133). The easiest way I have found to reliably do this is by opening a remote file with Netman, and then killing vim, then attempting to reopen said remote file.\r\n\r\nI will pin the first comment on this issue and see if I can get a more streamlined way to reproduce this\r\n\r\n### Expected behavior\r\n\r\nProvide some mechanism to handle the response to an `E325`\r\n\r\n### Neovim version (nvim -v)\r\n\r\nv0.9.0\r\n\r\n### Vim (not Nvim) behaves the same?\r\n\r\nNA\r\n\r\n### Operating system/version\r\n\r\nArch Linux\r\n\r\n### Terminal name/version\r\n\r\nwezterm 20230408-112425-69ae8472\r\n\r\n### $TERM environment variable\r\n\r\nxterm-256color\r\n\r\n### Installation\r\n\r\nDownloaded precompiled source",
    "closed_at": "2023-07-16T11:52:05Z",
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "I am having trouble reliably reproducing an E325 error with an init.lua, so tomorrow I will dig more into trying to get that done. FWIW, the full lua error stack I am getting is\r\n\r\n```lua\r\nError detected while processing BufReadCmd Autocommands for \"docker://*\":\r\nError executing lua callback: /home/miversen/git/netman.nvim/lua/netman/init.lua:74: Vim:E325: ATTENTION\r\nstack traceback:\r\n        [C]: in function 'nvim_buf_set_name'\r\n        /home/miversen/git/netman.nvim/lua/netman/init.lua:74: in function 'read'\r\n        /home/miversen/git/netman.nvim/lua/netman/api.lua:306: in function </home/miversen/git/netman.nvim/lua/netman/api.lua:302>\r\n```\r\n\r\nWhere the line in question (init.lua:74) is simply doing the following\r\n```lua\r\n-- file is whatever the filename was. For my example it was `docker://container///file.txt`, but that doesn't matter\r\nvim.api.nvim_buf_set_name(0 file)\r\n```\r\n\r\nIt seems as though the E325 logic is putting some details in the swap that allow it to sometimes catch if the swap is valid or not and for whatever reason my attempts at recreating this directly with swap file copy-and-paste seems to be failing (unless I am using these \"remote\" files that are being created). \r\n\r\nI will dig into this more tomorrow to try and knock out a reliably reproduction of this issue (or realize I am insane, one of the 2)",
            "created_at": "2023-04-17T03:09:31Z",
            "html_url": "https://github.com/neovim/neovim/issues/23145#issuecomment-1510630522",
            "id": 1510630522,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23145",
            "node_id": "IC_kwDOAPphoM5aCmR6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1510630522/reactions"
            },
            "updated_at": "2023-04-17T04:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1510630522",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2640668?v=4",
                "events_url": "https://api.github.com/users/miversen33/events{/privacy}",
                "followers_url": "https://api.github.com/users/miversen33/followers",
                "following_url": "https://api.github.com/users/miversen33/following{/other_user}",
                "gists_url": "https://api.github.com/users/miversen33/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/miversen33",
                "id": 2640668,
                "login": "miversen33",
                "node_id": "MDQ6VXNlcjI2NDA2Njg=",
                "organizations_url": "https://api.github.com/users/miversen33/orgs",
                "received_events_url": "https://api.github.com/users/miversen33/received_events",
                "repos_url": "https://api.github.com/users/miversen33/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/miversen33/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miversen33/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/miversen33"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Provide some mechanism to handle the response to an `E325`\r\n\r\n`:help SwapExists`\r\n\r\nThough ideally, yes, Lua `pcall()` should be able to properly handle this. But that's a more general issue.",
            "created_at": "2023-07-16T11:52:05Z",
            "html_url": "https://github.com/neovim/neovim/issues/23145#issuecomment-1637063782",
            "id": 1637063782,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23145",
            "node_id": "IC_kwDOAPphoM5hk5xm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637063782/reactions"
            },
            "updated_at": "2023-07-16T11:52:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1637063782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk thank you! This wasn't actually the solution to my problem, turns out I am bad at writing code (who knew!). However this did get me pointed in the right direction and I **finally** found the source of a bug in my code which was causing this failure.\r\n\r\nFor anyone else wondering, if you are in a situation where you _may_ be executing a `read/open` of a file that may have a swap file already, you _must_ wrap that in a pcall. Otherwise the underlying `E325` will cause the JIT to execute your context and the remainder of your code will not be ran (as that's kinda what errors do) .\r\n\r\nI appreciate you and the work everyone does on Neovim :)",
            "created_at": "2023-07-23T16:33:58Z",
            "html_url": "https://github.com/neovim/neovim/issues/23145#issuecomment-1646884248",
            "id": 1646884248,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23145",
            "node_id": "IC_kwDOAPphoM5iKXWY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1646884248/reactions"
            },
            "updated_at": "2023-07-23T16:33:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1646884248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2640668?v=4",
                "events_url": "https://api.github.com/users/miversen33/events{/privacy}",
                "followers_url": "https://api.github.com/users/miversen33/followers",
                "following_url": "https://api.github.com/users/miversen33/following{/other_user}",
                "gists_url": "https://api.github.com/users/miversen33/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/miversen33",
                "id": 2640668,
                "login": "miversen33",
                "node_id": "MDQ6VXNlcjI2NDA2Njg=",
                "organizations_url": "https://api.github.com/users/miversen33/orgs",
                "received_events_url": "https://api.github.com/users/miversen33/received_events",
                "repos_url": "https://api.github.com/users/miversen33/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/miversen33/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/miversen33/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/miversen33"
            }
        }
    ],
    "comments": 3,
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23145/comments",
    "created_at": "2023-04-17T03:09:19Z",
    "events_url": "https://api.github.com/repos/neovim/neovim/issues/23145/events",
    "html_url": "https://github.com/neovim/neovim/issues/23145",
    "id": 1670326646,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "issues reporting wrong behavior",
            "id": 77997474,
            "name": "bug",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3NA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/bug"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/neovim/issues/23145/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAPphoM5jjyl2",
    "number": 23145,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/neovim/issues/23145/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/neovim",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/neovim/issues/23145/timeline",
    "title": "There appears to be no way to handle response of swap check on nvim_buf_set_name",
    "updated_at": "2023-07-23T16:33:58Z",
    "url": "https://api.github.com/repos/neovim/neovim/issues/23145",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2640668?v=4",
        "events_url": "https://api.github.com/users/miversen33/events{/privacy}",
        "followers_url": "https://api.github.com/users/miversen33/followers",
        "following_url": "https://api.github.com/users/miversen33/following{/other_user}",
        "gists_url": "https://api.github.com/users/miversen33/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/miversen33",
        "id": 2640668,
        "login": "miversen33",
        "node_id": "MDQ6VXNlcjI2NDA2Njg=",
        "organizations_url": "https://api.github.com/users/miversen33/orgs",
        "received_events_url": "https://api.github.com/users/miversen33/received_events",
        "repos_url": "https://api.github.com/users/miversen33/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/miversen33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/miversen33/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/miversen33"
    }
}