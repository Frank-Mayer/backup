{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\n\nI'm using both pyright and ruff_lsp, \r\n\r\nWhen I issue a pyright comment `:PyrightOrganizeImports` I get an error from ruff :\r\n\r\n```\r\nruff_lsp: -32603: KeyError: 'pyright.organizeimports'\r\n```\r\n\r\nI'm not sure if it's a nvim-lspconfig issue, or a bug somewhere else, so sorry if it's not the right place to ask about this.\n\n### Neovim version\n\nNVIM v0.9.4\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.1696883897\n\n### Nvim-lspconfig version\n\ne85816c\n\n### Operating system and version\n\nWindows 11\n\n### Affected language servers\n\npyright/ruff\n\n### Steps to reproduce\n\n1. Open a python file\r\n2. Launch `:PyrightOrganizeImports`\n\n### Actual behavior\n\nThe error occur\n\n### Expected behavior\n\nI would expect the command to only \"reach\" pyright. Note that the action is performed, so it's more an annoyance than a blocking bug.\n\n### Minimal config\n\n```Lua\nlocal on_windows = vim.loop.os_uname().version:match 'Windows'\r\n\r\nlocal function join_paths(...)\r\n  local path_sep = on_windows and '\\\\' or '/'\r\n  local result = table.concat({ ... }, path_sep)\r\n  return result\r\nend\r\n\r\nvim.cmd [[set runtimepath=$VIMRUNTIME]]\r\n\r\nlocal temp_dir = vim.loop.os_getenv 'TEMP' or '/tmp'\r\n\r\nvim.cmd('set packpath=' .. join_paths(temp_dir, 'nvim', 'site'))\r\n\r\nlocal package_root = join_paths(temp_dir, 'nvim', 'site', 'pack')\r\nlocal lspconfig_path = join_paths(package_root, 'test', 'start', 'nvim-lspconfig')\r\n\r\nif vim.fn.isdirectory(lspconfig_path) ~= 1 then\r\n  vim.fn.system { 'git', 'clone', 'https://github.com/neovim/nvim-lspconfig', lspconfig_path }\r\nend\r\n\r\nvim.lsp.set_log_level 'trace'\r\nrequire('vim.lsp.log').set_format_func(vim.inspect)\r\nlocal nvim_lsp = require 'lspconfig'\r\nlocal on_attach = function(_, bufnr)\r\n  local function buf_set_option(...)\r\n    vim.api.nvim_buf_set_option(bufnr, ...)\r\n  end\r\n\r\n  buf_set_option('omnifunc', 'v:lua.vim.lsp.omnifunc')\r\n\r\n  -- Mappings.\r\n  local opts = { buffer = bufnr, noremap = true, silent = true }\r\n  vim.keymap.set('n', 'gD', vim.lsp.buf.declaration, opts)\r\n  vim.keymap.set('n', 'gd', vim.lsp.buf.definition, opts)\r\n  vim.keymap.set('n', 'K', vim.lsp.buf.hover, opts)\r\n  vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, opts)\r\n  vim.keymap.set('n', '<C-k>', vim.lsp.buf.signature_help, opts)\r\n  vim.keymap.set('n', '<space>wa', vim.lsp.buf.add_workspace_folder, opts)\r\n  vim.keymap.set('n', '<space>wr', vim.lsp.buf.remove_workspace_folder, opts)\r\n  vim.keymap.set('n', '<space>wl', function()\r\n    print(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n  end, opts)\r\n  vim.keymap.set('n', '<space>D', vim.lsp.buf.type_definition, opts)\r\n  vim.keymap.set('n', '<space>rn', vim.lsp.buf.rename, opts)\r\n  vim.keymap.set('n', 'gr', vim.lsp.buf.references, opts)\r\n  vim.keymap.set('n', '<space>e', vim.diagnostic.open_float, opts)\r\n  vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, opts)\r\n  vim.keymap.set('n', ']d', vim.diagnostic.goto_next, opts)\r\n  vim.keymap.set('n', '<space>q', vim.diagnostic.setloclist, opts)\r\nend\r\n\r\n-- -- Add the server that troubles you here\r\n-- local name = 'pyright'\r\n-- local cmd = { 'pyright-langserver', '--stdio' } -- needed for elixirls, lua_ls, omnisharp\r\n-- if not name then\r\n--   print 'You have not defined a server name, please edit minimal_init.lua'\r\n-- end\r\n-- if not nvim_lsp[name].document_config.default_config.cmd and not cmd then\r\n--   print [[You have not defined a server default cmd for a server\r\n--     that requires it please edit minimal_init.lua]]\r\n-- end\r\n\r\nnvim_lsp['pyright'].setup {\r\n  cmd = {[[C:\\Users\\Cibrario\\AppData\\Local\\nvim-data\\mason\\bin\\pyright-langserver.CMD]], '--stdio'},\r\n  on_attach = on_attach,\r\n}\r\nnvim_lsp['ruff_lsp'].setup {\r\n  cmd = {[[C:\\Users\\Cibrario\\AppData\\Local\\nvim-data\\mason\\bin\\ruff-lsp.CMD]]},\r\n  on_attach = on_attach,\r\n}\r\n\r\nprint [[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]]\n```\n\n\n### LSP log\n\nI'm on windows, and I was unable to find the produced log ;-(",
    "closed_at": "2023-12-21T12:12:10Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "This happens because the command sends the \"pyright.organizeimports\" command to all attached LSPs to the current buffer. Since you have both `ruff` and `pyright` attached, both will receive the command. `ruff` obviously does not implement this command, so it sends a warning.\r\n\r\nI use the organize imports function from `ruff`, which is in the code actions. I would recommend you do the same if you are using `ruff` anyway, as that has better organization and does not create any errors.\r\n\r\nI could implement a fix in a PR regardless for those that want to use this command.\r\n\r\n```lua\r\nlocal function organize_imports()\r\n  local params = {\r\n    command = 'pyright.organizeimports',\r\n    arguments = { vim.uri_from_bufnr(0) },\r\n  }\r\n  vim.lsp.buf.execute_command(params)\r\nend\r\n```",
            "created_at": "2023-12-21T11:03:52Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2937#issuecomment-1866062062",
            "id": 1866062062,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2937",
            "node_id": "IC_kwDODTQC185vOdju",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1866062062/reactions"
            },
            "updated_at": "2023-12-21T11:03:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1866062062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/21225762?v=4",
                "events_url": "https://api.github.com/users/mennohofste/events{/privacy}",
                "followers_url": "https://api.github.com/users/mennohofste/followers",
                "following_url": "https://api.github.com/users/mennohofste/following{/other_user}",
                "gists_url": "https://api.github.com/users/mennohofste/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mennohofste",
                "id": 21225762,
                "login": "mennohofste",
                "node_id": "MDQ6VXNlcjIxMjI1NzYy",
                "organizations_url": "https://api.github.com/users/mennohofste/orgs",
                "received_events_url": "https://api.github.com/users/mennohofste/received_events",
                "repos_url": "https://api.github.com/users/mennohofste/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mennohofste/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mennohofste/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mennohofste"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mennohofste, thanks for the feedback, I'm new to ruff and unaware of the organize imports functions code actions. I'll have a look.\r\n\r\nThanks for the fix in the mean time.",
            "created_at": "2023-12-21T16:01:18Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2937#issuecomment-1866560940",
            "id": 1866560940,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2937",
            "node_id": "IC_kwDODTQC185vQXWs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1866560940/reactions"
            },
            "updated_at": "2023-12-21T16:01:18Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1866560940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7933289?v=4",
                "events_url": "https://api.github.com/users/Yinameah/events{/privacy}",
                "followers_url": "https://api.github.com/users/Yinameah/followers",
                "following_url": "https://api.github.com/users/Yinameah/following{/other_user}",
                "gists_url": "https://api.github.com/users/Yinameah/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Yinameah",
                "id": 7933289,
                "login": "Yinameah",
                "node_id": "MDQ6VXNlcjc5MzMyODk=",
                "organizations_url": "https://api.github.com/users/Yinameah/orgs",
                "received_events_url": "https://api.github.com/users/Yinameah/received_events",
                "repos_url": "https://api.github.com/users/Yinameah/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Yinameah/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Yinameah/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Yinameah"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2937/comments",
    "created_at": "2023-12-19T08:13:12Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2937/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2937",
    "id": 2048141600,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2937/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC1856FCkg",
    "number": 2937,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2937/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2937/timeline",
    "title": "PyrightOrganizeImports trigger ruff error",
    "updated_at": "2023-12-21T16:01:19Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2937",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7933289?v=4",
        "events_url": "https://api.github.com/users/Yinameah/events{/privacy}",
        "followers_url": "https://api.github.com/users/Yinameah/followers",
        "following_url": "https://api.github.com/users/Yinameah/following{/other_user}",
        "gists_url": "https://api.github.com/users/Yinameah/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/Yinameah",
        "id": 7933289,
        "login": "Yinameah",
        "node_id": "MDQ6VXNlcjc5MzMyODk=",
        "organizations_url": "https://api.github.com/users/Yinameah/orgs",
        "received_events_url": "https://api.github.com/users/Yinameah/received_events",
        "repos_url": "https://api.github.com/users/Yinameah/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/Yinameah/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Yinameah/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/Yinameah"
    }
}