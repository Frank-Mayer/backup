{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "<!-- Before reporting: search existing issues and ensure you are running the latest nightly of neovim and the latest version of nvim-lspconfig. Note that this repository implements configuration and initialization of language servers. Implementation of the language server spec itself is located in the neovim core repository-->\r\n\r\n- `nvim --version`: NVIM v0.5.0-dev+1064-gb96db38af\r\n- nvim-lsp version(commit hash): 2eb8567507ee9c28ec53b9db8911b1aab55590f1\r\n- What language server (If the problem is related to a specific language server): pyright\r\n- Operating system/version: arch\r\n\r\n### How to reproduce the problem from neovim startup\r\nI have set up two virtualenvs containing pynvim, and set the python hosts in init.vim accordingly.\r\n```bash\r\npyenv virtualenv 3.9.1 neovim3\r\npyenv virtualenv 2.7.18 neovim2\r\npyenv activate neovim3\r\npip install pynvim\r\npyenv activate neovim2\r\npip install pynim\r\n```\r\n\r\n```vim\r\nlet g:python_host_prog = '~/.pyenv/versions/neovim2/bin/python'\r\nlet g:python3_host_prog = '~/.pyenv/versions/neovim3/bin/python'\r\n```\r\nI then created a third virtualenv\r\n```vim\r\npyenv virtualenv 3.8.7 tensorflow_py38\r\npyenv activate tensorflow_py38\r\npip install numpy, tensorflow\r\n```\r\nPrior to opening a python file, I have already activated the virtualenv by setting `pyenv local tensorflow_py38`\r\n![image](https://user-images.githubusercontent.com/28958399/106919751-55158000-6702-11eb-8a83-e02a99fa91b1.png)\r\n\r\n### Actual behaviour\r\n![image](https://user-images.githubusercontent.com/28958399/106920434-fbfa1c00-6702-11eb-9274-8f94aec9318b.png)\r\nPyright is not detecting the libraries in the virtualenv\r\nInstead it is pointing to\r\n```\r\npyenv global 3.9.1\r\n```\r\n### Expected behaviour\r\n\r\n### Minimal init.vim or init.lua and code sample\r\n<!-- You can download a minimal_init.lua from here \r\n      curl -fLO https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/test/minimal_init.lua \r\n      After editing to include your language server, run neovim with nvim -u minimal_init.lua -->\r\n```vim\r\nlet g:python_host_prog = '~/.pyenv/versions/neovim2/bin/python'\r\nlet g:python3_host_prog = '~/.pyenv/versions/neovim3/bin/python'\r\n\r\ncall plug#begin('~/.config/nvim/plugged')\r\nPlug 'nvim-lua/completion-nvim'\r\nPlug 'neovim/nvim-lspconfig'\r\ncall plug#end()\r\n\r\nset updatetime=50\r\nset completeopt+=menuone,noselect,noinsert\r\nset completeopt-=preview\r\nset shortmess+=c\r\n\r\nautocmd BufEnter * lua require'completion'.on_attach()\r\n\r\n:lua <<EOF\r\n\r\nrequire'lspconfig'.pyright.setup{}\r\nEOF\r\n\r\nlua vim.lsp.set_log_level('debug')\r\n\" log_path: ~/.cache/nvim/lsp.log\r\n\r\n```\r\n### Health check\r\n<details>\r\n<summary>Checkhealth result</summary>\r\n<!-- Run `:checkhealth lspconfig` and paste the result here-->\r\n```\r\n\r\nhealth#completion_nvim#check\r\n========================================================================\r\n## general\r\n  - OK: neovim version is supported\r\n\r\n## completion source\r\n  - OK: all completion sources are valid\r\n\r\n## snippet source\r\n  - INFO: You haven't set up any snippet source\r\n\r\nhealth#lspconfig#check\r\n========================================================================\r\n## Checking language server protocol configuration\r\n  - INFO: pyright: configuration checked.\r\n\r\nhealth#nvim#check\r\n========================================================================\r\n## Configuration\r\n  - OK: no issues found\r\n\r\n## Performance\r\n  - OK: Build type: RelWithDebInfo\r\n\r\n## Remote Plugins\r\n  - OK: Up to date\r\n\r\n## terminal\r\n  - INFO: key_backspace (kbs) terminfo entry: key_backspace=\\177\r\n  - INFO: key_dc (kdch1) terminfo entry: key_dc=\\E[3~\r\n  - INFO: $COLORTERM='truecolor'\r\n\r\nhealth#provider#check\r\n========================================================================\r\n## Clipboard (optional)\r\n  - OK: Clipboard tool found: xclip\r\n\r\n## Python 2 provider (optional)\r\n  - INFO: pyenv: Path: /home/henryw/.pyenv/libexec/pyenv\r\n  - INFO: pyenv: Root: /home/henryw/.pyenv\r\n  - INFO: Using: g:python_host_prog = \"~/.pyenv/versions/neovim2/bin/python\"\r\n  - INFO: Executable: /home/henryw/.pyenv/versions/neovim2/bin/python\r\n  - INFO: Python version: 2.7.18\r\n  - INFO: pynvim version: 0.4.2\r\n  - OK: Latest pynvim is installed.\r\n\r\n## Python 3 provider (optional)\r\n  - INFO: pyenv: Path: /home/henryw/.pyenv/libexec/pyenv\r\n  - INFO: pyenv: Root: /home/henryw/.pyenv\r\n  - INFO: Using: g:python3_host_prog = \"~/.pyenv/versions/neovim3/bin/python\"\r\n  - INFO: Executable: /home/henryw/.pyenv/versions/neovim3/bin/python\r\n  - INFO: Python version: 3.9.1\r\n  - INFO: pynvim version: 0.4.2\r\n  - OK: Latest pynvim is installed.\r\n\r\n## Python virtualenv\r\n  - WARNING: $VIRTUAL_ENV is set to: /home/henryw/.pyenv/versions/3.8.7/envs/tensorflow_py38\r\n    And its /bin directory contains: python, python3, python3.8\r\n    But $PATH yields this python executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python\r\n    And $PATH in subshells yields this python executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python\r\n    And $PATH yields this python3 executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python3\r\n    And $PATH in subshells yields this python3 executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python3\r\n    And $PATH yields this python3.8 executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python3.8\r\n    And $PATH in subshells yields this python3.8 executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python3.8\r\n    So invoking Python may lead to unexpected results.\r\n    - ADVICE:\r\n      - $PATH ambiguities arise if the virtualenv is not properly activated prior to launching Nvim. Close Nvim, activate the virtualenv, check that invoking Python from the command line launches the correct one, then relaunch Nvim.\r\n      - $PATH ambiguities in subshells typically are caused by your shell config overriding the $PATH previously set by the virtualenv. Either prevent them from doing so, or use this workaround: https://vi.stackexchange.com/a/7654\r\n\r\n## Ruby provider (optional)\r\n  - INFO: Ruby: ruby 2.7.2p137 (2020-10-01 revision 5445e04352) [x86_64-linux]\r\n  - WARNING: `neovim-ruby-host` not found.\r\n    - ADVICE:\r\n      - Run `gem install neovim` to ensure the neovim RubyGem is installed.\r\n      - Run `gem environment` to ensure the gem bin directory is in $PATH.\r\n      - If you are using rvm/rbenv/chruby, try \"rehashing\".\r\n      - See :help |g:ruby_host_prog| for non-standard gem installations.\r\n\r\n## Node.js provider (optional)\r\n  - INFO: Node.js: v15.8.0\r\n  - INFO: Nvim node.js host: /usr/lib/node_modules/neovim/bin/cli.js\r\n  - OK: Latest \"neovim\" npm/yarn package is installed: 4.9.0\r\n\r\n## Perl provider (optional)\r\n  - ERROR: perl provider error:\r\n    - ADVICE:\r\n      - \"Neovim::Ext\" cpan module is not installed\r\n```\r\n\r\n</details>\r\n\r\n### LSP log\r\n<!-- If not using the minimal_init.lua please add vim.lsp.set_log_level(\"debug\") to your lua block \r\n     in init.vim and paste a link to your log file, located at  $HOME/.cache/nvim/lsp.log (formerly $HOME/.local/share/nvim/lsp.log) -->\r\n<details>\r\n<summary>Log file</summary>\r\n<!-- past you log between here -->\r\n\r\n```\r\n\r\n[ INFO ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:311 ]\t\"Starting RPC client\"\t{  args = { \"--stdio\" },  cmd = \"pyright-langserver\",  extra = {}}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:647 ]\t\"LSP[pyright]\"\t\"initialize_params\"\t{  capabilities = {    callHierarchy = {      dynamicRegistration = false,      <metatable> = <1>{        __tostring = <function 1>      }    },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        dynamicRegistration = false,        <metatable> = <table 1>      },      completion = {        completionItem = {          commitCharactersSupport = false,          deprecatedSupport = false,          documentationFormat = { \"markdown\", \"plaintext\" },          preselectSupport = false,          snippetSupport = false,          <metatable> = <table 1>        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },          <metatable> = <table 1>        },        contextSupport = false,        dynamicRegistration = false,        <metatable> = <table 1>      },      declaration = {        linkSupport = true,        <metatable> = <table 1>      },      definition = {        linkSupport = true,        <metatable> = <table 1>      },      documentHighlight = {        dynamicRegistration = false,        <metatable> = <table 1>      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      hover = {        contentFormat = { \"markdown\", \"plaintext\" },        dynamicRegistration = false,        <metatable> = <table 1>      },      implementation = {        linkSupport = true,        <metatable> = <table 1>      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      references = {        dynamicRegistration = false,        <metatable> = <table 1>      },      rename = {        dynamicRegistration = false,        prepareSupport = true,        <metatable> = <table 1>      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          documentationFormat = { \"markdown\", \"plaintext\" },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false,        <metatable> = <table 1>      },      typeDefinition = {        linkSupport = true,        <metatable> = <table 1>      },      <metatable> = <table 1>    },    window = {      showDocument = {        support = false,        <metatable> = <table 1>      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false,          <metatable> = <table 1>        },        <metatable> = <table 1>      },      workDoneProgress = true,      <metatable> = <table 1>    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },          <metatable> = <table 1>        },        <metatable> = <table 1>      },      workspaceFolders = true,      <metatable> = <table 1>    }  },  clientInfo = {    name = \"Neovim\",    version = \"0.5.0\"  },  initializationOptions = vim.empty_dict(),  processId = 4180585,  rootPath = \"/home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",  rootUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",  trace = \"off\",  workspaceFolders = { {      name = \"/home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",      uri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\"    } }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:388 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false,        <metatable> = <1>{          __tostring = <function 1>        }      },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" },              <metatable> = <table 1>            },            <metatable> = <table 1>          },          dynamicRegistration = false,          <metatable> = <table 1>        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            snippetSupport = false,            <metatable> = <table 1>          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },            <metatable> = <table 1>          },          contextSupport = false,          dynamicRegistration = false,          <metatable> = <table 1>        },        declaration = {          linkSupport = true,          <metatable> = <table 1>        },        definition = {          linkSupport = true,          <metatable> = <table 1>        },        documentHighlight = {          dynamicRegistration = false,          <metatable> = <table 1>        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = false,          <metatable> = <table 1>        },        implementation = {          linkSupport = true,          <metatable> = <table 1>        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        references = {          dynamicRegistration = false,          <metatable> = <table 1>        },        rename = {          dynamicRegistration = false,          prepareSupport = true,          <metatable> = <table 1>        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            documentationFormat = { \"markdown\", \"plaintext\" },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false,          <metatable> = <table 1>        },        typeDefinition = {          linkSupport = true,          <metatable> = <table 1>        },        <metatable> = <table 1>      },      window = {        showDocument = {          support = false,          <metatable> = <table 1>        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false,            <metatable> = <table 1>          },          <metatable> = <table 1>        },        workDoneProgress = true,        <metatable> = <table 1>      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 },            <metatable> = <table 1>          },          <metatable> = <table 1>        },        workspaceFolders = true,        <metatable> = <table 1>      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.5.0\"    },    initializationOptions = vim.empty_dict(),    processId = 4180585,    rootPath = \"/home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",    rootUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",    trace = \"off\",    workspaceFolders = { {        name = \"/home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",        uri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\"      } }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"Pyright language server 1.1.107 starting\",    type = 3  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"Pyright language server 1.1.107 starting\",  type = 3}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"Pyright language server 1.1.107 starting\",    type = 3  }}\r\n[ INFO ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:379 ]\t\"Pyright language server 1.1.107 starting\"\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"Server root directory: /usr/lib/node_modules/pyright/dist/\",    type = 3  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"Server root directory: /usr/lib/node_modules/pyright/dist/\",  type = 3}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"Server root directory: /usr/lib/node_modules/pyright/dist/\",    type = 3  }}\r\n[ INFO ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:379 ]\t\"Server root directory: /usr/lib/node_modules/pyright/dist/\"\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      callHierarchyProvider = true,      codeActionProvider = {        codeActionKinds = { \"quickfix\", \"source.organizeImports\" },        workDoneProgress = true      },      completionProvider = {        resolveProvider = true,        triggerCharacters = { \".\", \"[\" },        workDoneProgress = true      },      definitionProvider = {        workDoneProgress = true      },      documentHighlightProvider = {        workDoneProgress = true      },      documentSymbolProvider = {        workDoneProgress = true      },      executeCommandProvider = {        commands = {},        workDoneProgress = true      },      hoverProvider = {        workDoneProgress = true      },      referencesProvider = {        workDoneProgress = true      },      renameProvider = {        workDoneProgress = true      },      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\", \")\" },        workDoneProgress = true      },      textDocumentSync = 2,      workspaceSymbolProvider = {        workDoneProgress = true      }    }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:388 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = {    [true] = 6  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:388 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"workspace/didChangeConfiguration\",  params = {    settings = {      python = {        analysis = {          autoSearchPaths = true,          useLibraryCodeForTypes = true,          <metatable> = <1>{            __tostring = <function 1>          }        },        <metatable> = <table 1>      },      <metatable> = <table 1>    }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:674 ]\t\"LSP[pyright]\"\t\"server_capabilities\"\t{  callHierarchyProvider = true,  codeActionProvider = {    codeActionKinds = { \"quickfix\", \"source.organizeImports\" },    workDoneProgress = true  },  completionProvider = {    resolveProvider = true,    triggerCharacters = { \".\", \"[\" },    workDoneProgress = true  },  definitionProvider = {    workDoneProgress = true  },  documentHighlightProvider = {    workDoneProgress = true  },  documentSymbolProvider = {    workDoneProgress = true  },  executeCommandProvider = {    commands = {},    workDoneProgress = true  },  hoverProvider = {    workDoneProgress = true  },  referencesProvider = {    workDoneProgress = true  },  renameProvider = {    workDoneProgress = true  },  signatureHelpProvider = {    triggerCharacters = { \"(\", \",\", \")\" },    workDoneProgress = true  },  textDocumentSync = 2,  workspaceSymbolProvider = {    workDoneProgress = true  }}\r\n[ INFO ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:675 ]\t\"LSP[pyright]\"\t\"initialized\"\t{  resolved_capabilities = {    call_hierarchy = true,    code_action = {      codeActionKinds = { \"quickfix\", \"source.organizeImports\" },      workDoneProgress = true    },    completion = true,    declaration = false,    document_formatting = false,    document_highlight = {      workDoneProgress = true    },    document_range_formatting = false,    document_symbol = {      workDoneProgress = true    },    execute_command = true,    find_references = {      workDoneProgress = true    },    goto_definition = {      workDoneProgress = true    },    hover = {      workDoneProgress = true    },    implementation = false,    rename = true,    signature_help = true,    signature_help_trigger_characters = { \"(\", \",\", \")\" },    text_document_did_change = 2,    text_document_open_close = true,    text_document_save = false,    text_document_save_include_text = false,    text_document_will_save = false,    text_document_will_save_wait_until = false,    type_definition = false,    workspace_folder_properties = {      changeNotifications = false,      supported = false    },    workspace_symbol = {      workDoneProgress = true    }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:388 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"python\",      text = \"import numpy as np\\nimport tensorflow as tf\\n\\n\\n\",      uri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5/test.py\",      version = 0    }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  id = 0,  jsonrpc = \"2.0\",  method = \"client/registerCapability\",  params = {    registrations = { {        id = \"e0ec5f4c-1b36-44c6-aab7-99b8cd0763ff\",        method = \"workspace/didChangeWorkspaceFolders\",        registerOptions = vim.empty_dict()      } }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:514 ]\t\"server_request\"\t\"client/registerCapability\"\t{  registrations = { {      id = \"e0ec5f4c-1b36-44c6-aab7-99b8cd0763ff\",      method = \"workspace/didChangeWorkspaceFolders\",      registerOptions = {}    } }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:517 ]\t\"server_request: found handler for\"\t\"client/registerCapability\"\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"client/registerCapability\"\t{  client_id = 1,  params = {    registrations = { {        id = \"e0ec5f4c-1b36-44c6-aab7-99b8cd0763ff\",        method = \"workspace/didChangeWorkspaceFolders\",        registerOptions = {}      } }  }}\r\n[ WARN ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:108 ]\t\"The language server pyright triggers a registerCapability handler despite dynamicRegistration set to false. Report upstream, this warning is harmless\"\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:500 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:388 ]\t\"rpc.send.payload\"\t{  id = 0,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"workspace/configuration\",  params = {    items = { {        scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",        section = \"python\"      } }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:514 ]\t\"server_request\"\t\"workspace/configuration\"\t{  items = { {      scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",      section = \"python\"    } }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:517 ]\t\"server_request: found handler for\"\t\"workspace/configuration\"\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"workspace/configuration\"\t{  client_id = 1,  params = {    items = { {        scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",        section = \"python\"      } }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:500 ]\t\"server_request: callback result\"\t{  result = { {      analysis = {        autoSearchPaths = true,        useLibraryCodeForTypes = true,        <metatable> = <1>{          __tostring = <function 1>        }      },      <metatable> = <table 1>    } },  status = true}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:388 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  result = { {      analysis = {        autoSearchPaths = true,        useLibraryCodeForTypes = true,        <metatable> = <1>{          __tostring = <function 1>        }      },      <metatable> = <table 1>    } }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"workspace/configuration\",  params = {    items = { {        scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",        section = \"python.analysis\"      } }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:514 ]\t\"server_request\"\t\"workspace/configuration\"\t{  items = { {      scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",      section = \"python.analysis\"    } }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:517 ]\t\"server_request: found handler for\"\t\"workspace/configuration\"\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"workspace/configuration\"\t{  client_id = 1,  params = {    items = { {        scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",        section = \"python.analysis\"      } }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:500 ]\t\"server_request: callback result\"\t{  result = { {      autoSearchPaths = true,      useLibraryCodeForTypes = true,      <metatable> = {        __tostring = <function 1>      }    } },  status = true}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:388 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  result = { {      autoSearchPaths = true,      useLibraryCodeForTypes = true,      <metatable> = {        __tostring = <function 1>      }    } }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  id = 3,  jsonrpc = \"2.0\",  method = \"workspace/configuration\",  params = {    items = { {        scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",        section = \"pyright\"      } }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:514 ]\t\"server_request\"\t\"workspace/configuration\"\t{  items = { {      scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",      section = \"pyright\"    } }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:517 ]\t\"server_request: found handler for\"\t\"workspace/configuration\"\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"workspace/configuration\"\t{  client_id = 1,  params = {    items = { {        scopeUri = \"file:///home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5\",        section = \"pyright\"      } }  }}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:500 ]\t\"server_request: callback result\"\t{  result = { vim.NIL },  status = true}\r\n[ DEBUG ] 2021-02-04T15:59:13+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:388 ]\t\"rpc.send.payload\"\t{  id = 3,  jsonrpc = \"2.0\",  result = { vim.NIL }}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"No configuration file found.\",    type = 3  }}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"No configuration file found.\",  type = 3}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"No configuration file found.\",    type = 3  }}\r\n[ INFO ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:379 ]\t\"No configuration file found.\"\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"stubPath /home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5/typings is not a valid directory.\",    type = 1  }}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"Assuming Python platform Linux\",    type = 3  }}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"Exception received when installing recursive file system watcher\",    type = 1  }}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"Searching for source files\",    type = 3  }}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"window/logMessage\",  params = {    message = \"Found 1 source file\",    type = 3  }}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"stubPath /home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5/typings is not a valid directory.\",  type = 1}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"stubPath /home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5/typings is not a valid directory.\",    type = 1  }}\r\n[ ERROR ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:375 ]\t\"stubPath /home/henryw/Documents/Study/Pattern_Recognition,_Neural_Networks_and_Deep_Learning/coursework_wk5/typings is not a valid directory.\"\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"Assuming Python platform Linux\",  type = 3}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"Assuming Python platform Linux\",    type = 3  }}\r\n[ INFO ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:379 ]\t\"Assuming Python platform Linux\"\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"Exception received when installing recursive file system watcher\",  type = 1}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"Exception received when installing recursive file system watcher\",    type = 1  }}\r\n[ ERROR ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:375 ]\t\"Exception received when installing recursive file system watcher\"\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"Searching for source files\",  type = 3}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"Searching for source files\",    type = 3  }}\r\n[ INFO ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:379 ]\t\"Searching for source files\"\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"window/logMessage\"\t{  message = \"Found 1 source file\",  type = 3}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"window/logMessage\"\t{  client_id = 1,  params = {    message = \"Found 1 source file\",    type = 3  }}\r\n[ INFO ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:379 ]\t\"Found 1 source file\"\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...nt_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:489 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = { {        code = \"reportMissingImports\",        codeDescription = {          href = \"https://github.com/microsoft/pyright/blob/master/docs/configuration.md\"        },        message = 'Import \"numpy\" could not be resolved',        range = {          end = {            character = 12,            line = 0          },          start = {            character = 7,            line = 0          }        },        severity = 1,        source = \"Pyright\"      }, {        code = \"reportMissingImports\",        codeDescription = {          href = \"https://github.com/microsoft/pyright/blob/master/docs/configuration.md\"        },        message = 'Import \"tensorflow\" could not be resolved',        range = {          end = {            character = 17,            line = 1          },          start = {            character = 7,            line = 1          }        },        severity = 1,        source = \"Pyright\"      }, {        message = '\"np\" is not accessed',        range = {          end = {            character = 18,            line = 0          },          start = {            character = 16,            line = 0          }        },        severity = 4,        source = \"Pyright\",        tags = { 1 }      }, {        message = '\"tf\" is not accessed',        range = {          end = {            character = 23,            line = 1          },          start = {            character = 21,            line = 1          }        },        severity = 4,        source = \"Pyright\",        tags = { 1 }      } },    uri = \"file:///home/henryw/Documents/Study/Pattern_Recognition%2C_Neural_Networks_and_Deep_Learning/coursework_wk5/test.py\"  }}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ....mount_nvimdJSQYn/usr/share/nvim/runtime/lua/vim/lsp.lua:500 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = { {      code = \"reportMissingImports\",      codeDescription = {        href = \"https://github.com/microsoft/pyright/blob/master/docs/configuration.md\"      },      message = 'Import \"numpy\" could not be resolved',      range = {        end = {          character = 12,          line = 0        },        start = {          character = 7,          line = 0        }      },      severity = 1,      source = \"Pyright\"    }, {      code = \"reportMissingImports\",      codeDescription = {        href = \"https://github.com/microsoft/pyright/blob/master/docs/configuration.md\"      },      message = 'Import \"tensorflow\" could not be resolved',      range = {        end = {          character = 17,          line = 1        },        start = {          character = 7,          line = 1        }      },      severity = 1,      source = \"Pyright\"    }, {      message = '\"np\" is not accessed',      range = {        end = {          character = 18,          line = 0        },        start = {          character = 16,          line = 0        }      },      severity = 4,      source = \"Pyright\",      tags = { 1 }    }, {      message = '\"tf\" is not accessed',      range = {        end = {          character = 23,          line = 1        },        start = {          character = 21,          line = 1        }      },      severity = 4,      source = \"Pyright\",      tags = { 1 }    } },  uri = \"file:///home/henryw/Documents/Study/Pattern_Recognition%2C_Neural_Networks_and_Deep_Learning/coursework_wk5/test.py\"}\r\n[ DEBUG ] 2021-02-04T15:59:14+0000 ] ...imdJSQYn/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:407 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = { {        code = \"reportMissingImports\",        codeDescription = {          href = \"https://github.com/microsoft/pyright/blob/master/docs/configuration.md\"        },        message = 'Import \"numpy\" could not be resolved',        range = {          end = {            character = 12,            line = 0          },          start = {            character = 7,            line = 0          }        },        severity = 1,        source = \"Pyright\"      }, {        code = \"reportMissingImports\",        codeDescription = {          href = \"https://github.com/microsoft/pyright/blob/master/docs/configuration.md\"        },        message = 'Import \"tensorflow\" could not be resolved',        range = {          end = {            character = 17,            line = 1          },          start = {            character = 7,            line = 1          }        },        severity = 1,        source = \"Pyright\"      }, {        message = '\"np\" is not accessed',        range = {          end = {            character = 18,            line = 0          },          start = {            character = 16,            line = 0          }        },        severity = 4,        source = \"Pyright\",        tags = { 1 }      }, {        message = '\"tf\" is not accessed',        range = {          end = {            character = 23,            line = 1          },          start = {            character = 21,            line = 1          }        },        severity = 4,        source = \"Pyright\",        tags = { 1 }      } },    uri = \"file:///home/henryw/Documents/Study/Pattern_Recognition%2C_Neural_Networks_and_Deep_Learning/coursework_wk5/test.py\"  }}\r\n\r\n```\r\n</details>\r\n",
    "closed_at": "2021-02-04T17:27:25Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "pyenv does weird things with shims, I can tell you that if VIRTUAL_ENV is pointing to the correct virtual environment, then pyright will use the correct virtual environment (I use it almost every day).",
            "created_at": "2021-02-04T16:06:57Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773420795",
            "id": 773420795,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQyMDc5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773420795/reactions"
            },
            "updated_at": "2021-02-04T16:06:57Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773420795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "> pyenv does weird things with shims, I can tell you that if VIRTUAL_ENV is pointing to the correct virtual environment, then pyright will use the correct virtual environment (I use it almost every day).\r\n\r\nhmm, healthcheck showing error for python provider, and I don't know how to fix it. I tried the solution on the suggested stackoverflow but its not working.\r\n",
            "created_at": "2021-02-04T16:09:50Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773422848",
            "id": 773422848,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQyMjg0OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773422848/reactions"
            },
            "updated_at": "2021-02-04T16:09:58Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773422848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Well, the python provider is orthogonal since we don't use it for neovim's language server client :) ",
            "created_at": "2021-02-04T16:10:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773423481",
            "id": 773423481,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQyMzQ4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773423481/reactions"
            },
            "updated_at": "2021-02-04T16:10:44Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773423481",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Well, the python provider is orthogonal since we don't use it for neovim's language server client :)\r\n\r\n```\r\n## Python virtualenv\r\n  - WARNING: $VIRTUAL_ENV is set to: /home/henryw/.pyenv/versions/3.8.7/envs/tensorflow_py38\r\n    And its /bin directory contains: python, python3, python3.8\r\n    But $PATH yields this python executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python\r\n    And $PATH in subshells yields this python executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python\r\n    And $PATH yields this python3 executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python3\r\n    And $PATH in subshells yields this python3 executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python3\r\n    And $PATH yields this python3.8 executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python3.8\r\n    And $PATH in subshells yields this python3.8 executable: /home/henryw/.pyenv/versions/tensorflow_py38/bin/python3.8\r\n    So invoking Python may lead to unexpected results.\r\n    - ADVICE:\r\n      - $PATH ambiguities arise if the virtualenv is not properly activated prior to launching Nvim. Close Nvim, activate the virtualenv, check that invoking Python from the command line launches the correct one, then relaunch Nvim.\r\n      - $PATH ambiguities in subshells typically are caused by your shell config overriding the $PATH previously set by the virtualenv. Either prevent them from doing so, or use this workaround: https://vi.stackexchange.com/a/7654\r\n```",
            "created_at": "2021-02-04T16:11:56Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773424362",
            "id": 773424362,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQyNDM2Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773424362/reactions"
            },
            "updated_at": "2021-02-04T16:12:12Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773424362",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "NONE",
            "body": "I tried echo $VIRTUAL_ENV, and apparently it is pointing at the correct path:\r\n![image](https://user-images.githubusercontent.com/28958399/106921855-55af1600-6704-11eb-8087-1c5bb7b2f352.png)\r\n",
            "created_at": "2021-02-04T16:16:30Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773427677",
            "id": 773427677,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQyNzY3Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773427677/reactions"
            },
            "updated_at": "2021-02-04T16:16:30Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773427677",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Maybe try with a standard virtual environment and work backwards then?",
            "created_at": "2021-02-04T16:17:21Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773428285",
            "id": 773428285,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQyODI4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773428285/reactions"
            },
            "updated_at": "2021-02-04T16:18:48Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773428285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Maybe try with a standard virtual environment and work backwards then?\r\n\r\nIt works with a standard virtual environment created with virtualenv. Ok this is weird, so:\r\nstandard virtualenv works\r\npyenv activate tensorflow_py38 works\r\nbut setting pyenv local tensorflow_py38 does not!",
            "created_at": "2021-02-04T16:21:30Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773431305",
            "id": 773431305,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQzMTMwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773431305/reactions"
            },
            "updated_at": "2021-02-04T16:25:03Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773431305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ohhh, interesting. I have no idea then. Are you in the folder tensorflow_py38 before launching neovim? ",
            "created_at": "2021-02-04T16:25:50Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773434472",
            "id": 773434472,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQzNDQ3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773434472/reactions"
            },
            "updated_at": "2021-02-04T16:25:50Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773434472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "I didn't launch neovim in the virtualenv folder, but in this:\r\n![image](https://user-images.githubusercontent.com/28958399/106923322-d7ec0a00-6705-11eb-9bbb-56460c09194e.png)\r\n",
            "created_at": "2021-02-04T16:27:19Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773435489",
            "id": 773435489,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQzNTQ4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773435489/reactions"
            },
            "updated_at": "2021-02-04T16:27:19Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773435489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "pyenv local is only going to trigger on directory change into that folder",
            "created_at": "2021-02-04T16:28:13Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773436168",
            "id": 773436168,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQzNjE2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773436168/reactions"
            },
            "updated_at": "2021-02-04T16:28:13Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773436168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "hmm my starship prompt shows that the virtualenv is already activated\r\n![image](https://user-images.githubusercontent.com/28958399/106923668-3b763780-6706-11eb-8723-cfb715b37dcf.png)\r\n",
            "created_at": "2021-02-04T16:30:10Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773437461",
            "id": 773437461,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQzNzQ2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773437461/reactions"
            },
            "updated_at": "2021-02-04T16:30:10Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773437461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Can you try launching neovim from within the folder, and then opening your file?",
            "created_at": "2021-02-04T16:31:09Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773438109",
            "id": 773438109,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQzODEwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773438109/reactions"
            },
            "updated_at": "2021-02-04T16:31:09Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773438109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "Nope still not working.",
            "created_at": "2021-02-04T16:32:38Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773439000",
            "id": 773439000,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQzOTAwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773439000/reactions"
            },
            "updated_at": "2021-02-04T16:32:38Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773439000",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "NONE",
            "body": "If I do `pyenv shell tensorflow_py38`, even if I have already set `pyenv local tensorflow_py38`, then it works! How strange! I think nvim is not detecting pyenv local after its launched, so its still using the global interpreter.",
            "created_at": "2021-02-04T16:37:03Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773442006",
            "id": 773442006,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ0MjAwNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773442006/reactions"
            },
            "updated_at": "2021-02-04T16:55:25Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773442006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "🤷‍♀️ I don't use pyenv, I always found it's system of managing python versions a bit clunky. I'd check your setup.",
            "created_at": "2021-02-04T16:41:05Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773444974",
            "id": 773444974,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ0NDk3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 4,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773444974/reactions"
            },
            "updated_at": "2021-02-04T16:41:20Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773444974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I haven't used pyenv in a while. But if I remember correctly, it's using some kind of hook and/or wraps `cd`. But the server will be started in a new environment/shell, and would have to trigger whatever machinery is behind `pyenv local`.",
            "created_at": "2021-02-04T16:58:35Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773457779",
            "id": 773457779,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ1Nzc3OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773457779/reactions"
            },
            "updated_at": "2021-02-04T16:58:35Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773457779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/177685?v=4",
                "events_url": "https://api.github.com/users/lithammer/events{/privacy}",
                "followers_url": "https://api.github.com/users/lithammer/followers",
                "following_url": "https://api.github.com/users/lithammer/following{/other_user}",
                "gists_url": "https://api.github.com/users/lithammer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lithammer",
                "id": 177685,
                "login": "lithammer",
                "node_id": "MDQ6VXNlcjE3NzY4NQ==",
                "organizations_url": "https://api.github.com/users/lithammer/orgs",
                "received_events_url": "https://api.github.com/users/lithammer/received_events",
                "repos_url": "https://api.github.com/users/lithammer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lithammer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lithammer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lithammer"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "Put another way, imagine you had function `python` in your `.bashrc` that will lookup the correct interpreter using `pyenv local`. So when you type `python` in your shell it will magically use the correct Python version according to `pyenv`. This is more or less how `pyenv` works with its shims.\r\n\r\nThe problem is this only works in an interactive shell that will source `.bashrc`. But the language server isn't running inside an interactive shell, which means it won't source `.bashrc`. So the `python` function you created doesn't exist and it will try to lookup `python` in `$PATH` instead.\r\n\r\nUsing `pyenv shell tensorflow_py38` works because it will alter your environment (update `$PATH` etc). Same when you activate a regular virtualenv. And when you launch Neovim this is inherited all the way to starting the language server which will (again) look in the altered `$PATH` and find the correct `python`.",
            "created_at": "2021-02-04T17:14:29Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773468900",
            "id": 773468900,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ2ODkwMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773468900/reactions"
            },
            "updated_at": "2021-02-04T17:16:27Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773468900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/177685?v=4",
                "events_url": "https://api.github.com/users/lithammer/events{/privacy}",
                "followers_url": "https://api.github.com/users/lithammer/followers",
                "following_url": "https://api.github.com/users/lithammer/following{/other_user}",
                "gists_url": "https://api.github.com/users/lithammer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lithammer",
                "id": 177685,
                "login": "lithammer",
                "node_id": "MDQ6VXNlcjE3NzY4NQ==",
                "organizations_url": "https://api.github.com/users/lithammer/orgs",
                "received_events_url": "https://api.github.com/users/lithammer/received_events",
                "repos_url": "https://api.github.com/users/lithammer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lithammer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lithammer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lithammer"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Put another way, imagine you had function `python` in your `.bashrc` that will lookup the correct interpreter using `pyenv local`. So when you type `python` in your shell it will magically use the correct Python version according to `pyenv`. This is more or less how `pyenv` works with its shims.\r\n> \r\n> The problem is this only works in an interactive shell that will source `.bashrc`. But the language server isn't running inside an interactive shell, which means it won't source `.bashrc`. So the `python` function you created doesn't exist and it will try to lookup `python` in `$PATH` instead.\r\n> \r\n> Using `pyenv shell tensorflow_py38` works because it will alter your environment (update `$PATH` etc). Same when you activate a regular virtualenv. And when you launch Neovim this is inherited all the way to starting the language server which will (again) look in the altered `$PATH` and find the correct `python`.\r\n\r\nThank you for your explanation, I have put this in my config.fish, I just have to run this function everytime before I open vim :/\r\n```fish\r\nfunction act\r\n    if set -q VIRTUAL_ENV\r\n        pyenv shell (echo $VIRTUAL_ENV | sed 's/\\(.*\\)\\/\\(.*\\)/\\2/')\r\n    else\r\n        pyenv shell --unset\r\n    end\r\nend\r\n```",
            "created_at": "2021-02-04T17:25:35Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773476261",
            "id": 773476261,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ3NjI2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773476261/reactions"
            },
            "updated_at": "2021-02-04T17:25:35Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773476261",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thank you @mjlbach, you are a legend as always :)\r\nI'll open an issue on pyenv to see if I could do pyenv shell automatically.",
            "created_at": "2021-02-04T17:27:25Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773477463",
            "id": 773477463,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ3NzQ2Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773477463/reactions"
            },
            "updated_at": "2021-02-04T17:27:25Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773477463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "NONE",
            "body": "After quite a few hours of struggling, I am going to give up on using pyenv-virtualenv. I'm just going to use pyenv as a python version manager, and use manually activate virtualenvs.",
            "created_at": "2021-02-05T01:24:20Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773716117",
            "id": 773716117,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzcxNjExNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773716117/reactions"
            },
            "updated_at": "2021-02-05T01:24:20Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773716117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
                "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
                "followers_url": "https://api.github.com/users/quantum-booty/followers",
                "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
                "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/quantum-booty",
                "id": 28958399,
                "login": "quantum-booty",
                "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
                "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
                "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
                "repos_url": "https://api.github.com/users/quantum-booty/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/quantum-booty"
            }
        },
        {
            "author_association": "COLLABORATOR",
            "body": "I think that's actually the recommended workflow when using pyenv.",
            "created_at": "2021-02-05T07:18:32Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-773846149",
            "id": 773846149,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDc3Mzg0NjE0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773846149/reactions"
            },
            "updated_at": "2021-02-05T07:18:32Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/773846149",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/177685?v=4",
                "events_url": "https://api.github.com/users/lithammer/events{/privacy}",
                "followers_url": "https://api.github.com/users/lithammer/followers",
                "following_url": "https://api.github.com/users/lithammer/following{/other_user}",
                "gists_url": "https://api.github.com/users/lithammer/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lithammer",
                "id": 177685,
                "login": "lithammer",
                "node_id": "MDQ6VXNlcjE3NzY4NQ==",
                "organizations_url": "https://api.github.com/users/lithammer/orgs",
                "received_events_url": "https://api.github.com/users/lithammer/received_events",
                "repos_url": "https://api.github.com/users/lithammer/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lithammer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lithammer/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lithammer"
            }
        },
        {
            "author_association": "NONE",
            "body": "Hello people, checkout this plugin [pyenv-pyright](https://github.com/alefpereira/pyenv-pyright) I created.\r\nWith it you can setup pyright to use pyenv venvs with only one command:\r\n\r\n```\r\npyenv local my-venv\r\npyenv pyright\r\n```\r\nor\r\n\r\n```\r\npyenv pyright my-venv\r\n```\r\n\r\nThis will automatically create/update `.pyrightconfig.json` file with the pyenv virtualenv of your choice. Its a convenient way to overcome neovim+pyright+pyenv virtualenvs setup.\r\nhttps://github.com/alefpereira/pyenv-pyright\r\n",
            "created_at": "2021-03-20T01:50:57Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-803222723",
            "id": 803222723,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzIyMjcyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 8,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/803222723/reactions"
            },
            "updated_at": "2021-03-20T01:56:58Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/803222723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6379752?v=4",
                "events_url": "https://api.github.com/users/alefpereira/events{/privacy}",
                "followers_url": "https://api.github.com/users/alefpereira/followers",
                "following_url": "https://api.github.com/users/alefpereira/following{/other_user}",
                "gists_url": "https://api.github.com/users/alefpereira/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/alefpereira",
                "id": 6379752,
                "login": "alefpereira",
                "node_id": "MDQ6VXNlcjYzNzk3NTI=",
                "organizations_url": "https://api.github.com/users/alefpereira/orgs",
                "received_events_url": "https://api.github.com/users/alefpereira/received_events",
                "repos_url": "https://api.github.com/users/alefpereira/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/alefpereira/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alefpereira/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/alefpereira"
            }
        },
        {
            "author_association": "NONE",
            "body": "For anyone interested in alternatives: I've been a pyenv/pyenv-virtualenv user for many years, and I have been a [coc-pyright](https://github.com/fannheyward/coc-pyright) user for good time, never had any issue to tackle pyenv/pyenv-virtualenv. I kinda see the struggle here with estrangement.",
            "created_at": "2021-06-28T23:40:07Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-870118559",
            "id": 870118559,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDExODU1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/870118559/reactions"
            },
            "updated_at": "2021-06-28T23:40:23Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/870118559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1269815?v=4",
                "events_url": "https://api.github.com/users/oblitum/events{/privacy}",
                "followers_url": "https://api.github.com/users/oblitum/followers",
                "following_url": "https://api.github.com/users/oblitum/following{/other_user}",
                "gists_url": "https://api.github.com/users/oblitum/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oblitum",
                "id": 1269815,
                "login": "oblitum",
                "node_id": "MDQ6VXNlcjEyNjk4MTU=",
                "organizations_url": "https://api.github.com/users/oblitum/orgs",
                "received_events_url": "https://api.github.com/users/oblitum/received_events",
                "repos_url": "https://api.github.com/users/oblitum/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oblitum/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oblitum/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oblitum"
            }
        },
        {
            "author_association": "NONE",
            "body": "It seems pyright or vim respects the `PYENV_VERSION` environment variable.\r\nRunning nvim with `PYENV_VERSION=myvirtualenvname nvim`  makes nvim pick up the correct virtual environment. You can also execute this command: `pyenv shell <myvirtualenvname>`\r\n\r\n@jzelinskie describes well what is going on: https://github.com/microsoft/pyright/issues/1456#issuecomment-774636220",
            "created_at": "2022-10-04T15:41:15Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-1267201343",
            "id": 1267201343,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "IC_kwDODTQC185Lh_U_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1267201343/reactions"
            },
            "updated_at": "2022-10-11T14:37:12Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1267201343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20303564?v=4",
                "events_url": "https://api.github.com/users/balazser/events{/privacy}",
                "followers_url": "https://api.github.com/users/balazser/followers",
                "following_url": "https://api.github.com/users/balazser/following{/other_user}",
                "gists_url": "https://api.github.com/users/balazser/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/balazser",
                "id": 20303564,
                "login": "balazser",
                "node_id": "MDQ6VXNlcjIwMzAzNTY0",
                "organizations_url": "https://api.github.com/users/balazser/orgs",
                "received_events_url": "https://api.github.com/users/balazser/received_events",
                "repos_url": "https://api.github.com/users/balazser/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/balazser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/balazser/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/balazser"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Hello people, checkout this plugin [pyenv-pyright](https://github.com/alefpereira/pyenv-pyright) I created. With it you can setup pyright to use pyenv venvs with only one command:\r\n> \r\n> ```\r\n> pyenv local my-venv\r\n> pyenv pyright\r\n> ```\r\n> \r\n> or\r\n> \r\n> ```\r\n> pyenv pyright my-venv\r\n> ```\r\n> \r\n> This will automatically create/update `.pyrightconfig.json` file with the pyenv virtualenv of your choice. Its a convenient way to overcome neovim+pyright+pyenv virtualenvs setup. https://github.com/alefpereira/pyenv-pyright\r\n\r\nThanks, this is such a neat implementation. :) ",
            "created_at": "2022-10-04T15:46:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-1267209737",
            "id": 1267209737,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "IC_kwDODTQC185LiBYJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1267209737/reactions"
            },
            "updated_at": "2022-10-04T15:46:37Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1267209737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/28226423?v=4",
                "events_url": "https://api.github.com/users/igaurab/events{/privacy}",
                "followers_url": "https://api.github.com/users/igaurab/followers",
                "following_url": "https://api.github.com/users/igaurab/following{/other_user}",
                "gists_url": "https://api.github.com/users/igaurab/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/igaurab",
                "id": 28226423,
                "login": "igaurab",
                "node_id": "MDQ6VXNlcjI4MjI2NDIz",
                "organizations_url": "https://api.github.com/users/igaurab/orgs",
                "received_events_url": "https://api.github.com/users/igaurab/received_events",
                "repos_url": "https://api.github.com/users/igaurab/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/igaurab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/igaurab/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/igaurab"
            }
        },
        {
            "author_association": "NONE",
            "body": "don't use homebrew to install pyenv instead use pyenv-installer <3 https://github.com/zchee/deoplete-jedi/wiki/Setting-up-Python-for-Neovim",
            "created_at": "2022-10-04T16:02:36Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-1267230259",
            "id": 1267230259,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "IC_kwDODTQC185LiGYz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1267230259/reactions"
            },
            "updated_at": "2022-10-04T16:02:36Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1267230259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/108341497?v=4",
                "events_url": "https://api.github.com/users/kaidev0711/events{/privacy}",
                "followers_url": "https://api.github.com/users/kaidev0711/followers",
                "following_url": "https://api.github.com/users/kaidev0711/following{/other_user}",
                "gists_url": "https://api.github.com/users/kaidev0711/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kaidev0711",
                "id": 108341497,
                "login": "kaidev0711",
                "node_id": "U_kgDOBnUo-Q",
                "organizations_url": "https://api.github.com/users/kaidev0711/orgs",
                "received_events_url": "https://api.github.com/users/kaidev0711/received_events",
                "repos_url": "https://api.github.com/users/kaidev0711/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kaidev0711/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kaidev0711/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kaidev0711"
            }
        },
        {
            "author_association": "NONE",
            "body": "I don't know why but i just put the result of my observation here\r\n\r\nIf your set `$PYENV_VERSION` like `export $PYENV_VERSION=\"tensorflow_py38\"` , it works.\r\n\r\nThe only difference between `pyenv local tensorflow_py38` and `pyenv activate tensorflow_py38` is that the former does not include the  `$PYENV_VERSION` variable",
            "created_at": "2023-06-19T17:39:08Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717#issuecomment-1597532720",
            "id": 1597532720,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
            "node_id": "IC_kwDODTQC185fOGow",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1597532720/reactions"
            },
            "updated_at": "2023-06-19T17:39:08Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1597532720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22545315?v=4",
                "events_url": "https://api.github.com/users/urayoru113/events{/privacy}",
                "followers_url": "https://api.github.com/users/urayoru113/followers",
                "following_url": "https://api.github.com/users/urayoru113/following{/other_user}",
                "gists_url": "https://api.github.com/users/urayoru113/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/urayoru113",
                "id": 22545315,
                "login": "urayoru113",
                "node_id": "MDQ6VXNlcjIyNTQ1MzE1",
                "organizations_url": "https://api.github.com/users/urayoru113/orgs",
                "received_events_url": "https://api.github.com/users/urayoru113/received_events",
                "repos_url": "https://api.github.com/users/urayoru113/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/urayoru113/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/urayoru113/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/urayoru113"
            }
        }
    ],
    "comments": 27,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717/comments",
    "created_at": "2021-02-04T15:59:52Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/717",
    "id": 801417199,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU4MDE0MTcxOTk=",
    "number": 717,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717/timeline",
    "title": "Pyright not respecting pyenv virtualenv",
    "updated_at": "2023-06-19T17:39:08Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/717",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/28958399?v=4",
        "events_url": "https://api.github.com/users/quantum-booty/events{/privacy}",
        "followers_url": "https://api.github.com/users/quantum-booty/followers",
        "following_url": "https://api.github.com/users/quantum-booty/following{/other_user}",
        "gists_url": "https://api.github.com/users/quantum-booty/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/quantum-booty",
        "id": 28958399,
        "login": "quantum-booty",
        "node_id": "MDQ6VXNlcjI4OTU4Mzk5",
        "organizations_url": "https://api.github.com/users/quantum-booty/orgs",
        "received_events_url": "https://api.github.com/users/quantum-booty/received_events",
        "repos_url": "https://api.github.com/users/quantum-booty/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/quantum-booty/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/quantum-booty/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/quantum-booty"
    }
}