{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "- `nvim --version`:\r\n```\r\nNVIM v0.6.0-dev+73-g192adfe99\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.0-beta3\r\nCompilation: /usr/bin/gcc-11 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 -DNVIM_TS_HAS_SET_MATCH_LIMIT -O2 -g -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wmissing-prototypes -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fno-common -fdiagnostics-color=always -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -DMIN_LOG_LEVEL=3 -I/home/runner/work/neovim/neovim/build/config -I/home/runner/work/neovim/neovim/src -I/home/runner/work/neovim/neovim/.deps/usr/include -I/usr/include -I/home/runner/work/neovim/neovim/build/src/nvim/auto -I/home/runner/work/neovim/neovim/build/include\r\nCompiled by runner@fv-az139-298\r\n\r\nFeatures: +acl +iconv +tui\r\nSee \":help feature-compile\"\r\n\r\n   system vimrc file: \"$VIM/sysinit.vim\"\r\n  fall-back for $VIM: \"\r\n/home/runner/work/neovim/neovim/build/nvim.AppDir/usr/share/nvim\"\r\n```\r\n\r\n- nvim-lspconfig version(commit hash): \r\n4bcc485e2e6ccb4e (1 Aug 2021)\r\n\r\n- What language server (If the problem is related to a specific language server): \r\nclangd version 12.0.0 (https://github.com/clangd/llvm-project 8a844a3a321ea56da21af4d48433ad493b1bcfae)\r\n(not applicable to other language servers)\r\n\r\n- Operating system/version:\r\nUbuntu 20.04.2 LTS\r\n\r\n### How to reproduce the problem from neovim startup\r\nOpen a trivial main.cpp\r\n\r\n### Actual behaviour\r\nThese errors:\r\n```\r\nIn included file: 'stddef.h' file not found\r\nInvalid operands to binary expression ('std::ostream' (aka 'int') and 'const char [12]')\r\n```\r\n\r\n![Screenshot from 2021-08-02 13-45-29](https://user-images.githubusercontent.com/5008897/127861955-5b0e0973-23bf-41f2-854b-23d052e786b2.png)\r\n\r\n### Expected behaviour\r\n\r\n\r\n### Minimal init.vim or init.lua and code sample\r\nminimal init.lua; just set the server name to clangd, no custom cmd:\r\n```\r\n-- install packer\r\nlocal fn = vim.fn\r\n\r\nlocal install_path = '/tmp/nvim/site/pack/packer/start/packer.nvim'\r\n\r\nvim.cmd [[set packpath=/tmp/nvim/site]]\r\n\r\nlocal function load_plugins()\r\n  local use = require('packer').use\r\n  require('packer').startup {\r\n    function()\r\n      use 'wbthomason/packer.nvim'\r\n      use 'neovim/nvim-lspconfig'\r\n    end,\r\n    config = { package_root = '/tmp/nvim/site/pack' },\r\n  }\r\nend\r\n\r\n_G.load_config = function()\r\n  vim.lsp.set_log_level 'trace'\r\n  local nvim_lsp = require 'lspconfig'\r\n  local on_attach = function(_, bufnr)\r\n    local function buf_set_keymap(...)\r\n      vim.api.nvim_buf_set_keymap(bufnr, ...)\r\n    end\r\n    local function buf_set_option(...)\r\n      vim.api.nvim_buf_set_option(bufnr, ...)\r\n    end\r\n\r\n    buf_set_option('omnifunc', 'v:lua.vim.lsp.omnifunc')\r\n\r\n    -- Mappings.\r\n    local opts = { noremap = true, silent = true }\r\n    buf_set_keymap('n', 'gD', '<Cmd>lua vim.lsp.buf.declaration()<CR>', opts)\r\n    buf_set_keymap('n', 'gd', '<Cmd>lua vim.lsp.buf.definition()<CR>', opts)\r\n    buf_set_keymap('n', 'K', '<Cmd>lua vim.lsp.buf.hover()<CR>', opts)\r\n    buf_set_keymap('n', 'gi', '<cmd>lua vim.lsp.buf.implementation()<CR>', opts)\r\n    buf_set_keymap('n', '<C-k>', '<cmd>lua vim.lsp.buf.signature_help()<CR>', opts)\r\n    buf_set_keymap('n', '<space>wa', '<cmd>lua vim.lsp.buf.add_workspace_folder()<CR>', opts)\r\n    buf_set_keymap('n', '<space>wr', '<cmd>lua vim.lsp.buf.remove_workspace_folder()<CR>', opts)\r\n    buf_set_keymap('n', '<space>wl', '<cmd>lua print(vim.inspect(vim.lsp.buf.list_workspace_folders()))<CR>', opts)\r\n    buf_set_keymap('n', '<space>D', '<cmd>lua vim.lsp.buf.type_definition()<CR>', opts)\r\n    buf_set_keymap('n', '<space>rn', '<cmd>lua vim.lsp.buf.rename()<CR>', opts)\r\n    buf_set_keymap('n', 'gr', '<cmd>lua vim.lsp.buf.references()<CR>', opts)\r\n    buf_set_keymap('n', '<space>e', '<cmd>lua vim.lsp.diagnostic.show_line_diagnostics()<CR>', opts)\r\n    buf_set_keymap('n', '[d', '<cmd>lua vim.lsp.diagnostic.goto_prev()<CR>', opts)\r\n    buf_set_keymap('n', ']d', '<cmd>lua vim.lsp.diagnostic.goto_next()<CR>', opts)\r\n    buf_set_keymap('n', '<space>q', '<cmd>lua vim.lsp.diagnostic.set_loclist()<CR>', opts)\r\n  end\r\n\r\n  -- Add the server that troubles you here\r\n  local name = 'clangd'\r\n  if not nvim_lsp[name].document_config.default_config.cmd and not cmd then\r\n    print [[You have not defined a server default cmd for a server\r\n      that requires it please edit minimal_init.lua]]\r\n  end\r\n\r\n  nvim_lsp[name].setup {\r\n    cmd = cmd,\r\n    on_attach = on_attach,\r\n  }\r\n\r\n  print [[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]]\r\nend\r\n\r\nif fn.isdirectory(install_path) == 0 then\r\n  fn.system { 'git', 'clone', 'https://github.com/wbthomason/packer.nvim', install_path }\r\n  load_plugins()\r\n  require('packer').sync()\r\n  vim.cmd 'autocmd User PackerComplete ++once lua load_config()'\r\nelse\r\n  load_plugins()\r\n  _G.load_config()\r\nend\r\n```\r\n\r\nCode sample:\r\n```\r\n#include <iostream>\r\n\r\nint main()\r\n{\r\n    using std::cout;\r\n    using std::endl;\r\n    cout << \"Hello world\" << endl;\r\n    return 0;\r\n}\r\n```\r\n\r\n### Health check\r\n<details>\r\n<summary>Checkhealth result</summary>\r\nhealth#lspconfig#check\r\n========================================================================\r\n## Checking language server protocol configuration\r\n  - INFO: clangd: configuration checked.\r\n</details>\r\n\r\n### LSP log\r\nThe logfile is completely empty, even after doing `:LspRestart` on the main.cpp file (which isn't necessary to see the problem).\r\n",
    "closed_at": "2021-08-05T14:47:25Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "What's in your compile_commands.json?",
            "created_at": "2021-08-02T18:52:48Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-891253699",
            "id": 891253699,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC1841H3PD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/891253699/reactions"
            },
            "updated_at": "2021-08-02T18:52:48Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/891253699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tried putting the command I use to compile with in there:\r\n\r\n```\r\n[\r\n  {\r\n    \"command\": \"/usr/bin/clang++ -std=c++14 -march=native -Weverything -Wno-c++98-compat -c main.cpp\",\r\n    \"directory\": \".\",\r\n    \"file\": \"main.cpp\"\r\n  }\r\n]\r\n```\r\n\r\nAnd I have also tried using the simpler compile_flags.txt file (without a compile_commands.json):\r\n\r\n```\r\n-std=c++14\r\n-march=native\r\n-Weverything\r\n-Wno-c++98-compat\r\n```\r\n\r\nEither of these should work. The really disconcerting thing is that the LSP logfile is totally empty. Yet, checkhealth and LspInfo both indicate the language servers are running and configured properly.",
            "created_at": "2021-08-02T19:07:25Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-891263104",
            "id": 891263104,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC1841H5iA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/891263104/reactions"
            },
            "updated_at": "2021-08-02T19:07:25Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/891263104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5008897?v=4",
                "events_url": "https://api.github.com/users/TamaMcGlinn/events{/privacy}",
                "followers_url": "https://api.github.com/users/TamaMcGlinn/followers",
                "following_url": "https://api.github.com/users/TamaMcGlinn/following{/other_user}",
                "gists_url": "https://api.github.com/users/TamaMcGlinn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TamaMcGlinn",
                "id": 5008897,
                "login": "TamaMcGlinn",
                "node_id": "MDQ6VXNlcjUwMDg4OTc=",
                "organizations_url": "https://api.github.com/users/TamaMcGlinn/orgs",
                "received_events_url": "https://api.github.com/users/TamaMcGlinn/received_events",
                "repos_url": "https://api.github.com/users/TamaMcGlinn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TamaMcGlinn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TamaMcGlinn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TamaMcGlinn"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "It's not disconcerting, did you follow the debugging steps and set your log level to trace? \r\n\r\nYou shouldn't generate your compile commands manually, I would recommend following the suggestions in CONFIG.md and using cmake. The compile_commands are the reason clangd is not finding stddef.h, it has nothing to do with lspconfig.",
            "created_at": "2021-08-02T19:09:49Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-891264737",
            "id": 891264737,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC1841H57h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/891264737/reactions"
            },
            "updated_at": "2021-08-02T19:09:49Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/891264737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Roger. I had expected `vim.lsp.set_log_level(\"debug\")` to be in the [minimal_init.lua file](https://github.com/neovim/nvim-lspconfig/blob/master/test/minimal_init.lua). Thanks for all the pointers.\r\n\r\nPutting down the basic CMakeLists.txt:\r\n```\r\nproject(\"ulp_close\")\r\nadd_executable(prog main.cpp)\r\n```\r\n\r\nand then running `cmake . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON` it generated a compile_commands.json as:\r\n```\r\n[\r\n{\r\n  \"directory\": \"/home/s1000586/code/cpp_practice/ulp_close\",\r\n  \"command\": \"/usr/bin/c++      -o CMakeFiles/prog.dir/main.cpp.o -c /home/s1000586/code/cpp_practice/ulp_close/main.cpp\",\r\n  \"file\": \"/home/s1000586/code/cpp_practice/ulp_close/main.cpp\"\r\n}\r\n]\r\n```\r\n\r\nBut the behaviour of `neovim -u minimal_init.lua main.cpp` is identical. The logfile now spits out:\r\n```\r\n[ START ] 2021-08-03T09:00:23+0200 ] LSP logging initiated\r\n[ INFO ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:316 ]\t\"Starting RPC client\"\t{  args = { \"--background-index\" },  cmd = \"clangd\",  extra = {}}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:836 ]\t\"LSP[clangd]\"\t\"initialize_params\"\t{  capabilities = {    callHierarchy = {      dynamicRegistration = false    },    offsetEncoding = { \"utf-8\", \"utf-16\" },    textDocument = {      codeAction = {        codeActionLiteralSupport = {          codeActionKind = {            valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }          }        },        dynamicRegistration = false      },      completion = {        completionItem = {          commitCharactersSupport = false,          deprecatedSupport = false,          documentationFormat = { \"markdown\", \"plaintext\" },          preselectSupport = false,          snippetSupport = false        },        completionItemKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }        },        contextSupport = false,        dynamicRegistration = false,        editsNearCursor = true      },      declaration = {        linkSupport = true      },      definition = {        linkSupport = true      },      documentHighlight = {        dynamicRegistration = false      },      documentSymbol = {        dynamicRegistration = false,        hierarchicalDocumentSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      hover = {        contentFormat = { \"markdown\", \"plaintext\" },        dynamicRegistration = false      },      implementation = {        linkSupport = true      },      publishDiagnostics = {        relatedInformation = true,        tagSupport = {          valueSet = { 1, 2 }        }      },      references = {        dynamicRegistration = false      },      rename = {        dynamicRegistration = false,        prepareSupport = true      },      signatureHelp = {        dynamicRegistration = false,        signatureInformation = {          activeParameterSupport = true,          documentationFormat = { \"markdown\", \"plaintext\" },          parameterInformation = {            labelOffsetSupport = true          }        }      },      synchronization = {        didSave = true,        dynamicRegistration = false,        willSave = false,        willSaveWaitUntil = false      },      typeDefinition = {        linkSupport = true      }    },    window = {      showDocument = {        support = false      },      showMessage = {        messageActionItem = {          additionalPropertiesSupport = false        }      },      workDoneProgress = true    },    workspace = {      applyEdit = true,      configuration = true,      symbol = {        dynamicRegistration = false,        hierarchicalWorkspaceSymbolSupport = true,        symbolKind = {          valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }        }      },      workspaceEdit = {        resourceOperations = { \"rename\", \"create\", \"delete\" }      },      workspaceFolders = true    }  },  clientInfo = {    name = \"Neovim\",    version = \"0.6.0\"  },  initializationOptions = vim.empty_dict(),  processId = 19771,  rootPath = \"/home/s1000586/code/cpp_practice/ulp_close\",  rootUri = \"file:///home/s1000586/code/cpp_practice/ulp_close\",  trace = \"off\",  workspaceFolders = { {      name = \"/home/s1000586/code/cpp_practice/ulp_close\",      uri = \"file:///home/s1000586/code/cpp_practice/ulp_close\"    } }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 1,  jsonrpc = \"2.0\",  method = \"initialize\",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false      },      offsetEncoding = { \"utf-8\", \"utf-16\" },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }            }          },          dynamicRegistration = false        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { \"markdown\", \"plaintext\" },            preselectSupport = false,            snippetSupport = false          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          contextSupport = false,          dynamicRegistration = false,          editsNearCursor = true        },        declaration = {          linkSupport = true        },        definition = {          linkSupport = true        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        hover = {          contentFormat = { \"markdown\", \"plaintext\" },          dynamicRegistration = false        },        implementation = {          linkSupport = true        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = false,          prepareSupport = true        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { \"markdown\", \"plaintext\" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = false        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { \"rename\", \"create\", \"delete\" }        },        workspaceFolders = true      }    },    clientInfo = {      name = \"Neovim\",      version = \"0.6.0\"    },    initializationOptions = vim.empty_dict(),    processId = 19771,    rootPath = \"/home/s1000586/code/cpp_practice/ulp_close\",    rootUri = \"file:///home/s1000586/code/cpp_practice/ulp_close\",    trace = \"off\",    workspaceFolders = { {        name = \"/home/s1000586/code/cpp_practice/ulp_close\",        uri = \"file:///home/s1000586/code/cpp_practice/ulp_close\"      } }  }}\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.959] clangd version 12.0.0 (https://github.com/clangd/llvm-project 8a844a3a321ea56da21af4d48433ad493b1bcfae)\\nI[09:00:23.959] PID: 19779\\n\"\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.959] Working directory: /home/s1000586/code/cpp_practice/ulp_close\\nI[09:00:23.959] argv[0]: clangd\\nI[09:00:23.959] argv[1]: --background-index\\nI[09:00:23.959] Starting LSP over stdin/stdout\\n\"\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.960] <-- initialize(1)\\n\"\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.960] --> reply:initialize(1) 0 ms\\n\"\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 1,  jsonrpc = \"2.0\",  result = {    capabilities = {      astProvider = true,      callHierarchyProvider = true,      codeActionProvider = {        codeActionKinds = { \"quickfix\", \"refactor\", \"info\" }      },      compilationDatabase = {        automaticReload = true      },      completionProvider = {        allCommitCharacters = { \" \", \"\\t\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\", \":\", \";\", \",\", \"+\", \"-\", \"/\", \"*\", \"%\", \"^\", \"&\", \"#\", \"?\", \".\", \"=\", '\"', \"'\", \"|\" },        resolveProvider = false,        triggerCharacters = { \".\", \"<\", \">\", \":\", '\"', \"/\" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = false      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"\\n\",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"clangd.applyFix\", \"clangd.applyTweak\" }      },      hoverProvider = true,      implementationProvider = true,      memoryUsageProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = {},          tokenTypes = { \"variable\", \"variable\", \"parameter\", \"function\", \"method\", \"function\", \"property\", \"variable\", \"class\", \"enum\", \"enumMember\", \"type\", \"dependent\", \"dependent\", \"namespace\", \"typeParameter\", \"concept\", \"type\", \"macro\", \"comment\" }        },        range = false      },      signatureHelpProvider = {        triggerCharacters = { \"(\", \",\" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = true      },      typeHierarchyProvider = true,      workspaceSymbolProvider = true    },    offsetEncoding = \"utf-8\",    serverInfo = {      name = \"clangd\",      version = \"clangd version 12.0.0 (https://github.com/clangd/llvm-project 8a844a3a321ea56da21af4d48433ad493b1bcfae)\"    }  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"initialized\",  params = {    [true] = 6  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:863 ]\t\"LSP[clangd]\"\t\"server_capabilities\"\t{  astProvider = true,  callHierarchyProvider = true,  codeActionProvider = {    codeActionKinds = { \"quickfix\", \"refactor\", \"info\" }  },  compilationDatabase = {    automaticReload = true  },  completionProvider = {    allCommitCharacters = { \" \", \"\\t\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\", \":\", \";\", \",\", \"+\", \"-\", \"/\", \"*\", \"%\", \"^\", \"&\", \"#\", \"?\", \".\", \"=\", '\"', \"'\", \"|\" },    resolveProvider = false,    triggerCharacters = { \".\", \"<\", \">\", \":\", '\"', \"/\" }  },  declarationProvider = true,  definitionProvider = true,  documentFormattingProvider = true,  documentHighlightProvider = true,  documentLinkProvider = {    resolveProvider = false  },  documentOnTypeFormattingProvider = {    firstTriggerCharacter = \"\\n\",    moreTriggerCharacter = {}  },  documentRangeFormattingProvider = true,  documentSymbolProvider = true,  executeCommandProvider = {    commands = { \"clangd.applyFix\", \"clangd.applyTweak\" }  },  hoverProvider = true,  implementationProvider = true,  memoryUsageProvider = true,  referencesProvider = true,  renameProvider = {    prepareProvider = true  },  selectionRangeProvider = true,  semanticTokensProvider = {    full = {      delta = true    },    legend = {      tokenModifiers = {},      tokenTypes = { \"variable\", \"variable\", \"parameter\", \"function\", \"method\", \"function\", \"property\", \"variable\", \"class\", \"enum\", \"enumMember\", \"type\", \"dependent\", \"dependent\", \"namespace\", \"typeParameter\", \"concept\", \"type\", \"macro\", \"comment\" }    },    range = false  },  signatureHelpProvider = {    triggerCharacters = { \"(\", \",\" }  },  textDocumentSync = {    change = 2,    openClose = true,    save = true  },  typeHierarchyProvider = true,  workspaceSymbolProvider = true}\r\n[ INFO ] 2021-08-03T09:00:23+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:864 ]\t\"LSP[clangd]\"\t\"initialized\"\t{  resolved_capabilities = {    call_hierarchy = true,    code_action = {      codeActionKinds = { \"quickfix\", \"refactor\", \"info\" }    },    code_lens = false,    code_lens_resolve = false,    completion = true,    declaration = true,    document_formatting = true,    document_highlight = true,    document_range_formatting = true,    document_symbol = true,    execute_command = true,    find_references = true,    goto_definition = true,    hover = true,    implementation = true,    rename = true,    signature_help = true,    signature_help_trigger_characters = { \"(\", \",\" },    text_document_did_change = 2,    text_document_open_close = true,    text_document_save = true,    text_document_save_include_text = false,    text_document_will_save = false,    text_document_will_save_wait_until = false,    type_definition = false,    workspace_folder_properties = {      changeNotifications = false,      supported = false    },    workspace_symbol = true  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/didOpen\",  params = {    textDocument = {      languageId = \"cpp\",      text = '#include <iostream>\\n\\nint main()\\n{\\n    using std::cout;\\n    using std::endl;\\n    cout << \"Hello world\" << endl;\\n    return 0;\\n}\\n',      uri = \"file:///home/s1000586/code/cpp_practice/ulp_close/main.cpp\",      version = 0    }  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...imO6maea/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:444 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = {},    uri = \"file:///home/s1000586/code/cpp_practice/ulp_close/main.cpp\"  }}\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.962] <-- initialized\\nI[09:00:23.962] <-- textDocument/didOpen\\n\"\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.962] Loaded compilation database from /home/s1000586/code/cpp_practice/ulp_close/compile_commands.json\\n\"\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.962] --> window/workDoneProgress/create(0)\\n\"\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.963] Enqueueing 1 commands for indexing\\n\"\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 0,  jsonrpc = \"2.0\",  method = \"window/workDoneProgress/create\",  params = {    token = \"backgroundIndexProgress\"  }}\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.963] ASTWorker building file /home/s1000586/code/cpp_practice/ulp_close/main.cpp version 0 with command \\n[/home/s1000586/code/cpp_practice/ulp_close]\\n/usr/bin/c++ --driver-mode=g++ -o CMakeFiles/prog.dir/main.cpp.o -c /home/s1000586/code/cpp_practice/ulp_close/main.cpp -fsyntax-only -resource-dir=/usr/lib/llvm-11/lib/clang/12.0.0\\n\"\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:698 ]\t\"server_request\"\t\"window/workDoneProgress/create\"\t{  token = \"backgroundIndexProgress\"}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:701 ]\t\"server_request: found handler for\"\t\"window/workDoneProgress/create\"\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...imO6maea/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:444 ]\t\"default_handler\"\t\"window/workDoneProgress/create\"\t{  client_id = 1,  params = {    token = \"backgroundIndexProgress\"  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:507 ]\t\"server_request: callback result\"\t{  result = vim.NIL,  status = true}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 0,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ ERROR ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:23.963] <-- reply(0)\\nI[09:00:23.963] --> $/progress\\nI[09:00:23.963] --> $/progress\\n\"\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"backgroundIndexProgress\",    value = {      kind = \"begin\",      percentage = 0,      title = \"indexing\"    }  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"backgroundIndexProgress\",    value = {      kind = \"report\",      message = \"0/1\",      percentage = 0    }  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:684 ]\t\"notification\"\t\"$/progress\"\t{  token = \"backgroundIndexProgress\",  value = {    kind = \"begin\",    percentage = 0,    title = \"indexing\"  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...imO6maea/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:444 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 1,  params = {    token = \"backgroundIndexProgress\",    value = {      kind = \"begin\",      percentage = 0,      title = \"indexing\"    }  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:684 ]\t\"notification\"\t\"$/progress\"\t{  token = \"backgroundIndexProgress\",  value = {    kind = \"report\",    message = \"0/1\",    percentage = 0  }}\r\n[ DEBUG ] 2021-08-03T09:00:23+0200 ] ...imO6maea/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:444 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 1,  params = {    token = \"backgroundIndexProgress\",    value = {      kind = \"report\",      message = \"0/1\",      percentage = 0    }  }}\r\n[ ERROR ] 2021-08-03T09:00:24+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:24.007] --> $/progress\\n\"\r\n[ ERROR ] 2021-08-03T09:00:24+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:24.007] --> $/progress\\n\"\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"backgroundIndexProgress\",    value = {      kind = \"report\",      message = \"0/1\",      percentage = 0    }  }}\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"$/progress\",  params = {    token = \"backgroundIndexProgress\",    value = {      kind = \"end\"    }  }}\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:684 ]\t\"notification\"\t\"$/progress\"\t{  token = \"backgroundIndexProgress\",  value = {    kind = \"report\",    message = \"0/1\",    percentage = 0  }}\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ...imO6maea/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:444 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 1,  params = {    token = \"backgroundIndexProgress\",    value = {      kind = \"report\",      message = \"0/1\",      percentage = 0    }  }}\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:684 ]\t\"notification\"\t\"$/progress\"\t{  token = \"backgroundIndexProgress\",  value = {    kind = \"end\"  }}\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ...imO6maea/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:444 ]\t\"default_handler\"\t\"$/progress\"\t{  client_id = 1,  params = {    token = \"backgroundIndexProgress\",    value = {      kind = \"end\"    }  }}\r\n[ ERROR ] 2021-08-03T09:00:24+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:24.224] --> textDocument/publishDiagnostics\\n\"\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  jsonrpc = \"2.0\",  method = \"textDocument/publishDiagnostics\",  params = {    diagnostics = { {        code = \"pp_file_not_found\",        message = \"In included file: 'stddef.h' file not found\",        range = {          end = {            character = 10,            line = 0          },          start = {            character = 9,            line = 0          }        },        relatedInformation = { {            location = {              range = {                end = {                  character = 19,                  line = 34                },                start = {                  character = 9,                  line = 34                }              },              uri = \"file:///usr/include/wchar.h\"            },            message = \"Error occurred here\"          } },        severity = 1,        source = \"clang\"      }, {        code = \"typecheck_invalid_operands\",        message = \"Invalid operands to binary expression ('std::ostream' (aka 'int') and 'const char [12]')\",        range = {          end = {            character = 11,            line = 6          },          start = {            character = 9,            line = 6          }        },        relatedInformation = {},        severity = 1,        source = \"clang\"      } },    uri = \"file:///home/s1000586/code/cpp_practice/ulp_close/main.cpp\",    version = 0  }}\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:684 ]\t\"notification\"\t\"textDocument/publishDiagnostics\"\t{  diagnostics = { {      code = \"pp_file_not_found\",      message = \"In included file: 'stddef.h' file not found\",      range = {        end = {          character = 10,          line = 0        },        start = {          character = 9,          line = 0        }      },      relatedInformation = { {          location = {            range = {              end = {                character = 19,                line = 34              },              start = {                character = 9,                line = 34              }            },            uri = \"file:///usr/include/wchar.h\"          },          message = \"Error occurred here\"        } },      severity = 1,      source = \"clang\"    }, {      code = \"typecheck_invalid_operands\",      message = \"Invalid operands to binary expression ('std::ostream' (aka 'int') and 'const char [12]')\",      range = {        end = {          character = 11,          line = 6        },        start = {          character = 9,          line = 6        }      },      relatedInformation = {},      severity = 1,      source = \"clang\"    } },  uri = \"file:///home/s1000586/code/cpp_practice/ulp_close/main.cpp\",  version = 0}\r\n[ DEBUG ] 2021-08-03T09:00:24+0200 ] ...imO6maea/usr/share/nvim/runtime/lua/vim/lsp/handlers.lua:444 ]\t\"default_handler\"\t\"textDocument/publishDiagnostics\"\t{  client_id = 1,  params = {    diagnostics = { {        code = \"pp_file_not_found\",        message = \"In included file: 'stddef.h' file not found\",        range = {          end = {            character = 10,            line = 0          },          start = {            character = 9,            line = 0          }        },        relatedInformation = { {            location = {              range = {                end = {                  character = 19,                  line = 34                },                start = {                  character = 9,                  line = 34                }              },              uri = \"file:///usr/include/wchar.h\"            },            message = \"Error occurred here\"          } },        severity = 1,        source = \"clang\"      }, {        code = \"typecheck_invalid_operands\",        message = \"Invalid operands to binary expression ('std::ostream' (aka 'int') and 'const char [12]')\",        range = {          end = {            character = 11,            line = 6          },          start = {            character = 9,            line = 6          }        },        relatedInformation = {},        severity = 1,        source = \"clang\"      } },    uri = \"file:///home/s1000586/code/cpp_practice/ulp_close/main.cpp\",    version = 0  }}\r\n[ INFO ] 2021-08-03T09:00:25+0200 ] ....mount_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp.lua:1223 ]\t\"exit_handler\"\t{ {    _on_attach = <function 1>,    cancel_request = <function 2>,    config = {      _on_attach = <function 3>,      capabilities = {        callHierarchy = {          dynamicRegistration = false        },        offsetEncoding = { \"utf-8\", \"utf-16\" },        textDocument = {          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { \"\", \"Empty\", \"QuickFix\", \"Refactor\", \"RefactorExtract\", \"RefactorInline\", \"RefactorRewrite\", \"Source\", \"SourceOrganizeImports\", \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor.rewrite\", \"source\", \"source.organizeImports\" }              }            },            dynamicRegistration = false          },          completion = {            completionItem = {              commitCharactersSupport = false,              deprecatedSupport = false,              documentationFormat = { \"markdown\", \"plaintext\" },              preselectSupport = false,              snippetSupport = false            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }            },            contextSupport = false,            dynamicRegistration = false,            editsNearCursor = true          },          declaration = {            linkSupport = true          },          definition = {            linkSupport = true          },          documentHighlight = {            dynamicRegistration = false          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          hover = {            contentFormat = { \"markdown\", \"plaintext\" },            dynamicRegistration = false          },          implementation = {            linkSupport = true          },          publishDiagnostics = {            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 }            }          },          references = {            dynamicRegistration = false          },          rename = {            dynamicRegistration = false,            prepareSupport = true          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              activeParameterSupport = true,              documentationFormat = { \"markdown\", \"plaintext\" },              parameterInformation = {                labelOffsetSupport = true              }            }          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = false,            willSaveWaitUntil = false          },          typeDefinition = {            linkSupport = true          }        },        window = {          showDocument = {            support = false          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false            }          },          workDoneProgress = true        },        workspace = {          applyEdit = true,          configuration = true,          symbol = {            dynamicRegistration = false,            hierarchicalWorkspaceSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          workspaceEdit = {            resourceOperations = { \"rename\", \"create\", \"delete\" }          },          workspaceFolders = true        }      },      cmd = { \"clangd\", \"--background-index\" },      filetypes = { \"c\", \"cpp\", \"objc\", \"objcpp\" },      flags = {},      get_language_id = <function 4>,      handlers = <1>{},      init_options = vim.empty_dict(),      log_level = 2,      message_level = 2,      name = \"clangd\",      on_attach = <function 5>,      on_exit = <function 6>,      on_init = <function 7>,      root_dir = \"/home/s1000586/code/cpp_practice/ulp_close\",      settings = vim.empty_dict(),      workspace_folders = <2>{ {          name = \"/home/s1000586/code/cpp_practice/ulp_close\",          uri = \"file:///home/s1000586/code/cpp_practice/ulp_close\"        } },      <metatable> = <3>{        __tostring = <function 8>      }    },    handlers = <table 1>,    id = 1,    initialized = true,    is_stopped = <function 9>,    messages = {      messages = {},      name = \"clangd\",      progress = {        backgroundIndexProgress = {          done = true,          percentage = 0,          title = \"indexing\"        }      },      status = {}    },    name = \"clangd\",    notify = <function 10>,    offset_encoding = \"utf-8\",    request = <function 11>,    request_sync = <function 12>,    resolved_capabilities = {      call_hierarchy = true,      code_action = <4>{        codeActionKinds = { \"quickfix\", \"refactor\", \"info\" }      },      code_lens = false,      code_lens_resolve = false,      completion = true,      declaration = true,      document_formatting = true,      document_highlight = true,      document_range_formatting = true,      document_symbol = true,      execute_command = true,      find_references = true,      goto_definition = true,      hover = true,      implementation = true,      rename = true,      signature_help = true,      signature_help_trigger_characters = <5>{ \"(\", \",\" },      text_document_did_change = 2,      text_document_open_close = true,      text_document_save = true,      text_document_save_include_text = false,      text_document_will_save = false,      text_document_will_save_wait_until = false,      type_definition = false,      workspace_folder_properties = {        changeNotifications = false,        supported = false      },      workspace_symbol = true    },    rpc = {      handle = <userdata 1>,      notify = <function 13>,      pid = 19779,      request = <function 14>    },    server_capabilities = {      astProvider = true,      callHierarchyProvider = true,      codeActionProvider = <table 4>,      compilationDatabase = {        automaticReload = true      },      completionProvider = {        allCommitCharacters = { \" \", \"\\t\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", \"<\", \">\", \":\", \";\", \",\", \"+\", \"-\", \"/\", \"*\", \"%\", \"^\", \"&\", \"#\", \"?\", \".\", \"=\", '\"', \"'\", \"|\" },        resolveProvider = false,        triggerCharacters = { \".\", \"<\", \">\", \":\", '\"', \"/\" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = false      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = \"\\n\",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { \"clangd.applyFix\", \"clangd.applyTweak\" }      },      hoverProvider = true,      implementationProvider = true,      memoryUsageProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = {},          tokenTypes = { \"variable\", \"variable\", \"parameter\", \"function\", \"method\", \"function\", \"property\", \"variable\", \"class\", \"enum\", \"enumMember\", \"type\", \"dependent\", \"dependent\", \"namespace\", \"typeParameter\", \"concept\", \"type\", \"macro\", \"comment\" }        },        range = false      },      signatureHelpProvider = {        triggerCharacters = <table 5>      },      textDocumentSync = {        change = 2,        openClose = true,        save = true      },      typeHierarchyProvider = true,      workspaceSymbolProvider = true    },    stop = <function 15>,    supports_method = <function 16>,    workspaceFolders = <table 2>,    workspace_did_change_configuration = <function 17>  } }\r\n[ DEBUG ] 2021-08-03T09:00:25+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  id = 2,  jsonrpc = \"2.0\",  method = \"shutdown\"}\r\n[ ERROR ] 2021-08-03T09:00:25+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:25.186] <-- shutdown(2)\\nI[09:00:25.186] --> reply:shutdown(2) 0 ms\\n\"\r\n[ DEBUG ] 2021-08-03T09:00:25+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:496 ]\t\"decoded\"\t{  id = 2,  jsonrpc = \"2.0\",  result = vim.NIL}\r\n[ DEBUG ] 2021-08-03T09:00:25+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:395 ]\t\"rpc.send.payload\"\t{  jsonrpc = \"2.0\",  method = \"exit\"}\r\n[ ERROR ] 2021-08-03T09:00:25+0200 ] ...nt_nvimO6maea/usr/share/nvim/runtime/lua/vim/lsp/rpc.lua:462 ]\t\"rpc\"\t\"clangd\"\t\"stderr\"\t\"I[09:00:25.186] <-- exit\\nI[09:00:25.186] LSP finished, exiting with status 0\\n\"\r\n```",
            "created_at": "2021-08-03T07:04:51Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-891591443",
            "id": 891591443,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC1841JJsT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/891591443/reactions"
            },
            "updated_at": "2021-08-03T07:04:51Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/891591443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5008897?v=4",
                "events_url": "https://api.github.com/users/TamaMcGlinn/events{/privacy}",
                "followers_url": "https://api.github.com/users/TamaMcGlinn/followers",
                "following_url": "https://api.github.com/users/TamaMcGlinn/following{/other_user}",
                "gists_url": "https://api.github.com/users/TamaMcGlinn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TamaMcGlinn",
                "id": 5008897,
                "login": "TamaMcGlinn",
                "node_id": "MDQ6VXNlcjUwMDg4OTc=",
                "organizations_url": "https://api.github.com/users/TamaMcGlinn/orgs",
                "received_events_url": "https://api.github.com/users/TamaMcGlinn/received_events",
                "repos_url": "https://api.github.com/users/TamaMcGlinn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TamaMcGlinn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TamaMcGlinn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TamaMcGlinn"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm pretty sure something is still misconfigured with your compile_commands.json\r\n\r\nhttps://github.com/mjlbach/lsp-containers/tree/master/clangd\r\n\r\nThe exact steps to set everything up are in the readme in that subdirectory, but I can't reproduce your problem in that container, everything works fine.\r\n",
            "created_at": "2021-08-04T16:56:59Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-892818202",
            "id": 892818202,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC1841N1Ma",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/892818202/reactions"
            },
            "updated_at": "2021-08-04T17:08:36Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/892818202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm fairly certain this is a usage issue, so feel free to seek additional help on the discourse.",
            "created_at": "2021-08-05T14:47:25Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-893519689",
            "id": 893519689,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC1841QgdJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/893519689/reactions"
            },
            "updated_at": "2021-08-05T14:47:25Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/893519689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks so much for your help. I was able to confirm using that container that there was something wrong with my clangd installation - I had apparently installed it using snap instead of apt-get, being enticed by the higher version number offered. I have fallen in that trap before. `clangd --version` would output nothing, and wait for user input, apparently.\r\n\r\nI also got a lot of tips from the init.lua - although half of that isn't relevant to LSP, I still love that you took the time to put up a vimrc that works in a docker container. Thank you!",
            "created_at": "2021-08-09T15:44:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-895332038",
            "id": 895332038,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC1841Xa7G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/895332038/reactions"
            },
            "updated_at": "2021-08-09T15:44:44Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/895332038",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5008897?v=4",
                "events_url": "https://api.github.com/users/TamaMcGlinn/events{/privacy}",
                "followers_url": "https://api.github.com/users/TamaMcGlinn/followers",
                "following_url": "https://api.github.com/users/TamaMcGlinn/following{/other_user}",
                "gists_url": "https://api.github.com/users/TamaMcGlinn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TamaMcGlinn",
                "id": 5008897,
                "login": "TamaMcGlinn",
                "node_id": "MDQ6VXNlcjUwMDg4OTc=",
                "organizations_url": "https://api.github.com/users/TamaMcGlinn/orgs",
                "received_events_url": "https://api.github.com/users/TamaMcGlinn/received_events",
                "repos_url": "https://api.github.com/users/TamaMcGlinn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TamaMcGlinn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TamaMcGlinn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TamaMcGlinn"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "You are welcome :) \n\nIt's defaults.nvim modified for your usecase. Going forward for these sorts of issues I'm going to provide containers because a lot of the time it comes down with issues with the language server that are hard to debug :/",
            "created_at": "2021-08-09T15:46:22Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-895333274",
            "id": 895333274,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC1841XbOa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/895333274/reactions"
            },
            "updated_at": "2021-08-09T15:46:22Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/895333274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I'm pretty sure something is still misconfigured with your compile_commands.json\r\n> \r\n> https://github.com/mjlbach/lsp-containers/tree/master/clangd\r\n> \r\n> The exact steps to set everything up are in the readme in that subdirectory, but I can't reproduce your problem in that container, everything works fine.\r\n\r\n@mjlbach I am going through the same issue, but the link you provided doesn't seem to exist anymore. Could you share something similar? I am new to nvim,and I figured out that the problem was due to compile configurations, but I'm not sure what it is exactly. ",
            "created_at": "2023-02-22T02:27:52Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-1439349197",
            "id": 1439349197,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC185VyrnN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1439349197/reactions"
            },
            "updated_at": "2023-02-22T02:27:52Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1439349197",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/92980894?v=4",
                "events_url": "https://api.github.com/users/dipyamanroy/events{/privacy}",
                "followers_url": "https://api.github.com/users/dipyamanroy/followers",
                "following_url": "https://api.github.com/users/dipyamanroy/following{/other_user}",
                "gists_url": "https://api.github.com/users/dipyamanroy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dipyamanroy",
                "id": 92980894,
                "login": "dipyamanroy",
                "node_id": "U_kgDOBYrGng",
                "organizations_url": "https://api.github.com/users/dipyamanroy/orgs",
                "received_events_url": "https://api.github.com/users/dipyamanroy/received_events",
                "repos_url": "https://api.github.com/users/dipyamanroy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dipyamanroy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dipyamanroy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dipyamanroy"
            }
        },
        {
            "author_association": "NONE",
            "body": "@0xd1r I ran into this issue the other day and realized it was more related to my system's configuration than it was to `lspconfig`. Wrote up a document on how I solved it.  If you're still having the issue, maybe it could be of service 🙂  \r\n\r\n[lsp-clang-issue-and-solution.pdf](https://github.com/neovim/nvim-lspconfig/files/11114206/lsp-clang-issue-and-solution.pdf)",
            "created_at": "2023-03-30T17:21:06Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120#issuecomment-1490661392",
            "id": 1490661392,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
            "node_id": "IC_kwDODTQC185Y2bAQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1490661392/reactions"
            },
            "updated_at": "2023-03-30T17:21:06Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1490661392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/60711680?v=4",
                "events_url": "https://api.github.com/users/seantronsen/events{/privacy}",
                "followers_url": "https://api.github.com/users/seantronsen/followers",
                "following_url": "https://api.github.com/users/seantronsen/following{/other_user}",
                "gists_url": "https://api.github.com/users/seantronsen/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seantronsen",
                "id": 60711680,
                "login": "seantronsen",
                "node_id": "MDQ6VXNlcjYwNzExNjgw",
                "organizations_url": "https://api.github.com/users/seantronsen/orgs",
                "received_events_url": "https://api.github.com/users/seantronsen/received_events",
                "repos_url": "https://api.github.com/users/seantronsen/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seantronsen/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seantronsen/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seantronsen"
            }
        }
    ],
    "comments": 10,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120/comments",
    "created_at": "2021-08-02T12:28:59Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/1120",
    "id": 958093856,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWU5NTgwOTM4NTY=",
    "number": 1120,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120/timeline",
    "title": "Clangd misconfigured by default: fails to find stddef.h",
    "updated_at": "2023-06-03T05:50:30Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/1120",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5008897?v=4",
        "events_url": "https://api.github.com/users/TamaMcGlinn/events{/privacy}",
        "followers_url": "https://api.github.com/users/TamaMcGlinn/followers",
        "following_url": "https://api.github.com/users/TamaMcGlinn/following{/other_user}",
        "gists_url": "https://api.github.com/users/TamaMcGlinn/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TamaMcGlinn",
        "id": 5008897,
        "login": "TamaMcGlinn",
        "node_id": "MDQ6VXNlcjUwMDg4OTc=",
        "organizations_url": "https://api.github.com/users/TamaMcGlinn/orgs",
        "received_events_url": "https://api.github.com/users/TamaMcGlinn/received_events",
        "repos_url": "https://api.github.com/users/TamaMcGlinn/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TamaMcGlinn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TamaMcGlinn/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TamaMcGlinn"
    }
}