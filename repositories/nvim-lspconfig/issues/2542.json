{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n\r\nSetting `client.server_capabilities.sematicTokensProvider = nil` in the `on_attach` throws an error when opening multiple source code files.\r\n\r\n```\r\nError executing vim.schedule lua callback: ...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:98: attempt to\r\nindex field 'semanticTokensProvider' (a nil value)\r\nstack traceback:\r\n        ...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:98: in function 'tokens_to_ranges'\r\n        ...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:355: in function 'process_response'\r\n        ...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:283: in function 'handler'\r\n        /usr/local/share/nvim/runtime/lua/vim/lsp.lua:1399: in function ''\r\n        vim/_editor.lua: in function <vim/_editor.lua:0>\r\n```\r\nThis issue originates from upstream but upon further discussion, we suspect that the issue is related to `nvim-lspconfig` and how it calls the `on_attach` function.\r\nhttps://github.com/neovim/neovim/issues/21588#issuecomment-1493306262\r\n\r\n\r\n### Neovim version\r\n\r\nNVIM v0.9.0-dev-1338+g9e7426718\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.0-beta3\r\n\r\n\r\n### Nvim-lspconfig version\r\n\r\n0bc0c38e1b11dfb6b5f1794d53869f89ccf9e78f\r\n\r\n### Operating system and version\r\n\r\nLinux archlinux 6.2.8-arch1-1\r\n\r\n### Affected language servers\r\n\r\nall with semantic token support\r\n\r\n### Steps to reproduce\r\n\r\n1. create `minimal_init.lua` from below in your nvim config directory\r\n2. `nvim -nu minimal_init.lua`\r\n3. `:e minimal_init.lua`\r\n4. `:new`\r\n5. `:e init.lua` (some lua file with semantic tokens present)\r\n6. with the focus on `init.lua`, `:LspStop` followed by `:LspStart`\r\n\r\nSame steps can be repeated for `tsserver` using two files with `console.log('hello')` in them.\r\nThe bug only present itself with code that would be highlighted as a semantic token.\r\n\r\n### Actual behavior\r\n\r\nUsing `lua_ls`, I get the error\r\n```\r\nLSP[lua_ls]: Error SERVER_REQUEST_HANDLER_ERROR: \"...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:267: att\r\nempt to index field 'semanticTokensProvider' (a nil value)\"\r\n```\r\n\r\nWith `tsserver`, I get\r\n```\r\nError executing vim.schedule lua callback: ...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:98: attempt to\r\nindex field 'semanticTokensProvider' (a nil value)\r\nstack traceback:\r\n        ...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:98: in function 'tokens_to_ranges'\r\n        ...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:355: in function 'process_response'\r\n        ...local/share/nvim/runtime/lua/vim/lsp/semantic_tokens.lua:283: in function 'handler'\r\n        /usr/local/share/nvim/runtime/lua/vim/lsp.lua:1399: in function ''\r\n        vim/_editor.lua: in function <vim/_editor.lua:0>\r\n```\r\n\r\n### Expected behavior\r\n\r\nNo error/warnings thrown\r\n\r\n### Minimal config\r\n\r\n```Lua\r\n-- minimal_init.lua\r\nlocal on_windows = vim.loop.os_uname().version:match(\"Windows\")\r\n\r\nlocal function join_paths(...)\r\n\tlocal path_sep = on_windows and \"\\\\\" or \"/\"\r\n\tlocal result = table.concat({ ... }, path_sep)\r\n\treturn result\r\nend\r\n\r\nvim.cmd([[set runtimepath=$VIMRUNTIME]])\r\n\r\nlocal temp_dir = vim.loop.os_getenv(\"TEMP\") or \"/tmp\"\r\n\r\nvim.cmd(\"set packpath=\" .. join_paths(temp_dir, \"nvim\", \"site\"))\r\n\r\nlocal package_root = join_paths(temp_dir, \"nvim\", \"site\", \"pack\")\r\nlocal lspconfig_path = join_paths(package_root, \"test\", \"start\", \"nvim-lspconfig\")\r\n\r\nif vim.fn.isdirectory(lspconfig_path) ~= 1 then\r\n\tvim.fn.system({ \"git\", \"clone\", \"https://github.com/neovim/nvim-lspconfig\", lspconfig_path })\r\nend\r\n\r\nvim.cmd.colorscheme(\"habamax\")\r\nvim.lsp.set_log_level(\"trace\")\r\nrequire(\"vim.lsp.log\").set_format_func(vim.inspect)\r\nlocal nvim_lsp = require(\"lspconfig\")\r\nlocal on_attach = function(client, bufnr)\r\n\tclient.server_capabilities.semanticTokensProvider = nil\r\n\tlocal function buf_set_option(...)\r\n\t\tvim.api.nvim_buf_set_option(bufnr, ...)\r\n\tend\r\n\r\n\tbuf_set_option(\"omnifunc\", \"v:lua.vim.lsp.omnifunc\")\r\n\r\n\t-- Mappings.\r\n\tlocal opts = { buffer = bufnr, noremap = true, silent = true }\r\n\tvim.keymap.set(\"n\", \"gD\", vim.lsp.buf.declaration, opts)\r\n\tvim.keymap.set(\"n\", \"gd\", vim.lsp.buf.definition, opts)\r\n\tvim.keymap.set(\"n\", \"K\", vim.lsp.buf.hover, opts)\r\n\tvim.keymap.set(\"n\", \"gi\", vim.lsp.buf.implementation, opts)\r\n\tvim.keymap.set(\"n\", \"<C-k>\", vim.lsp.buf.signature_help, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wa\", vim.lsp.buf.add_workspace_folder, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wr\", vim.lsp.buf.remove_workspace_folder, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wl\", function()\r\n\t\tprint(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n\tend, opts)\r\n\tvim.keymap.set(\"n\", \"<space>D\", vim.lsp.buf.type_definition, opts)\r\n\tvim.keymap.set(\"n\", \"<space>rn\", vim.lsp.buf.rename, opts)\r\n\tvim.keymap.set(\"n\", \"gr\", vim.lsp.buf.references, opts)\r\n\tvim.keymap.set(\"n\", \"<space>e\", vim.diagnostic.open_float, opts)\r\n\tvim.keymap.set(\"n\", \"[d\", vim.diagnostic.goto_prev, opts)\r\n\tvim.keymap.set(\"n\", \"]d\", vim.diagnostic.goto_next, opts)\r\n\tvim.keymap.set(\"n\", \"<space>q\", vim.diagnostic.setloclist, opts)\r\nend\r\n\r\n-- Add the server that troubles you here\r\nlocal name = \"lua_ls\"\r\nlocal cmd = { \"lua-language-server\" } -- needed for elixirls, lua_ls, omnisharp\r\nif not name then\r\n\tprint(\"You have not defined a server name, please edit minimal_init.lua\")\r\nend\r\nif not nvim_lsp[name].document_config.default_config.cmd and not cmd then\r\n\tprint([[You have not defined a server default cmd for a server\r\n    that requires it please edit minimal_init.lua]])\r\nend\r\n\r\nnvim_lsp[name].setup({\r\n\tcmd = cmd,\r\n\ton_attach = on_attach,\r\n})\r\n\r\nprint(\r\n\t[[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]]\r\n)\r\n```\r\n\r\n\r\n### LSP log\r\nhttps://gist.github.com/jamestrew/c64b0aaf3204acaf7cccdf98cff222b7",
    "closed_at": "2023-04-07T06:01:48Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "this is not mini config. we provide a min config please use that. I can't reproduce with your step and min config",
            "created_at": "2023-04-05T06:17:53Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1496974838",
            "id": 1496974838,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185ZOgX2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1496974838/reactions"
            },
            "updated_at": "2023-04-05T07:20:45Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1496974838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Leaving the old min config and steps here just in case. It was VERY reproduce-able last night but now I'm having to alter steps a fair bit. I'm not sure why.\r\n\r\nUpdated the original post with new instructions, min config and log.\r\n\r\n<details>\r\n<summary>minimal_init.lua</summary>\r\n\r\n```lua\r\n-- DO NOT change the paths and don't remove the colorscheme\r\nlocal root = vim.fn.fnamemodify(\"./.repro\", \":p\")\r\n\r\n-- set stdpaths to use .repro\r\nfor _, name in ipairs({ \"config\", \"data\", \"state\", \"cache\" }) do\r\n\tvim.env[(\"XDG_%s_HOME\"):format(name:upper())] = root .. \"/\" .. name\r\nend\r\n\r\n-- bootstrap lazy\r\nlocal lazypath = root .. \"/plugins/lazy.nvim\"\r\nif not vim.loop.fs_stat(lazypath) then\r\n\tvim.fn.system({\r\n\t\t\"git\",\r\n\t\t\"clone\",\r\n\t\t\"--filter=blob:none\",\r\n\t\t\"https://github.com/folke/lazy.nvim.git\",\r\n\t\tlazypath,\r\n\t})\r\nend\r\nvim.opt.runtimepath:prepend(lazypath)\r\n\r\n-- install plugins\r\nlocal plugins = {\r\n\t\"neovim/nvim-lspconfig\",\r\n\tconfig = function()\r\n\t\trequire(\"lspconfig\").tsserver.setup({\r\n\t\t\ton_attach = function(client)\r\n\t\t\t\tclient.server_capabilities.semanticTokensProvider = nil\r\n\t\t\tend,\r\n\t\t})\r\n\t\trequire(\"lspconfig\").lua_ls.setup({\r\n\t\t\ton_attach = function(client)\r\n\t\t\t\t-- client.server_capabilities.semanticTokensProvider = nil\r\n\t\t\tend,\r\n\t\t})\r\n\tend,\r\n}\r\nrequire(\"lazy\").setup(plugins, {\r\n\troot = root .. \"/plugins\",\r\n})\r\n\r\nvim.cmd.colorscheme(\"habamax\")\r\nvim.lsp.set_log_level('debug') -- log file exists in /tmp/testing/.repro/state/nvim/lsp.log\r\nrequire('vim.lsp.log').set_format_func(vim.inspect)\r\n```\r\n\r\n</details>\r\n\r\n\r\n```\r\n1. `mkdir -p /tmp/testing`\r\n2. `cd /tmp/testing`\r\n3. create the `minimal_init.lua` and also create a copy `other.lua`\r\n5. `nvim -nu minimal_init.lua .`\r\n6. `:e minimal_init.lua`\r\n7. create a split (`:new`)\r\n8. `:e other.lua`\r\n9. switch to the `minimal_init.lua` split -> very important\r\n10. `:LspStop` followed by `:LspStart`\r\n```\r\n\r\nOld log: https://gist.github.com/jamestrew/34f237bca7dfea3d8465323e20220330\r\n",
            "created_at": "2023-04-06T00:19:21Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1498323430",
            "id": 1498323430,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185ZTpnm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498323430/reactions"
            },
            "updated_at": "2023-04-06T00:26:16Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498323430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
                "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamestrew/followers",
                "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamestrew",
                "id": 66286082,
                "login": "jamestrew",
                "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
                "organizations_url": "https://api.github.com/users/jamestrew/orgs",
                "received_events_url": "https://api.github.com/users/jamestrew/received_events",
                "repos_url": "https://api.github.com/users/jamestrew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamestrew"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think issue template had write mini config postion https://github.com/neovim/nvim-lspconfig/blob/master/test/minimal_init.lua .",
            "created_at": "2023-04-06T00:59:36Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1498351779",
            "id": 1498351779,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185ZTwij",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498351779/reactions"
            },
            "updated_at": "2023-04-06T00:59:36Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498351779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm sorry I'm not understanding what you mean. I edited the issue description to use the correct mini config which is nearly identical to the one you linked.",
            "created_at": "2023-04-06T01:35:49Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1498374324",
            "id": 1498374324,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185ZT2C0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498374324/reactions"
            },
            "updated_at": "2023-04-06T01:35:49Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498374324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
                "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamestrew/followers",
                "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamestrew",
                "id": 66286082,
                "login": "jamestrew",
                "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
                "organizations_url": "https://api.github.com/users/jamestrew/orgs",
                "received_events_url": "https://api.github.com/users/jamestrew/received_events",
                "repos_url": "https://api.github.com/users/jamestrew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamestrew"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't use lazy we have truely min config for it why you don't try that?. and i tried your step can't reproduce . does the step is same ?\r\n\r\n![test](https://user-images.githubusercontent.com/41671631/230251999-05373726-d4ff-40ef-8387-1f90b3cf3294.gif)\r\n",
            "created_at": "2023-04-06T01:48:07Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1498380542",
            "id": 1498380542,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185ZT3j-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498380542/reactions"
            },
            "updated_at": "2023-04-06T02:05:07Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498380542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I changed the minimal config, steps and lsp log in the issue description after your first comment. \r\n\r\nI'm sorry if I confused you with the original lazy config. Please try to reproduce it again.\r\n\r\nHere is a copy:\r\n<details>\r\n<summary>min config</summary>\r\n\r\n```lua\r\n-- minimal_init.lua\r\nlocal on_windows = vim.loop.os_uname().version:match(\"Windows\")\r\n\r\nlocal function join_paths(...)\r\n\tlocal path_sep = on_windows and \"\\\\\" or \"/\"\r\n\tlocal result = table.concat({ ... }, path_sep)\r\n\treturn result\r\nend\r\n\r\nvim.cmd([[set runtimepath=$VIMRUNTIME]])\r\n\r\nlocal temp_dir = vim.loop.os_getenv(\"TEMP\") or \"/tmp\"\r\n\r\nvim.cmd(\"set packpath=\" .. join_paths(temp_dir, \"nvim\", \"site\"))\r\n\r\nlocal package_root = join_paths(temp_dir, \"nvim\", \"site\", \"pack\")\r\nlocal lspconfig_path = join_paths(package_root, \"test\", \"start\", \"nvim-lspconfig\")\r\n\r\nif vim.fn.isdirectory(lspconfig_path) ~= 1 then\r\n\tvim.fn.system({ \"git\", \"clone\", \"https://github.com/neovim/nvim-lspconfig\", lspconfig_path })\r\nend\r\n\r\nvim.cmd.colorscheme(\"habamax\")\r\nvim.lsp.set_log_level(\"trace\")\r\nrequire(\"vim.lsp.log\").set_format_func(vim.inspect)\r\nlocal nvim_lsp = require(\"lspconfig\")\r\nlocal on_attach = function(client, bufnr)\r\n\tclient.server_capabilities.semanticTokensProvider = nil\r\n\tlocal function buf_set_option(...)\r\n\t\tvim.api.nvim_buf_set_option(bufnr, ...)\r\n\tend\r\n\r\n\tbuf_set_option(\"omnifunc\", \"v:lua.vim.lsp.omnifunc\")\r\n\r\n\t-- Mappings.\r\n\tlocal opts = { buffer = bufnr, noremap = true, silent = true }\r\n\tvim.keymap.set(\"n\", \"gD\", vim.lsp.buf.declaration, opts)\r\n\tvim.keymap.set(\"n\", \"gd\", vim.lsp.buf.definition, opts)\r\n\tvim.keymap.set(\"n\", \"K\", vim.lsp.buf.hover, opts)\r\n\tvim.keymap.set(\"n\", \"gi\", vim.lsp.buf.implementation, opts)\r\n\tvim.keymap.set(\"n\", \"<C-k>\", vim.lsp.buf.signature_help, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wa\", vim.lsp.buf.add_workspace_folder, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wr\", vim.lsp.buf.remove_workspace_folder, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wl\", function()\r\n\t\tprint(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n\tend, opts)\r\n\tvim.keymap.set(\"n\", \"<space>D\", vim.lsp.buf.type_definition, opts)\r\n\tvim.keymap.set(\"n\", \"<space>rn\", vim.lsp.buf.rename, opts)\r\n\tvim.keymap.set(\"n\", \"gr\", vim.lsp.buf.references, opts)\r\n\tvim.keymap.set(\"n\", \"<space>e\", vim.diagnostic.open_float, opts)\r\n\tvim.keymap.set(\"n\", \"[d\", vim.diagnostic.goto_prev, opts)\r\n\tvim.keymap.set(\"n\", \"]d\", vim.diagnostic.goto_next, opts)\r\n\tvim.keymap.set(\"n\", \"<space>q\", vim.diagnostic.setloclist, opts)\r\nend\r\n\r\n-- Add the server that troubles you here\r\nlocal name = \"lua_ls\"\r\nlocal cmd = { \"lua-language-server\" } -- needed for elixirls, lua_ls, omnisharp\r\nif not name then\r\n\tprint(\"You have not defined a server name, please edit minimal_init.lua\")\r\nend\r\nif not nvim_lsp[name].document_config.default_config.cmd and not cmd then\r\n\tprint([[You have not defined a server default cmd for a server\r\n    that requires it please edit minimal_init.lua]])\r\nend\r\n\r\nnvim_lsp[name].setup({\r\n\tcmd = cmd,\r\n\ton_attach = on_attach,\r\n})\r\n\r\nprint(\r\n\t[[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]]\r\n)\r\n```\r\n\r\n</details>\r\n\r\n\r\n1. create `minimal_init.lua` from below in your nvim config directory\r\n2. `nvim -nu minimal_init.lua`\r\n3. `:e minimal_init.lua`\r\n4. `:new`\r\n5. `:e init.lua` (some lua file with semantic tokens present)\r\n6. with the focus on `init.lua`, `:LspStop` followed by `:LspStart`\r\n\r\nLog: https://gist.github.com/jamestrew/c64b0aaf3204acaf7cccdf98cff222b7",
            "created_at": "2023-04-06T03:03:35Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1498425311",
            "id": 1498425311,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185ZUCff",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498425311/reactions"
            },
            "updated_at": "2023-04-06T03:03:35Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498425311",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
                "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamestrew/followers",
                "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamestrew",
                "id": 66286082,
                "login": "jamestrew",
                "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
                "organizations_url": "https://api.github.com/users/jamestrew/orgs",
                "received_events_url": "https://api.github.com/users/jamestrew/received_events",
                "repos_url": "https://api.github.com/users/jamestrew/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamestrew"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> create minimal_init.lua from below in your nvim config directory\r\n\r\n`nvim --clean  -u  any_dir/.min.lua` is  same. and looks like the step of my gif is same . I usually can reproduce it by a split file from a session.",
            "created_at": "2023-04-06T03:14:41Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1498432406",
            "id": 1498432406,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185ZUEOW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498432406/reactions"
            },
            "updated_at": "2023-04-06T03:24:05Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1498432406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "author_association": "NONE",
            "body": "Despite the fix in #2546 (no `vim.schedule` on `on_attach`), I still have this error happening. Indeed `on_attach` is called *AFTER* `textDocument/semanticTokens/full` LSP requests.\r\n\r\nIn my config, I disable semanticTokens capabilities for `lua_ls` in my own `on_attach` callback.\r\n\r\nHere is the reason why and what happens in a chronological order:\r\n\r\n1. Open two buffers on vim startup, say `vim -O a.vim b.lua`.\r\n\r\n2. [vim.lsp: client._on_attach](https://github.com/neovim/neovim/blob/v0.9.0/runtime/lua/vim/lsp.lua#L1526-L1552)\r\n- L1539: `pcall(config.on_attach, client, bufnr)`\r\n  - This is where lspconfig.on_attach is called.\r\n  - [`lspconfig.on_attach(client, bufnr)`](https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/configs.lua#L232-L248)\r\n    - If the `buf` is the current buffer, user's `on_attach` is called.\r\n    - If NOT (e.g. other windows), user's **`on_attach` won't be called immediately**! The execution is deferred until BufEnter.\r\n- L1545-L1548: `semantic_tokens.start(bufnr, client.id)` is called\r\n  - Now that `on_attach` was never called, semantic tokens LSP request will be called because the semanticTokensProvider capabilities were not removed.\r\n\r\n3. Now users enter the `lua` buffer, `on_attach` for `lua_ls` called, the semanticTokensProvider set to `nil`.\r\n\r\n<details>\r\n   <summary>Stacktrace of `on_attach` for `lua_ls` (executed only after I enter the window) </summary>\r\n\r\n```\r\non_attach lua_ls /Users/wookayin/.dotfiles/nvim/lua/config/lsp.lua\r\nstack traceback:\r\n^I....config/nvim/lua/config/lsp.lua:36: in function '_on_attach'\r\n^I.../nvim-lspconfig/lua/lspconfig/configs.lua:333: in function '_setup_buffer'\r\n^I.../nvim-lspconfig/lua/lspconfig/configs.lua:239: in function <...in/.vim/plugged/nvim-lspconfig/lua/lspconfig/configs.lua:238>\r\n```\r\n\r\nNote that here [L238 refers to the BufEnter callback](https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/configs.lua#L238).\r\n\r\n</details>\r\n\r\n\r\n4. The asynchronous semanticTokens LSP response arrives (which should not have been fired), and we get the error.\r\n\r\nAs @bfredl mentioned in https://github.com/neovim/neovim/issues/21588#issuecomment-1493306262, neovim core's lsp on_attach assumes that `on_attach` calls are NOT deferred to the future. However, the actual timing of lspconfig's `on_attach` function is called can be much later, which causes this bug. Shouldn't `on_attach` called immediately?",
            "created_at": "2023-05-14T21:48:33Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1547008741",
            "id": 1547008741,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185cNXrl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1547008741/reactions"
            },
            "updated_at": "2023-05-14T21:50:11Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1547008741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "One workaround is to use `on_init` (or maybe a better place to configure capabilities), though not documented in lspconfig --- but documented in `:help vim.lsp.start_client`.\r\n\r\n                   • on_init: Callback (client, initialize_result) invoked\r\n                    after LSP \"initialize\", where `result` is a table of\r\n                    `capabilities` and anything else the server may send. For\r\n                    example, clangd sends `initialize_result.offsetEncoding`\r\n                    if `capabilities.offsetEncoding` was sent to it. You can\r\n                    only modify the `client.offset_encoding` here before any\r\n                    notifications are sent. Most language servers expect to be\r\n                    sent client specified settings after initialization.\r\n                    Neovim does not make this assumption. A\r\n                    `workspace/didChangeConfiguration` notification should be\r\n                    sent to the server during on_init.\r\n\r\n\r\nE.g.,\r\n```lua\r\nlspconfig.lua_ls.setup {\r\n  on_init = function(client, initialization_result)\r\n    if client.server_capabilities then\r\n      client.server_capabilities.documentFormattingProvider = false\r\n      client.server_capabilities.semanticTokensProvider = false  -- turn off semantic tokens\r\n    end\r\n  end,\r\n  on_attach = function(client, bufnr)\r\n    -- Do not configure server_capabilities here, as on_attach might be called later\r\n    ...\r\n  end\r\n}\r\n```\r\n\r\nwhich makes the semanticTokens request not sent after the on_attach callback.\r\n\r\nOr a much better config would be, to exclude semanticTokens from the `capabilities` when making `lspconfig[...].setup { capabilities = ..., }` call.",
            "created_at": "2023-05-14T22:50:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1547019213",
            "id": 1547019213,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185cNaPN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1547019213/reactions"
            },
            "updated_at": "2023-05-14T22:52:37Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1547019213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "@wookayin Hi I think I ran into the same problem. Can you file a new issue for better tracking?",
            "created_at": "2023-06-08T15:53:07Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1582882982",
            "id": 1582882982,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185eWOCm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582882982/reactions"
            },
            "updated_at": "2023-06-08T15:53:07Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1582882982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "author_association": "NONE",
            "body": "@tomtomjhj I don't think this is a bug worth tracking in a separate issue because I believe it's an invalid usage. `semanticTokensProvider` should be done by setting capabilities properly **before** making `lspconfig.setup()` or `vim.lsp.start_client()` call. The configuration done by OP is not appropriate; one should **NOT** tweak `server.capabilities` in `on_attach`. Doing so inside `on_init()` would be fine.",
            "created_at": "2023-09-06T20:43:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542#issuecomment-1709089956",
            "id": 1709089956,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
            "node_id": "IC_kwDODTQC185l3qSk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1709089956/reactions"
            },
            "updated_at": "2023-09-06T20:43:50Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1709089956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comments": 11,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542/comments",
    "created_at": "2023-04-05T03:38:33Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2542",
    "id": 1654876464,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185io2kw",
    "number": 2542,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542/timeline",
    "title": "nil `semanticTokensProvider` causes error when opening multiple source code files",
    "updated_at": "2023-09-06T20:43:50Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2542",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/66286082?v=4",
        "events_url": "https://api.github.com/users/jamestrew/events{/privacy}",
        "followers_url": "https://api.github.com/users/jamestrew/followers",
        "following_url": "https://api.github.com/users/jamestrew/following{/other_user}",
        "gists_url": "https://api.github.com/users/jamestrew/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jamestrew",
        "id": 66286082,
        "login": "jamestrew",
        "node_id": "MDQ6VXNlcjY2Mjg2MDgy",
        "organizations_url": "https://api.github.com/users/jamestrew/orgs",
        "received_events_url": "https://api.github.com/users/jamestrew/received_events",
        "repos_url": "https://api.github.com/users/jamestrew/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jamestrew/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jamestrew/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jamestrew"
    }
}