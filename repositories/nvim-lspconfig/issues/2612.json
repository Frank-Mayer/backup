{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "### Description\r\n\r\nThe default config for `csharp_ls` does not identify the correct root directory. Consider the following example filestructure.\r\n\r\n```\r\n/MyProject\r\n    MyProject.sln\r\n    /MyProject.Program\r\n        MyProject.Program.csproj\r\n        Program.cs\r\n    /MyProject.Library\r\n        MyProject.Library.csproj\r\n        Class1.cs\r\n```\r\n\r\nIf you open `/MyProject/MyProject.Program/Program.cs` then the language server identifies the root_dir as `/MyProject/MyProject.Program`. This is not correct. Logically this is one project (`MyProject` as indicated by `MyProject.sln` solution file), with two subprojects (`MyProject.Program` and `MyProject.Library`) which each have their respecive project files (`MyProject.Program.csproj` and ` MyProject.Library.csproj`). Ideally, you would want one language server running for the entire solution.\r\n\r\nHere is the relevant line of the default config for `csharp_ls`:\r\n\r\nhttps://github.com/neovim/nvim-lspconfig/blob/df58d91c9351a9dc5be6cf8d54f49ab0d9a64e73/lua/lspconfig/server_configurations/csharp_ls.lua#L6\r\n\r\nWhat is happening here is that `util.root_pattern` is visiting each ancestor directory (including the current directory), checking if *any* of the specified patterns match. The `.csproj` file is discovered before the `.sln` file, and the wrong root directory gets set.\r\n\r\nI managed to get around this by overriding the `root_dir` field like this\r\n\r\n```diff\r\nlspconfig.csharp_ls.setup({\r\n+    root_dir = function(startpath)\r\n+        return lspconfig.util.root_pattern(\"*.sln\")(startpath)\r\n+            or lspconfig.util.root_pattern(\"*.csproj\")(startpath)\r\n+            or lspconfig.util.root_pattern(\"*.fsproj\")(startpath)\r\n+            or lspconfig.util.root_pattern(\".git\")(startpath)\r\n+    end,\r\n    on_attach = on_attach,\r\n    capabilities = capabilities,\r\n})\r\n```\r\n\r\nThis searches ancestor directories for any `.sln` file, and if none are found then tries the same thing looking for a `.csproj` file, and so on.\r\n\r\nOthers are also experiencing this, and there is an open issue in the `csharp_ls` repo: https://github.com/razzmatazz/csharp-language-server/issues/62\r\n\r\nI see three possible ways to remedy the situation:\r\n\r\n1. In `util.root_pattern`, do `util.search_ancestors` once for each supplied pattern, instead of once with all patterns (as it does currently). This is less efficient, as you have to explore ancestors at most N times for N supplied patterns. This is a bit of an edge case so maybe not the best idea to negatively impact performance for the unaffected language servers.\r\n2.  Update the `csharp_ls` default config with something like the above.\r\n3. Keep the `csharp_ls` defaults the same, but add a note suggesting the above. \r\n\r\nI'm happy to make an attempt at fixing it.\r\n\r\n\r\n\r\n### Neovim version\r\n\r\nNVIM v0.9.0\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\n\r\n### Nvim-lspconfig version\r\n\r\ndf58d91c9351a9dc5be6cf8d54f49ab0d9a64e73\r\n\r\n### Operating system and version\r\n\r\nmacOS 13.3\r\n\r\n### Affected language servers\r\n\r\ncsharp_ls\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nmkdir MyProject && cd MyProject\r\ndotnet new console -o MyProject.Program\r\ndotnet new classlib -o MyProject.Library\r\ndotnet new sln\r\ndotnet sln add MyProject.Program\r\ndotnet sln add MyProject.Library\r\ndotnet tool install --global csharp-ls\r\nnvim -u minimal_init.lua MyProject.Program/Program.cs\r\n```\r\n\r\nRun `:LspInfo` and see that root dir is set to `MyProject/MyProject.Program`\r\n\r\n### Actual behavior\r\n\r\n`csharp_ls` finds the `csproj` file before the `sln` file, and the incorrect `root_dir` is set for the LSP.\r\n\r\n### Expected behavior\r\n\r\nIf a `sln` file is present, this should be preferred over any `csproj` file. Only use `csproj` file if no `sln` file exists in the directory's ancestors.\r\n\r\n### Minimal config\r\n\r\n```Lua\r\nlocal on_windows = vim.loop.os_uname().version:match(\"Windows\")\r\n\r\nlocal function join_paths(...)\r\n\tlocal path_sep = on_windows and \"\\\\\" or \"/\"\r\n\tlocal result = table.concat({ ... }, path_sep)\r\n\treturn result\r\nend\r\n\r\nvim.cmd([[set runtimepath=$VIMRUNTIME]])\r\n\r\nlocal temp_dir = vim.loop.os_getenv(\"TEMP\") or \"/tmp\"\r\n\r\nvim.cmd(\"set packpath=\" .. join_paths(temp_dir, \"nvim\", \"site\"))\r\n\r\nlocal package_root = join_paths(temp_dir, \"nvim\", \"site\", \"pack\")\r\nlocal lspconfig_path = join_paths(package_root, \"test\", \"start\", \"nvim-lspconfig\")\r\n\r\nif vim.fn.isdirectory(lspconfig_path) ~= 1 then\r\n\tvim.fn.system({ \"git\", \"clone\", \"https://github.com/neovim/nvim-lspconfig\", lspconfig_path })\r\nend\r\n\r\nvim.lsp.set_log_level(\"trace\")\r\nrequire(\"vim.lsp.log\").set_format_func(vim.inspect)\r\nlocal nvim_lsp = require(\"lspconfig\")\r\nlocal on_attach = function(_, bufnr)\r\n\tlocal function buf_set_option(...)\r\n\t\tvim.api.nvim_buf_set_option(bufnr, ...)\r\n\tend\r\n\r\n\tbuf_set_option(\"omnifunc\", \"v:lua.vim.lsp.omnifunc\")\r\n\r\n\t-- Mappings.\r\n\tlocal opts = { buffer = bufnr, noremap = true, silent = true }\r\n\tvim.keymap.set(\"n\", \"gD\", vim.lsp.buf.declaration, opts)\r\n\tvim.keymap.set(\"n\", \"gd\", vim.lsp.buf.definition, opts)\r\n\tvim.keymap.set(\"n\", \"K\", vim.lsp.buf.hover, opts)\r\n\tvim.keymap.set(\"n\", \"gi\", vim.lsp.buf.implementation, opts)\r\n\tvim.keymap.set(\"n\", \"<C-k>\", vim.lsp.buf.signature_help, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wa\", vim.lsp.buf.add_workspace_folder, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wr\", vim.lsp.buf.remove_workspace_folder, opts)\r\n\tvim.keymap.set(\"n\", \"<space>wl\", function()\r\n\t\tprint(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n\tend, opts)\r\n\tvim.keymap.set(\"n\", \"<space>D\", vim.lsp.buf.type_definition, opts)\r\n\tvim.keymap.set(\"n\", \"<space>rn\", vim.lsp.buf.rename, opts)\r\n\tvim.keymap.set(\"n\", \"gr\", vim.lsp.buf.references, opts)\r\n\tvim.keymap.set(\"n\", \"<space>e\", vim.diagnostic.open_float, opts)\r\n\tvim.keymap.set(\"n\", \"[d\", vim.diagnostic.goto_prev, opts)\r\n\tvim.keymap.set(\"n\", \"]d\", vim.diagnostic.goto_next, opts)\r\n\tvim.keymap.set(\"n\", \"<space>q\", vim.diagnostic.setloclist, opts)\r\nend\r\n\r\n-- Add the server that troubles you here\r\nlocal name = \"csharp_ls\"\r\nif not name then\r\n\tprint(\"You have not defined a server name, please edit minimal_init.lua\")\r\nend\r\nif not nvim_lsp[name].document_config.default_config.cmd and not cmd then\r\n\tprint([[You have not defined a server default cmd for a server\r\n    that requires it please edit minimal_init.lua]])\r\nend\r\n\r\nnvim_lsp[name].setup({\r\n\ton_attach = on_attach,\r\n})\r\n\r\nprint([[You can find your log at $HOME/.cache/nvim/lsp.log. Please paste in a github issue under a details tag as described in the issue template.]])\r\n```\r\n\r\n\r\n### LSP log\r\n\r\nhttps://gist.github.com/emilioziniades/2bfff850f2c22f143c3864b17fe8df86",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "there has a plan to rewrite root use vim.fs module then maybe we can handle this situation.",
            "created_at": "2023-05-14T01:43:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2612#issuecomment-1546785643",
            "id": 1546785643,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2612",
            "node_id": "IC_kwDODTQC185cMhNr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1546785643/reactions"
            },
            "updated_at": "2023-05-14T01:43:44Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1546785643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "author_association": "NONE",
            "body": "Thanks for your comment. I'd like to propose that we go for the second option above, updating the default config for the `csharp_ls` language server. PR to follow",
            "created_at": "2023-11-10T10:40:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2612#issuecomment-1805485924",
            "id": 1805485924,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2612",
            "node_id": "IC_kwDODTQC185rnYdk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1805485924/reactions"
            },
            "updated_at": "2023-11-10T10:40:37Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1805485924",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/75438244?v=4",
                "events_url": "https://api.github.com/users/emilioziniades/events{/privacy}",
                "followers_url": "https://api.github.com/users/emilioziniades/followers",
                "following_url": "https://api.github.com/users/emilioziniades/following{/other_user}",
                "gists_url": "https://api.github.com/users/emilioziniades/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/emilioziniades",
                "id": 75438244,
                "login": "emilioziniades",
                "node_id": "MDQ6VXNlcjc1NDM4MjQ0",
                "organizations_url": "https://api.github.com/users/emilioziniades/orgs",
                "received_events_url": "https://api.github.com/users/emilioziniades/received_events",
                "repos_url": "https://api.github.com/users/emilioziniades/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/emilioziniades/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/emilioziniades/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/emilioziniades"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2612/comments",
    "created_at": "2023-05-13T16:51:55Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2612/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2612",
    "id": 1708681860,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2612/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185l2GqE",
    "number": 2612,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 3,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 3,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2612/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2612/timeline",
    "title": "`csharp_ls` default config finds incorrect root directory",
    "updated_at": "2023-11-10T10:40:37Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2612",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/75438244?v=4",
        "events_url": "https://api.github.com/users/emilioziniades/events{/privacy}",
        "followers_url": "https://api.github.com/users/emilioziniades/followers",
        "following_url": "https://api.github.com/users/emilioziniades/following{/other_user}",
        "gists_url": "https://api.github.com/users/emilioziniades/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/emilioziniades",
        "id": 75438244,
        "login": "emilioziniades",
        "node_id": "MDQ6VXNlcjc1NDM4MjQ0",
        "organizations_url": "https://api.github.com/users/emilioziniades/orgs",
        "received_events_url": "https://api.github.com/users/emilioziniades/received_events",
        "repos_url": "https://api.github.com/users/emilioziniades/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/emilioziniades/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/emilioziniades/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/emilioziniades"
    }
}