{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Description\n\nLets say you arrange your neovim workspace to work like this:\r\ntab:1 for `cwd` \"**app1**\" and tab:2 for `cwd` \"**app2**\". Both working directories appear as separate `root_dir` on `:LspInfo`. This is good.\r\nThen, you might need to restart your lsp server for \"**app1**\". You do `:LspRestart`.\r\nWhen you do that, app1 is converted into **single file mode** and you end up with just 1 `root_dir` even though they both have different `:pwd`.\r\nWhat I expected is for nvim-lspconfig to only restart the client without affecting other clients that have different `root_dir` even on the same neovim instance.\r\n\r\n![t-rec_47](https://github.com/neovim/nvim-lspconfig/assets/43413954/c2f2f7f7-204e-428b-a62a-c81f12c441eb)\r\n\n\n### Neovim version\n\nNVIM v0.10.0-dev-2039+g583c1de17\r\nBuild type: RelWithDebInfo\r\nLuaJIT 2.1.1703358377\r\nRun \"nvim -V1 -v\" for more info\n\n### Nvim-lspconfig version\n\n796394fd19fb878e8dbc4fd1e9c9c186ed07a5f4\n\n### Operating system and version\n\narch linux\n\n### Affected language servers\n\ntsserver\n\n### Steps to reproduce\n\n### Required setup\r\n\r\n```bash\r\n├── app1\r\n│   ├── file-001.js\r\n│   └── jsconfig.json\r\n├── app2\r\n│   ├── file-002.js\r\n│   └── jsconfig.json\r\n└── repro.lua\r\n\r\n3 directories, 5 files\r\n```\r\n\r\nPlease replicate this directory. Two folders and two `.js` files **without content**.\r\nI just included these lines on the `jsconfig.json` files inside `app1` and `app2`\r\n\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"module\": \"CommonJS\",\r\n    \"target\": \"ES6\"\r\n  }\r\n}\r\n```\r\nCopy the repro code snippet to your `repro.lua` file and now open vim with this command `nvim --clean +'so repro.lua'` and wait for the plugins and lsp server to get installed.\r\nMaybe close and open vim again with the same command `nvim --clean +'so repro.lua'` and now you can follow this steps:\r\n\r\n\r\n\r\n### Steps\r\n\r\n1. `:tcd app1` from your current tab:1.\r\n2. `:args *` from your current tab:1 to open buffers\r\n3. `:LspInfo` from your current tab:1 to confirm that the tsserver is attached and that the `root_dir` is **app1**\r\n4. `:tabnew` to open tab:2\r\n5. `:tcd ../app2` from your current tab:2\r\n6. `:args *` from your current tab:2 to open buffers\r\n7. `:LspInfo` from your current tab:2 to confirm that the tsserver is attached and that the `root_dir` is **app2**\r\n\r\nEverything should look fine until you restart your lsp from your tab:1\r\n\r\n9. Execute `:LspRestart` and wait for the lsp server to restart\r\n10. `:LspInfo` from your current tab:1 now shows \"Running in single file mode\" and on tab:2 it will show the correct `root_dir` app2.\r\n\r\nI was hoping to preserve the same `root_dir`s after executing `:LspRestart` instead of going into single file mode.\r\n\n\n### Actual behavior\n\n`:LspRestart` breaks the `root_dir` of your clients on multiple working directories in the same nvim instance.\n\n### Expected behavior\n\nPreserve the same `root_dir`s after executing `:LspRestart` and don't turn into single file mode.\n\n### Minimal config\n\n```Lua\n-- DO NOT change the paths\r\nlocal root = vim.fn.fnamemodify(\"./.repro\", \":p\")\r\nroot = root:sub(-1) == \"/\" and root or root .. \"/\"\r\n\r\n-- set stdpaths to use .repro\r\nfor _, name in ipairs({ \"config\", \"data\", \"state\", \"cache\" }) do\r\n  vim.env[(\"XDG_%s_HOME\"):format(name:upper())] = root .. name\r\nend\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nvim.g.mapleader = \" \"\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nlocal plugins = {\r\n  { \"nvim-lua/plenary.nvim\", lazy = true }, -- required by nvim-lspconfig\r\n\r\n  {\r\n    \"williamboman/mason.nvim\",\r\n    lazy = false,\r\n    cmd = \"Mason\",\r\n    opts = {\r\n      ui = {\r\n        check_outdated_packages_on_open = false,\r\n        keymaps = {\r\n          update_all_packages = \"noop\",\r\n        },\r\n      },\r\n      install_root_dir = root .. \"mason\",\r\n    },\r\n  },\r\n\r\n  {\r\n    \"WhoIsSethDaniel/mason-tool-installer.nvim\",\r\n    lazy = false,\r\n    dependencies = \"williamboman/mason.nvim\",\r\n    opts = {\r\n      ensure_installed = {\r\n        \"typescript-language-server\",\r\n      },\r\n    },\r\n    config = function(_, opts)\r\n      local mason_tool_installer = require(\"mason-tool-installer\")\r\n      mason_tool_installer.setup(opts)\r\n      if vim.v.vim_did_enter then mason_tool_installer.run_on_start() end\r\n    end,\r\n  },\r\n\r\n  {\r\n    \"neovim/nvim-lspconfig\",\r\n    lazy = false,\r\n    config = function()\r\n      local lspconfig = require(\"lspconfig\")\r\n\r\n      local function on_attach(client, bufnr)\r\n        vim.keymap.set(\"n\", \"<leader>rs\", function()\r\n          local buf = vim.api.nvim_get_current_buf()\r\n          local clients = vim.lsp.get_clients({ bufnr = buf })\r\n          for _, c in pairs(clients) do\r\n            vim.cmd(\"LspRestart \" .. c.id)\r\n          end\r\n        end)\r\n      end\r\n\r\n      lspconfig[\"tsserver\"].setup({\r\n        capabilities = lspconfig.util.default_config,\r\n        on_attach = on_attach,\r\n      })\r\n\r\n      ---Forces nvim-lspconfig to launch the language server\r\n      ---See `:h lspconfig-setup` \"autostart\"\r\n      local function setup_servers() vim.api.nvim_exec_autocmds(\"FileType\", {}) end\r\n\r\n      vim.api.nvim_create_autocmd(\"User\", {\r\n        desc = \"Set up LSP servers after mason-tool-installer\",\r\n        pattern = \"MasonToolsUpdateCompleted\",\r\n        once = true,\r\n        callback = function() setup_servers() end,\r\n      })\r\n\r\n      setup_servers()\r\n    end,\r\n  },\r\n\r\n  {\r\n    \"j-hui/fidget.nvim\",\r\n    event = \"LspAttach\",\r\n    config = true,\r\n  },\r\n}\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nlocal lazypath = root .. \"/plugins/lazy.nvim\"\r\n---@diagnostic disable-next-line: undefined-field\r\nif not (vim.uv or vim.loop).fs_stat(lazypath) then\r\n  vim.fn.system({\r\n    \"git\",\r\n    \"clone\",\r\n    \"--filter=blob:none\",\r\n    \"https://github.com/folke/lazy.nvim.git\",\r\n    \"--branch=stable\",\r\n    lazypath,\r\n  })\r\nend\r\nvim.opt.runtimepath:prepend(lazypath)\r\n\r\nrequire(\"lazy\").setup(plugins, {\r\n  root = root .. \"/plugins\",\r\n})\n```\n\n\n### LSP log\n\n...",
    "closed_at": "2024-02-06T06:01:43Z",
    "comment_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "\r\n> A conversion of my previous screenshot from .gif to .mp4 to improve readability\r\n\r\nhttps://github.com/neovim/nvim-lspconfig/assets/43413954/85fbffa9-aedf-42ff-8e71-f2309b0399b8\r\n",
            "created_at": "2024-01-30T21:20:44Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2959#issuecomment-1917914114",
            "id": 1917914114,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2959",
            "node_id": "IC_kwDODTQC185yUQwC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1917914114/reactions"
            },
            "updated_at": "2024-01-30T21:20:44Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1917914114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43413954?v=4",
                "events_url": "https://api.github.com/users/serranomorante/events{/privacy}",
                "followers_url": "https://api.github.com/users/serranomorante/followers",
                "following_url": "https://api.github.com/users/serranomorante/following{/other_user}",
                "gists_url": "https://api.github.com/users/serranomorante/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/serranomorante",
                "id": 43413954,
                "login": "serranomorante",
                "node_id": "MDQ6VXNlcjQzNDEzOTU0",
                "organizations_url": "https://api.github.com/users/serranomorante/orgs",
                "received_events_url": "https://api.github.com/users/serranomorante/received_events",
                "repos_url": "https://api.github.com/users/serranomorante/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/serranomorante/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/serranomorante/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/serranomorante"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "After executing `:LspRestart` **nvim-lspconfig** tries to reuse the same client (tsserver, ...) but this causes buffers from different root_dirs to fall into single_file_mode (1 tsserver per buffer) even if single file mode is turn off. I added a PR that enforces the single file mode check before trying to reuse a client from other root_dir.\n\nWith my PR and `single_file_mode=false` this issue is fixed.",
            "created_at": "2024-02-06T03:49:39Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2959#issuecomment-1928735849",
            "id": 1928735849,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2959",
            "node_id": "IC_kwDODTQC185y9ixp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1928735849/reactions"
            },
            "updated_at": "2024-02-06T03:49:39Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1928735849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/43413954?v=4",
                "events_url": "https://api.github.com/users/serranomorante/events{/privacy}",
                "followers_url": "https://api.github.com/users/serranomorante/followers",
                "following_url": "https://api.github.com/users/serranomorante/following{/other_user}",
                "gists_url": "https://api.github.com/users/serranomorante/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/serranomorante",
                "id": 43413954,
                "login": "serranomorante",
                "node_id": "MDQ6VXNlcjQzNDEzOTU0",
                "organizations_url": "https://api.github.com/users/serranomorante/orgs",
                "received_events_url": "https://api.github.com/users/serranomorante/received_events",
                "repos_url": "https://api.github.com/users/serranomorante/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/serranomorante/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/serranomorante/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/serranomorante"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2959/comments",
    "created_at": "2024-01-06T18:36:37Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2959/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2959",
    "id": 2068768094,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2959/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC1857TuVe",
    "number": 2959,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2959/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2959/timeline",
    "title": "`:tcd` breaks root_dir on `:LspRestart` and switches to single file mode",
    "updated_at": "2024-02-06T06:01:43Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2959",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/43413954?v=4",
        "events_url": "https://api.github.com/users/serranomorante/events{/privacy}",
        "followers_url": "https://api.github.com/users/serranomorante/followers",
        "following_url": "https://api.github.com/users/serranomorante/following{/other_user}",
        "gists_url": "https://api.github.com/users/serranomorante/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/serranomorante",
        "id": 43413954,
        "login": "serranomorante",
        "node_id": "MDQ6VXNlcjQzNDEzOTU0",
        "organizations_url": "https://api.github.com/users/serranomorante/orgs",
        "received_events_url": "https://api.github.com/users/serranomorante/received_events",
        "repos_url": "https://api.github.com/users/serranomorante/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/serranomorante/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/serranomorante/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/serranomorante"
    }
}