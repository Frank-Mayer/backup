{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "body": "### Description\r\n\r\nNow, the plugin always sets the root directory to `neovim`'s  current working directory even though a root marker is present.\r\n\r\nIn this example, I first launch neovim from my home directory. And then, from inside Neovim, I open a file that resides in a directory called `~/Dev/testing/`, which has the following structure.\r\n\r\n![2023-07-20-19-52-25](https://github.com/neovim/nvim-lspconfig/assets/69449791/4add24af-6d8b-447b-b991-ef34d21c4f72)\r\n\r\nhttps://github.com/neovim/nvim-lspconfig/assets/69449791/6f7f8d11-799a-4b84-808b-c4ff1f089d3c\r\n\r\nThe root detection here is wrong. The correct project root should be `~/Dev/testing`.  \r\n\r\nI am not entirely sure what is causing this, but I suspect the culprit is #2697 \r\n\r\nThe new behavior is that the project root is always assigned to Neovim's current working directory, which is highly problematic for 2 reasons:\r\n1. It automatically disables single-file mode. If root detection automatically defaults to cwd, **I am no longer able to open python files that reside in different project roots in the same neovim session** - because the root is now forced to be whatever directory my neovim session is in.\r\n2. It will deteriorate the lsp's performance. If neovim's cwd is in directory `D` and I open my python file in a non-root directory `C`. Instead of setting the lsp mode to `single-file mode` like it's supposed to, the root is assigned to `D`. But what if `D` is a large directory with hundreds of files? Pyright would have to look at all of them even though it is completely unrelated to the project. \r\n\r\n### Neovim version\r\n\r\nNVIM v0.9.1\r\nBuild type: Release\r\nLuaJIT 2.1.0-beta3\r\n\r\n### Nvim-lspconfig version\r\n\r\n_No response_\r\n\r\n### Operating system and version\r\n\r\nArch Linux x86_64\r\n\r\n### Affected language servers\r\n\r\npyright\r\n\r\n### Steps to reproduce\r\n\r\n1. `cd` into your home directory. \r\n2. Creating a test directory `mkdir Dev/testing` \r\n3. Create a root marker in test directory `touch Dev/testing/pyrightconfig.json`\r\n4. Create a test file inside test directory `touch Dev/testing/testfile.py`\r\n5. Launch neovim from your home directory `cd ; nvim`\r\n6. (At this point, your neovim's cwd is your home directory) Open the test file from inside nvim `:e /Dev/testing/testfile.py`\r\n7. Check the root directory with `:LspInfo`\r\n\r\n### Actual behavior\r\n\r\nCase 1: At the end of the steps, you should see that the root directory is set to your home directory, not the directory containing the root marker (`pyrightconfig.json`).\r\n\r\nCase 2: If you delete the root marker `pyrightconfig.json` and open the file again, you will see that the root directory is also set to your home directory.\r\n\r\n### Expected behavior\r\n\r\nFor case 1, the root directory needs to be set to the directory containing the root marker, not neovim's current working directory. \r\n\r\nFor case 2, the lsp needs to be launched in `single-file` mode without the root marker. \r\n\r\n### Minimal config\r\n\r\n```Lua\r\nvim.cmd [[set runtimepath=$VIMRUNTIME]]\r\nvim.cmd [[set packpath=/tmp/nvim/site]]\r\nlocal package_root = '/tmp/nvim/site/pack'\r\nlocal install_path = package_root .. '/packer/start/packer.nvim'\r\nlocal function load_plugins()\r\n    require('packer').startup({\r\n        function(use)\r\n            use 'wbthomason/packer.nvim'\r\n            use\r\n            {\r\n                'neovim/nvim-lspconfig',\r\n                config = function()\r\n                    local lspconfig = require(\"lspconfig\")\r\n                    local opts = { noremap = true, silent = true }\r\n\r\n                    --Keymappings on attach\r\n                    local on_attach = function(client, bufnr)\r\n                        vim.api.nvim_buf_set_option(bufnr, 'omnifunc', 'v:lua.vim.lsp.omnifunc')\r\n                        local bufopts = { noremap = true, silent = true, buffer = bufnr }\r\n                        vim.keymap.set('n', 'gD', vim.lsp.buf.declaration, bufopts)\r\n                        vim.keymap.set('n', 'gd', vim.lsp.buf.definition, bufopts)\r\n                        vim.keymap.set('n', 'K', vim.lsp.buf.hover, bufopts)\r\n                        vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, bufopts)\r\n                        vim.keymap.set('n', '<C-k>', vim.lsp.buf.signature_help, bufopts)\r\n                        vim.keymap.set('n', '<space>wa', vim.lsp.buf.add_workspace_folder, bufopts)\r\n                        vim.keymap.set('n', '<space>wr', vim.lsp.buf.remove_workspace_folder, bufopts)\r\n                        vim.keymap.set('n', '<space>wl', function()\r\n                            print(vim.inspect(vim.lsp.buf.list_workspace_folders()))\r\n                        end, bufopts)\r\n                        vim.keymap.set('n', '<space>D', vim.lsp.buf.type_definition, bufopts)\r\n                        vim.keymap.set('n', '<space>rn', vim.lsp.buf.rename, bufopts)\r\n                        vim.keymap.set('n', '<space>ca', vim.lsp.buf.code_action, bufopts)\r\n                        vim.keymap.set('n', 'gr', vim.lsp.buf.references, bufopts)\r\n                    end\r\n\r\n                    local lsp_flags = {\r\n                        debounce_text_changes = 150,\r\n                    }\r\n\r\n                    --Customize diagnostics Icons\r\n                    local signs = { Error = '󰅙', Warn = '󰀦', Hint = \"󰐗\", Info = \"󰋼\" }\r\n                    for type, icon in pairs(signs) do\r\n                        local hl = \"DiagnosticSign\" .. type\r\n                        vim.fn.sign_define(hl, { text = icon, texthl = hl, numhl = hl })\r\n                    end\r\n                    vim.diagnostic.config({\r\n                        underline = false,\r\n                        virtual_text = false,\r\n                    })\r\n                    \r\n                    --Configuration for each language server\r\n                    lspconfig.pyright.setup({\r\n                        on_attach = on_attach,\r\n                        capabilities = default_capabilities,\r\n                    })\r\n                    --Borders for floating windows\r\n                    local lspconfig_windows = require(\"lspconfig.ui.windows\")\r\n                    lspconfig_windows.default_options = {\r\n                        border = \"rounded\"\r\n                    }\r\n                end\r\n            }\r\n        end,\r\n        config = {\r\n            package_root = package_root,\r\n            compile_path = install_path .. '/plugin/packer_compiled.lua',\r\n            display = { non_interactive = true },\r\n        }\r\n    })\r\nend\r\n\r\nif vim.fn.isdirectory(install_path) == 0 then\r\n    vim.fn.system { 'git', 'clone', '--depth=1', 'https://github.com/wbthomason/packer.nvim', install_path }\r\nend\r\n\r\nload_plugins()\r\nrequire('packer').sync()\r\nvim.cmd [[autocmd User PackerComplete ++once echo \"Ready!\"]]\r\n```\r\n\r\n\r\n### LSP log\r\n\r\nhttps://gist.github.com/anthony-S93/ba22075cd4f7732088fc3b2f7f8255f3",
    "closed_at": "2023-07-21T03:07:50Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "I think you need update your lspconfig first. it has update before you create issue a few minutes.",
            "created_at": "2023-07-20T12:24:57Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2728#issuecomment-1643832070",
            "id": 1643832070,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2728",
            "node_id": "IC_kwDODTQC185h-uMG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1643832070/reactions"
            },
            "updated_at": "2023-07-20T12:25:22Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1643832070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> \r\n\r\nThe first issue is fixed, but the second problem is still there. \r\n![2023-07-20-20-27-16](https://github.com/neovim/nvim-lspconfig/assets/69449791/3404f18b-edf4-4158-bd09-c18bc933ffdd)\r\n\r\nThe directory containing `testfile.py` does not have a root marker (I deleted it). But it still assigns root to my home directory because that's where I launched my neovim from. This is supposed to open in single-file mode, not set the root to my home directory. And because my home directory is large, Pyright is very slow to start up. ",
            "created_at": "2023-07-20T12:28:37Z",
            "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2728#issuecomment-1643837486",
            "id": 1643837486,
            "issue_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2728",
            "node_id": "IC_kwDODTQC185h-vgu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1643837486/reactions"
            },
            "updated_at": "2023-07-20T12:29:42Z",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/comments/1643837486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/69449791?v=4",
                "events_url": "https://api.github.com/users/anthony-S93/events{/privacy}",
                "followers_url": "https://api.github.com/users/anthony-S93/followers",
                "following_url": "https://api.github.com/users/anthony-S93/following{/other_user}",
                "gists_url": "https://api.github.com/users/anthony-S93/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/anthony-S93",
                "id": 69449791,
                "login": "anthony-S93",
                "node_id": "MDQ6VXNlcjY5NDQ5Nzkx",
                "organizations_url": "https://api.github.com/users/anthony-S93/orgs",
                "received_events_url": "https://api.github.com/users/anthony-S93/received_events",
                "repos_url": "https://api.github.com/users/anthony-S93/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/anthony-S93/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/anthony-S93/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/anthony-S93"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2728/comments",
    "created_at": "2023-07-20T12:16:59Z",
    "events_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2728/events",
    "html_url": "https://github.com/neovim/nvim-lspconfig/issues/2728",
    "id": 1813865495,
    "labels": [
        {
            "color": "f9d0c4",
            "default": true,
            "description": "Something isn't working",
            "id": 1674892761,
            "name": "bug",
            "node_id": "MDU6TGFiZWwxNjc0ODkyNzYx",
            "url": "https://api.github.com/repos/neovim/nvim-lspconfig/labels/bug"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2728/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDODTQC185sHWQX",
    "number": 2728,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2728/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/nvim-lspconfig",
    "state": "closed",
    "state_reason": "completed",
    "timeline_url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2728/timeline",
    "title": "Root detection for `pyright` is broken",
    "updated_at": "2023-07-21T03:07:50Z",
    "url": "https://api.github.com/repos/neovim/nvim-lspconfig/issues/2728",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/69449791?v=4",
        "events_url": "https://api.github.com/users/anthony-S93/events{/privacy}",
        "followers_url": "https://api.github.com/users/anthony-S93/followers",
        "following_url": "https://api.github.com/users/anthony-S93/following{/other_user}",
        "gists_url": "https://api.github.com/users/anthony-S93/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/anthony-S93",
        "id": 69449791,
        "login": "anthony-S93",
        "node_id": "MDQ6VXNlcjY5NDQ5Nzkx",
        "organizations_url": "https://api.github.com/users/anthony-S93/orgs",
        "received_events_url": "https://api.github.com/users/anthony-S93/received_events",
        "repos_url": "https://api.github.com/users/anthony-S93/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/anthony-S93/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/anthony-S93/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/anthony-S93"
    }
}